quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Performance,"﻿. CFOUR_DERIV_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. CFOUR_DERIV_LEVEL¶. Specifies whether or not energy derivatives are to be calculated and if so whether first or second derivatives are computed. ZERO (= 0) derivatives are not calculated, FIRST (=1) first derivatives are calculated, SECOND (=2) second derivatives are calculated. Note that this keyword usually needs not be set in any calculation since it is automatically set if the appropriate other options in the CFOUR namelist are turned on. Psi4 Interface: Keyword set from type of computation command: ZERO if energy(), FIRST if gradient() or optimize(), etc. Type: string; Possible Values: ZERO, FIRST, SECOND; Default: ZERO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_deriv_level.html:707,optimiz,optimize,707,psi4manual/master/autodir_options_c/cfour__cfour_deriv_level.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_deriv_level.html,1,['optimiz'],['optimize']
Performance,"﻿. CFOUR_DERIV_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. CFOUR_DERIV_LEVEL¶. Specifies whether or not energy derivatives are to be calculated and if so whether first or second derivatives are computed. ZERO (= 0) derivatives are not calculated, FIRST (=1) first derivatives are calculated, SECOND (=2) second derivatives are calculated. Note that this keyword usually needs not be set in any calculation since it is automatically set if the appropriate other options in the CFOUR namelist are turned on. Psi4 Interface: Keyword set from type of computation command: ZERO if energy(), FIRST if gradient() or optimize(), etc. Type: string; Possible Values: ZERO, FIRST, SECOND; Default: ZERO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_deriv_level-1.html:698,optimiz,optimize,698,psi4manual/1.4.0/autodir_options_c/cfour__cfour_deriv_level-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_deriv_level-1.html,2,['optimiz'],['optimize']
Performance,"﻿. CFOUR_DERIV_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. CFOUR_DERIV_LEVEL¶. Specifies whether or not energy derivatives are to be calculated and if so whether first or second derivatives are computed. ZERO (= 0) derivatives are not calculated, FIRST (=1) first derivatives are calculated, SECOND (=2) second derivatives are calculated. Note that this keyword usually needs not be set in any calculation since it is automatically set if the appropriate other options in the CFOUR namelist are turned on. Psi4 Interface: Keyword set from type of computation command: ZERO if energy(), FIRST if gradient() or optimize(), etc. Type: string; Possible Values: ZERO, FIRST, SECOND; Default: ZERO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_deriv_level-1.html:698,optimiz,optimize,698,psi4manual/1.5.0/autodir_options_c/cfour__cfour_deriv_level-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_deriv_level-1.html,2,['optimiz'],['optimize']
Performance,"﻿. CFOUR_DERIV_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. CFOUR_DERIV_LEVEL¶. Specifies whether or not energy derivatives are to be calculated and if so whether first or second derivatives are computed. ZERO (= 0) derivatives are not calculated, FIRST (=1) first derivatives are calculated, SECOND (=2) second derivatives are calculated. Note that this keyword usually needs not be set in any calculation since it is automatically set if the appropriate other options in the CFOUR namelist are turned on. Psi4 Interface: Keyword set from type of computation command: ZERO if energy(), FIRST if gradient() or optimize(), etc. Type: string; Possible Values: ZERO, FIRST, SECOND; Default: ZERO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_deriv_level.html:698,optimiz,optimize,698,psi4manual/1.6.x/autodir_options_c/cfour__cfour_deriv_level.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_deriv_level.html,1,['optimiz'],['optimize']
Performance,"﻿. CFOUR_DERIV_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. CFOUR_DERIV_LEVEL¶. Specifies whether or not energy derivatives are to be calculated and if so whether first or second derivatives are computed. ZERO (= 0) derivatives are not calculated, FIRST (=1) first derivatives are calculated, SECOND (=2) second derivatives are calculated. Note that this keyword usually needs not be set in any calculation since it is automatically set if the appropriate other options in the CFOUR namelist are turned on. Psi4 Interface: Keyword set from type of computation command: ZERO if energy(), FIRST if gradient() or optimize(), etc. Type: string; Possible Values: ZERO, FIRST, SECOND; Default: ZERO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_deriv_level.html:698,optimiz,optimize,698,psi4manual/1.7.x/autodir_options_c/cfour__cfour_deriv_level.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_deriv_level.html,1,['optimiz'],['optimize']
Performance,"﻿. CFOUR_DERIV_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. CFOUR_DERIV_LEVEL¶. Specifies whether or not energy derivatives are to be calculated and if so whether first or second derivatives are computed. ZERO (= 0) derivatives are not calculated, FIRST (=1) first derivatives are calculated, SECOND (=2) second derivatives are calculated. Note that this keyword usually needs not be set in any calculation since it is automatically set if the appropriate other options in the CFOUR namelist are turned on. Psi4 Interface: Keyword set from type of computation command: ZERO if energy(), FIRST if gradient() or optimize(), etc. Type: string; Possible Values: ZERO, FIRST, SECOND; Default: ZERO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_deriv_level.html:700,optimiz,optimize,700,psi4manual/1.8.x/autodir_options_c/cfour__cfour_deriv_level.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_deriv_level.html,1,['optimiz'],['optimize']
Performance,"﻿. CFOUR_DERIV_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. CFOUR_DERIV_LEVEL¶. Specifies whether or not energy derivatives are to be calculated and if so whether first or second derivatives are computed. ZERO (= 0) derivatives are not calculated, FIRST (=1) first derivatives are calculated, SECOND (=2) second derivatives are calculated. Note that this keyword usually needs not be set in any calculation since it is automatically set if the appropriate other options in the CFOUR namelist are turned on. Psi4 Interface: Keyword set from type of computation command: ZERO if energy(), FIRST if gradient() or optimize(), etc. Type: string; Possible Values: ZERO, FIRST, SECOND; Default: ZERO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_DERIV_LEVEL. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_deriv_level.html:700,optimiz,optimize,700,psi4manual/1.9.x/autodir_options_c/cfour__cfour_deriv_level.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_deriv_level.html,1,['optimiz'],['optimize']
Performance,"﻿. CFOUR_EVAL_HESS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_EVAL_HESS¶. Tells the program, in the course of a geometry optimization, to calculate the Hessian explicitly every N cycles. 0 means never calculated explicitly. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly FULL_HESS_EVERY. Type: integer; Default: 0. Previous topic; CFOUR_ESTATE_TRANS; Next topic; CFOUR_EXCITATION. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_eval_hess-1.html:248,optimiz,optimization,248,psi4manual/1.0.0/autodir_options_c/cfour__cfour_eval_hess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_eval_hess-1.html,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_EVAL_HESS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. CFOUR_EVAL_HESS¶. Tells the program, in the course of a geometry optimization, to calculate the Hessian explicitly every N cycles. 0 means never calculated explicitly. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly FULL_HESS_EVERY. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_eval_hess.html:218,optimiz,optimization,218,psi4manual/master/autodir_options_c/cfour__cfour_eval_hess.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_eval_hess.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_EVAL_HESS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. CFOUR_EVAL_HESS¶. Tells the program, in the course of a geometry optimization, to calculate the Hessian explicitly every N cycles. 0 means never calculated explicitly. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly FULL_HESS_EVERY. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_eval_hess-1.html:209,optimiz,optimization,209,psi4manual/1.4.0/autodir_options_c/cfour__cfour_eval_hess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_eval_hess-1.html,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_EVAL_HESS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. CFOUR_EVAL_HESS¶. Tells the program, in the course of a geometry optimization, to calculate the Hessian explicitly every N cycles. 0 means never calculated explicitly. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly FULL_HESS_EVERY. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_eval_hess-1.html:209,optimiz,optimization,209,psi4manual/1.5.0/autodir_options_c/cfour__cfour_eval_hess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_eval_hess-1.html,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_EVAL_HESS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. CFOUR_EVAL_HESS¶. Tells the program, in the course of a geometry optimization, to calculate the Hessian explicitly every N cycles. 0 means never calculated explicitly. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly FULL_HESS_EVERY. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_eval_hess.html:209,optimiz,optimization,209,psi4manual/1.6.x/autodir_options_c/cfour__cfour_eval_hess.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_eval_hess.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_EVAL_HESS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. CFOUR_EVAL_HESS¶. Tells the program, in the course of a geometry optimization, to calculate the Hessian explicitly every N cycles. 0 means never calculated explicitly. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly FULL_HESS_EVERY. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_eval_hess.html:209,optimiz,optimization,209,psi4manual/1.7.x/autodir_options_c/cfour__cfour_eval_hess.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_eval_hess.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_EVAL_HESS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. CFOUR_EVAL_HESS¶. Tells the program, in the course of a geometry optimization, to calculate the Hessian explicitly every N cycles. 0 means never calculated explicitly. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly FULL_HESS_EVERY. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_eval_hess.html:211,optimiz,optimization,211,psi4manual/1.8.x/autodir_options_c/cfour__cfour_eval_hess.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_eval_hess.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_EVAL_HESS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. CFOUR_EVAL_HESS¶. Tells the program, in the course of a geometry optimization, to calculate the Hessian explicitly every N cycles. 0 means never calculated explicitly. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly FULL_HESS_EVERY. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EVAL_HESS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_eval_hess.html:211,optimiz,optimization,211,psi4manual/1.9.x/autodir_options_c/cfour__cfour_eval_hess.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_eval_hess.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_EXCITE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_EXCITE¶. Specifies the type of EOM-CC/LR-CC treatment to be performed. Available options are NONE (=0), EOMEE (=3, the EOM-CC/CC-LR approach for the treatment of excited states), EOMIP (=4, the EOM-CC/CC-LR approach for the treatment of ionized states), EOMEA (=7, the EOM-CC/CC-LR approach for the treatment of electron-attached states). Type: string; Possible Values: NONE, EOMEE, EOMIP, EOMEA; Default: NONE. Previous topic; CFOUR_EXCITATION; Next topic; CFOUR_FC_FIELD. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_excite-1.html:246,perform,performed,246,psi4manual/1.0.0/autodir_options_c/cfour__cfour_excite-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_excite-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_EXCITE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. CFOUR_EXCITE¶. Specifies the type of EOM-CC/LR-CC treatment to be performed. Available options are NONE (=0), EOMEE (=3, the EOM-CC/CC-LR approach for the treatment of excited states), EOMIP (=4, the EOM-CC/CC-LR approach for the treatment of ionized states), EOMEA (=7, the EOM-CC/CC-LR approach for the treatment of electron-attached states). Type: string; Possible Values: NONE, EOMEE, EOMIP, EOMEA; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_excite.html:213,perform,performed,213,psi4manual/master/autodir_options_c/cfour__cfour_excite.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_excite.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_EXCITE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. CFOUR_EXCITE¶. Specifies the type of EOM-CC/LR-CC treatment to be performed. Available options are NONE (=0), EOMEE (=3, the EOM-CC/CC-LR approach for the treatment of excited states), EOMIP (=4, the EOM-CC/CC-LR approach for the treatment of ionized states), EOMEA (=7, the EOM-CC/CC-LR approach for the treatment of electron-attached states). Type: string; Possible Values: NONE, EOMEE, EOMIP, EOMEA; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_excite-1.html:204,perform,performed,204,psi4manual/1.4.0/autodir_options_c/cfour__cfour_excite-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_excite-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_EXCITE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. CFOUR_EXCITE¶. Specifies the type of EOM-CC/LR-CC treatment to be performed. Available options are NONE (=0), EOMEE (=3, the EOM-CC/CC-LR approach for the treatment of excited states), EOMIP (=4, the EOM-CC/CC-LR approach for the treatment of ionized states), EOMEA (=7, the EOM-CC/CC-LR approach for the treatment of electron-attached states). Type: string; Possible Values: NONE, EOMEE, EOMIP, EOMEA; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_excite-1.html:204,perform,performed,204,psi4manual/1.5.0/autodir_options_c/cfour__cfour_excite-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_excite-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_EXCITE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. CFOUR_EXCITE¶. Specifies the type of EOM-CC/LR-CC treatment to be performed. Available options are NONE (=0), EOMEE (=3, the EOM-CC/CC-LR approach for the treatment of excited states), EOMIP (=4, the EOM-CC/CC-LR approach for the treatment of ionized states), EOMEA (=7, the EOM-CC/CC-LR approach for the treatment of electron-attached states). Type: string; Possible Values: NONE, EOMEE, EOMIP, EOMEA; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_excite.html:204,perform,performed,204,psi4manual/1.6.x/autodir_options_c/cfour__cfour_excite.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_excite.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_EXCITE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. CFOUR_EXCITE¶. Specifies the type of EOM-CC/LR-CC treatment to be performed. Available options are NONE (=0), EOMEE (=3, the EOM-CC/CC-LR approach for the treatment of excited states), EOMIP (=4, the EOM-CC/CC-LR approach for the treatment of ionized states), EOMEA (=7, the EOM-CC/CC-LR approach for the treatment of electron-attached states). Type: string; Possible Values: NONE, EOMEE, EOMIP, EOMEA; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_excite.html:204,perform,performed,204,psi4manual/1.7.x/autodir_options_c/cfour__cfour_excite.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_excite.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_EXCITE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. CFOUR_EXCITE¶. Specifies the type of EOM-CC/LR-CC treatment to be performed. Available options are NONE (=0), EOMEE (=3, the EOM-CC/CC-LR approach for the treatment of excited states), EOMIP (=4, the EOM-CC/CC-LR approach for the treatment of ionized states), EOMEA (=7, the EOM-CC/CC-LR approach for the treatment of electron-attached states). Type: string; Possible Values: NONE, EOMEE, EOMIP, EOMEA; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_excite.html:206,perform,performed,206,psi4manual/1.8.x/autodir_options_c/cfour__cfour_excite.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_excite.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_EXCITE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. CFOUR_EXCITE¶. Specifies the type of EOM-CC/LR-CC treatment to be performed. Available options are NONE (=0), EOMEE (=3, the EOM-CC/CC-LR approach for the treatment of excited states), EOMIP (=4, the EOM-CC/CC-LR approach for the treatment of ionized states), EOMEA (=7, the EOM-CC/CC-LR approach for the treatment of electron-attached states). Type: string; Possible Values: NONE, EOMEE, EOMIP, EOMEA; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_EXCITE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_excite.html:206,perform,performed,206,psi4manual/1.9.x/autodir_options_c/cfour__cfour_excite.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_excite.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_FD_IRREPS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_FD_IRREPS¶. Requests that only vibrational frequencies of certain symmetry types are evaluated in a VIBRATION=FINDIF calculation. The numbers of the irreducible representations for which vibrational analysis is to be performed are separated by slashes. For example, FD_IRREP=1/3/4 means compute the frequencies of modes transforming as the first, third, and fourth irreducible representations. If a symmetry is specified for which there are no vibrational modes, the program will terminate. The labels of the irreducible representations for this keyword are not usually the same as those used in the rest of the calculation. Moreover, for some point groups, for example, those of linear molecules, the two sets of labels refer to different subgroups. There is as yet no straightforward way to determine what they will be without starting a calculation. If one runs the xjoda and then the xsymcor executables, the relevant irreducible representations will be listed. If all vibrational frequencies are desired, this keyword need not be included. Default : compute vibrational frequencies for all irreducible representations. Type: array; Default: No Default. Previous topic; CFOUR_FD_CALCTYPE; Next topic; CFOUR_FD_PROJECT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_fd_irreps-1.html:406,perform,performed,406,psi4manual/1.0.0/autodir_options_c/cfour__cfour_fd_irreps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_fd_irreps-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_FD_IRREPS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. CFOUR_FD_IRREPS¶. Requests that only vibrational frequencies of certain symmetry types are evaluated in a VIBRATION=FINDIF calculation. The numbers of the irreducible representations for which vibrational analysis is to be performed are separated by slashes. For example, FD_IRREP=1/3/4 means compute the frequencies of modes transforming as the first, third, and fourth irreducible representations. If a symmetry is specified for which there are no vibrational modes, the program will terminate. The labels of the irreducible representations for this keyword are not usually the same as those used in the rest of the calculation. Moreover, for some point groups, for example, those of linear molecules, the two sets of labels refer to different subgroups. There is as yet no straightforward way to determine what they will be without starting a calculation. If one runs the xjoda and then the xsymcor executables, the relevant irreducible representations will be listed. If all vibrational frequencies are desired, this keyword need not be included. Default : compute vibrational frequencies for all irreducible representations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_fd_irreps.html:376,perform,performed,376,psi4manual/master/autodir_options_c/cfour__cfour_fd_irreps.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_fd_irreps.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_FD_IRREPS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. CFOUR_FD_IRREPS¶. Requests that only vibrational frequencies of certain symmetry types are evaluated in a VIBRATION=FINDIF calculation. The numbers of the irreducible representations for which vibrational analysis is to be performed are separated by slashes. For example, FD_IRREP=1/3/4 means compute the frequencies of modes transforming as the first, third, and fourth irreducible representations. If a symmetry is specified for which there are no vibrational modes, the program will terminate. The labels of the irreducible representations for this keyword are not usually the same as those used in the rest of the calculation. Moreover, for some point groups, for example, those of linear molecules, the two sets of labels refer to different subgroups. There is as yet no straightforward way to determine what they will be without starting a calculation. If one runs the xjoda and then the xsymcor executables, the relevant irreducible representations will be listed. If all vibrational frequencies are desired, this keyword need not be included. Default : compute vibrational frequencies for all irreducible representations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_fd_irreps-1.html:367,perform,performed,367,psi4manual/1.4.0/autodir_options_c/cfour__cfour_fd_irreps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_fd_irreps-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_FD_IRREPS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. CFOUR_FD_IRREPS¶. Requests that only vibrational frequencies of certain symmetry types are evaluated in a VIBRATION=FINDIF calculation. The numbers of the irreducible representations for which vibrational analysis is to be performed are separated by slashes. For example, FD_IRREP=1/3/4 means compute the frequencies of modes transforming as the first, third, and fourth irreducible representations. If a symmetry is specified for which there are no vibrational modes, the program will terminate. The labels of the irreducible representations for this keyword are not usually the same as those used in the rest of the calculation. Moreover, for some point groups, for example, those of linear molecules, the two sets of labels refer to different subgroups. There is as yet no straightforward way to determine what they will be without starting a calculation. If one runs the xjoda and then the xsymcor executables, the relevant irreducible representations will be listed. If all vibrational frequencies are desired, this keyword need not be included. Default : compute vibrational frequencies for all irreducible representations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_fd_irreps-1.html:367,perform,performed,367,psi4manual/1.5.0/autodir_options_c/cfour__cfour_fd_irreps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_fd_irreps-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_FD_IRREPS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. CFOUR_FD_IRREPS¶. Requests that only vibrational frequencies of certain symmetry types are evaluated in a VIBRATION=FINDIF calculation. The numbers of the irreducible representations for which vibrational analysis is to be performed are separated by slashes. For example, FD_IRREP=1/3/4 means compute the frequencies of modes transforming as the first, third, and fourth irreducible representations. If a symmetry is specified for which there are no vibrational modes, the program will terminate. The labels of the irreducible representations for this keyword are not usually the same as those used in the rest of the calculation. Moreover, for some point groups, for example, those of linear molecules, the two sets of labels refer to different subgroups. There is as yet no straightforward way to determine what they will be without starting a calculation. If one runs the xjoda and then the xsymcor executables, the relevant irreducible representations will be listed. If all vibrational frequencies are desired, this keyword need not be included. Default : compute vibrational frequencies for all irreducible representations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_fd_irreps.html:367,perform,performed,367,psi4manual/1.6.x/autodir_options_c/cfour__cfour_fd_irreps.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_fd_irreps.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_FD_IRREPS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. CFOUR_FD_IRREPS¶. Requests that only vibrational frequencies of certain symmetry types are evaluated in a VIBRATION=FINDIF calculation. The numbers of the irreducible representations for which vibrational analysis is to be performed are separated by slashes. For example, FD_IRREP=1/3/4 means compute the frequencies of modes transforming as the first, third, and fourth irreducible representations. If a symmetry is specified for which there are no vibrational modes, the program will terminate. The labels of the irreducible representations for this keyword are not usually the same as those used in the rest of the calculation. Moreover, for some point groups, for example, those of linear molecules, the two sets of labels refer to different subgroups. There is as yet no straightforward way to determine what they will be without starting a calculation. If one runs the xjoda and then the xsymcor executables, the relevant irreducible representations will be listed. If all vibrational frequencies are desired, this keyword need not be included. Default : compute vibrational frequencies for all irreducible representations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_fd_irreps.html:367,perform,performed,367,psi4manual/1.7.x/autodir_options_c/cfour__cfour_fd_irreps.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_fd_irreps.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_FD_IRREPS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. CFOUR_FD_IRREPS¶. Requests that only vibrational frequencies of certain symmetry types are evaluated in a VIBRATION=FINDIF calculation. The numbers of the irreducible representations for which vibrational analysis is to be performed are separated by slashes. For example, FD_IRREP=1/3/4 means compute the frequencies of modes transforming as the first, third, and fourth irreducible representations. If a symmetry is specified for which there are no vibrational modes, the program will terminate. The labels of the irreducible representations for this keyword are not usually the same as those used in the rest of the calculation. Moreover, for some point groups, for example, those of linear molecules, the two sets of labels refer to different subgroups. There is as yet no straightforward way to determine what they will be without starting a calculation. If one runs the xjoda and then the xsymcor executables, the relevant irreducible representations will be listed. If all vibrational frequencies are desired, this keyword need not be included. Default : compute vibrational frequencies for all irreducible representations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_fd_irreps.html:369,perform,performed,369,psi4manual/1.8.x/autodir_options_c/cfour__cfour_fd_irreps.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_fd_irreps.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_FD_IRREPS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. CFOUR_FD_IRREPS¶. Requests that only vibrational frequencies of certain symmetry types are evaluated in a VIBRATION=FINDIF calculation. The numbers of the irreducible representations for which vibrational analysis is to be performed are separated by slashes. For example, FD_IRREP=1/3/4 means compute the frequencies of modes transforming as the first, third, and fourth irreducible representations. If a symmetry is specified for which there are no vibrational modes, the program will terminate. The labels of the irreducible representations for this keyword are not usually the same as those used in the rest of the calculation. Moreover, for some point groups, for example, those of linear molecules, the two sets of labels refer to different subgroups. There is as yet no straightforward way to determine what they will be without starting a calculation. If one runs the xjoda and then the xsymcor executables, the relevant irreducible representations will be listed. If all vibrational frequencies are desired, this keyword need not be included. Default : compute vibrational frequencies for all irreducible representations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_FD_IRREPS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_fd_irreps.html:369,perform,performed,369,psi4manual/1.9.x/autodir_options_c/cfour__cfour_fd_irreps.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_fd_irreps.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_GENBAS_2 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_GENBAS_2¶. This keyword performs the same function as CFOUR_GENBAS_1 above, but applies to second-row atoms. Type: string; Default: No Default. Previous topic; CFOUR_GENBAS_1; Next topic; CFOUR_GENBAS_3. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_genbas_2-1.html:212,perform,performs,212,psi4manual/1.0.0/autodir_options_c/cfour__cfour_genbas_2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_genbas_2-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_2. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. CFOUR_GENBAS_2¶. This keyword performs the same function as CFOUR_GENBAS_1 above, but applies to second-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_genbas_2.html:181,perform,performs,181,psi4manual/master/autodir_options_c/cfour__cfour_genbas_2.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_genbas_2.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_2. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. CFOUR_GENBAS_2¶. This keyword performs the same function as CFOUR_GENBAS_1 above, but applies to second-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_genbas_2-1.html:172,perform,performs,172,psi4manual/1.4.0/autodir_options_c/cfour__cfour_genbas_2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_genbas_2-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_2. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. CFOUR_GENBAS_2¶. This keyword performs the same function as CFOUR_GENBAS_1 above, but applies to second-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_genbas_2-1.html:172,perform,performs,172,psi4manual/1.5.0/autodir_options_c/cfour__cfour_genbas_2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_genbas_2-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_2. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. CFOUR_GENBAS_2¶. This keyword performs the same function as CFOUR_GENBAS_1 above, but applies to second-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_genbas_2.html:172,perform,performs,172,psi4manual/1.6.x/autodir_options_c/cfour__cfour_genbas_2.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_genbas_2.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_2. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. CFOUR_GENBAS_2¶. This keyword performs the same function as CFOUR_GENBAS_1 above, but applies to second-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_genbas_2.html:172,perform,performs,172,psi4manual/1.7.x/autodir_options_c/cfour__cfour_genbas_2.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_genbas_2.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_2. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. CFOUR_GENBAS_2¶. This keyword performs the same function as CFOUR_GENBAS_1 above, but applies to second-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_genbas_2.html:174,perform,performs,174,psi4manual/1.8.x/autodir_options_c/cfour__cfour_genbas_2.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_genbas_2.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_2. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. CFOUR_GENBAS_2¶. This keyword performs the same function as CFOUR_GENBAS_1 above, but applies to second-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_2. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_genbas_2.html:174,perform,performs,174,psi4manual/1.9.x/autodir_options_c/cfour__cfour_genbas_2.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_genbas_2.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_3 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_GENBAS_3¶. This keyword performs the same function as CFOUR_GENBAS_1 and CFOUR_GENBAS_2 , but applies to third-row atoms. Type: string; Default: No Default. Previous topic; CFOUR_GENBAS_2; Next topic; CFOUR_GENBAS_4. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_genbas_3-1.html:212,perform,performs,212,psi4manual/1.0.0/autodir_options_c/cfour__cfour_genbas_3-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_genbas_3-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_3. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. CFOUR_GENBAS_3¶. This keyword performs the same function as CFOUR_GENBAS_1 and CFOUR_GENBAS_2 , but applies to third-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_genbas_3.html:181,perform,performs,181,psi4manual/master/autodir_options_c/cfour__cfour_genbas_3.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_genbas_3.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_3. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. CFOUR_GENBAS_3¶. This keyword performs the same function as CFOUR_GENBAS_1 and CFOUR_GENBAS_2 , but applies to third-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_genbas_3-1.html:172,perform,performs,172,psi4manual/1.4.0/autodir_options_c/cfour__cfour_genbas_3-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_genbas_3-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_3. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. CFOUR_GENBAS_3¶. This keyword performs the same function as CFOUR_GENBAS_1 and CFOUR_GENBAS_2 , but applies to third-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_genbas_3-1.html:172,perform,performs,172,psi4manual/1.5.0/autodir_options_c/cfour__cfour_genbas_3-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_genbas_3-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_3. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. CFOUR_GENBAS_3¶. This keyword performs the same function as CFOUR_GENBAS_1 and CFOUR_GENBAS_2 , but applies to third-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_genbas_3.html:172,perform,performs,172,psi4manual/1.6.x/autodir_options_c/cfour__cfour_genbas_3.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_genbas_3.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_3. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. CFOUR_GENBAS_3¶. This keyword performs the same function as CFOUR_GENBAS_1 and CFOUR_GENBAS_2 , but applies to third-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_genbas_3.html:172,perform,performs,172,psi4manual/1.7.x/autodir_options_c/cfour__cfour_genbas_3.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_genbas_3.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_3. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. CFOUR_GENBAS_3¶. This keyword performs the same function as CFOUR_GENBAS_1 and CFOUR_GENBAS_2 , but applies to third-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_genbas_3.html:174,perform,performs,174,psi4manual/1.8.x/autodir_options_c/cfour__cfour_genbas_3.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_genbas_3.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_3. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. CFOUR_GENBAS_3¶. This keyword performs the same function as CFOUR_GENBAS_1 and CFOUR_GENBAS_2 , but applies to third-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_3. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_genbas_3.html:174,perform,performs,174,psi4manual/1.9.x/autodir_options_c/cfour__cfour_genbas_3.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_genbas_3.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_4 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_GENBAS_4¶. This keyword performs the same function as CFOUR_GENBAS_1 , CFOUR_GENBAS_2 , and CFOUR_GENBAS_3 , but applies to fourth-row atoms. Type: string; Default: No Default. Previous topic; CFOUR_GENBAS_3; Next topic; CFOUR_GEO_CONV. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_genbas_4-1.html:212,perform,performs,212,psi4manual/1.0.0/autodir_options_c/cfour__cfour_genbas_4-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_genbas_4-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_4. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. CFOUR_GENBAS_4¶. This keyword performs the same function as CFOUR_GENBAS_1 , CFOUR_GENBAS_2 , and CFOUR_GENBAS_3 , but applies to fourth-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_genbas_4.html:181,perform,performs,181,psi4manual/master/autodir_options_c/cfour__cfour_genbas_4.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_genbas_4.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_4. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. CFOUR_GENBAS_4¶. This keyword performs the same function as CFOUR_GENBAS_1 , CFOUR_GENBAS_2 , and CFOUR_GENBAS_3 , but applies to fourth-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_genbas_4-1.html:172,perform,performs,172,psi4manual/1.4.0/autodir_options_c/cfour__cfour_genbas_4-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_genbas_4-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_4. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. CFOUR_GENBAS_4¶. This keyword performs the same function as CFOUR_GENBAS_1 , CFOUR_GENBAS_2 , and CFOUR_GENBAS_3 , but applies to fourth-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_genbas_4-1.html:172,perform,performs,172,psi4manual/1.5.0/autodir_options_c/cfour__cfour_genbas_4-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_genbas_4-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_4. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. CFOUR_GENBAS_4¶. This keyword performs the same function as CFOUR_GENBAS_1 , CFOUR_GENBAS_2 , and CFOUR_GENBAS_3 , but applies to fourth-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_genbas_4.html:172,perform,performs,172,psi4manual/1.6.x/autodir_options_c/cfour__cfour_genbas_4.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_genbas_4.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_4. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. CFOUR_GENBAS_4¶. This keyword performs the same function as CFOUR_GENBAS_1 , CFOUR_GENBAS_2 , and CFOUR_GENBAS_3 , but applies to fourth-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_genbas_4.html:172,perform,performs,172,psi4manual/1.7.x/autodir_options_c/cfour__cfour_genbas_4.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_genbas_4.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_4. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. CFOUR_GENBAS_4¶. This keyword performs the same function as CFOUR_GENBAS_1 , CFOUR_GENBAS_2 , and CFOUR_GENBAS_3 , but applies to fourth-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_genbas_4.html:174,perform,performs,174,psi4manual/1.8.x/autodir_options_c/cfour__cfour_genbas_4.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_genbas_4.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GENBAS_4. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. CFOUR_GENBAS_4¶. This keyword performs the same function as CFOUR_GENBAS_1 , CFOUR_GENBAS_2 , and CFOUR_GENBAS_3 , but applies to fourth-row atoms. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GENBAS_4. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_genbas_4.html:174,perform,performs,174,psi4manual/1.9.x/autodir_options_c/cfour__cfour_genbas_4.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_genbas_4.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_GEO_CONV — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_GEO_CONV¶. Specifies the convergence criterion for geometry optimization. The optimization terminates when the RMS gradient is below Hartree/bohr, where is the specified value. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly G_CONVERGENCE =CFOUR, which should be equivalent except for different internal coordinate definitions. Type: integer; Default: 5. Previous topic; CFOUR_GENBAS_4; Next topic; CFOUR_GEO_MAXCYC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_conv-1.html:248,optimiz,optimization,248,psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_conv-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_conv-1.html,8,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_CONV. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. CFOUR_GEO_CONV¶. Specifies the convergence criterion for geometry optimization. The optimization terminates when the RMS gradient is below \(10^{-N}\) Hartree/bohr, where \(N\) is the specified value. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly G_CONVERGENCE =CFOUR, which should be equivalent except for different internal coordinate definitions. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_geo_conv.html:217,optimiz,optimization,217,psi4manual/master/autodir_options_c/cfour__cfour_geo_conv.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_geo_conv.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_CONV. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. CFOUR_GEO_CONV¶. Specifies the convergence criterion for geometry optimization. The optimization terminates when the RMS gradient is below \(10^{-N}\) Hartree/bohr, where \(N\) is the specified value. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly G_CONVERGENCE =CFOUR, which should be equivalent except for different internal coordinate definitions. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_conv-1.html:208,optimiz,optimization,208,psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_conv-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_conv-1.html,8,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_CONV. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. CFOUR_GEO_CONV¶. Specifies the convergence criterion for geometry optimization. The optimization terminates when the RMS gradient is below \(10^{-N}\) Hartree/bohr, where \(N\) is the specified value. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly G_CONVERGENCE =CFOUR, which should be equivalent except for different internal coordinate definitions. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_conv-1.html:208,optimiz,optimization,208,psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_conv-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_conv-1.html,8,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_CONV. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. CFOUR_GEO_CONV¶. Specifies the convergence criterion for geometry optimization. The optimization terminates when the RMS gradient is below \(10^{-N}\) Hartree/bohr, where \(N\) is the specified value. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly G_CONVERGENCE =CFOUR, which should be equivalent except for different internal coordinate definitions. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_conv.html:208,optimiz,optimization,208,psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_conv.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_conv.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_CONV. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. CFOUR_GEO_CONV¶. Specifies the convergence criterion for geometry optimization. The optimization terminates when the RMS gradient is below \(10^{-N}\) Hartree/bohr, where \(N\) is the specified value. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly G_CONVERGENCE =CFOUR, which should be equivalent except for different internal coordinate definitions. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_conv.html:208,optimiz,optimization,208,psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_conv.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_conv.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_CONV. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. CFOUR_GEO_CONV¶. Specifies the convergence criterion for geometry optimization. The optimization terminates when the RMS gradient is below \(10^{-N}\) Hartree/bohr, where \(N\) is the specified value. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly G_CONVERGENCE =CFOUR, which should be equivalent except for different internal coordinate definitions. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_conv.html:210,optimiz,optimization,210,psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_conv.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_conv.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_CONV. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. CFOUR_GEO_CONV¶. Specifies the convergence criterion for geometry optimization. The optimization terminates when the RMS gradient is below \(10^{-N}\) Hartree/bohr, where \(N\) is the specified value. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly G_CONVERGENCE =CFOUR, which should be equivalent except for different internal coordinate definitions. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_CONV. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_conv.html:210,optimiz,optimization,210,psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_conv.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_conv.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXCYC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_GEO_MAXCYC¶. Specifies the maximum allowed number of geometry optimization cycles. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly GEOM_MAXITER. Type: integer; Default: 50. Previous topic; CFOUR_GEO_CONV; Next topic; CFOUR_GEO_MAXSTEP. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_maxcyc-1.html:252,optimiz,optimization,252,psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_maxcyc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_maxcyc-1.html,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXCYC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. CFOUR_GEO_MAXCYC¶. Specifies the maximum allowed number of geometry optimization cycles. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly GEOM_MAXITER. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_geo_maxcyc.html:223,optimiz,optimization,223,psi4manual/master/autodir_options_c/cfour__cfour_geo_maxcyc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_geo_maxcyc.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXCYC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. CFOUR_GEO_MAXCYC¶. Specifies the maximum allowed number of geometry optimization cycles. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly GEOM_MAXITER. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_maxcyc-1.html:214,optimiz,optimization,214,psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_maxcyc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_maxcyc-1.html,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXCYC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. CFOUR_GEO_MAXCYC¶. Specifies the maximum allowed number of geometry optimization cycles. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly GEOM_MAXITER. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_maxcyc-1.html:214,optimiz,optimization,214,psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_maxcyc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_maxcyc-1.html,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXCYC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. CFOUR_GEO_MAXCYC¶. Specifies the maximum allowed number of geometry optimization cycles. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly GEOM_MAXITER. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_maxcyc.html:214,optimiz,optimization,214,psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_maxcyc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_maxcyc.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXCYC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. CFOUR_GEO_MAXCYC¶. Specifies the maximum allowed number of geometry optimization cycles. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly GEOM_MAXITER. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_maxcyc.html:214,optimiz,optimization,214,psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_maxcyc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_maxcyc.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXCYC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. CFOUR_GEO_MAXCYC¶. Specifies the maximum allowed number of geometry optimization cycles. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly GEOM_MAXITER. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_maxcyc.html:216,optimiz,optimization,216,psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_maxcyc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_maxcyc.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXCYC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. CFOUR_GEO_MAXCYC¶. Specifies the maximum allowed number of geometry optimization cycles. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly GEOM_MAXITER. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXCYC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_maxcyc.html:216,optimiz,optimization,216,psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_maxcyc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_maxcyc.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXSTEP — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_GEO_MAXSTEP¶. Specifies largest step (in millibohr) which is allowed in geometry optimizations. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly INTRAFRAG_STEP_LIMIT. Type: integer; Default: 300. Previous topic; CFOUR_GEO_MAXCYC; Next topic; CFOUR_GEO_METHOD. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_maxstep-1.html:272,optimiz,optimizations,272,psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_maxstep-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_maxstep-1.html,6,['optimiz'],"['optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXSTEP. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. CFOUR_GEO_MAXSTEP¶. Specifies largest step (in millibohr) which is allowed in geometry optimizations. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly INTRAFRAG_STEP_LIMIT. Type: integer; Default: 300. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_geo_maxstep.html:244,optimiz,optimizations,244,psi4manual/master/autodir_options_c/cfour__cfour_geo_maxstep.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_geo_maxstep.html,3,['optimiz'],"['optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXSTEP. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. CFOUR_GEO_MAXSTEP¶. Specifies largest step (in millibohr) which is allowed in geometry optimizations. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly INTRAFRAG_STEP_LIMIT. Type: integer; Default: 300. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_maxstep-1.html:235,optimiz,optimizations,235,psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_maxstep-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_maxstep-1.html,6,['optimiz'],"['optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXSTEP. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. CFOUR_GEO_MAXSTEP¶. Specifies largest step (in millibohr) which is allowed in geometry optimizations. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly INTRAFRAG_STEP_LIMIT. Type: integer; Default: 300. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_maxstep-1.html:235,optimiz,optimizations,235,psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_maxstep-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_maxstep-1.html,6,['optimiz'],"['optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXSTEP. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. CFOUR_GEO_MAXSTEP¶. Specifies largest step (in millibohr) which is allowed in geometry optimizations. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly INTRAFRAG_STEP_LIMIT. Type: integer; Default: 300. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_maxstep.html:235,optimiz,optimizations,235,psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_maxstep.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_maxstep.html,3,['optimiz'],"['optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXSTEP. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. CFOUR_GEO_MAXSTEP¶. Specifies largest step (in millibohr) which is allowed in geometry optimizations. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly INTRAFRAG_STEP_LIMIT. Type: integer; Default: 300. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_maxstep.html:235,optimiz,optimizations,235,psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_maxstep.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_maxstep.html,3,['optimiz'],"['optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXSTEP. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. CFOUR_GEO_MAXSTEP¶. Specifies largest step (in millibohr) which is allowed in geometry optimizations. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly INTRAFRAG_STEP_LIMIT. Type: integer; Default: 300. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_maxstep.html:237,optimiz,optimizations,237,psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_maxstep.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_maxstep.html,3,['optimiz'],"['optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_MAXSTEP. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. CFOUR_GEO_MAXSTEP¶. Specifies largest step (in millibohr) which is allowed in geometry optimizations. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly INTRAFRAG_STEP_LIMIT. Type: integer; Default: 300. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_MAXSTEP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_maxstep.html:237,optimiz,optimizations,237,psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_maxstep.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_maxstep.html,3,['optimiz'],"['optimizations', 'optimizer']"
Performance,"﻿. CFOUR_GEO_METHOD — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_GEO_METHOD¶. Specifies the used geometry optimization methods. The following values are permitted: NR (=0) — straightforward Newton-Raphson search for minimum; RFA (=1) — Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) — Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); SINGLE_POINT (=5) for a single-point energy calculation. ENERONLY (=6) requests a geometry optimization based on single-point energy calculations. Default: SINGLE-POINT (NR as soon as variables are marked to be optimized). Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT, ENERONLY; Default: SINGLE_POINT. Previous topic; CFOUR_GEO_MAXSTEP; Next topic; CFOUR_GIAO. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_method-1.html:231,optimiz,optimization,231,psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_geo_method-1.html,6,['optimiz'],"['optimization', 'optimized']"
Performance,"﻿. CFOUR_GEO_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. CFOUR_GEO_METHOD¶. Specifies the used geometry optimization methods. The following values are permitted: NR (=0) — straightforward Newton-Raphson search for minimum; RFA (=1) — Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) — Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); SINGLE_POINT (=5) for a single-point energy calculation. ENERONLY (=6) requests a geometry optimization based on single-point energy calculations. Default: SINGLE-POINT (NR as soon as variables are marked to be optimized). Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT, ENERONLY; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_geo_method.html:202,optimiz,optimization,202,psi4manual/master/autodir_options_c/cfour__cfour_geo_method.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_geo_method.html,3,['optimiz'],"['optimization', 'optimized']"
Performance,"﻿. CFOUR_GEO_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. CFOUR_GEO_METHOD¶. Specifies the used geometry optimization methods. The following values are permitted: NR (=0) — straightforward Newton-Raphson search for minimum; RFA (=1) — Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) — Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); SINGLE_POINT (=5) for a single-point energy calculation. ENERONLY (=6) requests a geometry optimization based on single-point energy calculations. Default: SINGLE-POINT (NR as soon as variables are marked to be optimized). Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT, ENERONLY; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_method-1.html:193,optimiz,optimization,193,psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_geo_method-1.html,6,['optimiz'],"['optimization', 'optimized']"
Performance,"﻿. CFOUR_GEO_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. CFOUR_GEO_METHOD¶. Specifies the used geometry optimization methods. The following values are permitted: NR (=0) — straightforward Newton-Raphson search for minimum; RFA (=1) — Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) — Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); SINGLE_POINT (=5) for a single-point energy calculation. ENERONLY (=6) requests a geometry optimization based on single-point energy calculations. Default: SINGLE-POINT (NR as soon as variables are marked to be optimized). Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT, ENERONLY; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_method-1.html:193,optimiz,optimization,193,psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_geo_method-1.html,6,['optimiz'],"['optimization', 'optimized']"
Performance,"﻿. CFOUR_GEO_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. CFOUR_GEO_METHOD¶. Specifies the used geometry optimization methods. The following values are permitted: NR (=0) — straightforward Newton-Raphson search for minimum; RFA (=1) — Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) — Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); SINGLE_POINT (=5) for a single-point energy calculation. ENERONLY (=6) requests a geometry optimization based on single-point energy calculations. Default: SINGLE-POINT (NR as soon as variables are marked to be optimized). Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT, ENERONLY; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_method.html:193,optimiz,optimization,193,psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_method.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_geo_method.html,3,['optimiz'],"['optimization', 'optimized']"
Performance,"﻿. CFOUR_GEO_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. CFOUR_GEO_METHOD¶. Specifies the used geometry optimization methods. The following values are permitted: NR (=0) — straightforward Newton-Raphson search for minimum; RFA (=1) — Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) — Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); SINGLE_POINT (=5) for a single-point energy calculation. ENERONLY (=6) requests a geometry optimization based on single-point energy calculations. Default: SINGLE-POINT (NR as soon as variables are marked to be optimized). Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT, ENERONLY; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_method.html:193,optimiz,optimization,193,psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_method.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_geo_method.html,3,['optimiz'],"['optimization', 'optimized']"
Performance,"﻿. CFOUR_GEO_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. CFOUR_GEO_METHOD¶. Specifies the used geometry optimization methods. The following values are permitted: NR (=0) — straightforward Newton-Raphson search for minimum; RFA (=1) — Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) — Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); SINGLE_POINT (=5) for a single-point energy calculation. ENERONLY (=6) requests a geometry optimization based on single-point energy calculations. Default: SINGLE-POINT (NR as soon as variables are marked to be optimized). Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT, ENERONLY; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_method.html:195,optimiz,optimization,195,psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_method.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_geo_method.html,3,['optimiz'],"['optimization', 'optimized']"
Performance,"﻿. CFOUR_GEO_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. CFOUR_GEO_METHOD¶. Specifies the used geometry optimization methods. The following values are permitted: NR (=0) — straightforward Newton-Raphson search for minimum; RFA (=1) — Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) — Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); SINGLE_POINT (=5) for a single-point energy calculation. ENERONLY (=6) requests a geometry optimization based on single-point energy calculations. Default: SINGLE-POINT (NR as soon as variables are marked to be optimized). Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT, ENERONLY; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_GEO_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_method.html:195,optimiz,optimization,195,psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_method.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_geo_method.html,3,['optimiz'],"['optimization', 'optimized']"
Performance,"﻿. CFOUR_HFSTABILITY — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_HFSTABILITY¶. Control analysis of the stability of RHF, ROHF and UHF wavefunctions, as well as a possible search for a lower SCF solution. There are three possible options for this keyword. OFF (=0) does nothing, while ON (=1) performs a stability analysis and returns the number of negative eigenvalues in the orbital rotation Hessian. A third option, FOLLOW (=2) performs the stability analysis and then proceeds to rotate the SCF orbitals in the direction of a particular negative eigenvalue of the orbital rotation Hessian (see the explanation of keyword CFOUR_ROT_EVEC , after which the SCF is rerun. Type: string; Possible Values: OFF, ON, FOLLOW; Default: OFF. Previous topic; CFOUR_HBAR; Next topic; CFOUR_INCORE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_hfstability-1.html:418,perform,performs,418,psi4manual/1.0.0/autodir_options_c/cfour__cfour_hfstability-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_hfstability-1.html,4,['perform'],['performs']
Performance,"﻿. CFOUR_HFSTABILITY. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. CFOUR_HFSTABILITY¶. Control analysis of the stability of RHF, ROHF and UHF wavefunctions, as well as a possible search for a lower SCF solution. There are three possible options for this keyword. OFF (=0) does nothing, while ON (=1) performs a stability analysis and returns the number of negative eigenvalues in the orbital rotation Hessian. A third option, FOLLOW (=2) performs the stability analysis and then proceeds to rotate the SCF orbitals in the direction of a particular negative eigenvalue of the orbital rotation Hessian (see the explanation of keyword CFOUR_ROT_EVEC , after which the SCF is rerun. Type: string; Possible Values: OFF, ON, FOLLOW; Default: OFF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_hfstability.html:390,perform,performs,390,psi4manual/master/autodir_options_c/cfour__cfour_hfstability.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_hfstability.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_HFSTABILITY. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. CFOUR_HFSTABILITY¶. Control analysis of the stability of RHF, ROHF and UHF wavefunctions, as well as a possible search for a lower SCF solution. There are three possible options for this keyword. OFF (=0) does nothing, while ON (=1) performs a stability analysis and returns the number of negative eigenvalues in the orbital rotation Hessian. A third option, FOLLOW (=2) performs the stability analysis and then proceeds to rotate the SCF orbitals in the direction of a particular negative eigenvalue of the orbital rotation Hessian (see the explanation of keyword CFOUR_ROT_EVEC , after which the SCF is rerun. Type: string; Possible Values: OFF, ON, FOLLOW; Default: OFF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_hfstability-1.html:381,perform,performs,381,psi4manual/1.4.0/autodir_options_c/cfour__cfour_hfstability-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_hfstability-1.html,4,['perform'],['performs']
Performance,"﻿. CFOUR_HFSTABILITY. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. CFOUR_HFSTABILITY¶. Control analysis of the stability of RHF, ROHF and UHF wavefunctions, as well as a possible search for a lower SCF solution. There are three possible options for this keyword. OFF (=0) does nothing, while ON (=1) performs a stability analysis and returns the number of negative eigenvalues in the orbital rotation Hessian. A third option, FOLLOW (=2) performs the stability analysis and then proceeds to rotate the SCF orbitals in the direction of a particular negative eigenvalue of the orbital rotation Hessian (see the explanation of keyword CFOUR_ROT_EVEC , after which the SCF is rerun. Type: string; Possible Values: OFF, ON, FOLLOW; Default: OFF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_hfstability-1.html:381,perform,performs,381,psi4manual/1.5.0/autodir_options_c/cfour__cfour_hfstability-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_hfstability-1.html,4,['perform'],['performs']
Performance,"﻿. CFOUR_HFSTABILITY. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. CFOUR_HFSTABILITY¶. Control analysis of the stability of RHF, ROHF and UHF wavefunctions, as well as a possible search for a lower SCF solution. There are three possible options for this keyword. OFF (=0) does nothing, while ON (=1) performs a stability analysis and returns the number of negative eigenvalues in the orbital rotation Hessian. A third option, FOLLOW (=2) performs the stability analysis and then proceeds to rotate the SCF orbitals in the direction of a particular negative eigenvalue of the orbital rotation Hessian (see the explanation of keyword CFOUR_ROT_EVEC , after which the SCF is rerun. Type: string; Possible Values: OFF, ON, FOLLOW; Default: OFF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_hfstability.html:381,perform,performs,381,psi4manual/1.6.x/autodir_options_c/cfour__cfour_hfstability.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_hfstability.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_HFSTABILITY. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. CFOUR_HFSTABILITY¶. Control analysis of the stability of RHF, ROHF and UHF wavefunctions, as well as a possible search for a lower SCF solution. There are three possible options for this keyword. OFF (=0) does nothing, while ON (=1) performs a stability analysis and returns the number of negative eigenvalues in the orbital rotation Hessian. A third option, FOLLOW (=2) performs the stability analysis and then proceeds to rotate the SCF orbitals in the direction of a particular negative eigenvalue of the orbital rotation Hessian (see the explanation of keyword CFOUR_ROT_EVEC , after which the SCF is rerun. Type: string; Possible Values: OFF, ON, FOLLOW; Default: OFF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_hfstability.html:381,perform,performs,381,psi4manual/1.7.x/autodir_options_c/cfour__cfour_hfstability.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_hfstability.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_HFSTABILITY. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. CFOUR_HFSTABILITY¶. Control analysis of the stability of RHF, ROHF and UHF wavefunctions, as well as a possible search for a lower SCF solution. There are three possible options for this keyword. OFF (=0) does nothing, while ON (=1) performs a stability analysis and returns the number of negative eigenvalues in the orbital rotation Hessian. A third option, FOLLOW (=2) performs the stability analysis and then proceeds to rotate the SCF orbitals in the direction of a particular negative eigenvalue of the orbital rotation Hessian (see the explanation of keyword CFOUR_ROT_EVEC , after which the SCF is rerun. Type: string; Possible Values: OFF, ON, FOLLOW; Default: OFF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_hfstability.html:383,perform,performs,383,psi4manual/1.8.x/autodir_options_c/cfour__cfour_hfstability.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_hfstability.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_HFSTABILITY. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. CFOUR_HFSTABILITY¶. Control analysis of the stability of RHF, ROHF and UHF wavefunctions, as well as a possible search for a lower SCF solution. There are three possible options for this keyword. OFF (=0) does nothing, while ON (=1) performs a stability analysis and returns the number of negative eigenvalues in the orbital rotation Hessian. A third option, FOLLOW (=2) performs the stability analysis and then proceeds to rotate the SCF orbitals in the direction of a particular negative eigenvalue of the orbital rotation Hessian (see the explanation of keyword CFOUR_ROT_EVEC , after which the SCF is rerun. Type: string; Possible Values: OFF, ON, FOLLOW; Default: OFF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_HFSTABILITY. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_hfstability.html:383,perform,performs,383,psi4manual/1.9.x/autodir_options_c/cfour__cfour_hfstability.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_hfstability.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_JODA_PRINT — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_JODA_PRINT¶. Controls amount of debug printing performed by xjoda. The higher the number, the more information is printed. Values of 25 or higher generally do not produce anything of interest to the general user. Do not set JODA_PRINT to 999 as this will cause the core vector to be dumped to disk. Type: integer; Default: 0. Previous topic; CFOUR_INTEGRALS; Next topic; CFOUR_LINEQ_CONV. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_joda_print-1.html:237,perform,performed,237,psi4manual/1.0.0/autodir_options_c/cfour__cfour_joda_print-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_joda_print-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_JODA_PRINT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. CFOUR_JODA_PRINT¶. Controls amount of debug printing performed by xjoda. The higher the number, the more information is printed. Values of 25 or higher generally do not produce anything of interest to the general user. Do not set JODA_PRINT to 999 as this will cause the core vector to be dumped to disk. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_joda_print.html:208,perform,performed,208,psi4manual/master/autodir_options_c/cfour__cfour_joda_print.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_joda_print.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_JODA_PRINT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. CFOUR_JODA_PRINT¶. Controls amount of debug printing performed by xjoda. The higher the number, the more information is printed. Values of 25 or higher generally do not produce anything of interest to the general user. Do not set JODA_PRINT to 999 as this will cause the core vector to be dumped to disk. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_joda_print-1.html:199,perform,performed,199,psi4manual/1.4.0/autodir_options_c/cfour__cfour_joda_print-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_joda_print-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_JODA_PRINT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. CFOUR_JODA_PRINT¶. Controls amount of debug printing performed by xjoda. The higher the number, the more information is printed. Values of 25 or higher generally do not produce anything of interest to the general user. Do not set JODA_PRINT to 999 as this will cause the core vector to be dumped to disk. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_joda_print-1.html:199,perform,performed,199,psi4manual/1.5.0/autodir_options_c/cfour__cfour_joda_print-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_joda_print-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_JODA_PRINT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. CFOUR_JODA_PRINT¶. Controls amount of debug printing performed by xjoda. The higher the number, the more information is printed. Values of 25 or higher generally do not produce anything of interest to the general user. Do not set JODA_PRINT to 999 as this will cause the core vector to be dumped to disk. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_joda_print.html:199,perform,performed,199,psi4manual/1.6.x/autodir_options_c/cfour__cfour_joda_print.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_joda_print.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_JODA_PRINT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. CFOUR_JODA_PRINT¶. Controls amount of debug printing performed by xjoda. The higher the number, the more information is printed. Values of 25 or higher generally do not produce anything of interest to the general user. Do not set JODA_PRINT to 999 as this will cause the core vector to be dumped to disk. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_joda_print.html:199,perform,performed,199,psi4manual/1.7.x/autodir_options_c/cfour__cfour_joda_print.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_joda_print.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_JODA_PRINT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. CFOUR_JODA_PRINT¶. Controls amount of debug printing performed by xjoda. The higher the number, the more information is printed. Values of 25 or higher generally do not produce anything of interest to the general user. Do not set JODA_PRINT to 999 as this will cause the core vector to be dumped to disk. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_joda_print.html:201,perform,performed,201,psi4manual/1.8.x/autodir_options_c/cfour__cfour_joda_print.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_joda_print.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_JODA_PRINT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. CFOUR_JODA_PRINT¶. Controls amount of debug printing performed by xjoda. The higher the number, the more information is printed. Values of 25 or higher generally do not produce anything of interest to the general user. Do not set JODA_PRINT to 999 as this will cause the core vector to be dumped to disk. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_JODA_PRINT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_joda_print.html:201,perform,performed,201,psi4manual/1.9.x/autodir_options_c/cfour__cfour_joda_print.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_joda_print.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_LOCK_ORBOCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_LOCK_ORBOCC¶. This keyword is used by the SCF program to determine if the orbital occupancy (by symmetry block) is allowed to change in the course of the calculation. ON (=1) locks the occupation to that set by the keyword CFOUR_OCCUPATION (or the initial guess if omitted); OFF (= 0) permits the occupation to change. (Default : 1 if the occupation is specified with CFOUR_OCCUPATION and for second and later steps of optimizations; 0 if CFOUR_OCCUPATION omitted.). Type: boolean; Default: false. Previous topic; CFOUR_LINEQ_TYPE; Next topic; CFOUR_MAXSTEP. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_lock_orbocc-1.html:610,optimiz,optimizations,610,psi4manual/1.0.0/autodir_options_c/cfour__cfour_lock_orbocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_lock_orbocc-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. CFOUR_LOCK_ORBOCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. CFOUR_LOCK_ORBOCC¶. This keyword is used by the SCF program to determine if the orbital occupancy (by symmetry block) is allowed to change in the course of the calculation. ON (=1) locks the occupation to that set by the keyword CFOUR_OCCUPATION (or the initial guess if omitted); OFF (= 0) permits the occupation to change. (Default : 1 if the occupation is specified with CFOUR_OCCUPATION and for second and later steps of optimizations; 0 if CFOUR_OCCUPATION omitted.). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_lock_orbocc.html:582,optimiz,optimizations,582,psi4manual/master/autodir_options_c/cfour__cfour_lock_orbocc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_lock_orbocc.html,1,['optimiz'],['optimizations']
Performance,"﻿. CFOUR_LOCK_ORBOCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. CFOUR_LOCK_ORBOCC¶. This keyword is used by the SCF program to determine if the orbital occupancy (by symmetry block) is allowed to change in the course of the calculation. ON (=1) locks the occupation to that set by the keyword CFOUR_OCCUPATION (or the initial guess if omitted); OFF (= 0) permits the occupation to change. (Default : 1 if the occupation is specified with CFOUR_OCCUPATION and for second and later steps of optimizations; 0 if CFOUR_OCCUPATION omitted.). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_lock_orbocc-1.html:573,optimiz,optimizations,573,psi4manual/1.4.0/autodir_options_c/cfour__cfour_lock_orbocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_lock_orbocc-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. CFOUR_LOCK_ORBOCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. CFOUR_LOCK_ORBOCC¶. This keyword is used by the SCF program to determine if the orbital occupancy (by symmetry block) is allowed to change in the course of the calculation. ON (=1) locks the occupation to that set by the keyword CFOUR_OCCUPATION (or the initial guess if omitted); OFF (= 0) permits the occupation to change. (Default : 1 if the occupation is specified with CFOUR_OCCUPATION and for second and later steps of optimizations; 0 if CFOUR_OCCUPATION omitted.). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_lock_orbocc-1.html:573,optimiz,optimizations,573,psi4manual/1.5.0/autodir_options_c/cfour__cfour_lock_orbocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_lock_orbocc-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. CFOUR_LOCK_ORBOCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. CFOUR_LOCK_ORBOCC¶. This keyword is used by the SCF program to determine if the orbital occupancy (by symmetry block) is allowed to change in the course of the calculation. ON (=1) locks the occupation to that set by the keyword CFOUR_OCCUPATION (or the initial guess if omitted); OFF (= 0) permits the occupation to change. (Default : 1 if the occupation is specified with CFOUR_OCCUPATION and for second and later steps of optimizations; 0 if CFOUR_OCCUPATION omitted.). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_lock_orbocc.html:573,optimiz,optimizations,573,psi4manual/1.6.x/autodir_options_c/cfour__cfour_lock_orbocc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_lock_orbocc.html,1,['optimiz'],['optimizations']
Performance,"﻿. CFOUR_LOCK_ORBOCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. CFOUR_LOCK_ORBOCC¶. This keyword is used by the SCF program to determine if the orbital occupancy (by symmetry block) is allowed to change in the course of the calculation. ON (=1) locks the occupation to that set by the keyword CFOUR_OCCUPATION (or the initial guess if omitted); OFF (= 0) permits the occupation to change. (Default : 1 if the occupation is specified with CFOUR_OCCUPATION and for second and later steps of optimizations; 0 if CFOUR_OCCUPATION omitted.). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_lock_orbocc.html:573,optimiz,optimizations,573,psi4manual/1.7.x/autodir_options_c/cfour__cfour_lock_orbocc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_lock_orbocc.html,1,['optimiz'],['optimizations']
Performance,"﻿. CFOUR_LOCK_ORBOCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. CFOUR_LOCK_ORBOCC¶. This keyword is used by the SCF program to determine if the orbital occupancy (by symmetry block) is allowed to change in the course of the calculation. ON (=1) locks the occupation to that set by the keyword CFOUR_OCCUPATION (or the initial guess if omitted); OFF (= 0) permits the occupation to change. (Default : 1 if the occupation is specified with CFOUR_OCCUPATION and for second and later steps of optimizations; 0 if CFOUR_OCCUPATION omitted.). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_lock_orbocc.html:575,optimiz,optimizations,575,psi4manual/1.8.x/autodir_options_c/cfour__cfour_lock_orbocc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_lock_orbocc.html,1,['optimiz'],['optimizations']
Performance,"﻿. CFOUR_LOCK_ORBOCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. CFOUR_LOCK_ORBOCC¶. This keyword is used by the SCF program to determine if the orbital occupancy (by symmetry block) is allowed to change in the course of the calculation. ON (=1) locks the occupation to that set by the keyword CFOUR_OCCUPATION (or the initial guess if omitted); OFF (= 0) permits the occupation to change. (Default : 1 if the occupation is specified with CFOUR_OCCUPATION and for second and later steps of optimizations; 0 if CFOUR_OCCUPATION omitted.). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_LOCK_ORBOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_lock_orbocc.html:575,optimiz,optimizations,575,psi4manual/1.9.x/autodir_options_c/cfour__cfour_lock_orbocc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_lock_orbocc.html,1,['optimiz'],['optimizations']
Performance,"﻿. CFOUR_METHOD — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_METHOD¶. Specifies the geometry optimization strategy. Four values are permitted: NR (=0) – Straightforward Newton-Raphson search for minimum; RFA (=1) – Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) – Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); 4 is currently unavailable; SINGLE_POINT (=5) is a single point calculation. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly OPT_TYPE and STEP_TYPE. Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT; Default: SINGLE_POINT. Previous topic; CFOUR_MEMORY_SIZE; Next topic; CFOUR_MRCC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_method-1.html:218,optimiz,optimization,218,psi4manual/1.0.0/autodir_options_c/cfour__cfour_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_method-1.html,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. CFOUR_METHOD¶. Specifies the geometry optimization strategy. Four values are permitted: NR (=0) – Straightforward Newton-Raphson search for minimum; RFA (=1) – Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) – Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); 4 is currently unavailable; SINGLE_POINT (=5) is a single point calculation. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly OPT_TYPE and STEP_TYPE. Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_method.html:185,optimiz,optimization,185,psi4manual/master/autodir_options_c/cfour__cfour_method.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_method.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. CFOUR_METHOD¶. Specifies the geometry optimization strategy. Four values are permitted: NR (=0) – Straightforward Newton-Raphson search for minimum; RFA (=1) – Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) – Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); 4 is currently unavailable; SINGLE_POINT (=5) is a single point calculation. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly OPT_TYPE and STEP_TYPE. Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_method-1.html:176,optimiz,optimization,176,psi4manual/1.4.0/autodir_options_c/cfour__cfour_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_method-1.html,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. CFOUR_METHOD¶. Specifies the geometry optimization strategy. Four values are permitted: NR (=0) – Straightforward Newton-Raphson search for minimum; RFA (=1) – Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) – Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); 4 is currently unavailable; SINGLE_POINT (=5) is a single point calculation. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly OPT_TYPE and STEP_TYPE. Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_method-1.html:176,optimiz,optimization,176,psi4manual/1.5.0/autodir_options_c/cfour__cfour_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_method-1.html,6,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. CFOUR_METHOD¶. Specifies the geometry optimization strategy. Four values are permitted: NR (=0) – Straightforward Newton-Raphson search for minimum; RFA (=1) – Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) – Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); 4 is currently unavailable; SINGLE_POINT (=5) is a single point calculation. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly OPT_TYPE and STEP_TYPE. Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_method.html:176,optimiz,optimization,176,psi4manual/1.6.x/autodir_options_c/cfour__cfour_method.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_method.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. CFOUR_METHOD¶. Specifies the geometry optimization strategy. Four values are permitted: NR (=0) – Straightforward Newton-Raphson search for minimum; RFA (=1) – Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) – Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); 4 is currently unavailable; SINGLE_POINT (=5) is a single point calculation. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly OPT_TYPE and STEP_TYPE. Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_method.html:176,optimiz,optimization,176,psi4manual/1.7.x/autodir_options_c/cfour__cfour_method.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_method.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. CFOUR_METHOD¶. Specifies the geometry optimization strategy. Four values are permitted: NR (=0) – Straightforward Newton-Raphson search for minimum; RFA (=1) – Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) – Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); 4 is currently unavailable; SINGLE_POINT (=5) is a single point calculation. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly OPT_TYPE and STEP_TYPE. Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_method.html:178,optimiz,optimization,178,psi4manual/1.8.x/autodir_options_c/cfour__cfour_method.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_method.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. CFOUR_METHOD¶. Specifies the geometry optimization strategy. Four values are permitted: NR (=0) – Straightforward Newton-Raphson search for minimum; RFA (=1) – Rational Function Approximation search for minimum (this method can be used to find minima when the initial structure is in a region where the Hessian index is nonzero); TS (=2) Cerjan-Miller eigenvector following search for a transition state (can be started in a region where the Hessian index is not equal to unity); MANR (=3) – Morse-adjusted Newton-Raphson search for minimum (very efficient minimization scheme, particularly if the Hessian is available); 4 is currently unavailable; SINGLE_POINT (=5) is a single point calculation. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead, particularly OPT_TYPE and STEP_TYPE. Type: string; Possible Values: NR, RFA, TS, MANR, SINGLE_POINT; Default: SINGLE_POINT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_method.html:178,optimiz,optimization,178,psi4manual/1.9.x/autodir_options_c/cfour__cfour_method.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_method.html,3,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_MRCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_MRCC¶. Specifies the type of MRCC calculation. MK performs a MR-CC calculation based on Mukherjee’s ansatz. Type: boolean; Default: false. Previous topic; CFOUR_METHOD; Next topic; CFOUR_MULTIPLICITY. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_mrcc-1.html:234,perform,performs,234,psi4manual/1.0.0/autodir_options_c/cfour__cfour_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_mrcc-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. CFOUR_MRCC¶. Specifies the type of MRCC calculation. MK performs a MR-CC calculation based on Mukherjee’s ansatz. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_mrcc.html:199,perform,performs,199,psi4manual/master/autodir_options_c/cfour__cfour_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_mrcc.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. CFOUR_MRCC¶. Specifies the type of MRCC calculation. MK performs a MR-CC calculation based on Mukherjee’s ansatz. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_mrcc-1.html:190,perform,performs,190,psi4manual/1.4.0/autodir_options_c/cfour__cfour_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_mrcc-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. CFOUR_MRCC¶. Specifies the type of MRCC calculation. MK performs a MR-CC calculation based on Mukherjee’s ansatz. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_mrcc-1.html:190,perform,performs,190,psi4manual/1.5.0/autodir_options_c/cfour__cfour_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_mrcc-1.html,2,['perform'],['performs']
Performance,"﻿. CFOUR_MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. CFOUR_MRCC¶. Specifies the type of MRCC calculation. MK performs a MR-CC calculation based on Mukherjee’s ansatz. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_mrcc.html:190,perform,performs,190,psi4manual/1.6.x/autodir_options_c/cfour__cfour_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_mrcc.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. CFOUR_MRCC¶. Specifies the type of MRCC calculation. MK performs a MR-CC calculation based on Mukherjee’s ansatz. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_mrcc.html:190,perform,performs,190,psi4manual/1.7.x/autodir_options_c/cfour__cfour_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_mrcc.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. CFOUR_MRCC¶. Specifies the type of MRCC calculation. MK performs a MR-CC calculation based on Mukherjee’s ansatz. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_mrcc.html:192,perform,performs,192,psi4manual/1.8.x/autodir_options_c/cfour__cfour_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_mrcc.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. CFOUR_MRCC¶. Specifies the type of MRCC calculation. MK performs a MR-CC calculation based on Mukherjee’s ansatz. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_MRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_mrcc.html:192,perform,performs,192,psi4manual/1.9.x/autodir_options_c/cfour__cfour_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_mrcc.html,1,['perform'],['performs']
Performance,"﻿. CFOUR_NEGEVAL — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_NEGEVAL¶. Specifies what to do if negative eigenvalues are encountered in the totally symmetric Hessian during an NR or MANR geometry-optimization search. If ABORT (=0), the job will terminate with an error message; if SWITCH (=1) the program will just switch the eigenvalue to its absolute value and keep plugging away (this is strongly discouraged!); and if RFA (=2), the keyword CFOUR_GEO_METHOD is switched to RFA internally and the optimization is continued. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead. Type: string; Possible Values: ABORT, SWITCH, RFA; Default: ABORT. Previous topic; CFOUR_NACOUPLING; Next topic; CFOUR_NEWNORM. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_negeval-1.html:321,optimiz,optimization,321,psi4manual/1.0.0/autodir_options_c/cfour__cfour_negeval-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_negeval-1.html,8,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_NEGEVAL. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. CFOUR_NEGEVAL¶. Specifies what to do if negative eigenvalues are encountered in the totally symmetric Hessian during an NR or MANR geometry-optimization search. If ABORT (=0), the job will terminate with an error message; if SWITCH (=1) the program will just switch the eigenvalue to its absolute value and keep plugging away (this is strongly discouraged!); and if RFA (=2), the keyword CFOUR_GEO_METHOD is switched to RFA internally and the optimization is continued. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead. Type: string; Possible Values: ABORT, SWITCH, RFA; Default: ABORT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_negeval.html:289,optimiz,optimization,289,psi4manual/master/autodir_options_c/cfour__cfour_negeval.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_negeval.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_NEGEVAL. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. CFOUR_NEGEVAL¶. Specifies what to do if negative eigenvalues are encountered in the totally symmetric Hessian during an NR or MANR geometry-optimization search. If ABORT (=0), the job will terminate with an error message; if SWITCH (=1) the program will just switch the eigenvalue to its absolute value and keep plugging away (this is strongly discouraged!); and if RFA (=2), the keyword CFOUR_GEO_METHOD is switched to RFA internally and the optimization is continued. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead. Type: string; Possible Values: ABORT, SWITCH, RFA; Default: ABORT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_negeval-1.html:280,optimiz,optimization,280,psi4manual/1.4.0/autodir_options_c/cfour__cfour_negeval-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_negeval-1.html,8,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_NEGEVAL. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. CFOUR_NEGEVAL¶. Specifies what to do if negative eigenvalues are encountered in the totally symmetric Hessian during an NR or MANR geometry-optimization search. If ABORT (=0), the job will terminate with an error message; if SWITCH (=1) the program will just switch the eigenvalue to its absolute value and keep plugging away (this is strongly discouraged!); and if RFA (=2), the keyword CFOUR_GEO_METHOD is switched to RFA internally and the optimization is continued. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead. Type: string; Possible Values: ABORT, SWITCH, RFA; Default: ABORT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_negeval-1.html:280,optimiz,optimization,280,psi4manual/1.5.0/autodir_options_c/cfour__cfour_negeval-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_negeval-1.html,8,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_NEGEVAL. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. CFOUR_NEGEVAL¶. Specifies what to do if negative eigenvalues are encountered in the totally symmetric Hessian during an NR or MANR geometry-optimization search. If ABORT (=0), the job will terminate with an error message; if SWITCH (=1) the program will just switch the eigenvalue to its absolute value and keep plugging away (this is strongly discouraged!); and if RFA (=2), the keyword CFOUR_GEO_METHOD is switched to RFA internally and the optimization is continued. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead. Type: string; Possible Values: ABORT, SWITCH, RFA; Default: ABORT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_negeval.html:280,optimiz,optimization,280,psi4manual/1.6.x/autodir_options_c/cfour__cfour_negeval.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_negeval.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_NEGEVAL. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. CFOUR_NEGEVAL¶. Specifies what to do if negative eigenvalues are encountered in the totally symmetric Hessian during an NR or MANR geometry-optimization search. If ABORT (=0), the job will terminate with an error message; if SWITCH (=1) the program will just switch the eigenvalue to its absolute value and keep plugging away (this is strongly discouraged!); and if RFA (=2), the keyword CFOUR_GEO_METHOD is switched to RFA internally and the optimization is continued. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead. Type: string; Possible Values: ABORT, SWITCH, RFA; Default: ABORT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_negeval.html:280,optimiz,optimization,280,psi4manual/1.7.x/autodir_options_c/cfour__cfour_negeval.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_negeval.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_NEGEVAL. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. CFOUR_NEGEVAL¶. Specifies what to do if negative eigenvalues are encountered in the totally symmetric Hessian during an NR or MANR geometry-optimization search. If ABORT (=0), the job will terminate with an error message; if SWITCH (=1) the program will just switch the eigenvalue to its absolute value and keep plugging away (this is strongly discouraged!); and if RFA (=2), the keyword CFOUR_GEO_METHOD is switched to RFA internally and the optimization is continued. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead. Type: string; Possible Values: ABORT, SWITCH, RFA; Default: ABORT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_negeval.html:282,optimiz,optimization,282,psi4manual/1.8.x/autodir_options_c/cfour__cfour_negeval.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_negeval.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_NEGEVAL. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. CFOUR_NEGEVAL¶. Specifies what to do if negative eigenvalues are encountered in the totally symmetric Hessian during an NR or MANR geometry-optimization search. If ABORT (=0), the job will terminate with an error message; if SWITCH (=1) the program will just switch the eigenvalue to its absolute value and keep plugging away (this is strongly discouraged!); and if RFA (=2), the keyword CFOUR_GEO_METHOD is switched to RFA internally and the optimization is continued. Psi4 Interface: Geometry optimizations run through PSI (except in sandwich mode) use PSI’s optimizer and so this keyword has no effect. Use optking keywords instead. Type: string; Possible Values: ABORT, SWITCH, RFA; Default: ABORT. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_NEGEVAL. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_negeval.html:282,optimiz,optimization,282,psi4manual/1.9.x/autodir_options_c/cfour__cfour_negeval.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_negeval.html,4,['optimiz'],"['optimization', 'optimizations', 'optimizer']"
Performance,"﻿. CFOUR_QRHFGUES — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_QRHFGUES¶. If this keyword is set to ON (=1), then the QRHF orbitals specified by the CFOUR_QRHF_GENERAL CFOUR_QRHF_ORBITAL and CFOUR_QRHF_SPIN (nyi?) keywords are used as a starting guess for a restarted SCF procedure. This can be an extremely useful way to converge “difficult” SCF solutions, such as those that correspond to states that are not the lowest states of a given symmetry. Note that when this option is used, the calculation that is performed is not a QRHF-CC calcualtion; it is instead a UHF-based or ROHF-based calculation, depending on what type of reference is specified by the CFOUR_REFERENCE keyword. The QRHF aspect of the calculation is used simply as a device to converge the orbitals. Type: boolean; Default: false. Previous topic; CFOUR_QRHF_ORBITAL; Next topic; CFOUR_RAMAN_INT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_qrhfgues-1.html:635,perform,performed,635,psi4manual/1.0.0/autodir_options_c/cfour__cfour_qrhfgues-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_qrhfgues-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_QRHFGUES. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. CFOUR_QRHFGUES¶. If this keyword is set to ON (=1), then the QRHF orbitals specified by the CFOUR_QRHF_GENERAL CFOUR_QRHF_ORBITAL and CFOUR_QRHF_SPIN (nyi?) keywords are used as a starting guess for a restarted SCF procedure. This can be an extremely useful way to converge “difficult” SCF solutions, such as those that correspond to states that are not the lowest states of a given symmetry. Note that when this option is used, the calculation that is performed is not a QRHF-CC calculation; it is instead a UHF-based or ROHF-based calculation, depending on what type of reference is specified by the CFOUR_REFERENCE keyword. The QRHF aspect of the calculation is used simply as a device to converge the orbitals. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_qrhfgues.html:604,perform,performed,604,psi4manual/master/autodir_options_c/cfour__cfour_qrhfgues.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_qrhfgues.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_QRHFGUES. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. CFOUR_QRHFGUES¶. If this keyword is set to ON (=1), then the QRHF orbitals specified by the CFOUR_QRHF_GENERAL CFOUR_QRHF_ORBITAL and CFOUR_QRHF_SPIN (nyi?) keywords are used as a starting guess for a restarted SCF procedure. This can be an extremely useful way to converge “difficult” SCF solutions, such as those that correspond to states that are not the lowest states of a given symmetry. Note that when this option is used, the calculation that is performed is not a QRHF-CC calculation; it is instead a UHF-based or ROHF-based calculation, depending on what type of reference is specified by the CFOUR_REFERENCE keyword. The QRHF aspect of the calculation is used simply as a device to converge the orbitals. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_qrhfgues-1.html:595,perform,performed,595,psi4manual/1.4.0/autodir_options_c/cfour__cfour_qrhfgues-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_qrhfgues-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_QRHFGUES. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. CFOUR_QRHFGUES¶. If this keyword is set to ON (=1), then the QRHF orbitals specified by the CFOUR_QRHF_GENERAL CFOUR_QRHF_ORBITAL and CFOUR_QRHF_SPIN (nyi?) keywords are used as a starting guess for a restarted SCF procedure. This can be an extremely useful way to converge “difficult” SCF solutions, such as those that correspond to states that are not the lowest states of a given symmetry. Note that when this option is used, the calculation that is performed is not a QRHF-CC calculation; it is instead a UHF-based or ROHF-based calculation, depending on what type of reference is specified by the CFOUR_REFERENCE keyword. The QRHF aspect of the calculation is used simply as a device to converge the orbitals. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_qrhfgues-1.html:595,perform,performed,595,psi4manual/1.5.0/autodir_options_c/cfour__cfour_qrhfgues-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_qrhfgues-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_QRHFGUES. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. CFOUR_QRHFGUES¶. If this keyword is set to ON (=1), then the QRHF orbitals specified by the CFOUR_QRHF_GENERAL CFOUR_QRHF_ORBITAL and CFOUR_QRHF_SPIN (nyi?) keywords are used as a starting guess for a restarted SCF procedure. This can be an extremely useful way to converge “difficult” SCF solutions, such as those that correspond to states that are not the lowest states of a given symmetry. Note that when this option is used, the calculation that is performed is not a QRHF-CC calculation; it is instead a UHF-based or ROHF-based calculation, depending on what type of reference is specified by the CFOUR_REFERENCE keyword. The QRHF aspect of the calculation is used simply as a device to converge the orbitals. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_qrhfgues.html:595,perform,performed,595,psi4manual/1.6.x/autodir_options_c/cfour__cfour_qrhfgues.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_qrhfgues.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_QRHFGUES. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. CFOUR_QRHFGUES¶. If this keyword is set to ON (=1), then the QRHF orbitals specified by the CFOUR_QRHF_GENERAL CFOUR_QRHF_ORBITAL and CFOUR_QRHF_SPIN (nyi?) keywords are used as a starting guess for a restarted SCF procedure. This can be an extremely useful way to converge “difficult” SCF solutions, such as those that correspond to states that are not the lowest states of a given symmetry. Note that when this option is used, the calculation that is performed is not a QRHF-CC calculation; it is instead a UHF-based or ROHF-based calculation, depending on what type of reference is specified by the CFOUR_REFERENCE keyword. The QRHF aspect of the calculation is used simply as a device to converge the orbitals. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_qrhfgues.html:595,perform,performed,595,psi4manual/1.7.x/autodir_options_c/cfour__cfour_qrhfgues.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_qrhfgues.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_QRHFGUES. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. CFOUR_QRHFGUES¶. If this keyword is set to ON (=1), then the QRHF orbitals specified by the CFOUR_QRHF_GENERAL CFOUR_QRHF_ORBITAL and CFOUR_QRHF_SPIN (nyi?) keywords are used as a starting guess for a restarted SCF procedure. This can be an extremely useful way to converge “difficult” SCF solutions, such as those that correspond to states that are not the lowest states of a given symmetry. Note that when this option is used, the calculation that is performed is not a QRHF-CC calculation; it is instead a UHF-based or ROHF-based calculation, depending on what type of reference is specified by the CFOUR_REFERENCE keyword. The QRHF aspect of the calculation is used simply as a device to converge the orbitals. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_qrhfgues.html:597,perform,performed,597,psi4manual/1.8.x/autodir_options_c/cfour__cfour_qrhfgues.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_qrhfgues.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_QRHFGUES. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. CFOUR_QRHFGUES¶. If this keyword is set to ON (=1), then the QRHF orbitals specified by the CFOUR_QRHF_GENERAL CFOUR_QRHF_ORBITAL and CFOUR_QRHF_SPIN (nyi?) keywords are used as a starting guess for a restarted SCF procedure. This can be an extremely useful way to converge “difficult” SCF solutions, such as those that correspond to states that are not the lowest states of a given symmetry. Note that when this option is used, the calculation that is performed is not a QRHF-CC calculation; it is instead a UHF-based or ROHF-based calculation, depending on what type of reference is specified by the CFOUR_REFERENCE keyword. The QRHF aspect of the calculation is used simply as a device to converge the orbitals. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHFGUES. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_qrhfgues.html:597,perform,performed,597,psi4manual/1.9.x/autodir_options_c/cfour__cfour_qrhfgues.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_qrhfgues.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_QRHF_GENERAL — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_QRHF_GENERAL¶. The presence of this keyword specifies that a QRHF based CC calculation, or alternatively, an SCF calculation that uses the CFOUR_QRHFGUES option, is to be performed. Type: array; Default: No Default. Previous topic; CFOUR_PROPS; Next topic; CFOUR_QRHF_ORBITAL. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_qrhf_general-1.html:363,perform,performed,363,psi4manual/1.0.0/autodir_options_c/cfour__cfour_qrhf_general-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_qrhf_general-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_QRHF_GENERAL. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. CFOUR_QRHF_GENERAL¶. The presence of this keyword specifies that a QRHF based CC calculation, or alternatively, an SCF calculation that uses the CFOUR_QRHFGUES option, is to be performed. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_qrhf_general.html:336,perform,performed,336,psi4manual/master/autodir_options_c/cfour__cfour_qrhf_general.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_qrhf_general.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_QRHF_GENERAL. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. CFOUR_QRHF_GENERAL¶. The presence of this keyword specifies that a QRHF based CC calculation, or alternatively, an SCF calculation that uses the CFOUR_QRHFGUES option, is to be performed. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_qrhf_general-1.html:327,perform,performed,327,psi4manual/1.4.0/autodir_options_c/cfour__cfour_qrhf_general-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_qrhf_general-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_QRHF_GENERAL. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. CFOUR_QRHF_GENERAL¶. The presence of this keyword specifies that a QRHF based CC calculation, or alternatively, an SCF calculation that uses the CFOUR_QRHFGUES option, is to be performed. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_qrhf_general-1.html:327,perform,performed,327,psi4manual/1.5.0/autodir_options_c/cfour__cfour_qrhf_general-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_qrhf_general-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_QRHF_GENERAL. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. CFOUR_QRHF_GENERAL¶. The presence of this keyword specifies that a QRHF based CC calculation, or alternatively, an SCF calculation that uses the CFOUR_QRHFGUES option, is to be performed. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_qrhf_general.html:327,perform,performed,327,psi4manual/1.6.x/autodir_options_c/cfour__cfour_qrhf_general.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_qrhf_general.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_QRHF_GENERAL. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. CFOUR_QRHF_GENERAL¶. The presence of this keyword specifies that a QRHF based CC calculation, or alternatively, an SCF calculation that uses the CFOUR_QRHFGUES option, is to be performed. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_qrhf_general.html:327,perform,performed,327,psi4manual/1.7.x/autodir_options_c/cfour__cfour_qrhf_general.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_qrhf_general.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_QRHF_GENERAL. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. CFOUR_QRHF_GENERAL¶. The presence of this keyword specifies that a QRHF based CC calculation, or alternatively, an SCF calculation that uses the CFOUR_QRHFGUES option, is to be performed. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_qrhf_general.html:329,perform,performed,329,psi4manual/1.8.x/autodir_options_c/cfour__cfour_qrhf_general.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_qrhf_general.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_QRHF_GENERAL. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. CFOUR_QRHF_GENERAL¶. The presence of this keyword specifies that a QRHF based CC calculation, or alternatively, an SCF calculation that uses the CFOUR_QRHFGUES option, is to be performed. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_QRHF_GENERAL. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_qrhf_general.html:329,perform,performed,329,psi4manual/1.9.x/autodir_options_c/cfour__cfour_qrhf_general.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_qrhf_general.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_REFERENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_REFERENCE¶. Specifies the type of SCF calculation to be performed. RHF (= 0) requests a restricted Hartree-Fock reference; UHF (= 1) an unrestricted Hartree-Fock reference; ROHF (= 2) a restricted open-shell Hartree-Fock calculation; TCSCF (=3) a two-configurational SCF calculation, and CASSCF (=4) a complete-active space SCF calculations (currently not implemented). Psi4 Interface: Keyword subject to translation from value of REFERENCE unless set explicitly. Type: string; Possible Values: RHF, UHF, ROHF, TCSCF, CASSCF; Default: RHF. Previous topic; CFOUR_RDO; Next topic; CFOUR_RELATIVISTIC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_reference-1.html:245,perform,performed,245,psi4manual/1.0.0/autodir_options_c/cfour__cfour_reference-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_reference-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_REFERENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. CFOUR_REFERENCE¶. Specifies the type of SCF calculation to be performed. RHF (= 0) requests a restricted Hartree-Fock reference; UHF (= 1) an unrestricted Hartree-Fock reference; ROHF (= 2) a restricted open-shell Hartree-Fock calculation; TCSCF (=3) a two-configurational SCF calculation, and CASSCF (=4) a complete-active space SCF calculations (currently not implemented). Psi4 Interface: Keyword subject to translation from value of REFERENCE unless set explicitly. Type: string; Possible Values: RHF, UHF, ROHF, TCSCF, CASSCF; Default: RHF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_reference.html:215,perform,performed,215,psi4manual/master/autodir_options_c/cfour__cfour_reference.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_reference.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_REFERENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. CFOUR_REFERENCE¶. Specifies the type of SCF calculation to be performed. RHF (= 0) requests a restricted Hartree-Fock reference; UHF (= 1) an unrestricted Hartree-Fock reference; ROHF (= 2) a restricted open-shell Hartree-Fock calculation; TCSCF (=3) a two-configurational SCF calculation, and CASSCF (=4) a complete-active space SCF calculations (currently not implemented). Psi4 Interface: Keyword subject to translation from value of REFERENCE unless set explicitly. Type: string; Possible Values: RHF, UHF, ROHF, TCSCF, CASSCF; Default: RHF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_reference-1.html:206,perform,performed,206,psi4manual/1.4.0/autodir_options_c/cfour__cfour_reference-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_reference-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_REFERENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. CFOUR_REFERENCE¶. Specifies the type of SCF calculation to be performed. RHF (= 0) requests a restricted Hartree-Fock reference; UHF (= 1) an unrestricted Hartree-Fock reference; ROHF (= 2) a restricted open-shell Hartree-Fock calculation; TCSCF (=3) a two-configurational SCF calculation, and CASSCF (=4) a complete-active space SCF calculations (currently not implemented). Psi4 Interface: Keyword subject to translation from value of REFERENCE unless set explicitly. Type: string; Possible Values: RHF, UHF, ROHF, TCSCF, CASSCF; Default: RHF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_reference-1.html:206,perform,performed,206,psi4manual/1.5.0/autodir_options_c/cfour__cfour_reference-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_reference-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_REFERENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. CFOUR_REFERENCE¶. Specifies the type of SCF calculation to be performed. RHF (= 0) requests a restricted Hartree-Fock reference; UHF (= 1) an unrestricted Hartree-Fock reference; ROHF (= 2) a restricted open-shell Hartree-Fock calculation; TCSCF (=3) a two-configurational SCF calculation, and CASSCF (=4) a complete-active space SCF calculations (currently not implemented). Psi4 Interface: Keyword subject to translation from value of REFERENCE unless set explicitly. Type: string; Possible Values: RHF, UHF, ROHF, TCSCF, CASSCF; Default: RHF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_reference.html:206,perform,performed,206,psi4manual/1.6.x/autodir_options_c/cfour__cfour_reference.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_reference.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_REFERENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. CFOUR_REFERENCE¶. Specifies the type of SCF calculation to be performed. RHF (= 0) requests a restricted Hartree-Fock reference; UHF (= 1) an unrestricted Hartree-Fock reference; ROHF (= 2) a restricted open-shell Hartree-Fock calculation; TCSCF (=3) a two-configurational SCF calculation, and CASSCF (=4) a complete-active space SCF calculations (currently not implemented). Psi4 Interface: Keyword subject to translation from value of REFERENCE unless set explicitly. Type: string; Possible Values: RHF, UHF, ROHF, TCSCF, CASSCF; Default: RHF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_reference.html:206,perform,performed,206,psi4manual/1.7.x/autodir_options_c/cfour__cfour_reference.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_reference.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_REFERENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. CFOUR_REFERENCE¶. Specifies the type of SCF calculation to be performed. RHF (= 0) requests a restricted Hartree-Fock reference; UHF (= 1) an unrestricted Hartree-Fock reference; ROHF (= 2) a restricted open-shell Hartree-Fock calculation; TCSCF (=3) a two-configurational SCF calculation, and CASSCF (=4) a complete-active space SCF calculations (currently not implemented). Psi4 Interface: Keyword subject to translation from value of REFERENCE unless set explicitly. Type: string; Possible Values: RHF, UHF, ROHF, TCSCF, CASSCF; Default: RHF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_reference.html:208,perform,performed,208,psi4manual/1.8.x/autodir_options_c/cfour__cfour_reference.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_reference.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_REFERENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. CFOUR_REFERENCE¶. Specifies the type of SCF calculation to be performed. RHF (= 0) requests a restricted Hartree-Fock reference; UHF (= 1) an unrestricted Hartree-Fock reference; ROHF (= 2) a restricted open-shell Hartree-Fock calculation; TCSCF (=3) a two-configurational SCF calculation, and CASSCF (=4) a complete-active space SCF calculations (currently not implemented). Psi4 Interface: Keyword subject to translation from value of REFERENCE unless set explicitly. Type: string; Possible Values: RHF, UHF, ROHF, TCSCF, CASSCF; Default: RHF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_REFERENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_reference.html:208,perform,performed,208,psi4manual/1.9.x/autodir_options_c/cfour__cfour_reference.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_reference.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_RES_RAMAN — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_RES_RAMAN¶. This option can be used to convert an analytically calculated gradient vector to a particular normal coordinate representation. A useful application is to calculate the gradient of an electronically excited state in the normal coordinate representation of the ground electronic state, as this provides a first approximation to resonance Raman intensities (hence the name of the keyword). Calculations that use the this option require the externally supplied force constant matrix FCMFINAL, which is written to disk during the course of both analytic and finite-difference vibrational frequency calculations. No such transformation is performed if OFF (=0); while ON (=1) directs the program to evaluate the gradient and transform it to the chosen set of normal coordinates. A warning message is printed if the force constant matrix is unavailable. Type: boolean; Default: false. Previous topic; CFOUR_RELAX_DENS; Next topic; CFOUR_RESTART_CC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_res_raman-1.html:835,perform,performed,835,psi4manual/1.0.0/autodir_options_c/cfour__cfour_res_raman-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_res_raman-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_RES_RAMAN. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. CFOUR_RES_RAMAN¶. This option can be used to convert an analytically calculated gradient vector to a particular normal coordinate representation. A useful application is to calculate the gradient of an electronically excited state in the normal coordinate representation of the ground electronic state, as this provides a first approximation to resonance Raman intensities (hence the name of the keyword). Calculations that use the this option require the externally supplied force constant matrix FCMFINAL, which is written to disk during the course of both analytic and finite-difference vibrational frequency calculations. No such transformation is performed if OFF (=0); while ON (=1) directs the program to evaluate the gradient and transform it to the chosen set of normal coordinates. A warning message is printed if the force constant matrix is unavailable. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_res_raman.html:805,perform,performed,805,psi4manual/master/autodir_options_c/cfour__cfour_res_raman.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_res_raman.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_RES_RAMAN. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. CFOUR_RES_RAMAN¶. This option can be used to convert an analytically calculated gradient vector to a particular normal coordinate representation. A useful application is to calculate the gradient of an electronically excited state in the normal coordinate representation of the ground electronic state, as this provides a first approximation to resonance Raman intensities (hence the name of the keyword). Calculations that use the this option require the externally supplied force constant matrix FCMFINAL, which is written to disk during the course of both analytic and finite-difference vibrational frequency calculations. No such transformation is performed if OFF (=0); while ON (=1) directs the program to evaluate the gradient and transform it to the chosen set of normal coordinates. A warning message is printed if the force constant matrix is unavailable. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_res_raman-1.html:796,perform,performed,796,psi4manual/1.4.0/autodir_options_c/cfour__cfour_res_raman-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_res_raman-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_RES_RAMAN. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. CFOUR_RES_RAMAN¶. This option can be used to convert an analytically calculated gradient vector to a particular normal coordinate representation. A useful application is to calculate the gradient of an electronically excited state in the normal coordinate representation of the ground electronic state, as this provides a first approximation to resonance Raman intensities (hence the name of the keyword). Calculations that use the this option require the externally supplied force constant matrix FCMFINAL, which is written to disk during the course of both analytic and finite-difference vibrational frequency calculations. No such transformation is performed if OFF (=0); while ON (=1) directs the program to evaluate the gradient and transform it to the chosen set of normal coordinates. A warning message is printed if the force constant matrix is unavailable. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_res_raman-1.html:796,perform,performed,796,psi4manual/1.5.0/autodir_options_c/cfour__cfour_res_raman-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_res_raman-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_RES_RAMAN. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. CFOUR_RES_RAMAN¶. This option can be used to convert an analytically calculated gradient vector to a particular normal coordinate representation. A useful application is to calculate the gradient of an electronically excited state in the normal coordinate representation of the ground electronic state, as this provides a first approximation to resonance Raman intensities (hence the name of the keyword). Calculations that use the this option require the externally supplied force constant matrix FCMFINAL, which is written to disk during the course of both analytic and finite-difference vibrational frequency calculations. No such transformation is performed if OFF (=0); while ON (=1) directs the program to evaluate the gradient and transform it to the chosen set of normal coordinates. A warning message is printed if the force constant matrix is unavailable. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_res_raman.html:796,perform,performed,796,psi4manual/1.6.x/autodir_options_c/cfour__cfour_res_raman.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_res_raman.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_RES_RAMAN. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. CFOUR_RES_RAMAN¶. This option can be used to convert an analytically calculated gradient vector to a particular normal coordinate representation. A useful application is to calculate the gradient of an electronically excited state in the normal coordinate representation of the ground electronic state, as this provides a first approximation to resonance Raman intensities (hence the name of the keyword). Calculations that use the this option require the externally supplied force constant matrix FCMFINAL, which is written to disk during the course of both analytic and finite-difference vibrational frequency calculations. No such transformation is performed if OFF (=0); while ON (=1) directs the program to evaluate the gradient and transform it to the chosen set of normal coordinates. A warning message is printed if the force constant matrix is unavailable. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_res_raman.html:796,perform,performed,796,psi4manual/1.7.x/autodir_options_c/cfour__cfour_res_raman.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_res_raman.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_RES_RAMAN. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. CFOUR_RES_RAMAN¶. This option can be used to convert an analytically calculated gradient vector to a particular normal coordinate representation. A useful application is to calculate the gradient of an electronically excited state in the normal coordinate representation of the ground electronic state, as this provides a first approximation to resonance Raman intensities (hence the name of the keyword). Calculations that use the this option require the externally supplied force constant matrix FCMFINAL, which is written to disk during the course of both analytic and finite-difference vibrational frequency calculations. No such transformation is performed if OFF (=0); while ON (=1) directs the program to evaluate the gradient and transform it to the chosen set of normal coordinates. A warning message is printed if the force constant matrix is unavailable. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_res_raman.html:798,perform,performed,798,psi4manual/1.8.x/autodir_options_c/cfour__cfour_res_raman.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_res_raman.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_RES_RAMAN. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. CFOUR_RES_RAMAN¶. This option can be used to convert an analytically calculated gradient vector to a particular normal coordinate representation. A useful application is to calculate the gradient of an electronically excited state in the normal coordinate representation of the ground electronic state, as this provides a first approximation to resonance Raman intensities (hence the name of the keyword). Calculations that use the this option require the externally supplied force constant matrix FCMFINAL, which is written to disk during the course of both analytic and finite-difference vibrational frequency calculations. No such transformation is performed if OFF (=0); while ON (=1) directs the program to evaluate the gradient and transform it to the chosen set of normal coordinates. A warning message is printed if the force constant matrix is unavailable. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_RES_RAMAN. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_res_raman.html:798,perform,performed,798,psi4manual/1.9.x/autodir_options_c/cfour__cfour_res_raman.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_res_raman.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_UPDATE_HESSIAN — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_UPDATE_HESSIAN¶. Specifies whether or not the Hessian update is carried out. OFF (= 0) uses the initial Hessian (however supplied, either the default guess or a FCMINT file), ON (= 1) updates it during subsequent optimization cycles. (not in current public version). Type: boolean; Default: true. Previous topic; CFOUR_UNITS; Next topic; CFOUR_VIBRATION. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_update_hessian-1.html:407,optimiz,optimization,407,psi4manual/1.0.0/autodir_options_c/cfour__cfour_update_hessian-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_update_hessian-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CFOUR_UPDATE_HESSIAN. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. CFOUR_UPDATE_HESSIAN¶. Specifies whether or not the Hessian update is carried out. OFF (= 0) uses the initial Hessian (however supplied, either the default guess or a FCMINT file), ON (= 1) updates it during subsequent optimization cycles. (not in current public version). Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_update_hessian.html:382,optimiz,optimization,382,psi4manual/master/autodir_options_c/cfour__cfour_update_hessian.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_update_hessian.html,1,['optimiz'],['optimization']
Performance,"﻿. CFOUR_UPDATE_HESSIAN. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. CFOUR_UPDATE_HESSIAN¶. Specifies whether or not the Hessian update is carried out. OFF (= 0) uses the initial Hessian (however supplied, either the default guess or a FCMINT file), ON (= 1) updates it during subsequent optimization cycles. (not in current public version). Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_update_hessian-1.html:373,optimiz,optimization,373,psi4manual/1.4.0/autodir_options_c/cfour__cfour_update_hessian-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_update_hessian-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CFOUR_UPDATE_HESSIAN. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. CFOUR_UPDATE_HESSIAN¶. Specifies whether or not the Hessian update is carried out. OFF (= 0) uses the initial Hessian (however supplied, either the default guess or a FCMINT file), ON (= 1) updates it during subsequent optimization cycles. (not in current public version). Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_update_hessian-1.html:373,optimiz,optimization,373,psi4manual/1.5.0/autodir_options_c/cfour__cfour_update_hessian-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_update_hessian-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CFOUR_UPDATE_HESSIAN. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. CFOUR_UPDATE_HESSIAN¶. Specifies whether or not the Hessian update is carried out. OFF (= 0) uses the initial Hessian (however supplied, either the default guess or a FCMINT file), ON (= 1) updates it during subsequent optimization cycles. (not in current public version). Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_update_hessian.html:373,optimiz,optimization,373,psi4manual/1.6.x/autodir_options_c/cfour__cfour_update_hessian.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_update_hessian.html,1,['optimiz'],['optimization']
Performance,"﻿. CFOUR_UPDATE_HESSIAN. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. CFOUR_UPDATE_HESSIAN¶. Specifies whether or not the Hessian update is carried out. OFF (= 0) uses the initial Hessian (however supplied, either the default guess or a FCMINT file), ON (= 1) updates it during subsequent optimization cycles. (not in current public version). Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_update_hessian.html:373,optimiz,optimization,373,psi4manual/1.7.x/autodir_options_c/cfour__cfour_update_hessian.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_update_hessian.html,1,['optimiz'],['optimization']
Performance,"﻿. CFOUR_UPDATE_HESSIAN. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. CFOUR_UPDATE_HESSIAN¶. Specifies whether or not the Hessian update is carried out. OFF (= 0) uses the initial Hessian (however supplied, either the default guess or a FCMINT file), ON (= 1) updates it during subsequent optimization cycles. (not in current public version). Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_update_hessian.html:375,optimiz,optimization,375,psi4manual/1.8.x/autodir_options_c/cfour__cfour_update_hessian.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_update_hessian.html,1,['optimiz'],['optimization']
Performance,"﻿. CFOUR_UPDATE_HESSIAN. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. CFOUR_UPDATE_HESSIAN¶. Specifies whether or not the Hessian update is carried out. OFF (= 0) uses the initial Hessian (however supplied, either the default guess or a FCMINT file), ON (= 1) updates it during subsequent optimization cycles. (not in current public version). Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_UPDATE_HESSIAN. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_update_hessian.html:375,optimiz,optimization,375,psi4manual/1.9.x/autodir_options_c/cfour__cfour_update_hessian.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_update_hessian.html,1,['optimiz'],['optimization']
Performance,"﻿. CFOUR_VIBRATION — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_VIBRATION¶. Specifies whether (harmonic) vibrational frequencies are calculated or not. If the default NO (=0) is specified then no frequencies are calculated. For ANALYTIC, vibrational frequencies are determined from analytically computed second derivatives, and for FINDIF (=2) vibrational frequencies are calculated from a force field obtained by numerical differentiation of analytically evaluated gradients (or even single-point energies) using symmetry-adapted mass-weighted Cartesian coordinates. If vibrational frequencies are calculated, a normal mode analysis using the computed force-constant matrix is performed, rotationally projected frequencies are computed, infrared intensities are determined, and zero-point energies (ZPE) are evaluated. Type: string; Possible Values: NO, ANALYTIC, FINDIF; Default: NO. Previous topic; CFOUR_UPDATE_HESSIAN; Next topic; CFOUR_VTRAN. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_vibration-1.html:803,perform,performed,803,psi4manual/1.0.0/autodir_options_c/cfour__cfour_vibration-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_vibration-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_VIBRATION. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. CFOUR_VIBRATION¶. Specifies whether (harmonic) vibrational frequencies are calculated or not. If the default NO (=0) is specified then no frequencies are calculated. For ANALYTIC, vibrational frequencies are determined from analytically computed second derivatives, and for FINDIF (=2) vibrational frequencies are calculated from a force field obtained by numerical differentiation of analytically evaluated gradients (or even single-point energies) using symmetry-adapted mass-weighted Cartesian coordinates. If vibrational frequencies are calculated, a normal mode analysis using the computed force-constant matrix is performed, rotationally projected frequencies are computed, infrared intensities are determined, and zero-point energies (ZPE) are evaluated. Type: string; Possible Values: NO, ANALYTIC, FINDIF, EXACT; Default: NO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_vibration.html:773,perform,performed,773,psi4manual/master/autodir_options_c/cfour__cfour_vibration.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_vibration.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_VIBRATION. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. CFOUR_VIBRATION¶. Specifies whether (harmonic) vibrational frequencies are calculated or not. If the default NO (=0) is specified then no frequencies are calculated. For ANALYTIC, vibrational frequencies are determined from analytically computed second derivatives, and for FINDIF (=2) vibrational frequencies are calculated from a force field obtained by numerical differentiation of analytically evaluated gradients (or even single-point energies) using symmetry-adapted mass-weighted Cartesian coordinates. If vibrational frequencies are calculated, a normal mode analysis using the computed force-constant matrix is performed, rotationally projected frequencies are computed, infrared intensities are determined, and zero-point energies (ZPE) are evaluated. Type: string; Possible Values: NO, ANALYTIC, FINDIF, EXACT; Default: NO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_vibration-1.html:764,perform,performed,764,psi4manual/1.4.0/autodir_options_c/cfour__cfour_vibration-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_vibration-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_VIBRATION. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. CFOUR_VIBRATION¶. Specifies whether (harmonic) vibrational frequencies are calculated or not. If the default NO (=0) is specified then no frequencies are calculated. For ANALYTIC, vibrational frequencies are determined from analytically computed second derivatives, and for FINDIF (=2) vibrational frequencies are calculated from a force field obtained by numerical differentiation of analytically evaluated gradients (or even single-point energies) using symmetry-adapted mass-weighted Cartesian coordinates. If vibrational frequencies are calculated, a normal mode analysis using the computed force-constant matrix is performed, rotationally projected frequencies are computed, infrared intensities are determined, and zero-point energies (ZPE) are evaluated. Type: string; Possible Values: NO, ANALYTIC, FINDIF, EXACT; Default: NO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_vibration-1.html:764,perform,performed,764,psi4manual/1.5.0/autodir_options_c/cfour__cfour_vibration-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_vibration-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_VIBRATION. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. CFOUR_VIBRATION¶. Specifies whether (harmonic) vibrational frequencies are calculated or not. If the default NO (=0) is specified then no frequencies are calculated. For ANALYTIC, vibrational frequencies are determined from analytically computed second derivatives, and for FINDIF (=2) vibrational frequencies are calculated from a force field obtained by numerical differentiation of analytically evaluated gradients (or even single-point energies) using symmetry-adapted mass-weighted Cartesian coordinates. If vibrational frequencies are calculated, a normal mode analysis using the computed force-constant matrix is performed, rotationally projected frequencies are computed, infrared intensities are determined, and zero-point energies (ZPE) are evaluated. Type: string; Possible Values: NO, ANALYTIC, FINDIF, EXACT; Default: NO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_vibration.html:764,perform,performed,764,psi4manual/1.6.x/autodir_options_c/cfour__cfour_vibration.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_vibration.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_VIBRATION. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. CFOUR_VIBRATION¶. Specifies whether (harmonic) vibrational frequencies are calculated or not. If the default NO (=0) is specified then no frequencies are calculated. For ANALYTIC, vibrational frequencies are determined from analytically computed second derivatives, and for FINDIF (=2) vibrational frequencies are calculated from a force field obtained by numerical differentiation of analytically evaluated gradients (or even single-point energies) using symmetry-adapted mass-weighted Cartesian coordinates. If vibrational frequencies are calculated, a normal mode analysis using the computed force-constant matrix is performed, rotationally projected frequencies are computed, infrared intensities are determined, and zero-point energies (ZPE) are evaluated. Type: string; Possible Values: NO, ANALYTIC, FINDIF, EXACT; Default: NO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_vibration.html:764,perform,performed,764,psi4manual/1.7.x/autodir_options_c/cfour__cfour_vibration.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_vibration.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_VIBRATION. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. CFOUR_VIBRATION¶. Specifies whether (harmonic) vibrational frequencies are calculated or not. If the default NO (=0) is specified then no frequencies are calculated. For ANALYTIC, vibrational frequencies are determined from analytically computed second derivatives, and for FINDIF (=2) vibrational frequencies are calculated from a force field obtained by numerical differentiation of analytically evaluated gradients (or even single-point energies) using symmetry-adapted mass-weighted Cartesian coordinates. If vibrational frequencies are calculated, a normal mode analysis using the computed force-constant matrix is performed, rotationally projected frequencies are computed, infrared intensities are determined, and zero-point energies (ZPE) are evaluated. Type: string; Possible Values: NO, ANALYTIC, FINDIF, EXACT; Default: NO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_vibration.html:766,perform,performed,766,psi4manual/1.8.x/autodir_options_c/cfour__cfour_vibration.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_vibration.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_VIBRATION. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. CFOUR_VIBRATION¶. Specifies whether (harmonic) vibrational frequencies are calculated or not. If the default NO (=0) is specified then no frequencies are calculated. For ANALYTIC, vibrational frequencies are determined from analytically computed second derivatives, and for FINDIF (=2) vibrational frequencies are calculated from a force field obtained by numerical differentiation of analytically evaluated gradients (or even single-point energies) using symmetry-adapted mass-weighted Cartesian coordinates. If vibrational frequencies are calculated, a normal mode analysis using the computed force-constant matrix is performed, rotationally projected frequencies are computed, infrared intensities are determined, and zero-point energies (ZPE) are evaluated. Type: string; Possible Values: NO, ANALYTIC, FINDIF, EXACT; Default: NO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VIBRATION. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_vibration.html:766,perform,performed,766,psi4manual/1.9.x/autodir_options_c/cfour__cfour_vibration.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_vibration.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_VTRAN — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». CFOUR_VTRAN¶. This keyword defines what type of integral transformation is to be performed in the program xvtran. FULL/PARTIAL (=0) allows the transformation program to choose the appropriate type of transformation, while FULL (=1) requires a full integral transformation and PARTIAL (=2) means a MBPT(2)-specific transformation where the integrals are not formed. Type: string; Possible Values: FULL/PARTIAL, FULL, PARTIAL; Default: FULL/PARTIAL. Previous topic; CFOUR_VIBRATION; Next topic; CFOUR_XFIELD. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CFOUR ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_vtran-1.html:260,perform,performed,260,psi4manual/1.0.0/autodir_options_c/cfour__cfour_vtran-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cfour__cfour_vtran-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_VTRAN. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. CFOUR_VTRAN¶. This keyword defines what type of integral transformation is to be performed in the program xvtran. FULL/PARTIAL (=0) allows the transformation program to choose the appropriate type of transformation, while FULL (=1) requires a full integral transformation and PARTIAL (=2) means a MBPT(2)-specific transformation where the \((ab \vert cd)\) integrals are not formed. Type: string; Possible Values: FULL/PARTIAL, FULL, PARTIAL; Default: FULL/PARTIAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_vtran.html:226,perform,performed,226,psi4manual/master/autodir_options_c/cfour__cfour_vtran.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cfour__cfour_vtran.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_VTRAN. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. CFOUR_VTRAN¶. This keyword defines what type of integral transformation is to be performed in the program xvtran. FULL/PARTIAL (=0) allows the transformation program to choose the appropriate type of transformation, while FULL (=1) requires a full integral transformation and PARTIAL (=2) means a MBPT(2)-specific transformation where the \((ab \vert cd)\) integrals are not formed. Type: string; Possible Values: FULL/PARTIAL, FULL, PARTIAL; Default: FULL/PARTIAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_vtran-1.html:217,perform,performed,217,psi4manual/1.4.0/autodir_options_c/cfour__cfour_vtran-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cfour__cfour_vtran-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_VTRAN. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. CFOUR_VTRAN¶. This keyword defines what type of integral transformation is to be performed in the program xvtran. FULL/PARTIAL (=0) allows the transformation program to choose the appropriate type of transformation, while FULL (=1) requires a full integral transformation and PARTIAL (=2) means a MBPT(2)-specific transformation where the \((ab \vert cd)\) integrals are not formed. Type: string; Possible Values: FULL/PARTIAL, FULL, PARTIAL; Default: FULL/PARTIAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_vtran-1.html:217,perform,performed,217,psi4manual/1.5.0/autodir_options_c/cfour__cfour_vtran-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cfour__cfour_vtran-1.html,2,['perform'],['performed']
Performance,"﻿. CFOUR_VTRAN. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. CFOUR_VTRAN¶. This keyword defines what type of integral transformation is to be performed in the program xvtran. FULL/PARTIAL (=0) allows the transformation program to choose the appropriate type of transformation, while FULL (=1) requires a full integral transformation and PARTIAL (=2) means a MBPT(2)-specific transformation where the \((ab \vert cd)\) integrals are not formed. Type: string; Possible Values: FULL/PARTIAL, FULL, PARTIAL; Default: FULL/PARTIAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_vtran.html:217,perform,performed,217,psi4manual/1.6.x/autodir_options_c/cfour__cfour_vtran.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cfour__cfour_vtran.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_VTRAN. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. CFOUR_VTRAN¶. This keyword defines what type of integral transformation is to be performed in the program xvtran. FULL/PARTIAL (=0) allows the transformation program to choose the appropriate type of transformation, while FULL (=1) requires a full integral transformation and PARTIAL (=2) means a MBPT(2)-specific transformation where the \((ab \vert cd)\) integrals are not formed. Type: string; Possible Values: FULL/PARTIAL, FULL, PARTIAL; Default: FULL/PARTIAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_vtran.html:217,perform,performed,217,psi4manual/1.7.x/autodir_options_c/cfour__cfour_vtran.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cfour__cfour_vtran.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_VTRAN. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. CFOUR_VTRAN¶. This keyword defines what type of integral transformation is to be performed in the program xvtran. FULL/PARTIAL (=0) allows the transformation program to choose the appropriate type of transformation, while FULL (=1) requires a full integral transformation and PARTIAL (=2) means a MBPT(2)-specific transformation where the \((ab \vert cd)\) integrals are not formed. Type: string; Possible Values: FULL/PARTIAL, FULL, PARTIAL; Default: FULL/PARTIAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_vtran.html:219,perform,performed,219,psi4manual/1.8.x/autodir_options_c/cfour__cfour_vtran.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cfour__cfour_vtran.html,1,['perform'],['performed']
Performance,"﻿. CFOUR_VTRAN. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. CFOUR_VTRAN¶. This keyword defines what type of integral transformation is to be performed in the program xvtran. FULL/PARTIAL (=0) allows the transformation program to choose the appropriate type of transformation, while FULL (=1) requires a full integral transformation and PARTIAL (=2) means a MBPT(2)-specific transformation where the \((ab \vert cd)\) integrals are not formed. Type: string; Possible Values: FULL/PARTIAL, FULL, PARTIAL; Default: FULL/PARTIAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CFOUR; CFOUR_VTRAN. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_vtran.html:219,perform,performed,219,psi4manual/1.9.x/autodir_options_c/cfour__cfour_vtran.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cfour__cfour_vtran.html,1,['perform'],['performed']
Performance,"﻿. CONSECUTIVE_BACKSTEPS — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. Previous topic; CART_HESS_READ; Next topic; COVALENT_CONNECT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__consecutive_backsteps-1.html:245,optimiz,optimization,245,psi4manual/4.0b2/autodir_options_c/optking__consecutive_backsteps-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__consecutive_backsteps-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. Previous topic; CART_HESS_READ; Next topic; COVALENT_CONNECT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__consecutive_backsteps-1.html:260,optimiz,optimization,260,psi4manual/4.0b3/autodir_options_c/optking__consecutive_backsteps-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__consecutive_backsteps-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. Previous topic; CART_HESS_READ; Next topic; COVALENT_CONNECT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__consecutive_backsteps-1.html:260,optimiz,optimization,260,psi4manual/4.0b4/autodir_options_c/optking__consecutive_backsteps-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__consecutive_backsteps-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. Previous topic; CART_HESS_READ; Next topic; COVALENT_CONNECT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__consecutive_backsteps-1.html:260,optimiz,optimization,260,psi4manual/4.0b5/autodir_options_c/optking__consecutive_backsteps-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__consecutive_backsteps-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. Previous topic; CART_HESS_READ; Next topic; COVALENT_CONNECT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__consecutive_backsteps-1.html:267,optimiz,optimization,267,psi4manual/1.0.0/autodir_options_c/optking__consecutive_backsteps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__consecutive_backsteps-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__consecutive_backsteps.html:243,optimiz,optimization,243,psi4manual/master/autodir_options_c/optking__consecutive_backsteps.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__consecutive_backsteps.html,1,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__consecutive_backsteps-1.html:234,optimiz,optimization,234,psi4manual/1.4.0/autodir_options_c/optking__consecutive_backsteps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__consecutive_backsteps-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__consecutive_backsteps-1.html:234,optimiz,optimization,234,psi4manual/1.5.0/autodir_options_c/optking__consecutive_backsteps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__consecutive_backsteps-1.html,2,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__consecutive_backsteps.html:234,optimiz,optimization,234,psi4manual/1.6.x/autodir_options_c/optking__consecutive_backsteps.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__consecutive_backsteps.html,1,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__consecutive_backsteps.html:234,optimiz,optimization,234,psi4manual/1.7.x/autodir_options_c/optking__consecutive_backsteps.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__consecutive_backsteps.html,1,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__consecutive_backsteps.html:236,optimiz,optimization,236,psi4manual/1.8.x/autodir_options_c/optking__consecutive_backsteps.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__consecutive_backsteps.html,1,['optimiz'],['optimization']
Performance,"﻿. CONSECUTIVE_BACKSTEPS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; CONSECUTIVE_BACKSTEPS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__consecutive_backsteps.html:236,optimiz,optimization,236,psi4manual/1.9.x/autodir_options_c/optking__consecutive_backsteps.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__consecutive_backsteps.html,1,['optimiz'],['optimization']
Performance,"﻿. CORE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Database — database(); CORE. CORE¶. Database of Pulay corannulene structures. Subsumed into CFLOW. cp 'off' || 'on'; rlxd 'off'. BAKERJCC93¶. Database of molecules that are challenging to optimize.; Geometries from Baker J. Comput. Chem. 14 1085 (1993), as reported; in Bakken and Helgaker, J. Chem. Phys. 117, 9160 (2002), with a few; further corrections.; No reference energies defined. cp 'off'; rlxd 'off'; subset. 'small'; 'large'. BAKERJCC96¶. Geometries from Baker and Chan J. Comput. Chem. 17 888 (1996),. as reported in Bakken and Helgaker, J. Chem. Phys. 117, 9160 (2002). No reference energies defined. cp 'off'; rlxd 'off'. BASIC¶. Database of simple molecules, mostly for testing.; Geometries from nowhere special, and no reference energies defined. cp 'off'; rlxd 'off'; subset ['h2o', 'nh3', 'ch4']. HTR40¶. Database of Hydrogen transfer reactions.; Geometries from Bozkaya and Sherrill.; Reference energies from Bozkaya and Sherrill. benchmark. '<benchmark_name>' <Reference>.; \(\Rightarrow\) '<default_benchmark_name>' \(\Leftarrow\) <Reference>. subset. 'small' <members_description>; 'large' <members_description>; '<subset>' <members_description>. A24alt¶. Database (Hobza) of interaction energies for bimolecular complexes.; Geometries from <Reference>.; Reference interaction energies from Rezac and Hobza, JCTC (in press). cp 'off' <erase this comment and after unless on is a valid option> || 'on'; rlxd 'off' <erase this comment and after unless on is valid option> || 'on'; benchmark. '<benchmark_name>' <Reference>.; \(\Rightarrow\) '<default_benchmark_name>' \(\Leftarrow\) <Reference>. subset. 'small' <members_description>; 'large' <members_description>; '<subset>' <members_description>. HTBH¶. Database (Truhlar) of hydrogen-transfer barrier height reactions.; Geometries from Truhlar and coworkers at site http://t1.chem.umn.edu/misc/database_grou",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_available_databases.html:308,optimiz,optimize,308,psi4manual/1.7.x/autodoc_available_databases.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_available_databases.html,1,['optimiz'],['optimize']
Performance,"﻿. CORR_CCSD_T — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. Previous topic; CORR_ANSATZ; Next topic; CORR_CHARGE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__corr_ccsd_t-1.html:208,perform,perform,208,psi4manual/4.0b2/autodir_options_c/psimrcc__corr_ccsd_t-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__corr_ccsd_t-1.html,2,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. Previous topic; CORR_ANSATZ; Next topic; CORR_CHARGE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__corr_ccsd_t-1.html:223,perform,perform,223,psi4manual/4.0b3/autodir_options_c/psimrcc__corr_ccsd_t-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__corr_ccsd_t-1.html,2,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. Previous topic; CORR_ANSATZ; Next topic; CORR_CHARGE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__corr_ccsd_t-1.html:223,perform,perform,223,psi4manual/4.0b4/autodir_options_c/psimrcc__corr_ccsd_t-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__corr_ccsd_t-1.html,2,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. Previous topic; CORR_ANSATZ; Next topic; CORR_CHARGE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__corr_ccsd_t-1.html:223,perform,perform,223,psi4manual/4.0b5/autodir_options_c/psimrcc__corr_ccsd_t-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__corr_ccsd_t-1.html,2,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. Previous topic; CORR_ANSATZ; Next topic; CORR_CHARGE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__corr_ccsd_t-1.html:230,perform,perform,230,psi4manual/1.0.0/autodir_options_c/psimrcc__corr_ccsd_t-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__corr_ccsd_t-1.html,2,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__corr_ccsd_t.html:196,perform,perform,196,psi4manual/master/autodir_options_c/psimrcc__corr_ccsd_t.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__corr_ccsd_t.html,1,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__corr_ccsd_t-1.html:187,perform,perform,187,psi4manual/1.4.0/autodir_options_c/psimrcc__corr_ccsd_t-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__corr_ccsd_t-1.html,2,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__corr_ccsd_t-1.html:187,perform,perform,187,psi4manual/1.5.0/autodir_options_c/psimrcc__corr_ccsd_t-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__corr_ccsd_t-1.html,2,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__corr_ccsd_t.html:187,perform,perform,187,psi4manual/1.6.x/autodir_options_c/psimrcc__corr_ccsd_t.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__corr_ccsd_t.html,1,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__corr_ccsd_t.html:187,perform,perform,187,psi4manual/1.7.x/autodir_options_c/psimrcc__corr_ccsd_t.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__corr_ccsd_t.html,1,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__corr_ccsd_t.html:189,perform,perform,189,psi4manual/1.8.x/autodir_options_c/psimrcc__corr_ccsd_t.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__corr_ccsd_t.html,1,['perform'],['perform']
Performance,"﻿. CORR_CCSD_T. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; CORR_CCSD_T. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__corr_ccsd_t.html:189,perform,perform,189,psi4manual/1.9.x/autodir_options_c/psimrcc__corr_ccsd_t.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__corr_ccsd_t.html,1,['perform'],['perform']
Performance,"﻿. COSX_INCFOCK. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; COSX_INCFOCK. COSX_INCFOCK¶. Do allow for improved COSX screening performance by constructing the Fock matrix incrementally?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; COSX_INCFOCK. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__cosx_incfock.html:188,perform,performance,188,psi4manual/1.6.x/autodir_options_c/scf__cosx_incfock.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__cosx_incfock.html,1,['perform'],['performance']
Performance,"﻿. CPHF — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». CPHF¶; Performs second order Moller-Plesset perturbation theory (MP2) computations. This code can// compute RHF/ROHF/UHF energies, and RHF gradient/property computations. However, given the small errors introduced,// we recommend using the new density fitted MP2 codes instead, which are much more efficient. General¶. CACHELEVEL¶. The amount of cacheing of data to perform. Type: integer; Default: 2. CACHETYPE¶. The criterion used to retain/release cached data. Type: string; Possible Values: LRU, LOW; Default: LRU. CIS_AD_STATES¶. Which states to save AD Matrices for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. CIS_AMPLITUDE_CUTOFF¶. Minimum singles amplitude to print in CIS analysis. Type: double; Default: 0.15. CIS_DOPDM_STATES¶. Which states to save AO difference OPDMs for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. CIS_MEM_SAFETY_FACTOR¶. Memory safety factor for allocating JK. Type: double; Default: 0.75. CIS_NO_STATES¶. Which states to save AO Natural Orbitals for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. CIS_OPDM_STATES¶. Which states to save AO OPDMs for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. CIS_TOPDM_STATES¶. Which states to save AO transition OPDMs for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. CPHF_MEM_SAFETY_FACTOR¶. Memory safety factor for allocating JK. Type: double; Default: 0.75. CPHF_TASKS¶. Which tasks to run CPHF For * Valid choices: * -Polarizability *. Type: array; Default: No Default. DEBUG¶. The amount of debug information printed to the output file. Type: integer; Default: 0. DF_BASIS_SCF¶. Auxiliary basis for SCF. Type: string; Possible Values: basis string; Default: No Default. DO_SINGLETS¶. Do ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__cphf-1.html:502,cache,cacheing,502,psi4manual/4.0b5/autodir_options_c/module__cphf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__cphf-1.html,6,"['cache', 'perform']","['cached', 'cacheing', 'perform']"
Performance,"﻿. CUHF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; CUHF. CUHF¶. class psi4.core.CUHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; docstring. iteration_; docstring. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the ‘Core’ Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self, arg0); Returns copy of the requested (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.cuhf.html:266,perform,performed,266,psi4manual/1.4.0/api/psi4.core.cuhf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.cuhf.html,2,['perform'],['performed']
Performance,"﻿. CUHF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; CUHF. CUHF¶. class psi4.core.CUHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmet",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.cuhf.html:266,perform,performed,266,psi4manual/1.5.0/api/psi4.core.cuhf.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.cuhf.html,2,['perform'],['performed']
Performance,"﻿. CUHF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; CUHF. CUHF¶. class psi4.core.CUHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmet",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.CUHF.html:266,perform,performed,266,psi4manual/1.6.x/api/psi4.core.CUHF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.CUHF.html,2,['perform'],['performed']
Performance,"﻿. Compiling and Installing from Source. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Installation and Runtime Configuration; Compiling and Installing from Source. Compiling and Installing from Source¶. Warning; As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult psi4/conda/psi4-path-advisor.py; (extensive help menu at conda/psi4-path-advisor.py -h); or psicode downloads; page for the latest guides. This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see psicode.org/installs/latest; (select “source”). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see psicode.org/installs/latest (select “conda”).; To see working builds for Linux, Mac, and Windows, see :src:; [this GHA]. Planning: how to configure Psi4 and invoke CMake¶; PSI4 is built through CMake. An abbreviated build guide can be found; within the source itself .; CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it’s very possible that; from top-level-psi4-dir source directory, you can call cmake -S.; -Bobjdir without any further arguments, and it will invoke cmake,; detect some appropriate defaults, configure the build, create a build; directory objdir, and complete, leaving you to only invoke; make or Ninja in the new build directory.; Should this happy scenario not come to pass, or if the default build; options are not to your taste, use the links within core; dependencies and add-on dependencies to plan a s",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/build_planning.html:902,perform,performance-tuned,902,psi4manual/master/build_planning.html,https://psicode.org,https://psicode.org/psi4manual/master/build_planning.html,1,['perform'],['performance-tuned']
Performance,"﻿. Compiling and Installing from Source. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Installation and Runtime Configuration. Compiling and Installing from Source¶; This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see psicode.org/installs/latest; (select “source”). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see psicode.org/installs/latest (select “conda”). Planning: how to configure Psi4 and invoke CMake¶; PSI4 is built through CMake. An abbreviated build guide can be found; within the source itself.; CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it’s very possible that; from top-level-psi4-dir source directory, you can call cmake -H.; -Bobjdir without any further arguments, and it will invoke cmake,; detect some appropriate defaults, configure the build, create a build; directory objdir, and complete, leaving you to only invoke; make in the new build directory.; Should this happy scenario not come to pass, or if the default build; options are not to your taste, use the links within core; dependencies and add-on dependencies to plan a set of arguments to cmake tailored to; your computer. Proceed to quick build or; detailed build. How to build and install Psi4, the compact version¶; This section outlines the main steps of configuring, compiling, and; installing PSI4. More detail is given here.; 1; 2; 3; 4; 5>>> cd {top-level-psi4-dir}; >>> cmake -H. -Bobjdir [your configuration options]; >>> cd objdir; >>> make -j`getconf _NPROCESSORS_ONLN`; >>> make install. How to build, test, and install Psi4, in detail¶; 1. Plan Directories. Get ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/build_planning-1.html:481,perform,performance-tuned,481,psi4manual/1.3.2/build_planning-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/build_planning-1.html,4,['perform'],['performance-tuned']
Performance,"﻿. Compiling and Installing from Source. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Installation and Runtime Configuration; Compiling and Installing from Source. Compiling and Installing from Source¶; This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see psicode.org/installs/latest; (select “source”). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see psicode.org/installs/latest (select “conda”). Planning: how to configure Psi4 and invoke CMake¶; PSI4 is built through CMake. An abbreviated build guide can be found; within the source itself.; CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it’s very possible that; from top-level-psi4-dir source directory, you can call cmake -S.; -Bobjdir without any further arguments, and it will invoke cmake,; detect some appropriate defaults, configure the build, create a build; directory objdir, and complete, leaving you to only invoke; make or Ninja in the new build directory.; Should this happy scenario not come to pass, or if the default build; options are not to your taste, use the links within core; dependencies and add-on dependencies to plan a set of arguments to cmake tailored to; your computer. Proceed to quick build or; detailed build. How to build and install Psi4, the compact version¶; This section outlines the main steps of configuring, compiling, and; installing PSI4. More detail is given here.; >>> cd {top-level-psi4-dir}; >>> cmake -S. -Bobjdir [your configuration options]; >>> cd objdir; >>> make -j`getconf _NPROCESSORS_ONLN`; >>> make install. How to build, test, and install Psi4, in de",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/build_planning-1.html:517,perform,performance-tuned,517,psi4manual/1.4.0/build_planning-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/build_planning-1.html,4,['perform'],['performance-tuned']
Performance,"﻿. Compiling and Installing from Source. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Installation and Runtime Configuration; Compiling and Installing from Source. Compiling and Installing from Source¶; This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see psicode.org/installs/latest; (select “source”). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see psicode.org/installs/latest (select “conda”). Planning: how to configure Psi4 and invoke CMake¶; PSI4 is built through CMake. An abbreviated build guide can be found; within the source itself.; CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it’s very possible that; from top-level-psi4-dir source directory, you can call cmake -S.; -Bobjdir without any further arguments, and it will invoke cmake,; detect some appropriate defaults, configure the build, create a build; directory objdir, and complete, leaving you to only invoke; make or Ninja in the new build directory.; Should this happy scenario not come to pass, or if the default build; options are not to your taste, use the links within core; dependencies and add-on dependencies to plan a set of arguments to cmake tailored to; your computer. Proceed to quick build or; detailed build. How to build and install Psi4, the compact version¶; This section outlines the main steps of configuring, compiling, and; installing PSI4. More detail is given here.; >>> cd {top-level-psi4-dir}; >>> cmake -S. -Bobjdir [your configuration options]; >>> cd objdir; >>> make -j`getconf _NPROCESSORS_ONLN`; >>> make install. How to build, test, and install Psi4, in de",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/build_planning-1.html:517,perform,performance-tuned,517,psi4manual/1.5.0/build_planning-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/build_planning-1.html,4,['perform'],['performance-tuned']
Performance,"﻿. Compiling and Installing from Source. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Installation and Runtime Configuration; Compiling and Installing from Source. Compiling and Installing from Source¶; This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see psicode.org/installs/latest; (select “source”). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see psicode.org/installs/latest (select “conda”). Planning: how to configure Psi4 and invoke CMake¶; PSI4 is built through CMake. An abbreviated build guide can be found; within the source itself .; CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it’s very possible that; from top-level-psi4-dir source directory, you can call cmake -S.; -Bobjdir without any further arguments, and it will invoke cmake,; detect some appropriate defaults, configure the build, create a build; directory objdir, and complete, leaving you to only invoke; make or Ninja in the new build directory.; Should this happy scenario not come to pass, or if the default build; options are not to your taste, use the links within core; dependencies and add-on dependencies to plan a set of arguments to cmake tailored to; your computer. Proceed to quick build or; detailed build. How to build and install Psi4, the compact version¶; This section outlines the main steps of configuring, compiling, and; installing PSI4. More detail is given here.; >>> cd {top-level-psi4-dir}; >>> cmake -S. -Bobjdir [your configuration options]; >>> cd objdir; >>> make -j`getconf _NPROCESSORS_ONLN`; >>> make install. How to build, test, and install Psi4, in d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/build_planning.html:517,perform,performance-tuned,517,psi4manual/1.6.x/build_planning.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/build_planning.html,2,['perform'],['performance-tuned']
Performance,"﻿. Compiling and Installing from Source. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Installation and Runtime Configuration; Compiling and Installing from Source. Compiling and Installing from Source¶; This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see psicode.org/installs/latest; (select “source”). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see psicode.org/installs/latest (select “conda”). Planning: how to configure Psi4 and invoke CMake¶; PSI4 is built through CMake. An abbreviated build guide can be found; within the source itself .; CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it’s very possible that; from top-level-psi4-dir source directory, you can call cmake -S.; -Bobjdir without any further arguments, and it will invoke cmake,; detect some appropriate defaults, configure the build, create a build; directory objdir, and complete, leaving you to only invoke; make or Ninja in the new build directory.; Should this happy scenario not come to pass, or if the default build; options are not to your taste, use the links within core; dependencies and add-on dependencies to plan a set of arguments to cmake tailored to; your computer. Proceed to quick build or; detailed build. How to build and install Psi4, the compact version¶; This section outlines the main steps of configuring, compiling, and; installing PSI4. More detail is given here.; >>> cd {top-level-psi4-dir}; >>> cmake -S. -Bobjdir [your configuration options]; >>> cd objdir; >>> make -j`getconf _NPROCESSORS_ONLN`; >>> make install. How to build, test, and install Psi4, in d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/build_planning.html:517,perform,performance-tuned,517,psi4manual/1.7.x/build_planning.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/build_planning.html,2,['perform'],['performance-tuned']
Performance,"﻿. Compiling and Installing from Source. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Installation and Runtime Configuration; Compiling and Installing from Source. Compiling and Installing from Source¶. Warning; As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult psicode downloads; page for the latest guides. This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see psicode.org/installs/latest; (select “source”). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see psicode.org/installs/latest (select “conda”).; To see working builds for Linux, Mac, and Windows, see :src:; [this GHA]. Planning: how to configure Psi4 and invoke CMake¶; PSI4 is built through CMake. An abbreviated build guide can be found; within the source itself .; CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it’s very possible that; from top-level-psi4-dir source directory, you can call cmake -S.; -Bobjdir without any further arguments, and it will invoke cmake,; detect some appropriate defaults, configure the build, create a build; directory objdir, and complete, leaving you to only invoke; make or Ninja in the new build directory.; Should this happy scenario not come to pass, or if the default build; options are not to your taste, use the links within core; dependencies and add-on dependencies to plan a set of arguments to cmake tailored to; your computer. Proceed to quick build or; detailed build. How",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/build_planning.html:803,perform,performance-tuned,803,psi4manual/1.8.x/build_planning.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/build_planning.html,2,['perform'],['performance-tuned']
Performance,"﻿. Compiling and Installing from Source. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Installation and Runtime Configuration; Compiling and Installing from Source. Compiling and Installing from Source¶. Warning; As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult psi4/conda/psi4-path-advisor.py; (extensive help menu at conda/psi4-path-advisor.py -h); or psicode downloads; page for the latest guides. This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see psicode.org/installs/latest; (select “source”). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see psicode.org/installs/latest (select “conda”).; To see working builds for Linux, Mac, and Windows, see :src:; [this GHA]. Planning: how to configure Psi4 and invoke CMake¶; PSI4 is built through CMake. An abbreviated build guide can be found; within the source itself .; CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it’s very possible that; from top-level-psi4-dir source directory, you can call cmake -S.; -Bobjdir without any further arguments, and it will invoke cmake,; detect some appropriate defaults, configure the build, create a build; directory objdir, and complete, leaving you to only invoke; make or Ninja in the new build directory.; Should this happy scenario not come to pass, or if the default build; options are not to your taste, use the links within core; dependencies and add-on dependencies to plan a set of a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/build_planning.html:895,perform,performance-tuned,895,psi4manual/1.9.x/build_planning.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/build_planning.html,1,['perform'],['performance-tuned']
Performance,"﻿. Complete Basis Set. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Complete Basis Set¶. Code author: Lori A. Burns and Daniel G. A. Smith; Section author: Lori A. Burns; The psi4.cbs() function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; psi4.energy(), psi4.gradient(), etc. For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second item. energy('mp2/cc-pv[dt]z'); energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'). A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can be accessed through the first item below more; conveniently than the equivalent second item. optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz'); optimize(cbs, corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz'). Many examples can be found at cbs-xtpl-energy,; cbs-xtpl-gradient, cbs-xtpl-opt,; cbs-xtpl-freq, cbs-xtpl-func,; cbs-xtpl-wrapper. psi4.cbs(name[, scf_basis, scf_scheme, corl_wfn, corl_basis, corl_scheme, delta_wfn, delta_wfn_lesser, delta_basis, delta_scheme, delta2_wfn, delta2_wfn_lesser, delta2_basis, delta2_scheme, delta3_wfn, delta3_wfn_lesser, delta3_basis, delta3_scheme, delta4_wfn, delta4_wfn_lesser, delta4_basis, delta4_scheme, delta5_wfn, delta5_wfn_lesser, delta5_basis, delta5_scheme])[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:complete_basis_set(). Returns:(float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/cbs-1.html:749,optimiz,optimization,749,psi4manual/1.1.0/cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/cbs-1.html,6,['optimiz'],"['optimization', 'optimize']"
Performance,"﻿. Complete Basis Set. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Complete Basis Set¶. Code author: Lori A. Burns and Daniel G. A. Smith; Section author: Lori A. Burns; The psi4.cbs() function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; psi4.energy(), psi4.gradient(), etc. For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second item. energy('mp2/cc-pv[dt]z'); energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'). A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can be accessed through the first item below more; conveniently than the equivalent second item. optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz'); optimize(cbs, corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz'). Many examples can be found at cbs-xtpl-energy,; cbs-xtpl-gradient, cbs-xtpl-opt,; cbs-xtpl-freq, cbs-xtpl-func,; cbs-xtpl-wrapper. psi4.cbs(name[, scf_basis, scf_scheme, corl_wfn, corl_basis, corl_scheme, delta_wfn, delta_wfn_lesser, delta_basis, delta_scheme, delta2_wfn, delta2_wfn_lesser, delta2_basis, delta2_scheme, delta3_wfn, delta3_wfn_lesser, delta3_basis, delta3_scheme, delta4_wfn, delta4_wfn_lesser, delta4_basis, delta4_scheme, delta5_wfn, delta5_wfn_lesser, delta5_basis, delta5_scheme])[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:complete_basis_set(). Returns:(float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a develope",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/cbs-1.html:751,optimiz,optimization,751,psi4manual/1.2.1/cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/cbs-1.html,6,['optimiz'],"['optimization', 'optimize']"
Performance,"﻿. Complete Basis Set. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Complete Basis Set¶. Code author: Lori A. Burns, Daniel G. A. Smith and Peter Kraus; Section author: Lori A. Burns and Peter Kraus; The psi4.cbs() function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; psi4.energy(), psi4.gradient(), etc. For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. energy('mp2/cc-pv[dt]z'); energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'); energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z""}]). A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item below more; conveniently than the equivalent second and third items. optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz'); optimize(cbs, corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz'); optimize(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvqz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[tq]z""}, {""wfn"": ""ccsd(t)"", ""basis"": ""cc-pvdz""}]). Many examples can be found at cbs-xtpl-energy,; cbs-xtpl-gradient, cbs-xtpl-opt,; cbs-xtpl-freq, cbs-xtpl-func,; cbs-xtpl-wrapper, cbs-xtpl-dict. psi4.cbs(name[, scf_basis, scf_scheme, corl_wfn, corl_basis, corl_scheme, delta_wfn, delta_wfn_lesser, delta_basis, delta_scheme, delta2_wfn, delta2_wfn_lesser, delta2_basis, delta2_scheme, cbs_metadata])[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:complete_basis_set(). Returns:(float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CO",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/cbs-1.html:892,optimiz,optimization,892,psi4manual/1.3.2/cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/cbs-1.html,2,['optimiz'],['optimization']
Performance,"﻿. Complete Basis Set. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Complete Basis Set. Complete Basis Set¶. Code author: Lori A. Burns, Daniel G. A. Smith and Peter Kraus; Section author: Lori A. Burns and Peter Kraus; The psi4.cbs() function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; psi4.energy(), psi4.gradient(), etc. For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. energy('mp2/cc-pv[dt]z'); energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'); energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z""}]). A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item below more; conveniently than the equivalent second and third items. optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz'); optimize(cbs, corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz'); optimize(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvqz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[tq]z""}, {""wfn"": ""ccsd(t)"", ""basis"": ""cc-pvdz""}]). Many examples can be found at cbs-xtpl-energy,; cbs-xtpl-gradient, cbs-xtpl-opt,; cbs-xtpl-freq, cbs-xtpl-func,; cbs-xtpl-wrapper, cbs-xtpl-dict. psi4.cbs(name[, scf_basis, scf_scheme, corl_wfn, corl_basis, corl_scheme, delta_wfn, delta_wfn_lesser, delta_basis, delta_scheme, delta2_wfn, delta2_wfn_lesser, delta2_basis, delta2_scheme, cbs_metadata])[source]; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases; complete_basis_set(). Returns; (float) – Total electronic energy in Hartrees. PSI variables. CBS TOTAL ENERGY; CBS REFERE",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/cbs-1.html:910,optimiz,optimization,910,psi4manual/1.4.0/cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/cbs-1.html,2,['optimiz'],['optimization']
Performance,"﻿. Complete Basis Set. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Complete Basis Set. Complete Basis Set¶. Code author: Lori A. Burns, Daniel G. A. Smith and Peter Kraus; Section author: Lori A. Burns and Peter Kraus; The psi4.cbs() function described below is; powerful but complicated, requiring many options. For most common; calculations, a shorthand can be accessed directly though; psi4.energy(), psi4.gradient(), etc. For example,; a MP2 single-point DT extrapolation can be accessed through the first item; below more conveniently than the equivalent second or third items. energy('mp2/cc-pv[dt]z'); energy(cbs, corl_wfn='mp2', corl_basis='cc-pv[dt]z'); energy(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvtz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[dt]z""}]). A CCSD(T) DT coupled-cluster correction atop a TQ MP2 extrapolation; geometry optimization can also be accessed through the first item below more; conveniently than the equivalent second and third items. optimize('mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz'); optimize(cbs, corl_wfn='mp2', corl_basis='cc-pv[tq]z', delta_wfn='ccsd(t)', delta_basis='cc-pvdz'); optimize(cbs, cbs_metadata=[{""wfn"": ""hf"", ""basis"": ""cc-pvqz""}, {""wfn"": ""mp2"", ""basis"": ""cc-pv[tq]z""}, {""wfn"": ""ccsd(t)"", ""basis"": ""cc-pvdz""}]). Many examples can be found at cbs-xtpl-energy,; cbs-xtpl-gradient, cbs-xtpl-opt,; cbs-xtpl-freq, cbs-xtpl-func,; cbs-xtpl-wrapper, cbs-xtpl-dict. psi4.cbs(name[, scf_basis, scf_scheme, corl_wfn, corl_basis, corl_scheme, delta_wfn, delta_wfn_lesser, delta_basis, delta_scheme, delta2_wfn, delta2_wfn_lesser, delta2_basis, delta2_scheme, cbs_metadata])[source]; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases; complete_basis_set(). Returns; (float) – Total electronic energy in Hartrees. PSI variables. CBS TOTAL ENERGY; CBS REFERE",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/cbs-1.html:910,optimiz,optimization,910,psi4manual/1.5.0/cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/cbs-1.html,2,['optimiz'],['optimization']
Performance,"﻿. Conda Binary Distribution. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Installation and Runtime Configuration. Conda Binary Distribution¶; PSI4 is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) architectures; through Continuum Analytics, the company that produces; Anaconda Python (a; full-fledged scientific python environment with package manager conda) and, more particularly, Miniconda (a lightweight python; distribution with same package manager conda). Some nice features for us:. cross-platform; no root, administrator, or sudo access required; built with high-performance math libraries; lightweight software stack (<100 MB w/o PSI4; ~1 GB including PSI4, numpy, and MKL); updated nightly so new features accessible; standardizes python distribution so no need to find/install libpython packages; add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages; develop PSI4 through plugins without a pre-existing development environment, see Creating a New Plugin Using a Conda Pre-compiled Binary. The PSI4 binary repository is at Anaconda (formerly Binstar).; For commands to get a default installation, go to How to install a Psi4 binary with the Psi4conda installer, command-line; or the psicode downloads page; (pre-release downloads page).; Users proficient with conda may prefer to consult What do the conda packages psi4 & psi4-dev and the installer psi4conda contain.; For more flexibility and a detailed explanation, go to; Detailed Installation of Miniconda and Detailed Installation of . How to install a Psi4 binary with the Psi4conda installer, download site¶; Download one of the nine installers (Linux/Mac/Windows; Py27/35/36).; bash it. Follow the prompts and do make the adjustments to; PATH and PSI_SCRATCH that it suggests at the end. Test; with psi4 --test. Done. Explicit commands at How to install a Psi4 binary with the Psi4conda installer, command-l",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/conda-1.html:643,perform,performance,643,psi4manual/1.1.0/conda-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/conda-1.html,2,['perform'],['performance']
Performance,"﻿. Conda Binary Distribution. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Installation and Runtime Configuration. Conda Binary Distribution¶. Warning; As of v1.2rc1, new (conda build 3; updated compilers); conda packages are available for Linux but not Mac).; Psi4conda installers are not ready for either platform. PSI4 is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) architectures; through Continuum Analytics, the company that produces; Anaconda Python (a; full-fledged scientific python environment with package manager conda) and, more particularly, Miniconda (a lightweight python; distribution with same package manager conda). Some nice features for us:. cross-platform; no root, administrator, or sudo access required; built with high-performance math libraries; lightweight software stack (<100 MB w/o PSI4; ~1 GB including PSI4, numpy, and MKL); updated nightly so new features accessible; standardizes python distribution so no need to find/install libpython packages; add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages; develop PSI4 through plugins without a pre-existing development environment, see Creating a New Plugin Using a Conda Pre-compiled Binary. The PSI4 binary repository is at Anaconda (formerly Binstar).; For commands to get a default installation, go to How to install a Psi4 binary with the Psi4conda installer, command-line; or the psicode downloads page; (pre-release downloads page).; Users proficient with conda may prefer to consult What do the conda packages psi4 & psi4-dev and the installer psi4conda contain.; For more flexibility and a detailed explanation, go to; Detailed Installation of Miniconda and Detailed Installation of . How to install a Psi4 binary with the Psi4conda installer, download site¶; Download one of the nine installers (Linux/Mac/Windows; Py27/35/36).; bash it. Follow the prompts and do make the adjustmen",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/conda-1.html:819,perform,performance,819,psi4manual/1.2.1/conda-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/conda-1.html,2,['perform'],['performance']
Performance,"﻿. Conda Binary Distribution. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Installation and Runtime Configuration. Conda Binary Distribution¶. Warning; As of v1.2rc1, new (conda build 3; updated compilers); conda packages are available for Linux but not Mac).; Psi4conda installers are not ready for either platform. PSI4 is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) architectures; through Continuum Analytics, the company that produces; Anaconda Python (a; full-fledged scientific python environment with package manager conda) and, more particularly, Miniconda (a lightweight python; distribution with same package manager conda). Some nice features for us:. cross-platform; no root, administrator, or sudo access required; built with high-performance math libraries; lightweight software stack (<100 MB w/o PSI4; ~1 GB including PSI4, numpy, and MKL); updated nightly so new features accessible; standardizes python distribution so no need to find/install libpython packages; add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages; develop PSI4 through plugins without a pre-existing development environment, see Creating a New Plugin Using a Conda Pre-compiled Binary. The PSI4 binary repository is at Anaconda (formerly Binstar).; For commands to get a default installation, go to How to install a Psi4 binary with the Psi4conda installer, command-line; or the psicode downloads page; (pre-release downloads page).; Users proficient with conda may prefer to consult What do the conda packages psi4 & psi4-dev and the installer psi4conda contain.; For more flexibility and a detailed explanation, go to; Detailed Installation of Miniconda and Detailed Installation of . How to install a Psi4 binary with the Psi4conda installer, download site¶; Download one of the nine installers (Linux/Mac/Windows; Py27/35/36).; bash it. Follow the prompts and do make the adjustmen",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/conda-1.html:819,perform,performance,819,psi4manual/1.3.2/conda-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/conda-1.html,2,['perform'],['performance']
Performance,"﻿. Conda Binary Distribution. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Installation and Runtime Configuration; Conda Binary Distribution. Conda Binary Distribution¶. Warning; As of v1.2rc1, new (conda build 3; updated compilers); conda packages are available for Linux but not Mac).; Psi4conda installers are not ready for either platform. PSI4 is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) and native Windows architectures; through Anaconda (formerly Continuum Analytics, the company that produces; Anaconda Python (a; full-fledged scientific python environment with package manager conda) and, more particularly, Miniconda (a lightweight Python; distribution with same package manager conda). Some nice features for us:. cross-platform; no root, administrator, or sudo access required; built with high-performance math libraries; lightweight software stack (<100 MB w/o PSI4; ~1 GB including PSI4, numpy, and MKL); updated nightly so new features accessible; standardizes python distribution so no need to find/install libpython packages; add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages; develop PSI4 through plugins without a pre-existing development environment, see Creating a New Plugin Using a Conda Pre-compiled Binary. The PSI4 binary repository is at Anaconda (formerly Binstar).; For commands to get a default installation, go to How to install a Psi4 binary with the Psi4conda installer, command-line; or the psicode downloads page.; Users proficient with conda may prefer to consult What do the conda packages psi4 & psi4-dev and the installer psi4conda contain.; For more flexibility and a detailed explanation, go to; Detailed Installation of Miniconda and Detailed Installation of . How to install a Psi4 binary with the Psi4conda installer, download site¶; Download one of the nine installers (Linux/Mac/Windows; Py36/37/38/39).; bash it. Follow t",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/conda-1.html:882,perform,performance,882,psi4manual/1.4.0/conda-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/conda-1.html,2,['perform'],['performance']
Performance,"﻿. Conda Binary Distribution. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Installation and Runtime Configuration; Conda Binary Distribution. Conda Binary Distribution¶. Warning; As of v1.2rc1, new (conda build 3; updated compilers); conda packages are available for Linux but not Mac).; Psi4conda installers are not ready for either platform. PSI4 is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) and native Windows architectures; through Anaconda (formerly Continuum Analytics, the company that produces; Anaconda Python (a; full-fledged scientific python environment with package manager conda) and, more particularly, Miniconda (a lightweight Python; distribution with same package manager conda). Some nice features for us:. cross-platform; no root, administrator, or sudo access required; built with high-performance math libraries; lightweight software stack (<100 MB w/o PSI4; ~1 GB including PSI4, numpy, and MKL); updated nightly so new features accessible; standardizes python distribution so no need to find/install libpython packages; add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages; develop PSI4 through plugins without a pre-existing development environment, see Creating a New Plugin Using a Conda Pre-compiled Binary. The PSI4 binary repository is at Anaconda (formerly Binstar).; For commands to get a default installation, go to How to install a Psi4 binary with the Psi4conda installer, command-line; or the psicode downloads page.; Users proficient with conda may prefer to consult What do the conda packages psi4 & psi4-dev and the installer psi4conda contain.; For more flexibility and a detailed explanation, go to; Detailed Installation of Miniconda and Detailed Installation of . How to install a Psi4 binary with the Psi4conda installer, download site¶; Download one of the nine installers (Linux/Mac/Windows; Py36/37/38/39).; bash it. Follow t",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/conda-1.html:882,perform,performance,882,psi4manual/1.5.0/conda-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/conda-1.html,2,['perform'],['performance']
Performance,"﻿. Conda Binary Distribution. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Installation and Runtime Configuration; Conda Binary Distribution. Conda Binary Distribution¶. Warning; As of v1.2rc1, new (conda build 3; updated compilers); conda packages are available for Linux but not Mac).; Psi4conda installers are not ready for either platform. PSI4 is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) and native Windows architectures; through Anaconda (formerly Continuum Analytics, the company that produces; Anaconda Python (a; full-fledged scientific python environment with package manager conda) and, more particularly, Miniconda (a lightweight Python; distribution with same package manager conda). Some nice features for us:. cross-platform; no root, administrator, or sudo access required; built with high-performance math libraries; lightweight software stack (<100 MB w/o PSI4; ~1 GB including PSI4, numpy, and MKL); updated nightly so new features accessible; standardizes python distribution so no need to find/install libpython packages; add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages; develop PSI4 through plugins without a pre-existing development environment, see Creating a New Plugin Using a Conda Pre-compiled Binary. The PSI4 binary repository is at Anaconda (formerly Binstar).; For commands to get a default installation, go to How to install a Psi4 binary with the Psi4conda installer, command-line; or the psicode downloads page .; Users proficient with conda may prefer to consult What do the conda packages psi4 & psi4-dev and the installer psi4conda contain.; For more flexibility and a detailed explanation, go to; Detailed Installation of Miniconda and Detailed Installation of . How to install a Psi4 binary with the Psi4conda installer, download site¶; Download one of the nine installers (Linux/Mac/Windows; Py38/39/310).; bash it. Follow th",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/conda.html:882,perform,performance,882,psi4manual/1.6.x/conda.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/conda.html,1,['perform'],['performance']
Performance,"﻿. Conda Binary Distribution. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Installation and Runtime Configuration; Conda Binary Distribution. Conda Binary Distribution¶. Warning; As of v1.2rc1, new (conda build 3; updated compilers); conda packages are available for Linux but not Mac).; Psi4conda installers are not ready for either platform. PSI4 is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) and native Windows architectures; through Anaconda (formerly Continuum Analytics, the company that produces; Anaconda Python (a; full-fledged scientific python environment with package manager conda) and, more particularly, Miniconda (a lightweight Python; distribution with same package manager conda). Some nice features for us:. cross-platform; no root, administrator, or sudo access required; built with high-performance math libraries; lightweight software stack (<100 MB w/o PSI4; ~1 GB including PSI4, numpy, and MKL); updated nightly so new features accessible; standardizes python distribution so no need to find/install libpython packages; add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages; develop PSI4 through plugins without a pre-existing development environment, see Creating a New Plugin Using a Conda Pre-compiled Binary. The PSI4 binary repository is at Anaconda (formerly Binstar).; For commands to get a default installation, go to How to install a Psi4 binary with the Psi4conda installer, command-line; or the psicode downloads page .; Users proficient with conda may prefer to consult What do the conda packages psi4 & psi4-dev and the installer psi4conda contain.; For more flexibility and a detailed explanation, go to; Detailed Installation of Miniconda and Detailed Installation of . How to install a Psi4 binary with the Psi4conda installer, download site¶; Download one of the nine installers (Linux/Mac/Windows; Py38/39/310).; bash it. Follow th",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/conda.html:882,perform,performance,882,psi4manual/1.7.x/conda.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/conda.html,1,['perform'],['performance']
Performance,"﻿. ConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; ConvergenceError. ConvergenceError¶. exception psi4.driver.ConvergenceError(eqn_description, iteration, additional_info=None)[source]¶; Error called for problems with converging an iterative method. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., SCF, optimization).; iteration (int) – Iteration number on which routine failed.; additional_info (Optional[str]) – Any additional message to convey. message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. table of contents. ConvergenceError; ConvergenceError; ConvergenceError.message; ConvergenceError.iteration. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; ConvergenceError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.ConvergenceError.html:415,optimiz,optimization,415,psi4manual/master/api/psi4.driver.ConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.ConvergenceError.html,1,['optimiz'],['optimization']
Performance,"﻿. ConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; ConvergenceError. ConvergenceError¶. exception psi4.driver.ConvergenceError(eqn_description, iteration, additional_info=None)[source]¶; Error called for problems with converging an iterative method. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., SCF, optimization).; iteration (int) – Iteration number on which routine failed.; additional_info (Optional[str]) – Any additional message to convey. message¶; Human readable string describing the exception. Type:; str. iteration¶; Iteration number on which routine failed. Type:; int. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; ConvergenceError. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.ConvergenceError.html:406,optimiz,optimization,406,psi4manual/1.7.x/api/psi4.driver.ConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.ConvergenceError.html,1,['optimiz'],['optimization']
Performance,"﻿. ConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; ConvergenceError. ConvergenceError¶. exception psi4.driver.ConvergenceError(eqn_description, iteration, additional_info=None)[source]¶; Error called for problems with converging an iterative method. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., SCF, optimization).; iteration (int) – Iteration number on which routine failed.; additional_info (Optional[str]) – Any additional message to convey. message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. table of contents. ConvergenceError; ConvergenceError; ConvergenceError.message; ConvergenceError.iteration. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; ConvergenceError. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.ConvergenceError.html:408,optimiz,optimization,408,psi4manual/1.8.x/api/psi4.driver.ConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.ConvergenceError.html,1,['optimiz'],['optimization']
Performance,"﻿. ConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; ConvergenceError. ConvergenceError¶. exception psi4.driver.ConvergenceError(eqn_description, iteration, additional_info=None)[source]¶; Error called for problems with converging an iterative method. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., SCF, optimization).; iteration (int) – Iteration number on which routine failed.; additional_info (Optional[str]) – Any additional message to convey. message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. table of contents. ConvergenceError; ConvergenceError; ConvergenceError.message; ConvergenceError.iteration. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; ConvergenceError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.ConvergenceError.html:408,optimiz,optimization,408,psi4manual/1.9.x/api/psi4.driver.ConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.ConvergenceError.html,1,['optimiz'],['optimization']
Performance,"﻿. Creating New Plugins. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Adding New Code to PSI4; Creating New Plugins. Creating New Plugins¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; >>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; >>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; >>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/plugins.html:857,load,loaded,857,psi4manual/master/plugins.html,https://psicode.org,https://psicode.org/psi4manual/master/plugins.html,1,['load'],['loaded']
Performance,"﻿. Creating New Plugins. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Adding New Code to PSI4. Creating New Plugins¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; >>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; 1; 2; 3; 4>>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; 1; 2; 3; 4; 5; 6>>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --plu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/plugins-1.html:828,load,loaded,828,psi4manual/1.3.2/plugins-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/plugins-1.html,2,['load'],['loaded']
Performance,"﻿. Creating New Plugins. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Adding New Code to PSI4; Creating New Plugins. Creating New Plugins¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; >>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; >>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; >>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --plugin-te",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/plugins-1.html:848,load,loaded,848,psi4manual/1.4.0/plugins-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/plugins-1.html,2,['load'],['loaded']
Performance,"﻿. Creating New Plugins. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Adding New Code to PSI4; Creating New Plugins. Creating New Plugins¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; >>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; >>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; >>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --plugin-te",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/plugins-1.html:848,load,loaded,848,psi4manual/1.5.0/plugins-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/plugins-1.html,2,['load'],['loaded']
Performance,"﻿. Creating New Plugins. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Adding New Code to PSI4; Creating New Plugins. Creating New Plugins¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; >>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; >>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; >>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --plugin-te",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/plugins.html:848,load,loaded,848,psi4manual/1.6.x/plugins.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/plugins.html,1,['load'],['loaded']
Performance,"﻿. Creating New Plugins. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Adding New Code to PSI4; Creating New Plugins. Creating New Plugins¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; >>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; >>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; >>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --plugin-te",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/plugins.html:848,load,loaded,848,psi4manual/1.7.x/plugins.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/plugins.html,1,['load'],['loaded']
Performance,"﻿. Creating New Plugins. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Adding New Code to PSI4; Creating New Plugins. Creating New Plugins¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; >>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; >>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; >>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --plugin-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/plugins.html:850,load,loaded,850,psi4manual/1.8.x/plugins.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/plugins.html,1,['load'],['loaded']
Performance,"﻿. Creating New Plugins. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Adding New Code to PSI4; Creating New Plugins. Creating New Plugins¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; >>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; >>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; >>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --plugin-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/plugins.html:850,load,loaded,850,psi4manual/1.9.x/plugins.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/plugins.html,1,['load'],['loaded']
Performance,"﻿. DAMPING_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SCF ». DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Type: conv double; Default: 1.0e-18. Previous topic; D_CONVERGENCE; Next topic; DAMPING_PERCENTAGE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/scf__damping_convergence-1.html:252,perform,performed,252,psi4manual/4.0b2/autodir_options_c/scf__damping_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/scf__damping_convergence-1.html,2,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SCF ». DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Type: conv double; Default: 1.0e-18. Previous topic; D_CONVERGENCE; Next topic; DAMPING_PERCENTAGE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/scf__damping_convergence-1.html:267,perform,performed,267,psi4manual/4.0b3/autodir_options_c/scf__damping_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/scf__damping_convergence-1.html,2,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Type: conv double; Default: 1.0e-18. Previous topic; D_CONVERGENCE; Next topic; DAMPING_PERCENTAGE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__damping_convergence-1.html:267,perform,performed,267,psi4manual/4.0b4/autodir_options_c/scf__damping_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__damping_convergence-1.html,2,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Type: conv double; Default: 1.0e-18. Previous topic; D_CONVERGENCE; Next topic; DAMPING_PERCENTAGE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__damping_convergence-1.html:267,perform,performed,267,psi4manual/4.0b5/autodir_options_c/scf__damping_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__damping_convergence-1.html,2,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Cfour Interface: Keyword translates into CFOUR_SCF_DAMPING. Type: conv double; Default: 1.0e-18. Previous topic; D_CONVERGENCE; Next topic; DAMPING_PERCENTAGE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__damping_convergence-1.html:274,perform,performed,274,psi4manual/1.0.0/autodir_options_c/scf__damping_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__damping_convergence-1.html,2,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Cfour Interface: Keyword translates into CFOUR_SCF_DAMPING. Type: conv double; Default: 1.0e-18. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__damping_convergence.html:248,perform,performed,248,psi4manual/master/autodir_options_c/scf__damping_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__damping_convergence.html,1,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Cfour Interface: Keyword translates into CFOUR_SCF_DAMPING. Type: conv double; Default: 1.0e-18. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__damping_convergence-1.html:239,perform,performed,239,psi4manual/1.4.0/autodir_options_c/scf__damping_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__damping_convergence-1.html,2,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Cfour Interface: Keyword translates into CFOUR_SCF_DAMPING. Type: conv double; Default: 1.0e-18. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__damping_convergence-1.html:239,perform,performed,239,psi4manual/1.5.0/autodir_options_c/scf__damping_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__damping_convergence-1.html,2,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Cfour Interface: Keyword translates into CFOUR_SCF_DAMPING. Type: conv double; Default: 1.0e-18. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__damping_convergence.html:239,perform,performed,239,psi4manual/1.6.x/autodir_options_c/scf__damping_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__damping_convergence.html,1,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Cfour Interface: Keyword translates into CFOUR_SCF_DAMPING. Type: conv double; Default: 1.0e-18. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__damping_convergence.html:239,perform,performed,239,psi4manual/1.7.x/autodir_options_c/scf__damping_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__damping_convergence.html,1,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Cfour Interface: Keyword translates into CFOUR_SCF_DAMPING. Type: conv double; Default: 1.0e-18. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__damping_convergence.html:241,perform,performed,241,psi4manual/1.8.x/autodir_options_c/scf__damping_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__damping_convergence.html,1,['perform'],['performed']
Performance,"﻿. DAMPING_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. DAMPING_CONVERGENCE¶. The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Cfour Interface: Keyword translates into CFOUR_SCF_DAMPING. Type: conv double; Default: 1.0e-18. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; DAMPING_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__damping_convergence.html:241,perform,performed,241,psi4manual/1.9.x/autodir_options_c/scf__damping_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__damping_convergence.html,1,['perform'],['performed']
Performance,"﻿. DCFT — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». DCFT¶; Performs Density Cumulant Functional Theory computations. General¶. ALGORITHM¶. The algorithm to use for the density cumulant and orbital updates in the energy computation. Two-step algorithm (default) is generally more efficient and shows better convergence than simultaneous. Type: string; Possible Values: TWOSTEP, SIMULTANEOUS; Default: TWOSTEP. AO_BASIS¶. Controls whether to avoid the AO->MO transformation of the two-electron integrals for the four-virtual case (<VV||VV>) by computing the corresponding terms in the AO basis. AO_BASIS = DISK algorithm reduces the memory requirements. It is, however, less efficient due to the extra I/O, so the default algorithm is preferred. Type: string; Possible Values: NONE, DISK; Default: NONE. CACHELEVEL¶. Controls how to cache quantities within the DPD library. Type: integer; Default: 2. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the orbital update procedure: 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the previous iteration’s density being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 3. DIIS_START_CONVERGENCE¶. Value of RMS of the density cumulant residual and SCF error vector below which DIIS extrapolation starts. Same keyword controls the DIIS extrapolation for the solution of the response equations. Type: conv double; Default: 1e-3. IGNORE_TAU¶. Controls whether to ignore terms containing non-idempotent contribution to OPDM or not (for debug puproses only). For practical applications only the default",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__dcft-1.html:920,cache,cache,920,psi4manual/4.0b2/autodir_options_c/module__dcft-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__dcft-1.html,2,['cache'],['cache']
Performance,"﻿. DFOCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitute equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute <S2> for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__dfocc-1.html:204,optimiz,optimized,204,psi4manual/1.0.0/autodir_options_c/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; PSI Variables by Module ». DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (AT) CORRECTION ENERGY; (T) CORRECTION ENERGY; CCD CORRELATION ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY. Previous topic; DFMP2; Next topic; DMRG. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; PSI Variables by Module ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_psivariables/module__dfocc-1.html:209,optimiz,optimized,209,psi4manual/1.0.0/autodir_psivariables/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_psivariables/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__dfocc.html:166,optimiz,optimized,166,psi4manual/master/autodir_options_c/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__dfocc.html,1,['optimiz'],['optimized']
Performance,﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (T) CORRECTION ENERGY; A-(T) CORRECTION ENERGY; A-CCSD(T) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; CCD CORRELATION ENERGY; CCD DOUBLES ENERGY; CCD SINGLES ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD DOUBLES ENERGY; CCSD SINGLES ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 OPPOSITE-SPIN CORRELATION ENERGY; OMP3 REFERENCE CORRECTION ENERGY; OMP3 SAME-SPIN CORRELATION ENERGY; OMP3 TOTAL ENERGY; OREMP2 CORRELATION ENERGY; OREMP2 REFERENCE CORRECTION ENERGY; OREMP2 TOTAL ENERGY; REMP2 CORRELATION ,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__dfocc.html:171,optimiz,optimized,171,psi4manual/master/autodir_psivariables/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criter",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__dfocc-1.html:150,optimiz,optimized,150,psi4manual/1.1.0/autodir_options_c/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; PSI Variables by Module. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (AT) CORRECTION ENERGY; (T) CORRECTION ENERGY; CCD CORRELATION ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; PSI Variables by Module. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_psivariables/module__dfocc-1.html:155,optimiz,optimized,155,psi4manual/1.1.0/autodir_psivariables/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_psivariables/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence crit",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__dfocc-1.html:152,optimiz,optimized,152,psi4manual/1.2.1/autodir_options_c/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; PSI Variables by Module. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (AT) CORRECTION ENERGY; (T) CORRECTION ENERGY; CCD CORRELATION ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; PSI Variables by Module. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_psivariables/module__dfocc-1.html:157,optimiz,optimized,157,psi4manual/1.2.1/autodir_psivariables/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_psivariables/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence crit",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__dfocc-1.html:152,optimiz,optimized,152,psi4manual/1.3.2/autodir_options_c/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; PSI Variables by Module. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (AT) CORRECTION ENERGY; (T) CORRECTION ENERGY; CCD CORRELATION ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; PSI Variables by Module. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_psivariables/module__dfocc-1.html:157,optimiz,optimized,157,psi4manual/1.3.2/autodir_psivariables/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_psivariables/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__dfocc-1.html:157,optimiz,optimized,157,psi4manual/1.4.0/autodir_options_c/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (AT) CORRECTION ENERGY; (T) CORRECTION ENERGY; CCD CORRELATION ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD DOUBLES ENERGY; CCSD SINGLES ENERGY; CCSD TOTAL ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY; SCS(N)-MP2 TOTAL ENERGY; SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__dfocc-1.html:162,optimiz,optimized,162,psi4manual/1.4.0/autodir_psivariables/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__dfocc-1.html:157,optimiz,optimized,157,psi4manual/1.5.0/autodir_options_c/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (AT) CORRECTION ENERGY; (T) CORRECTION ENERGY; CCD CORRELATION ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD DOUBLES ENERGY; CCSD SINGLES ENERGY; CCSD TOTAL ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY; SCS(N)-MP2 TOTAL ENERGY; SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__dfocc-1.html:162,optimiz,optimized,162,psi4manual/1.5.0/autodir_psivariables/module__dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__dfocc.html:157,optimiz,optimized,157,psi4manual/1.6.x/autodir_options_c/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (AT) CORRECTION ENERGY; (T) CORRECTION ENERGY; CCD CORRELATION ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD DOUBLES ENERGY; CCSD SINGLES ENERGY; CCSD TOTAL ENERGY; CCSD(AT) TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY; SCS(N)-MP2 TOTAL ENERGY; SCS(N)-OMP2 CORRELATION ENERGY; SCS(N)-OMP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__dfocc.html:162,optimiz,optimized,162,psi4manual/1.6.x/autodir_psivariables/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__dfocc.html:157,optimiz,optimized,157,psi4manual/1.7.x/autodir_options_c/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__dfocc.html,1,['optimiz'],['optimized']
Performance,﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (T) CORRECTION ENERGY; A-(T) CORRECTION ENERGY; A-CCSD(T) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; CCD CORRELATION ENERGY; CCD DOUBLES ENERGY; CCD SINGLES ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD DOUBLES ENERGY; CCSD SINGLES ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 OPPOSITE-SPIN CORRELATION ENERGY; OMP3 REFERENCE CORRECTION ENERGY; OMP3 SAME-SPIN CORRELATION ENERGY; OMP3 TOTAL ENERGY; OREMP2 CORRELATION ENERGY; OREMP2 REFERENCE CORRECTION ENERGY; OREMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY; R,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__dfocc.html:162,optimiz,optimized,162,psi4manual/1.7.x/autodir_psivariables/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergen",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__dfocc.html:159,optimiz,optimized,159,psi4manual/1.8.x/autodir_options_c/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__dfocc.html,1,['optimiz'],['optimized']
Performance,﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (T) CORRECTION ENERGY; A-(T) CORRECTION ENERGY; A-CCSD(T) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; CCD CORRELATION ENERGY; CCD DOUBLES ENERGY; CCD SINGLES ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD DOUBLES ENERGY; CCSD SINGLES ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 OPPOSITE-SPIN CORRELATION ENERGY; OMP3 REFERENCE CORRECTION ENERGY; OMP3 SAME-SPIN CORRELATION ENERGY; OMP3 TOTAL ENERGY; OREMP2 CORRELATION ENERGY; OREMP2 REFERENCE CORRECTION ENERGY; OREMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY;,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__dfocc.html:164,optimiz,optimized,164,psi4manual/1.8.x/autodir_psivariables/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_LAMBDA¶. Do solve lambda amplitude equations?. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CHOLESKY¶. Do Cholesky decomposition of the ERI tensor. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. COMPUT_S2¶. Do compute \(\langle \hat{S}^2 \rangle\) for DF-OMP2/DF-MP2?. Type: boolean; Default: false. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 8. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 0.25. EKT_IP¶. Do compute ionization potentials based on the extended Koopmans’ theorem?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergen",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__dfocc.html:159,optimiz,optimized,159,psi4manual/1.9.x/autodir_options_c/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__dfocc.html,1,['optimiz'],['optimized']
Performance,﻿. DFOCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; DFOCC. DFOCC¶; Performs density-fitted orbital-optimized MPn and CC computations and conventional MPn computations. (T) CORRECTION ENERGY; A-(T) CORRECTION ENERGY; A-CCSD(T) CORRELATION ENERGY; A-CCSD(T) TOTAL ENERGY; CCD CORRELATION ENERGY; CCD DOUBLES ENERGY; CCD SINGLES ENERGY; CCD TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD DOUBLES ENERGY; CCSD SINGLES ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; NAUX (SCF); OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 OPPOSITE-SPIN CORRELATION ENERGY; OMP3 REFERENCE CORRECTION ENERGY; OMP3 SAME-SPIN CORRELATION ENERGY; OMP3 TOTAL ENERGY; OREMP2 CORRELATION ENERGY; OREMP2 REFERENCE CORRECTION ENERGY; OREMP2 TOTAL ENERGY; REMP2 CORRELATION ENERGY;,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__dfocc.html:164,optimiz,optimized,164,psi4manual/1.9.x/autodir_psivariables/module__dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. DIIS_START — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. Previous topic; DIIS_MAX_VECS; Next topic; E_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__diis_start-1.html:229,perform,performed,229,psi4manual/4.0b2/autodir_options_c/psimrcc__diis_start-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__diis_start-1.html,2,['perform'],['performed']
Performance,"﻿. DIIS_START — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. Previous topic; DIIS_MAX_VECS; Next topic; E_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__diis_start-1.html:244,perform,performed,244,psi4manual/4.0b3/autodir_options_c/psimrcc__diis_start-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__diis_start-1.html,2,['perform'],['performed']
Performance,"﻿. DIIS_START — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. Previous topic; DIIS_MAX_VECS; Next topic; E_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__diis_start-1.html:244,perform,performed,244,psi4manual/4.0b4/autodir_options_c/psimrcc__diis_start-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__diis_start-1.html,2,['perform'],['performed']
Performance,"﻿. DIIS_START — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. Previous topic; DIIS_MAX_VECS; Next topic; E_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__diis_start-1.html:244,perform,performed,244,psi4manual/4.0b5/autodir_options_c/psimrcc__diis_start-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__diis_start-1.html,2,['perform'],['performed']
Performance,"﻿. DIIS_START — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. Previous topic; DIIS_MAX_VECS; Next topic; E_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__diis_start-1.html:251,perform,performed,251,psi4manual/1.0.0/autodir_options_c/psimrcc__diis_start-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__diis_start-1.html,2,['perform'],['performed']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__diis_start.html:216,perform,performed,216,psi4manual/master/autodir_options_c/psimrcc__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__diis_start.html,1,['perform'],['performed']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. DIIS_START¶. The minimum iteration to start storing DIIS vectors and performing ADIIS/EDIIS. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__diis_start.html:210,perform,performing,210,psi4manual/master/autodir_options_c/scf__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__diis_start.html,1,['perform'],['performing']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__diis_start-1.html:207,perform,performed,207,psi4manual/1.4.0/autodir_options_c/psimrcc__diis_start-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__diis_start-1.html,2,['perform'],['performed']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__diis_start-1.html:207,perform,performed,207,psi4manual/1.5.0/autodir_options_c/psimrcc__diis_start-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__diis_start-1.html,2,['perform'],['performed']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__diis_start.html:207,perform,performed,207,psi4manual/1.6.x/autodir_options_c/psimrcc__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__diis_start.html,1,['perform'],['performed']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. DIIS_START¶. The minimum iteration to start storing DIIS vectors and performing ADIIS/EDIIS. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__diis_start.html:201,perform,performing,201,psi4manual/1.6.x/autodir_options_c/scf__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__diis_start.html,1,['perform'],['performing']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__diis_start.html:207,perform,performed,207,psi4manual/1.7.x/autodir_options_c/psimrcc__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__diis_start.html,1,['perform'],['performed']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. DIIS_START¶. The minimum iteration to start storing DIIS vectors and performing ADIIS/EDIIS. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__diis_start.html:201,perform,performing,201,psi4manual/1.7.x/autodir_options_c/scf__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__diis_start.html,1,['perform'],['performing']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__diis_start.html:209,perform,performed,209,psi4manual/1.8.x/autodir_options_c/psimrcc__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__diis_start.html,1,['perform'],['performed']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. DIIS_START¶. The minimum iteration to start storing DIIS vectors and performing ADIIS/EDIIS. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__diis_start.html:203,perform,performing,203,psi4manual/1.8.x/autodir_options_c/scf__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__diis_start.html,1,['perform'],['performing']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: integer; Default: 2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; DIIS_START. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__diis_start.html:209,perform,performed,209,psi4manual/1.9.x/autodir_options_c/psimrcc__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__diis_start.html,1,['perform'],['performed']
Performance,"﻿. DIIS_START. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. DIIS_START¶. The minimum iteration to start storing DIIS vectors and performing ADIIS/EDIIS. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; DIIS_START. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__diis_start.html:203,perform,performing,203,psi4manual/1.9.x/autodir_options_c/scf__diis_start.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__diis_start.html,1,['perform'],['performing']
Performance,"﻿. DO_SCS — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. Previous topic; DO_LEVEL_SHIFT; Next topic; DO_SOS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__do_scs-1.html:178,perform,perform,178,psi4manual/4.0b3/autodir_options_c/omp2__do_scs-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__do_scs-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». DO_SCS¶. Do perform spin-component-scaled OMP3 (SCS-OMP3)? In all computation, SCS-OMP3 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP3, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. Previous topic; DO_LEVEL_SHIFT; Next topic; DO_SOS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__do_scs-1.html:178,perform,perform,178,psi4manual/4.0b3/autodir_options_c/omp3__do_scs-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__do_scs-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. Previous topic; DO_LEVEL_SHIFT; Next topic; DO_SOS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__do_scs-1.html:177,perform,perform,177,psi4manual/4.0b4/autodir_options_c/occ__do_scs-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__do_scs-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. Previous topic; DO_LEVEL_SHIFT; Next topic; DO_SOS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__do_scs-1.html:177,perform,perform,177,psi4manual/4.0b5/autodir_options_c/occ__do_scs-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__do_scs-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. Previous topic; DO_LEVEL_SHIFT; Next topic; DO_SOS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__do_scs-1.html:186,perform,perform,186,psi4manual/1.0.0/autodir_options_c/dfocc__do_scs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__do_scs-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. Previous topic; DO_LEVEL_SHIFT; Next topic; DO_SOS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__do_scs-1.html:184,perform,perform,184,psi4manual/1.0.0/autodir_options_c/occ__do_scs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__do_scs-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__do_scs.html:147,perform,perform,147,psi4manual/master/autodir_options_c/dfocc__do_scs.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__do_scs.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__do_scs-1.html:138,perform,perform,138,psi4manual/1.4.0/autodir_options_c/dfocc__do_scs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__do_scs-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__do_scs-1.html:138,perform,perform,138,psi4manual/1.5.0/autodir_options_c/dfocc__do_scs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__do_scs-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__do_scs.html:138,perform,perform,138,psi4manual/1.6.x/autodir_options_c/dfocc__do_scs.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__do_scs.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__do_scs.html:138,perform,perform,138,psi4manual/1.7.x/autodir_options_c/dfocc__do_scs.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__do_scs.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__do_scs.html:140,perform,perform,140,psi4manual/1.8.x/autodir_options_c/dfocc__do_scs.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__do_scs.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SCS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SCS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__do_scs.html:140,perform,perform,140,psi4manual/1.9.x/autodir_options_c/dfocc__do_scs.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__do_scs.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. Previous topic; DO_SCS; Next topic; E_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__do_sos-1.html:178,perform,perform,178,psi4manual/4.0b3/autodir_options_c/omp2__do_sos-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__do_sos-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». DO_SOS¶. Do perform spin-opposite-scaled OMP3 (SOS-OMP3)? In all computation, SOS-OMP3 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP3, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. Previous topic; DO_SCS; Next topic; E3_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__do_sos-1.html:178,perform,perform,178,psi4manual/4.0b3/autodir_options_c/omp3__do_sos-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__do_sos-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. Previous topic; DO_SCS; Next topic; E3_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__do_sos-1.html:177,perform,perform,177,psi4manual/4.0b4/autodir_options_c/occ__do_sos-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__do_sos-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. Previous topic; DO_SCS; Next topic; E3_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__do_sos-1.html:177,perform,perform,177,psi4manual/4.0b5/autodir_options_c/occ__do_sos-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__do_sos-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. Previous topic; DO_SCS; Next topic; E3_SCALE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__do_sos-1.html:186,perform,perform,186,psi4manual/1.0.0/autodir_options_c/dfocc__do_sos-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__do_sos-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. Previous topic; DO_SCS; Next topic; E3_SCALE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__do_sos-1.html:184,perform,perform,184,psi4manual/1.0.0/autodir_options_c/occ__do_sos-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__do_sos-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__do_sos.html:147,perform,perform,147,psi4manual/master/autodir_options_c/dfocc__do_sos.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__do_sos.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__do_sos-1.html:138,perform,perform,138,psi4manual/1.4.0/autodir_options_c/dfocc__do_sos-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__do_sos-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__do_sos-1.html:138,perform,perform,138,psi4manual/1.5.0/autodir_options_c/dfocc__do_sos-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__do_sos-1.html,6,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__do_sos.html:138,perform,perform,138,psi4manual/1.6.x/autodir_options_c/dfocc__do_sos.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__do_sos.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__do_sos.html:138,perform,perform,138,psi4manual/1.7.x/autodir_options_c/dfocc__do_sos.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__do_sos.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__do_sos.html:140,perform,perform,140,psi4manual/1.8.x/autodir_options_c/dfocc__do_sos.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__do_sos.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DO_SOS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; DO_SOS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__do_sos.html:140,perform,perform,140,psi4manual/1.9.x/autodir_options_c/dfocc__do_sos.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__do_sos.html,3,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"﻿. DYNAMIC_LEVEL — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. Previous topic; COVALENT_CONNECT; Next topic; ENSURE_BT_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__dynamic_level-1.html:226,optimiz,optimization,226,psi4manual/1.0.0/autodir_options_c/optking__dynamic_level-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__dynamic_level-1.html,2,['optimiz'],['optimization']
Performance,"﻿. DYNAMIC_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__dynamic_level.html:194,optimiz,optimization,194,psi4manual/master/autodir_options_c/optking__dynamic_level.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__dynamic_level.html,1,['optimiz'],['optimization']
Performance,"﻿. DYNAMIC_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__dynamic_level-1.html:185,optimiz,optimization,185,psi4manual/1.4.0/autodir_options_c/optking__dynamic_level-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__dynamic_level-1.html,2,['optimiz'],['optimization']
Performance,"﻿. DYNAMIC_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__dynamic_level-1.html:185,optimiz,optimization,185,psi4manual/1.5.0/autodir_options_c/optking__dynamic_level-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__dynamic_level-1.html,2,['optimiz'],['optimization']
Performance,"﻿. DYNAMIC_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__dynamic_level.html:185,optimiz,optimization,185,psi4manual/1.6.x/autodir_options_c/optking__dynamic_level.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__dynamic_level.html,1,['optimiz'],['optimization']
Performance,"﻿. DYNAMIC_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__dynamic_level.html:185,optimiz,optimization,185,psi4manual/1.7.x/autodir_options_c/optking__dynamic_level.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__dynamic_level.html,1,['optimiz'],['optimization']
Performance,"﻿. DYNAMIC_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__dynamic_level.html:187,optimiz,optimization,187,psi4manual/1.8.x/autodir_options_c/optking__dynamic_level.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__dynamic_level.html,1,['optimiz'],['optimization']
Performance,"﻿. DYNAMIC_LEVEL. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; DYNAMIC_LEVEL. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__dynamic_level.html:187,optimiz,optimization,187,psi4manual/1.9.x/autodir_options_c/optking__dynamic_level.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__dynamic_level.html,1,['optimiz'],['optimization']
Performance,"﻿. DirectJK. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; DirectJK. DirectJK¶. class psi4.core.DirectJK¶; Bases: psi4.core.JK; docstring; Methods Summary. C_add(self, arg0). C_clear(self). C_left_add(self, arg0). C_right_add(self, arg0). D(self). J(self). K(self). basisset(self). build(orbital_basis[, aux, jk_type, do_wK, ...]); Constructs a Psi4 JK object from an input basis. build_JK(*args, **kwargs); Overloaded function. compute(self). do_incfock_iter(self); Return whether an incremental Fock iteration was performed. finalize(self). get_omega(self); Dampening term for range separated DFT. get_omega_alpha(self); Weight for HF exchange term in range-separated DFT. get_omega_beta(self); Weight for dampened exchange term in range-separated DFT. get_wcombine(self); wcombine. initialize(self). memory_estimate(self). name(self). print_header(self); docstring. set_cutoff(self, arg0). set_do_J(self, arg0). set_do_K(self, arg0). set_do_wK(self, arg0). set_memory(self, arg0). set_omega(self, omega); Dampening term for range separated DFT. set_omega_alpha(self, alpha); Weight for HF exchange term in range-separated DFT. set_omega_beta(self, beta); Weight for dampened exchange term in range-separated DFT. set_omp_nthread(self, arg0). set_print(self, arg0). set_wcombine(self, wcombine); Are Exchange terms in one Matrix. wK(self). Methods Documentation. C_add(self: psi4.core.JK, arg0: psi4.core.Matrix) → None¶. C_clear(self: psi4.core.JK) → None¶. C_left_add(self: psi4.core.JK, arg0: psi4.core.Matrix) → None¶. C_right_add(self: psi4.core.JK, arg0: psi4.core.Matrix) → None¶. D(self: psi4.core.JK) → List[psi4.core.Matrix]¶. J(self: psi4.core.JK) → List[psi4.core.Matrix]¶. K(self: psi4.core.JK) → List[psi4.core.Matrix]¶. basisset(self: psi4.core.JK) → psi4.core.BasisSet¶. static build(orbital_basis, aux=None, jk_type=None, do_wK=None, memory=None)¶; Constructs a Psi4 JK object from an input basis. Parameters. orbital_basis (B",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.directjk.html:572,perform,performed,572,psi4manual/1.5.0/api/psi4.core.directjk.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.directjk.html,1,['perform'],['performed']
Performance,"﻿. EXCH_SCALE_ALPHA — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SAPT ». EXCH_SCALE_ALPHA¶. Whether or not to perform exchange scaling for SAPT exchange components. Default is false, i.e. no scaling. If set to true, performs scaling with . If set to a value , performs scaling with . Type: string; Default: FALSE. Previous topic; E_CONVERGENCE; Next topic; FREEZE_CORE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/sapt__exch_scale_alpha-1.html:220,perform,perform,220,psi4manual/1.0.0/autodir_options_c/sapt__exch_scale_alpha-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/sapt__exch_scale_alpha-1.html,6,['perform'],"['perform', 'performs']"
Performance,"﻿. EXCH_SCALE_ALPHA. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. EXCH_SCALE_ALPHA¶. Whether or not to perform exchange scaling for SAPT exchange components. Default is false, i.e. no scaling. If set to true, performs scaling with \(Exch10 / Exch10(S^2)\). If set to a value \(\alpha\), performs scaling with \((Exch10 / Exch10(S^2))^{\alpha}\). Type: string; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/sapt__exch_scale_alpha.html:191,perform,perform,191,psi4manual/master/autodir_options_c/sapt__exch_scale_alpha.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/sapt__exch_scale_alpha.html,3,['perform'],"['perform', 'performs']"
Performance,"﻿. EXCH_SCALE_ALPHA. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. EXCH_SCALE_ALPHA¶. Whether or not to perform exchange scaling for SAPT exchange components. Default is false, i.e. no scaling. If set to true, performs scaling with \(Exch10 / Exch10(S^2)\). If set to a value \(\alpha\), performs scaling with \((Exch10 / Exch10(S^2))^{\alpha}\). Type: string; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/sapt__exch_scale_alpha-1.html:182,perform,perform,182,psi4manual/1.4.0/autodir_options_c/sapt__exch_scale_alpha-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/sapt__exch_scale_alpha-1.html,6,['perform'],"['perform', 'performs']"
Performance,"﻿. EXCH_SCALE_ALPHA. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. EXCH_SCALE_ALPHA¶. Whether or not to perform exchange scaling for SAPT exchange components. Default is false, i.e. no scaling. If set to true, performs scaling with \(Exch10 / Exch10(S^2)\). If set to a value \(\alpha\), performs scaling with \((Exch10 / Exch10(S^2))^{\alpha}\). Type: string; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/sapt__exch_scale_alpha-1.html:182,perform,perform,182,psi4manual/1.5.0/autodir_options_c/sapt__exch_scale_alpha-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/sapt__exch_scale_alpha-1.html,6,['perform'],"['perform', 'performs']"
Performance,"﻿. EXCH_SCALE_ALPHA. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. EXCH_SCALE_ALPHA¶. Whether or not to perform exchange scaling for SAPT exchange components. Default is false, i.e. no scaling. If set to true, performs scaling with \(Exch10 / Exch10(S^2)\). If set to a value \(\alpha\), performs scaling with \((Exch10 / Exch10(S^2))^{\alpha}\). Type: string; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/sapt__exch_scale_alpha.html:182,perform,perform,182,psi4manual/1.6.x/autodir_options_c/sapt__exch_scale_alpha.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/sapt__exch_scale_alpha.html,3,['perform'],"['perform', 'performs']"
Performance,"﻿. EXCH_SCALE_ALPHA. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. EXCH_SCALE_ALPHA¶. Whether or not to perform exchange scaling for SAPT exchange components. Default is false, i.e. no scaling. If set to true, performs scaling with \(Exch10 / Exch10(S^2)\). If set to a value \(\alpha\), performs scaling with \((Exch10 / Exch10(S^2))^{\alpha}\). Type: string; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/sapt__exch_scale_alpha.html:182,perform,perform,182,psi4manual/1.7.x/autodir_options_c/sapt__exch_scale_alpha.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/sapt__exch_scale_alpha.html,3,['perform'],"['perform', 'performs']"
Performance,"﻿. EXCH_SCALE_ALPHA. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. EXCH_SCALE_ALPHA¶. Whether or not to perform exchange scaling for SAPT exchange components. Default is false, i.e. no scaling. If set to true, performs scaling with \(Exch10 / Exch10(S^2)\). If set to a value \(\alpha\), performs scaling with \((Exch10 / Exch10(S^2))^{\alpha}\). Type: string; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/sapt__exch_scale_alpha.html:184,perform,perform,184,psi4manual/1.8.x/autodir_options_c/sapt__exch_scale_alpha.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/sapt__exch_scale_alpha.html,3,['perform'],"['perform', 'performs']"
Performance,"﻿. EXCH_SCALE_ALPHA. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. EXCH_SCALE_ALPHA¶. Whether or not to perform exchange scaling for SAPT exchange components. Default is false, i.e. no scaling. If set to true, performs scaling with \(Exch10 / Exch10(S^2)\). If set to a value \(\alpha\), performs scaling with \((Exch10 / Exch10(S^2))^{\alpha}\). Type: string; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SAPT; EXCH_SCALE_ALPHA. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/sapt__exch_scale_alpha.html:184,perform,perform,184,psi4manual/1.9.x/autodir_options_c/sapt__exch_scale_alpha.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/sapt__exch_scale_alpha.html,3,['perform'],"['perform', 'performs']"
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; F/I-SAPT: Functional Group and/or Intramolecular SAPT. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; The scripts discussed below are located in psi4/psi4/share/psi4/fsapt. F-SAPT: A Representative Example¶; Below, we show an example of using F-SAPT0/jun-cc-pVDZ to analyze the; distribution of the i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/fisapt.html:840,perform,perform,840,psi4manual/master/fisapt.html,https://psicode.org,https://psicode.org/psi4manual/master/fisapt.html,1,['perform'],['perform']
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; A video tutorial series for the use of the FISAPT module is available here.; Specific videos in the series include:. F-SAPT#1.; Describes the use of F-SAPT to analyze the; distribution of the intermolecular interaction energy components between the; various hydr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/fisapt-1.html:776,perform,perform,776,psi4manual/1.1.0/fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/fisapt-1.html,2,['perform'],['perform']
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Theoretical Methods: SCF to FCI. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; A video tutorial series for the use of the FISAPT module is available here.; Specific videos in the series include:. F-SAPT#1.; Describes the use of F-SAPT to analyze the; distribution of the intermolecular interaction energy components between the; various hy",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/fisapt-1.html:778,perform,perform,778,psi4manual/1.2.1/fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/fisapt-1.html,2,['perform'],['perform']
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Theoretical Methods: SCF to FCI. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; A video tutorial series for the use of the FISAPT module is available here.; Specific videos in the series include:. F-SAPT#1.; Describes the use of F-SAPT to analyze the; distribution of the intermolecular interaction energy components between the; various hy",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/fisapt-1.html:778,perform,perform,778,psi4manual/1.3.2/fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/fisapt-1.html,2,['perform'],['perform']
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; F/I-SAPT: Functional Group and/or Intramolecular SAPT. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; A video tutorial series for the use of the FISAPT module is available here.; Specific videos in the series include:. F-SAPT#1.; Describes the use of F-SAPT to analyze the; distribution of the intermolecular ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/fisapt-1.html:831,perform,perform,831,psi4manual/1.4.0/fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/fisapt-1.html,2,['perform'],['perform']
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; F/I-SAPT: Functional Group and/or Intramolecular SAPT. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; A video tutorial series for the use of the FISAPT module is available here.; Specific videos in the series include:. F-SAPT#1.; Describes the use of F-SAPT to analyze the; distribution of the intermolecular ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/fisapt-1.html:831,perform,perform,831,psi4manual/1.5.0/fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/fisapt-1.html,2,['perform'],['perform']
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; F/I-SAPT: Functional Group and/or Intramolecular SAPT. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; A video tutorial series for the use of the FISAPT module is available here.; Specific videos in the series include:. F-SAPT#1.; Describes the use of F-SAPT to analyze the; distribution of the intermolecular ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/fisapt.html:831,perform,perform,831,psi4manual/1.6.x/fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/fisapt.html,1,['perform'],['perform']
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; F/I-SAPT: Functional Group and/or Intramolecular SAPT. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; A video tutorial series for the use of the FISAPT module is available here.; Specific videos in the series include:. F-SAPT#1.; Describes the use of F-SAPT to analyze the; distribution of the intermolecular ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/fisapt.html:831,perform,perform,831,psi4manual/1.7.x/fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/fisapt.html,1,['perform'],['perform']
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; F/I-SAPT: Functional Group and/or Intramolecular SAPT. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; The scripts discussed below are located in psi4/psi4/share/psi4/fsapt. F-SAPT: A Representative Example¶; Below, we show an example of using F-SAPT0/jun-cc-pVDZ to analyze the; distribution of the intermol",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/fisapt.html:833,perform,perform,833,psi4manual/1.8.x/fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/fisapt.html,1,['perform'],['perform']
Performance,"﻿. F/I-SAPT: Functional Group and/or Intramolecular SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; F/I-SAPT: Functional Group and/or Intramolecular SAPT. F/I-SAPT: Functional Group and/or Intramolecular SAPT¶; Code author: Robert M. Parrish; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, FISAPT; The FISAPT module provides two extensions to standard SAPT theory to allow for; (1) an effective two-body partition of the various SAPT terms to localized; chemical functional groups (F-SAPT) and (2) a means to compute the SAPT; interaction between two moieties within the embedding field of a third body; (I-SAPT). F-SAPT is designed to provide additional insight into the chemical; origins of a noncovalent interaction, while I-SAPT allows for one to perform; a SAPT analysis for intramolecular interactions. F-SAPT and I-SAPT can be; deployed together in this module, yielding “F/I-SAPT.” All F/I-SAPT computations; in PSI4 use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein’s SAPT0 code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0.; F-SAPT is detailed over two papers: [Parrish:2014:044115] on our much-earlier; “atomic” SAPT (A-SAPT) and [Parrish:2014:4417] on the finished “functional; group” SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]. I-SAPT; is explained in [Parrish:2015:051103]. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in Parrish’s thesis.; The scripts discussed below are located in psi4/psi4/share/psi4/fsapt. F-SAPT: A Representative Example¶; Below, we show an example of using F-SAPT0/jun-cc-pVDZ to analyze the; distribution of the intermol",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/fisapt.html:833,perform,perform,833,psi4manual/1.9.x/fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/fisapt.html,1,['perform'],['perform']
Performance,"﻿. FAVG — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MCSCF ». FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. Previous topic; E_CONVERGENCE; Next topic; FAVG_START; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mcscf__favg-1.html:203,optimiz,optimization,203,psi4manual/4.0b2/autodir_options_c/mcscf__favg-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mcscf__favg-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FAVG — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MCSCF ». FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. Previous topic; E_CONVERGENCE; Next topic; FAVG_START; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mcscf__favg-1.html:218,optimiz,optimization,218,psi4manual/4.0b3/autodir_options_c/mcscf__favg-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mcscf__favg-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FAVG — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MCSCF ». FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. Previous topic; E_CONVERGENCE; Next topic; FAVG_START; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mcscf__favg-1.html:218,optimiz,optimization,218,psi4manual/4.0b4/autodir_options_c/mcscf__favg-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mcscf__favg-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FAVG — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MCSCF ». FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. Previous topic; E_CONVERGENCE; Next topic; FAVG_START; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mcscf__favg-1.html:218,optimiz,optimization,218,psi4manual/4.0b5/autodir_options_c/mcscf__favg-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mcscf__favg-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FAVG — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MCSCF ». FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. Previous topic; E_CONVERGENCE; Next topic; FAVG_START. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mcscf__favg-1.html:225,optimiz,optimization,225,psi4manual/1.0.0/autodir_options_c/mcscf__favg-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mcscf__favg-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FAVG. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/mcscf__favg.html:184,optimiz,optimization,184,psi4manual/master/autodir_options_c/mcscf__favg.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/mcscf__favg.html,1,['optimiz'],['optimization']
Performance,"﻿. FAVG. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mcscf__favg-1.html:175,optimiz,optimization,175,psi4manual/1.4.0/autodir_options_c/mcscf__favg-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mcscf__favg-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FAVG. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mcscf__favg-1.html:175,optimiz,optimization,175,psi4manual/1.5.0/autodir_options_c/mcscf__favg-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mcscf__favg-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FAVG. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mcscf__favg.html:175,optimiz,optimization,175,psi4manual/1.6.x/autodir_options_c/mcscf__favg.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mcscf__favg.html,1,['optimiz'],['optimization']
Performance,"﻿. FAVG. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mcscf__favg.html:175,optimiz,optimization,175,psi4manual/1.7.x/autodir_options_c/mcscf__favg.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mcscf__favg.html,1,['optimiz'],['optimization']
Performance,"﻿. FAVG. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mcscf__favg.html:177,optimiz,optimization,177,psi4manual/1.8.x/autodir_options_c/mcscf__favg.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mcscf__favg.html,1,['optimiz'],['optimization']
Performance,"﻿. FAVG. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MCSCF; FAVG. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mcscf__favg.html:177,optimiz,optimization,177,psi4manual/1.9.x/autodir_options_c/mcscf__favg.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mcscf__favg.html,1,['optimiz'],['optimization']
Performance,"﻿. FINAL_GEOM_WRITE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». FINAL_GEOM_WRITE¶. Do save and print the geometry from the last projected step at the end of a geometry optimization? Otherwise (and by default), save and print the previous geometry at which was computed the gradient that satisfied the convergence criteria. Type: boolean; Default: false. Previous topic; COVALENT_CONNECT; Next topic; FLEXIBLE_G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__final_geom_write-1.html:268,optimiz,optimization,268,psi4manual/4.0b2/autodir_options_c/optking__final_geom_write-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__final_geom_write-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FINAL_GEOM_WRITE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». FINAL_GEOM_WRITE¶. Do save and print the geometry from the last projected step at the end of a geometry optimization? Otherwise (and by default), save and print the previous geometry at which was computed the gradient that satisfied the convergence criteria. Type: boolean; Default: false. Previous topic; COVALENT_CONNECT; Next topic; FLEXIBLE_G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__final_geom_write-1.html:283,optimiz,optimization,283,psi4manual/4.0b3/autodir_options_c/optking__final_geom_write-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__final_geom_write-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FINAL_GEOM_WRITE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». FINAL_GEOM_WRITE¶. Do save and print the geometry from the last projected step at the end of a geometry optimization? Otherwise (and by default), save and print the previous geometry at which was computed the gradient that satisfied the convergence criteria. Type: boolean; Default: false. Previous topic; COVALENT_CONNECT; Next topic; FLEXIBLE_G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__final_geom_write-1.html:283,optimiz,optimization,283,psi4manual/4.0b4/autodir_options_c/optking__final_geom_write-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__final_geom_write-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FINAL_GEOM_WRITE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». FINAL_GEOM_WRITE¶. Do save and print the geometry from the last projected step at the end of a geometry optimization? Otherwise (and by default), save and print the previous geometry at which was computed the gradient that satisfied the convergence criteria. Type: boolean; Default: false. Previous topic; COVALENT_CONNECT; Next topic; FIXED_BEND; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__final_geom_write-1.html:283,optimiz,optimization,283,psi4manual/4.0b5/autodir_options_c/optking__final_geom_write-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__final_geom_write-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FINAL_GEOM_WRITE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». FINAL_GEOM_WRITE¶. Do save and print the geometry from the last projected step at the end of a geometry optimization? Otherwise (and by default), save and print the previous geometry at which was computed the gradient that satisfied the convergence criteria. Type: boolean; Default: false. Previous topic; ENSURE_BT_CONVERGENCE; Next topic; FIXED_BEND. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__final_geom_write-1.html:290,optimiz,optimization,290,psi4manual/1.0.0/autodir_options_c/optking__final_geom_write-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__final_geom_write-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FINAL_GEOM_WRITE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; FINAL_GEOM_WRITE. FINAL_GEOM_WRITE¶. Do save and print the geometry from the last projected step at the end of a geometry optimization? Otherwise (and by default), save and print the previous geometry at which was computed the gradient that satisfied the convergence criteria. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; FINAL_GEOM_WRITE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__final_geom_write-1.html:252,optimiz,optimization,252,psi4manual/1.4.0/autodir_options_c/optking__final_geom_write-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__final_geom_write-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FINAL_GEOM_WRITE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; FINAL_GEOM_WRITE. FINAL_GEOM_WRITE¶. Do save and print the geometry from the last projected step at the end of a geometry optimization? Otherwise (and by default), save and print the previous geometry at which was computed the gradient that satisfied the convergence criteria. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; FINAL_GEOM_WRITE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__final_geom_write-1.html:252,optimiz,optimization,252,psi4manual/1.5.0/autodir_options_c/optking__final_geom_write-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__final_geom_write-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FINAL_GEOM_WRITE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; FINAL_GEOM_WRITE. FINAL_GEOM_WRITE¶. Do save and print the geometry from the last projected step at the end of a geometry optimization? Otherwise (and by default), save and print the previous geometry at which was computed the gradient that satisfied the convergence criteria. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; FINAL_GEOM_WRITE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__final_geom_write.html:252,optimiz,optimization,252,psi4manual/1.6.x/autodir_options_c/optking__final_geom_write.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__final_geom_write.html,1,['optimiz'],['optimization']
Performance,"﻿. FINDIF — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; POINTS. Previous topic; MP2_SS_SCALE; Next topic; DISP_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__findif-1.html:265,optimiz,optimizations,265,psi4manual/4.0b2/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; POINTS. Previous topic; MP2_SS_SCALE; Next topic; DISP_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__findif-1.html:280,optimiz,optimizations,280,psi4manual/4.0b3/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; GRADIENT_WRITE; HESSIAN_WRITE; POINTS. Previous topic; SAPT_MEM_FACTOR; Next topic; DISP_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__findif-1.html:280,optimiz,optimizations,280,psi4manual/4.0b4/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; GRADIENT_WRITE; HESSIAN_WRITE; POINTS. Previous topic; OPDM_RELAX; Next topic; DISP_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__findif-1.html:280,optimiz,optimizations,280,psi4manual/4.0b5/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; GRADIENT_WRITE; HESSIAN_WRITE; POINTS. Previous topic; QMEFP_POL; Next topic; DISP_SIZE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__findif-1.html:287,optimiz,optimizations,287,psi4manual/1.0.0/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__findif.html:250,optimiz,optimizations,250,psi4manual/master/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__findif.html,1,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__findif-1.html:233,optimiz,optimizations,233,psi4manual/1.1.0/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__findif-1.html:235,optimiz,optimizations,235,psi4manual/1.2.1/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__findif-1.html:235,optimiz,optimizations,235,psi4manual/1.3.2/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__findif-1.html:241,optimiz,optimizations,241,psi4manual/1.4.0/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__findif-1.html:241,optimiz,optimizations,241,psi4manual/1.5.0/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__findif-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__findif.html:241,optimiz,optimizations,241,psi4manual/1.6.x/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__findif.html,1,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__findif.html:241,optimiz,optimizations,241,psi4manual/1.7.x/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__findif.html,1,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__findif.html:243,optimiz,optimizations,243,psi4manual/1.8.x/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__findif.html,1,['optimiz'],['optimizations']
Performance,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__findif.html:243,optimiz,optimizations,243,psi4manual/1.9.x/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__findif.html,1,['optimiz'],['optimizations']
Performance,"﻿. FIXED_COORD_FORCE_CONSTANT — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». FIXED_COORD_FORCE_CONSTANT¶. In constrained optimizations, for coordinates with user-specified equilibrium values, this is the initial force constant (in au) used to apply an additional force to each coordinate. Type: double; Default: 0.5. Previous topic; FIXED_BEND; Next topic; FIXED_DIHEDRAL. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__fixed_coord_force_constant-1.html:240,optimiz,optimizations,240,psi4manual/1.0.0/autodir_options_c/optking__fixed_coord_force_constant-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__fixed_coord_force_constant-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FIXED_COORD_FORCE_CONSTANT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; FIXED_COORD_FORCE_CONSTANT. FIXED_COORD_FORCE_CONSTANT¶. In constrained optimizations, for coordinates with user-specified equilibrium values, this is the initial force constant (in au) used to apply an additional force to each coordinate. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; FIXED_COORD_FORCE_CONSTANT. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__fixed_coord_force_constant-1.html:212,optimiz,optimizations,212,psi4manual/1.4.0/autodir_options_c/optking__fixed_coord_force_constant-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__fixed_coord_force_constant-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FIXED_COORD_FORCE_CONSTANT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; FIXED_COORD_FORCE_CONSTANT. FIXED_COORD_FORCE_CONSTANT¶. In constrained optimizations, for coordinates with user-specified equilibrium values, this is the initial force constant (in au) used to apply an additional force to each coordinate. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; FIXED_COORD_FORCE_CONSTANT. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__fixed_coord_force_constant-1.html:212,optimiz,optimizations,212,psi4manual/1.5.0/autodir_options_c/optking__fixed_coord_force_constant-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__fixed_coord_force_constant-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. FIXED_COORD_FORCE_CONSTANT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; FIXED_COORD_FORCE_CONSTANT. FIXED_COORD_FORCE_CONSTANT¶. In constrained optimizations, for coordinates with user-specified equilibrium values, this is the initial force constant (in au) used to apply an additional force to each coordinate. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; FIXED_COORD_FORCE_CONSTANT. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__fixed_coord_force_constant.html:212,optimiz,optimizations,212,psi4manual/1.6.x/autodir_options_c/optking__fixed_coord_force_constant.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__fixed_coord_force_constant.html,1,['optimiz'],['optimizations']
Performance,"﻿. FNOCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». FNOCC¶. General¶. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SS¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. NAT_ORBS¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCE¶. Cutoff for occupation of MP2 NO orbitals in FNO-QCISD",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__fnocc-1.html:247,optimiz,optimization,247,psi4manual/4.0b4/autodir_options_c/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__fnocc-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FNOCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». FNOCC¶. General¶. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2. Type: double; Default: 1.20. MP2_SCALE_SS¶. Same-spin scaling factor for SCS-MP2. Type: double; Default: 1.0/3.0. NAT_ORBS¶. Do use MP2 NOs to truncate virtual space for QCISD/CCSD and (T)?. Type: boolean; Default: false. OCC_TOLERANCE¶. Cutoff for occupation of MP",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__fnocc-1.html:247,optimiz,optimization,247,psi4manual/4.0b5/autodir_options_c/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__fnocc-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FNOCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__fnocc-1.html:560,optimiz,optimization,560,psi4manual/1.0.0/autodir_options_c/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__fnocc-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FNOCC. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__fnocc.html:522,optimiz,optimization,522,psi4manual/master/autodir_options_c/module__fnocc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__fnocc.html,1,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2. Type: ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__fnocc-1.html:506,optimiz,optimization,506,psi4manual/1.1.0/autodir_options_c/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__fnocc-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2. Type",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__fnocc-1.html:508,optimiz,optimization,508,psi4manual/1.2.1/autodir_options_c/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__fnocc-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2. Type",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__fnocc-1.html:508,optimiz,optimization,508,psi4manual/1.3.2/autodir_options_c/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__fnocc-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FNOCC. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__fnocc-1.html:513,optimiz,optimization,513,psi4manual/1.4.0/autodir_options_c/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__fnocc-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FNOCC. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__fnocc-1.html:513,optimiz,optimization,513,psi4manual/1.5.0/autodir_options_c/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__fnocc-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FNOCC. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__fnocc.html:513,optimiz,optimization,513,psi4manual/1.6.x/autodir_options_c/module__fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__fnocc.html,1,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FNOCC. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP2.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__fnocc.html:513,optimiz,optimization,513,psi4manual/1.7.x/autodir_options_c/module__fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__fnocc.html,1,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FNOCC. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__fnocc.html:515,optimiz,optimization,515,psi4manual/1.8.x/autodir_options_c/module__fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__fnocc.html,1,['optimiz'],['optimization']
Performance,"﻿. FNOCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FNOCC. FNOCC¶. General¶. ACTIVE_NAT_ORBS¶. An array containing the number of virtual natural orbitals per irrep (in Cotton order) so a user can specify the number of retained natural orbitals rather than determining them with OCC_TOLERANCE This keyword overrides OCC_TOLERANCE and OCC_PERCENTAGE. Type: array; Default: No Default. BRUECKNER_MAXITER¶. Maximum number of iterations for Brueckner orbitals optimization. Type: integer; Default: 20. CC_SCALE_OS¶. Oppposite-spin scaling factor for SCS-CCSD. Type: double; Default: 1.27. CC_SCALE_SS¶. Same-spin scaling factor for SCS-CCSD. Type: double; Default: 1.13. CC_TIMINGS¶. Do time each cc diagram?. Type: boolean; Default: false. CEPA_NO_SINGLES¶. Flag to exclude singly excited configurations from a coupled-pair computation. Type: boolean; Default: false. CHOLESKY_TOLERANCE¶. tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. DFCC¶. Do use density fitting or cholesky decomposition in CC? This keyword is used internally by the driver. Changing its value will have no effect on the computation. Type: boolean; Default: false. DF_BASIS_CC¶. Auxilliary basis for df-ccsd(t). Type: string; Possible Values: basis string; Default: No Default. DIIS_MAX_VECS¶. Desired number of DIIS vectors. Type: integer; Default: 8. DIPMOM¶. Compute the dipole moment? Note that dipole moments are only available in the FNOCC module for the ACPF, AQCC, CISD, and CEPA(0) methods. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. MAXITER¶. Maximum number of CC iterations. Type: integer; Default: 100. MP2_SCALE_OS¶. Opposite-spin scaling factor for SCS-MP",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__fnocc.html:515,optimiz,optimization,515,psi4manual/1.9.x/autodir_options_c/module__fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__fnocc.html,1,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 1. Previous topic; FILTER_ZERO_DET; Next topic; FOLLOW_VECTOR; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__follow_root-1.html:333,optimiz,optimization,333,psi4manual/4.0b2/autodir_options_c/detci__follow_root-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__follow_root-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 1. Previous topic; FILTER_ZERO_DET; Next topic; FOLLOW_VECTOR; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__follow_root-1.html:348,optimiz,optimization,348,psi4manual/4.0b3/autodir_options_c/detci__follow_root-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__follow_root-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 1. Previous topic; FILTER_ZERO_DET; Next topic; FOLLOW_VECTOR; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__follow_root-1.html:348,optimiz,optimization,348,psi4manual/4.0b4/autodir_options_c/detci__follow_root-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__follow_root-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 1. Previous topic; FILTER_ZERO_DET; Next topic; FOLLOW_VECTOR; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__follow_root-1.html:348,optimiz,optimization,348,psi4manual/4.0b5/autodir_options_c/detci__follow_root-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__follow_root-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 1. Previous topic; FILTER_ZERO_DET; Next topic; FOLLOW_VECTOR. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__follow_root-1.html:355,optimiz,optimization,355,psi4manual/1.0.0/autodir_options_c/detci__follow_root-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__follow_root-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__follow_root.html:321,optimiz,optimization,321,psi4manual/master/autodir_options_c/detci__follow_root.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__follow_root.html,1,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__follow_root-1.html:312,optimiz,optimization,312,psi4manual/1.4.0/autodir_options_c/detci__follow_root-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__follow_root-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__follow_root-1.html:312,optimiz,optimization,312,psi4manual/1.5.0/autodir_options_c/detci__follow_root-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__follow_root-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__follow_root.html:312,optimiz,optimization,312,psi4manual/1.6.x/autodir_options_c/detci__follow_root.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__follow_root.html,1,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__follow_root.html:312,optimiz,optimization,312,psi4manual/1.7.x/autodir_options_c/detci__follow_root.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__follow_root.html,1,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__follow_root.html:314,optimiz,optimization,314,psi4manual/1.8.x/autodir_options_c/detci__follow_root.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__follow_root.html,1,['optimiz'],['optimization']
Performance,"﻿. FOLLOW_ROOT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. FOLLOW_ROOT¶. The root to write out the two-particle density matrix for (the one-particle density matrices are written for all roots). Useful for a state-specific CASSCF or CI optimization on an excited state. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; FOLLOW_ROOT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__follow_root.html:314,optimiz,optimization,314,psi4manual/1.9.x/autodir_options_c/detci__follow_root.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__follow_root.html,1,['optimiz'],['optimization']
Performance,"﻿. FROZEN_DOCC — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. Type: array; Default: No Default. Previous topic; FREEZE_CORE; Next topic; FROZEN_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/globals__frozen_docc-1.html:318,optimiz,optimized,318,psi4manual/4.0b2/autodir_options_c/globals__frozen_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/globals__frozen_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. Type: array; Default: No Default. Previous topic; FREEZE_CORE; Next topic; FROZEN_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/globals__frozen_docc-1.html:333,optimiz,optimized,333,psi4manual/4.0b3/autodir_options_c/globals__frozen_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/globals__frozen_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. Previous topic; FREEZE_CORE; Next topic; FROZEN_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/globals__frozen_docc-1.html:333,optimiz,optimized,333,psi4manual/4.0b4/autodir_options_c/globals__frozen_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/globals__frozen_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. Previous topic; FREEZE_CORE; Next topic; FROZEN_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/globals__frozen_docc-1.html:333,optimiz,optimized,333,psi4manual/4.0b5/autodir_options_c/globals__frozen_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/globals__frozen_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. Previous topic; FREEZE_CORE; Next topic; FROZEN_UOCC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__frozen_docc-1.html:340,optimiz,optimized,340,psi4manual/1.0.0/autodir_options_c/globals__frozen_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__frozen_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/globals__frozen_docc.html:306,optimiz,optimized,306,psi4manual/master/autodir_options_c/globals__frozen_docc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/globals__frozen_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__frozen_docc-1.html:297,optimiz,optimized,297,psi4manual/1.4.0/autodir_options_c/globals__frozen_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__frozen_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__frozen_docc-1.html:297,optimiz,optimized,297,psi4manual/1.5.0/autodir_options_c/globals__frozen_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__frozen_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__frozen_docc.html:297,optimiz,optimized,297,psi4manual/1.6.x/autodir_options_c/globals__frozen_docc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__frozen_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__frozen_docc.html:297,optimiz,optimized,297,psi4manual/1.7.x/autodir_options_c/globals__frozen_docc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__frozen_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__frozen_docc.html:299,optimiz,optimized,299,psi4manual/1.8.x/autodir_options_c/globals__frozen_docc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__frozen_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. FROZEN_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_DOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__frozen_docc.html:299,optimiz,optimized,299,psi4manual/1.9.x/autodir_options_c/globals__frozen_docc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__frozen_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. Type: array; Default: No Default. Previous topic; FROZEN_DOCC; Next topic; MAT_NUM_COLUMN_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/globals__frozen_uocc-1.html:315,optimiz,optimized,315,psi4manual/4.0b2/autodir_options_c/globals__frozen_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/globals__frozen_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. Type: array; Default: No Default. Previous topic; FROZEN_DOCC; Next topic; MAT_NUM_COLUMN_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/globals__frozen_uocc-1.html:330,optimiz,optimized,330,psi4manual/4.0b3/autodir_options_c/globals__frozen_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/globals__frozen_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. Previous topic; FROZEN_DOCC; Next topic; MAT_NUM_COLUMN_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/globals__frozen_uocc-1.html:330,optimiz,optimized,330,psi4manual/4.0b4/autodir_options_c/globals__frozen_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/globals__frozen_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. Previous topic; FROZEN_DOCC; Next topic; MAT_NUM_COLUMN_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/globals__frozen_uocc-1.html:330,optimiz,optimized,330,psi4manual/4.0b5/autodir_options_c/globals__frozen_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/globals__frozen_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. Previous topic; FROZEN_DOCC; Next topic; INTEGRAL_PACKAGE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__frozen_uocc-1.html:337,optimiz,optimized,337,psi4manual/1.0.0/autodir_options_c/globals__frozen_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__frozen_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/globals__frozen_uocc.html:303,optimiz,optimized,303,psi4manual/master/autodir_options_c/globals__frozen_uocc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/globals__frozen_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__frozen_uocc-1.html:294,optimiz,optimized,294,psi4manual/1.4.0/autodir_options_c/globals__frozen_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__frozen_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__frozen_uocc-1.html:294,optimiz,optimized,294,psi4manual/1.5.0/autodir_options_c/globals__frozen_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__frozen_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__frozen_uocc.html:294,optimiz,optimized,294,psi4manual/1.6.x/autodir_options_c/globals__frozen_uocc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__frozen_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__frozen_uocc.html:294,optimiz,optimized,294,psi4manual/1.7.x/autodir_options_c/globals__frozen_uocc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__frozen_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__frozen_uocc.html:296,optimiz,optimized,296,psi4manual/1.8.x/autodir_options_c/globals__frozen_uocc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__frozen_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. FROZEN_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FROZEN_UOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__frozen_uocc.html:296,optimiz,optimized,296,psi4manual/1.9.x/autodir_options_c/globals__frozen_uocc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__frozen_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. FULL_HESS_EVERY — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. Previous topic; FREEZE_INTRAFRAG; Next topic; G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__full_hess_every-1.html:258,optimiz,optimization,258,psi4manual/4.0b2/autodir_options_c/optking__full_hess_every-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__full_hess_every-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. Previous topic; FREEZE_INTRAFRAG; Next topic; G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__full_hess_every-1.html:273,optimiz,optimization,273,psi4manual/4.0b3/autodir_options_c/optking__full_hess_every-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__full_hess_every-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. Previous topic; FROZEN_DISTANCE; Next topic; G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__full_hess_every-1.html:273,optimiz,optimization,273,psi4manual/4.0b4/autodir_options_c/optking__full_hess_every-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__full_hess_every-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. Previous topic; FROZEN_DISTANCE; Next topic; G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__full_hess_every-1.html:273,optimiz,optimization,273,psi4manual/4.0b5/autodir_options_c/optking__full_hess_every-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__full_hess_every-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. Previous topic; FROZEN_DISTANCE; Next topic; G_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__full_hess_every-1.html:280,optimiz,optimization,280,psi4manual/1.0.0/autodir_options_c/optking__full_hess_every-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__full_hess_every-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__full_hess_every.html:250,optimiz,optimization,250,psi4manual/master/autodir_options_c/optking__full_hess_every.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__full_hess_every.html,1,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__full_hess_every-1.html:241,optimiz,optimization,241,psi4manual/1.4.0/autodir_options_c/optking__full_hess_every-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__full_hess_every-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__full_hess_every-1.html:241,optimiz,optimization,241,psi4manual/1.5.0/autodir_options_c/optking__full_hess_every-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__full_hess_every-1.html,2,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__full_hess_every.html:241,optimiz,optimization,241,psi4manual/1.6.x/autodir_options_c/optking__full_hess_every.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__full_hess_every.html,1,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__full_hess_every.html:241,optimiz,optimization,241,psi4manual/1.7.x/autodir_options_c/optking__full_hess_every.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__full_hess_every.html,1,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__full_hess_every.html:243,optimiz,optimization,243,psi4manual/1.8.x/autodir_options_c/optking__full_hess_every.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__full_hess_every.html,1,['optimiz'],['optimization']
Performance,"﻿. FULL_HESS_EVERY. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. FULL_HESS_EVERY¶. Frequency with which to compute the full Hessian in the course of a geometry optimization. 0 means to compute the initial Hessian only, 1 means recompute every step, and N means recompute every N steps. The default (-1) is to never compute the full Hessian. Type: integer; Default: -1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; FULL_HESS_EVERY. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__full_hess_every.html:243,optimiz,optimization,243,psi4manual/1.9.x/autodir_options_c/optking__full_hess_every.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__full_hess_every.html,1,['optimiz'],['optimization']
Performance,"﻿. Frequency — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Frequency¶. frequency(name[, func, dertype, irrep, molecule])[source]¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) – 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/freq-1.html:1079,perform,performed,1079,psi4manual/4.0b2/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/freq-1.html,2,['perform'],['performed']
Performance,"﻿. Frequency — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Frequency¶. frequency(name[, func, dertype, irrep, molecule])[source]¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) – 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 19,",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/freq-1.html:1094,perform,performed,1094,psi4manual/4.0b3/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/freq-1.html,2,['perform'],['performed']
Performance,"﻿. Frequency — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Frequency¶. frequency(name[, func, dertype, irrep, molecule])[source]¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) – 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/freq-1.html:1094,perform,performed,1094,psi4manual/4.0b4/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html,2,['perform'],['performed']
Performance,"﻿. Frequency — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Frequency¶. frequency(name[, func, mode, dertype, irrep, molecule])[source]¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Implement sow/reap mode for finite difference of gradients. Presently only for findif of energies. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) – 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. mode (string) – 'continuous' || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complet the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file. irrep (int or string) – -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>>",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/freq-1.html:1076,perform,performed,1076,psi4manual/4.0b5/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/freq-1.html,2,['perform'],['performed']
Performance,"﻿. Function Intercalls — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database; —;  ; Y; Y; Y. Optimize; —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Energy; —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; <no title>; Next topic; Embarrassing Parallelism; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/intercalls-1.html:336,optimiz,optimize,336,psi4manual/4.0b2/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/intercalls-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database; —;  ; Y; Y; Y. Optimize; —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Energy; —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; Spectroscopic Constants for Diatomics; Next topic; Interfaces: Enhancing PSI4 Capabilities; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/intercalls-1.html:351,optimiz,optimize,351,psi4manual/4.0b3/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/intercalls-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database; —;  ; Y; Y; Y. Optimize; —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Energy; —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; Spectroscopic Constants for Diatomics; Next topic; Customization: Adding Simple Extensions; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/intercalls-1.html:351,optimiz,optimize,351,psi4manual/4.0b4/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/intercalls-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database; —;  ; Y; Y; Y. Optimize; —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Energy; —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; Spectroscopic Constants for Diatomics; Next topic; Customization: Adding Simple Extensions; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/intercalls-1.html:351,optimiz,optimize,351,psi4manual/4.0b5/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/intercalls-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the Psi4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database, database(); —;  ; Y; Y; Y. Geometry Optimization, optimize() and gradient(); —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Single-Point Energy, energy(); —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; Spectroscopic Constants for Diatomics; Next topic; Embarrassing Parallelism. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navig",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/intercalls-1.html:358,optimiz,optimize,358,psi4manual/1.0.0/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/intercalls-1.html,4,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/intercalls.html:584,optimiz,optimize,584,psi4manual/master/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/master/intercalls.html,1,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee.  ; cp; db; opt; cbs; energy. Basis Set Superposition Corrections;  ; —; Y; Y; Y. Database — database(); —;  ; Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Single-Point Energy — energy(); —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/intercalls-1.html:554,optimiz,optimize,554,psi4manual/1.1.0/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/intercalls-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee.  ; cp; db; opt; cbs; energy. Basis Set Superposition Corrections;  ; —; Y; Y; Y. Database — database(); —;  ; Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Single-Point Energy — energy(); —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be us",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/intercalls-1.html:556,optimiz,optimize,556,psi4manual/1.2.1/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/intercalls-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee.  ; cp; db; opt; cbs; energy. Basis Set Superposition Corrections;  ; —; Y; Y; Y. Database — database(); —;  ; Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Single-Point Energy — energy(); —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be us",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/intercalls-1.html:556,optimiz,optimize,556,psi4manual/1.3.2/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/intercalls-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/intercalls-1.html:575,optimiz,optimize,575,psi4manual/1.4.0/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/intercalls-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/intercalls-1.html:575,optimiz,optimize,575,psi4manual/1.5.0/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/intercalls-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/intercalls.html:575,optimiz,optimize,575,psi4manual/1.6.x/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/intercalls.html,1,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/intercalls.html:575,optimiz,optimize,575,psi4manual/1.7.x/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/intercalls.html,1,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/intercalls.html:577,optimiz,optimize,577,psi4manual/1.8.x/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/intercalls.html,1,['optimiz'],['optimize']
Performance,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/intercalls.html:577,optimiz,optimize,577,psi4manual/1.9.x/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/intercalls.html,1,['optimiz'],['optimize']
Performance,"﻿. GEOM_MAXITER — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 20. Previous topic; G_CONVERGENCE; Next topic; H_BOND_CONNECT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__geom_maxiter-1.html:202,optimiz,optimization,202,psi4manual/4.0b2/autodir_options_c/optking__geom_maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__geom_maxiter-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. Previous topic; G_CONVERGENCE; Next topic; H_BOND_CONNECT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__geom_maxiter-1.html:217,optimiz,optimization,217,psi4manual/4.0b3/autodir_options_c/optking__geom_maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__geom_maxiter-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. Previous topic; G_CONVERGENCE; Next topic; H_BOND_CONNECT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__geom_maxiter-1.html:217,optimiz,optimization,217,psi4manual/4.0b4/autodir_options_c/optking__geom_maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__geom_maxiter-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. Previous topic; G_CONVERGENCE; Next topic; H_BOND_CONNECT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__geom_maxiter-1.html:217,optimiz,optimization,217,psi4manual/4.0b5/autodir_options_c/optking__geom_maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__geom_maxiter-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. Previous topic; G_CONVERGENCE; Next topic; H_BOND_CONNECT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__geom_maxiter-1.html:224,optimiz,optimization,224,psi4manual/1.0.0/autodir_options_c/optking__geom_maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__geom_maxiter-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__geom_maxiter.html:191,optimiz,optimization,191,psi4manual/master/autodir_options_c/optking__geom_maxiter.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__geom_maxiter.html,1,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__geom_maxiter-1.html:182,optimiz,optimization,182,psi4manual/1.4.0/autodir_options_c/optking__geom_maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__geom_maxiter-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__geom_maxiter-1.html:182,optimiz,optimization,182,psi4manual/1.5.0/autodir_options_c/optking__geom_maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__geom_maxiter-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__geom_maxiter.html:182,optimiz,optimization,182,psi4manual/1.6.x/autodir_options_c/optking__geom_maxiter.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__geom_maxiter.html,1,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__geom_maxiter.html:182,optimiz,optimization,182,psi4manual/1.7.x/autodir_options_c/optking__geom_maxiter.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__geom_maxiter.html,1,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__geom_maxiter.html:184,optimiz,optimization,184,psi4manual/1.8.x/autodir_options_c/optking__geom_maxiter.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__geom_maxiter.html,1,['optimiz'],['optimization']
Performance,"﻿. GEOM_MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; GEOM_MAXITER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__geom_maxiter.html:184,optimiz,optimization,184,psi4manual/1.9.x/autodir_options_c/optking__geom_maxiter.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__geom_maxiter.html,1,['optimiz'],['optimization']
Performance,"﻿. GUESS — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». GUESS¶. The type of guess orbitals. Defaults to CORE except for geometry optimizations, in which case READ becomes the default after the first geometry step. Type: string; Possible Values: CORE, GWH, SAD, READ; Default: CORE. Previous topic; FRAC_VAL; Next topic; INTS_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__guess-1.html:237,optimiz,optimizations,237,psi4manual/4.0b4/autodir_options_c/scf__guess-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__guess-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. GUESS — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». GUESS¶. The type of guess orbitals. Defaults to CORE except for geometry optimizations, in which case READ becomes the default after the first geometry step. Type: string; Possible Values: CORE, GWH, SAD, READ; Default: CORE. Previous topic; FRAC_VAL; Next topic; INTS_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__guess-1.html:237,optimiz,optimizations,237,psi4manual/4.0b5/autodir_options_c/scf__guess-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__guess-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. GUESS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». GUESS¶. The type of guess orbitals. Defaults to SAD for RHF, GWH for ROHF and UHF, and READ for geometry optimizations after the first step. Type: string; Possible Values: AUTO, CORE, GWH, SAD, READ; Default: AUTO. Previous topic; FRAC_VAL; Next topic; GUESS_MIX. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__guess-1.html:276,optimiz,optimizations,276,psi4manual/1.0.0/autodir_options_c/scf__guess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__guess-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS. GUESS¶. The type of guess orbitals. Defaults to READ for geometry optimizations after the first step, to CORE for single atoms, and to SAD otherwise. The HUCKEL guess employs on-the-fly calculations like SAD, as described in doi:10.1021/acs.jctc.8b01089 which also describes the SAP guess. Type: string; Possible Values: AUTO, CORE, GWH, SAD, SADNO, SAP, HUCKEL, READ; Default: AUTO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__guess-1.html:188,optimiz,optimizations,188,psi4manual/1.4.0/autodir_options_c/scf__guess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__guess-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS. GUESS¶. The type of guess orbitals. Defaults to READ for geometry optimizations after the first step, to CORE for single atoms, and to SAD otherwise. The HUCKEL guess employs on-the-fly calculations like SAD, as described in doi:10.1021/acs.jctc.8b01089 which also describes the SAP guess. Type: string; Possible Values: AUTO, CORE, GWH, SAD, SADNO, SAP, HUCKEL, READ; Default: AUTO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__guess-1.html:188,optimiz,optimizations,188,psi4manual/1.5.0/autodir_options_c/scf__guess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__guess-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS. GUESS¶. The type of guess orbitals. Defaults to READ for geometry optimizations after the first step, to CORE for single atoms, and to SAD otherwise. The HUCKEL guess employs on-the-fly calculations like SAD, as described in doi:10.1021/acs.jctc.8b01089 which also describes the SAP guess. Type: string; Possible Values: AUTO, CORE, GWH, SAD, SADNO, SAP, HUCKEL, READ; Default: AUTO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__guess.html:188,optimiz,optimizations,188,psi4manual/1.6.x/autodir_options_c/scf__guess.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__guess.html,1,['optimiz'],['optimizations']
Performance,"﻿. GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS. GUESS¶. The type of guess orbitals. Defaults to READ for geometry optimizations after the first step, to CORE for single atoms, and to SAD otherwise. The HUCKEL guess employs on-the-fly calculations like SAD, as described in doi:10.1021/acs.jctc.8b01089 which also describes the SAP guess. Type: string; Possible Values: AUTO, CORE, GWH, SAD, SADNO, SAP, HUCKEL, READ; Default: AUTO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__guess.html:188,optimiz,optimizations,188,psi4manual/1.7.x/autodir_options_c/scf__guess.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__guess.html,1,['optimiz'],['optimizations']
Performance,"﻿. GUESS_PERSIST — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. Previous topic; GUESS_MIX; Next topic; INDEPENDENT_J_TYPE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__guess_persist-1.html:299,optimiz,optimization,299,psi4manual/1.0.0/autodir_options_c/scf__guess_persist-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__guess_persist-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GUESS_PERSIST. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__guess_persist.html:267,optimiz,optimization,267,psi4manual/master/autodir_options_c/scf__guess_persist.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__guess_persist.html,1,['optimiz'],['optimization']
Performance,"﻿. GUESS_PERSIST. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__guess_persist-1.html:258,optimiz,optimization,258,psi4manual/1.4.0/autodir_options_c/scf__guess_persist-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__guess_persist-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GUESS_PERSIST. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__guess_persist-1.html:258,optimiz,optimization,258,psi4manual/1.5.0/autodir_options_c/scf__guess_persist-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__guess_persist-1.html,2,['optimiz'],['optimization']
Performance,"﻿. GUESS_PERSIST. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__guess_persist.html:258,optimiz,optimization,258,psi4manual/1.6.x/autodir_options_c/scf__guess_persist.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__guess_persist.html,1,['optimiz'],['optimization']
Performance,"﻿. GUESS_PERSIST. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__guess_persist.html:258,optimiz,optimization,258,psi4manual/1.7.x/autodir_options_c/scf__guess_persist.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__guess_persist.html,1,['optimiz'],['optimization']
Performance,"﻿. GUESS_PERSIST. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__guess_persist.html:260,optimiz,optimization,260,psi4manual/1.8.x/autodir_options_c/scf__guess_persist.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__guess_persist.html,1,['optimiz'],['optimization']
Performance,"﻿. GUESS_PERSIST. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; GUESS_PERSIST. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__guess_persist.html:260,optimiz,optimization,260,psi4manual/1.9.x/autodir_options_c/scf__guess_persist.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__guess_persist.html,1,['optimiz'],['optimization']
Performance,"﻿. GUESS_R_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». GUESS_R_CONVERGENCE¶. Convergence criterion for the density cumulant and orbital guess for the variationally orbital-optimized DCFT methods. Currently only available for ALGORITHM = SIMULTANEOUS. Type: conv double; Default: 1e-3. Previous topic; ENERGY_LEVEL_SHIFT; Next topic; IGNORE_TAU. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__guess_r_convergence-1.html:303,optimiz,optimized,303,psi4manual/1.0.0/autodir_options_c/dcft__guess_r_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__guess_r_convergence-1.html,2,['optimiz'],['optimized']
Performance,"﻿. GUESS_R_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. GUESS_R_CONVERGENCE¶. Convergence criterion for the density cumulant and orbital guess for the variationally orbital-optimized DFT methods. Currently only available for ALGORITHM = SIMULTANEOUS. Type: conv double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dct__guess_r_convergence.html:276,optimiz,optimized,276,psi4manual/master/autodir_options_c/dct__guess_r_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dct__guess_r_convergence.html,1,['optimiz'],['optimized']
Performance,"﻿. GUESS_R_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. GUESS_R_CONVERGENCE¶. Convergence criterion for the density cumulant and orbital guess for the variationally orbital-optimized DFT methods. Currently only available for ALGORITHM = SIMULTANEOUS. Type: conv double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__guess_r_convergence-1.html:267,optimiz,optimized,267,psi4manual/1.4.0/autodir_options_c/dct__guess_r_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__guess_r_convergence-1.html,2,['optimiz'],['optimized']
Performance,"﻿. GUESS_R_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. GUESS_R_CONVERGENCE¶. Convergence criterion for the density cumulant and orbital guess for the variationally orbital-optimized DFT methods. Currently only available for ALGORITHM = SIMULTANEOUS. Type: conv double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__guess_r_convergence-1.html:267,optimiz,optimized,267,psi4manual/1.5.0/autodir_options_c/dct__guess_r_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__guess_r_convergence-1.html,2,['optimiz'],['optimized']
Performance,"﻿. GUESS_R_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. GUESS_R_CONVERGENCE¶. Convergence criterion for the density cumulant and orbital guess for the variationally orbital-optimized DFT methods. Currently only available for ALGORITHM = SIMULTANEOUS. Type: conv double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__guess_r_convergence.html:267,optimiz,optimized,267,psi4manual/1.6.x/autodir_options_c/dct__guess_r_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__guess_r_convergence.html,1,['optimiz'],['optimized']
Performance,"﻿. GUESS_R_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. GUESS_R_CONVERGENCE¶. Convergence criterion for the density cumulant and orbital guess for the variationally orbital-optimized DFT methods. Currently only available for ALGORITHM = SIMULTANEOUS. Type: conv double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__guess_r_convergence.html:267,optimiz,optimized,267,psi4manual/1.7.x/autodir_options_c/dct__guess_r_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__guess_r_convergence.html,1,['optimiz'],['optimized']
Performance,"﻿. GUESS_R_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. GUESS_R_CONVERGENCE¶. Convergence criterion for the density cumulant and orbital guess for the variationally orbital-optimized DFT methods. Currently only available for ALGORITHM = SIMULTANEOUS. Type: conv double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__guess_r_convergence.html:269,optimiz,optimized,269,psi4manual/1.8.x/autodir_options_c/dct__guess_r_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__guess_r_convergence.html,1,['optimiz'],['optimized']
Performance,"﻿. GUESS_R_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. GUESS_R_CONVERGENCE¶. Convergence criterion for the density cumulant and orbital guess for the variationally orbital-optimized DFT methods. Currently only available for ALGORITHM = SIMULTANEOUS. Type: conv double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; GUESS_R_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__guess_r_convergence.html:269,optimiz,optimized,269,psi4manual/1.9.x/autodir_options_c/dct__guess_r_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__guess_r_convergence.html,1,['optimiz'],['optimized']
Performance,"﻿. G_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. Previous topic; FULL_HESS_EVERY; Next topic; GEOM_MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__g_convergence-1.html:184,optimiz,optimization,184,psi4manual/4.0b2/autodir_options_c/optking__g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__g_convergence-1.html,2,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. Previous topic; FULL_HESS_EVERY; Next topic; GEOM_MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__g_convergence-1.html:199,optimiz,optimization,199,psi4manual/4.0b3/autodir_options_c/optking__g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__g_convergence-1.html,2,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. Previous topic; FULL_HESS_EVERY; Next topic; GEOM_MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__g_convergence-1.html:199,optimiz,optimization,199,psi4manual/4.0b4/autodir_options_c/optking__g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__g_convergence-1.html,2,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. Previous topic; FULL_HESS_EVERY; Next topic; GEOM_MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__g_convergence-1.html:199,optimiz,optimization,199,psi4manual/4.0b5/autodir_options_c/optking__g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__g_convergence-1.html,2,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. Previous topic; FULL_HESS_EVERY; Next topic; GEOM_MAXITER. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__g_convergence-1.html:206,optimiz,optimization,206,psi4manual/1.0.0/autodir_options_c/optking__g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__g_convergence-1.html,2,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, INTERFRAG_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__g_convergence.html:174,optimiz,optimization,174,psi4manual/master/autodir_options_c/optking__g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__g_convergence.html,1,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, INTERFRAG_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__g_convergence-1.html:165,optimiz,optimization,165,psi4manual/1.4.0/autodir_options_c/optking__g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__g_convergence-1.html,2,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, INTERFRAG_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__g_convergence-1.html:165,optimiz,optimization,165,psi4manual/1.5.0/autodir_options_c/optking__g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__g_convergence-1.html,2,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, INTERFRAG_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__g_convergence.html:165,optimiz,optimization,165,psi4manual/1.6.x/autodir_options_c/optking__g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__g_convergence.html,1,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, INTERFRAG_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__g_convergence.html:165,optimiz,optimization,165,psi4manual/1.7.x/autodir_options_c/optking__g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__g_convergence.html,1,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, INTERFRAG_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__g_convergence.html:167,optimiz,optimization,167,psi4manual/1.8.x/autodir_options_c/optking__g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__g_convergence.html,1,['optimiz'],['optimization']
Performance,"﻿. G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the criteria set here unless FLEXIBLE_G_CONVERGENCE is also on. See Table Geometry Convergence for details. Type: string; Possible Values: QCHEM, MOLPRO, GAU, GAU_LOOSE, GAU_TIGHT, INTERFRAG_TIGHT, GAU_VERYTIGHT, TURBOMOLE, CFOUR, NWCHEM_LOOSE; Default: QCHEM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; G_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__g_convergence.html:167,optimiz,optimization,167,psi4manual/1.9.x/autodir_options_c/optking__g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__g_convergence.html,1,['optimiz'],['optimization']
Performance,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/prog_tour.html:680,perform,performed,680,psi4manual/master/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/master/prog_tour.html,1,['perform'],['performed']
Performance,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/prog_tour-1.html:671,perform,performed,671,psi4manual/1.4.0/prog_tour-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/prog_tour-1.html,2,['perform'],['performed']
Performance,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/prog_tour-1.html:671,perform,performed,671,psi4manual/1.5.0/prog_tour-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/prog_tour-1.html,2,['perform'],['performed']
Performance,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/prog_tour.html:671,perform,performed,671,psi4manual/1.6.x/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/prog_tour.html,1,['perform'],['performed']
Performance,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/prog_tour.html:671,perform,performed,671,psi4manual/1.7.x/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/prog_tour.html,1,['perform'],['performed']
Performance,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/prog_tour.html:673,perform,performed,673,psi4manual/1.8.x/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/prog_tour.html,1,['perform'],['performed']
Performance,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/prog_tour.html:673,perform,performed,673,psi4manual/1.9.x/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/prog_tour.html,1,['perform'],['performed']
Performance,"﻿. Geometry Optimization — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Theoretical Methods: SCF to FCI ». Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, a RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file named “intco.dat”. See the Optimizing Minima; section for more detail.; The ongoing development of optking is providing for unique treatment of; coordinates which connect distinct molecular fragments. Thus, several keywords; relate to “interfragment modes",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/optking-1.html:329,optimiz,optimizations,329,psi4manual/4.0b2/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Theoretical Methods: SCF to FCI ». Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, a RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file named “intco.dat”. See the Optimizing Minima; section for more detail. Warning; For the present, file intco.dat is lodged in the submission; directory and defines the internal coordinates for an optimization.; Thus, it is unsafe to run mult",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/optking-1.html:344,optimiz,optimizations,344,psi4manual/4.0b3/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Theoretical Methods: SCF to FCI ». Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, a RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file with extension ”.intco”. See the Optimizing Minima; section for more detail. Warning; Optimizations where the molecule is specified in Z-matrix format; with dummy atoms will result in the molecule being converted to a Cartesian representati",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/optking-1.html:344,optimiz,optimizations,344,psi4manual/4.0b4/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Theoretical Methods: SCF to FCI ». Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, a RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file with extension ”.intco”. See the Optimizing Minima; section for more detail. Warning; Optimizations where the molecule is specified in Z-matrix format; with dummy atoms will result in the molecule being converted to a Cartesian representati",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/optking-1.html:344,optimiz,optimizations,344,psi4manual/4.0b5/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Theoretical Methods: SCF to FCI ». Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; Psi4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified directly. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file with extension ”.intco”. See the Optimizing Minima; section for more detail. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/optking-1.html:351,optimiz,optimizations,351,psi4manual/1.0.0/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the opt",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/opt.html:27,optimiz,optimize,27,psi4manual/master/opt.html,https://psicode.org,https://psicode.org/psi4manual/master/opt.html,13,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.ConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/opt-1.html:27,optimiz,optimize,27,psi4manual/1.1.0/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/opt-1.html,24,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype access",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/opt-1.html:27,optimiz,optimize,27,psi4manual/1.2.1/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/opt-1.html,24,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype access",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/opt-1.html:27,optimiz,optimize,27,psi4manual/1.3.2/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/opt-1.html,24,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, whic",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/opt-1.html:27,optimiz,optimize,27,psi4manual/1.4.0/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/opt-1.html,26,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, whic",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/opt-1.html:27,optimiz,optimize,27,psi4manual/1.5.0/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/opt-1.html,26,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, whic",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/opt.html:27,optimiz,optimize,27,psi4manual/1.6.x/opt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/opt.html,13,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/opt.html:27,optimiz,optimize,27,psi4manual/1.7.x/opt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/opt.html,13,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimizati",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/opt.html:27,optimiz,optimize,27,psi4manual/1.8.x/opt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/opt.html,13,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimizati",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/opt.html:27,optimiz,optimize,27,psi4manual/1.9.x/opt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/opt.html,13,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization, optimize() and gradient() — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Geometry Optimization, optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry projection module. optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || 'off' ; Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. func (function) – gradient || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – 'continuous' || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whet",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/opt-1.html:26,optimiz,optimize,26,psi4manual/1.0.0/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/opt-1.html,22,"['optimiz', 'perform']","['optimization', 'optimizations', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; Geometry Optimization. Geometry Optimization¶; Code author: Rollin A. King and Alexander G. Heide; Section author: Rollin A. King, Alexander G. Heide, and Lori A. Burns; Module: Keywords, OPTKING; PSI4 carries out molecular optimizations using a Python module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step with trust radius scaling, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. However, for separated; fragments, we have chosen not to employ their “extra-redundant” coordinates.; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian representation of the system. Presently, by default, separate fragments are bonded by the; nearest atoms, and the whole system is treated as if it were part of one; molecule. However, with the option FRAG_MODE, fragments; may instead be related by a minimal set of interfragment coordinates defined by; reference points within each fragment. The reference points can be atomic; positio",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/optking.html:360,optimiz,optimizations,360,psi4manual/master/optking.html,https://psicode.org,https://psicode.org/psi4manual/master/optking.html,1,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified directly. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file with extension ”.intco”. See the Optimizing Minima; section for more detail. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian representation of the syst",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/optking-1.html:299,optimiz,optimizations,299,psi4manual/1.1.0/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Theoretical Methods: SCF to FCI. Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified directly. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file with extension “.intco”. See the Optimizing Minima; section for more detail. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian representation of the sy",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/optking-1.html:301,optimiz,optimizations,301,psi4manual/1.2.1/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Theoretical Methods: SCF to FCI. Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified directly. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file with extension “.intco”. See the Optimizing Minima; section for more detail. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian representation of the sy",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/optking-1.html:301,optimiz,optimizations,301,psi4manual/1.3.2/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; Geometry Optimization. Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified directly. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file with extension “.intco”. See the Optimizing Minima; section for more detail. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian rep",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/optking-1.html:322,optimiz,optimizations,322,psi4manual/1.4.0/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; Geometry Optimization. Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified directly. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file with extension “.intco”. See the Optimizing Minima; section for more detail. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian rep",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/optking-1.html:322,optimiz,optimizations,322,psi4manual/1.5.0/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; Geometry Optimization. Geometry Optimization¶; Code author: Rollin A. King; Section author: Rollin A. King and Lori A. Burns; Module: Keywords, PSI Variables, OPTKING; PSI4 carries out molecular optimizations using a module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. (However, for separated; fragments, we have chosen not to employ by default their “extra-redundant”; coordinates defined by their “auxiliary interfragment” bonds. These can be; included via the option ADD_AUXILIARY_BONDS).; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased.; Otherwise, the internal coordinate definitions may be modified directly. If one; desires to see or modify the internal coordinates being used, then one can set; INTCOS_GENERATE_EXIT to true. The internal coordinate; definitions are provided in the file with extension “.intco”. See the Optimizing Minima; section for more detail. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian rep",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/optking.html:322,optimiz,optimizations,322,psi4manual/1.6.x/optking.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/optking.html,1,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; Geometry Optimization. Geometry Optimization¶; Code author: Rollin A. King and Alexander G. Heide; Section author: Rollin A. King, Alexander G. Heide, and Lori A. Burns; Module: Keywords, OPTKING; PSI4 carries out molecular optimizations using a Python module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step with trust radius scaling, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. However, for separated; fragments, we have chosen not to employ their “extra-redundant” coordinates.; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian representation of the system. Presently, by default, separate fragments are bonded by the; nearest atoms, and the whole system is treated as if it were part of one; molecule. However, with the option FRAG_MODE, fragments; may instead be related by a minimal set of interfragment coordinates defined by; reference points within each fragment. The reference points can be atomic; positions (curre",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/optking.html:351,optimiz,optimizations,351,psi4manual/1.7.x/optking.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/optking.html,1,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; Geometry Optimization. Geometry Optimization¶; Code author: Rollin A. King and Alexander G. Heide; Section author: Rollin A. King, Alexander G. Heide, and Lori A. Burns; Module: Keywords, OPTKING; PSI4 carries out molecular optimizations using a Python module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step with trust radius scaling, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. However, for separated; fragments, we have chosen not to employ their “extra-redundant” coordinates.; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian representation of the system. Presently, by default, separate fragments are bonded by the; nearest atoms, and the whole system is treated as if it were part of one; molecule. However, with the option FRAG_MODE, fragments; may instead be related by a minimal set of interfragment coordinates defined by; reference points within each fragment. The reference points can be atomic; positions (cur",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/optking.html:353,optimiz,optimizations,353,psi4manual/1.8.x/optking.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/optking.html,1,['optimiz'],['optimizations']
Performance,"﻿. Geometry Optimization. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; Geometry Optimization. Geometry Optimization¶; Code author: Rollin A. King and Alexander G. Heide; Section author: Rollin A. King, Alexander G. Heide, and Lori A. Burns; Module: Keywords, OPTKING; PSI4 carries out molecular optimizations using a Python module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives — both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step with trust radius scaling, and the BFGS Hessian update.; The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49].; The general approach employed in this code; is similar to the “model Hessian plus RF method” described and tested by Bakken and; Helgaker [Bakken:2002:9160]. However, for separated; fragments, we have chosen not to employ their “extra-redundant” coordinates.; The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; COVALENT_CONNECT. If the user finds that some; connectivity is lacking by default, then this value may be increased. Warning; The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian representation of the system. Presently, by default, separate fragments are bonded by the; nearest atoms, and the whole system is treated as if it were part of one; molecule. However, with the option FRAG_MODE, fragments; may instead be related by a minimal set of interfragment coordinates defined by; reference points within each fragment. The reference points can be atomic; positions (cur",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/optking.html:353,optimiz,optimizations,353,psi4manual/1.9.x/optking.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/optking.html,1,['optimiz'],['optimizations']
Performance,"﻿. HESS_TYPE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». HESS_TYPE¶. Type Hessian matrix will be used in orbital optimization procedure. Type: string; Possible Values: NONE; Default: NONE. Previous topic; E_CONVERGENCE; Next topic; LEVEL_SHIFT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__hess_type-1.html:225,optimiz,optimization,225,psi4manual/4.0b3/autodir_options_c/omp2__hess_type-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__hess_type-1.html,2,['optimiz'],['optimization']
Performance,"﻿. HESS_TYPE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». HESS_TYPE¶. Type Hessian matrix will be used in orbital optimization procedure. Type: string; Possible Values: NONE; Default: NONE. Previous topic; E_CONVERGENCE; Next topic; LEVEL_SHIFT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__hess_type-1.html:225,optimiz,optimization,225,psi4manual/4.0b3/autodir_options_c/omp3__hess_type-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__hess_type-1.html,2,['optimiz'],['optimization']
Performance,"﻿. HF. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; HF. HF¶. class psi4.core.HF¶; Bases: Wavefunction; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. iteration_energies. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. check_phases(self); docstring. clear_external_cpscf_perturbations(self); Clear private external_cpscf_perturbations map. clear_external_potentials(self); Clear private external_potentials list. compute_E(self); docstring. compute_energy(); Base class Wavefunction requires this function. compute_fvpi(self); Update number of frozen virtuals. compute_initial_E(self); docstring. compute_orbital_gradient(self, arg0, arg1); docstring. compute_spin_contamination(self); docstring. cphf_Hx(self, arg0); CPHF Hessian-vector prodcuts (4 * J - K - K.T). cphf_converged(self); Adds occupied guess alpha orbitals. cphf_solve(self, x_vec, conv_tol, max_iter); Solves the CPHF equations for a given set of x vectors. damping_update(self, arg0); docstring. diis(self, arg0); docstring. finalize(self); Cleans up the the Wavefunction's temporary data. finalize_energy(); Performs stability analysis and calls back SCF with new guess if needed, Returns the SCF energy. find_occupation(self); docstring. form_C(self[, shift]); Forms the",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.HF.html:267,perform,performed,267,psi4manual/master/api/psi4.core.HF.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.HF.html,2,['perform'],['performed']
Performance,"﻿. HF. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. HF¶. class psi4.core.HF¶; Bases: psi4.core.Wavefunction; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; docstring. iteration_; docstring. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. check_phases(self); docstring. clear_external_potentials(self); Clear private external_potentials list. compute_E(self); docstring. compute_energy(); Base class Wavefunction requires this function. compute_initial_E(self); docstring. compute_orbital_gradient(self, arg0, arg1); docstring. compute_spin_contamination(self); docstring. cphf_Hx(self, arg0); CPHF Hessian-vector prodcuts (4 * J - K - K.T). cphf_converged(self); Adds occupied guess alpha orbitals. cphf_solve(self, x_vec, conv_tol, max_iter, …); Solves the CPHF equations for a given set of x vectors. damping_update(self, arg0); docstring. diis(self); docstring. diis_manager(self); docstring. finalize(self); Cleans up the the Wavefunction’s temporary data. finalize_energy(); Performs stability analysis and calls back SCF with new guess if needed, Returns the SCF energy. find_occupation(self); docstring. form_C(self); Forms the Orbital Matrices from the current Fock Matrices. form_D(self); Forms the Density Matrices from the current Orbitals Matrices. form_F(self); Forms the F matrix. form_G(self); Forms the G matrix. form_H(self); Forms the core Hamil",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.hf.html:266,perform,performed,266,psi4manual/1.3.2/api/psi4.core.hf.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.hf.html,2,['perform'],['performed']
Performance,"﻿. HF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; HF. HF¶. class psi4.core.HF¶; Bases: psi4.core.Wavefunction; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; docstring. iteration_; docstring. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the ‘Core’ Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self, arg0); Returns copy of the requested",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.hf.html:268,perform,performed,268,psi4manual/1.4.0/api/psi4.core.hf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.hf.html,2,['perform'],['performed']
Performance,"﻿. HF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; HF. HF¶. class psi4.core.HF¶; Bases: psi4.core.Wavefunction; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symm",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.hf.html:268,perform,performed,268,psi4manual/1.5.0/api/psi4.core.hf.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.hf.html,2,['perform'],['performed']
Performance,"﻿. HF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; HF. HF¶. class psi4.core.HF¶; Bases: psi4.core.Wavefunction; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symm",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.HF.html:268,perform,performed,268,psi4manual/1.6.x/api/psi4.core.HF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.HF.html,2,['perform'],['performed']
Performance,"﻿. HF. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; HF. HF¶. class psi4.core.HF¶; Bases: Wavefunction; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. check_phases(self); docstring. clear_external_cpscf_perturbations(self); Clear private external_cpscf_perturbations map. clear_external_potentials(self); Clear private external_potentials list. compute_E(self); docstring. compute_energy(); Base class Wavefunction requires this function. compute_fvpi(self); Update number of frozen virtuals. compute_initial_E(self); docstring. compute_orbital_gradient(self, arg0, arg1); docstring. compute_spin_contamination(self); docstring. cphf_Hx(self, arg0); CPHF Hessian-vector prodcuts (4 * J - K - K.T). cphf_converged(self); Adds occupied guess alpha orbitals. cphf_solve(self, x_vec, conv_tol, max_iter); Solves the CPHF equations for a given set of x vectors. damping_update(self, arg0); docstring. diis(self, arg0); docstring. finalize(self); Cleans up the the Wavefunction's temporary data. finalize_energy(); Performs stability analysis and calls back SCF with new guess if needed, Returns the SCF energy. find_occupation(self); docstring. form_C(self[, shift]); Forms the Orbital Matrices from the cu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.HF.html:258,perform,performed,258,psi4manual/1.7.x/api/psi4.core.HF.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.HF.html,2,['perform'],['performed']
Performance,"﻿. HF. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; HF. HF¶. class psi4.core.HF¶; Bases: Wavefunction; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. check_phases(self); docstring. clear_external_cpscf_perturbations(self); Clear private external_cpscf_perturbations map. clear_external_potentials(self); Clear private external_potentials list. compute_E(self); docstring. compute_energy(); Base class Wavefunction requires this function. compute_fvpi(self); Update number of frozen virtuals. compute_initial_E(self); docstring. compute_orbital_gradient(self, arg0, arg1); docstring. compute_spin_contamination(self); docstring. cphf_Hx(self, arg0); CPHF Hessian-vector prodcuts (4 * J - K - K.T). cphf_converged(self); Adds occupied guess alpha orbitals. cphf_solve(self, x_vec, conv_tol, max_iter); Solves the CPHF equations for a given set of x vectors. damping_update(self, arg0); docstring. diis(self, arg0); docstring. finalize(self); Cleans up the the Wavefunction's temporary data. finalize_energy(); Performs stability analysis and calls back SCF with new guess if needed, Returns the SCF energy. find_occupation(self); docstring. form_C(self[, shift]); Forms the Orbital Matrices from the ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.HF.html:260,perform,performed,260,psi4manual/1.8.x/api/psi4.core.HF.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.HF.html,2,['perform'],['performed']
Performance,"﻿. HF. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; HF. HF¶. class psi4.core.HF¶; Bases: Wavefunction; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. iteration_energies. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. check_phases(self); docstring. clear_external_cpscf_perturbations(self); Clear private external_cpscf_perturbations map. clear_external_potentials(self); Clear private external_potentials list. compute_E(self); docstring. compute_energy(); Base class Wavefunction requires this function. compute_fvpi(self); Update number of frozen virtuals. compute_initial_E(self); docstring. compute_orbital_gradient(self, arg0, arg1); docstring. compute_spin_contamination(self); docstring. cphf_Hx(self, arg0); CPHF Hessian-vector prodcuts (4 * J - K - K.T). cphf_converged(self); Adds occupied guess alpha orbitals. cphf_solve(self, x_vec, conv_tol, max_iter); Solves the CPHF equations for a given set of x vectors. damping_update(self, arg0); docstring. diis(self, arg0); docstring. finalize(self); Cleans up the the Wavefunction's temporary data. finalize_energy(); Performs stability analysis and calls back SCF with new guess if needed, Returns the SCF energy. find_occupation(self); docstring. form_C(self[, shift]); Forms the Orbita",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.HF.html:260,perform,performed,260,psi4manual/1.9.x/api/psi4.core.HF.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.HF.html,2,['perform'],['performed']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead o",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/freq.html:632,perform,perform,632,psi4manual/master/freq.html,https://psicode.org,https://psicode.org/psi4manual/master/freq.html,1,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite dif",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/freq-1.html:530,perform,perform,530,psi4manual/1.1.0/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/freq-1.html,2,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/freq-1.html:532,perform,perform,532,psi4manual/1.2.1/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/freq-1.html,2,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indica",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/freq-1.html:532,perform,perform,532,psi4manual/1.3.2/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/freq-1.html,2,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. derty",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/freq-1.html:623,perform,perform,623,psi4manual/1.4.0/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/freq-1.html,2,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. derty",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/freq-1.html:623,perform,perform,623,psi4manual/1.5.0/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/freq-1.html,2,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. derty",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/freq.html:623,perform,perform,623,psi4manual/1.6.x/freq.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/freq.html,1,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/freq.html:623,perform,perform,623,psi4manual/1.7.x/freq.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/freq.html,1,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/freq.html:625,perform,perform,625,psi4manual/1.8.x/freq.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/freq.html,1,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/freq.html:625,perform,perform,625,psi4manual/1.9.x/freq.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/freq.html,1,['perform'],['perform']
Performance,"﻿. Harmonic Vibrational Analysis, frequency() and hessian() — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Harmonic Vibrational Analysis, frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || 'off' ; Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – gradient || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – 'continuous' || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/freq-1.html:512,perform,perform,512,psi4manual/1.0.0/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/freq-1.html,2,['perform'],['perform']
Performance,"﻿. ICORE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. Previous topic; HD_OTF; Next topic; ISTOP; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__icore-1.html:239,perform,perform,239,psi4manual/4.0b2/autodir_options_c/detci__icore-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__icore-1.html,2,['perform'],['perform']
Performance,"﻿. ICORE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. Previous topic; HD_OTF; Next topic; ISTOP; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__icore-1.html:254,perform,perform,254,psi4manual/4.0b3/autodir_options_c/detci__icore-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__icore-1.html,2,['perform'],['perform']
Performance,"﻿. ICORE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. Previous topic; HD_OTF; Next topic; ISTOP; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__icore-1.html:254,perform,perform,254,psi4manual/4.0b4/autodir_options_c/detci__icore-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__icore-1.html,2,['perform'],['perform']
Performance,"﻿. ICORE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. Previous topic; HD_OTF; Next topic; ISTOP; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__icore-1.html:254,perform,perform,254,psi4manual/4.0b5/autodir_options_c/detci__icore-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__icore-1.html,2,['perform'],['perform']
Performance,"﻿. ICORE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. Previous topic; HD_OTF; Next topic; ISTOP. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__icore-1.html:261,perform,perform,261,psi4manual/1.0.0/autodir_options_c/detci__icore-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__icore-1.html,2,['perform'],['perform']
Performance,"﻿. ICORE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__icore.html:221,perform,perform,221,psi4manual/master/autodir_options_c/detci__icore.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__icore.html,1,['perform'],['perform']
Performance,"﻿. ICORE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__icore-1.html:212,perform,perform,212,psi4manual/1.4.0/autodir_options_c/detci__icore-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__icore-1.html,2,['perform'],['perform']
Performance,"﻿. ICORE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__icore-1.html:212,perform,perform,212,psi4manual/1.5.0/autodir_options_c/detci__icore-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__icore-1.html,2,['perform'],['perform']
Performance,"﻿. ICORE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__icore.html:212,perform,perform,212,psi4manual/1.6.x/autodir_options_c/detci__icore.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__icore.html,1,['perform'],['perform']
Performance,"﻿. ICORE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__icore.html:212,perform,perform,212,psi4manual/1.7.x/autodir_options_c/detci__icore.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__icore.html,1,['perform'],['perform']
Performance,"﻿. ICORE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__icore.html:214,perform,perform,214,psi4manual/1.8.x/autodir_options_c/detci__icore.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__icore.html,1,['perform'],['perform']
Performance,"﻿. ICORE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. ICORE¶. Specifies how to handle buffering of CI vectors. A value of 0 makes the program perform I/O one RAS subblock at a time; 1 uses entire CI vectors at a time; and 2 uses one irrep block at a time. Values of 0 or 2 cause some inefficiency in the I/O (requiring multiple reads of the C vector when constructing H in the iterative subspace if DIAG_METHOD = SEM), but require less core memory. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; ICORE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__icore.html:214,perform,perform,214,psi4manual/1.9.x/autodir_options_c/detci__icore.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__icore.html,1,['perform'],['perform']
Performance,"﻿. INCFOCK. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. INCFOCK¶. Do perform incremental Fock build?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__incfock.html:148,perform,perform,148,psi4manual/master/autodir_options_c/scf__incfock.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__incfock.html,1,['perform'],['perform']
Performance,"﻿. INCFOCK. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. INCFOCK¶. Do perform incremental Fock build?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__incfock.html:139,perform,perform,139,psi4manual/1.6.x/autodir_options_c/scf__incfock.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__incfock.html,1,['perform'],['perform']
Performance,"﻿. INCFOCK. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. INCFOCK¶. Do perform incremental Fock build?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__incfock.html:139,perform,perform,139,psi4manual/1.7.x/autodir_options_c/scf__incfock.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__incfock.html,1,['perform'],['perform']
Performance,"﻿. INCFOCK. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. INCFOCK¶. Do perform incremental Fock build?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__incfock.html:141,perform,perform,141,psi4manual/1.8.x/autodir_options_c/scf__incfock.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__incfock.html,1,['perform'],['perform']
Performance,"﻿. INCFOCK. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. INCFOCK¶. Do perform incremental Fock build?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; INCFOCK. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__incfock.html:141,perform,perform,141,psi4manual/1.9.x/autodir_options_c/scf__incfock.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__incfock.html,1,['perform'],['perform']
Performance,"﻿. INTCO_FIXED_EQ_FORCE_CONSTANT — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». INTCO_FIXED_EQ_FORCE_CONSTANT¶. In constrained optimizations, for internal coordinates with user-specified equilibrium values, this is the force constant (in au) used to apply an additional force to each coordinate. If the user is only concerned to satify the desired constraint, then the user need only ensure that this value is sufficiently large. Alternatively, the user may specify this value to apply a force of a particular magnitude, in which case the given equilibrium value may or may not be reached by the optimization. Type: double; Default: 2.0. Previous topic; HESS_UPDATE_USE_LAST; Next topic; INTCOS_GENERATE_EXIT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__intco_fixed_eq_force_constant-1.html:224,optimiz,optimizations,224,psi4manual/4.0b2/autodir_options_c/optking__intco_fixed_eq_force_constant-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__intco_fixed_eq_force_constant-1.html,4,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. INTCO_FIXED_EQ_FORCE_CONSTANT — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». INTCO_FIXED_EQ_FORCE_CONSTANT¶. In constrained optimizations, for internal coordinates with user-specified equilibrium values, this is the force constant (in au) used to apply an additional force to each coordinate. If the user is only concerned to satify the desired constraint, then the user need only ensure that this value is sufficiently large. Alternatively, the user may specify this value to apply a force of a particular magnitude, in which case the given equilibrium value may or may not be reached by the optimization. Type: double; Default: 2.0. Previous topic; HESS_UPDATE_USE_LAST; Next topic; INTCOS_GENERATE_EXIT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__intco_fixed_eq_force_constant-1.html:239,optimiz,optimizations,239,psi4manual/4.0b3/autodir_options_c/optking__intco_fixed_eq_force_constant-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__intco_fixed_eq_force_constant-1.html,4,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. INTCO_FIXED_EQ_FORCE_CONSTANT — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». INTCO_FIXED_EQ_FORCE_CONSTANT¶. In constrained optimizations, for internal coordinates with user-specified equilibrium values, this is the force constant (in au) used to apply an additional force to each coordinate. If the user is only concerned to satify the desired constraint, then the user need only ensure that this value is sufficiently large. Alternatively, the user may specify this value to apply a force of a particular magnitude, in which case the given equilibrium value may or may not be reached by the optimization. Type: double; Default: 2.0. Previous topic; HESS_UPDATE_USE_LAST; Next topic; INTCOS_GENERATE_EXIT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__intco_fixed_eq_force_constant-1.html:239,optimiz,optimizations,239,psi4manual/4.0b4/autodir_options_c/optking__intco_fixed_eq_force_constant-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__intco_fixed_eq_force_constant-1.html,4,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. INTS_TOLERANCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FISAPT ». INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. For ISAPT, a variational collapse problem seems to occur for even rather modest values of this cutoff, when DF is used and when very close contacts occur. Therefore, we will be safe and turn it off (this does not affect performance overtly). Type: conv double; Default: 0.0. Previous topic; FISAPT_PLOT_FILEPATH; Next topic; LOCAL_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FISAPT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fisapt__ints_tolerance-1.html:480,perform,performance,480,psi4manual/1.0.0/autodir_options_c/fisapt__ints_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fisapt__ints_tolerance-1.html,2,['perform'],['performance']
Performance,"﻿. Interface to CPPE by M. Scheurer. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to CPPE by M. Scheurer. Interface to CPPE by M. Scheurer¶; Code author: Maximilian Scheurer; Section author: Maximilian Scheurer; Module: Keywords, PSI Variables. PSI4 contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721].; For a general tutorial on how to prepare/perform PE calculations, read the; tutorial review. Installation¶; Binary. CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, CPPE has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; CPPE can be obtained through conda install cppe -c psi4.; Then enable it as a feature with ENABLE_cppe,; hint its location with cppe_DIR,; and rebuild PSI4 to detect CPPE and activate dependent code. To remove a conda installation, conda remove cppe. Source. If using PSI4 built from source and you want CPPE built from; from source also,; enable it as a feature with ENABLE_cppe,; and let the build system fetch and build it and activate dependent code. Using the polarizable embedding model¶; The inclusion of a PE description of the solvent into your calculation; is achieved by setting PE true in your input file. Note; At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104].; All ERI algorithms (PK, OUT_OF_CORE, DIRECT, DF, CD) are supported. Note; linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/cppe.html:682,perform,perform,682,psi4manual/master/cppe.html,https://psicode.org,https://psicode.org/psi4manual/master/cppe.html,1,['perform'],['perform']
Performance,"﻿. Interface to CPPE by M. Scheurer. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to CPPE by M. Scheurer. Interface to CPPE by M. Scheurer¶; Code author: Maximilian Scheurer; Section author: Maximilian Scheurer; Module: Keywords, PSI Variables. PSI4 contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721].; For a general tutorial on how to prepare/perform PE calculations, read the; tutorial review. Installation¶; Binary. CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, CPPE has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; CPPE can be obtained through conda install cppe -c psi4.; Then enable it as a feature with ENABLE_cppe,; hint its location with cppe_DIR,; and rebuild PSI4 to detect CPPE and activate dependent code. To remove a conda installation, conda remove cppe. Source. If using PSI4 built from source and you want CPPE built from; from source also,; enable it as a feature with ENABLE_cppe,; and let the build system fetch and build it and activate dependent code. Using the polarizable embedding model¶; The inclusion of a PE description of the solvent into your calculation; is achieved by setting PE true in your input file. Note; At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104].; All ERI algorithms (PK, OUT_OF_CORE, DIRECT, DF, CD) are supported. Note; linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. Warning; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/cppe-1.html:673,perform,perform,673,psi4manual/1.4.0/cppe-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/cppe-1.html,2,['perform'],['perform']
Performance,"﻿. Interface to CPPE by M. Scheurer. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to CPPE by M. Scheurer. Interface to CPPE by M. Scheurer¶; Code author: Maximilian Scheurer; Section author: Maximilian Scheurer; Module: Keywords, PSI Variables. PSI4 contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721].; For a general tutorial on how to prepare/perform PE calculations, read the; tutorial review. Installation¶; Binary. CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, CPPE has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; CPPE can be obtained through conda install cppe -c psi4.; Then enable it as a feature with ENABLE_cppe,; hint its location with cppe_DIR,; and rebuild PSI4 to detect CPPE and activate dependent code. To remove a conda installation, conda remove cppe. Source. If using PSI4 built from source and you want CPPE built from; from source also,; enable it as a feature with ENABLE_cppe,; and let the build system fetch and build it and activate dependent code. Using the polarizable embedding model¶; The inclusion of a PE description of the solvent into your calculation; is achieved by setting PE true in your input file. Note; At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104].; All ERI algorithms (PK, OUT_OF_CORE, DIRECT, DF, CD) are supported. Note; linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. Warning; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/cppe-1.html:673,perform,perform,673,psi4manual/1.5.0/cppe-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/cppe-1.html,2,['perform'],['perform']
Performance,"﻿. Interface to CPPE by M. Scheurer. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to CPPE by M. Scheurer. Interface to CPPE by M. Scheurer¶; Code author: Maximilian Scheurer; Section author: Maximilian Scheurer; Module: Keywords, PSI Variables. PSI4 contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721].; For a general tutorial on how to prepare/perform PE calculations, read the; tutorial review. Installation¶; Binary. CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, CPPE has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; CPPE can be obtained through conda install cppe -c psi4.; Then enable it as a feature with ENABLE_cppe,; hint its location with cppe_DIR,; and rebuild PSI4 to detect CPPE and activate dependent code. To remove a conda installation, conda remove cppe. Source. If using PSI4 built from source and you want CPPE built from; from source also,; enable it as a feature with ENABLE_cppe,; and let the build system fetch and build it and activate dependent code. Using the polarizable embedding model¶; The inclusion of a PE description of the solvent into your calculation; is achieved by setting PE true in your input file. Note; At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104].; All ERI algorithms (PK, OUT_OF_CORE, DIRECT, DF, CD) are supported. Note; linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. Warning; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/cppe.html:673,perform,perform,673,psi4manual/1.6.x/cppe.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/cppe.html,1,['perform'],['perform']
Performance,"﻿. Interface to CPPE by M. Scheurer. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to CPPE by M. Scheurer. Interface to CPPE by M. Scheurer¶; Code author: Maximilian Scheurer; Section author: Maximilian Scheurer; Module: Keywords, PSI Variables. PSI4 contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721].; For a general tutorial on how to prepare/perform PE calculations, read the; tutorial review. Installation¶; Binary. CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, CPPE has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; CPPE can be obtained through conda install cppe -c psi4.; Then enable it as a feature with ENABLE_cppe,; hint its location with cppe_DIR,; and rebuild PSI4 to detect CPPE and activate dependent code. To remove a conda installation, conda remove cppe. Source. If using PSI4 built from source and you want CPPE built from; from source also,; enable it as a feature with ENABLE_cppe,; and let the build system fetch and build it and activate dependent code. Using the polarizable embedding model¶; The inclusion of a PE description of the solvent into your calculation; is achieved by setting PE true in your input file. Note; At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104].; All ERI algorithms (PK, OUT_OF_CORE, DIRECT, DF, CD) are supported. Note; linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. Warning; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/cppe.html:673,perform,perform,673,psi4manual/1.7.x/cppe.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/cppe.html,1,['perform'],['perform']
Performance,"﻿. Interface to CPPE by M. Scheurer. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to CPPE by M. Scheurer. Interface to CPPE by M. Scheurer¶; Code author: Maximilian Scheurer; Section author: Maximilian Scheurer; Module: Keywords, PSI Variables. PSI4 contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721].; For a general tutorial on how to prepare/perform PE calculations, read the; tutorial review. Installation¶; Binary. CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, CPPE has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; CPPE can be obtained through conda install cppe -c psi4.; Then enable it as a feature with ENABLE_cppe,; hint its location with cppe_DIR,; and rebuild PSI4 to detect CPPE and activate dependent code. To remove a conda installation, conda remove cppe. Source. If using PSI4 built from source and you want CPPE built from; from source also,; enable it as a feature with ENABLE_cppe,; and let the build system fetch and build it and activate dependent code. Using the polarizable embedding model¶; The inclusion of a PE description of the solvent into your calculation; is achieved by setting PE true in your input file. Note; At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104].; All ERI algorithms (PK, OUT_OF_CORE, DIRECT, DF, CD) are supported. Note; linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. Warning",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/cppe.html:675,perform,perform,675,psi4manual/1.8.x/cppe.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/cppe.html,1,['perform'],['perform']
Performance,"﻿. Interface to CPPE by M. Scheurer. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to CPPE by M. Scheurer. Interface to CPPE by M. Scheurer¶; Code author: Maximilian Scheurer; Section author: Maximilian Scheurer; Module: Keywords, PSI Variables. PSI4 contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721].; For a general tutorial on how to prepare/perform PE calculations, read the; tutorial review. Installation¶; Binary. CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, CPPE has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; CPPE can be obtained through conda install cppe -c psi4.; Then enable it as a feature with ENABLE_cppe,; hint its location with cppe_DIR,; and rebuild PSI4 to detect CPPE and activate dependent code. To remove a conda installation, conda remove cppe. Source. If using PSI4 built from source and you want CPPE built from; from source also,; enable it as a feature with ENABLE_cppe,; and let the build system fetch and build it and activate dependent code. Using the polarizable embedding model¶; The inclusion of a PE description of the solvent into your calculation; is achieved by setting PE true in your input file. Note; At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104].; All ERI algorithms (PK, OUT_OF_CORE, DIRECT, DF, CD) are supported. Note; linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. Warning",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/cppe.html:675,perform,perform,675,psi4manual/1.9.x/cppe.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/cppe.html,1,['perform'],['perform']
Performance,"﻿. Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Interfaces: Enhancing Psi4 Capabilities ». Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess¶; Code author: Justin M. Turney; Section author: Justin M. Turney; Module: DKH. Input¶; For all electron calculations one can use the Douglas-Kroll-Hess (DKH); Hamiltonian to take into account scalar relativistic effects.; Minimal input for DKH single-point computation looks like this:; molecule {; Mg; }. set basis aug-cc-pvdz-dk; set relativistic dkh. energy('scf'). By default a 2nd-order DKH calculation is performed. To change the default; order use the DKH_ORDER option. The version of the code found in; Psi4 is capable of up to 4th-order DKH calculations. Keywords¶. RELATIVISTIC¶. Relativistic Hamiltonian type. Type: string; Possible Values: NO, X2C; Default: NO. DKH_ORDER¶. Order of Douglas-Kroll-Hess. Type: integer; Default: 2. Reference¶; When using this code please make reference to the appropriate following paper:. “The Generalized Douglas-Kroll Transformation,” A. Wolf,; M. Reiher, and B. A. Hess, J. Chem. Phys. 117, 9215 (2002).; (doi: 10.1063/1.1515314). Table Of Contents. Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess; Input; Keywords; RELATIVISTIC; DKH_ORDER. Reference. Previous topic; Interface to DFTD3 by S. Grimme; Next topic; Interface to programs through FCHK files, fchk(). This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Interfaces: Enhancing Psi4 Capabilities ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/dkh-1.html:687,perform,performed,687,psi4manual/1.0.0/dkh-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/dkh-1.html,2,['perform'],['performed']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. Added in version 0.6. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/fchk.html:676,optimiz,optimization,676,psi4manual/master/fchk.html,https://psicode.org,https://psicode.org/psi4manual/master/fchk.html,1,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and use it to create an FCHK writer:; 1; 2; 3energy, wfn = energy('scf', return_wfn=True); fchk_writer = psi4.FCHKWriter(wfn); fchk_writer.write('output.fchk'). The file will be written to the name passed to the FCHK writer’s write(); method. Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; 1; 2; 3grad, wfn = gradient('mp2', return_wfn=True); fchk_writer = psi4.FCHKWriter(wfn); fchk_writer.write('output.fchk'). psi4.fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Examples:. 1; 2; 3>>> # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'). Navigation. Index. mo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/fchk-1.html:616,optimiz,optimization,616,psi4manual/1.1.0/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/fchk-1.html,2,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and use it to create an FCHK writer:; 1; 2; 3energy, wfn = energy('scf', return_wfn=True); fchk_writer = psi4.core.FCHKWriter(wfn); fchk_writer.write('output.fchk'). The file will be written to the name passed to the FCHK writer’s write(); method. Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; 1; 2; 3grad, wfn = gradient('mp2', return_wfn=True); fchk_writer = psi4.core.FCHKWriter(wfn); fchk_writer.write('output.fchk'). psi4.fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Examples:. 1; 2; 3>>> # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'). «; hide m",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/fchk-1.html:618,optimiz,optimization,618,psi4manual/1.2.1/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/fchk-1.html,2,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and use it to create an FCHK writer:; 1; 2; 3energy, wfn = energy('scf', return_wfn=True); fchk_writer = psi4.core.FCHKWriter(wfn); fchk_writer.write('output.fchk'). The file will be written to the name passed to the FCHK writer’s write(); method. Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; 1; 2; 3grad, wfn = gradient('mp2', return_wfn=True); fchk_writer = psi4.core.FCHKWriter(wfn); fchk_writer.write('output.fchk'). psi4.fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Notes. A description of the FCHK format is http://wild.life.nctu.edu.tw/~jsyu/compchem/g09/g09ur/f_formchk.htm; The allowed headers for methods a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/fchk-1.html:618,optimiz,optimization,618,psi4manual/1.3.2/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/fchk-1.html,2,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns; None. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this is no",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/fchk-1.html:667,optimiz,optimization,667,psi4manual/1.4.0/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/fchk-1.html,2,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns; None. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this is no",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/fchk-1.html:667,optimiz,optimization,667,psi4manual/1.5.0/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/fchk-1.html,2,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns; None. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this is no",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/fchk.html:667,optimiz,optimization,667,psi4manual/1.6.x/fchk.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/fchk.html,1,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this is ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/fchk.html:667,optimiz,optimization,667,psi4manual/1.7.x/fchk.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/fchk.html,1,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/fchk.html:669,optimiz,optimization,669,psi4manual/1.8.x/fchk.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/fchk.html,1,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/fchk.html:669,optimiz,optimization,669,psi4manual/1.9.x/fchk.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/fchk.html,1,['optimiz'],['optimization']
Performance,"﻿. Interface to programs through FCHK files, fchk() — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Interfaces: Enhancing Psi4 Capabilities ». Interface to programs through FCHK files, fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, Psi4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and use it to create an FCHK writer:; energy, wfn = energy('scf', return_wfn=True); fchk_writer = psi4.FCHKWriter(wfn); fchk_writer.write('output.fchk'). The file will be written to the name passed to the FCHK writer’s write(); method. Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree-Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk_writer = psi4.FCHKWriter(wfn); fchk_writer.write('output.fchk'). fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Examples:. >>> # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/fchk-1.html:666,optimiz,optimization,666,psi4manual/1.0.0/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/fchk-1.html,2,['optimiz'],['optimization']
Performance,"﻿. JOBTYPE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCLAMBDA ». JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. Previous topic; DIIS; Next topic; LOCAL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCLAMBDA ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/cclambda__jobtype-1.html:184,perform,performed,184,psi4manual/4.0b2/autodir_options_c/cclambda__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/cclambda__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MP2 ». JOBTYPE¶. Type of job being performed. Type: string; Default: SP. Previous topic; CACHETYPE; Next topic; MP2_OS_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MP2 ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mp2__jobtype-1.html:179,perform,performed,179,psi4manual/4.0b2/autodir_options_c/mp2__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mp2__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCLAMBDA ». JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. Previous topic; DIIS; Next topic; LOCAL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCLAMBDA ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cclambda__jobtype-1.html:199,perform,performed,199,psi4manual/4.0b3/autodir_options_c/cclambda__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cclambda__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MP2 ». JOBTYPE¶. Type of job being performed. Type: string; Default: SP. Previous topic; CACHETYPE; Next topic; MP2_OS_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mp2__jobtype-1.html:194,perform,performed,194,psi4manual/4.0b3/autodir_options_c/mp2__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mp2__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCLAMBDA ». JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. Previous topic; DIIS; Next topic; LOCAL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCLAMBDA ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cclambda__jobtype-1.html:199,perform,performed,199,psi4manual/4.0b4/autodir_options_c/cclambda__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cclambda__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCLAMBDA ». JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. Previous topic; FOLLOW_ROOT; Next topic; LOCAL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCLAMBDA ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cclambda__jobtype-1.html:199,perform,performed,199,psi4manual/4.0b5/autodir_options_c/cclambda__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cclambda__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CPHF ». JOBTYPE¶. Type of job being performed. Type: string; Default: SP. Previous topic; FITTING_CONDITION; Next topic; MODULE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CPHF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cphf__jobtype-1.html:195,perform,performed,195,psi4manual/4.0b5/autodir_options_c/cphf__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cphf__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCLAMBDA ». JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. Previous topic; DIIS; Next topic; LOCAL. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCLAMBDA ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cclambda__jobtype-1.html:206,perform,performed,206,psi4manual/1.0.0/autodir_options_c/cclambda__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cclambda__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cclambda__jobtype.html:168,perform,performed,168,psi4manual/master/autodir_options_c/cclambda__jobtype.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cclambda__jobtype.html,1,['perform'],['performed']
Performance,"﻿. JOBTYPE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cclambda__jobtype-1.html:159,perform,performed,159,psi4manual/1.4.0/autodir_options_c/cclambda__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cclambda__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cclambda__jobtype-1.html:159,perform,performed,159,psi4manual/1.5.0/autodir_options_c/cclambda__jobtype-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cclambda__jobtype-1.html,2,['perform'],['performed']
Performance,"﻿. JOBTYPE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cclambda__jobtype.html:159,perform,performed,159,psi4manual/1.6.x/autodir_options_c/cclambda__jobtype.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cclambda__jobtype.html,1,['perform'],['performed']
Performance,"﻿. JOBTYPE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cclambda__jobtype.html:159,perform,performed,159,psi4manual/1.7.x/autodir_options_c/cclambda__jobtype.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cclambda__jobtype.html,1,['perform'],['performed']
Performance,"﻿. JOBTYPE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cclambda__jobtype.html:161,perform,performed,161,psi4manual/1.8.x/autodir_options_c/cclambda__jobtype.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cclambda__jobtype.html,1,['perform'],['performed']
Performance,"﻿. JOBTYPE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. JOBTYPE¶. Type of job being performed. Type: string; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCLAMBDA; JOBTYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cclambda__jobtype.html:161,perform,performed,161,psi4manual/1.9.x/autodir_options_c/cclambda__jobtype.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cclambda__jobtype.html,1,['perform'],['performed']
Performance,"﻿. LIBEFP — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Test Suite and Sample Inputs ». LIBEFP¶. Input File; Description. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. Previous topic; CFOUR; Next topic; PCMSOLVER. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Test Suite and Sample Inputs ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_testsuite_libefp-1.html:311,perform,performed,311,psi4manual/1.0.0/autodoc_testsuite_libefp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_testsuite_libefp-1.html,4,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. LIBEFP¶. Input File; Description. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_testsuite_libefp.html:514,perform,performed,514,psi4manual/master/autodoc_testsuite_libefp.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_testsuite_libefp.html,2,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. LIBEFP¶. Input File; Description. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodoc_testsuite_libefp-1.html:445,perform,performed,445,psi4manual/1.1.0/autodoc_testsuite_libefp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodoc_testsuite_libefp-1.html,4,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. LIBEFP¶. Input File; Description. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_libefp-1.html:447,perform,performed,447,psi4manual/1.2.1/autodoc_testsuite_libefp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_libefp-1.html,4,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. LIBEFP¶. Input File; Description. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_libefp-1.html:447,perform,performed,447,psi4manual/1.3.2/autodoc_testsuite_libefp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_libefp-1.html,4,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. LIBEFP¶. Input File; Description. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_libefp-1.html:375,perform,performed,375,psi4manual/1.4.0/autodoc_testsuite_libefp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_libefp-1.html,4,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. LIBEFP¶. Input File; Description. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_libefp-1.html:375,perform,performed,375,psi4manual/1.5.0/autodoc_testsuite_libefp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_libefp-1.html,4,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. LIBEFP¶. Input File; Description. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_libefp.html:343,perform,performed,343,psi4manual/1.6.x/autodoc_testsuite_libefp.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_libefp.html,2,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. LIBEFP¶. Input File; Description. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_libefp.html:395,perform,performed,395,psi4manual/1.7.x/autodoc_testsuite_libefp.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_libefp.html,2,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. LIBEFP¶. Input File; Description. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_libefp.html:462,perform,performed,462,psi4manual/1.8.x/autodoc_testsuite_libefp.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_libefp.html,2,['perform'],['performed']
Performance,"﻿. LIBEFP. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. LIBEFP¶. Input File; Description. libefp/qmefp-moldomains; EFP on mixed QM and EFP systems, testing that right parts of molecule get activated. libefp/qchem-efp-sp; EFP-only single-point, all components for benzene dimer. libefp/efp-grad; EFP gradient many-EFP-fragment system (geom and E from libefp pol_3a test). Tests passing of efp torques. libefp/qchem-qmefp-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem. libefp/qchem-qmefp-puream-sp; EFP on mixed QM (water) and EFP (water + 2 * ammonia) system. An EFP-only calc performed first to test vales against q-chem, both for a native 6D and native 5D basis. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; LIBEFP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_libefp.html:578,perform,performed,578,psi4manual/1.9.x/autodoc_testsuite_libefp.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_libefp.html,2,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__lse_tolerance-1.html:238,perform,performed,238,psi4manual/4.0b2/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__lse_tolerance-1.html,2,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__lse_tolerance-1.html:253,perform,performed,253,psi4manual/4.0b3/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__lse_tolerance-1.html,2,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__lse_tolerance-1.html:253,perform,performed,253,psi4manual/4.0b4/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__lse_tolerance-1.html,2,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__lse_tolerance-1.html:253,perform,performed,253,psi4manual/4.0b5/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__lse_tolerance-1.html,2,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__lse_tolerance-1.html:260,perform,performed,260,psi4manual/1.0.0/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__lse_tolerance-1.html,2,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__lse_tolerance.html:228,perform,performed,228,psi4manual/master/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__lse_tolerance.html,1,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__lse_tolerance-1.html:219,perform,performed,219,psi4manual/1.4.0/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__lse_tolerance-1.html,2,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__lse_tolerance-1.html:219,perform,performed,219,psi4manual/1.5.0/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__lse_tolerance-1.html,2,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__lse_tolerance.html:219,perform,performed,219,psi4manual/1.6.x/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__lse_tolerance.html,1,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__lse_tolerance.html:219,perform,performed,219,psi4manual/1.7.x/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__lse_tolerance.html,1,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__lse_tolerance.html:221,perform,performed,221,psi4manual/1.8.x/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__lse_tolerance.html,1,['perform'],['performed']
Performance,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__lse_tolerance.html:221,perform,performed,221,psi4manual/1.9.x/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__lse_tolerance.html,1,['perform'],['performed']
Performance,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for e",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/prog_blas.html:330,scalab,scalable,330,psi4manual/master/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/master/prog_blas.html,2,"['perform', 'scalab']","['performance', 'scalable']"
Performance,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Programming: Using the Core Libraries. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers. All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), and are passed by; pr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/prog_blas-1.html:301,scalab,scalable,301,psi4manual/1.2.1/prog_blas-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/prog_blas-1.html,4,"['perform', 'scalab']","['performance', 'scalable']"
Performance,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Programming with the Core Libraries. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers. All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), and are passed by; prov",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/prog_blas-1.html:299,scalab,scalable,299,psi4manual/1.3.2/prog_blas-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/prog_blas-1.html,4,"['perform', 'scalab']","['performance', 'scalable']"
Performance,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/prog_blas-1.html:321,scalab,scalable,321,psi4manual/1.4.0/prog_blas-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/prog_blas-1.html,4,"['perform', 'scalab']","['performance', 'scalable']"
Performance,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/prog_blas-1.html:321,scalab,scalable,321,psi4manual/1.5.0/prog_blas-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/prog_blas-1.html,4,"['perform', 'scalab']","['performance', 'scalable']"
Performance,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/prog_blas.html:321,scalab,scalable,321,psi4manual/1.6.x/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/prog_blas.html,2,"['perform', 'scalab']","['performance', 'scalable']"
Performance,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/prog_blas.html:321,scalab,scalable,321,psi4manual/1.7.x/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/prog_blas.html,2,"['perform', 'scalab']","['performance', 'scalable']"
Performance,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example)",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/prog_blas.html:323,scalab,scalable,323,psi4manual/1.8.x/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/prog_blas.html,2,"['perform', 'scalab']","['performance', 'scalable']"
Performance,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example)",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/prog_blas.html:323,scalab,scalable,323,psi4manual/1.9.x/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/prog_blas.html,2,"['perform', 'scalab']","['performance', 'scalable']"
Performance,"﻿. MAX_ATTEMPTS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». MAX_ATTEMPTS¶. When using STABILITY_ANALYSIS = FOLLOW, maximum number of orbital optimization attempts to make the wavefunction stable. Type: integer; Default: 1. Previous topic; LOCAL_MAXITER; Next topic; MAX_MEM_BUF. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__max_attempts-1.html:259,optimiz,optimization,259,psi4manual/1.0.0/autodir_options_c/scf__max_attempts-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__max_attempts-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MAX_ATTEMPTS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. MAX_ATTEMPTS¶. When using STABILITY_ANALYSIS FOLLOW, maximum number of orbital optimization attempts to make the wavefunction stable. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__max_attempts.html:224,optimiz,optimization,224,psi4manual/master/autodir_options_c/scf__max_attempts.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__max_attempts.html,1,['optimiz'],['optimization']
Performance,"﻿. MAX_ATTEMPTS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. MAX_ATTEMPTS¶. When using STABILITY_ANALYSIS FOLLOW, maximum number of orbital optimization attempts to make the wavefunction stable. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__max_attempts-1.html:215,optimiz,optimization,215,psi4manual/1.4.0/autodir_options_c/scf__max_attempts-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__max_attempts-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MAX_ATTEMPTS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. MAX_ATTEMPTS¶. When using STABILITY_ANALYSIS FOLLOW, maximum number of orbital optimization attempts to make the wavefunction stable. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__max_attempts-1.html:215,optimiz,optimization,215,psi4manual/1.5.0/autodir_options_c/scf__max_attempts-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__max_attempts-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MAX_ATTEMPTS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. MAX_ATTEMPTS¶. When using STABILITY_ANALYSIS FOLLOW, maximum number of orbital optimization attempts to make the wavefunction stable. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__max_attempts.html:215,optimiz,optimization,215,psi4manual/1.6.x/autodir_options_c/scf__max_attempts.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__max_attempts.html,1,['optimiz'],['optimization']
Performance,"﻿. MAX_ATTEMPTS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. MAX_ATTEMPTS¶. When using STABILITY_ANALYSIS FOLLOW, maximum number of orbital optimization attempts to make the wavefunction stable. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__max_attempts.html:215,optimiz,optimization,215,psi4manual/1.7.x/autodir_options_c/scf__max_attempts.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__max_attempts.html,1,['optimiz'],['optimization']
Performance,"﻿. MAX_ATTEMPTS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. MAX_ATTEMPTS¶. When using STABILITY_ANALYSIS FOLLOW, maximum number of orbital optimization attempts to make the wavefunction stable. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__max_attempts.html:217,optimiz,optimization,217,psi4manual/1.8.x/autodir_options_c/scf__max_attempts.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__max_attempts.html,1,['optimiz'],['optimization']
Performance,"﻿. MAX_ATTEMPTS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. MAX_ATTEMPTS¶. When using STABILITY_ANALYSIS FOLLOW, maximum number of orbital optimization attempts to make the wavefunction stable. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; MAX_ATTEMPTS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__max_attempts.html:217,optimiz,optimization,217,psi4manual/1.9.x/autodir_options_c/scf__max_attempts.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__max_attempts.html,1,['optimiz'],['optimization']
Performance,"﻿. MCSCF: Multi-Configurational Self-Consistent-Field. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; MCSCF: Multi-Configurational Self-Consistent-Field. MCSCF: Multi-Configurational Self-Consistent-Field¶; Code author: Daniel G. A. Smith, C. David Sherrill, and Matthew L. Leininger; Section author: Daniel G. A. Smith and C. David Sherrill; Module: Keywords, PSI Variables, DETCI; As the cost of Full CI scales exponentially with respect to the number of; active orbitals it is often advantageous to neglect orbitals that do not; exhibit strong correlation. These orbitals are variationally optimized; simultaneously with the CI coefficients and known as Multi-Configurational; Self-Consistent Field (MCSCF). The most commonly used MCSCF procedure is the; complete-active-space self-consistent-field (CASSCF) approach [Roos:1980],; which includes all possible determinants (with the proper symmetry) that can be; formed by distributing a set of active electrons among a set of active; orbitals. The MCSCF module performs CASSCF optimization of molecular orbitals; via a two-step procedure in which the CI coefficients and orbitals are; optimized in an alternating manner. The program uses a fairly simple; approximate orbital Hessian [Chaban:1997:88] and a Newton-Raphson update,; accelerated by Pulay’s DIIS procedure [Pulay:1980]. We have also implemented; the RASSCF method [Malmqvist:1990:RASSCF], which is another kind of MCSCF; which is typically less complete (and less expensive) than CASSCF.; Inactive orbitals in the MCSCF may be specified by the; RESTRICTED_DOCC and RESTRICTED_UOCC keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively, in the; MCSCF wavefunction. However, the form of these orbitals will be optimized in; the MCSCF procedure. It is also possible to literally freeze inactive orbitals; in their original (SCF) form using the FROZEN_DOCC and; FROZEN_UOCC keywords. This is ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/mcscf.html:656,optimiz,optimized,656,psi4manual/master/mcscf.html,https://psicode.org,https://psicode.org/psi4manual/master/mcscf.html,1,['optimiz'],['optimized']
Performance,"﻿. MCSCF: Multi-Configurational Self-Consistent-Field. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; MCSCF: Multi-Configurational Self-Consistent-Field. MCSCF: Multi-Configurational Self-Consistent-Field¶; Code author: Daniel G. A. Smith, C. David Sherrill, and Matthew L. Leininger; Section author: Daniel G. A. Smith and C. David Sherrill; Module: Keywords, PSI Variables, DETCI; As the cost of Full CI scales exponentially with respect to the number of; active orbitals it is often advantageous to neglect orbitals that do not; exhibit strong correlation. These orbitals are variationally optimized; simultaneously with the CI coefficients and known as Multi-Configurational; Self-Consistent Field (MCSCF). The most commonly used MCSCF procedure is the; complete-active-space self-consistent-field (CASSCF) approach [Roos:1980],; which includes all possible determinants (with the proper symmetry) that can be; formed by distributing a set of active electrons among a set of active; orbitals. The MCSCF module performs CASSCF optimization of molecular orbitals; via a two-step procedure in which the CI coefficients and orbitals are; optimized in an alternating manner. The program uses a fairly simple; approximate orbital Hessian [Chaban:1997:88] and a Newton-Raphson update,; accelerated by Pulay’s DIIS procedure [Pulay:1980]. We have also implemented; the RASSCF method [Malmqvist:1990:RASSCF], which is another kind of MCSCF; which is typically less complete (and less expensive) than CASSCF.; Inactive orbitals in the MCSCF may be specified by the; RESTRICTED_DOCC and RESTRICTED_UOCC keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively, in the; MCSCF wavefunction. However, the form of these orbitals will be optimized in; the MCSCF procedure. It is also possible to literally freeze inactive orbitals; in their original (SCF) form using the FROZEN_DOCC and; FROZEN_UOCC keywords. This is not norma",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/mcscf-1.html:647,optimiz,optimized,647,psi4manual/1.4.0/mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/mcscf-1.html,2,['optimiz'],['optimized']
Performance,"﻿. MCSCF: Multi-Configurational Self-Consistent-Field. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; MCSCF: Multi-Configurational Self-Consistent-Field. MCSCF: Multi-Configurational Self-Consistent-Field¶; Code author: Daniel G. A. Smith, C. David Sherrill, and Matthew L. Leininger; Section author: Daniel G. A. Smith and C. David Sherrill; Module: Keywords, PSI Variables, DETCI; As the cost of Full CI scales exponentially with respect to the number of; active orbitals it is often advantageous to neglect orbitals that do not; exhibit strong correlation. These orbitals are variationally optimized; simultaneously with the CI coefficients and known as Multi-Configurational; Self-Consistent Field (MCSCF). The most commonly used MCSCF procedure is the; complete-active-space self-consistent-field (CASSCF) approach [Roos:1980],; which includes all possible determinants (with the proper symmetry) that can be; formed by distributing a set of active electrons among a set of active; orbitals. The MCSCF module performs CASSCF optimization of molecular orbitals; via a two-step procedure in which the CI coefficients and orbitals are; optimized in an alternating manner. The program uses a fairly simple; approximate orbital Hessian [Chaban:1997:88] and a Newton-Raphson update,; accelerated by Pulay’s DIIS procedure [Pulay:1980]. We have also implemented; the RASSCF method [Malmqvist:1990:RASSCF], which is another kind of MCSCF; which is typically less complete (and less expensive) than CASSCF.; Inactive orbitals in the MCSCF may be specified by the; RESTRICTED_DOCC and RESTRICTED_UOCC keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively, in the; MCSCF wavefunction. However, the form of these orbitals will be optimized in; the MCSCF procedure. It is also possible to literally freeze inactive orbitals; in their original (SCF) form using the FROZEN_DOCC and; FROZEN_UOCC keywords. This is not norma",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/mcscf-1.html:647,optimiz,optimized,647,psi4manual/1.5.0/mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/mcscf-1.html,2,['optimiz'],['optimized']
Performance,"﻿. MCSCF: Multi-Configurational Self-Consistent-Field. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; MCSCF: Multi-Configurational Self-Consistent-Field. MCSCF: Multi-Configurational Self-Consistent-Field¶; Code author: Daniel G. A. Smith, C. David Sherrill, and Matthew L. Leininger; Section author: Daniel G. A. Smith and C. David Sherrill; Module: Keywords, PSI Variables, DETCI; As the cost of Full CI scales exponentially with respect to the number of; active orbitals it is often advantageous to neglect orbitals that do not; exhibit strong correlation. These orbitals are variationally optimized; simultaneously with the CI coefficients and known as Multi-Configurational; Self-Consistent Field (MCSCF). The most commonly used MCSCF procedure is the; complete-active-space self-consistent-field (CASSCF) approach [Roos:1980],; which includes all possible determinants (with the proper symmetry) that can be; formed by distributing a set of active electrons among a set of active; orbitals. The MCSCF module performs CASSCF optimization of molecular orbitals; via a two-step procedure in which the CI coefficients and orbitals are; optimized in an alternating manner. The program uses a fairly simple; approximate orbital Hessian [Chaban:1997:88] and a Newton-Raphson update,; accelerated by Pulay’s DIIS procedure [Pulay:1980]. We have also implemented; the RASSCF method [Malmqvist:1990:RASSCF], which is another kind of MCSCF; which is typically less complete (and less expensive) than CASSCF.; Inactive orbitals in the MCSCF may be specified by the; RESTRICTED_DOCC and RESTRICTED_UOCC keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively, in the; MCSCF wavefunction. However, the form of these orbitals will be optimized in; the MCSCF procedure. It is also possible to literally freeze inactive orbitals; in their original (SCF) form using the FROZEN_DOCC and; FROZEN_UOCC keywords. This is not norma",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/mcscf.html:647,optimiz,optimized,647,psi4manual/1.6.x/mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/mcscf.html,1,['optimiz'],['optimized']
Performance,"﻿. MCSCF: Multi-Configurational Self-Consistent-Field. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; MCSCF: Multi-Configurational Self-Consistent-Field. MCSCF: Multi-Configurational Self-Consistent-Field¶; Code author: Daniel G. A. Smith, C. David Sherrill, and Matthew L. Leininger; Section author: Daniel G. A. Smith and C. David Sherrill; Module: Keywords, PSI Variables, DETCI; As the cost of Full CI scales exponentially with respect to the number of; active orbitals it is often advantageous to neglect orbitals that do not; exhibit strong correlation. These orbitals are variationally optimized; simultaneously with the CI coefficients and known as Multi-Configurational; Self-Consistent Field (MCSCF). The most commonly used MCSCF procedure is the; complete-active-space self-consistent-field (CASSCF) approach [Roos:1980],; which includes all possible determinants (with the proper symmetry) that can be; formed by distributing a set of active electrons among a set of active; orbitals. The MCSCF module performs CASSCF optimization of molecular orbitals; via a two-step procedure in which the CI coefficients and orbitals are; optimized in an alternating manner. The program uses a fairly simple; approximate orbital Hessian [Chaban:1997:88] and a Newton-Raphson update,; accelerated by Pulay’s DIIS procedure [Pulay:1980]. We have also implemented; the RASSCF method [Malmqvist:1990:RASSCF], which is another kind of MCSCF; which is typically less complete (and less expensive) than CASSCF.; Inactive orbitals in the MCSCF may be specified by the; RESTRICTED_DOCC and RESTRICTED_UOCC keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively, in the; MCSCF wavefunction. However, the form of these orbitals will be optimized in; the MCSCF procedure. It is also possible to literally freeze inactive orbitals; in their original (SCF) form using the FROZEN_DOCC and; FROZEN_UOCC keywords. This is not norma",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/mcscf.html:647,optimiz,optimized,647,psi4manual/1.7.x/mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/mcscf.html,1,['optimiz'],['optimized']
Performance,"﻿. MCSCF: Multi-Configurational Self-Consistent-Field. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; MCSCF: Multi-Configurational Self-Consistent-Field. MCSCF: Multi-Configurational Self-Consistent-Field¶; Code author: Daniel G. A. Smith, C. David Sherrill, and Matthew L. Leininger; Section author: Daniel G. A. Smith and C. David Sherrill; Module: Keywords, PSI Variables, DETCI; As the cost of Full CI scales exponentially with respect to the number of; active orbitals it is often advantageous to neglect orbitals that do not; exhibit strong correlation. These orbitals are variationally optimized; simultaneously with the CI coefficients and known as Multi-Configurational; Self-Consistent Field (MCSCF). The most commonly used MCSCF procedure is the; complete-active-space self-consistent-field (CASSCF) approach [Roos:1980],; which includes all possible determinants (with the proper symmetry) that can be; formed by distributing a set of active electrons among a set of active; orbitals. The MCSCF module performs CASSCF optimization of molecular orbitals; via a two-step procedure in which the CI coefficients and orbitals are; optimized in an alternating manner. The program uses a fairly simple; approximate orbital Hessian [Chaban:1997:88] and a Newton-Raphson update,; accelerated by Pulay’s DIIS procedure [Pulay:1980]. We have also implemented; the RASSCF method [Malmqvist:1990:RASSCF], which is another kind of MCSCF; which is typically less complete (and less expensive) than CASSCF.; Inactive orbitals in the MCSCF may be specified by the; RESTRICTED_DOCC and RESTRICTED_UOCC keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively, in the; MCSCF wavefunction. However, the form of these orbitals will be optimized in; the MCSCF procedure. It is also possible to literally freeze inactive orbitals; in their original (SCF) form using the FROZEN_DOCC and; FROZEN_UOCC keywords. This is not nor",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/mcscf.html:649,optimiz,optimized,649,psi4manual/1.8.x/mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/mcscf.html,1,['optimiz'],['optimized']
Performance,"﻿. MCSCF: Multi-Configurational Self-Consistent-Field. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; MCSCF: Multi-Configurational Self-Consistent-Field. MCSCF: Multi-Configurational Self-Consistent-Field¶; Code author: Daniel G. A. Smith, C. David Sherrill, and Matthew L. Leininger; Section author: Daniel G. A. Smith and C. David Sherrill; Module: Keywords, PSI Variables, DETCI; As the cost of Full CI scales exponentially with respect to the number of; active orbitals it is often advantageous to neglect orbitals that do not; exhibit strong correlation. These orbitals are variationally optimized; simultaneously with the CI coefficients and known as Multi-Configurational; Self-Consistent Field (MCSCF). The most commonly used MCSCF procedure is the; complete-active-space self-consistent-field (CASSCF) approach [Roos:1980],; which includes all possible determinants (with the proper symmetry) that can be; formed by distributing a set of active electrons among a set of active; orbitals. The MCSCF module performs CASSCF optimization of molecular orbitals; via a two-step procedure in which the CI coefficients and orbitals are; optimized in an alternating manner. The program uses a fairly simple; approximate orbital Hessian [Chaban:1997:88] and a Newton-Raphson update,; accelerated by Pulay’s DIIS procedure [Pulay:1980]. We have also implemented; the RASSCF method [Malmqvist:1990:RASSCF], which is another kind of MCSCF; which is typically less complete (and less expensive) than CASSCF.; Inactive orbitals in the MCSCF may be specified by the; RESTRICTED_DOCC and RESTRICTED_UOCC keywords. These; orbitals will remain doubly-occupied or doubly-unoccupied, respectively, in the; MCSCF wavefunction. However, the form of these orbitals will be optimized in; the MCSCF procedure. It is also possible to literally freeze inactive orbitals; in their original (SCF) form using the FROZEN_DOCC and; FROZEN_UOCC keywords. This is not nor",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/mcscf.html:649,optimiz,optimized,649,psi4manual/1.9.x/mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/mcscf.html,1,['optimiz'],['optimized']
Performance,"﻿. MO_STEP_MAX — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. Previous topic; MO_READ; Next topic; MO_WRITE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__mo_step_max-1.html:214,optimiz,optimization,214,psi4manual/4.0b3/autodir_options_c/omp2__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. Previous topic; MO_READ; Next topic; MO_WRITE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__mo_step_max-1.html:214,optimiz,optimization,214,psi4manual/4.0b3/autodir_options_c/omp3__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. Previous topic; MO_READ; Next topic; MO_WRITE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__mo_step_max-1.html:213,optimiz,optimization,213,psi4manual/4.0b4/autodir_options_c/occ__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. Previous topic; MO_READ; Next topic; MO_WRITE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__mo_step_max-1.html:213,optimiz,optimization,213,psi4manual/4.0b5/autodir_options_c/occ__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. Previous topic; MO_MAXITER; Next topic; MOLDEN_WRITE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__mo_step_max-1.html:222,optimiz,optimization,222,psi4manual/1.0.0/autodir_options_c/dfocc__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. Previous topic; MO_READ; Next topic; MO_WRITE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__mo_step_max-1.html:220,optimiz,optimization,220,psi4manual/1.0.0/autodir_options_c/occ__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__mo_step_max.html:188,optimiz,optimization,188,psi4manual/master/autodir_options_c/dfocc__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/occ__mo_step_max.html:186,optimiz,optimization,186,psi4manual/master/autodir_options_c/occ__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/occ__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__mo_step_max-1.html:179,optimiz,optimization,179,psi4manual/1.4.0/autodir_options_c/dfocc__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__mo_step_max-1.html:177,optimiz,optimization,177,psi4manual/1.4.0/autodir_options_c/occ__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__mo_step_max-1.html:179,optimiz,optimization,179,psi4manual/1.5.0/autodir_options_c/dfocc__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__mo_step_max-1.html:177,optimiz,optimization,177,psi4manual/1.5.0/autodir_options_c/occ__mo_step_max-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__mo_step_max-1.html,2,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__mo_step_max.html:179,optimiz,optimization,179,psi4manual/1.6.x/autodir_options_c/dfocc__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__mo_step_max.html:177,optimiz,optimization,177,psi4manual/1.6.x/autodir_options_c/occ__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__mo_step_max.html:179,optimiz,optimization,179,psi4manual/1.7.x/autodir_options_c/dfocc__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__mo_step_max.html:177,optimiz,optimization,177,psi4manual/1.7.x/autodir_options_c/occ__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__mo_step_max.html:181,optimiz,optimization,181,psi4manual/1.8.x/autodir_options_c/dfocc__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__mo_step_max.html:179,optimiz,optimization,179,psi4manual/1.8.x/autodir_options_c/occ__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; MO_STEP_MAX. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__mo_step_max.html:181,optimiz,optimization,181,psi4manual/1.9.x/autodir_options_c/dfocc__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MO_STEP_MAX. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. MO_STEP_MAX¶. Maximum step size in orbital-optimization procedure. Type: double; Default: 0.5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; MO_STEP_MAX. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__mo_step_max.html:179,optimiz,optimization,179,psi4manual/1.9.x/autodir_options_c/occ__mo_step_max.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__mo_step_max.html,1,['optimiz'],['optimization']
Performance,"﻿. MP2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». MP2¶; Performs second order Moller-Plesset perturbation theory (MP2) computations. This code can compute RHF/ROHF/UHF energies, and RHF gradient/property computations. However, given the small errors introduced, we recommend using the new density fitted MP2 codes instead, which are much more efficient. General¶. CACHELEVEL¶. The amount of cacheing of data to perform. Type: integer; Default: 2. CACHETYPE¶. The criterion used to retain/release cached data. Type: string; Possible Values: LRU, LOW; Default: LRU. MP2_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. Type: double; Default: 6.0/5.0. MP2_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. Type: double; Default: 1.0/3.0. OPDM¶. Do compute the one particle density matrix, for properties?. Type: boolean; Default: false. OPDM_RELAX¶. Do add relaxation terms to the one particle density matrix, for properties?. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, UHF, ROHF; Default: RHF. SCS¶. Do perform a spin component scaled MP2 computation?. Type: boolean; Default: false. SCS_N¶. Do perform a spin component scaled (N) MP2 computation?. Type: boolean; Default: false. Expert¶. JOBTYPE¶. Type of job being performed. Type: string; Default: SP. WFN¶. Wavefunction type. Type: string; Possible Values: MP2; Default: MP2. Table Of Contents. MP2; General; CACHELEVEL; CACHETYPE; MP2_OS_SCALE; MP2_SS_SCALE; OPDM; OPDM_RELAX; REFERENCE; SCS; SCS_N. Expert; JOBTYPE; WFN. Previous topic; BASIS; Next topic; CACHELEVEL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__mp2-1.html:481,cache,cacheing,481,psi4manual/4.0b2/autodir_options_c/module__mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__mp2-1.html,6,"['cache', 'perform']","['cached', 'cacheing', 'perform']"
Performance,"﻿. MP2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». MP2¶; Performs second order Moller-Plesset perturbation theory (MP2) computations. This code can compute RHF/ROHF/UHF energies, and RHF gradient/property computations. However, given the small errors introduced, we recommend using the new density fitted MP2 codes instead, which are much more efficient. General¶. CACHELEVEL¶. The amount of cacheing of data to perform. Type: integer; Default: 2. CACHETYPE¶. The criterion used to retain/release cached data. Type: string; Possible Values: LRU, LOW; Default: LRU. MP2_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. Type: double; Default: 6.0/5.0. MP2_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. Type: double; Default: 1.0/3.0. MP2_TYPE¶. What algorithm to use for the MP2 computation. Type: string; Possible Values: DF, CONV; Default: DF. OPDM¶. Do compute the one particle density matrix, for properties?. Type: boolean; Default: false. OPDM_RELAX¶. Do add relaxation terms to the one particle density matrix, for properties?. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, UHF, ROHF; Default: RHF. SCS¶. Do perform a spin component scaled MP2 computation?. Type: boolean; Default: false. SCS_N¶. Do perform a spin component scaled (N) MP2 computation?. Type: boolean; Default: false. Expert¶. JOBTYPE¶. Type of job being performed. Type: string; Default: SP. WFN¶. Wavefunction type. Type: string; Possible Values: MP2; Default: MP2. Table Of Contents. MP2; General; CACHELEVEL; CACHETYPE; MP2_OS_SCALE; MP2_SS_SCALE; MP2_TYPE; OPDM; OPDM_RELAX; REFERENCE; SCS; SCS_N. Expert; JOBTYPE; WFN. Previous topic; OMEGA_ERF; Next topic; CACHELEVEL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . t",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__mp2-1.html:496,cache,cacheing,496,psi4manual/4.0b3/autodir_options_c/module__mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__mp2-1.html,6,"['cache', 'perform']","['cached', 'cacheing', 'perform']"
Performance,"﻿. MP2_CCSD_METHOD — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. Previous topic; MAXITER; Next topic; MP2_GUESS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__mp2_ccsd_method-1.html:188,perform,perform,188,psi4manual/4.0b2/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,2,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. Previous topic; MAXITER; Next topic; MP2_GUESS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__mp2_ccsd_method-1.html:203,perform,perform,203,psi4manual/4.0b3/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,2,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. Previous topic; MAXITER; Next topic; MP2_GUESS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__mp2_ccsd_method-1.html:203,perform,perform,203,psi4manual/4.0b4/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,2,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. Previous topic; MAXITER; Next topic; MP2_GUESS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__mp2_ccsd_method-1.html:203,perform,perform,203,psi4manual/4.0b5/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,2,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. Previous topic; MAXITER; Next topic; MP2_GUESS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__mp2_ccsd_method-1.html:210,perform,perform,210,psi4manual/1.0.0/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,2,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__mp2_ccsd_method.html:180,perform,perform,180,psi4manual/master/autodir_options_c/psimrcc__mp2_ccsd_method.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__mp2_ccsd_method.html,1,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__mp2_ccsd_method-1.html:171,perform,perform,171,psi4manual/1.4.0/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,2,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__mp2_ccsd_method-1.html:171,perform,perform,171,psi4manual/1.5.0/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__mp2_ccsd_method-1.html,2,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__mp2_ccsd_method.html:171,perform,perform,171,psi4manual/1.6.x/autodir_options_c/psimrcc__mp2_ccsd_method.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__mp2_ccsd_method.html,1,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__mp2_ccsd_method.html:171,perform,perform,171,psi4manual/1.7.x/autodir_options_c/psimrcc__mp2_ccsd_method.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__mp2_ccsd_method.html,1,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__mp2_ccsd_method.html:173,perform,perform,173,psi4manual/1.8.x/autodir_options_c/psimrcc__mp2_ccsd_method.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__mp2_ccsd_method.html,1,['perform'],['perform']
Performance,"﻿. MP2_CCSD_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. MP2_CCSD_METHOD¶. How to perform MP2_CCSD computations. Type: string; Possible Values: I, IA, II; Default: II. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; MP2_CCSD_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__mp2_ccsd_method.html:173,perform,perform,173,psi4manual/1.9.x/autodir_options_c/psimrcc__mp2_ccsd_method.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__mp2_ccsd_method.html,1,['perform'],['perform']
Performance,"﻿. MP2_SOS_SCALE2 — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. Previous topic; MP2_SOS_SCALE; Next topic; MP2_SS_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__mp2_sos_scale2-1.html:228,optimiz,optimized-,228,psi4manual/4.0b4/autodir_options_c/occ__mp2_sos_scale2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__mp2_sos_scale2-1.html,2,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2 — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. Previous topic; MP2_SOS_SCALE; Next topic; MP2_SS_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__mp2_sos_scale2-1.html:228,optimiz,optimized-,228,psi4manual/4.0b5/autodir_options_c/occ__mp2_sos_scale2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__mp2_sos_scale2-1.html,2,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. Previous topic; MP2_SOS_SCALE; Next topic; MP2_SS_SCALE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__mp2_sos_scale2-1.html:237,optimiz,optimized-,237,psi4manual/1.0.0/autodir_options_c/dfocc__mp2_sos_scale2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__mp2_sos_scale2-1.html,2,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. Previous topic; MP2_SOS_SCALE; Next topic; MP2_SS_SCALE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__mp2_sos_scale2-1.html:235,optimiz,optimized-,235,psi4manual/1.0.0/autodir_options_c/occ__mp2_sos_scale2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__mp2_sos_scale2-1.html,2,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__mp2_sos_scale2.html:206,optimiz,optimized-,206,psi4manual/master/autodir_options_c/dfocc__mp2_sos_scale2.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__mp2_sos_scale2.html,1,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__mp2_sos_scale2-1.html:197,optimiz,optimized-,197,psi4manual/1.4.0/autodir_options_c/dfocc__mp2_sos_scale2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__mp2_sos_scale2-1.html,2,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__mp2_sos_scale2-1.html:197,optimiz,optimized-,197,psi4manual/1.5.0/autodir_options_c/dfocc__mp2_sos_scale2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__mp2_sos_scale2-1.html,2,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__mp2_sos_scale2.html:197,optimiz,optimized-,197,psi4manual/1.6.x/autodir_options_c/dfocc__mp2_sos_scale2.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__mp2_sos_scale2.html,1,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__mp2_sos_scale2.html:197,optimiz,optimized-,197,psi4manual/1.7.x/autodir_options_c/dfocc__mp2_sos_scale2.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__mp2_sos_scale2.html,1,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__mp2_sos_scale2.html:199,optimiz,optimized-,199,psi4manual/1.8.x/autodir_options_c/dfocc__mp2_sos_scale2.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__mp2_sos_scale2.html,1,['optimiz'],['optimized-']
Performance,"﻿. MP2_SOS_SCALE2. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. MP2_SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; MP2_SOS_SCALE2. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__mp2_sos_scale2.html:199,optimiz,optimized-,199,psi4manual/1.9.x/autodir_options_c/dfocc__mp2_sos_scale2.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__mp2_sos_scale2.html,1,['optimiz'],['optimized-']
Performance,"﻿. MP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. MP_TYPE¶. Algorithm to use for MPn ( \(n>2\) ) computation (e.g., MP3 or MP2.5 or MP4(SDQ)). See Cross-module Redundancies for details. Since v1.4, default for non-orbital-optimized MP2.5 and MP3 is DF. Type: string; Possible Values: DF, CONV, CD; Default: CONV. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/globals__mp_type.html:311,optimiz,optimized,311,psi4manual/master/autodir_options_c/globals__mp_type.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/globals__mp_type.html,1,['optimiz'],['optimized']
Performance,"﻿. MP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. MP_TYPE¶. Algorithm to use for MPn ( \(n>2\) ) computation (e.g., MP3 or MP2.5 or MP4(SDQ)). See Cross-module Redundancies for details. Since v1.4, default for non-orbital-optimized MP2.5 and MP3 is DF. Type: string; Possible Values: DF, CONV, CD; Default: CONV. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__mp_type-1.html:302,optimiz,optimized,302,psi4manual/1.4.0/autodir_options_c/globals__mp_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__mp_type-1.html,2,['optimiz'],['optimized']
Performance,"﻿. MP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. MP_TYPE¶. Algorithm to use for MPn ( \(n>2\) ) computation (e.g., MP3 or MP2.5 or MP4(SDQ)). See Cross-module Redundancies for details. Since v1.4, default for non-orbital-optimized MP2.5 and MP3 is DF. Type: string; Possible Values: DF, CONV, CD; Default: CONV. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__mp_type-1.html:302,optimiz,optimized,302,psi4manual/1.5.0/autodir_options_c/globals__mp_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__mp_type-1.html,2,['optimiz'],['optimized']
Performance,"﻿. MP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. MP_TYPE¶. Algorithm to use for MPn ( \(n>2\) ) computation (e.g., MP3 or MP2.5 or MP4(SDQ)). See Cross-module Redundancies for details. Since v1.4, default for non-orbital-optimized MP2.5 and MP3 is DF. Type: string; Possible Values: DF, CONV, CD; Default: CONV. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__mp_type.html:302,optimiz,optimized,302,psi4manual/1.6.x/autodir_options_c/globals__mp_type.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__mp_type.html,1,['optimiz'],['optimized']
Performance,"﻿. MP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. MP_TYPE¶. Algorithm to use for MPn ( \(n>2\) ) computation (e.g., MP3 or MP2.5 or MP4(SDQ)). See Cross-module Redundancies for details. Since v1.4, default for non-orbital-optimized MP2.5 and MP3 is DF. Type: string; Possible Values: DF, CONV, CD; Default: CONV. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__mp_type.html:302,optimiz,optimized,302,psi4manual/1.7.x/autodir_options_c/globals__mp_type.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__mp_type.html,1,['optimiz'],['optimized']
Performance,"﻿. MP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. MP_TYPE¶. Algorithm to use for MPn ( \(n>2\) ) computation (e.g., MP3 or MP2.5 or MP4(SDQ)). See Cross-module Redundancies for details. Since v1.4, default for non-orbital-optimized MP2.5 and MP3 is DF. Type: string; Possible Values: DF, CONV, CD; Default: CONV. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__mp_type.html:304,optimiz,optimized,304,psi4manual/1.8.x/autodir_options_c/globals__mp_type.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__mp_type.html,1,['optimiz'],['optimized']
Performance,"﻿. MP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. MP_TYPE¶. Algorithm to use for MPn ( \(n>2\) ) computation (e.g., MP3 or MP2.5 or MP4(SDQ)). See Cross-module Redundancies for details. Since v1.4, default for non-orbital-optimized MP2.5 and MP3 is DF. Type: string; Possible Values: DF, CONV, CD; Default: CONV. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; MP_TYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__mp_type.html:304,optimiz,optimized,304,psi4manual/1.9.x/autodir_options_c/globals__mp_type.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__mp_type.html,1,['optimiz'],['optimized']
Performance,"﻿. MRCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Test Suite and Sample Inputs ». MRCC¶. Input File; Description. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. Previous topic; DFTD3; Next topic; CFOUR. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Test Suite and Sample Inputs ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_testsuite_mrcc-1.html:244,optimiz,optimization,244,psi4manual/1.0.0/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_testsuite_mrcc-1.html,4,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_testsuite_mrcc.html:194,optimiz,optimization,194,psi4manual/master/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_testsuite_mrcc.html,2,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. MRCC¶. Input File; Description. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodoc_testsuite_mrcc-1.html:179,optimiz,optimization,179,psi4manual/1.1.0/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodoc_testsuite_mrcc-1.html,4,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. MRCC¶. Input File; Description. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_mrcc-1.html:181,optimiz,optimization,181,psi4manual/1.2.1/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_mrcc-1.html,4,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. MRCC¶. Input File; Description. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_mrcc-1.html:181,optimiz,optimization,181,psi4manual/1.3.2/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_mrcc-1.html,4,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_mrcc-1.html:379,optimiz,optimization,379,psi4manual/1.4.0/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_mrcc-1.html,4,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_mrcc-1.html:251,optimiz,optimization,251,psi4manual/1.5.0/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_mrcc-1.html,4,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_mrcc.html:262,optimiz,optimization,262,psi4manual/1.6.x/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_mrcc.html,2,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_mrcc.html:262,optimiz,optimization,262,psi4manual/1.7.x/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_mrcc.html,2,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_mrcc.html:198,optimiz,optimization,198,psi4manual/1.8.x/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_mrcc.html,2,['optimiz'],['optimization']
Performance,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_mrcc.html:198,optimiz,optimization,198,psi4manual/1.9.x/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_mrcc.html,2,['optimiz'],['optimization']
Performance,"﻿. MRCC_METHOD — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 | begin{tabular}{ccc} | Value & Method & Description \ | hline | 1 & CC & \ | 2 & CC(n-1)[n] & \ | 3 & CC(n-1)(n) & (CC(n-1)[n] energy is also calculated) \ | 4 & CC(n-1)(n)_L & (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) \ | 5 & CC(n)-1a & \ | 6 & CC(n)-1b & \ | 7 & CCn & \ | 8 & CC(n)-3 & \ | end{tabular}. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_SINGLET_ROOTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mrcc__mrcc_method-1.html:247,perform,performed,247,psi4manual/4.0b2/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mrcc__mrcc_method-1.html,2,['perform'],['performed']
Performance,"﻿. MRCC_METHOD — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 | begin{tabular}{ccc} | Value & Method & Description \ | hline | 1 & CC & \ | 2 & CC(n-1)[n] & \ | 3 & CC(n-1)(n) & (CC(n-1)[n] energy is also calculated) \ | 4 & CC(n-1)(n)_L & (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) \ | 5 & CC(n)-1a & \ | 6 & CC(n)-1b & \ | 7 & CCn & \ | 8 & CC(n)-3 & \ | end{tabular}. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_SINGLET_ROOTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mrcc__mrcc_method-1.html:262,perform,performed,262,psi4manual/4.0b3/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mrcc__mrcc_method-1.html,2,['perform'],['performed']
Performance,"﻿. MRCC_METHOD — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 .. table:: MRCC methods +——-+————–+————————————————————-+ + Value + Method + Description + +=======+==============+=============================================================+ + 1 + CC + + +——-+————–+————————————————————-+ + 2 + CC(n-1)[n] + + +——-+————–+————————————————————-+ + 3 + CC(n-1)(n) + (CC(n-1)[n] energy is also calculated) + +——-+————–+————————————————————-+ + 4 + CC(n-1)(n)_L + (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) + +——-+————–+————————————————————-+ + 5 + CC(n)-1a + + +——-+————–+————————————————————-+ + 6 + CC(n)-1b + + +——-+————–+————————————————————-+ + 7 + CCn + + +——-+————–+————————————————————-+ + 8 + CC(n)-3 + + +——-+————–+————————————————————-+. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_SINGLET_ROOTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mrcc__mrcc_method-1.html:262,perform,performed,262,psi4manual/4.0b4/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mrcc__mrcc_method-1.html,2,['perform'],['performed']
Performance,"﻿. MRCC_METHOD — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 .. table:: MRCC methods +——-+————–+————————————————————-+ + Value + Method + Description + +=======+==============+=============================================================+ + 1 + CC + + +——-+————–+————————————————————-+ + 2 + CC(n-1)[n] + + +——-+————–+————————————————————-+ + 3 + CC(n-1)(n) + (CC(n-1)[n] energy is also calculated) + +——-+————–+————————————————————-+ + 4 + CC(n-1)(n)_L + (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) + +——-+————–+————————————————————-+ + 5 + CC(n)-1a + + +——-+————–+————————————————————-+ + 6 + CC(n)-1b + + +——-+————–+————————————————————-+ + 7 + CCn + + +——-+————–+————————————————————-+ + 8 + CC(n)-3 + + +——-+————–+————————————————————-+. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_DOUBLET_ROOTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mrcc__mrcc_method-1.html:262,perform,performed,262,psi4manual/4.0b5/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mrcc__mrcc_method-1.html,2,['perform'],['performed']
Performance,"﻿. MRCC_METHOD — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_DOUBLET_ROOTS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mrcc__mrcc_method-1.html:269,perform,performed,269,psi4manual/1.0.0/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mrcc__mrcc_method-1.html,2,['perform'],['performed']
Performance,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/mrcc__mrcc_method.html:235,perform,performed,235,psi4manual/master/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/mrcc__mrcc_method.html,1,['perform'],['performed']
Performance,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mrcc__mrcc_method-1.html:226,perform,performed,226,psi4manual/1.4.0/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mrcc__mrcc_method-1.html,2,['perform'],['performed']
Performance,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mrcc__mrcc_method-1.html:226,perform,performed,226,psi4manual/1.5.0/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mrcc__mrcc_method-1.html,2,['perform'],['performed']
Performance,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mrcc__mrcc_method.html:226,perform,performed,226,psi4manual/1.6.x/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mrcc__mrcc_method.html,1,['perform'],['performed']
Performance,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mrcc__mrcc_method.html:226,perform,performed,226,psi4manual/1.7.x/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mrcc__mrcc_method.html,1,['perform'],['performed']
Performance,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mrcc__mrcc_method.html:228,perform,performed,228,psi4manual/1.8.x/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mrcc__mrcc_method.html,1,['perform'],['performed']
Performance,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mrcc__mrcc_method.html:228,perform,performed,228,psi4manual/1.9.x/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mrcc__mrcc_method.html,1,['perform'],['performed']
Performance,"﻿. Notes on Options — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; nearest preceeding molecule declared in a molecule name {...} block. Note; that the value of this keyword (name in the example) is a Python object and; so is not wrapped in quotes like a string. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Energy; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/notes_py-1.html:813,optimiz,optimize,813,psi4manual/4.0b2/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; nearest preceeding molecule declared in a molecule name {...} block. Note; that the value of this keyword (name in the example) is a Python object and; so is not wrapped in quotes like a string. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Energy; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 01, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/notes_py-1.html:847,optimiz,optimize,847,psi4manual/4.0b3/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; nearest preceeding molecule declared in a molecule name {...} block. Note; that the value of this keyword (name in the example) is a Python object and; so is not wrapped in quotes like a string. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Energy; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoki",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/notes_py-1.html:847,optimiz,optimize,847,psi4manual/4.0b4/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; nearest preceeding molecule declared in a molecule name {...} block. Note; that the value of this keyword (name in the example) is a Python object and; so is not wrapped in quotes like a string. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Energy; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoki",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/notes_py-1.html:847,optimiz,optimize,847,psi4manual/4.0b5/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All Psi4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Single-Point Energy, energy(). This Page. Show Source. Quick search. Enter search terms or a m",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/notes_py-1.html:854,optimiz,optimize,854,psi4manual/1.0.0/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2007-2",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/notes_py.html:829,optimiz,optimize,829,psi4manual/master/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/master/notes_py.html,1,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/notes_py-1.html:802,optimiz,optimize,802,psi4manual/1.1.0/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 J",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/notes_py-1.html:804,optimiz,optimize,804,psi4manual/1.2.1/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 M",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/notes_py-1.html:804,optimiz,optimize,804,psi4manual/1.3.2/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2021, The Psi4 Project.;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/notes_py-1.html:820,optimiz,optimize,820,psi4manual/1.4.0/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2021, The Psi4 Project.;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/notes_py-1.html:820,optimiz,optimize,820,psi4manual/1.5.0/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/notes_py-1.html,2,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2022, The Psi4 Project.;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/notes_py.html:820,optimiz,optimize,820,psi4manual/1.6.x/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/notes_py.html,1,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2007-2022, The Psi4 Proj",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/notes_py.html:820,optimiz,optimize,820,psi4manual/1.7.x/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/notes_py.html,1,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2007-2023, The Psi4 ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/notes_py.html:822,optimiz,optimize,822,psi4manual/1.8.x/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/notes_py.html,1,['optimiz'],['optimize']
Performance,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2007-2024, The Psi4 ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/notes_py.html:822,optimiz,optimize,822,psi4manual/1.9.x/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/notes_py.html,1,['optimiz'],['optimize']
Performance,"﻿. OCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Cacheing level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantites with up to two virtual-orbital indices (e.g., integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__occ-1.html:178,optimiz,optimized,178,psi4manual/4.0b4/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__occ-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CEPA(0) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN ENERGY; MP2 SAME-SPIN ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY; OCEPA(0) TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW CORRELATION ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OCEPA(0) CORRELATION ENERGY; SCS-OCEPA(0) TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW CORRELATION ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW CORRELATION ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 CORRELATION ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SCSN-OMP3 CORRELATION ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 CORRELATION ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OCEPA(0) CORRELATION ENERGY; SOS-OCEPA(0) TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 CORRELATION ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP2 CORRELATION ENERGY; SOS-PI-OMP2 TOTAL ENERGY; SOS-PI-OMP3 CORRELATION ENERGY; SOS-PI-OMP3 TOTAL ENERGY. Previous topic; MRCC; Next topic; OPTKING; This Page. Show Source. Quick search. Enter ,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__occ-1.html:183,optimiz,optimized,183,psi4manual/4.0b4/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Cacheing level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantites with up to two virtual-orbital indices (e.g., integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__occ-1.html:178,optimiz,optimized,178,psi4manual/4.0b5/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__occ-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CEPA(0) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY; OCEPA(0) TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW CORRELATION ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OCEPA(0) CORRELATION ENERGY; SCS-OCEPA(0) TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW CORRELATION ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW CORRELATION ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 CORRELATION ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SCSN-OMP3 CORRELATION ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 CORRELATION ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OCEPA(0) CORRELATION ENERGY; SOS-OCEPA(0) TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 CORRELATION ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP2 CORRELATION ENERGY; SOS-PI-OMP2 TOTAL ENERGY; SOS-PI-OMP3 CORRELATION ENERGY; SOS-PI-OMP3 TOTAL ENERGY. Previous topic; MRCC; Next topic; OPTKING; This Page. Show Sour,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__occ-1.html:183,optimiz,optimized,183,psi4manual/4.0b5/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Cacheing level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantites with up to two virtual-orbital indices (e.g., integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimiza",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__occ-1.html:185,optimiz,optimized,185,psi4manual/1.0.0/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__occ-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; PSI Variables by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW CORRELATION ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OLCCD CORRELATION ENERGY; SCS-OLCCD TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW CORRELATION ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW CORRELATION ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 CORRELATION ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SCSN-OMP3 CORRELATION ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 CORRELATION ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OLCCD CORRELATION ENERGY; SOS-OLCCD TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 CORRELATION ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP2 CORRELATION ENERGY; SOS-PI-OMP2 TOTAL ENERGY; SOS-PI-OMP3 CORRELATION ENERGY; SOS-PI-OMP3 TOTAL ENERGY. Previous topic; MRCC; Next topic; OPTKING. This Page,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_psivariables/module__occ-1.html:190,optimiz,optimized,190,psi4manual/1.0.0/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_psivariables/module__occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__occ.html:145,optimiz,optimized,145,psi4manual/master/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__occ.html,4,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CO,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__occ.html:150,optimiz,optimized,150,psi4manual/master/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__occ.html,1,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency comput",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__occ-1.html:131,optimiz,optimized,131,psi4manual/1.1.0/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__occ-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; PSI Variables by Module. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW CORRELATION ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OLCCD CORRELATION ENERGY; SCS-OLCCD TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW CORRELATION ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW CORRELATION ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 CORRELATION ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SCSN-OMP3 CORRELATION ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 CORRELATION ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OLCCD CORRELATION ENERGY; SOS-OLCCD TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 CORRELATION ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP2 CORRELATION ENERGY; SOS-PI-OMP2 TOTAL ENERGY; SOS-PI-OMP3 CORRELATION ENERGY; SOS-PI-OMP3 TOTAL ENERGY. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; PSI Variables by Module. ©,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_psivariables/module__occ-1.html:136,optimiz,optimized,136,psi4manual/1.1.0/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_psivariables/module__occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency comp",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__occ-1.html:133,optimiz,optimized,133,psi4manual/1.2.1/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__occ-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; PSI Variables by Module. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW CORRELATION ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OLCCD CORRELATION ENERGY; SCS-OLCCD TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW CORRELATION ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW CORRELATION ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 CORRELATION ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SCSN-OMP3 CORRELATION ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 CORRELATION ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OLCCD CORRELATION ENERGY; SOS-OLCCD TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 CORRELATION ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP2 CORRELATION ENERGY; SOS-PI-OMP2 TOTAL ENERGY; SOS-PI-OMP3 CORRELATION ENERGY; SOS-PI-OMP3 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. ,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_psivariables/module__occ-1.html:138,optimiz,optimized,138,psi4manual/1.2.1/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_psivariables/module__occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” * option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__occ-1.html:133,optimiz,optimized,133,psi4manual/1.3.2/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__occ-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; PSI Variables by Module. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; LCCD CORRELATION ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW CORRELATION ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OLCCD CORRELATION ENERGY; SCS-OLCCD TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW CORRELATION ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW CORRELATION ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 CORRELATION ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SCSN-OMP3 CORRELATION ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 CORRELATION ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OLCCD CORRELATION ENERGY; SOS-OLCCD TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 CORRELATION ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP2 CORRELATION ENERGY; SOS-PI-OMP2 TOTAL ENERGY; SOS-PI-OMP3 CORRELATION ENERGY; SOS-PI-OMP3 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. ,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_psivariables/module__occ-1.html:138,optimiz,optimized,138,psi4manual/1.3.2/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_psivariables/module__occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Removed in 1.4. Will raise an error in 1.5. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Removed in 1.4. Will raise an error in 1.5. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. T",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__occ-1.html:136,optimiz,optimized,136,psi4manual/1.4.0/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__occ-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY; SCS(N)-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SOS-MP2 CORREL,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__occ-1.html:141,optimiz,optimized,141,psi4manual/1.4.0/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Removed in 1.4. Will raise an error in 1.5. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Removed in 1.4. Will raise an error in 1.5. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. T",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__occ-1.html:136,optimiz,optimized,136,psi4manual/1.5.0/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__occ-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY; SCS(N)-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SOS-MP2 CORREL,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__occ-1.html:141,optimiz,optimized,141,psi4manual/1.5.0/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_SOS¶. Rem",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__occ.html:136,optimiz,optimized,136,psi4manual/1.6.x/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__occ.html,4,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY; SCS(N)-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SOS-MP2 CORREL,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__occ.html:141,optimiz,optimized,141,psi4manual/1.6.x/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__occ.html,1,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_SOS¶. Rem",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__occ.html:136,optimiz,optimized,136,psi4manual/1.7.x/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__occ.html,4,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__occ.html:141,optimiz,optimized,141,psi4manual/1.7.x/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__occ.html,1,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_SOS¶. R",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__occ.html:138,optimiz,optimized,138,psi4manual/1.8.x/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__occ.html,4,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATI,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__occ.html:143,optimiz,optimized,143,psi4manual/1.8.x/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__occ.html,1,['optimiz'],['optimized']
Performance,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_SOS¶. R",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__occ.html:138,optimiz,optimized,138,psi4manual/1.9.x/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__occ.html,4,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATI,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__occ.html:143,optimiz,optimized,143,psi4manual/1.9.x/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__occ.html,1,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Theoretical Methods: SCF to FCI ». OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC. Introduction¶; Orbital-optimized methods have several advantages over non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann-Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invarianti [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods does not suffer from the artifactual symmetry-breaking; instabilities [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Further, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability condition. They further; discussed that the orbital response equations generally have a singularity problem a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/occ-1.html:430,optimiz,optimized,430,psi4manual/4.0b4/occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/occ-1.html,6,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Theoretical Methods: SCF to FCI ». OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC. Introduction¶; Orbital-optimized methods have several advantages over non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann-Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invarianti [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods does not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Further, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability condition. They further; discussed that the orbital response equations generally hav",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/occ-1.html:430,optimiz,optimized,430,psi4manual/4.0b5/occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/occ-1.html,6,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Theoretical Methods: SCF to FCI ». OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann-Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability condition. They further; discu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/occ-1.html:477,optimiz,optimized,477,psi4manual/1.0.0/occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/occ-1.html,6,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-represent",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/occ.html:515,optimiz,optimized,515,psi4manual/master/occ.html,https://psicode.org,https://psicode.org/psi4manual/master/occ.html,3,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability condition. They further; discussed that the orbital response equations generally h",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/occ-1.html:425,optimiz,optimized,425,psi4manual/1.1.0/occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/occ-1.html,6,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Theoretical Methods: SCF to FCI. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability condition. They further; discussed that the orbital response equations generally",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/occ-1.html:427,optimiz,optimized,427,psi4manual/1.2.1/occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/occ-1.html,6,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Theoretical Methods: SCF to FCI. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability condition. They further; discussed that the orbital response equations generally",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/occ-1.html:427,optimiz,optimized,427,psi4manual/1.3.2/occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/occ-1.html,6,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/occ-1.html:506,optimiz,optimized,506,psi4manual/1.4.0/occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/occ-1.html,6,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/occ-1.html:506,optimiz,optimized,506,psi4manual/1.5.0/occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/occ-1.html,6,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/occ.html:506,optimiz,optimized,506,psi4manual/1.6.x/occ.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/occ.html,3,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/occ.html:506,optimiz,optimized,506,psi4manual/1.7.x/occ.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/occ.html,3,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/occ.html:508,optimiz,optimized,508,psi4manual/1.8.x/occ.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/occ.html,3,['optimiz'],['optimized']
Performance,"﻿. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories. OCC: Orbital-Optimized Coupled-Cluster and Møller–Plesset Perturbation Theories¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OCC; Module: Keywords, PSI Variables, DFOCC. Introduction¶; Orbital-optimized methods have several advantages over their non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann–Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invariant [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods do not suffer from artifactual symmetry-breaking; instabilities [Crawford:1997:instability], [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Furthermore, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/occ.html:508,optimiz,optimized,508,psi4manual/1.9.x/occ.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/occ.html,3,['optimiz'],['optimized']
Performance,"﻿. ODC_GUESS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». ODC_GUESS¶. Whether to perform a guess DC-06 or DC-12 computation for ODC-06 or ODC-12 methods, respectively. Currently only available for ALGORITHM = SIMULTANEOUS. Type: boolean; Default: false. Previous topic; MOLDEN_WRITE; Next topic; ORBITAL_LEVEL_SHIFT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__odc_guess-1.html:199,perform,perform,199,psi4manual/1.0.0/autodir_options_c/dcft__odc_guess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__odc_guess-1.html,2,['perform'],['perform']
Performance,"﻿. ODC_GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. ODC_GUESS¶. Whether to perform a guess DC-06 or DC-12 computation for ODC-06 or ODC-12 methods, respectively. Currently only available for ALGORITHM = SIMULTANEOUS. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dct__odc_guess.html:162,perform,perform,162,psi4manual/master/autodir_options_c/dct__odc_guess.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dct__odc_guess.html,1,['perform'],['perform']
Performance,"﻿. ODC_GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. ODC_GUESS¶. Whether to perform a guess DC-06 or DC-12 computation for ODC-06 or ODC-12 methods, respectively. Currently only available for ALGORITHM = SIMULTANEOUS. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__odc_guess-1.html:153,perform,perform,153,psi4manual/1.4.0/autodir_options_c/dct__odc_guess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__odc_guess-1.html,2,['perform'],['perform']
Performance,"﻿. ODC_GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. ODC_GUESS¶. Whether to perform a guess DC-06 or DC-12 computation for ODC-06 or ODC-12 methods, respectively. Currently only available for ALGORITHM = SIMULTANEOUS. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__odc_guess-1.html:153,perform,perform,153,psi4manual/1.5.0/autodir_options_c/dct__odc_guess-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__odc_guess-1.html,2,['perform'],['perform']
Performance,"﻿. ODC_GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. ODC_GUESS¶. Whether to perform a guess DC-06 or DC-12 computation for ODC-06 or ODC-12 methods, respectively. Currently only available for ALGORITHM = SIMULTANEOUS. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__odc_guess.html:153,perform,perform,153,psi4manual/1.6.x/autodir_options_c/dct__odc_guess.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__odc_guess.html,1,['perform'],['perform']
Performance,"﻿. ODC_GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. ODC_GUESS¶. Whether to perform a guess DC-06 or DC-12 computation for ODC-06 or ODC-12 methods, respectively. Currently only available for ALGORITHM = SIMULTANEOUS. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__odc_guess.html:153,perform,perform,153,psi4manual/1.7.x/autodir_options_c/dct__odc_guess.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__odc_guess.html,1,['perform'],['perform']
Performance,"﻿. ODC_GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. ODC_GUESS¶. Whether to perform a guess DC-06 or DC-12 computation for ODC-06 or ODC-12 methods, respectively. Currently only available for ALGORITHM = SIMULTANEOUS. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__odc_guess.html:155,perform,perform,155,psi4manual/1.8.x/autodir_options_c/dct__odc_guess.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__odc_guess.html,1,['perform'],['perform']
Performance,"﻿. ODC_GUESS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. ODC_GUESS¶. Whether to perform a guess DC-06 or DC-12 computation for ODC-06 or ODC-12 methods, respectively. Currently only available for ALGORITHM = SIMULTANEOUS. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; ODC_GUESS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__odc_guess.html:155,perform,perform,155,psi4manual/1.9.x/autodir_options_c/dct__odc_guess.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__odc_guess.html,1,['perform'],['perform']
Performance,"﻿. OMEGA_MAXITER — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF »; plugin_omega ». OMEGA_MAXITER¶. Maximum number of omega iterations to perform. Type: integer; Default: 30. Previous topic; OMEGA_GUESS_INTERPOLATE; Next topic; OMEGA_PROCEDURE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF »; plugin_omega ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/plugin_omega__omega_maxiter-1.html:240,perform,perform,240,psi4manual/4.0b2/autodir_plugins/plugin_omega__omega_maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/plugin_omega__omega_maxiter-1.html,2,['perform'],['perform']
Performance,"﻿. OMEGA_PROCEDURE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF »; plugin_omega ». OMEGA_PROCEDURE¶. The Omega optimization procedure. Type: string; Possible Values: IP; Default: IP. Previous topic; OMEGA_MAXITER; Next topic; OMEGA_ROOT_ALGORITHM; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF »; plugin_omega ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/plugin_omega__omega_procedure-1.html:216,optimiz,optimization,216,psi4manual/4.0b2/autodir_plugins/plugin_omega__omega_procedure-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/plugin_omega__omega_procedure-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OMEGA_ROOT_ALGORITHM — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF »; plugin_omega ». OMEGA_ROOT_ALGORITHM¶. The Omega optimization root-finding algorithm. Type: string; Possible Values: BISECTION, REGULA_FALSI, REGULA_FALSI2, REGULA_FALSI3, BRENT; Default: REGULA_FALSI3. Previous topic; OMEGA_PROCEDURE; Next topic; PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF »; plugin_omega ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/plugin_omega__omega_root_algorithm-1.html:226,optimiz,optimization,226,psi4manual/4.0b2/autodir_plugins/plugin_omega__omega_root_algorithm-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/plugin_omega__omega_root_algorithm-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OMP2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». OMP2¶; Performs quadratically convergence orbital-optimized MP2 computations. General¶. CACHELEVEL¶. Type: integer; Default: 2. CC_MAXITER¶. Type: integer; Default: 50. CUTOFF¶. Type: integer; Default: 14. DIIS_MAX_VECS¶. Number of vectors used in DIIS. Type: integer; Default: 4. DO_SCS¶. Do ?. Type: boolean; Default: false. DO_SOS¶. Do ?. Type: boolean; Default: false. E_CONVERGENCE¶. Type: conv double; Default: 1e-8. HESS_TYPE¶. Type: string; Possible Values: NONE; Default: NONE. LEVEL_SHIFT¶. Type: double; Default: 0.02. MAX_MOGRAD_CONVERGENCE¶. Type: conv double; Default: 1e-4. MO_MAXITER¶. Type: integer; Default: 50. MO_READ¶. Do read coefficient matrices from psi files?. Type: boolean; Default: false. MO_STEP_MAX¶. Type: double; Default: 0.5. MO_WRITE¶. Do write coefficient matrices to psi files?. Type: boolean; Default: false. MP2_OS_SCALE¶. Type: double; Default: 6.0/5.0. MP2_SS_SCALE¶. Type: double; Default: 1.0/3.0. NAT_ORBS¶. Do ?. Type: boolean; Default: false. OMP2_ORBS_PRINT¶. Do ?. Type: boolean; Default: false. OPT_METHOD¶. Type: string; Possible Values: SD, DIIS; Default: DIIS. ORTH_TYPE¶. Type: string; Possible Values: GS, MGS; Default: MGS. RMS_MOGRAD_CONVERGENCE¶. Type: conv double; Default: 1e-5. R_CONVERGENCE¶. Type: conv double; Default: 1e-5. SOS_SCALE¶. Type: double; Default: 1.3. SOS_SCALE2¶. Type: double; Default: 1.2. Table Of Contents. OMP2; General; CACHELEVEL; CC_MAXITER; CUTOFF; DIIS_MAX_VECS; DO_SCS; DO_SOS; E_CONVERGENCE; HESS_TYPE; LEVEL_SHIFT; MAX_MOGRAD_CONVERGENCE; MO_MAXITER; MO_READ; MO_STEP_MAX; MO_WRITE; MP2_OS_SCALE; MP2_SS_SCALE; NAT_ORBS; OMP2_ORBS_PRINT; OPT_METHOD; ORTH_TYPE; RMS_MOGRAD_CONVERGENCE; R_CONVERGENCE; SOS_SCALE; SOS_SCALE2. Previous topic; MRCC_RESTART; Next topic; CACHELEVEL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__omp2-1.html:191,optimiz,optimized,191,psi4manual/4.0b2/autodir_options_c/module__omp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__omp2-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OMP2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». OMP2¶; Performs quadratically convergence orbital-optimized MP2 computations. OMP2 TOTAL ENERGY; SCS-OMP2 TOTAL ENERGY; SOS-OMP2 TOTAL ENERGY. Previous topic; MP2; Next topic; OPTKING; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__omp2-1.html:196,optimiz,optimized,196,psi4manual/4.0b2/autodir_psivariables/module__omp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__omp2-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OMP2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». OMP2¶; Performs orbital-optimized MP2 computations. General¶. CACHELEVEL¶. Cacheing level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantites with up to two virtual-orbital indices (e.g., integrals) may be held in the cache. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Number of vectors used in DIIS. Type: integer; Default: 4. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: false. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP2, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP2 (SOS-OMP2)? In all computation, SOS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP2, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. HESS_TYPE¶. Type Hessian matrix will be used in orbital optimization procedure. Type: string; Possible Values: NONE; Default: NONE. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.02. LINEQ_SOLVER¶. The solver will be used for simultaneous linear equations. Type: string; Possible Values:",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__omp2-1.html:180,optimiz,optimized,180,psi4manual/4.0b3/autodir_options_c/module__omp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__omp2-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,"﻿. OMP2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». OMP2¶; Performs orbital-optimized MP2 computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; MP2 TOTAL ENERGY; OMP2 TOTAL ENERGY; SCS-MI-MP2 TOTAL ENERGY; SCS-MI-OMP2 TOTAL ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-OMP2 TOTAL ENERGY; SOS-MP2 TOTAL ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-OMP2 TOTAL ENERGY. Previous topic; MRCC; Next topic; OMP3; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__omp2-1.html:185,optimiz,optimized,185,psi4manual/4.0b3/autodir_psivariables/module__omp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__omp2-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OMP3 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». OMP3¶; Performs orbital-optimized MP3 computations. General¶. CACHELEVEL¶. Cacheing level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantites with up to two virtual-orbital indices (e.g., integrals) may be held in the cache. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Number of vectors used in DIIS. Type: integer; Default: 4. DO_LEVEL_SHIFT¶. Do apply level shifting to aid convergence. Type: boolean; Default: false. DO_SCS¶. Do perform spin-component-scaled OMP3 (SCS-OMP3)? In all computation, SCS-OMP3 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SCS-OMP3, one needs to set ‘DO_SCS’ to true. Type: boolean; Default: false. DO_SOS¶. Do perform spin-opposite-scaled OMP3 (SOS-OMP3)? In all computation, SOS-OMP3 energy is computed automatically. However, in order to perform geometry optimizations and frequency computations with SOS-OMP3, one needs to set ‘DO_SOS’ to true. Type: boolean; Default: false. E3_SCALE¶. Scaling value for 3rd order energy correction (S. Grimme, Vol. 24, pp. 1529, J. Comput. Chem.). Type: double; Default: 0.25. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. HESS_TYPE¶. Type Hessian matrix will be used in orbital optimization procedure. Type: string; Possible Values: NONE; Default: NONE. LEVEL_SHIFT¶. Level shift",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__omp3-1.html:180,optimiz,optimized,180,psi4manual/4.0b3/autodir_options_c/module__omp3-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__omp3-1.html,8,"['cache', 'optimiz']","['cache', 'optimized']"
Performance,"﻿. OMP3 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». OMP3¶; Performs orbital-optimized MP3 computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; MP2 TOTAL ENERGY; MP3 TOTAL ENERGY; OMP3 TOTAL ENERGY; SCS-MI-MP2 TOTAL ENERGY; SCS-MI-MP3 TOTAL ENERGY; SCS-MI-OMP3 TOTAL ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP3 TOTAL ENERGY. Previous topic; OMP2; Next topic; OPTKING; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__omp3-1.html:185,optimiz,optimized,185,psi4manual/4.0b3/autodir_psivariables/module__omp3-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__omp3-1.html,2,['optimiz'],['optimized']
Performance,"﻿. OMPn: Orbital-Optimized Møller–Plesset Perturbation Theory — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Theoretical Methods: SCF to FCI ». OMPn: Orbital-Optimized Møller–Plesset Perturbation Theory¶; Code author: Ugur Bozkaya; Section author: Ugur Bozkaya; Module: Keywords, PSI Variables, OMP2; Module: Keywords, PSI Variables, OMP3. Introduction¶; Orbital-optimized methods have several advantages over non-optimized counterparts.; Once the orbitals are optimized, the wave function will obey the Hellmann-Feynman theorem; for orbital rotation parameters. Therefore, there is no need for orbital response terms; in the evaluation of analytic gradients. In other words, it is unnecessary to solve the; first order coupled-perturbed CC and many-body perturbation theory (MBPT) equations.; Further, computation of one-electron properties is easier because there are no response contributions to the particle; density matrices (PDMs). Moreover, active space approximations can be readily incorporated into the CC methods; [Krylov:2000:vod]. Additionally, orbital-optimized coupled-cluster avoids spurious second-order; poles in its response function, and its transition dipole moments are gauge invarianti [Pedersen:1999:od].; Another advantage is that the orbital-optimized methods does not suffer from the artifactual symmetry-breaking; instabilities [Sherrill:1998:od], [Bozkaya:2011:omp2], and [Bozkaya:2011:omp3].; Further, Kurlancheek and Head-Gordon [Kurlancek:2009] demonstrated that first order properties such as; forces or dipole moments are discontinuous along nuclear coordinates when such a symmetry breaking occurs.; They also observed that although the energy appears well behaved, the MP2 method can have natural occupation; numbers greater than 2 or less than 0, hence may violate the N-representability condition. They further; discussed that the orbital response equations generally have a singularity problem at ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/ompn-1.html:428,optimiz,optimized,428,psi4manual/4.0b3/ompn-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/ompn-1.html,6,['optimiz'],['optimized']
Performance,"﻿. OPTKING — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 20. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.4. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.4. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound for dynamic trust radius [au]. Type: double; Default: 0.001. IRC_DIRECTION¶. IRC mapping direction. Type: string; Possible Values: FORWARD, BACKWARD; Default: FORWARD. IRC_STEP_SIZE¶. IRC step size in bohr(amu). Type: double; Default: 0.2. IRC_STOP¶. Decide when to stop IRC calculations. Type: string; Possible Values: ASK, STOP, GO; Default: STOP. OPT_TYPE¶. Specifies minimum search, transition-state search, or IRC following. Type: string; Possible Values: MIN, TS, IRC; Default: MIN. RFO_FOLLOW_ROOT¶. Do follow the initial RFO vector after the first step?. Type: boolean; Default: false. RFO_ROOT¶. Root for RFO to follow, 0 being lowest (for a minimum). Type: integer; Default: 0. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD; Default: RFO. Convergence Control¶. FLEXIBLE_G_CONVERGENCE¶. Even if a user-defined threshold is set, allow for normal, flexible convergence criteria. Type: boolean; Default: false. G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to overwrite the ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__optking-1.html:172,optimiz,optimizations,172,psi4manual/4.0b2/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__optking-1.html,6,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Previous topic; OMP2; Next topic; PSIMRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__optking-1.html:177,optimiz,optimizations,177,psi4manual/4.0b2/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.4. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.4. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound for dynamic trust radius [au]. Type: double; Default: 0.001. IRC_DIRECTION¶. IRC mapping direction. Type: string; Possible Values: FORWARD, BACKWARD; Default: FORWARD. IRC_STEP_SIZE¶. IRC step size in bohr(amu). Type: double; Default: 0.2. IRC_STOP¶. Decide when to stop IRC calculations. Type: string; Possible Values: ASK, STOP, GO; Default: STOP. OPT_TYPE¶. Specifies minimum search, transition-state search, or IRC following. Type: string; Possible Values: MIN, TS, IRC; Default: MIN. RFO_FOLLOW_ROOT¶. Do follow the initial RFO vector after the first step?. Type: boolean; Default: false. RFO_ROOT¶. Root for RFO to follow, 0 being lowest (for a minimum). Type: integer; Default: 0. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD; Default: RFO. Convergence Control¶. FLEXIBLE_G_CONVERGENCE¶. Even if a user-defined threshold is set, allow for normal, flexible convergence criteria. Type: boolean; Default: false. G_CONVERGENCE¶. Set of optimization criteria. Specification of any MAX_*_G_CONVERGENCE or RMS_*_G_CONVERGENCE options will append to",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__optking-1.html:187,optimiz,optimizations,187,psi4manual/4.0b3/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__optking-1.html,6,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Previous topic; OMP3; Next topic; PSIMRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__optking-1.html:192,optimiz,optimizations,192,psi4manual/4.0b3/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. FROZEN_BEND¶. Specify angles between atoms to be frozen. Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen. Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen. Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.4. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.4. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound for dynamic trust radius [au]. Type: double; Default: 0.001. IRC_DIRECTION¶. IRC mapping direction. Type: string; Possible Values: FORWARD, BACKWARD; Default: FORWARD. IRC_STEP_SIZE¶. IRC step size in bohr(amu). Type: double; Default: 0.2. IRC_STOP¶. Decide when to stop IRC calculations. Type: string; Possible Values: ASK, STOP, GO; Default: STOP. OPT_TYPE¶. Specifies minimum search, transition-state search, or IRC following. Type: string; Possible Values: MIN, TS, IRC; Default: MIN. RFO_FOLLOW_ROOT¶. Do follow the initial RFO vector after the first step?. Type: boolean; Default: false. RFO_ROOT¶. Root for RFO to follow, 0 being lowest (for a minimum). Type: integer; Default: 0. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD, LINESEARCH_STATIC;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__optking-1.html:187,optimiz,optimizations,187,psi4manual/4.0b4/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__optking-1.html,6,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Previous topic; OCC; Next topic; PSIMRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 29, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__optking-1.html:192,optimiz,optimizations,192,psi4manual/4.0b4/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.4. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.4. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound for dynamic trust radius [au]. Type: double; Default: 0.001. IRC_DIRECTION¶. IRC mapping direction. Type: string; Possible Values: FORWARD, BACKWARD; Default: FORWARD. IRC_STEP_SIZE¶. IRC step size in bohr(amu). Type: double; Default: 0.2. IRC_STOP¶. Decide when to stop IRC calculations. Type: string; Possible Values: ASK, STOP, GO; Default: STOP. OPT_TYPE¶. Specifies minimum search, transition-state search, or IRC following. Type: string; Possible Values:",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__optking-1.html:187,optimiz,optimizations,187,psi4manual/4.0b5/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__optking-1.html,4,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Previous topic; OCC; Next topic; PSIMRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__optking-1.html:192,optimiz,optimizations,192,psi4manual/4.0b5/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, ... to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__optking-1.html:194,optimiz,optimizations,194,psi4manual/1.0.0/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__optking-1.html,6,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; PSI Variables by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Previous topic; OCC; Next topic; PSIMRCC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; PSI Variables by Module ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_psivariables/module__optking-1.html:199,optimiz,optimizations,199,psi4manual/1.0.0/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CARTESIAN_SYM_TOLERANCE¶. Tolerance for symmetrizing cartesian geometry between steps. Type: conv double; Default: 1e-7. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. CUSTOM_COORDS¶. A string formatted as a dicitonary containing a set of coordinates. Coordinates can be appended to Optking’s coordinate set or used on their own - expected optking 0.3.1. Type: string; Default: No Default. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. EXT_FORCE_BEND¶. Specify formula for external forces for angles between atoms. Type: string; Default: No Default. EXT_FORCE_CARTESIAN¶. Symmetry formula for external forces for cartesian coordinates on atoms . Type: string; Default: No Default. EXT_FORCE_DIHEDRAL¶. Specify formula for external forces for dihedral angles between atoms. Type: string; Default: No Default. EXT_FORCE_DISTANCE¶. Specify formula for external forces for the distance between atoms. Type: string; Default: No Default. EXT_FORCE_OOFP¶. Specify formula for external forces for out-of-plane angles between atoms. Type: string; Default: No Default. FREEZE_ALL_DIHEDRALS¶. Freeze ALL dihedral angles. Type: boolean; Default: false. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: strin",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__optking.html:158,optimiz,optimizations,158,psi4manual/master/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__optking.html,3,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, ... to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound for dyna",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__optking-1.html:140,optimiz,optimizations,140,psi4manual/1.1.0/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__optking-1.html,6,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; PSI Variables by Module. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; PSI Variables by Module. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_psivariables/module__optking-1.html:145,optimiz,optimizations,145,psi4manual/1.1.0/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound for dyna",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__optking-1.html:142,optimiz,optimizations,142,psi4manual/1.2.1/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__optking-1.html,6,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; PSI Variables by Module. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; PSI Variables by Module. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_psivariables/module__optking-1.html:147,optimiz,optimizations,147,psi4manual/1.2.1/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound for dyna",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__optking-1.html:142,optimiz,optimizations,142,psi4manual/1.3.2/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__optking-1.html,6,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; PSI Variables by Module. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; PSI Variables by Module. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_psivariables/module__optking-1.html:147,optimiz,optimizations,147,psi4manual/1.3.2/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__optking-1.html:149,optimiz,optimizations,149,psi4manual/1.4.0/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__optking-1.html,6,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__optking-1.html:154,optimiz,optimizations,154,psi4manual/1.4.0/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__optking-1.html:149,optimiz,optimizations,149,psi4manual/1.5.0/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__optking-1.html,6,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__optking-1.html:154,optimiz,optimizations,154,psi4manual/1.5.0/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__optking-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__optking.html:149,optimiz,optimizations,149,psi4manual/1.6.x/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__optking.html,3,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__optking.html:154,optimiz,optimizations,154,psi4manual/1.6.x/autodir_psivariables/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__optking.html,1,['optimiz'],['optimizations']
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CARTESIAN_SYM_TOLERANCE¶. Tolerance for symmetrizing cartesian geometry between steps. Type: conv double; Default: 1e-7. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. EXT_FORCE_BEND¶. Specify formula for external forces for angles between atoms. Type: string; Default: No Default. EXT_FORCE_CARTESIAN¶. Symmetry formula for external forces for cartesian coordinates on atoms . Type: string; Default: No Default. EXT_FORCE_DIHEDRAL¶. Specify formula for external forces for dihedral angles between atoms. Type: string; Default: No Default. EXT_FORCE_DISTANCE¶. Specify formula for external forces for the distance between atoms. Type: string; Default: No Default. EXT_FORCE_OOFP¶. Specify formula for external forces for out-of-plane angles between atoms. Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_OOFP¶. Specify out-of-plane angles between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__optking.html:149,optimiz,optimizations,149,psi4manual/1.7.x/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__optking.html,3,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CARTESIAN_SYM_TOLERANCE¶. Tolerance for symmetrizing cartesian geometry between steps. Type: conv double; Default: 1e-7. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. EXT_FORCE_BEND¶. Specify formula for external forces for angles between atoms. Type: string; Default: No Default. EXT_FORCE_CARTESIAN¶. Symmetry formula for external forces for cartesian coordinates on atoms . Type: string; Default: No Default. EXT_FORCE_DIHEDRAL¶. Specify formula for external forces for dihedral angles between atoms. Type: string; Default: No Default. EXT_FORCE_DISTANCE¶. Specify formula for external forces for the distance between atoms. Type: string; Default: No Default. EXT_FORCE_OOFP¶. Specify formula for external forces for out-of-plane angles between atoms. Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_OOFP¶. Specify out-of-plane angles between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization step",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__optking.html:151,optimiz,optimizations,151,psi4manual/1.8.x/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__optking.html,3,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CARTESIAN_SYM_TOLERANCE¶. Tolerance for symmetrizing cartesian geometry between steps. Type: conv double; Default: 1e-7. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. EXT_FORCE_BEND¶. Specify formula for external forces for angles between atoms. Type: string; Default: No Default. EXT_FORCE_CARTESIAN¶. Symmetry formula for external forces for cartesian coordinates on atoms . Type: string; Default: No Default. EXT_FORCE_DIHEDRAL¶. Specify formula for external forces for dihedral angles between atoms. Type: string; Default: No Default. EXT_FORCE_DISTANCE¶. Specify formula for external forces for the distance between atoms. Type: string; Default: No Default. EXT_FORCE_OOFP¶. Specify formula for external forces for out-of-plane angles between atoms. Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_OOFP¶. Specify out-of-plane angles between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization step",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__optking.html:151,optimiz,optimizations,151,psi4manual/1.9.x/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__optking.html,3,['optimiz'],"['optimization', 'optimizations']"
Performance,"﻿. OPT_COORDINATES — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». OPT_COORDINATES¶. Geometry optimization coordinates to use. REDUNDANT and INTERNAL are synonyms and the default. DELOCALIZED are the coordinates of Baker. NATURAL are the coordinates of Pulay. CARTESIAN uses only cartesian coordinates. BOTH uses both redundant and cartesian coordinates. Type: string; Possible Values: REDUNDANT, INTERNAL, DELOCALIZED, NATURAL, CARTESIAN, BOTH; Default: INTERNAL. Previous topic; MAX_FORCE_G_CONVERGENCE; Next topic; OPT_TYPE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__opt_coordinates-1.html:212,optimiz,optimization,212,psi4manual/1.0.0/autodir_options_c/optking__opt_coordinates-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__opt_coordinates-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OPT_COORDINATES. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. OPT_COORDINATES¶. Geometry optimization coordinates to use. REDUNDANT and INTERNAL are synonyms and the default. CARTESIAN uses only cartesian coordinates. BOTH uses both redundant and cartesian coordinates. CUSTOM is not fully implemented yet - expected optking 0.3.1. Type: string; Possible Values: REDUNDANT, INTERNAL, CARTESIAN, BOTH, CUSTOM; Default: INTERNAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__opt_coordinates.html:182,optimiz,optimization,182,psi4manual/master/autodir_options_c/optking__opt_coordinates.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__opt_coordinates.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_COORDINATES. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. OPT_COORDINATES¶. Geometry optimization coordinates to use. REDUNDANT and INTERNAL are synonyms and the default. DELOCALIZED are the coordinates of Baker. NATURAL are the coordinates of Pulay. CARTESIAN uses only cartesian coordinates. BOTH uses both redundant and cartesian coordinates. Type: string; Possible Values: REDUNDANT, INTERNAL, DELOCALIZED, NATURAL, CARTESIAN, BOTH; Default: INTERNAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__opt_coordinates-1.html:173,optimiz,optimization,173,psi4manual/1.4.0/autodir_options_c/optking__opt_coordinates-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__opt_coordinates-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OPT_COORDINATES. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. OPT_COORDINATES¶. Geometry optimization coordinates to use. REDUNDANT and INTERNAL are synonyms and the default. DELOCALIZED are the coordinates of Baker. NATURAL are the coordinates of Pulay. CARTESIAN uses only cartesian coordinates. BOTH uses both redundant and cartesian coordinates. Type: string; Possible Values: REDUNDANT, INTERNAL, DELOCALIZED, NATURAL, CARTESIAN, BOTH; Default: INTERNAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__opt_coordinates-1.html:173,optimiz,optimization,173,psi4manual/1.5.0/autodir_options_c/optking__opt_coordinates-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__opt_coordinates-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OPT_COORDINATES. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. OPT_COORDINATES¶. Geometry optimization coordinates to use. REDUNDANT and INTERNAL are synonyms and the default. DELOCALIZED are the coordinates of Baker. NATURAL are the coordinates of Pulay. CARTESIAN uses only cartesian coordinates. BOTH uses both redundant and cartesian coordinates. Type: string; Possible Values: REDUNDANT, INTERNAL, DELOCALIZED, NATURAL, CARTESIAN, BOTH; Default: INTERNAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__opt_coordinates.html:173,optimiz,optimization,173,psi4manual/1.6.x/autodir_options_c/optking__opt_coordinates.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__opt_coordinates.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_COORDINATES. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. OPT_COORDINATES¶. Geometry optimization coordinates to use. REDUNDANT and INTERNAL are synonyms and the default. CARTESIAN uses only cartesian coordinates. BOTH uses both redundant and cartesian coordinates. Type: string; Possible Values: REDUNDANT, INTERNAL, CARTESIAN, BOTH; Default: INTERNAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__opt_coordinates.html:173,optimiz,optimization,173,psi4manual/1.7.x/autodir_options_c/optking__opt_coordinates.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__opt_coordinates.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_COORDINATES. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. OPT_COORDINATES¶. Geometry optimization coordinates to use. REDUNDANT and INTERNAL are synonyms and the default. CARTESIAN uses only cartesian coordinates. BOTH uses both redundant and cartesian coordinates. Type: string; Possible Values: REDUNDANT, INTERNAL, CARTESIAN, BOTH; Default: INTERNAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__opt_coordinates.html:175,optimiz,optimization,175,psi4manual/1.8.x/autodir_options_c/optking__opt_coordinates.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__opt_coordinates.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_COORDINATES. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. OPT_COORDINATES¶. Geometry optimization coordinates to use. REDUNDANT and INTERNAL are synonyms and the default. CARTESIAN uses only cartesian coordinates. BOTH uses both redundant and cartesian coordinates. Type: string; Possible Values: REDUNDANT, INTERNAL, CARTESIAN, BOTH; Default: INTERNAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_COORDINATES. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__opt_coordinates.html:175,optimiz,optimization,175,psi4manual/1.9.x/autodir_options_c/optking__opt_coordinates.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__opt_coordinates.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». OPT_METHOD¶. The optimization algorithm. Type: string; Possible Values: MSD, DIIS; Default: MSD. Previous topic; OMP2_ORBS_PRINT; Next topic; ORTH_TYPE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__opt_method-1.html:187,optimiz,optimization,187,psi4manual/4.0b3/autodir_options_c/omp2__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__opt_method-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». OPT_METHOD¶. The optimization algorithm. Type: string; Possible Values: MSD, DIIS; Default: MSD. Previous topic; OMP3_ORBS_PRINT; Next topic; ORTH_TYPE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__opt_method-1.html:187,optimiz,optimization,187,psi4manual/4.0b3/autodir_options_c/omp3__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__opt_method-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters by solving the orbital-reponse (coupled-perturbed CC) equations. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: ORB_RESP. Previous topic; OCC_ORBS_PRINT; Next topic; ORB_OPT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__opt_method-1.html:186,optimiz,optimization,186,psi4manual/4.0b4/autodir_options_c/occ__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__opt_method-1.html,4,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_METHOD — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters by solving the orbital-reponse (coupled-perturbed CC) equations. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: ORB_RESP. Previous topic; OCC_ORBS_PRINT; Next topic; ORB_OPT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__opt_method-1.html:186,optimiz,optimization,186,psi4manual/4.0b5/autodir_options_c/occ__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__opt_method-1.html,4,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_METHOD — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». OPT_METHOD¶. The orbital optimization algorithm. Presently Quasy Newton-Raphson algorithm avaliable with several Hessian options. Type: string; Possible Values: QNR; Default: QNR. Previous topic; OO_SCALE; Next topic; ORB_OPT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__opt_method-1.html:203,optimiz,optimization,203,psi4manual/1.0.0/autodir_options_c/dfocc__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__opt_method-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters by solving the orbital-reponse (coupled-perturbed CC) equations. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: ORB_RESP. Previous topic; OEPROP; Next topic; ORB_OPT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__opt_method-1.html:193,optimiz,optimization,193,psi4manual/1.0.0/autodir_options_c/occ__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__opt_method-1.html,4,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. OPT_METHOD¶. The orbital optimization algorithm. Presently quasi-Newton-Raphson algorithm available with several Hessian * options. Type: string; Possible Values: QNR; Default: QNR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__opt_method.html:168,optimiz,optimization,168,psi4manual/master/autodir_options_c/dfocc__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__opt_method.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters with a crude approximation to all elements of the MO Hessian. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: MSD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/occ__opt_method.html:158,optimiz,optimization,158,psi4manual/master/autodir_options_c/occ__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/occ__opt_method.html,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. OPT_METHOD¶. The orbital optimization algorithm. Presently quasi-Newton-Raphson algorithm available with several Hessian * options. Type: string; Possible Values: QNR; Default: QNR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__opt_method-1.html:159,optimiz,optimization,159,psi4manual/1.4.0/autodir_options_c/dfocc__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__opt_method-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters with a crude approximation to all elements of the MO Hessian. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: MSD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__opt_method-1.html:149,optimiz,optimization,149,psi4manual/1.4.0/autodir_options_c/occ__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__opt_method-1.html,4,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. OPT_METHOD¶. The orbital optimization algorithm. Presently quasi-Newton-Raphson algorithm available with several Hessian * options. Type: string; Possible Values: QNR; Default: QNR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__opt_method-1.html:159,optimiz,optimization,159,psi4manual/1.5.0/autodir_options_c/dfocc__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__opt_method-1.html,2,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters with a crude approximation to all elements of the MO Hessian. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: MSD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__opt_method-1.html:149,optimiz,optimization,149,psi4manual/1.5.0/autodir_options_c/occ__opt_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__opt_method-1.html,4,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. OPT_METHOD¶. The orbital optimization algorithm. Presently quasi-Newton-Raphson algorithm available with several Hessian * options. Type: string; Possible Values: QNR; Default: QNR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__opt_method.html:159,optimiz,optimization,159,psi4manual/1.6.x/autodir_options_c/dfocc__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__opt_method.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters with a crude approximation to all elements of the MO Hessian. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: MSD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__opt_method.html:149,optimiz,optimization,149,psi4manual/1.6.x/autodir_options_c/occ__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__opt_method.html,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. OPT_METHOD¶. The orbital optimization algorithm. Presently quasi-Newton-Raphson algorithm available with several Hessian * options. Type: string; Possible Values: QNR; Default: QNR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__opt_method.html:159,optimiz,optimization,159,psi4manual/1.7.x/autodir_options_c/dfocc__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__opt_method.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters with a crude approximation to all elements of the MO Hessian. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: MSD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__opt_method.html:149,optimiz,optimization,149,psi4manual/1.7.x/autodir_options_c/occ__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__opt_method.html,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. OPT_METHOD¶. The orbital optimization algorithm. Presently quasi-Newton-Raphson algorithm available with several Hessian * options. Type: string; Possible Values: QNR; Default: QNR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__opt_method.html:161,optimiz,optimization,161,psi4manual/1.8.x/autodir_options_c/dfocc__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__opt_method.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters with a crude approximation to all elements of the MO Hessian. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: MSD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__opt_method.html:151,optimiz,optimization,151,psi4manual/1.8.x/autodir_options_c/occ__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__opt_method.html,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. OPT_METHOD¶. The orbital optimization algorithm. Presently quasi-Newton-Raphson algorithm available with several Hessian * options. Type: string; Possible Values: QNR; Default: QNR. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; OPT_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__opt_method.html:161,optimiz,optimization,161,psi4manual/1.9.x/autodir_options_c/dfocc__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__opt_method.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. OPT_METHOD¶. The optimization algorithm. Modified Steepest-Descent (MSD) takes a Newton-Raphson (NR) step with a crude approximation to diagonal elements of the MO Hessian. The ORB_RESP option obtains the orbital rotation parameters with a crude approximation to all elements of the MO Hessian. Additionally, for both methods a DIIS extrapolation will be performed with the DO_DIIS = TRUE option. Type: string; Possible Values: MSD, ORB_RESP; Default: MSD. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; OPT_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__opt_method.html:151,optimiz,optimization,151,psi4manual/1.9.x/autodir_options_c/occ__opt_method.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__opt_method.html,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"﻿. OPT_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_RESTART. OPT_RESTART¶. Restart the optimization from optking’s written history. Type: double; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_RESTART. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__opt_restart.html:173,optimiz,optimization,173,psi4manual/master/autodir_options_c/optking__opt_restart.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__opt_restart.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_RESTART. OPT_RESTART¶. Restart the optimization from optking’s written history. Type: double; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_RESTART. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__opt_restart.html:164,optimiz,optimization,164,psi4manual/1.7.x/autodir_options_c/optking__opt_restart.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__opt_restart.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_RESTART. OPT_RESTART¶. Restart the optimization from optking’s written history. Type: double; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_RESTART. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__opt_restart.html:166,optimiz,optimization,166,psi4manual/1.8.x/autodir_options_c/optking__opt_restart.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__opt_restart.html,1,['optimiz'],['optimization']
Performance,"﻿. OPT_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_RESTART. OPT_RESTART¶. Restart the optimization from optking’s written history. Type: double; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; OPT_RESTART. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__opt_restart.html:166,optimiz,optimization,166,psi4manual/1.9.x/autodir_options_c/optking__opt_restart.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__opt_restart.html,1,['optimiz'],['optimization']
Performance,"﻿. ORB_OPT — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. Previous topic; OPT_METHOD; Next topic; ORB_RESP_SOLVER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__orb_opt-1.html:179,optimiz,optimize,179,psi4manual/4.0b4/autodir_options_c/occ__orb_opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__orb_opt-1.html,2,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. Previous topic; OPT_METHOD; Next topic; ORB_RESP_SOLVER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__orb_opt-1.html:179,optimiz,optimize,179,psi4manual/4.0b5/autodir_options_c/occ__orb_opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__orb_opt-1.html,2,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. Previous topic; OPT_METHOD; Next topic; ORB_RESP_SOLVER. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__orb_opt-1.html:188,optimiz,optimize,188,psi4manual/1.0.0/autodir_options_c/dfocc__orb_opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__orb_opt-1.html,2,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. Previous topic; OPT_METHOD; Next topic; ORB_RESP_SOLVER. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__orb_opt-1.html:186,optimiz,optimize,186,psi4manual/1.0.0/autodir_options_c/occ__orb_opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__orb_opt-1.html,2,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__orb_opt.html:150,optimiz,optimize,150,psi4manual/master/autodir_options_c/dfocc__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/occ__orb_opt.html:148,optimiz,optimize,148,psi4manual/master/autodir_options_c/occ__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/occ__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__orb_opt-1.html:141,optimiz,optimize,141,psi4manual/1.4.0/autodir_options_c/dfocc__orb_opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__orb_opt-1.html,2,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__orb_opt-1.html:139,optimiz,optimize,139,psi4manual/1.4.0/autodir_options_c/occ__orb_opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__orb_opt-1.html,2,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__orb_opt-1.html:141,optimiz,optimize,141,psi4manual/1.5.0/autodir_options_c/dfocc__orb_opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__orb_opt-1.html,2,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__orb_opt-1.html:139,optimiz,optimize,139,psi4manual/1.5.0/autodir_options_c/occ__orb_opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__orb_opt-1.html,2,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__orb_opt.html:141,optimiz,optimize,141,psi4manual/1.6.x/autodir_options_c/dfocc__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__orb_opt.html:139,optimiz,optimize,139,psi4manual/1.6.x/autodir_options_c/occ__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__orb_opt.html:141,optimiz,optimize,141,psi4manual/1.7.x/autodir_options_c/dfocc__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__orb_opt.html:139,optimiz,optimize,139,psi4manual/1.7.x/autodir_options_c/occ__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__orb_opt.html:143,optimiz,optimize,143,psi4manual/1.8.x/autodir_options_c/dfocc__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__orb_opt.html:141,optimiz,optimize,141,psi4manual/1.8.x/autodir_options_c/occ__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; ORB_OPT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__orb_opt.html:143,optimiz,optimize,143,psi4manual/1.9.x/autodir_options_c/dfocc__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. ORB_OPT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. ORB_OPT¶. Do optimize the orbitals?. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; ORB_OPT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__orb_opt.html:141,optimiz,optimize,141,psi4manual/1.9.x/autodir_options_c/occ__orb_opt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__orb_opt.html,1,['optimiz'],['optimize']
Performance,"﻿. OptimizationConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. OptimizationConvergenceError¶. exception psi4.driver.OptimizationConvergenceError(eqn_description, iteration, wfn)[source]¶; Error called for problems with geometry optimizer. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., geometry optimization).; iteration (int) – Iteration number on which routine failed.; wfn (Wavefunction) – Wavefunction at time of exception. message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. wfn¶; Wavefunction at time of exception. table of contents. OptimizationConvergenceError; OptimizationConvergenceError; OptimizationConvergenceError.message; OptimizationConvergenceError.iteration; OptimizationConvergenceError.wfn. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.OptimizationConvergenceError.html:339,optimiz,optimizer,339,psi4manual/master/api/psi4.driver.OptimizationConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.OptimizationConvergenceError.html,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"﻿. OptimizationConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. OptimizationConvergenceError¶. exception psi4.driver.OptimizationConvergenceError(eqn_description, maxit, wfn)[source]¶; Bases: psi4.driver.p4util.exceptions.ConvergenceError; Error called for problems with geometry optimizer. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.optimizationconvergenceerror.html:353,optimiz,optimizer,353,psi4manual/1.2.1/api/psi4.driver.optimizationconvergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.optimizationconvergenceerror.html,1,['optimiz'],['optimizer']
Performance,"﻿. OptimizationConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. OptimizationConvergenceError¶. exception psi4.driver.OptimizationConvergenceError(eqn_description, iteration, wfn)[source]¶; Bases: psi4.driver.p4util.exceptions.ConvergenceError; Error called for problems with geometry optimizer. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.optimizationconvergenceerror.html:357,optimiz,optimizer,357,psi4manual/1.3.2/api/psi4.driver.optimizationconvergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.optimizationconvergenceerror.html,1,['optimiz'],['optimizer']
Performance,"﻿. OptimizationConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. OptimizationConvergenceError¶. exception psi4.driver.OptimizationConvergenceError(eqn_description, iteration, wfn)[source]¶; Error called for problems with geometry optimizer. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.optimizationconvergenceerror.html:330,optimiz,optimizer,330,psi4manual/1.4.0/api/psi4.driver.optimizationconvergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.optimizationconvergenceerror.html,1,['optimiz'],['optimizer']
Performance,"﻿. OptimizationConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. OptimizationConvergenceError¶. exception psi4.driver.OptimizationConvergenceError(eqn_description, iteration, wfn)[source]¶; Error called for problems with geometry optimizer. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.optimizationconvergenceerror.html:330,optimiz,optimizer,330,psi4manual/1.5.0/api/psi4.driver.optimizationconvergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.optimizationconvergenceerror.html,1,['optimiz'],['optimizer']
Performance,"﻿. OptimizationConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. OptimizationConvergenceError¶. exception psi4.driver.OptimizationConvergenceError(eqn_description, iteration, wfn)[source]¶; Error called for problems with geometry optimizer. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.OptimizationConvergenceError.html:330,optimiz,optimizer,330,psi4manual/1.6.x/api/psi4.driver.OptimizationConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.OptimizationConvergenceError.html,1,['optimiz'],['optimizer']
Performance,"﻿. OptimizationConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. OptimizationConvergenceError¶. exception psi4.driver.OptimizationConvergenceError(eqn_description, iteration, wfn)[source]¶; Error called for problems with geometry optimizer. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., geometry optimization).; iteration (int) – Iteration number on which routine failed.; wfn (psi4.core.Wavefunction) – Wavefunction at time of exception. message¶; Human readable string describing the exception. Type:; str. iteration¶; Iteration number on which routine failed. Type:; int. wfn¶; Wavefunction at time of exception. Type:; psi4.core.Wavefunction. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.OptimizationConvergenceError.html:330,optimiz,optimizer,330,psi4manual/1.7.x/api/psi4.driver.OptimizationConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.OptimizationConvergenceError.html,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"﻿. OptimizationConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. OptimizationConvergenceError¶. exception psi4.driver.OptimizationConvergenceError(eqn_description, iteration, wfn)[source]¶; Error called for problems with geometry optimizer. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., geometry optimization).; iteration (int) – Iteration number on which routine failed.; wfn (Wavefunction) – Wavefunction at time of exception. message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. wfn¶; Wavefunction at time of exception. table of contents. OptimizationConvergenceError; OptimizationConvergenceError; OptimizationConvergenceError.message; OptimizationConvergenceError.iteration; OptimizationConvergenceError.wfn. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.OptimizationConvergenceError.html:332,optimiz,optimizer,332,psi4manual/1.8.x/api/psi4.driver.OptimizationConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.OptimizationConvergenceError.html,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"﻿. OptimizationConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. OptimizationConvergenceError¶. exception psi4.driver.OptimizationConvergenceError(eqn_description, iteration, wfn)[source]¶; Error called for problems with geometry optimizer. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., geometry optimization).; iteration (int) – Iteration number on which routine failed.; wfn (Wavefunction) – Wavefunction at time of exception. message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. wfn¶; Wavefunction at time of exception. table of contents. OptimizationConvergenceError; OptimizationConvergenceError; OptimizationConvergenceError.message; OptimizationConvergenceError.iteration; OptimizationConvergenceError.wfn. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; OptimizationConvergenceError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.OptimizationConvergenceError.html:332,optimiz,optimizer,332,psi4manual/1.9.x/api/psi4.driver.OptimizationConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.OptimizationConvergenceError.html,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"﻿. Optimize — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Optimize¶. optimize(name[, func, mode, dertype, molecule])[source]¶; Function to perform a geometry optimization. Aliases :opt(). Returns:(float) Total electronic energy of optimized structure in Hartrees. Psi variables:. CURRENT ENERGY. Note; Analytic gradients area available for all methods in the table; below. Optimizations with other methods in the energy table proceed; by finite differences. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT). dcft; density cumulant functional theory. mp2; 2nd-order Moller-Plesset perturbation theory (MP2). ccsd; coupled cluster singles and doubles (CCSD). ccsd(t); CCSD with perturbative triples. eom-ccsd; equation of motion (EOM) CCSD. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; driver.energy(). func (function) – gradient || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses``’gradient’`` or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – 'continuous' || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whether; the calculations required to complete the; optimization are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job with; 'sow' and follow instructions in its output file. dertype (dertype) – 'gradient' || 'energy'; Indicates whether analytic (if available) or finite difference; optimization is to be performed. molecule (molecule) – h2o || etc.; The targ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/opt-1.html:165,optimiz,optimize,165,psi4manual/4.0b2/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/opt-1.html,8,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Optimize — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Optimize¶. optimize(name[, func, mode, dertype, molecule])[source]¶; Function to perform a geometry optimization. Aliases :opt(). Returns:(float) Total electronic energy of optimized structure in Hartrees. Psi variables:. CURRENT ENERGY. Note; Analytic gradients area available for all methods in the table; below. Optimizations with other methods in the energy table proceed; by finite differences. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT). dcft; density cumulant functional theory. omp2; orbital-optimized second order Moller–Plesset perturbation theory. mp2; 2nd-order Moller-Plesset perturbation theory (MP2). df-mp2; MP2 with density fitting. conv-mp2; conventional MP2 (non-density-fitting). ccsd; coupled cluster singles and doubles (CCSD). ccsd(t); CCSD with perturbative triples. eom-ccsd; equation of motion (EOM) CCSD. name; calls method. b3lyp; B3LYP Hybrid-GGA Exchange-Correlation Functional. b3lyp-chg; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Chai and Head-Gordon Dispersion Correction. b3lyp-d; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D2 Dispersion Correction. b3lyp-d1; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D1 Dispersion Correction. b3lyp-d3; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D3 (zero-damping) Dispersion Correction. b3lyp-d3bj; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D3 (BJ-damping) Dispersion Correction. b3_x; Becke88 GGA Exchange (B3LYP weighting). b88_x; Becke88 GGA Exchange. b97-0; B97-0 Hybrid-GGA Exchange-Correlation Functional. b97-1; B97-1 Hybrid-GGA Exchange-Correlation Functional. b97-2; B97-2 Hybrid-GGA Exchange-Correlation Functional. b97-d; B97-D Pure-GGA Exchange-Correlation Functional w/ Grimme’s -D2 Dispersion Correction. b97-d3; B97-D Pure-GG",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/opt-1.html:180,optimiz,optimize,180,psi4manual/4.0b3/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/opt-1.html,10,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Optimize — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Optimize¶. optimize(name[, func, mode, dertype, molecule])[source]¶; Function to perform a geometry optimization. Aliases :opt(). Returns:(float) Total electronic energy of optimized structure in Hartrees. Psi variables:. CURRENT ENERGY. Note; Analytic gradients area available for all methods in the table; below. Optimizations with other methods in the energy table proceed; by finite differences. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp2.5; MP2.5 [manual]. mp3; third-order MP perturbation theory [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation(0) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. name; calls method DFT [manual]. b3lyp; B3LYP Hybrid-GGA Exchange-Correlation Functional. b3lyp-chg; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Chai and Head-Gordon Dispersion Correction. b3lyp-d; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D2 Dispersion Correction. b3lyp-d1; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D1 Dispersion Correction. b3lyp-d3; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D3 (zero-damping) Dispersion Correction. b3lyp-d3bj; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/opt-1.html:180,optimiz,optimize,180,psi4manual/4.0b4/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/opt-1.html,10,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. Optimize — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Optimize¶. optimize(name[, func, mode, dertype, molecule])[source]¶; Function to perform a geometry optimization. Aliases :opt(). Returns:(float) Total electronic energy of optimized structure in Hartrees. Psi variables:. CURRENT ENERGY. Note; Analytic gradients area available for all methods in the table; below. Optimizations with other methods in the energy table proceed; by finite differences. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp2.5; MP2.5 [manual]. mp3; third-order MP perturbation theory [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation(0) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. name; calls method DFT [manual]. b3lyp; B3LYP Hybrid-GGA Exchange-Correlation Functional. b3lyp-chg; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Chai and Head-Gordon Dispersion Correction. b3lyp-d; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D2 Dispersion Correction. b3lyp-d1; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D1 Dispersion Correction. b3lyp-d3; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D3 (zero-damping) Dispersion Correction. b3lyp-d3bj; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/opt-1.html:180,optimiz,optimize,180,psi4manual/4.0b5/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/opt-1.html,10,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. PCMSOLVER. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. PCMSOLVER¶. Input File; Description. pcmsolver/dipole; dipole moment for HF and B3LYP in presence of perturbation updated B3LYP values due to new BraggSlater radii. pcmsolver/alpha; PCM dipole polarizabilities. Ref. values from lsdaton test case: static_alpha_hf_H2O_eq_pcmsolver.out. pcmsolver/opt-fd; PCM-SCF STO-3G geometry optimization by finite differences, with Z-matrix input. pcmsolver/ghost; ghost atoms for the pcmsolver addon. pcmsolver/dft; pcm updated totalenergy to new BraggSlater radii values. pcmsolver/scf; pcm. pcmsolver/uhf-tdscf; UHF PCM TDSCF. pcmsolver/tdscf; PCM TDSCF Ref. values from lsdaton test case: opa_hf_H2O_noneq_pcmsolver.out. pcmsolver/ccsd-pte; coupled-cluster with PCM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_testsuite_pcmsolver.html:471,optimiz,optimization,471,psi4manual/master/autodoc_testsuite_pcmsolver.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_testsuite_pcmsolver.html,1,['optimiz'],['optimization']
Performance,"﻿. PCMSOLVER. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. PCMSOLVER¶. Input File; Description. pcmsolver/ccsd-pte; coupled-cluster with PCM. pcmsolver/opt-fd; PCM-SCF STO-3G geometry optimization by finite differences, with Z-matrix input. pcmsolver/dipole; dipole moment for HF and B3LYP in presence of perturbation. pcmsolver/dft; pcm. pcmsolver/scf; pcm. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_pcmsolver-1.html:251,optimiz,optimization,251,psi4manual/1.2.1/autodoc_testsuite_pcmsolver-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_pcmsolver-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PCMSOLVER. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. PCMSOLVER¶. Input File; Description. pcmsolver/ccsd-pte; coupled-cluster with PCM. pcmsolver/opt-fd; PCM-SCF STO-3G geometry optimization by finite differences, with Z-matrix input. pcmsolver/dipole; dipole moment for HF and B3LYP in presence of perturbation. pcmsolver/dft; pcm. pcmsolver/scf; pcm. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_pcmsolver-1.html:251,optimiz,optimization,251,psi4manual/1.3.2/autodoc_testsuite_pcmsolver-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_pcmsolver-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PCMSOLVER. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. PCMSOLVER¶. Input File; Description. pcmsolver/scf; pcm. pcmsolver/uhf-tdscf; UHF PCM TDSCF. pcmsolver/ccsd-pte; coupled-cluster with PCM. pcmsolver/alpha; PCM dipole polarizabilities. Ref. values from lsdaton test case: static_alpha_hf_H2O_eq_pcmsolver.out. pcmsolver/opt-fd; PCM-SCF STO-3G geometry optimization by finite differences, with Z-matrix input. pcmsolver/dipole; dipole moment for HF and B3LYP in presence of perturbation updated B3LYP values due to new BraggSlater radii. pcmsolver/dft; pcm updated totalenergy to new BraggSlater radii values. pcmsolver/tdscf; PCM TDSCF Ref. values from lsdaton test case: opa_hf_H2O_noneq_pcmsolver.out. pcmsolver/ghost; ghost atoms for the pcmsolver addon. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_pcmsolver-1.html:436,optimiz,optimization,436,psi4manual/1.4.0/autodoc_testsuite_pcmsolver-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_pcmsolver-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PCMSOLVER. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. PCMSOLVER¶. Input File; Description. pcmsolver/alpha; PCM dipole polarizabilities. Ref. values from lsdaton test case: static_alpha_hf_H2O_eq_pcmsolver.out. pcmsolver/opt-fd; PCM-SCF STO-3G geometry optimization by finite differences, with Z-matrix input. pcmsolver/dipole; dipole moment for HF and B3LYP in presence of perturbation updated B3LYP values due to new BraggSlater radii. pcmsolver/ghost; ghost atoms for the pcmsolver addon. pcmsolver/scf; pcm. pcmsolver/tdscf; PCM TDSCF Ref. values from lsdaton test case: opa_hf_H2O_noneq_pcmsolver.out. pcmsolver/ccsd-pte; coupled-cluster with PCM. pcmsolver/dft; pcm updated totalenergy to new BraggSlater radii values. pcmsolver/uhf-tdscf; UHF PCM TDSCF. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_pcmsolver-1.html:334,optimiz,optimization,334,psi4manual/1.5.0/autodoc_testsuite_pcmsolver-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_pcmsolver-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PCMSOLVER. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. PCMSOLVER¶. Input File; Description. pcmsolver/dft; pcm updated totalenergy to new BraggSlater radii values. pcmsolver/uhf-tdscf; UHF PCM TDSCF. pcmsolver/dipole; dipole moment for HF and B3LYP in presence of perturbation updated B3LYP values due to new BraggSlater radii. pcmsolver/ghost; ghost atoms for the pcmsolver addon. pcmsolver/tdscf; PCM TDSCF Ref. values from lsdaton test case: opa_hf_H2O_noneq_pcmsolver.out. pcmsolver/alpha; PCM dipole polarizabilities. Ref. values from lsdaton test case: static_alpha_hf_H2O_eq_pcmsolver.out. pcmsolver/ccsd-pte; coupled-cluster with PCM. pcmsolver/opt-fd; PCM-SCF STO-3G geometry optimization by finite differences, with Z-matrix input. pcmsolver/scf; pcm. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_pcmsolver.html:765,optimiz,optimization,765,psi4manual/1.6.x/autodoc_testsuite_pcmsolver.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_pcmsolver.html,1,['optimiz'],['optimization']
Performance,"﻿. PCMSOLVER. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. PCMSOLVER¶. Input File; Description. pcmsolver/tdscf; PCM TDSCF Ref. values from lsdaton test case: opa_hf_H2O_noneq_pcmsolver.out. pcmsolver/alpha; PCM dipole polarizabilities. Ref. values from lsdaton test case: static_alpha_hf_H2O_eq_pcmsolver.out. pcmsolver/ghost; ghost atoms for the pcmsolver addon. pcmsolver/scf; pcm. pcmsolver/dipole; dipole moment for HF and B3LYP in presence of perturbation updated B3LYP values due to new BraggSlater radii. pcmsolver/ccsd-pte; coupled-cluster with PCM. pcmsolver/uhf-tdscf; UHF PCM TDSCF. pcmsolver/opt-fd; PCM-SCF STO-3G geometry optimization by finite differences, with Z-matrix input. pcmsolver/dft; pcm updated totalenergy to new BraggSlater radii values. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_pcmsolver.html:713,optimiz,optimization,713,psi4manual/1.7.x/autodoc_testsuite_pcmsolver.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_pcmsolver.html,1,['optimiz'],['optimization']
Performance,"﻿. PCMSOLVER. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. PCMSOLVER¶. Input File; Description. pcmsolver/uhf-tdscf; UHF PCM TDSCF. pcmsolver/ghost; ghost atoms for the pcmsolver addon. pcmsolver/scf; pcm. pcmsolver/dipole; dipole moment for HF and B3LYP in presence of perturbation updated B3LYP values due to new BraggSlater radii. pcmsolver/tdscf; PCM TDSCF Ref. values from lsdaton test case: opa_hf_H2O_noneq_pcmsolver.out. pcmsolver/ccsd-pte; coupled-cluster with PCM. pcmsolver/dft; pcm updated totalenergy to new BraggSlater radii values. pcmsolver/opt-fd; PCM-SCF STO-3G geometry optimization by finite differences, with Z-matrix input. pcmsolver/alpha; PCM dipole polarizabilities. Ref. values from lsdaton test case: static_alpha_hf_H2O_eq_pcmsolver.out. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_pcmsolver.html:667,optimiz,optimization,667,psi4manual/1.8.x/autodoc_testsuite_pcmsolver.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_pcmsolver.html,1,['optimiz'],['optimization']
Performance,"﻿. PCMSOLVER. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. PCMSOLVER¶. Input File; Description. pcmsolver/dipole; dipole moment for HF and B3LYP in presence of perturbation updated B3LYP values due to new BraggSlater radii. pcmsolver/scf; pcm. pcmsolver/ghost; ghost atoms for the pcmsolver addon. pcmsolver/alpha; PCM dipole polarizabilities. Ref. values from lsdaton test case: static_alpha_hf_H2O_eq_pcmsolver.out. pcmsolver/opt-fd; PCM-SCF STO-3G geometry optimization by finite differences, with Z-matrix input. pcmsolver/tdscf; PCM TDSCF Ref. values from lsdaton test case: opa_hf_H2O_noneq_pcmsolver.out. pcmsolver/uhf-tdscf; UHF PCM TDSCF. pcmsolver/dft; pcm updated totalenergy to new BraggSlater radii values. pcmsolver/ccsd-pte; coupled-cluster with PCM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; PCMSOLVER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_pcmsolver.html:538,optimiz,optimization,538,psi4manual/1.9.x/autodoc_testsuite_pcmsolver.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_pcmsolver.html,1,['optimiz'],['optimization']
Performance,"﻿. PSIMRCC — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. ACTIVE¶. The number of active orbitals per irrep. Type: array; Default: No Default. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_REFERENCE¶. Reference wavefunction type used in MRCC computations. Type: string; Possible Values: RHF, ROHF, TCSCF, MCSCF, GENERAL; Default: GENERAL. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal correction",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__psimrcc-1.html:641,perform,perform,641,psi4manual/4.0b2/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. ACTIVE¶. The number of active orbitals per irrep. Type: array; Default: No Default. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__psimrcc-1.html:656,perform,perform,656,psi4manual/4.0b3/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. ACTIVE¶. The number of active orbitals per irrep. Type: array; Default: No Default. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__psimrcc-1.html:656,perform,perform,656,psi4manual/4.0b4/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. ACTIVE¶. The number of active orbitals per irrep. Type: array; Default: No Default. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__psimrcc-1.html:656,perform,perform,656,psi4manual/4.0b5/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before ext",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__psimrcc-1.html:579,perform,perform,579,psi4manual/1.0.0/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is p",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__psimrcc.html:543,perform,perform,543,psi4manual/master/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__psimrcc.html,1,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: in",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__psimrcc-1.html:525,perform,perform,525,psi4manual/1.1.0/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__psimrcc-1.html:527,perform,perform,527,psi4manual/1.2.1/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__psimrcc-1.html:527,perform,perform,527,psi4manual/1.3.2/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__psimrcc-1.html:534,perform,perform,534,psi4manual/1.4.0/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__psimrcc-1.html:534,perform,perform,534,psi4manual/1.5.0/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__psimrcc-1.html,2,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__psimrcc.html:534,perform,perform,534,psi4manual/1.6.x/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__psimrcc.html,1,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__psimrcc.html:534,perform,perform,534,psi4manual/1.7.x/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__psimrcc.html,1,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performe",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__psimrcc.html:536,perform,perform,536,psi4manual/1.8.x/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__psimrcc.html,1,['perform'],['perform']
Performance,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performe",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__psimrcc.html:536,perform,perform,536,psi4manual/1.9.x/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__psimrcc.html,1,['perform'],['perform']
Performance,"﻿. PSIOH Intermediate Files — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices ». PSIOH Intermediate Files¶. Auxiliary files in PSI4. File; File Label; Contents. 1; PSIF_OPTKING;  . 11; PSIF_FILE11; geometry optimization, geometry, and gradient. 12; PSIF_INTCO; internal coordinates file, formerly intco.dat. 16; PSIF_3INDEX;  . 31; PSIF_DSCF;  . 32; PSIF_CHKPT; new libpsio checkpoint file number. 33; PSIF_SO_TEI;  . 34; PSIF_SO_PK;  . 35; PSIF_OEI;  . 36; PSIF_SO_ERF_TEI;  . 37; PSIF_SO_ERFC_TEI;  . 38; PSIF_SO_R12;  . 39; PSIF_SO_R12T1;  . 40; PSIF_DERINFO;  . 41; PSIF_SO_PRESORT;  . 42; PSIF_OLD_CHKPT; Until we have flexible PSIF_CHKPT this will store previous calculation info. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY;  . 46; PSIF_AO_DGDBZ;  . 50; PSIF_PSIMRCC_INTEGRALS;  . 51; PSIF_PSIMRCC_RESTART;  . 52; PSIF_MCSCF;  . 53; PSIF_TPDM_HALFTRANS;  . 60; PSIF_DETCAS;  . 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-tranformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 65; PSIF_DFT_GRID; Storage for DFT/pseudospectral grid. 66; PSIF_DF_TENSOR;  . 67; PSIF_PS_TENSOR;  . 71; PSIF_TPDM_PRESORT;  . 72; PSIF_MO_TEI;  . 73; PSIF_MO_OPDM;  . 74; PSIF_MO_TPDM;  . 75; PSIF_MO_LAG;  . 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM;  . 78; PSIF_DBOC; dboc:. 79; PSIF_MO_R12;  . 80; PSIF_MO_R12T2;  . 81; PSIF_MO_AA_TEI;  . 82; PSIF_MO_BB_TEI;  . 83; PSIF_MO_AB_TEI;  . 84; PSIF_MO_AA_TPDM;  . 85; PSIF_MO_BB_TPDM;  . 86; PSIF_MO_AB_TPDM;  . 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSIF_BB_PRESORT; BB UHF two",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodoc_psifiles-1.html:280,optimiz,optimization,280,psi4manual/4.0b3/autodoc_psifiles-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodoc_psifiles-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices ». PSIOH Intermediate Files¶. Auxiliary files in PSI4. File; File Label; Contents. 1; PSIF_OPTKING;  . 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX;  . 31; PSIF_DSCF;  . 32; PSIF_CHKPT; new libpsio checkpoint file number. 33; PSIF_SO_TEI;  . 34; PSIF_SO_PK;  . 35; PSIF_OEI;  . 36; PSIF_SO_ERF_TEI;  . 37; PSIF_SO_ERFC_TEI;  . 38; PSIF_SO_R12;  . 39; PSIF_SO_R12T1;  . 40; PSIF_DERINFO;  . 41; PSIF_SO_PRESORT;  . 42; PSIF_OLD_CHKPT; Until we have flexible PSIF_CHKPT this will store previous calculation info. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY;  . 46; PSIF_AO_DGDBZ;  . 50; PSIF_PSIMRCC_INTEGRALS;  . 51; PSIF_PSIMRCC_RESTART;  . 52; PSIF_MCSCF;  . 53; PSIF_TPDM_HALFTRANS;  . 60; PSIF_DETCAS;  . 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-tranformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 65; PSIF_DFT_GRID; Storage for DFT/pseudospectral grid. 66; PSIF_DF_TENSOR;  . 67; PSIF_PS_TENSOR;  . 71; PSIF_TPDM_PRESORT;  . 72; PSIF_MO_TEI;  . 73; PSIF_MO_OPDM;  . 74; PSIF_MO_TPDM;  . 75; PSIF_MO_LAG;  . 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM;  . 78; PSIF_DBOC; dboc:. 79; PSIF_MO_R12;  . 80; PSIF_MO_R12T2;  . 81; PSIF_MO_AA_TEI;  . 82; PSIF_MO_BB_TEI;  . 83; PSIF_MO_AB_TEI;  . 84; PSIF_MO_AA_TPDM;  . 85; PSIF_MO_BB_TPDM;  . 86; PSIF_MO_AB_TPDM;  . 87; PSIF_AA_PR",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodoc_psifiles-1.html:278,optimiz,optimization,278,psi4manual/4.0b4/autodoc_psifiles-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodoc_psifiles-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices ». PSIOH Intermediate Files¶. Auxiliary files in PSI4. File; File Label; Contents. 1; PSIF_OPTKING;  . 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX;  . 31; PSIF_DSCF;  . 32; PSIF_CHKPT; new libpsio checkpoint file number. 33; PSIF_SO_TEI;  . 34; PSIF_SO_PK;  . 35; PSIF_OEI;  . 36; PSIF_SO_ERF_TEI;  . 37; PSIF_SO_ERFC_TEI;  . 38; PSIF_SO_R12;  . 39; PSIF_SO_R12T1;  . 40; PSIF_DERINFO;  . 41; PSIF_SO_PRESORT;  . 42; PSIF_OLD_CHKPT; Until we have flexible PSIF_CHKPT this will store previous calculation info. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY;  . 46; PSIF_AO_DGDBZ;  . 50; PSIF_PSIMRCC_INTEGRALS;  . 51; PSIF_PSIMRCC_RESTART;  . 52; PSIF_MCSCF;  . 53; PSIF_TPDM_HALFTRANS;  . 60; PSIF_DETCAS;  . 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-tranformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 65; PSIF_DFT_GRID; Storage for DFT/pseudospectral grid. 66; PSIF_DF_TENSOR;  . 67; PSIF_PS_TENSOR;  . 71; PSIF_TPDM_PRESORT;  . 72; PSIF_MO_TEI;  . 73; PSIF_MO_OPDM;  . 74; PSIF_MO_TPDM;  . 75; PSIF_MO_LAG;  . 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM;  . 78; PSIF_DBOC; dboc:. 79; PSIF_MO_R12;  . 80; PSIF_MO_R12T2;  . 81; PSIF_MO_AA_TEI;  . 82; PSIF_MO_BB_TEI;  . 83; PSIF_MO_AB_TEI;  . 84; PSIF_MO_AA_TPDM;  . 85; PSIF_MO_BB_TPDM;  . 86; PSIF_MO_AB_TPDM;  . 87; PSIF_AA_PR",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodoc_psifiles-1.html:278,optimiz,optimization,278,psi4manual/4.0b5/autodoc_psifiles-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodoc_psifiles-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices ». PSIOH Intermediate Files¶. Auxiliary files in Psi4¶. File; File Label; Contents. 1; PSIF_OPTKING;  . 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX;  . 31; PSIF_DSCF;  . 32; PSIF_CHKPT; new libpsio checkpoint file number. 33; PSIF_SO_TEI;  . 34; PSIF_SO_PK;  . 35; PSIF_OEI;  . 36; PSIF_SO_ERF_TEI;  . 37; PSIF_SO_ERFC_TEI;  . 38; PSIF_SO_R12;  . 39; PSIF_SO_R12T1;  . 40; PSIF_DERINFO;  . 41; PSIF_SO_PRESORT;  . 42; PSIF_OLD_CHKPT; Until we have flexible PSIF_CHKPT this will store previous calculation info. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY;  . 46; PSIF_AO_DGDBZ;  . 50; PSIF_PSIMRCC_INTEGRALS;  . 51; PSIF_PSIMRCC_RESTART;  . 52; PSIF_MCSCF;  . 53; PSIF_TPDM_HALFTRANS;  . 60; PSIF_DETCAS;  . 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-tranformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 65; PSIF_DFT_GRID; Storage for DFT/pseudospectral grid. 66; PSIF_DF_TENSOR;  . 67; PSIF_PS_TENSOR;  . 71; PSIF_TPDM_PRESORT;  . 72; PSIF_MO_TEI;  . 73; PSIF_MO_OPDM;  . 74; PSIF_MO_TPDM;  . 75; PSIF_MO_LAG;  . 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM;  . 78; PSIF_DBOC; dboc:. 79; PSIF_MO_R12;  . 80; PSIF_MO_R12T2;  . 81; PSIF_MO_AA_TEI;  . 82; PSIF_MO_BB_TEI;  . 83; PSIF_MO_AB_TEI;  . 84; PSIF_MO_AA_TPDM;  . 85; PSIF_MO_BB_TPDM;  . 86; PSIF_MO_AB_TPDM;  . 87; PS",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_psifiles-1.html:286,optimiz,optimization,286,psi4manual/1.0.0/autodoc_psifiles-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_psifiles-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSIOH Intermediate Files. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING. 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX. 33; PSIF_SO_TEI. 34; PSIF_SO_PK. 35; PSIF_OEI. 36; PSIF_SO_ERF_TEI. 37; PSIF_SO_ERFC_TEI. 38; PSIF_SO_R12. 39; PSIF_SO_R12T1. 40; PSIF_DERINFO. 41; PSIF_SO_PRESORT. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY. 46; PSIF_AO_DGDBZ. 50; PSIF_PSIMRCC_INTEGRALS. 51; PSIF_PSIMRCC_RESTART. 52; PSIF_MCSCF. 53; PSIF_TPDM_HALFTRANS. 60; PSIF_DETCAS. 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-transformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 71; PSIF_TPDM_PRESORT. 72; PSIF_MO_TEI. 73; PSIF_MO_OPDM. 74; PSIF_MO_TPDM. 75; PSIF_MO_LAG. 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM. 79; PSIF_MO_R12. 80; PSIF_MO_R12T2. 81; PSIF_MO_AA_TEI. 82; PSIF_MO_BB_TEI. 83; PSIF_MO_AB_TEI. 84; PSIF_MO_AA_TPDM. 85; PSIF_MO_BB_TPDM. 86; PSIF_MO_AB_TPDM. 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSIF_BB_PRESORT; BB UHF twopdm presort file. 89; PSIF_AB_PRESORT; AB UHF twopdm presort file. 92; PSIF_SO_PKSUPER1. 93; PSIF_SO_PKSUPER2. 94; PSIF_HALFT0. 95; PSIF_HALFT1. 97; PSIF_DFSCF_BJ; B Matrix containing 3-index tensor in AOs with J^-1/2 for use with DF-SCF. 100; PSIF_CC_INFO. 101; PSIF_CC_OEI. 102; PSIF_CC_AINTS. 103; PSIF_CC_BINTS. 104; PSIF_CC_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_psifiles.html:266,optimiz,optimization,266,psi4manual/master/autodoc_psifiles.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_psifiles.html,1,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING;  . 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX;  . 31; PSIF_DSCF;  . 32; PSIF_CHKPT; new libpsio checkpoint file number. 33; PSIF_SO_TEI;  . 34; PSIF_SO_PK;  . 35; PSIF_OEI;  . 36; PSIF_SO_ERF_TEI;  . 37; PSIF_SO_ERFC_TEI;  . 38; PSIF_SO_R12;  . 39; PSIF_SO_R12T1;  . 40; PSIF_DERINFO;  . 41; PSIF_SO_PRESORT;  . 42; PSIF_OLD_CHKPT; Until we have flexible PSIF_CHKPT this will store previous calculation info. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY;  . 46; PSIF_AO_DGDBZ;  . 50; PSIF_PSIMRCC_INTEGRALS;  . 51; PSIF_PSIMRCC_RESTART;  . 52; PSIF_MCSCF;  . 53; PSIF_TPDM_HALFTRANS;  . 60; PSIF_DETCAS;  . 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-tranformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 65; PSIF_DFT_GRID; Storage for DFT/pseudospectral grid. 66; PSIF_DF_TENSOR;  . 67; PSIF_PS_TENSOR;  . 71; PSIF_TPDM_PRESORT;  . 72; PSIF_MO_TEI;  . 73; PSIF_MO_OPDM;  . 74; PSIF_MO_TPDM;  . 75; PSIF_MO_LAG;  . 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM;  . 78; PSIF_DBOC; dboc:. 79; PSIF_MO_R12;  . 80; PSIF_MO_R12T2;  . 81; PSIF_MO_AA_TEI;  . 82; PSIF_MO_BB_TEI;  . 83; PSIF_MO_AB_TEI;  . 84; PSIF_MO_AA_TPDM;  . 85; PSIF_MO_BB_TPDM;  . 86; PSIF_MO_AB_TPDM;  . 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSIF_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodoc_psifiles-1.html:234,optimiz,optimization,234,psi4manual/1.1.0/autodoc_psifiles-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodoc_psifiles-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING;  . 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX;  . 31; PSIF_DSCF;  . 32; PSIF_CHKPT; new libpsio checkpoint file number. 33; PSIF_SO_TEI;  . 34; PSIF_SO_PK;  . 35; PSIF_OEI;  . 36; PSIF_SO_ERF_TEI;  . 37; PSIF_SO_ERFC_TEI;  . 38; PSIF_SO_R12;  . 39; PSIF_SO_R12T1;  . 40; PSIF_DERINFO;  . 41; PSIF_SO_PRESORT;  . 42; PSIF_OLD_CHKPT; Until we have flexible PSIF_CHKPT this will store previous calculation info. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY;  . 46; PSIF_AO_DGDBZ;  . 50; PSIF_PSIMRCC_INTEGRALS;  . 51; PSIF_PSIMRCC_RESTART;  . 52; PSIF_MCSCF;  . 53; PSIF_TPDM_HALFTRANS;  . 60; PSIF_DETCAS;  . 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-tranformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 65; PSIF_DFT_GRID; Storage for DFT/pseudospectral grid. 66; PSIF_DF_TENSOR;  . 67; PSIF_PS_TENSOR;  . 71; PSIF_TPDM_PRESORT;  . 72; PSIF_MO_TEI;  . 73; PSIF_MO_OPDM;  . 74; PSIF_MO_TPDM;  . 75; PSIF_MO_LAG;  . 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM;  . 78; PSIF_DBOC; dboc:. 79; PSIF_MO_R12;  . 80; PSIF_MO_R12T2;  . 81; PSIF_MO_AA_TEI;  . 82; PSIF_MO_BB_TEI;  . 83; PSIF_MO_AB_TEI;  . 84; PSIF_MO_AA_TPDM;  . 85; PSIF_MO_BB_TPDM;  . 86; PSIF_MO_AB_TPDM;  . 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSI",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_psifiles-1.html:236,optimiz,optimization,236,psi4manual/1.2.1/autodoc_psifiles-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_psifiles-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING;  . 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX;  . 31; PSIF_DSCF;  . 32; PSIF_CHKPT; new libpsio checkpoint file number. 33; PSIF_SO_TEI;  . 34; PSIF_SO_PK;  . 35; PSIF_OEI;  . 36; PSIF_SO_ERF_TEI;  . 37; PSIF_SO_ERFC_TEI;  . 38; PSIF_SO_R12;  . 39; PSIF_SO_R12T1;  . 40; PSIF_DERINFO;  . 41; PSIF_SO_PRESORT;  . 42; PSIF_OLD_CHKPT; Until we have flexible PSIF_CHKPT this will store previous calculation info. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY;  . 46; PSIF_AO_DGDBZ;  . 50; PSIF_PSIMRCC_INTEGRALS;  . 51; PSIF_PSIMRCC_RESTART;  . 52; PSIF_MCSCF;  . 53; PSIF_TPDM_HALFTRANS;  . 60; PSIF_DETCAS;  . 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-transformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 65; PSIF_DFT_GRID; Storage for DFT/pseudospectral grid. 66; PSIF_DF_TENSOR;  . 67; PSIF_PS_TENSOR;  . 71; PSIF_TPDM_PRESORT;  . 72; PSIF_MO_TEI;  . 73; PSIF_MO_OPDM;  . 74; PSIF_MO_TPDM;  . 75; PSIF_MO_LAG;  . 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM;  . 78; PSIF_DBOC; dboc:. 79; PSIF_MO_R12;  . 80; PSIF_MO_R12T2;  . 81; PSIF_MO_AA_TEI;  . 82; PSIF_MO_BB_TEI;  . 83; PSIF_MO_AB_TEI;  . 84; PSIF_MO_AA_TPDM;  . 85; PSIF_MO_BB_TPDM;  . 86; PSIF_MO_AB_TPDM;  . 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PS",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_psifiles-1.html:236,optimiz,optimization,236,psi4manual/1.3.2/autodoc_psifiles-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_psifiles-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSIOH Intermediate Files. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING. 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX. 33; PSIF_SO_TEI. 34; PSIF_SO_PK. 35; PSIF_OEI. 36; PSIF_SO_ERF_TEI. 37; PSIF_SO_ERFC_TEI. 38; PSIF_SO_R12. 39; PSIF_SO_R12T1. 40; PSIF_DERINFO. 41; PSIF_SO_PRESORT. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY. 46; PSIF_AO_DGDBZ. 50; PSIF_PSIMRCC_INTEGRALS. 51; PSIF_PSIMRCC_RESTART. 52; PSIF_MCSCF. 53; PSIF_TPDM_HALFTRANS. 60; PSIF_DETCAS. 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-transformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 71; PSIF_TPDM_PRESORT. 72; PSIF_MO_TEI. 73; PSIF_MO_OPDM. 74; PSIF_MO_TPDM. 75; PSIF_MO_LAG. 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM. 79; PSIF_MO_R12. 80; PSIF_MO_R12T2. 81; PSIF_MO_AA_TEI. 82; PSIF_MO_BB_TEI. 83; PSIF_MO_AB_TEI. 84; PSIF_MO_AA_TPDM. 85; PSIF_MO_BB_TPDM. 86; PSIF_MO_AB_TPDM. 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSIF_BB_PRESORT; BB UHF twopdm presort file. 89; PSIF_AB_PRESORT; AB UHF twopdm presort file. 92; PSIF_SO_PKSUPER1. 93; PSIF_SO_PKSUPER2. 94; PSIF_HALFT0. 95; PSIF_HALFT1. 97; PSIF_DFSCF_BJ; B Matrix containing 3-index tensor in AOs with J^-1/2 for use with DF-SCF. 100; PSIF_CC_INFO. 101; PSIF_CC_OEI. 102; PSIF_CC_AINTS. 103; PSIF_CC_BINTS. 104; PSIF_CC_CINTS. 10",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_psifiles-1.html:257,optimiz,optimization,257,psi4manual/1.4.0/autodoc_psifiles-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_psifiles-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSIOH Intermediate Files. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING. 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX. 33; PSIF_SO_TEI. 34; PSIF_SO_PK. 35; PSIF_OEI. 36; PSIF_SO_ERF_TEI. 37; PSIF_SO_ERFC_TEI. 38; PSIF_SO_R12. 39; PSIF_SO_R12T1. 40; PSIF_DERINFO. 41; PSIF_SO_PRESORT. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY. 46; PSIF_AO_DGDBZ. 50; PSIF_PSIMRCC_INTEGRALS. 51; PSIF_PSIMRCC_RESTART. 52; PSIF_MCSCF. 53; PSIF_TPDM_HALFTRANS. 60; PSIF_DETCAS. 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-transformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 71; PSIF_TPDM_PRESORT. 72; PSIF_MO_TEI. 73; PSIF_MO_OPDM. 74; PSIF_MO_TPDM. 75; PSIF_MO_LAG. 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM. 79; PSIF_MO_R12. 80; PSIF_MO_R12T2. 81; PSIF_MO_AA_TEI. 82; PSIF_MO_BB_TEI. 83; PSIF_MO_AB_TEI. 84; PSIF_MO_AA_TPDM. 85; PSIF_MO_BB_TPDM. 86; PSIF_MO_AB_TPDM. 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSIF_BB_PRESORT; BB UHF twopdm presort file. 89; PSIF_AB_PRESORT; AB UHF twopdm presort file. 92; PSIF_SO_PKSUPER1. 93; PSIF_SO_PKSUPER2. 94; PSIF_HALFT0. 95; PSIF_HALFT1. 97; PSIF_DFSCF_BJ; B Matrix containing 3-index tensor in AOs with J^-1/2 for use with DF-SCF. 100; PSIF_CC_INFO. 101; PSIF_CC_OEI. 102; PSIF_CC_AINTS. 103; PSIF_CC_BINTS. 104; PSIF_CC_CINTS. 10",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_psifiles-1.html:257,optimiz,optimization,257,psi4manual/1.5.0/autodoc_psifiles-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_psifiles-1.html,2,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSIOH Intermediate Files. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING. 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX. 33; PSIF_SO_TEI. 34; PSIF_SO_PK. 35; PSIF_OEI. 36; PSIF_SO_ERF_TEI. 37; PSIF_SO_ERFC_TEI. 38; PSIF_SO_R12. 39; PSIF_SO_R12T1. 40; PSIF_DERINFO. 41; PSIF_SO_PRESORT. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY. 46; PSIF_AO_DGDBZ. 50; PSIF_PSIMRCC_INTEGRALS. 51; PSIF_PSIMRCC_RESTART. 52; PSIF_MCSCF. 53; PSIF_TPDM_HALFTRANS. 60; PSIF_DETCAS. 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-transformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 71; PSIF_TPDM_PRESORT. 72; PSIF_MO_TEI. 73; PSIF_MO_OPDM. 74; PSIF_MO_TPDM. 75; PSIF_MO_LAG. 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM. 79; PSIF_MO_R12. 80; PSIF_MO_R12T2. 81; PSIF_MO_AA_TEI. 82; PSIF_MO_BB_TEI. 83; PSIF_MO_AB_TEI. 84; PSIF_MO_AA_TPDM. 85; PSIF_MO_BB_TPDM. 86; PSIF_MO_AB_TPDM. 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSIF_BB_PRESORT; BB UHF twopdm presort file. 89; PSIF_AB_PRESORT; AB UHF twopdm presort file. 92; PSIF_SO_PKSUPER1. 93; PSIF_SO_PKSUPER2. 94; PSIF_HALFT0. 95; PSIF_HALFT1. 97; PSIF_DFSCF_BJ; B Matrix containing 3-index tensor in AOs with J^-1/2 for use with DF-SCF. 100; PSIF_CC_INFO. 101; PSIF_CC_OEI. 102; PSIF_CC_AINTS. 103; PSIF_CC_BINTS. 104; PSIF_CC_CINTS. 10",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_psifiles.html:257,optimiz,optimization,257,psi4manual/1.6.x/autodoc_psifiles.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_psifiles.html,1,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSIOH Intermediate Files. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING. 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX. 33; PSIF_SO_TEI. 34; PSIF_SO_PK. 35; PSIF_OEI. 36; PSIF_SO_ERF_TEI. 37; PSIF_SO_ERFC_TEI. 38; PSIF_SO_R12. 39; PSIF_SO_R12T1. 40; PSIF_DERINFO. 41; PSIF_SO_PRESORT. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY. 46; PSIF_AO_DGDBZ. 50; PSIF_PSIMRCC_INTEGRALS. 51; PSIF_PSIMRCC_RESTART. 52; PSIF_MCSCF. 53; PSIF_TPDM_HALFTRANS. 60; PSIF_DETCAS. 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-transformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 71; PSIF_TPDM_PRESORT. 72; PSIF_MO_TEI. 73; PSIF_MO_OPDM. 74; PSIF_MO_TPDM. 75; PSIF_MO_LAG. 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM. 79; PSIF_MO_R12. 80; PSIF_MO_R12T2. 81; PSIF_MO_AA_TEI. 82; PSIF_MO_BB_TEI. 83; PSIF_MO_AB_TEI. 84; PSIF_MO_AA_TPDM. 85; PSIF_MO_BB_TPDM. 86; PSIF_MO_AB_TPDM. 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSIF_BB_PRESORT; BB UHF twopdm presort file. 89; PSIF_AB_PRESORT; AB UHF twopdm presort file. 92; PSIF_SO_PKSUPER1. 93; PSIF_SO_PKSUPER2. 94; PSIF_HALFT0. 95; PSIF_HALFT1. 97; PSIF_DFSCF_BJ; B Matrix containing 3-index tensor in AOs with J^-1/2 for use with DF-SCF. 100; PSIF_CC_INFO. 101; PSIF_CC_OEI. 102; PSIF_CC_AINTS. 103; PSIF_CC_BINTS. 104; PSIF_CC_CINTS. 10",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_psifiles.html:257,optimiz,optimization,257,psi4manual/1.7.x/autodoc_psifiles.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_psifiles.html,1,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSIOH Intermediate Files. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING. 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX. 33; PSIF_SO_TEI. 34; PSIF_SO_PK. 35; PSIF_OEI. 36; PSIF_SO_ERF_TEI. 37; PSIF_SO_ERFC_TEI. 38; PSIF_SO_R12. 39; PSIF_SO_R12T1. 40; PSIF_DERINFO. 41; PSIF_SO_PRESORT. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY. 46; PSIF_AO_DGDBZ. 50; PSIF_PSIMRCC_INTEGRALS. 51; PSIF_PSIMRCC_RESTART. 52; PSIF_MCSCF. 53; PSIF_TPDM_HALFTRANS. 60; PSIF_DETCAS. 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-transformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 71; PSIF_TPDM_PRESORT. 72; PSIF_MO_TEI. 73; PSIF_MO_OPDM. 74; PSIF_MO_TPDM. 75; PSIF_MO_LAG. 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM. 79; PSIF_MO_R12. 80; PSIF_MO_R12T2. 81; PSIF_MO_AA_TEI. 82; PSIF_MO_BB_TEI. 83; PSIF_MO_AB_TEI. 84; PSIF_MO_AA_TPDM. 85; PSIF_MO_BB_TPDM. 86; PSIF_MO_AB_TPDM. 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSIF_BB_PRESORT; BB UHF twopdm presort file. 89; PSIF_AB_PRESORT; AB UHF twopdm presort file. 92; PSIF_SO_PKSUPER1. 93; PSIF_SO_PKSUPER2. 94; PSIF_HALFT0. 95; PSIF_HALFT1. 97; PSIF_DFSCF_BJ; B Matrix containing 3-index tensor in AOs with J^-1/2 for use with DF-SCF. 100; PSIF_CC_INFO. 101; PSIF_CC_OEI. 102; PSIF_CC_AINTS. 103; PSIF_CC_BINTS. 104; PSIF_CC_CINTS. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_psifiles.html:259,optimiz,optimization,259,psi4manual/1.8.x/autodoc_psifiles.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_psifiles.html,1,['optimiz'],['optimization']
Performance,"﻿. PSIOH Intermediate Files. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSIOH Intermediate Files. PSIOH Intermediate Files¶. Auxiliary files in PSI4¶. File; File Label; Contents. 1; PSIF_OPTKING. 11; PSIF_GRAD; geometry optimization, geometry, and gradient; currently is an ASCII file like output.grad. 12; PSIF_INTCO; internal coordinates file, currently is ASCII file like output.intco. 16; PSIF_3INDEX. 33; PSIF_SO_TEI. 34; PSIF_SO_PK. 35; PSIF_OEI. 36; PSIF_SO_ERF_TEI. 37; PSIF_SO_ERFC_TEI. 38; PSIF_SO_R12. 39; PSIF_SO_R12T1. 40; PSIF_DERINFO. 41; PSIF_SO_PRESORT. 43; PSIF_CIVECT; CI vector from DETCI along with string and determinant info. 44; PSIF_AO_DGDBX; B-field derivative AO integrals over GIAO Gaussians – only bra-ket permutational symmetry holds. 45; PSIF_AO_DGDBY. 46; PSIF_AO_DGDBZ. 50; PSIF_PSIMRCC_INTEGRALS. 51; PSIF_PSIMRCC_RESTART. 52; PSIF_MCSCF. 53; PSIF_TPDM_HALFTRANS. 60; PSIF_DETCAS. 61; PSIF_LIBTRANS_DPD; libtrans: All transformed integrals in DPD format are sent here by default. 62; PSIF_LIBTRANS_A_HT; libtrans: Alpha half-transformed integrals in DPD format. 63; PSIF_LIBTRANS_B_HT; libtrans: Beta half-transformed integrals in DPD format. 64; PSIF_LIBDIIS; Storage for libdiis. 71; PSIF_TPDM_PRESORT. 72; PSIF_MO_TEI. 73; PSIF_MO_OPDM. 74; PSIF_MO_TPDM. 75; PSIF_MO_LAG. 76; PSIF_AO_OPDM; PSIF_AO_OPDM also contains AO Lagrangian. 77; PSIF_AO_TPDM. 79; PSIF_MO_R12. 80; PSIF_MO_R12T2. 81; PSIF_MO_AA_TEI. 82; PSIF_MO_BB_TEI. 83; PSIF_MO_AB_TEI. 84; PSIF_MO_AA_TPDM. 85; PSIF_MO_BB_TPDM. 86; PSIF_MO_AB_TPDM. 87; PSIF_AA_PRESORT; AA UHF twopdm presort file. 88; PSIF_BB_PRESORT; BB UHF twopdm presort file. 89; PSIF_AB_PRESORT; AB UHF twopdm presort file. 92; PSIF_SO_PKSUPER1. 93; PSIF_SO_PKSUPER2. 94; PSIF_HALFT0. 95; PSIF_HALFT1. 97; PSIF_DFSCF_BJ; B Matrix containing 3-index tensor in AOs with J^-1/2 for use with DF-SCF. 100; PSIF_CC_INFO. 101; PSIF_CC_OEI. 102; PSIF_CC_AINTS. 103; PSIF_CC_BINTS. 104; PSIF_CC_CINTS. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_psifiles.html:259,optimiz,optimization,259,psi4manual/1.9.x/autodoc_psifiles.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_psifiles.html,1,['optimiz'],['optimization']
Performance,"﻿. PT_ENERGY — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Possible Values: SECOND_ORDER, SCS_SECOND_ORDER, PSEUDO_SECOND_ORDER, SCS_PSEUDO_SECOND_ORDER; Default: SECOND_ORDER. Previous topic; PERTURB_CBS_COUPLING; Next topic; R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__pt_energy-1.html:216,perform,perform,216,psi4manual/4.0b2/autodir_options_c/psimrcc__pt_energy-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__pt_energy-1.html,2,['perform'],['perform']
Performance,"﻿. PT_ENERGY — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Possible Values: SECOND_ORDER, SCS_SECOND_ORDER, PSEUDO_SECOND_ORDER, SCS_PSEUDO_SECOND_ORDER; Default: SECOND_ORDER. Previous topic; PERTURB_CBS_COUPLING; Next topic; R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__pt_energy-1.html:231,perform,perform,231,psi4manual/4.0b3/autodir_options_c/psimrcc__pt_energy-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__pt_energy-1.html,2,['perform'],['perform']
Performance,"﻿. PT_ENERGY — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Possible Values: SECOND_ORDER, SCS_SECOND_ORDER, PSEUDO_SECOND_ORDER, SCS_PSEUDO_SECOND_ORDER; Default: SECOND_ORDER. Previous topic; PERTURB_CBS_COUPLING; Next topic; R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__pt_energy-1.html:231,perform,perform,231,psi4manual/4.0b4/autodir_options_c/psimrcc__pt_energy-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__pt_energy-1.html,2,['perform'],['perform']
Performance,"﻿. PT_ENERGY — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Possible Values: SECOND_ORDER, SCS_SECOND_ORDER, PSEUDO_SECOND_ORDER, SCS_PSEUDO_SECOND_ORDER; Default: SECOND_ORDER. Previous topic; PERTURB_CBS_COUPLING; Next topic; R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__pt_energy-1.html:231,perform,perform,231,psi4manual/4.0b5/autodir_options_c/psimrcc__pt_energy-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__pt_energy-1.html,2,['perform'],['perform']
Performance,"﻿. PT_ENERGY — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Possible Values: SECOND_ORDER, SCS_SECOND_ORDER, PSEUDO_SECOND_ORDER, SCS_PSEUDO_SECOND_ORDER; Default: SECOND_ORDER. Previous topic; PERTURB_CBS_COUPLING; Next topic; R_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__pt_energy-1.html:238,perform,perform,238,psi4manual/1.0.0/autodir_options_c/psimrcc__pt_energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__pt_energy-1.html,2,['perform'],['perform']
Performance,"﻿. PT_ENERGY. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Default: SECOND_ORDER. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__pt_energy.html:202,perform,perform,202,psi4manual/master/autodir_options_c/psimrcc__pt_energy.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__pt_energy.html,1,['perform'],['perform']
Performance,"﻿. PT_ENERGY. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Default: SECOND_ORDER. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__pt_energy-1.html:193,perform,perform,193,psi4manual/1.4.0/autodir_options_c/psimrcc__pt_energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__pt_energy-1.html,2,['perform'],['perform']
Performance,"﻿. PT_ENERGY. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Default: SECOND_ORDER. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__pt_energy-1.html:193,perform,perform,193,psi4manual/1.5.0/autodir_options_c/psimrcc__pt_energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__pt_energy-1.html,2,['perform'],['perform']
Performance,"﻿. PT_ENERGY. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Default: SECOND_ORDER. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__pt_energy.html:193,perform,perform,193,psi4manual/1.6.x/autodir_options_c/psimrcc__pt_energy.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__pt_energy.html,1,['perform'],['perform']
Performance,"﻿. PT_ENERGY. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Default: SECOND_ORDER. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__pt_energy.html:193,perform,perform,193,psi4manual/1.7.x/autodir_options_c/psimrcc__pt_energy.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__pt_energy.html,1,['perform'],['perform']
Performance,"﻿. PT_ENERGY. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Default: SECOND_ORDER. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__pt_energy.html:195,perform,perform,195,psi4manual/1.8.x/autodir_options_c/psimrcc__pt_energy.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__pt_energy.html,1,['perform'],['perform']
Performance,"﻿. PT_ENERGY. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. PT_ENERGY¶. The type of perturbation theory computation to perform. Type: string; Default: SECOND_ORDER. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; PT_ENERGY. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__pt_energy.html:195,perform,perform,195,psi4manual/1.9.x/autodir_options_c/psimrcc__pt_energy.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__pt_energy.html,1,['perform'],['perform']
Performance,"﻿. Plugins: Adding New Functionality to PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Contributions: Intro to Programming in PSI4. Plugins: Adding New Functionality to PSI4¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; 1>>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; 1; 2; 3; 4>>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; 1; 2; 3; 4; 5; 6>>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/plugins-1.html:888,load,loaded,888,psi4manual/1.1.0/plugins-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/plugins-1.html,2,['load'],['loaded']
Performance,"﻿. Plugins: Adding New Functionality to PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Contributions: Intro to Programming in PSI4. Plugins: Adding New Functionality to PSI4¶. Modular Approach to Development¶; It is slightly cumbersome to the development cycle to recompile PSI4; every time a change is made to the C++ code.; It’s also daunting to new developers if they’re required to; learn the structure of the source tree, executable initialization code,; and makefile systems in the existing code in order to add new features,; which was never a problem with Psi3 due to the independent; nature of the modules. To overcome these problems, PSI4 now has a; useful plugin feature. This allows codes to be developed as standalone; entities, which are compiled independently of the Psi source, but can; still link against Psi’s vast library. The plugins can be loaded at; run-time from any location. Creating a New Plugin¶; PSI4 can create basic plugins for you and automatically tailor them; to your compilation environment. To create a basic plugin, run the; following while replacing myplugin with the name of your great code.; If the name you provide is not valid, PSI4 will complain.; 1>>> psi4 --plugin-name myplugin. PSI4 will create a new directory with the name you specify for the; plugin. In this example, a directory named myplugin will be created.; All you need to do is cd into the directory, use PSI4 to generate; a Makefile, and type make. Then execute psi4 in the directory on the; default input file.; 1; 2; 3; 4>>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. PSI4 comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs:; 1; 2; 3; 4; 5; 6>>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/plugins-1.html:890,load,loaded,890,psi4manual/1.2.1/plugins-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/plugins-1.html,2,['load'],['loaded']
Performance,"﻿. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA¶; Code author: Shannon E. Houck; Section author: Shannon E. Houck. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed; in the paper by Houck et. al. [Houck:2019:2278].; This approach handles systems with both spin and spatial degeneracies; by combining the spin-flip (SF) [Krylov:2001:522]; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]; approaches.; The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization; potential (IP), and electron affinity (EA) calculations, as well as; combined RAS-SF-IP/EA calculations, through the DETCI (CI: Configuration Interaction) module. Installation¶. Download the plugin from the GitHub repository:; >>> git clone https://github.com/shannonhouck/psi4fockci.git. Once downloaded, the plugin can be installed as follows:; >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input¶; To run a CAS-nSF-IP/EA calculation, start with a molecule with the; correct charge and multiplicity for the reference state (i.e. some; state well-represented by a single reference). Then, run an energy; calculation, passing in the charge and multiplicity of the; desired state; the number of spin-flips and IP/EA will be automatically; determined based on this input. If additional excitations outside of the; RAS II space are desired, one can set the level of external; excitations using the conf_space keyword.; A sample input file for a RAS(h)-2SF-IP calculation is shown below:; molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""). Note that for calculations involving IP/EA, inclusion ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/plugin_psi4fockci.html:736,perform,perform,736,psi4manual/master/plugin_psi4fockci.html,https://psicode.org,https://psicode.org/psi4manual/master/plugin_psi4fockci.html,1,['perform'],['perform']
Performance,"﻿. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA¶; Code author: Shannon E. Houck; Section author: Shannon E. Houck. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed; in the paper by Houck et. al. [Houck:2019:2278].; This approach handles systems with both spin and spatial degeneracies; by combining the spin-flip (SF) [Krylov:2001:522]; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]; approaches.; The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization; potential (IP), and electron affinity (EA) calculations, as well as; combined RAS-SF-IP/EA calculations, through the DETCI (CI: Configuration Interaction) module. Installation¶. Download the plugin from the GitHub repository:; >>> git clone https://github.com/shannonhouck/psi4fockci.git. Once downloaded, the plugin can be installed as follows:; >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input¶; To run a CAS-nSF-IP/EA calculation, start with a molecule with the; correct charge and multiplicity for the reference state (i.e. some; state well-represented by a single reference). Then, run an energy; calculation, passing in the charge and multiplicity of the; desired state; the number of spin-flips and IP/EA will be automatically; determined based on this input. If additional excitations outside of the; RAS II space are desired, one can set the level of external; excitations using the conf_space keyword.; A sample input file for a RAS(h)-2SF-IP calculation is shown below:; molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""). Note that for calculations involving IP/EA, inclusion of hole (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/plugin_psi4fockci-1.html:727,perform,perform,727,psi4manual/1.4.0/plugin_psi4fockci-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/plugin_psi4fockci-1.html,2,['perform'],['perform']
Performance,"﻿. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA¶; Code author: Shannon E. Houck; Section author: Shannon E. Houck. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed; in the paper by Houck et. al. [Houck:2019:2278].; This approach handles systems with both spin and spatial degeneracies; by combining the spin-flip (SF) [Krylov:2001:522]; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]; approaches.; The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization; potential (IP), and electron affinity (EA) calculations, as well as; combined RAS-SF-IP/EA calculations, through the DETCI (CI: Configuration Interaction) module. Installation¶. Download the plugin from the GitHub repository:; >>> git clone https://github.com/shannonhouck/psi4fockci.git. Once downloaded, the plugin can be installed as follows:; >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input¶; To run a CAS-nSF-IP/EA calculation, start with a molecule with the; correct charge and multiplicity for the reference state (i.e. some; state well-represented by a single reference). Then, run an energy; calculation, passing in the charge and multiplicity of the; desired state; the number of spin-flips and IP/EA will be automatically; determined based on this input. If additional excitations outside of the; RAS II space are desired, one can set the level of external; excitations using the conf_space keyword.; A sample input file for a RAS(h)-2SF-IP calculation is shown below:; molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""). Note that for calculations involving IP/EA, inclusion of hole (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/plugin_psi4fockci-1.html:727,perform,perform,727,psi4manual/1.5.0/plugin_psi4fockci-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/plugin_psi4fockci-1.html,2,['perform'],['perform']
Performance,"﻿. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA¶; Code author: Shannon E. Houck; Section author: Shannon E. Houck. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed; in the paper by Houck et. al. [Houck:2019:2278].; This approach handles systems with both spin and spatial degeneracies; by combining the spin-flip (SF) [Krylov:2001:522]; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]; approaches.; The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization; potential (IP), and electron affinity (EA) calculations, as well as; combined RAS-SF-IP/EA calculations, through the DETCI (CI: Configuration Interaction) module. Installation¶. Download the plugin from the GitHub repository:; >>> git clone https://github.com/shannonhouck/psi4fockci.git. Once downloaded, the plugin can be installed as follows:; >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input¶; To run a CAS-nSF-IP/EA calculation, start with a molecule with the; correct charge and multiplicity for the reference state (i.e. some; state well-represented by a single reference). Then, run an energy; calculation, passing in the charge and multiplicity of the; desired state; the number of spin-flips and IP/EA will be automatically; determined based on this input. If additional excitations outside of the; RAS II space are desired, one can set the level of external; excitations using the conf_space keyword.; A sample input file for a RAS(h)-2SF-IP calculation is shown below:; molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""). Note that for calculations involving IP/EA, inclusion of hole (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/plugin_psi4fockci.html:727,perform,perform,727,psi4manual/1.6.x/plugin_psi4fockci.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/plugin_psi4fockci.html,1,['perform'],['perform']
Performance,"﻿. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA¶; Code author: Shannon E. Houck; Section author: Shannon E. Houck. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed; in the paper by Houck et. al. [Houck:2019:2278].; This approach handles systems with both spin and spatial degeneracies; by combining the spin-flip (SF) [Krylov:2001:522]; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]; approaches.; The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization; potential (IP), and electron affinity (EA) calculations, as well as; combined RAS-SF-IP/EA calculations, through the DETCI (CI: Configuration Interaction) module. Installation¶. Download the plugin from the GitHub repository:; >>> git clone https://github.com/shannonhouck/psi4fockci.git. Once downloaded, the plugin can be installed as follows:; >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input¶; To run a CAS-nSF-IP/EA calculation, start with a molecule with the; correct charge and multiplicity for the reference state (i.e. some; state well-represented by a single reference). Then, run an energy; calculation, passing in the charge and multiplicity of the; desired state; the number of spin-flips and IP/EA will be automatically; determined based on this input. If additional excitations outside of the; RAS II space are desired, one can set the level of external; excitations using the conf_space keyword.; A sample input file for a RAS(h)-2SF-IP calculation is shown below:; molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""). Note that for calculations involving IP/EA, inclusion of hole (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/plugin_psi4fockci.html:727,perform,perform,727,psi4manual/1.7.x/plugin_psi4fockci.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/plugin_psi4fockci.html,1,['perform'],['perform']
Performance,"﻿. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA¶; Code author: Shannon E. Houck; Section author: Shannon E. Houck. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed; in the paper by Houck et. al. [Houck:2019:2278].; This approach handles systems with both spin and spatial degeneracies; by combining the spin-flip (SF) [Krylov:2001:522]; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]; approaches.; The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization; potential (IP), and electron affinity (EA) calculations, as well as; combined RAS-SF-IP/EA calculations, through the DETCI (CI: Configuration Interaction) module. Installation¶. Download the plugin from the GitHub repository:; >>> git clone https://github.com/shannonhouck/psi4fockci.git. Once downloaded, the plugin can be installed as follows:; >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input¶; To run a CAS-nSF-IP/EA calculation, start with a molecule with the; correct charge and multiplicity for the reference state (i.e. some; state well-represented by a single reference). Then, run an energy; calculation, passing in the charge and multiplicity of the; desired state; the number of spin-flips and IP/EA will be automatically; determined based on this input. If additional excitations outside of the; RAS II space are desired, one can set the level of external; excitations using the conf_space keyword.; A sample input file for a RAS(h)-2SF-IP calculation is shown below:; molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""). Note that for calculations involving IP/EA, inclusion of hole",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/plugin_psi4fockci.html:729,perform,perform,729,psi4manual/1.8.x/plugin_psi4fockci.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/plugin_psi4fockci.html,1,['perform'],['perform']
Performance,"﻿. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA. Psi4FockCI: A General Fock-Space CI For Spin-Flip And IP/EA¶; Code author: Shannon E. Houck; Section author: Shannon E. Houck. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed; in the paper by Houck et. al. [Houck:2019:2278].; This approach handles systems with both spin and spatial degeneracies; by combining the spin-flip (SF) [Krylov:2001:522]; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]; approaches.; The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization; potential (IP), and electron affinity (EA) calculations, as well as; combined RAS-SF-IP/EA calculations, through the DETCI (CI: Configuration Interaction) module. Installation¶. Download the plugin from the GitHub repository:; >>> git clone https://github.com/shannonhouck/psi4fockci.git. Once downloaded, the plugin can be installed as follows:; >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input¶; To run a CAS-nSF-IP/EA calculation, start with a molecule with the; correct charge and multiplicity for the reference state (i.e. some; state well-represented by a single reference). Then, run an energy; calculation, passing in the charge and multiplicity of the; desired state; the number of spin-flips and IP/EA will be automatically; determined based on this input. If additional excitations outside of the; RAS II space are desired, one can set the level of external; excitations using the conf_space keyword.; A sample input file for a RAS(h)-2SF-IP calculation is shown below:; molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""). Note that for calculations involving IP/EA, inclusion of hole",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/plugin_psi4fockci.html:729,perform,perform,729,psi4manual/1.9.x/plugin_psi4fockci.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/plugin_psi4fockci.html,1,['perform'],['perform']
Performance,"﻿. Psithon Functions: Invoking a Calculation — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes. Function Intercalls; Embarrassing Parallelism. Previous topic; Geometry Optimization; Next topic; Notes on Options; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » . © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/psithonfunc-1.html:234,perform,performed,234,psi4manual/4.0b2/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/psithonfunc-1.html,2,['perform'],['performed']
Performance,"﻿. Psithon Functions: Invoking a Calculation — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes. Spectroscopic Constants for Diatomics; Function Intercalls. Previous topic; Evaluation of One-Electron Properties; Next topic; Notes on Options; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » . © Copyright 2012, The Psi4 Project.; Last updated on Nov 02, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/psithonfunc-1.html:249,perform,performed,249,psi4manual/4.0b3/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/psithonfunc-1.html,2,['perform'],['performed']
Performance,"﻿. Psithon Functions: Invoking a Calculation — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes. Spectroscopic Constants for Diatomics; Function Intercalls. Previous topic; Interface to Molden; Next topic; Notes on Options; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » . © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/psithonfunc-1.html:249,perform,performed,249,psi4manual/4.0b4/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/psithonfunc-1.html,2,['perform'],['performed']
Performance,"﻿. Psithon Functions: Invoking a Calculation — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls. Previous topic; Interface to Molden; Next topic; Notes on Options; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » . © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/psithonfunc-1.html:249,perform,performed,249,psi4manual/4.0b5/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/psithonfunc-1.html,2,['perform'],['performed']
Performance,"﻿. Psithon Functions: Invoking a Calculation — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, Psi4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the Psi4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent Psi4‘s functionality. Notes on Options; Single-Point Energy, energy(); Property; Counterpoise Correct; Geometry Optimization, optimize() and gradient(); Harmonic Vibrational Analysis, frequency() and hessian(); Database, database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; cubeprop() Generation of cube files; Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. Previous topic; Interface to MRCC by M. Kállay; Next topic; Notes on Options. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » . © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/psithonfunc-1.html:256,perform,performed,256,psi4manual/1.0.0/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/psithonfunc-1.html,4,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; nbody(); API. Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module; API. Database — database(); database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases; API. Spectroscopic Constants for Diatomics; anharmonicity(). Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/psithonfunc.html:258,perform,performed,258,psi4manual/master/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/master/psithonfunc.html,2,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/psithonfunc-1.html:206,perform,performed,206,psi4manual/1.1.0/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/psithonfunc-1.html,4,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/psithonfunc-1.html:208,perform,performed,208,psi4manual/1.2.1/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/psithonfunc-1.html,4,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/psithonfunc-1.html:208,perform,performed,208,psi4manual/1.3.2/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/psithonfunc-1.html,4,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/psithonfunc-1.html:249,perform,performed,249,psi4manual/1.4.0/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/psithonfunc-1.html,4,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/psithonfunc-1.html:249,perform,performed,249,psi4manual/1.5.0/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/psithonfunc-1.html,4,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/psithonfunc.html:249,perform,performed,249,psi4manual/1.6.x/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/psithonfunc.html,2,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; API. Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module; API. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases; API. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/psithonfunc.html:249,perform,performed,249,psi4manual/1.7.x/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/psithonfunc.html,2,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; nbody(); API. Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module; API. Database — database(); database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases; API. Spectroscopic Constants for Diatomics; anharmonicity(). Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/psithonfunc.html:251,perform,performed,251,psi4manual/1.8.x/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/psithonfunc.html,2,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; nbody(); API. Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module; API. Database — database(); database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases; API. Spectroscopic Constants for Diatomics; anharmonicity(). Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/psithonfunc.html:251,perform,performed,251,psi4manual/1.9.x/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/psithonfunc.html,2,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"﻿. Psithon: Structuring an Input File — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » . Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory, and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from the 3rd edition of the IUPAC Green; book [Cohen:GreenBook:2008]) are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that ~/.psi4rc values can be overridden by; the user).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files.; psi_h = 6.62606896E-34 # The Planck constant (Js) ; psi_c = 2.99792458E8 # Speed of light (ms$^{-1}$) ; psi_kb = 1.3806504E-23 # The Boltzmann constant (JK$^{-1}$) ; psi_R = 8.314472 # Universal gas constant (JK$^{-1}$mol$^{-1}$) ; psi_b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/psithoninput-1.html:220,perform,performed,220,psi4manual/4.0b2/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » . Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory, and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from the 3rd edition of the IUPAC Green; book [Cohen:GreenBook:2008]) are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that ~/.psi4rc values can be overridden by; the user).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files.; psi_h = 6.62606896E-34 # The Planck constant (Js) ; psi_c = 2.99792458E8 # Speed of light (ms$^{-1}$) ; psi_kb = 1.3806504E-23 # The Boltzmann constant (JK$^{-1}$) ; psi_R = 8.314472 # Universal gas constant (JK$^{-1}$mol$",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/psithoninput-1.html:235,perform,performed,235,psi4manual/4.0b3/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » . Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory, and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from the 3rd edition of the IUPAC Green; book [Cohen:GreenBook:2008]) are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that ~/.psi4rc values can be overridden by; the user).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files.; psi_h = 6.62606896E-34 # The Planck constant (Js) ; psi_c = 2.99792458E8 # Speed of light (ms$^{-1}$) ; psi_kb = 1.3806504E-23 # The Boltzmann constant (JK$^{-1}$) ; psi_R = 8.314472 # Universal gas constant (JK$^{-1}$mol$",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/psithoninput-1.html:235,perform,performed,235,psi4manual/4.0b4/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » . Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory, and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from the 3rd edition of the IUPAC Green; book [Cohen:GreenBook:2008]) are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that ~/.psi4rc values can be overridden by; the user).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files.; psi_h = 6.62606896E-34 # The Planck constant (Js) ; psi_c = 2.99792458E8 # Speed of light (ms$^{-1}$) ; psi_kb = 1.3806504E-23 # The Boltzmann constant (JK$^{-1}$) ; psi_R = 8.314472 # Universal gas constant (JK$^{-1}$mol$",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/psithoninput-1.html:235,perform,performed,235,psi4manual/4.0b5/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » . Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, Psi4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; Psi4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level Psi4 source directory, and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all Psi4 input files.; For convenience, the physical constants used within the Psi4 code (which; are obtained from the 3rd edition of the IUPAC Green; book [Cohen:GreenBook:2008]) are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within Psi4, which are automatically; made available within all Psi4 input files.; # @END LICENSE; #. # Do not modify this file! It is auto-generated by the document_options_and_tests; # script, from psi4topdir/include/physconst.h; psi_h = 6.62606896E",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/psithoninput-1.html:242,perform,performed,242,psi4manual/1.0.0/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon: Structuring an Input File. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples.; The equivalent Python PsiAPI syntax is shown alongside the Psithon code snippets.; When using the Python API, one must import the PSI4 module with:; import psi4. No such directive is neccesary when using Psithon, which is run using the psi4; executable. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from NIST CODATA 2014; are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made availa",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/psithoninput.html:237,perform,performed,237,psi4manual/master/psithoninput.html,https://psicode.org,https://psicode.org/psi4manual/master/psithoninput.html,2,['perform'],['performed']
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; 1UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from the 3rd edition of the IUPAC Green; book [Cohen:GreenBook:2008]) are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files. # Do not modify this file! It is auto-generated by the document_options_and_tests; # script, from psi4topdir/psi4/include/psi4/physconst.h; h = 6.62606896E-34 # The Planck constant (Js) ; c = 2.99792458E8 # Speed of lig",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/psithoninput-1.html:192,perform,performed,192,psi4manual/1.1.0/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; 1UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from the 3rd edition of the IUPAC Green; book [Cohen:GreenBook:2008]) are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files. # Do not modify this file! It is auto-generated by the document_options_and_tests; # script, from psi4topdir/psi4/include/psi4/physconst.h; h = 6.62606896E-34 # The Planck constant (Js) ; c = 2.99792458E8 # Speed of l",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/psithoninput-1.html:194,perform,performed,194,psi4manual/1.2.1/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; 1UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from NIST CODATA 2014; are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files are in Physical Constants.; In Psithon input files, prepend physical constants with psi_ to; prevent clashes with user-defined variables (e.g., psi_h). In; PsiAPI mode, access as, e.g., psi4.constants.h. Memory Specification¶; By default, PSI4 assumes that 500 MiB ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/psithoninput-1.html:194,perform,performed,194,psi4manual/1.3.2/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon: Structuring an Input File. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from NIST CODATA 2014; are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files are in Physical Constants.; In Psithon input files, prepend physical constants with psi_ to; prevent clashes with user-defined variables (e.g., psi_h). In; PsiAPI mode, access as, e.g., psi4.constants.h. Memory Specification¶; By de",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/psithoninput-1.html:228,perform,performed,228,psi4manual/1.4.0/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon: Structuring an Input File. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from NIST CODATA 2014; are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files are in Physical Constants.; In Psithon input files, prepend physical constants with psi_ to; prevent clashes with user-defined variables (e.g., psi_h). In; PsiAPI mode, access as, e.g., psi4.constants.h. Memory Specification¶; By de",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/psithoninput-1.html:228,perform,performed,228,psi4manual/1.5.0/psithoninput-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/psithoninput-1.html,6,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon: Structuring an Input File. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from NIST CODATA 2014; are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files are in Physical Constants.; In Psithon input files, prepend physical constants with psi_ to; prevent clashes with user-defined variables (e.g., psi_h). In; PsiAPI mode, access as, e.g., psi4.constants.h. Memory Specification¶; By de",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/psithoninput.html:228,perform,performed,228,psi4manual/1.6.x/psithoninput.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/psithoninput.html,3,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon: Structuring an Input File. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from NIST CODATA 2014; are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files are in Physical Constants.; In Psithon input files, prepend physical constants with psi_ to; prevent clashes with user-defined variables (e.g., psi_h). In; PsiAPI mode, access as, e.g., psi4.constants.h. Memory Specification¶; By de",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/psithoninput.html:228,perform,performed,228,psi4manual/1.7.x/psithoninput.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/psithoninput.html,3,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon: Structuring an Input File. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from NIST CODATA 2014; are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files are in Physical Constants.; In Psithon input files, prepend physical constants with psi_ to; prevent clashes with user-defined variables (e.g., psi_h). In; PsiAPI mode, access as, e.g., psi4.constants.h. Memory Specification¶; By ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/psithoninput.html:230,perform,performed,230,psi4manual/1.8.x/psithoninput.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/psithoninput.html,3,['perform'],"['performed', 'performing']"
Performance,"﻿. Psithon: Structuring an Input File. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon: Structuring an Input File. Psithon: Structuring an Input File¶; To allow arbitrarily complex computations to be performed, PSI4 was built; upon the Python interpreter. However, to make the input syntax simpler, some; pre-processing of the input file is performed before it is interpreted,; resulting in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; PSI4 is distributed with an extensive test suite, described in section; Test Suite and Sample Inputs; the input files for these test cases can be found in the; samples subdirectory of the top-level PSI4 source directory and should; serve as useful examples. Physical Constants¶; For convenience, the Python interpreter will execute the contents of the; ~/.psi4rc file in the current user’s home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the ~/.psi4rc file; UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable UGC available in all PSI4 input files.; For convenience, the physical constants used within the PSI4 code (which; are obtained from NIST CODATA 2014; are also automatically loaded as Psithon; variables (before ~/.psi4rc is loaded, so that the user’s ~/.psi4rc values can; override the builtins (in the input file, not in the C++ code).; The physical constants used within PSI4, which are automatically; made available within all PSI4 input files are in Physical Constants.; In Psithon input files, prepend physical constants with psi_ to; prevent clashes with user-defined variables (e.g., psi_h). In; PsiAPI mode, access as, e.g., psi4.constants.h. Memory Specification¶; By ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/psithoninput.html:230,perform,performed,230,psi4manual/1.9.x/psithoninput.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/psithoninput.html,3,['perform'],"['performed', 'performing']"
Performance,"﻿. Python Driver — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » . Python Driver¶. wrapper_database¶; Module with functions that call the four main driver; functions: driver.energy, driver.optimize,; driver.response, and driver.frequency. diatomic¶. pcm_placeholder¶; This is a placeholder for the real pcmsolver.py script.; The location of the real pcmsolver.py is configured by CMake; to point to the proper install prefix.; In this way we avoid to transform inputparser.py into a file; that has to be configured by CMake; With conda, this starts to get complicated. Bottom option; works for build-in-place and build-psi-w-prebuilt-pcmsolver.; Upper option necessary when psi4metapackage is conda build; dependency. At least I think that’s what’s going on. dependency_check¶; Attempts to catch Python based import errors and provides possible solutions. gaussian_n¶. run_gaussian_2(name, **kwargs)[source]¶. frac¶. frac_nuke(molecule, **kwargs)[source]¶. frac_traverse(molecule, **kwargs)[source]¶. ip_fitting(molecule, omega_l, omega_r, **kwargs)[source]¶. molutil¶; Module with utility functions that act on molecule objects. BFS(self)[source]¶; Perform a breadth-first search (BFS) on the real atoms; in molecule, returning an array of atom indices of fragments.; Relies upon van der Waals radii and so faulty for close; (esp. hydrogen-bonded) fragments. Original code from; Michael S. Marshall. activate(mol)[source]¶; Function to set molecule object mol as the current active molecule.; Permitted for user use but deprecated in driver in favor of explicit; molecule-passing. dynamic_variable_bind(cls)[source]¶; Function to dynamically add extra members to; the psi4.Molecule class. extract_cluster_indexing(mol, cluster_size=0)[source]¶; Function to returns a LIST of all subclusters of the molecule mol of; real size cluster_size. If cluster_size = 0, returns all possible; combinations of cluster size. extract_clusters(mo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_driver-1.html:258,optimiz,optimize,258,psi4manual/1.0.0/autodoc_driver-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_driver-1.html,2,['optimiz'],['optimize']
Performance,"﻿. QCHF — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. Previous topic; PPL_TYPE; Next topic; R_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__qchf-1.html:182,perform,perform,182,psi4manual/1.0.0/autodir_options_c/dfocc__qchf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__qchf-1.html,2,['perform'],['perform']
Performance,"﻿. QCHF — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. Previous topic; PROCESS_GRID; Next topic; R_POINTS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__qchf-1.html:180,perform,perform,180,psi4manual/1.0.0/autodir_options_c/scf__qchf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__qchf-1.html,2,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__qchf.html:141,perform,perform,141,psi4manual/master/autodir_options_c/dfocc__qchf.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__qchf.html,1,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__qchf.html:139,perform,perform,139,psi4manual/master/autodir_options_c/scf__qchf.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__qchf.html,1,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__qchf-1.html:132,perform,perform,132,psi4manual/1.4.0/autodir_options_c/dfocc__qchf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__qchf-1.html,2,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__qchf-1.html:130,perform,perform,130,psi4manual/1.4.0/autodir_options_c/scf__qchf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__qchf-1.html,2,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__qchf-1.html:132,perform,perform,132,psi4manual/1.5.0/autodir_options_c/dfocc__qchf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__qchf-1.html,2,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__qchf-1.html:130,perform,perform,130,psi4manual/1.5.0/autodir_options_c/scf__qchf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__qchf-1.html,2,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__qchf.html:132,perform,perform,132,psi4manual/1.6.x/autodir_options_c/dfocc__qchf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__qchf.html,1,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__qchf.html:130,perform,perform,130,psi4manual/1.6.x/autodir_options_c/scf__qchf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__qchf.html,1,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__qchf.html:132,perform,perform,132,psi4manual/1.7.x/autodir_options_c/dfocc__qchf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__qchf.html,1,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__qchf.html:130,perform,perform,130,psi4manual/1.7.x/autodir_options_c/scf__qchf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__qchf.html,1,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__qchf.html:134,perform,perform,134,psi4manual/1.8.x/autodir_options_c/dfocc__qchf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__qchf.html,1,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__qchf.html:132,perform,perform,132,psi4manual/1.8.x/autodir_options_c/scf__qchf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__qchf.html,1,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; QCHF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__qchf.html:134,perform,perform,134,psi4manual/1.9.x/autodir_options_c/dfocc__qchf.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__qchf.html,1,['perform'],['perform']
Performance,"﻿. QCHF. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; QCHF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__qchf.html:132,perform,perform,132,psi4manual/1.9.x/autodir_options_c/scf__qchf.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__qchf.html,1,['perform'],['perform']
Performance,"﻿. RELAX_GUESS_ORBITALS — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. Previous topic; R_CONVERGENCE; Next topic; RELAX_TAU; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__relax_guess_orbitals-1.html:289,perform,performing,289,psi4manual/4.0b3/autodir_options_c/dcft__relax_guess_orbitals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__relax_guess_orbitals-1.html,2,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. Previous topic; REFERENCE; Next topic; RELAX_TAU; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__relax_guess_orbitals-1.html:289,perform,performing,289,psi4manual/4.0b4/autodir_options_c/dcft__relax_guess_orbitals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__relax_guess_orbitals-1.html,2,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. Previous topic; REFERENCE; Next topic; RELAX_TAU; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__relax_guess_orbitals-1.html:289,perform,performing,289,psi4manual/4.0b5/autodir_options_c/dcft__relax_guess_orbitals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__relax_guess_orbitals-1.html,2,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. Previous topic; REFERENCE; Next topic; RELAX_TAU. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__relax_guess_orbitals-1.html:296,perform,performing,296,psi4manual/1.0.0/autodir_options_c/dcft__relax_guess_orbitals-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__relax_guess_orbitals-1.html,2,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dct__relax_guess_orbitals.html:270,perform,performing,270,psi4manual/master/autodir_options_c/dct__relax_guess_orbitals.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dct__relax_guess_orbitals.html,1,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__relax_guess_orbitals-1.html:261,perform,performing,261,psi4manual/1.4.0/autodir_options_c/dct__relax_guess_orbitals-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__relax_guess_orbitals-1.html,2,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__relax_guess_orbitals-1.html:261,perform,performing,261,psi4manual/1.5.0/autodir_options_c/dct__relax_guess_orbitals-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__relax_guess_orbitals-1.html,2,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__relax_guess_orbitals.html:261,perform,performing,261,psi4manual/1.6.x/autodir_options_c/dct__relax_guess_orbitals.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__relax_guess_orbitals.html,1,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__relax_guess_orbitals.html:261,perform,performing,261,psi4manual/1.7.x/autodir_options_c/dct__relax_guess_orbitals.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__relax_guess_orbitals.html,1,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__relax_guess_orbitals.html:263,perform,performing,263,psi4manual/1.8.x/autodir_options_c/dct__relax_guess_orbitals.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__relax_guess_orbitals.html,1,['perform'],['performing']
Performance,"﻿. RELAX_GUESS_ORBITALS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. RELAX_GUESS_ORBITALS¶. Controls whether to relax the guess orbitals by taking the guess density cumulant and performing orbital update on the first macroiteration (for ALOGRITHM = TWOSTEP only). Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; RELAX_GUESS_ORBITALS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__relax_guess_orbitals.html:263,perform,performing,263,psi4manual/1.9.x/autodir_options_c/dct__relax_guess_orbitals.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__relax_guess_orbitals.html,1,['perform'],['performing']
Performance,"﻿. RESTART — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCENERGY ». RESTART¶. Do restart the coupled-cluster iterations from old and amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. Previous topic; REFERENCE; Next topic; SCS_CCSD; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/ccenergy__restart-1.html:246,optimiz,optimizations,246,psi4manual/4.0b2/autodir_options_c/ccenergy__restart-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/ccenergy__restart-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. RESTART — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCENERGY ». RESTART¶. Do restart the coupled-cluster iterations from old and amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. Previous topic; REFERENCE; Next topic; SCS_CCSD; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccenergy__restart-1.html:261,optimiz,optimizations,261,psi4manual/4.0b3/autodir_options_c/ccenergy__restart-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccenergy__restart-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. RESTART — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». RESTART¶. Do restart the coupled-cluster iterations from old and amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. Previous topic; REFERENCE; Next topic; SCS_CCSD; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__restart-1.html:261,optimiz,optimizations,261,psi4manual/4.0b4/autodir_options_c/ccenergy__restart-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__restart-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. RESTART — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». RESTART¶. Do restart the coupled-cluster iterations from old and amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. Previous topic; REFERENCE; Next topic; ROOTS_PER_IRREP; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__restart-1.html:261,optimiz,optimizations,261,psi4manual/4.0b5/autodir_options_c/ccenergy__restart-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__restart-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. RESTART — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». RESTART¶. Do restart the coupled-cluster iterations from old and amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. Previous topic; REFERENCE; Next topic; SCS_CCSD. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__restart-1.html:268,optimiz,optimizations,268,psi4manual/1.0.0/autodir_options_c/ccenergy__restart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__restart-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. RESTART¶. Do restart the coupled-cluster iterations from old \(t_1\) and \(t_2\) amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/ccenergy__restart.html:246,optimiz,optimizations,246,psi4manual/master/autodir_options_c/ccenergy__restart.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/ccenergy__restart.html,1,['optimiz'],['optimizations']
Performance,"﻿. RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. RESTART¶. Do restart the coupled-cluster iterations from old \(t_1\) and \(t_2\) amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__restart-1.html:237,optimiz,optimizations,237,psi4manual/1.4.0/autodir_options_c/ccenergy__restart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__restart-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. RESTART¶. Do restart the coupled-cluster iterations from old \(t_1\) and \(t_2\) amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__restart-1.html:237,optimiz,optimizations,237,psi4manual/1.5.0/autodir_options_c/ccenergy__restart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__restart-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. RESTART¶. Do restart the coupled-cluster iterations from old \(t_1\) and \(t_2\) amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/ccenergy__restart.html:237,optimiz,optimizations,237,psi4manual/1.6.x/autodir_options_c/ccenergy__restart.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/ccenergy__restart.html,1,['optimiz'],['optimizations']
Performance,"﻿. RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. RESTART¶. Do restart the coupled-cluster iterations from old \(t_1\) and \(t_2\) amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/ccenergy__restart.html:237,optimiz,optimizations,237,psi4manual/1.7.x/autodir_options_c/ccenergy__restart.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/ccenergy__restart.html,1,['optimiz'],['optimizations']
Performance,"﻿. RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. RESTART¶. Do restart the coupled-cluster iterations from old \(t_1\) and \(t_2\) amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/ccenergy__restart.html:239,optimiz,optimizations,239,psi4manual/1.8.x/autodir_options_c/ccenergy__restart.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/ccenergy__restart.html,1,['optimiz'],['optimizations']
Performance,"﻿. RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. RESTART¶. Do restart the coupled-cluster iterations from old \(t_1\) and \(t_2\) amplitudes? For geometry optimizations, Brueckner calculations, etc. the iterative solution of the CC amplitude equations may benefit considerably by reusing old vectors as initial guesses. Assuming that the MO phases remain the same between updates, the CC codes will, by default, re-use old vectors, unless the user sets RESTART = false. Type: boolean; Default: true. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCENERGY; RESTART. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/ccenergy__restart.html:239,optimiz,optimizations,239,psi4manual/1.9.x/autodir_options_c/ccenergy__restart.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/ccenergy__restart.html,1,['optimiz'],['optimizations']
Performance,"﻿. RESTRICTED_DOCC — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTART; Next topic; RESTRICTED_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__restricted_docc-1.html:309,optimiz,optimized,309,psi4manual/4.0b2/autodir_options_c/detci__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; TRANSQT ». RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; REORDER; Next topic; RESTRICTED_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/transqt__restricted_docc-1.html:311,optimiz,optimized,311,psi4manual/4.0b2/autodir_options_c/transqt__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/transqt__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTART; Next topic; RESTRICTED_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__restricted_docc-1.html:324,optimiz,optimized,324,psi4manual/4.0b3/autodir_options_c/detci__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; TRANSQT ». RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; REORDER; Next topic; RESTRICTED_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/transqt__restricted_docc-1.html:326,optimiz,optimized,326,psi4manual/4.0b3/autodir_options_c/transqt__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/transqt__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTART; Next topic; RESTRICTED_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__restricted_docc-1.html:324,optimiz,optimized,324,psi4manual/4.0b4/autodir_options_c/detci__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; TRANSQT ». RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; REORDER; Next topic; RESTRICTED_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/transqt__restricted_docc-1.html:326,optimiz,optimized,326,psi4manual/4.0b4/autodir_options_c/transqt__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/transqt__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTART; Next topic; RESTRICTED_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__restricted_docc-1.html:324,optimiz,optimized,324,psi4manual/4.0b5/autodir_options_c/detci__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; TRANSQT ». RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; REORDER; Next topic; RESTRICTED_UOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/transqt__restricted_docc-1.html:326,optimiz,optimized,326,psi4manual/4.0b5/autodir_options_c/transqt__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/transqt__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RELATIVISTIC; Next topic; RESTRICTED_UOCC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__restricted_docc-1.html:333,optimiz,optimized,333,psi4manual/1.0.0/autodir_options_c/globals__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/globals__restricted_docc.html:303,optimiz,optimized,303,psi4manual/master/autodir_options_c/globals__restricted_docc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/globals__restricted_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__restricted_docc-1.html:294,optimiz,optimized,294,psi4manual/1.4.0/autodir_options_c/globals__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__restricted_docc-1.html:294,optimiz,optimized,294,psi4manual/1.5.0/autodir_options_c/globals__restricted_docc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__restricted_docc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__restricted_docc.html:294,optimiz,optimized,294,psi4manual/1.6.x/autodir_options_c/globals__restricted_docc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__restricted_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__restricted_docc.html:294,optimiz,optimized,294,psi4manual/1.7.x/autodir_options_c/globals__restricted_docc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__restricted_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__restricted_docc.html:296,optimiz,optimized,296,psi4manual/1.8.x/autodir_options_c/globals__restricted_docc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__restricted_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_DOCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. RESTRICTED_DOCC¶. An array giving the number of restricted doubly-occupied orbitals per irrep (not excited in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_DOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__restricted_docc.html:296,optimiz,optimized,296,psi4manual/1.9.x/autodir_options_c/globals__restricted_docc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__restricted_docc.html,1,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTRICTED_DOCC; Next topic; S; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__restricted_uocc-1.html:305,optimiz,optimized,305,psi4manual/4.0b2/autodir_options_c/detci__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; TRANSQT ». RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTRICTED_DOCC; Next topic; SO_S_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/transqt__restricted_uocc-1.html:307,optimiz,optimized,307,psi4manual/4.0b2/autodir_options_c/transqt__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/transqt__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTRICTED_DOCC; Next topic; S; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__restricted_uocc-1.html:320,optimiz,optimized,320,psi4manual/4.0b3/autodir_options_c/detci__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; TRANSQT ». RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTRICTED_DOCC; Next topic; SO_S_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/transqt__restricted_uocc-1.html:322,optimiz,optimized,322,psi4manual/4.0b3/autodir_options_c/transqt__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/transqt__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTRICTED_DOCC; Next topic; S; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__restricted_uocc-1.html:320,optimiz,optimized,320,psi4manual/4.0b4/autodir_options_c/detci__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; TRANSQT ». RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTRICTED_DOCC; Next topic; SO_S_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/transqt__restricted_uocc-1.html:322,optimiz,optimized,322,psi4manual/4.0b4/autodir_options_c/transqt__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/transqt__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTRICTED_DOCC; Next topic; S; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__restricted_uocc-1.html:320,optimiz,optimized,320,psi4manual/4.0b5/autodir_options_c/detci__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; TRANSQT ». RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTRICTED_DOCC; Next topic; SO_S_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/transqt__restricted_uocc-1.html:322,optimiz,optimized,322,psi4manual/4.0b5/autodir_options_c/transqt__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/transqt__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. Previous topic; RESTRICTED_DOCC; Next topic; SOCC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__restricted_uocc-1.html:329,optimiz,optimized,329,psi4manual/1.0.0/autodir_options_c/globals__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/globals__restricted_uocc.html:299,optimiz,optimized,299,psi4manual/master/autodir_options_c/globals__restricted_uocc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/globals__restricted_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__restricted_uocc-1.html:290,optimiz,optimized,290,psi4manual/1.4.0/autodir_options_c/globals__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__restricted_uocc-1.html:290,optimiz,optimized,290,psi4manual/1.5.0/autodir_options_c/globals__restricted_uocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__restricted_uocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__restricted_uocc.html:290,optimiz,optimized,290,psi4manual/1.6.x/autodir_options_c/globals__restricted_uocc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__restricted_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__restricted_uocc.html:290,optimiz,optimized,290,psi4manual/1.7.x/autodir_options_c/globals__restricted_uocc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__restricted_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__restricted_uocc.html:292,optimiz,optimized,292,psi4manual/1.8.x/autodir_options_c/globals__restricted_uocc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__restricted_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. RESTRICTED_UOCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. RESTRICTED_UOCC¶. An array giving the number of restricted unoccupied orbitals per irrep (not occupied in CI wavefunctions, but orbitals can be optimized in MCSCF). Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; RESTRICTED_UOCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__restricted_uocc.html:292,optimiz,optimized,292,psi4manual/1.9.x/autodir_options_c/globals__restricted_uocc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__restricted_uocc.html,1,['optimiz'],['optimized']
Performance,"﻿. RHF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; RHF. RHF¶. class psi4.core.RHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; docstring. iteration_; docstring. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the ‘Core’ Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self, arg0); Returns copy of the requested (case",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.rhf.html:262,perform,performed,262,psi4manual/1.4.0/api/psi4.core.rhf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.rhf.html,2,['perform'],['performed']
Performance,"﻿. RHF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; RHF. RHF¶. class psi4.core.RHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmetry O",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.rhf.html:262,perform,performed,262,psi4manual/1.5.0/api/psi4.core.rhf.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.rhf.html,2,['perform'],['performed']
Performance,"﻿. RHF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; RHF. RHF¶. class psi4.core.RHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmetry O",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.RHF.html:262,perform,performed,262,psi4manual/1.6.x/api/psi4.core.RHF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.RHF.html,2,['perform'],['performed']
Performance,"﻿. ROHF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; ROHF. ROHF¶. class psi4.core.ROHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; docstring. iteration_; docstring. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the ‘Core’ Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self, arg0); Returns copy of the requested (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.rohf.html:266,perform,performed,266,psi4manual/1.4.0/api/psi4.core.rohf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.rohf.html,2,['perform'],['performed']
Performance,"﻿. ROHF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; ROHF. ROHF¶. class psi4.core.ROHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Ct(self); MO coefficients in the orthogonalized MO basis. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.rohf.html:266,perform,performed,266,psi4manual/1.5.0/api/psi4.core.rohf.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.rohf.html,2,['perform'],['performed']
Performance,"﻿. ROHF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; ROHF. ROHF¶. class psi4.core.ROHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Ct(self); MO coefficients in the orthogonalized MO basis. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.ROHF.html:266,perform,performed,266,psi4manual/1.6.x/api/psi4.core.ROHF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.ROHF.html,2,['perform'],['performed']
Performance,"﻿. SAPT_OS_SCALE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SAPT ». SAPT_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 6.0/5.0. Previous topic; SAPT_MEM_SAFETY; Next topic; SAPT_SS_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/sapt__sapt_os_scale-1.html:261,perform,performed,261,psi4manual/4.0b2/autodir_options_c/sapt__sapt_os_scale-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/sapt__sapt_os_scale-1.html,2,['perform'],['performed']
Performance,"﻿. SAPT_OS_SCALE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SAPT ». SAPT_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 6.0/5.0. Previous topic; SAPT_MEM_SAFETY; Next topic; SAPT_SS_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/sapt__sapt_os_scale-1.html:276,perform,performed,276,psi4manual/4.0b3/autodir_options_c/sapt__sapt_os_scale-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/sapt__sapt_os_scale-1.html,2,['perform'],['performed']
Performance,"﻿. SAPT_OS_SCALE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SAPT ». SAPT_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 6.0/5.0. Previous topic; SAPT_MEM_SAFETY; Next topic; SAPT_SS_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/sapt__sapt_os_scale-1.html:276,perform,performed,276,psi4manual/4.0b4/autodir_options_c/sapt__sapt_os_scale-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/sapt__sapt_os_scale-1.html,2,['perform'],['performed']
Performance,"﻿. SAPT_OS_SCALE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SAPT ». SAPT_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 6.0/5.0. Previous topic; SAPT_MEM_SAFETY; Next topic; SAPT_SS_SCALE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/sapt__sapt_os_scale-1.html:276,perform,performed,276,psi4manual/4.0b5/autodir_options_c/sapt__sapt_os_scale-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/sapt__sapt_os_scale-1.html,2,['perform'],['performed']
Performance,"﻿. SAPT_SS_SCALE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SAPT ». SAPT_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 1.0/3.0. Previous topic; SAPT_OS_SCALE; Next topic; SCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/sapt__sapt_ss_scale-1.html:257,perform,performed,257,psi4manual/4.0b2/autodir_options_c/sapt__sapt_ss_scale-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/sapt__sapt_ss_scale-1.html,2,['perform'],['performed']
Performance,"﻿. SAPT_SS_SCALE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SAPT ». SAPT_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 1.0/3.0. Previous topic; SAPT_OS_SCALE; Next topic; SCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/sapt__sapt_ss_scale-1.html:272,perform,performed,272,psi4manual/4.0b3/autodir_options_c/sapt__sapt_ss_scale-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/sapt__sapt_ss_scale-1.html,2,['perform'],['performed']
Performance,"﻿. SAPT_SS_SCALE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SAPT ». SAPT_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 1.0/3.0. Previous topic; SAPT_OS_SCALE; Next topic; SCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/sapt__sapt_ss_scale-1.html:272,perform,performed,272,psi4manual/4.0b4/autodir_options_c/sapt__sapt_ss_scale-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/sapt__sapt_ss_scale-1.html,2,['perform'],['performed']
Performance,"﻿. SAPT_SS_SCALE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SAPT ». SAPT_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 1.0/3.0. Previous topic; SAPT_OS_SCALE; Next topic; SCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/sapt__sapt_ss_scale-1.html:272,perform,performed,272,psi4manual/4.0b5/autodir_options_c/sapt__sapt_ss_scale-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/sapt__sapt_ss_scale-1.html,2,['perform'],['performed']
Performance,"﻿. SCF — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Use DF integrals tech to converge the SCF before switching to a conventional tech. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to CORE except for geometry optimizations, in which case READ becomes the default after the first geometry step. Type: string; Possible Values: CORE, GWH, SAD, READ; Default: CORE. INTS_TOLERANCE¶. Minimum absolute value below which TEI are neglected. Type: conv double; Default: 0.0. MOLDEN_WRITE¶. Do write a MOLDEN output file? If so, the filename will end in .molden, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. PRINT_BASIS¶. Flag to print the basis set. Type: boolean; Default: false. PRINT_MOS¶. Flag to print the molecular orbitals. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF, UHF, CUHF, RKS, UKS; Default: RHF. SAVE_JK¶. Keep JK object for later use?. Type: boolean; Default: false. SCF_MEM_SAFETY_FACTOR¶. Memory safety factor for allocating JK. Type: double; Default: 0.75. SCF_TYPE¶. What algorithm to use for the SCF computation. See Table SCF Convergence & Algorithm for default algorithm for different calculation types. Type: string; Possible Values: DIRECT, DF, PK, OUT_OF_CORE; Default: ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__scf-1.html:830,optimiz,optimizations,830,psi4manual/4.0b4/autodir_options_c/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__scf-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. SCF — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCE¶. Tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1e-4. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Use DF integrals tech to converge the SCF before switching to a conventional tech. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to CORE except for geometry optimizations, in which case READ becomes the default after the first geometry step. Type: string; Possible Values: CORE, GWH, SAD, READ; Default: CORE. INTS_TOLERANCE¶. Minimum absolute value below which TEI are neglected. Type: conv double; Default: 0.0. MOLDEN_WRITE¶. Do write a MOLDEN output file? If so, the filename will end in .molden, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. PRINT_BASIS¶. Flag to print the basis set. Type: boolean; Default: false. PRINT_MOS¶. Flag to print the molecular orbitals. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, ROHF, UHF, CUHF, RKS, UKS; Default: RHF. SAVE_JK¶. Keep JK object for later use?. Type: boolean; Default: false. SCF_MEM_SAFETY_FACTOR¶. Memory safety factor for allocating JK. Type: double; Default: 0.75. SCF_TYPE¶. What algorithm to use for the SCF computation. See Table SCF Convergence & Algorithm for default a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__scf-1.html:941,optimiz,optimizations,941,psi4manual/4.0b5/autodir_options_c/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__scf-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. SCF — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCE¶. Tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1e-4. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Use DF integrals tech to converge the SCF before switching to a conventional tech in a SCF_TYPE DIRECT calculation. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to SAD for RHF, GWH for ROHF and UHF, and READ for geometry optimizations after the first step. Type: string; Possible Values: AUTO, CORE, GWH, SAD, READ; Default: AUTO. GUESS_MIX¶. Mix the HOMO/LUMO in UHF or UKS to break alpha/beta spatial symmetry. Useful to produce broken-symmetry unrestricted solutions. Notice that this procedure is defined only for calculations in C1 symmetry. Type: boolean; Default: false. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. INDEPENDENT_J_TYPE¶. JK Independent options. Type: string; Possible Values: DIRECT_SCREENING; Default: DIRECT_SCREENING. INTS_TOLERANCE¶. Minimum absolute value below which TEI are neglected. Type: conv double; Default: 0.0. MAX_MEM_BUF¶. Max memory per buf for PK algo REORDER, for debug and tuning. Type: integer; Default: 0. MOLDEN_WRITE¶. Do write a MOLDEN output file? If so, the filename will end in .molden, and the prefix is determined by WRITER_FILE_LABEL (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__scf-1.html:1013,optimiz,optimizations,1013,psi4manual/1.0.0/autodir_options_c/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__scf-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. SCF. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCE¶. Tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1e-4. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Use DF integrals tech to converge the SCF before switching to a conventional tech in a SCF_TYPE DIRECT calculation. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to SAD for RHF, GWH for ROHF and UHF, and READ for geometry optimizations after the first step. Type: string; Possible Values: AUTO, CORE, GWH, SAD, READ; Default: AUTO. GUESS_MIX¶. Mix the HOMO/LUMO in UHF or UKS to break alpha/beta spatial symmetry. Useful to produce broken-symmetry unrestricted solutions. Notice that this procedure is defined only for calculations in C1 symmetry. Type: boolean; Default: false. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. INDEPENDENT_J_TYPE¶. JK Independent options. Type: string; Possible Values: DIRECT_SCREENING; Default: DIRECT_SCREENING. INTS_TOLERANCE¶. Minimum absolute value below which TEI are neglected. Type: conv double; Default: 0.0. MAX_MEM_BUF¶. Max memory per buf for PK algo REORDER, for debug and tuning. Type: integer; Default: 0. MOLDEN_WRITE¶. Do write a MOLDEN output file? If so, the filename will end in .molden, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus t",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__scf-1.html:959,optimiz,optimizations,959,psi4manual/1.1.0/autodir_options_c/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__scf-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. SCF. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCE¶. Tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1e-4. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Use DF integrals tech to converge the SCF before switching to a conventional tech in a SCF_TYPE DIRECT calculation. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to SAD for RHF, GWH for ROHF and UHF, and READ for geometry optimizations after the first step. Type: string; Possible Values: AUTO, CORE, GWH, SAD, READ; Default: AUTO. GUESS_MIX¶. Mix the HOMO/LUMO in UHF or UKS to break alpha/beta spatial symmetry. Useful to produce broken-symmetry unrestricted solutions. Notice that this procedure is defined only for calculations in C1 symmetry. Type: boolean; Default: false. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. INTS_TOLERANCE¶. Minimum absolute value below which TEI are neglected. Type: conv double; Default: 0.0. MAX_MEM_BUF¶. Max memory per buf for PK algo REORDER, for debug and tuning. Type: integer; Default: 0. MOLDEN_WRITE¶. Do write a MOLDEN output file? If so, the filename will end in .molden, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. PRINT_BASIS¶. Flag to print the basis set. Type: boolea",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__scf-1.html:961,optimiz,optimizations,961,psi4manual/1.2.1/autodir_options_c/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__scf-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. SCF. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCE¶. Tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1e-4. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Do a density fitting SCF calculation to converge the orbitals before switching to the use of exact integrals in a SCF_TYPE DIRECT calculation. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to READ for geometry optimizations after the first step, to CORE for single atoms, and to SAD otherwise. The HUCKEL guess employs on-the-fly calculations like SAD, as described in doi:10.1021/acs.jctc.8b01089. Type: string; Possible Values: AUTO, CORE, GWH, SAD, HUCKEL, READ; Default: AUTO. GUESS_MIX¶. Mix the HOMO/LUMO in UHF or UKS to break alpha/beta spatial symmetry. Useful to produce broken-symmetry unrestricted solutions. Notice that this procedure is defined only for calculations in C1 symmetry. Type: boolean; Default: false. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 0.0. MAX_MEM_BUF¶. Max memory per buf for PK algo REORDER, for debug and tuning. Type: integer; Default: 0. MOLDEN_WRITE¶. Do write a MOLDEN output file? If so, the filename will end in .molden, and the prefix is determined by WRITER_FILE_LA",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__scf-1.html:949,optimiz,optimizations,949,psi4manual/1.3.2/autodir_options_c/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__scf-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. SCF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF. SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCE¶. Tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1e-4. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Do a density fitting SCF calculation to converge the orbitals before switching to the use of exact integrals in a SCF_TYPE DIRECT calculation. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to READ for geometry optimizations after the first step, to CORE for single atoms, and to SAD otherwise. The HUCKEL guess employs on-the-fly calculations like SAD, as described in doi:10.1021/acs.jctc.8b01089 which also describes the SAP guess. Type: string; Possible Values: AUTO, CORE, GWH, SAD, SADNO, SAP, HUCKEL, READ; Default: AUTO. GUESS_MIX¶. Mix the HOMO/LUMO in UHF or UKS to break alpha/beta spatial symmetry. Useful to produce broken-symmetry unrestricted solutions. Notice that this procedure is defined only for calculations in C1 symmetry. Type: boolean; Default: false. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 1e-12. MAX_MEM_BUF¶. Max memory per buf for PK algo REORDER, for debug and tuning. Type: integer; Default: 0. MOLDEN_WRITE¶. Do write a MOLDEN output file? If so, the filename will end in .mo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__scf-1.html:952,optimiz,optimizations,952,psi4manual/1.4.0/autodir_options_c/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__scf-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. SCF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF. SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCE¶. Tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1e-4. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Do a density fitting SCF calculation to converge the orbitals before switching to the use of exact integrals in a SCF_TYPE DIRECT calculation. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to READ for geometry optimizations after the first step, to CORE for single atoms, and to SAD otherwise. The HUCKEL guess employs on-the-fly calculations like SAD, as described in doi:10.1021/acs.jctc.8b01089 which also describes the SAP guess. Type: string; Possible Values: AUTO, CORE, GWH, SAD, SADNO, SAP, HUCKEL, READ; Default: AUTO. GUESS_MIX¶. Mix the HOMO/LUMO in UHF or UKS to break alpha/beta spatial symmetry. Useful to produce broken-symmetry unrestricted solutions. Notice that this procedure is defined only for calculations in C1 symmetry. Type: boolean; Default: false. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. INTS_TOLERANCE¶. Screening threshold for the chosen screening method (SCHWARZ, CSAM, DENSITY) Absolute value below which TEI are neglected. Type: conv double; Default: 1e-12. MAX_MEM_BUF¶. Max memory per buf for PK algo REORDER, for debug and tuning. Type: integer; Default: 0. MOLDEN_WRITE¶. Do write a MOLDEN output f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__scf-1.html:952,optimiz,optimizations,952,psi4manual/1.5.0/autodir_options_c/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__scf-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. SCF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF. SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCE¶. Tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1e-4. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Do a density fitting SCF calculation to converge the orbitals before switching to the use of exact integrals in a SCF_TYPE DIRECT calculation. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to READ for geometry optimizations after the first step, to CORE for single atoms, and to SAD otherwise. The HUCKEL guess employs on-the-fly calculations like SAD, as described in doi:10.1021/acs.jctc.8b01089 which also describes the SAP guess. Type: string; Possible Values: AUTO, CORE, GWH, SAD, SADNO, SAP, HUCKEL, READ; Default: AUTO. GUESS_MIX¶. Mix the HOMO/LUMO in UHF or UKS to break alpha/beta spatial symmetry. Useful to produce broken-symmetry unrestricted solutions. Notice that this procedure is defined only for calculations in C1 symmetry. Type: boolean; Default: false. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. INTS_TOLERANCE¶. Screening threshold for the chosen screening method (SCHWARZ, CSAM, DENSITY) Absolute value below which TEI are neglected. Type: conv double; Default: 1e-12. MAX_MEM_BUF¶. Max memory per buf for PK algo REORDER, for debug and tuning. Type: integer; Default: 0. MOLDEN_WRITE¶. Do write a MOLDEN output f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__scf.html:952,optimiz,optimizations,952,psi4manual/1.6.x/autodir_options_c/module__scf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__scf.html,1,['optimiz'],['optimizations']
Performance,"﻿. SCF. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF. SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. General Wavefunction Info¶. BASIS¶. Primary basis set. Type: string; Possible Values: basis string; Default: No Default. CHOLESKY_TOLERANCE¶. Tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1e-4. DF_BASIS_SCF¶. Auxiliary basis set for SCF density fitting computations. Defaults to a JKFIT basis. Type: string; Possible Values: basis string; Default: No Default. DF_SCF_GUESS¶. Do a density fitting SCF calculation to converge the orbitals before switching to the use of exact integrals in a SCF_TYPE DIRECT calculation. Type: boolean; Default: true. GUESS¶. The type of guess orbitals. Defaults to READ for geometry optimizations after the first step, to CORE for single atoms, and to SAD otherwise. The HUCKEL guess employs on-the-fly calculations like SAD, as described in doi:10.1021/acs.jctc.8b01089 which also describes the SAP guess. Type: string; Possible Values: AUTO, CORE, GWH, SAD, SADNO, SAP, HUCKEL, READ; Default: AUTO. GUESS_MIX¶. Mix the HOMO/LUMO in UHF or UKS to break alpha/beta spatial symmetry. Useful to produce broken-symmetry unrestricted solutions. Notice that this procedure is defined only for calculations in C1 symmetry. Type: boolean; Default: false. GUESS_PERSIST¶. If true, then repeat the specified guess procedure for the orbitals every time - even during a geometry optimization. Type: boolean; Default: false. INTS_TOLERANCE¶. Screening threshold for the chosen screening method (SCHWARZ, CSAM, DENSITY) Absolute value below which TEI are neglected. Type: conv double; Default: 1e-12. MAX_MEM_BUF¶. Max memory per buf for PK algo REORDER, for debug and tuning. Type: integer; Default: 0. MOLDEN_WRITE¶. Do write a MOLDEN output f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__scf.html:952,optimiz,optimizations,952,psi4manual/1.7.x/autodir_options_c/module__scf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__scf.html,1,['optimiz'],['optimizations']
Performance,"﻿. SCS — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MP2 ». SCS¶. Do perform a spin component scaled MP2 computation?. Type: boolean; Default: false. Previous topic; REFERENCE; Next topic; SCS_N; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MP2 ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mp2__scs-1.html:156,perform,perform,156,psi4manual/4.0b2/autodir_options_c/mp2__scs-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mp2__scs-1.html,2,['perform'],['perform']
Performance,"﻿. SCS — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MP2 ». SCS¶. Do perform a spin component scaled MP2 computation?. Type: boolean; Default: false. Previous topic; REFERENCE; Next topic; SCS_N; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mp2__scs-1.html:171,perform,perform,171,psi4manual/4.0b3/autodir_options_c/mp2__scs-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mp2__scs-1.html,2,['perform'],['perform']
Performance,"﻿. SCS — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CPHF ». SCS¶. Do perform a spin component scaled MP2 computation?. Type: boolean; Default: false. Previous topic; SCHWARZ_CUTOFF; Next topic; SCS_N; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CPHF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cphf__scs-1.html:172,perform,perform,172,psi4manual/4.0b5/autodir_options_c/cphf__scs-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cphf__scs-1.html,2,['perform'],['perform']
Performance,"﻿. SCSN_MP2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCENERGY ». SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. Previous topic; SCS_MP2; Next topic; SEMICANONICAL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccenergy__scsn_mp2-1.html:210,optimiz,optimized,210,psi4manual/4.0b3/autodir_options_c/ccenergy__scsn_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccenergy__scsn_mp2-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2 — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. Previous topic; SCS_MP2; Next topic; SEMICANONICAL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__scsn_mp2-1.html:210,optimiz,optimized,210,psi4manual/4.0b4/autodir_options_c/ccenergy__scsn_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__scsn_mp2-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2 — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. Previous topic; SCS_N; Next topic; SEMICANONICAL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__scsn_mp2-1.html:210,optimiz,optimized,210,psi4manual/4.0b5/autodir_options_c/ccenergy__scsn_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__scsn_mp2-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. Previous topic; SCS_MP2; Next topic; SEMICANONICAL. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__scsn_mp2-1.html:217,optimiz,optimized,217,psi4manual/1.0.0/autodir_options_c/ccenergy__scsn_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__scsn_mp2-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/ccenergy__scsn_mp2.html:180,optimiz,optimized,180,psi4manual/master/autodir_options_c/ccenergy__scsn_mp2.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/ccenergy__scsn_mp2.html,1,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__scsn_mp2-1.html:171,optimiz,optimized,171,psi4manual/1.4.0/autodir_options_c/ccenergy__scsn_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__scsn_mp2-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__scsn_mp2-1.html:171,optimiz,optimized,171,psi4manual/1.5.0/autodir_options_c/ccenergy__scsn_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__scsn_mp2-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/ccenergy__scsn_mp2.html:171,optimiz,optimized,171,psi4manual/1.6.x/autodir_options_c/ccenergy__scsn_mp2.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/ccenergy__scsn_mp2.html,1,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/ccenergy__scsn_mp2.html:171,optimiz,optimized,171,psi4manual/1.7.x/autodir_options_c/ccenergy__scsn_mp2.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/ccenergy__scsn_mp2.html,1,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/ccenergy__scsn_mp2.html:173,optimiz,optimized,173,psi4manual/1.8.x/autodir_options_c/ccenergy__scsn_mp2.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/ccenergy__scsn_mp2.html,1,['optimiz'],['optimized']
Performance,"﻿. SCSN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. SCSN_MP2¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SCSN_MP2. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/ccenergy__scsn_mp2.html:173,optimiz,optimized,173,psi4manual/1.9.x/autodir_options_c/ccenergy__scsn_mp2.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/ccenergy__scsn_mp2.html,1,['optimiz'],['optimized']
Performance,"﻿. SCS_CEPA — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CEPA ». SCS_CEPA¶. Perform SCS-CEPA? If true, note that the default values for the spin component scaling factors are optimized for the CCSD method. Type: boolean; Default: false. Previous topic; R_CONVERGENCE; Next topic; CIS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CEPA ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cepa__scs_cepa-1.html:278,optimiz,optimized,278,psi4manual/4.0b3/autodir_options_c/cepa__scs_cepa-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cepa__scs_cepa-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCS_N — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MP2 ». SCS_N¶. Do perform a spin component scaled (N) MP2 computation?. Type: boolean; Default: false. Previous topic; SCS; Next topic; WFN; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MP2 ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mp2__scs_n-1.html:160,perform,perform,160,psi4manual/4.0b2/autodir_options_c/mp2__scs_n-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mp2__scs_n-1.html,2,['perform'],['perform']
Performance,"﻿. SCS_N — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; LMP2 ». SCS_N¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. Previous topic; SCS; Next topic; WFN; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; LMP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/lmp2__scs_n-1.html:200,optimiz,optimized,200,psi4manual/4.0b3/autodir_options_c/lmp2__scs_n-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/lmp2__scs_n-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCS_N — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MP2 ». SCS_N¶. Do perform a spin component scaled (N) MP2 computation?. Type: boolean; Default: false. Previous topic; SCS; Next topic; WFN; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mp2__scs_n-1.html:175,perform,perform,175,psi4manual/4.0b3/autodir_options_c/mp2__scs_n-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mp2__scs_n-1.html,2,['perform'],['perform']
Performance,"﻿. SCS_N — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; LMP2 ». SCS_N¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. Previous topic; SCS; Next topic; WFN; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; LMP2 ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/lmp2__scs_n-1.html:200,optimiz,optimized,200,psi4manual/4.0b4/autodir_options_c/lmp2__scs_n-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/lmp2__scs_n-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCS_N — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». SCS_N¶. Do SCS-MP2 with parameters optimized for nucleic acids?. Type: boolean; Default: false. Previous topic; SCS_MP2; Next topic; SCSN_MP2; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__scs_n-1.html:204,optimiz,optimized,204,psi4manual/4.0b5/autodir_options_c/ccenergy__scs_n-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__scs_n-1.html,2,['optimiz'],['optimized']
Performance,"﻿. SCS_N — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CPHF ». SCS_N¶. Do perform a spin component scaled (N) MP2 computation?. Type: boolean; Default: false. Previous topic; SCS; Next topic; SOLVER_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CPHF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cphf__scs_n-1.html:176,perform,perform,176,psi4manual/4.0b5/autodir_options_c/cphf__scs_n-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cphf__scs_n-1.html,2,['perform'],['perform']
Performance,"﻿. SOSCF_MAX_ITER — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». SOSCF_MAX_ITER¶. Maximum number of second-order microiterations to perform. Type: integer; Default: 5. Previous topic; SOSCF_CONV; Next topic; SOSCF_MIN_ITER. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__soscf_max_iter-1.html:247,perform,perform,247,psi4manual/1.0.0/autodir_options_c/scf__soscf_max_iter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__soscf_max_iter-1.html,2,['perform'],['perform']
Performance,"﻿. SOSCF_MAX_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. SOSCF_MAX_ITER¶. Maximum number of second-order microiterations to perform. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__soscf_max_iter.html:216,perform,perform,216,psi4manual/master/autodir_options_c/scf__soscf_max_iter.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__soscf_max_iter.html,1,['perform'],['perform']
Performance,"﻿. SOSCF_MAX_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. SOSCF_MAX_ITER¶. Maximum number of second-order microiterations to perform. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__soscf_max_iter-1.html:207,perform,perform,207,psi4manual/1.4.0/autodir_options_c/scf__soscf_max_iter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__soscf_max_iter-1.html,2,['perform'],['perform']
Performance,"﻿. SOSCF_MAX_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. SOSCF_MAX_ITER¶. Maximum number of second-order microiterations to perform. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__soscf_max_iter-1.html:207,perform,perform,207,psi4manual/1.5.0/autodir_options_c/scf__soscf_max_iter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__soscf_max_iter-1.html,2,['perform'],['perform']
Performance,"﻿. SOSCF_MAX_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. SOSCF_MAX_ITER¶. Maximum number of second-order microiterations to perform. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__soscf_max_iter.html:207,perform,perform,207,psi4manual/1.6.x/autodir_options_c/scf__soscf_max_iter.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__soscf_max_iter.html,1,['perform'],['perform']
Performance,"﻿. SOSCF_MAX_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. SOSCF_MAX_ITER¶. Maximum number of second-order microiterations to perform. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__soscf_max_iter.html:207,perform,perform,207,psi4manual/1.7.x/autodir_options_c/scf__soscf_max_iter.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__soscf_max_iter.html,1,['perform'],['perform']
Performance,"﻿. SOSCF_MAX_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. SOSCF_MAX_ITER¶. Maximum number of second-order microiterations to perform. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__soscf_max_iter.html:209,perform,perform,209,psi4manual/1.8.x/autodir_options_c/scf__soscf_max_iter.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__soscf_max_iter.html,1,['perform'],['perform']
Performance,"﻿. SOSCF_MAX_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. SOSCF_MAX_ITER¶. Maximum number of second-order microiterations to perform. Type: integer; Default: 5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MAX_ITER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__soscf_max_iter.html:209,perform,perform,209,psi4manual/1.9.x/autodir_options_c/scf__soscf_max_iter.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__soscf_max_iter.html,1,['perform'],['perform']
Performance,"﻿. SOSCF_MIN_ITER — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». SOSCF_MIN_ITER¶. Minimum number of second-order microiterations to perform. Type: integer; Default: 1. Previous topic; SOSCF_MAX_ITER; Next topic; SOSCF_PRINT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__soscf_min_iter-1.html:247,perform,perform,247,psi4manual/1.0.0/autodir_options_c/scf__soscf_min_iter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__soscf_min_iter-1.html,2,['perform'],['perform']
Performance,"﻿. SOSCF_MIN_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. SOSCF_MIN_ITER¶. Minimum number of second-order microiterations to perform. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__soscf_min_iter.html:216,perform,perform,216,psi4manual/master/autodir_options_c/scf__soscf_min_iter.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__soscf_min_iter.html,1,['perform'],['perform']
Performance,"﻿. SOSCF_MIN_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. SOSCF_MIN_ITER¶. Minimum number of second-order microiterations to perform. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__soscf_min_iter-1.html:207,perform,perform,207,psi4manual/1.4.0/autodir_options_c/scf__soscf_min_iter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__soscf_min_iter-1.html,2,['perform'],['perform']
Performance,"﻿. SOSCF_MIN_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. SOSCF_MIN_ITER¶. Minimum number of second-order microiterations to perform. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__soscf_min_iter-1.html:207,perform,perform,207,psi4manual/1.5.0/autodir_options_c/scf__soscf_min_iter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__soscf_min_iter-1.html,2,['perform'],['perform']
Performance,"﻿. SOSCF_MIN_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. SOSCF_MIN_ITER¶. Minimum number of second-order microiterations to perform. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__soscf_min_iter.html:207,perform,perform,207,psi4manual/1.6.x/autodir_options_c/scf__soscf_min_iter.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__soscf_min_iter.html,1,['perform'],['perform']
Performance,"﻿. SOSCF_MIN_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. SOSCF_MIN_ITER¶. Minimum number of second-order microiterations to perform. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__soscf_min_iter.html:207,perform,perform,207,psi4manual/1.7.x/autodir_options_c/scf__soscf_min_iter.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__soscf_min_iter.html,1,['perform'],['perform']
Performance,"﻿. SOSCF_MIN_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. SOSCF_MIN_ITER¶. Minimum number of second-order microiterations to perform. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__soscf_min_iter.html:209,perform,perform,209,psi4manual/1.8.x/autodir_options_c/scf__soscf_min_iter.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__soscf_min_iter.html,1,['perform'],['perform']
Performance,"﻿. SOSCF_MIN_ITER. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. SOSCF_MIN_ITER¶. Minimum number of second-order microiterations to perform. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; SOSCF_MIN_ITER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__soscf_min_iter.html:209,perform,perform,209,psi4manual/1.9.x/autodir_options_c/scf__soscf_min_iter.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__soscf_min_iter.html,1,['perform'],['perform']
Performance,"﻿. SOS_SCALE2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. Previous topic; SOS_SCALE; Next topic; SOS_TYPE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__sos_scale2-1.html:221,optimiz,optimized-,221,psi4manual/4.0b3/autodir_options_c/omp2__sos_scale2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__sos_scale2-1.html,2,['optimiz'],['optimized-']
Performance,"﻿. SOS_SCALE2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». SOS_SCALE2¶. Spin-opposite scaling (SOS) value for optimized-MP2 orbitals. Type: double; Default: 1.2. Previous topic; SOS_SCALE; Next topic; SOS_TYPE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__sos_scale2-1.html:221,optimiz,optimized-,221,psi4manual/4.0b3/autodir_options_c/omp3__sos_scale2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__sos_scale2-1.html,2,['optimiz'],['optimized-']
Performance,"﻿. STABILITY_ANALYSIS — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SCF ». STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attemp to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. Previous topic; SCF_TYPE; Next topic; THETA_POINTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/scf__stability_analysis-1.html:209,perform,perform,209,psi4manual/4.0b3/autodir_options_c/scf__stability_analysis-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/scf__stability_analysis-1.html,6,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attemp to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. Previous topic; SCF_TYPE; Next topic; THETA_POINTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__stability_analysis-1.html:209,perform,perform,209,psi4manual/4.0b4/autodir_options_c/scf__stability_analysis-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__stability_analysis-1.html,6,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attemp to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. Previous topic; SCF_TYPE; Next topic; THETA_POINTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__stability_analysis-1.html:209,perform,perform,209,psi4manual/4.0b5/autodir_options_c/scf__stability_analysis-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__stability_analysis-1.html,6,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attemp to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. Previous topic; SOSCF_R_START; Next topic; THETA_POINTS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__stability_analysis-1.html:216,perform,perform,216,psi4manual/1.0.0/autodir_options_c/scf__stability_analysis-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__stability_analysis-1.html,6,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attempt to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__stability_analysis.html:189,perform,perform,189,psi4manual/master/autodir_options_c/scf__stability_analysis.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__stability_analysis.html,3,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attempt to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__stability_analysis-1.html:180,perform,perform,180,psi4manual/1.4.0/autodir_options_c/scf__stability_analysis-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__stability_analysis-1.html,6,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attempt to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__stability_analysis-1.html:180,perform,perform,180,psi4manual/1.5.0/autodir_options_c/scf__stability_analysis-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__stability_analysis-1.html,6,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attempt to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__stability_analysis.html:180,perform,perform,180,psi4manual/1.6.x/autodir_options_c/scf__stability_analysis.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__stability_analysis.html,3,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attempt to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__stability_analysis.html:180,perform,perform,180,psi4manual/1.7.x/autodir_options_c/scf__stability_analysis.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__stability_analysis.html,3,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attempt to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__stability_analysis.html:182,perform,perform,182,psi4manual/1.8.x/autodir_options_c/scf__stability_analysis.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__stability_analysis.html,3,['perform'],"['perform', 'performed']"
Performance,"﻿. STABILITY_ANALYSIS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. STABILITY_ANALYSIS¶. Whether to perform stability analysis after convergence. NONE prevents analysis being performed. CHECK will print out the analysis of the wavefunction stability at the end of the computation. FOLLOW will perform the analysis and, if a totally symmetric instability is found, will attempt to follow the eigenvector and re-run the computations to find a stable solution. Type: string; Possible Values: NONE, CHECK, FOLLOW; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; STABILITY_ANALYSIS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__stability_analysis.html:182,perform,perform,182,psi4manual/1.9.x/autodir_options_c/scf__stability_analysis.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__stability_analysis.html,3,['perform'],"['perform', 'performed']"
Performance,"﻿. STEP_TYPE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD; Default: RFO. Previous topic; RMS_FORCE_G_CONVERGENCE; Next topic; TEST_B; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__step_type-1.html:178,optimiz,optimization,178,psi4manual/4.0b2/autodir_options_c/optking__step_type-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__step_type-1.html,2,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD; Default: RFO. Previous topic; RMS_FORCE_G_CONVERGENCE; Next topic; TEST_B; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__step_type-1.html:193,optimiz,optimization,193,psi4manual/4.0b3/autodir_options_c/optking__step_type-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__step_type-1.html,2,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD, LINESEARCH_STATIC; Default: RFO. Previous topic; RMS_FORCE_G_CONVERGENCE; Next topic; TEST_B; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__step_type-1.html:193,optimiz,optimization,193,psi4manual/4.0b4/autodir_options_c/optking__step_type-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__step_type-1.html,2,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD, LINESEARCH_STATIC; Default: RFO. Previous topic; RMS_FORCE_G_CONVERGENCE; Next topic; TEST_B; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__step_type-1.html:193,optimiz,optimization,193,psi4manual/4.0b5/autodir_options_c/optking__step_type-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__step_type-1.html,2,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD, LINESEARCH_STATIC; Default: RFO. Previous topic; RSRFO_ALPHA_MAX; Next topic; TEST_B. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__step_type-1.html:200,optimiz,optimization,200,psi4manual/1.0.0/autodir_options_c/optking__step_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__step_type-1.html,2,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, RS_I_RFO, P_RFO, NR, SD, LINESEARCH; Default: RFO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__step_type.html:164,optimiz,optimization,164,psi4manual/master/autodir_options_c/optking__step_type.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__step_type.html,1,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD, LINESEARCH_STATIC; Default: RFO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__step_type-1.html:155,optimiz,optimization,155,psi4manual/1.4.0/autodir_options_c/optking__step_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__step_type-1.html,2,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD, LINESEARCH_STATIC; Default: RFO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__step_type-1.html:155,optimiz,optimization,155,psi4manual/1.5.0/autodir_options_c/optking__step_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__step_type-1.html,2,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD, LINESEARCH_STATIC; Default: RFO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__step_type.html:155,optimiz,optimization,155,psi4manual/1.6.x/autodir_options_c/optking__step_type.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__step_type.html,1,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, P_RFO, NR, SD, LINESEARCH; Default: RFO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__step_type.html:155,optimiz,optimization,155,psi4manual/1.7.x/autodir_options_c/optking__step_type.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__step_type.html,1,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, P_RFO, NR, SD, LINESEARCH; Default: RFO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__step_type.html:157,optimiz,optimization,157,psi4manual/1.8.x/autodir_options_c/optking__step_type.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__step_type.html,1,['optimiz'],['optimization']
Performance,"﻿. STEP_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. STEP_TYPE¶. Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, P_RFO, NR, SD, LINESEARCH; Default: RFO. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; STEP_TYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__step_type.html:157,optimiz,optimization,157,psi4manual/1.9.x/autodir_options_c/optking__step_type.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__step_type.html,1,['optimiz'],['optimization']
Performance,"﻿. TDSCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. TDSCFConvergenceError¶. exception psi4.driver.TDSCFConvergenceError(iteration, wfn, what, stats)[source]¶; Error called for problems with TDSCF iterations. Parameters:. wfn (Wavefunction) – Wavefunction at time of exception; what (str) – What we were trying to solve for (singlets/triplets, irrep) when we failed to converge; stats (Dict[str, Any]) – Dictionary of convergence statistics of last iteration.; Keys are:. count : int, iteration number; res_norm : np.ndarray (nroots, ), the norm of residual vector for each roots; val : np.ndarray (nroots, ), the eigenvalue corresponding to each root; delta_val : np.ndarray (nroots, ), the change in eigenvalue from the last iteration to this ones; collapse : bool, if a subspace collapse was performed; product_count : int, the running total of product evaluations that was performed; done : bool, if all roots were converged. iteration (int). message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. wfn¶; Wavefunction at time of exception. what¶; What we were trying to solve for (singlets/triplets, irrep) when we; failed to converge. stats¶; Dictionary of convergence statistics of last iteration. See keys above. table of contents. TDSCFConvergenceError; TDSCFConvergenceError; TDSCFConvergenceError.message; TDSCFConvergenceError.iteration; TDSCFConvergenceError.wfn; TDSCFConvergenceError.what; TDSCFConvergenceError.stats. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.TDSCFConvergenceError.html:902,perform,performed,902,psi4manual/master/api/psi4.driver.TDSCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.TDSCFConvergenceError.html,2,['perform'],['performed']
Performance,"﻿. TDSCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. TDSCFConvergenceError¶. exception psi4.driver.TDSCFConvergenceError(iteration, wfn, what, stats)[source]¶; Error called for problems with TDSCF iterations. Parameters. wfn (psi4.core.Wavefunction) – Wavefunction at time of exception; what (str) – What we were trying to solve for (singlets/triplets, irrep) when we failed to converge; stats (Dict) – Dictionary of convergence statistics of last iteration.; Keys are:. count : int, iteration number; res_norm : np.ndarray (nroots, ), the norm of residual vector for each roots; val : np.ndarray (nroots, ), the eigenvalue corresponding to each root; delta_val : np.ndarray (nroots, ), the change in eigenvalue from the last iteration to this ones; collapse : bool, if a subspace collapse was performed; product_count : int, the running total of product evaluations that was performed; done : bool, if all roots were converged. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.tdscfconvergenceerror.html:892,perform,performed,892,psi4manual/1.4.0/api/psi4.driver.tdscfconvergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.tdscfconvergenceerror.html,2,['perform'],['performed']
Performance,"﻿. TDSCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. TDSCFConvergenceError¶. exception psi4.driver.TDSCFConvergenceError(iteration, wfn, what, stats)[source]¶; Error called for problems with TDSCF iterations. Parameters. wfn (psi4.core.Wavefunction) – Wavefunction at time of exception; what (str) – What we were trying to solve for (singlets/triplets, irrep) when we failed to converge; stats (Dict) – Dictionary of convergence statistics of last iteration.; Keys are:. count : int, iteration number; res_norm : np.ndarray (nroots, ), the norm of residual vector for each roots; val : np.ndarray (nroots, ), the eigenvalue corresponding to each root; delta_val : np.ndarray (nroots, ), the change in eigenvalue from the last iteration to this ones; collapse : bool, if a subspace collapse was performed; product_count : int, the running total of product evaluations that was performed; done : bool, if all roots were converged. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.tdscfconvergenceerror.html:892,perform,performed,892,psi4manual/1.5.0/api/psi4.driver.tdscfconvergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.tdscfconvergenceerror.html,2,['perform'],['performed']
Performance,"﻿. TDSCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. TDSCFConvergenceError¶. exception psi4.driver.TDSCFConvergenceError(iteration, wfn, what, stats)[source]¶; Error called for problems with TDSCF iterations. Parameters. wfn (psi4.core.Wavefunction) – Wavefunction at time of exception; what (str) – What we were trying to solve for (singlets/triplets, irrep) when we failed to converge; stats (Dict) – Dictionary of convergence statistics of last iteration.; Keys are:. count : int, iteration number; res_norm : np.ndarray (nroots, ), the norm of residual vector for each roots; val : np.ndarray (nroots, ), the eigenvalue corresponding to each root; delta_val : np.ndarray (nroots, ), the change in eigenvalue from the last iteration to this ones; collapse : bool, if a subspace collapse was performed; product_count : int, the running total of product evaluations that was performed; done : bool, if all roots were converged. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.TDSCFConvergenceError.html:892,perform,performed,892,psi4manual/1.6.x/api/psi4.driver.TDSCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.TDSCFConvergenceError.html,2,['perform'],['performed']
Performance,"﻿. TDSCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. TDSCFConvergenceError¶. exception psi4.driver.TDSCFConvergenceError(iteration, wfn, what, stats)[source]¶; Error called for problems with TDSCF iterations. Parameters:. wfn (psi4.core.Wavefunction) – Wavefunction at time of exception; what (str) – What we were trying to solve for (singlets/triplets, irrep) when we failed to converge; stats (Dict[str, Any]) – Dictionary of convergence statistics of last iteration.; Keys are:. count : int, iteration number; res_norm : np.ndarray (nroots, ), the norm of residual vector for each roots; val : np.ndarray (nroots, ), the eigenvalue corresponding to each root; delta_val : np.ndarray (nroots, ), the change in eigenvalue from the last iteration to this ones; collapse : bool, if a subspace collapse was performed; product_count : int, the running total of product evaluations that was performed; done : bool, if all roots were converged. iteration (int) – . message¶; Human readable string describing the exception. Type:; str. iteration¶; Iteration number on which routine failed. Type:; int. wfn¶; Wavefunction at time of exception. Type:; psi4.core.Wavefunction. what¶; What we were trying to solve for (singlets/triplets, irrep) when we; failed to converge. Type:; str. stats¶; Dictionary of convergence statistics of last iteration. See keys above. Type:; Dict[str, Any]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.TDSCFConvergenceError.html:903,perform,performed,903,psi4manual/1.7.x/api/psi4.driver.TDSCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.TDSCFConvergenceError.html,2,['perform'],['performed']
Performance,"﻿. TDSCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. TDSCFConvergenceError¶. exception psi4.driver.TDSCFConvergenceError(iteration, wfn, what, stats)[source]¶; Error called for problems with TDSCF iterations. Parameters:. wfn (Wavefunction) – Wavefunction at time of exception; what (str) – What we were trying to solve for (singlets/triplets, irrep) when we failed to converge; stats (Dict[str, Any]) – Dictionary of convergence statistics of last iteration.; Keys are:. count : int, iteration number; res_norm : np.ndarray (nroots, ), the norm of residual vector for each roots; val : np.ndarray (nroots, ), the eigenvalue corresponding to each root; delta_val : np.ndarray (nroots, ), the change in eigenvalue from the last iteration to this ones; collapse : bool, if a subspace collapse was performed; product_count : int, the running total of product evaluations that was performed; done : bool, if all roots were converged. iteration (int) – . message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. wfn¶; Wavefunction at time of exception. what¶; What we were trying to solve for (singlets/triplets, irrep) when we; failed to converge. stats¶; Dictionary of convergence statistics of last iteration. See keys above. table of contents. TDSCFConvergenceError; TDSCFConvergenceError; TDSCFConvergenceError.message; TDSCFConvergenceError.iteration; TDSCFConvergenceError.wfn; TDSCFConvergenceError.what; TDSCFConvergenceError.stats. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.TDSCFConvergenceError.html:895,perform,performed,895,psi4manual/1.8.x/api/psi4.driver.TDSCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.TDSCFConvergenceError.html,2,['perform'],['performed']
Performance,"﻿. TDSCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. TDSCFConvergenceError¶. exception psi4.driver.TDSCFConvergenceError(iteration, wfn, what, stats)[source]¶; Error called for problems with TDSCF iterations. Parameters:. wfn (Wavefunction) – Wavefunction at time of exception; what (str) – What we were trying to solve for (singlets/triplets, irrep) when we failed to converge; stats (Dict[str, Any]) – Dictionary of convergence statistics of last iteration.; Keys are:. count : int, iteration number; res_norm : np.ndarray (nroots, ), the norm of residual vector for each roots; val : np.ndarray (nroots, ), the eigenvalue corresponding to each root; delta_val : np.ndarray (nroots, ), the change in eigenvalue from the last iteration to this ones; collapse : bool, if a subspace collapse was performed; product_count : int, the running total of product evaluations that was performed; done : bool, if all roots were converged. iteration (int) – . message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. wfn¶; Wavefunction at time of exception. what¶; What we were trying to solve for (singlets/triplets, irrep) when we; failed to converge. stats¶; Dictionary of convergence statistics of last iteration. See keys above. table of contents. TDSCFConvergenceError; TDSCFConvergenceError; TDSCFConvergenceError.message; TDSCFConvergenceError.iteration; TDSCFConvergenceError.wfn; TDSCFConvergenceError.what; TDSCFConvergenceError.stats. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; TDSCFConvergenceError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.TDSCFConvergenceError.html:895,perform,performed,895,psi4manual/1.9.x/api/psi4.driver.TDSCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.TDSCFConvergenceError.html,2,['perform'],['performed']
Performance,"﻿. TRANSQT2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». TRANSQT2¶; Performs transformations of integrals into the molecular orbital (MO) basis. This module is currently used by the (non-density fitted) MP2 and coupled cluster codes, but it is being phased out. General¶. AO_BASIS¶. The algorithm to use for the terms. Type: string; Possible Values: NONE, DISK, DIRECT; Default: NONE. DELETE_TEI¶. Boolean to delete the SO-basis two-electron integral file after the transformation. Type: boolean; Default: true. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1e-14. PRINT_TEI¶. Do print two-electron integrals (TEIs)?. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Default: RHF. SEMICANONICAL¶. Convert ROHF MOs to semicanonical MOs. Type: boolean; Default: true. Expert¶. CACHELEVEL¶. Controls how to cache quantities within the DPD library. Type: integer; Default: 2. WFN¶. Wavefunction type. Type: string; Default: No Default. Table Of Contents. TRANSQT2; General; AO_BASIS; DELETE_TEI; INTS_TOLERANCE; PRINT_TEI; REFERENCE; SEMICANONICAL. Expert; CACHELEVEL; WFN. Previous topic; WFN; Next topic; AO_BASIS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__transqt2-1.html:1003,cache,cache,1003,psi4manual/4.0b3/autodir_options_c/module__transqt2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__transqt2-1.html,2,['cache'],['cache']
Performance,"﻿. TRANSQT2 — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». TRANSQT2¶; Performs transformations of integrals into the molecular orbital (MO) basis. This module is currently used by the (non-density fitted) MP2 and coupled cluster codes, but it is being phased out. General¶. AO_BASIS¶. The algorithm to use for the terms. Type: string; Possible Values: NONE, DISK, DIRECT; Default: NONE. DELETE_TEI¶. Boolean to delete the SO-basis two-electron integral file after the transformation. Type: boolean; Default: true. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1e-14. PRINT_TEI¶. Do print two-electron integrals (TEIs)?. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Default: RHF. SEMICANONICAL¶. Convert ROHF MOs to semicanonical MOs. Type: boolean; Default: true. Expert¶. CACHELEVEL¶. Controls how to cache quantities within the DPD library. Type: integer; Default: 2. WFN¶. Wavefunction type. Type: string; Default: No Default. Table Of Contents. TRANSQT2; General; AO_BASIS; DELETE_TEI; INTS_TOLERANCE; PRINT_TEI; REFERENCE; SEMICANONICAL. Expert; CACHELEVEL; WFN. Previous topic; WFN; Next topic; AO_BASIS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__transqt2-1.html:1003,cache,cache,1003,psi4manual/4.0b4/autodir_options_c/module__transqt2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__transqt2-1.html,2,['cache'],['cache']
Performance,"﻿. TRANSQT2 — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». TRANSQT2¶; Performs transformations of integrals into the molecular orbital (MO) basis. This module is currently used by the (non-density fitted) MP2 and coupled cluster codes, but it is being phased out. General¶. AO_BASIS¶. The algorithm to use for the terms. Type: string; Possible Values: NONE, DISK, DIRECT; Default: NONE. DELETE_TEI¶. Boolean to delete the SO-basis two-electron integral file after the transformation. Type: boolean; Default: true. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1e-14. PRINT_TEI¶. Do print two-electron integrals (TEIs)?. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Default: RHF. SEMICANONICAL¶. Convert ROHF MOs to semicanonical MOs. Type: boolean; Default: true. Expert¶. CACHELEVEL¶. Controls how to cache quantities within the DPD library. Type: integer; Default: 2. WFN¶. Wavefunction type. Type: string; Default: No Default. Table Of Contents. TRANSQT2; General; AO_BASIS; DELETE_TEI; INTS_TOLERANCE; PRINT_TEI; REFERENCE; SEMICANONICAL. Expert; CACHELEVEL; WFN. Previous topic; WFN; Next topic; AO_BASIS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__transqt2-1.html:1003,cache,cache,1003,psi4manual/4.0b5/autodir_options_c/module__transqt2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__transqt2-1.html,2,['cache'],['cache']
Performance,"﻿. TRANSQT2 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». TRANSQT2¶; Performs transformations of integrals into the molecular orbital (MO) basis. This module is currently used by the (non-density fitted) MP2 and coupled cluster codes, but it is being phased out. General¶. AO_BASIS¶. The algorithm to use for the terms. Type: string; Possible Values: NONE, DISK, DIRECT; Default: NONE. DELETE_TEI¶. Boolean to delete the SO-basis two-electron integral file after the transformation. Type: boolean; Default: true. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1e-14. PRINT_TEI¶. Do print two-electron integrals (TEIs)?. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Default: RHF. SEMICANONICAL¶. Convert ROHF MOs to semicanonical MOs. Type: boolean; Default: true. Expert¶. CACHELEVEL¶. Controls how to cache quantities within the DPD library. Type: integer; Default: 2. NO_TEI¶. Whether to only form the one electron integrals. Type: boolean; Default: false. WFN¶. Wavefunction type. Type: string; Default: No Default. Table Of Contents. TRANSQT2; General; AO_BASIS; DELETE_TEI; INTS_TOLERANCE; PRINT_TEI; REFERENCE; SEMICANONICAL. Expert; CACHELEVEL; NO_TEI; WFN. Previous topic; T; Next topic; AO_BASIS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__transqt2-1.html:1010,cache,cache,1010,psi4manual/1.0.0/autodir_options_c/module__transqt2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__transqt2-1.html,2,['cache'],['cache']
Performance,"﻿. Test Suite and Sample Inputs — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices ». Test Suite and Sample Inputs¶; PSI4 is distributed with an extensive test suite, which can be found in; psi4/tests. After building the source code, these can automatically be; run by running make tests in the compilation directory. Sample input; files can be found in the the psi4/samples subdirectory of the top-level Psi; directory. The samples and a brief description are provided below. Input File; Description. scf2; RI-SCF cc-pVTZ energy of water, with Z-matrix input and cc-pVTZ-RI auxilliary basis. cc22; ROHF-EOM-CCSD/DZ on the lowest two states of each irrep in CH2. mcscf2; TCSCF cc-pVDZ energy of asymmetrically displaced ozone, with Z-matrix input. min_input; This checks that all energy methods can run with a minimal input and set symmetry. mp2-1; All-electron MP2 6-31G** geometry optimization of water. cc25; Single point gradient of 1-2B2 state of H2O+ with EOM-CCSD. fd-gradient; SCF STO-3G finite-difference tests. scf6; Tests RHF/ROHF/UHF SCF gradients. psimrcc-ccsd_t-3; Mk-MRCCSD(T) single point. CH2 state described using the Ms = 0 component of the singlet. Uses RHF singlet orbitals. dfmp2-3; DF-MP2 cc-pVDZ frozen core gradient of benzene, computed at the DF-SCF cc-pVDZ geometry. mcscf1; ROHF 6-31G** energy of the state of CH2, with Z-matrix input. The occupations are specified explicitly. ci-multi; BH single points, checking that program can run multiple instances of DETCI in a single input, without an intervening clean() call. sapt5; SAPT0 aug-cc-pVTZ computation of the charge transfer energy of the water dimer. adc2; ADC/aug-cc-pVDZ on two water molecules that are distant from 1000 angstroms from each other. cc40; RHF-CC2-LR/cc-pVDZ optical rotation of H2O2. gauge = length, omega = (589 355 nm). dcft2; DCFT-06 calculation for the He dimer. This performs a two-step update of the orbitals and cumulant,",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/testsuite-1.html:955,optimiz,optimization,955,psi4manual/4.0b3/testsuite-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/testsuite-1.html,2,['optimiz'],['optimization']
Performance,"﻿. Test Suite and Sample Inputs. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices. Test Suite and Sample Inputs¶; PSI4 is distributed with an extensive test suite, which can; be found in psi4/tests. After building the source code, these; can automatically be run by running ctest in the compilation; directory. More info on ctest options can be found; here. Sample input files; can be found in the psi4/samples subdirectory of the top-level Psi; directory. The samples and a brief description are provided below.; Sample inputs accessible through interfaced executables are bulleted below. CFOUR; CHEMPS2; DFTD3; DKH; LIBEFP; ERD; GDMA; MRCC; PCMSOLVER. Sample inputs for PSI4 as distributed are below. Input File; Description. mp2p5-grad2; MP2.5 cc-pVDZ gradient for the NO radical. cc46; EOM-CC2/cc-pVDZ on H2O2 with two excited states in each irrep. opt11; Transition-state optimizations of HOOH to both torsional transition states. dfomp2p5-grad1; DF-OMP2.5 cc-pVDZ gradients for the H2O molecule. dfmp2-grad4; DF-MP2 cc-pVDZ gradient for the NO molecule. cc40; RHF-CC2-LR/cc-pVDZ optical rotation of H2O2. gauge = length, omega = (589 355 nm). cc25; Single point gradient of 1-2B2 state of H2O+ with EOM-CCSD. casscf-sp; CASSCF/6-31G** energy point. cc13; UHF-CCSD/cc-pVDZ \(^{3}B_1\) CH2 geometry optimization via analytic gradients. omp3-5; SOS-OMP3 cc-pVDZ geometry optimization for the H2O molecule. dcft-grad4; Unrestricted DF-DCFT ODC-12 gradient for O2 with cc-pVTZ/cc-pVTZ-RI standard/auxiliary basis set. fd-freq-gradient; STO-3G frequencies for H2O by finite-differences of gradients. ocepa-grad2; OCEPA cc-pVDZ gradient for the NO radical. dfscf-bz2; Benzene Dimer DF-HF/cc-pVDZ. isapt1; This test case shows an example of running and analyzing an FI-SAPT0/jun-cc-pvdz computation for 2,4-pentanediol (targeting the intramolecular hydrogen bond between the two hydroxyl groups). dfmp2-2; Density fitted MP2 energy of H2, using density fitted reference and",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/testsuite-1.html:907,optimiz,optimizations,907,psi4manual/1.1.0/testsuite-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/testsuite-1.html,2,['optimiz'],['optimizations']
Performance,"﻿. UHF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; UHF. UHF¶. class psi4.core.UHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; docstring. iteration_; docstring. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the ‘Core’ Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmetry Orbital transformer. array_variable(self, arg0); Returns copy of the requested (case",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.uhf.html:262,perform,performed,262,psi4manual/1.4.0/api/psi4.core.uhf.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.uhf.html,2,['perform'],['performed']
Performance,"﻿. UHF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; UHF. UHF¶. class psi4.core.UHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmetry O",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.uhf.html:262,perform,performed,262,psi4manual/1.5.0/api/psi4.core.uhf.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.uhf.html,2,['perform'],['performed']
Performance,"﻿. UHF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; UHF. UHF¶. class psi4.core.UHF¶; Bases: psi4.core.HF; docstring; Attributes Summary. MOM_excited_; Are we to do excited-state MOM?. MOM_performed_; MOM performed current iteration?. attempt_number_; Current macroiteration (1-indexed) for stability analysis. diis_enabled_; docstring. diis_manager_; The DIIS object. diis_start_; docstring. frac_performed_; Frac performed current iteration?. initialized_diis_manager_; Has the DIIS object been initialized?. iteration_; Internal iterator for SCF cycles. reset_occ_; Do reset the occupation after the guess to the inital occupation. sad_; Do assume a non-idempotent density matrix and no orbitals after the guess. Methods Summary. Ca(self); Returns the Alpha Orbitals. Ca_subset(self, arg0, arg1); Returns the requested Alpha orbital subset. Cb(self); Returns the Beta Orbitals. Cb_subset(self, arg0, arg1); Returns the requested Beta orbital subset. Da(self); Returns the Alpha Density Matrix. Da_subset(self, arg0); Returns the requested Alpha Density subset. Db(self); Returns the Beta Density Matrix. Db_subset(self, arg0); Returns the requested Beta Density subset. Fa(self); Returns the Alpha Fock Matrix. Fa_subset(self, arg0); Returns the Alpha Fock Matrix in the requested basis (AO,SO). Fb(self); Returns the Beta Fock Matrix. Fb_subset(self, arg0); Returns the Beta Fock Matrix in the requested basis (AO,SO). H(self); Returns the 'Core' Matrix (Potential + Kinetic) Integrals. PCM_enabled(self); Whether running a PCM calculation. S(self); Returns the One-electron Overlap Matrix. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Sham Potential Matrix. Vb(self); Returns the Beta Kohn-Sham Potential Matrix. X(). alpha_orbital_space(self, id, basis, subset); Creates OrbitalSpace with information about the requested alpha orbital space. aotoso(self); Returns the Atomic Orbital to Symmetry O",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.UHF.html:262,perform,performed,262,psi4manual/1.6.x/api/psi4.core.UHF.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.UHF.html,2,['perform'],['performed']
Performance,"﻿. VBase. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; VBase. VBase¶. class psi4.core.VBase¶; Bases: pybind11_object; docstring; Methods Summary. Dao(self, arg0); Returns internal AO density. basis(self); Returns the internal basis set. build(arg0, arg1, arg2). build_collocation_cache(self, arg0); Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self); Clears the collocation cache. compute_V(self, arg0); doctsring. compute_Vx(self, arg0, arg1); doctsring. compute_gradient(self); Compute the DFT nuclear gradient contribution. compute_hessain(self); Compute the DFT nuclear Hessian contribution. finalize(*args, **kwargs); Overloaded function. functional(self); Returns the interal superfunctional. get_block(self, arg0); Returns the requested BlockOPoints. get_np_xyzw(); Returns the x, y, z, and weights of a grid as a tuple of NumPy array objects. grid(self); Returns the grid object. initialize(*args, **kwargs); Overloaded function. nblocks(self); Total number of blocks. print_header(self); Prints the objects header. properties(self); Returns the properties computer. quadrature_values(self); Returns the quadrature values. set_D(self, arg0); Sets the internal density. set_debug(self, arg0); Sets the debug level of the object. set_print(self, arg0); Sets the print level of the object. Methods Documentation. Dao(self: psi4.core.VBase, arg0: list[psi4.core.Matrix]) → None¶; Returns internal AO density. basis(self: psi4.core.VBase) → psi4.core.BasisSet¶; Returns the internal basis set. static build(arg0: psi4.core.BasisSet, arg1: psi4.core.SuperFunctional, arg2: str) → psi4.core.VBase¶. build_collocation_cache(self: psi4.core.VBase, arg0: int) → None¶; Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self: psi4.core.VBase) → None¶; Clears the collocation cache. compute_V(self: psi4.core.VBase, arg0: list[psi4.core.Matrix]) → None¶; doctsring. comput",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.VBase.html:390,cache,cache,390,psi4manual/master/api/psi4.core.VBase.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.VBase.html,2,['cache'],['cache']
Performance,"﻿. VBase. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. VBase¶. class psi4.core.VBase¶; Bases: pybind11_builtins.pybind11_object; docstring; Methods Summary. Dao(self, arg0); Returns internal AO density. basis(self); Returns the internal basis set. build(arg0, arg1, arg2). build_collocation_cache(self, arg0); Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self); Clears the collocation cache. compute_V(self, arg0); doctsring. compute_Vx(self, arg0, arg1); doctsring. compute_gradient(self); Compute the DFT nuclear gradient contribution. compute_hessain(self); Compute the DFT nuclear Hessian contribution. finalize(*args, **kwargs); Overloaded function. functional(self); Returns the interal superfunctional. get_block(self, arg0); Returns the requested BlockOPoints. get_np_xyzw(); Returns the x, y, z, and weights of a grid as a tuple of NumPy array objects. grid(self); Returns the grid object. initialize(*args, **kwargs); Overloaded function. nblocks(self); Total number of blocks. print_header(self); Prints the objects header. properties(self); Returns the properties computer. quadrature_values(self); Returns the quadrature values. set_D(self, arg0); Sets the internal density. set_debug(self, arg0); Sets the debug level of the object. set_print(self, arg0); Sets the print level of the object. Methods Documentation. Dao(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; Returns internal AO density. basis(self: psi4.core.VBase) → psi4.core.BasisSet¶; Returns the internal basis set. build(arg0: psi4.core.BasisSet, arg1: psi4.core.SuperFunctional, arg2: str) → psi4.core.VBase¶. build_collocation_cache(self: psi4.core.VBase, arg0: int) → None¶; Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self: psi4.core.VBase) → None¶; Clears the collocation cache. compute_V(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; doctsring. compute_V",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.vbase.html:394,cache,cache,394,psi4manual/1.3.2/api/psi4.core.vbase.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.vbase.html,2,['cache'],['cache']
Performance,"﻿. VBase. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; VBase. VBase¶. class psi4.core.VBase¶; Bases: pybind11_builtins.pybind11_object; docstring; Methods Summary. Dao(self, arg0); Returns internal AO density. basis(self); Returns the internal basis set. build(arg0, arg1, arg2). build_collocation_cache(self, arg0); Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self); Clears the collocation cache. compute_V(self, arg0); doctsring. compute_Vx(self, arg0, arg1); doctsring. compute_gradient(self); Compute the DFT nuclear gradient contribution. compute_hessain(self); Compute the DFT nuclear Hessian contribution. finalize(*args, **kwargs); Overloaded function. functional(self); Returns the interal superfunctional. get_block(self, arg0); Returns the requested BlockOPoints. get_np_xyzw(); Returns the x, y, z, and weights of a grid as a tuple of NumPy array objects. grid(self); Returns the grid object. initialize(*args, **kwargs); Overloaded function. nblocks(self); Total number of blocks. print_header(self); Prints the objects header. properties(self); Returns the properties computer. quadrature_values(self); Returns the quadrature values. set_D(self, arg0); Sets the internal density. set_debug(self, arg0); Sets the debug level of the object. set_print(self, arg0); Sets the print level of the object. Methods Documentation. Dao(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; Returns internal AO density. basis(self: psi4.core.VBase) → psi4.core.BasisSet¶; Returns the internal basis set. static build(arg0: psi4.core.BasisSet, arg1: psi4.core.SuperFunctional, arg2: str) → psi4.core.VBase¶. build_collocation_cache(self: psi4.core.VBase, arg0: int) → None¶; Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self: psi4.core.VBase) → None¶; Clears the collocation cache. compute_V(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; doctsrin",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.vbase.html:399,cache,cache,399,psi4manual/1.4.0/api/psi4.core.vbase.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.vbase.html,2,['cache'],['cache']
Performance,"﻿. VBase. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; VBase. VBase¶. class psi4.core.VBase¶; Bases: pybind11_builtins.pybind11_object; docstring; Methods Summary. Dao(self, arg0); Returns internal AO density. basis(self); Returns the internal basis set. build(arg0, arg1, arg2). build_collocation_cache(self, arg0); Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self); Clears the collocation cache. compute_V(self, arg0); doctsring. compute_Vx(self, arg0, arg1); doctsring. compute_gradient(self); Compute the DFT nuclear gradient contribution. compute_hessain(self); Compute the DFT nuclear Hessian contribution. finalize(*args, **kwargs); Overloaded function. functional(self); Returns the interal superfunctional. get_block(self, arg0); Returns the requested BlockOPoints. get_np_xyzw(); Returns the x, y, z, and weights of a grid as a tuple of NumPy array objects. grid(self); Returns the grid object. initialize(*args, **kwargs); Overloaded function. nblocks(self); Total number of blocks. print_header(self); Prints the objects header. properties(self); Returns the properties computer. quadrature_values(self); Returns the quadrature values. set_D(self, arg0); Sets the internal density. set_debug(self, arg0); Sets the debug level of the object. set_print(self, arg0); Sets the print level of the object. Methods Documentation. Dao(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; Returns internal AO density. basis(self: psi4.core.VBase) → psi4.core.BasisSet¶; Returns the internal basis set. static build(arg0: psi4.core.BasisSet, arg1: psi4.core.SuperFunctional, arg2: str) → psi4.core.VBase¶. build_collocation_cache(self: psi4.core.VBase, arg0: int) → None¶; Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self: psi4.core.VBase) → None¶; Clears the collocation cache. compute_V(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; doctsrin",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.vbase.html:399,cache,cache,399,psi4manual/1.5.0/api/psi4.core.vbase.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.vbase.html,2,['cache'],['cache']
Performance,"﻿. VBase. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; VBase. VBase¶. class psi4.core.VBase¶; Bases: pybind11_builtins.pybind11_object; docstring; Methods Summary. Dao(self, arg0); Returns internal AO density. basis(self); Returns the internal basis set. build(arg0, arg1, arg2). build_collocation_cache(self, arg0); Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self); Clears the collocation cache. compute_V(self, arg0); doctsring. compute_Vx(self, arg0, arg1); doctsring. compute_gradient(self); Compute the DFT nuclear gradient contribution. compute_hessain(self); Compute the DFT nuclear Hessian contribution. finalize(*args, **kwargs); Overloaded function. functional(self); Returns the interal superfunctional. get_block(self, arg0); Returns the requested BlockOPoints. get_np_xyzw(); Returns the x, y, z, and weights of a grid as a tuple of NumPy array objects. grid(self); Returns the grid object. initialize(*args, **kwargs); Overloaded function. nblocks(self); Total number of blocks. print_header(self); Prints the objects header. properties(self); Returns the properties computer. quadrature_values(self); Returns the quadrature values. set_D(self, arg0); Sets the internal density. set_debug(self, arg0); Sets the debug level of the object. set_print(self, arg0); Sets the print level of the object. Methods Documentation. Dao(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; Returns internal AO density. basis(self: psi4.core.VBase) → psi4.core.BasisSet¶; Returns the internal basis set. static build(arg0: psi4.core.BasisSet, arg1: psi4.core.SuperFunctional, arg2: str) → psi4.core.VBase¶. build_collocation_cache(self: psi4.core.VBase, arg0: int) → None¶; Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self: psi4.core.VBase) → None¶; Clears the collocation cache. compute_V(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; doctsrin",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.VBase.html:399,cache,cache,399,psi4manual/1.6.x/api/psi4.core.VBase.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.VBase.html,2,['cache'],['cache']
Performance,"﻿. VBase. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; VBase. VBase¶. class psi4.core.VBase¶; Bases: pybind11_object; docstring; Methods Summary. Dao(self, arg0); Returns internal AO density. basis(self); Returns the internal basis set. build(arg0, arg1, arg2). build_collocation_cache(self, arg0); Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self); Clears the collocation cache. compute_V(self, arg0); doctsring. compute_Vx(self, arg0, arg1); doctsring. compute_gradient(self); Compute the DFT nuclear gradient contribution. compute_hessain(self); Compute the DFT nuclear Hessian contribution. finalize(*args, **kwargs); Overloaded function. functional(self); Returns the interal superfunctional. get_block(self, arg0); Returns the requested BlockOPoints. get_np_xyzw(); Returns the x, y, z, and weights of a grid as a tuple of NumPy array objects. grid(self); Returns the grid object. initialize(*args, **kwargs); Overloaded function. nblocks(self); Total number of blocks. print_header(self); Prints the objects header. properties(self); Returns the properties computer. quadrature_values(self); Returns the quadrature values. set_D(self, arg0); Sets the internal density. set_debug(self, arg0); Sets the debug level of the object. set_print(self, arg0); Sets the print level of the object. Methods Documentation. Dao(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; Returns internal AO density. basis(self: psi4.core.VBase) → psi4.core.BasisSet¶; Returns the internal basis set. static build(arg0: psi4.core.BasisSet, arg1: psi4.core.SuperFunctional, arg2: str) → psi4.core.VBase¶. build_collocation_cache(self: psi4.core.VBase, arg0: int) → None¶; Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self: psi4.core.VBase) → None¶; Clears the collocation cache. compute_V(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; doctsring. compute_Vx(self",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.VBase.html:381,cache,cache,381,psi4manual/1.7.x/api/psi4.core.VBase.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.VBase.html,2,['cache'],['cache']
Performance,"﻿. VBase. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; VBase. VBase¶. class psi4.core.VBase¶; Bases: pybind11_object; docstring; Methods Summary. Dao(self, arg0); Returns internal AO density. basis(self); Returns the internal basis set. build(arg0, arg1, arg2). build_collocation_cache(self, arg0); Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self); Clears the collocation cache. compute_V(self, arg0); doctsring. compute_Vx(self, arg0, arg1); doctsring. compute_gradient(self); Compute the DFT nuclear gradient contribution. compute_hessain(self); Compute the DFT nuclear Hessian contribution. finalize(*args, **kwargs); Overloaded function. functional(self); Returns the interal superfunctional. get_block(self, arg0); Returns the requested BlockOPoints. get_np_xyzw(); Returns the x, y, z, and weights of a grid as a tuple of NumPy array objects. grid(self); Returns the grid object. initialize(*args, **kwargs); Overloaded function. nblocks(self); Total number of blocks. print_header(self); Prints the objects header. properties(self); Returns the properties computer. quadrature_values(self); Returns the quadrature values. set_D(self, arg0); Sets the internal density. set_debug(self, arg0); Sets the debug level of the object. set_print(self, arg0); Sets the print level of the object. Methods Documentation. Dao(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; Returns internal AO density. basis(self: psi4.core.VBase) → psi4.core.BasisSet¶; Returns the internal basis set. static build(arg0: psi4.core.BasisSet, arg1: psi4.core.SuperFunctional, arg2: str) → psi4.core.VBase¶. build_collocation_cache(self: psi4.core.VBase, arg0: int) → None¶; Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self: psi4.core.VBase) → None¶; Clears the collocation cache. compute_V(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; doctsring. compute_Vx(se",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.VBase.html:383,cache,cache,383,psi4manual/1.8.x/api/psi4.core.VBase.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.VBase.html,2,['cache'],['cache']
Performance,"﻿. VBase. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; VBase. VBase¶. class psi4.core.VBase¶; Bases: pybind11_object; docstring; Methods Summary. Dao(self, arg0); Returns internal AO density. basis(self); Returns the internal basis set. build(arg0, arg1, arg2). build_collocation_cache(self, arg0); Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self); Clears the collocation cache. compute_V(self, arg0); doctsring. compute_Vx(self, arg0, arg1); doctsring. compute_gradient(self); Compute the DFT nuclear gradient contribution. compute_hessain(self); Compute the DFT nuclear Hessian contribution. finalize(*args, **kwargs); Overloaded function. functional(self); Returns the interal superfunctional. get_block(self, arg0); Returns the requested BlockOPoints. get_np_xyzw(); Returns the x, y, z, and weights of a grid as a tuple of NumPy array objects. grid(self); Returns the grid object. initialize(*args, **kwargs); Overloaded function. nblocks(self); Total number of blocks. print_header(self); Prints the objects header. properties(self); Returns the properties computer. quadrature_values(self); Returns the quadrature values. set_D(self, arg0); Sets the internal density. set_debug(self, arg0); Sets the debug level of the object. set_print(self, arg0); Sets the print level of the object. Methods Documentation. Dao(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; Returns internal AO density. basis(self: psi4.core.VBase) → psi4.core.BasisSet¶; Returns the internal basis set. static build(arg0: psi4.core.BasisSet, arg1: psi4.core.SuperFunctional, arg2: str) → psi4.core.VBase¶. build_collocation_cache(self: psi4.core.VBase, arg0: int) → None¶; Constructs a collocation cache to prevent recomputation. clear_collocation_cache(self: psi4.core.VBase) → None¶; Clears the collocation cache. compute_V(self: psi4.core.VBase, arg0: List[psi4.core.Matrix]) → None¶; doctsring. compute_Vx(se",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.VBase.html:383,cache,cache,383,psi4manual/1.9.x/api/psi4.core.VBase.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.VBase.html,2,['cache'],['cache']
Performance,"﻿. WRITE_OPT_RESULT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; WRITE_OPT_RESULT. WRITE_OPT_RESULT¶. Write the optimization history / state to disc. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; WRITE_OPT_RESULT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__write_opt_result.html:186,optimiz,optimization,186,psi4manual/master/autodir_options_c/optking__write_opt_result.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__write_opt_result.html,1,['optimiz'],['optimization']
Performance,"﻿. WRITE_OPT_RESULT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; WRITE_OPT_RESULT. WRITE_OPT_RESULT¶. Write the optimization history / state to disc. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; WRITE_OPT_RESULT. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__write_opt_result.html:177,optimiz,optimization,177,psi4manual/1.7.x/autodir_options_c/optking__write_opt_result.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__write_opt_result.html,1,['optimiz'],['optimization']
Performance,"﻿. WRITE_OPT_RESULT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; WRITE_OPT_RESULT. WRITE_OPT_RESULT¶. Write the optimization history / state to disc. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; WRITE_OPT_RESULT. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__write_opt_result.html:179,optimiz,optimization,179,psi4manual/1.8.x/autodir_options_c/optking__write_opt_result.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__write_opt_result.html,1,['optimiz'],['optimization']
Performance,"﻿. WRITE_OPT_RESULT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; WRITE_OPT_RESULT. WRITE_OPT_RESULT¶. Write the optimization history / state to disc. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; WRITE_OPT_RESULT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__write_opt_result.html:179,optimiz,optimization,179,psi4manual/1.9.x/autodir_options_c/optking__write_opt_result.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__write_opt_result.html,1,['optimiz'],['optimization']
Performance,"﻿. Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Adding New Code to PSI4; Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Ways to Add Code: Psi4NumPy, Plugins, Full Integration¶. Easier and more rapid development¶; Fully-featured electronic structure programs are large and complex. However,; the PSI4 ecosystem provides a path for easier and more rapid development; of new features. The earliest versions of PSI4 were written by merging; individual executables that performed specific tasks into a unified C++; executable. By linking this C++ executable against the Python interpreter, the; individual modules could be called in any sequence, enabling a very diverse; range of tasks to be accomplished within a given input. Although Python-driven; model allowed for great flexibility from a user’s perspective, programming was; still relatively difficult because it required modifications to be made in C++; code.; Since those early days, the code has undergone some important structural; changes that have greatly simplified the development workflow. These changes; were motivated by the realization that only a few bottlenecks exist in a typical; calculation; by focusing on optimized C++ implementations of these bottlenecks; and making these C++ functions available in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of NumPy as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. Rapid initial development using Psi4NumPy¶; The Psi4NumPy project [Smith:2018:3504",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/prog_ways_to_add.html:562,perform,performed,562,psi4manual/master/prog_ways_to_add.html,https://psicode.org,https://psicode.org/psi4manual/master/prog_ways_to_add.html,1,['perform'],['performed']
Performance,"﻿. Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Adding New Code to PSI4; Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Ways to Add Code: Psi4NumPy, Plugins, Full Integration¶. Easier and more rapid development¶; Fully-featured electronic structure programs are large and complex. However,; the PSI4 ecosystem provides a path for easier and more rapid development; of new features. The earliest versions of PSI4 were written by merging; individual executables that performed specific tasks into a unified C++; executable. By linking this C++ executable against the Python interpreter, the; individual modules could be called in any sequence, enabling a very diverse; range of tasks to be accomplished within a given input. Although Python-driven; model allowed for great flexibility from a user’s perspective, programming was; still relatively difficult because it required modifications to be made in C++; code.; Since those early days, the code has undergone some important structural; changes that have greatly simplified the development workflow. These changes; were motivated by the realization that only a few bottlenecks exist in a typical; calculation; by focusing on optimized C++ implementations of these bottlenecks; and making these C++ functions available in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of NumPy as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. Rapid initial development using Psi4NumPy¶; The Psi4NumPy project [Smith:2018:3504] is the ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/prog_ways_to_add-1.html:553,perform,performed,553,psi4manual/1.4.0/prog_ways_to_add-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/prog_ways_to_add-1.html,2,['perform'],['performed']
Performance,"﻿. Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Adding New Code to PSI4; Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Ways to Add Code: Psi4NumPy, Plugins, Full Integration¶. Easier and more rapid development¶; Fully-featured electronic structure programs are large and complex. However,; the PSI4 ecosystem provides a path for easier and more rapid development; of new features. The earliest versions of PSI4 were written by merging; individual executables that performed specific tasks into a unified C++; executable. By linking this C++ executable against the Python interpreter, the; individual modules could be called in any sequence, enabling a very diverse; range of tasks to be accomplished within a given input. Although Python-driven; model allowed for great flexibility from a user’s perspective, programming was; still relatively difficult because it required modifications to be made in C++; code.; Since those early days, the code has undergone some important structural; changes that have greatly simplified the development workflow. These changes; were motivated by the realization that only a few bottlenecks exist in a typical; calculation; by focusing on optimized C++ implementations of these bottlenecks; and making these C++ functions available in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of NumPy as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. Rapid initial development using Psi4NumPy¶; The Psi4NumPy project [Smith:2018:3504] is the ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/prog_ways_to_add-1.html:553,perform,performed,553,psi4manual/1.5.0/prog_ways_to_add-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/prog_ways_to_add-1.html,2,['perform'],['performed']
Performance,"﻿. Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Adding New Code to PSI4; Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Ways to Add Code: Psi4NumPy, Plugins, Full Integration¶. Easier and more rapid development¶; Fully-featured electronic structure programs are large and complex. However,; the PSI4 ecosystem provides a path for easier and more rapid development; of new features. The earliest versions of PSI4 were written by merging; individual executables that performed specific tasks into a unified C++; executable. By linking this C++ executable against the Python interpreter, the; individual modules could be called in any sequence, enabling a very diverse; range of tasks to be accomplished within a given input. Although Python-driven; model allowed for great flexibility from a user’s perspective, programming was; still relatively difficult because it required modifications to be made in C++; code.; Since those early days, the code has undergone some important structural; changes that have greatly simplified the development workflow. These changes; were motivated by the realization that only a few bottlenecks exist in a typical; calculation; by focusing on optimized C++ implementations of these bottlenecks; and making these C++ functions available in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of NumPy as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. Rapid initial development using Psi4NumPy¶; The Psi4NumPy project [Smith:2018:3504] is the ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/prog_ways_to_add.html:553,perform,performed,553,psi4manual/1.6.x/prog_ways_to_add.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/prog_ways_to_add.html,1,['perform'],['performed']
Performance,"﻿. Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Adding New Code to PSI4; Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Ways to Add Code: Psi4NumPy, Plugins, Full Integration¶. Easier and more rapid development¶; Fully-featured electronic structure programs are large and complex. However,; the PSI4 ecosystem provides a path for easier and more rapid development; of new features. The earliest versions of PSI4 were written by merging; individual executables that performed specific tasks into a unified C++; executable. By linking this C++ executable against the Python interpreter, the; individual modules could be called in any sequence, enabling a very diverse; range of tasks to be accomplished within a given input. Although Python-driven; model allowed for great flexibility from a user’s perspective, programming was; still relatively difficult because it required modifications to be made in C++; code.; Since those early days, the code has undergone some important structural; changes that have greatly simplified the development workflow. These changes; were motivated by the realization that only a few bottlenecks exist in a typical; calculation; by focusing on optimized C++ implementations of these bottlenecks; and making these C++ functions available in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of NumPy as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. Rapid initial development using Psi4NumPy¶; The Psi4NumPy project [Smith:2018:3504] is the ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/prog_ways_to_add.html:553,perform,performed,553,psi4manual/1.7.x/prog_ways_to_add.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/prog_ways_to_add.html,1,['perform'],['performed']
Performance,"﻿. Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Adding New Code to PSI4; Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Ways to Add Code: Psi4NumPy, Plugins, Full Integration¶. Easier and more rapid development¶; Fully-featured electronic structure programs are large and complex. However,; the PSI4 ecosystem provides a path for easier and more rapid development; of new features. The earliest versions of PSI4 were written by merging; individual executables that performed specific tasks into a unified C++; executable. By linking this C++ executable against the Python interpreter, the; individual modules could be called in any sequence, enabling a very diverse; range of tasks to be accomplished within a given input. Although Python-driven; model allowed for great flexibility from a user’s perspective, programming was; still relatively difficult because it required modifications to be made in C++; code.; Since those early days, the code has undergone some important structural; changes that have greatly simplified the development workflow. These changes; were motivated by the realization that only a few bottlenecks exist in a typical; calculation; by focusing on optimized C++ implementations of these bottlenecks; and making these C++ functions available in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of NumPy as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. Rapid initial development using Psi4NumPy¶; The Psi4NumPy project [Smith:2018:3504] is th",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/prog_ways_to_add.html:555,perform,performed,555,psi4manual/1.8.x/prog_ways_to_add.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/prog_ways_to_add.html,1,['perform'],['performed']
Performance,"﻿. Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Adding New Code to PSI4; Ways to Add Code: Psi4NumPy, Plugins, Full Integration. Ways to Add Code: Psi4NumPy, Plugins, Full Integration¶. Easier and more rapid development¶; Fully-featured electronic structure programs are large and complex. However,; the PSI4 ecosystem provides a path for easier and more rapid development; of new features. The earliest versions of PSI4 were written by merging; individual executables that performed specific tasks into a unified C++; executable. By linking this C++ executable against the Python interpreter, the; individual modules could be called in any sequence, enabling a very diverse; range of tasks to be accomplished within a given input. Although Python-driven; model allowed for great flexibility from a user’s perspective, programming was; still relatively difficult because it required modifications to be made in C++; code.; Since those early days, the code has undergone some important structural; changes that have greatly simplified the development workflow. These changes; were motivated by the realization that only a few bottlenecks exist in a typical; calculation; by focusing on optimized C++ implementations of these bottlenecks; and making these C++ functions available in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of NumPy as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. Rapid initial development using Psi4NumPy¶; The Psi4NumPy project [Smith:2018:3504] is th",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/prog_ways_to_add.html:555,perform,performed,555,psi4manual/1.9.x/prog_ways_to_add.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/prog_ways_to_add.html,1,['perform'],['performed']
Performance,"﻿. benchmark_disk. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. benchmark_disk¶. psi4.core.benchmark_disk(max_dim: int, min_time: float) → None¶; Perform benchmark of PSIO disk performance. Use up to max_dim with each routine run at least min_time [s]. table of contents. benchmark_disk; benchmark_disk(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.benchmark_disk.html:259,perform,performance,259,psi4manual/master/api/psi4.core.benchmark_disk.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.benchmark_disk.html,1,['perform'],['performance']
Performance,"﻿. benchmark_disk. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. benchmark_disk¶. psi4.core.benchmark_disk(max_dim: int, min_time: float) → None¶; Perform benchmark of PSIO disk performance. Use up to max_dim with each routine run at least min_time [s]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.benchmark_disk-1.html:250,perform,performance,250,psi4manual/1.4.0/api/psi4.core.benchmark_disk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.benchmark_disk-1.html,2,['perform'],['performance']
Performance,"﻿. benchmark_disk. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. benchmark_disk¶. psi4.core.benchmark_disk(max_dim: int, min_time: float) → None¶; Perform benchmark of PSIO disk performance. Use up to max_dim with each routine run at least min_time [s]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.benchmark_disk-1.html:250,perform,performance,250,psi4manual/1.5.0/api/psi4.core.benchmark_disk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.benchmark_disk-1.html,2,['perform'],['performance']
Performance,"﻿. benchmark_disk. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. benchmark_disk¶. psi4.core.benchmark_disk(max_dim: int, min_time: float) → None¶; Perform benchmark of PSIO disk performance. Use up to max_dim with each routine run at least min_time [s]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.benchmark_disk.html:250,perform,performance,250,psi4manual/1.6.x/api/psi4.core.benchmark_disk.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.benchmark_disk.html,1,['perform'],['performance']
Performance,"﻿. benchmark_disk. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. benchmark_disk¶. psi4.core.benchmark_disk(max_dim: int, min_time: float) → None¶; Perform benchmark of PSIO disk performance. Use up to max_dim with each routine run at least min_time [s]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.benchmark_disk.html:250,perform,performance,250,psi4manual/1.7.x/api/psi4.core.benchmark_disk.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.benchmark_disk.html,1,['perform'],['performance']
Performance,"﻿. benchmark_disk. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. benchmark_disk¶. psi4.core.benchmark_disk(max_dim: int, min_time: float) → None¶; Perform benchmark of PSIO disk performance. Use up to max_dim with each routine run at least min_time [s]. table of contents. benchmark_disk; benchmark_disk(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.benchmark_disk.html:252,perform,performance,252,psi4manual/1.8.x/api/psi4.core.benchmark_disk.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.benchmark_disk.html,1,['perform'],['performance']
Performance,"﻿. benchmark_disk. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. benchmark_disk¶. psi4.core.benchmark_disk(max_dim: int, min_time: float) → None¶; Perform benchmark of PSIO disk performance. Use up to max_dim with each routine run at least min_time [s]. table of contents. benchmark_disk; benchmark_disk(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; benchmark_disk. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.benchmark_disk.html:252,perform,performance,252,psi4manual/1.9.x/api/psi4.core.benchmark_disk.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.benchmark_disk.html,1,['perform'],['performance']
Performance,"﻿. dfocc. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. dfocc¶. psi4.core.dfocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the density-fitted orbital optimized CC codes. table of contents. dfocc; dfocc(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.dfocc.html:244,optimiz,optimized,244,psi4manual/master/api/psi4.core.dfocc.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. dfocc. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. dfocc¶. psi4.core.dfocc(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the density-fitted orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.dfocc-1.html:217,optimiz,optimized,217,psi4manual/1.2.1/api/psi4.core.dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. dfocc. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. dfocc¶. psi4.core.dfocc(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the density-fitted orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.dfocc-1.html:217,optimiz,optimized,217,psi4manual/1.3.2/api/psi4.core.dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. dfocc. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. dfocc¶. psi4.core.dfocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the density-fitted orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.dfocc-1.html:235,optimiz,optimized,235,psi4manual/1.4.0/api/psi4.core.dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. dfocc. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. dfocc¶. psi4.core.dfocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the density-fitted orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.dfocc-1.html:235,optimiz,optimized,235,psi4manual/1.5.0/api/psi4.core.dfocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.dfocc-1.html,2,['optimiz'],['optimized']
Performance,"﻿. dfocc. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. dfocc¶. psi4.core.dfocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the density-fitted orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.dfocc.html:235,optimiz,optimized,235,psi4manual/1.6.x/api/psi4.core.dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. dfocc. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. dfocc¶. psi4.core.dfocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the density-fitted orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.dfocc.html:235,optimiz,optimized,235,psi4manual/1.7.x/api/psi4.core.dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. dfocc. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. dfocc¶. psi4.core.dfocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the density-fitted orbital optimized CC codes. table of contents. dfocc; dfocc(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.dfocc.html:237,optimiz,optimized,237,psi4manual/1.8.x/api/psi4.core.dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. dfocc. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. dfocc¶. psi4.core.dfocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the density-fitted orbital optimized CC codes. table of contents. dfocc; dfocc(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; dfocc. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.dfocc.html:237,optimiz,optimized,237,psi4manual/1.9.x/api/psi4.core.dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. driver — PSI4 [beta2] documentation. Navigation. index. modules |; PSI4 [beta2] » ; Module code ». Source code for driver; """"""Module with a *procedures* dictionary specifying available quantum; chemical methods and functions driving the main quantum chemical; functionality, namely single-point energies, geometry optimizations,; properties, and vibrational frequency calculations. """"""; import PsiMod; import input; from proc import *; from text import *; from procutil import *; from functional import *; # never import wrappers or aliases into this file. # Procedure lookup tables; procedures = {; 'energy': {; 'scf' : run_scf,; 'mcscf' : run_mcscf,; 'dcft' : run_dcft,; 'dfmp2' : run_dfmp2,; 'df-mp2' : run_dfmp2,; 'mp2' : run_mp2,; 'omp2' : run_omp2,; 'sapt0' : run_sapt,; 'sapt2' : run_sapt,; 'sapt2+' : run_sapt,; 'sapt2+(3)' : run_sapt,; 'sapt2+3' : run_sapt,; 'sapt0-ct' : run_sapt_ct,; 'sapt2-ct' : run_sapt_ct,; 'sapt2+-ct' : run_sapt_ct,; 'sapt2+(3)-ct' : run_sapt_ct,; 'sapt2+3-ct' : run_sapt_ct,; 'mp2c' : run_mp2c,; 'ccenergy' : run_ccenergy, # full control over ccenergy; 'ccsd' : run_ccenergy,; 'ccsd(t)' : run_ccenergy,; 'cc2' : run_ccenergy,; 'cc3' : run_ccenergy,; 'mrcc' : run_mrcc, # interface to Kallay's MRCC program; 'bccd' : run_bccd,; 'bccd(t)' : run_bccd_t,; 'eom-ccsd' : run_eom_cc,; 'eom-cc2' : run_eom_cc,; 'eom-cc3' : run_eom_cc,; 'eom_ccsd' : run_eom_cc,; 'eom_cc2' : run_eom_cc,; 'eom_cc3' : run_eom_cc,; 'detci' : run_detci, # full control over detci; 'mp' : run_detci, # arbitrary order mp(n); 'zapt' : run_detci, # arbitrary order zapt(n); 'cisd' : run_detci,; 'cisdt' : run_detci,; 'cisdtq' : run_detci,; 'ci' : run_detci, # arbitrary order ci(n); 'fci' : run_detci,; 'adc' : run_adc,; 'cphf' : run_libfock,; 'cis' : run_libfock,; 'tdhf' : run_libfock,; 'cpks' : run_libfock,; 'tda' : run_libfock,; 'tddft' : run_libfock,; 'psimrcc' : run_psimrcc,; 'psimrcc_scf' : run_psimrcc_scf,; 'hf' : run_scf,; 'rhf' : run_scf,; 'uhf' : run_scf,; 'rohf' : run_scf,; 'rscf'",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/driver.html:317,optimiz,optimizations,317,psi4manual/4.0b2/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/driver.html,1,['optimiz'],['optimizations']
Performance,"﻿. driver — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for driver; from __future__ import print_function; """"""Module with a *procedures* dictionary specifying available quantum; chemical methods and functions driving the main quantum chemical; functionality, namely single-point energies, geometry optimizations,; properties, and vibrational frequency calculations. """"""; import sys; import PsiMod; from proc import *; from text import *; from procutil import *; from functional import *; from psifiles import *; # never import wrappers or aliases into this file. # Procedure lookup tables; procedures = {; 'energy': {; 'scf' : run_scf,; 'mcscf' : run_mcscf,; 'dcft' : run_dcft,; 'dfmp2' : run_dfmp2,; 'df-mp2' : run_dfmp2,; 'mp2' : run_mp2,; 'omp2' : run_omp2,; 'omp3' : run_omp3,; 'sapt0' : run_sapt,; 'sapt2' : run_sapt,; 'sapt2+' : run_sapt,; 'sapt2+(3)' : run_sapt,; 'sapt2+3' : run_sapt,; 'sapt0-ct' : run_sapt_ct,; 'sapt2-ct' : run_sapt_ct,; 'sapt2+-ct' : run_sapt_ct,; 'sapt2+(3)-ct' : run_sapt_ct,; 'sapt2+3-ct' : run_sapt_ct,; 'mp2c' : run_mp2c,; 'ccenergy' : run_ccenergy, # full control over ccenergy; 'ccsd' : run_ccenergy,; 'ccsd(t)' : run_ccenergy,; 'cc2' : run_ccenergy,; 'cc3' : run_ccenergy,; 'mrcc' : run_mrcc, # interface to Kallay's MRCC program; 'bccd' : run_bccd,; 'bccd(t)' : run_bccd_t,; 'eom-ccsd' : run_eom_cc,; 'eom-cc2' : run_eom_cc,; 'eom-cc3' : run_eom_cc,; 'eom_ccsd' : run_eom_cc,; 'eom_cc2' : run_eom_cc,; 'eom_cc3' : run_eom_cc,; 'detci' : run_detci, # full control over detci; 'mp' : run_detci, # arbitrary order mp(n); 'zapt' : run_detci, # arbitrary order zapt(n); 'cisd' : run_detci,; 'cisdt' : run_detci,; 'cisdtq' : run_detci,; 'ci' : run_detci, # arbitrary order ci(n); 'fci' : run_detci,; 'adc' : run_adc,; 'cphf' : run_libfock,; 'cis' : run_libfock,; 'tdhf' : run_libfock,; 'cpks' : run_libfock,; 'tda' : run_libfock,; 'tddft' : run_libfock,; 'psimrcc' : run_psimrcc,; 'psimrcc_scf' : run_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/driver.html:367,optimiz,optimizations,367,psi4manual/4.0b3/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/driver.html,1,['optimiz'],['optimizations']
Performance,"﻿. driver — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for driver; from __future__ import print_function; """"""Module with a *procedures* dictionary specifying available quantum; chemical methods and functions driving the main quantum chemical; functionality, namely single-point energies, geometry optimizations,; properties, and vibrational frequency calculations. """"""; import sys; import PsiMod; from proc import *; from text import *; from procutil import *; from functional import *; from psifiles import *; # never import wrappers or aliases into this file. # Procedure lookup tables; procedures = {; 'energy': {; 'scf' : run_scf,; 'mcscf' : run_mcscf,; 'dcft' : run_dcft,; 'dfmp2' : run_dfmp2,; 'df-mp2' : run_dfmp2,; 'conv-mp2' : run_mp2,; 'mp3' : run_mp3,; 'mp2.5' : run_mp2_5,; 'mp2' : run_mp2_select,; 'omp2' : run_omp2,; 'scs-omp2' : run_scs_omp2,; 'scsn-omp2' : run_scs_omp2,; 'scs-mi-omp2' : run_scs_omp2,; 'scs-omp2-vdw' : run_scs_omp2,; 'sos-omp2' : run_sos_omp2,; 'sos-pi-omp2' : run_sos_omp2,; 'omp3' : run_omp3,; 'scs-omp3' : run_scs_omp3,; 'scsn-omp3' : run_scs_omp3,; 'scs-mi-omp3' : run_scs_omp3,; 'scs-omp3-vdw' : run_scs_omp3,; 'sos-omp3' : run_sos_omp3,; 'sos-pi-omp3' : run_sos_omp3,; 'ocepa' : run_ocepa,; 'cepa0' : run_cepa0,; 'omp2.5' : run_omp2_5,; 'dftsapt' : run_dftsapt,; 'infsapt' : run_infsapt,; 'sapt0' : run_sapt,; 'sapt2' : run_sapt,; 'sapt2+' : run_sapt,; 'sapt2+(3)' : run_sapt,; 'sapt2+3' : run_sapt,; 'sapt2+(ccd)' : run_sapt,; 'sapt2+(3)(ccd)': run_sapt,; 'sapt2+3(ccd)' : run_sapt,; 'sapt0-ct' : run_sapt_ct,; 'sapt2-ct' : run_sapt_ct,; 'sapt2+-ct' : run_sapt_ct,; 'sapt2+(3)-ct' : run_sapt_ct,; 'sapt2+3-ct' : run_sapt_ct,; 'sapt2+(ccd)-ct' : run_sapt_ct,; 'sapt2+(3)(ccd)-ct' : run_sapt_ct,; 'sapt2+3(ccd)-ct' : run_sapt_ct,; 'mp2c' : run_mp2c,; 'ccenergy' : run_ccenergy, # full control over ccenergy; 'ccsd' : run_ccenergy,; 'ccsd(t)' : run_ccenergy,; 'cc2' : run_ccenergy,; 'cc3' : ru",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/driver.html:367,optimiz,optimizations,367,psi4manual/4.0b4/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/driver.html,1,['optimiz'],['optimizations']
Performance,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to av",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.freq.html:1034,perform,performed,1034,psi4manual/master/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.freq.html,1,['perform'],['performed']
Performance,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file.; For maximum flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.freq-1.html:1018,perform,performed,1018,psi4manual/1.2.1/api/psi4.driver.freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.freq-1.html,2,['perform'],['performed']
Performance,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF. For all other methods, Frequencies will; proceed through finite differences according to availability of gradien",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.freq-1.html:1018,perform,performed,1018,psi4manual/1.3.2/api/psi4.driver.freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.freq-1.html,2,['perform'],['performed']
Performance,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availability of",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.freq-1.html:1021,perform,performed,1021,psi4manual/1.4.0/api/psi4.driver.freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.freq-1.html,2,['perform'],['performed']
Performance,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availability of",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.freq-1.html:1021,perform,performed,1021,psi4manual/1.5.0/api/psi4.driver.freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.freq-1.html,2,['perform'],['performed']
Performance,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availability of",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.freq.html:1021,perform,performed,1021,psi4manual/1.6.x/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.freq.html,1,['perform'],['performed']
Performance,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availabilit",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.freq.html:1025,perform,performed,1025,psi4manual/1.7.x/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.freq.html,1,['perform'],['performed']
Performance,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availabil",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.freq.html:1027,perform,performed,1027,psi4manual/1.8.x/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.freq.html,1,['perform'],['performed']
Performance,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availabil",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.freq.html:1027,perform,performed,1027,psi4manual/1.9.x/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.freq.html,1,['perform'],['performed']
Performance,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file.; For maximum flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite differ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.frequencies-1.html:1039,perform,performed,1039,psi4manual/1.2.1/api/psi4.driver.frequencies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.frequencies-1.html,2,['perform'],['performed']
Performance,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF. For all other methods, Frequencies will; proceed through finite differences according to av",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.frequencies-1.html:1039,perform,performed,1039,psi4manual/1.3.2/api/psi4.driver.frequencies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.frequencies-1.html,2,['perform'],['performed']
Performance,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file.; For maximum flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite diff",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.frequency-1.html:1041,perform,performed,1041,psi4manual/1.2.1/api/psi4.driver.frequency-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.frequency-1.html,2,['perform'],['performed']
Performance,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF. For all other methods, Frequencies will; proceed through finite differences according to ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.frequency-1.html:1041,perform,performed,1041,psi4manual/1.3.2/api/psi4.driver.frequency-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.frequency-1.html,2,['perform'],['performed']
Performance,"﻿. gaussian_n — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for gaussian_n; # Gn theory. . import PsiMod; import re; import os; import math; import warnings; from driver import *; from molutil import *; from text import *; from procutil import *; from physconst import *; # never import aliases into this file. [docs]def run_gaussian_2(name, **kwargs):. # throw an exception for open-shells; if (PsiMod.get_option('SCF','REFERENCE') != 'RHF' ):; raise ValidationError(""""""g2 computations require ""reference rhf"".""""""). # stash user options:; optstash = OptionsState(; ['FNOCC','COMPUTE_TRIPLES'],; ['FNOCC','COMPUTE_MP4_TRIPLES'],; ['FREEZE_CORE'],; ['SCF','SCF_TYPE']). # override default scf_type; PsiMod.set_local_option('SCF','SCF_TYPE','OUT_OF_CORE'). # optimize geometry at scf level; PsiMod.clean(); PsiMod.set_global_option('BASIS',""6-31G(D)""); optimize('scf'); PsiMod.clean(). # scf frequencies for zpe; frequency('scf'). # thermodynamic properties; du = PsiMod.get_variable('INTERNAL ENERGY CORRECTION'); dh = PsiMod.get_variable('ENTHALPY CORRECTION'); dg = PsiMod.get_variable('GIBBS FREE ENERGY CORRECTION'). ref = PsiMod.wavefunction(); freqs = ref.frequencies(); nfreq = freqs.dim(0); freqsum = 0.0; for i in range (0,nfreq):; freqsum += freqs.get(i); zpe = freqsum / psi_hartree2wavenumbers * 0.8929 * 0.5; PsiMod.clean(). # optimize geometry at mp2 (no frozen core) level; # note: freeze_core isn't an option in MP2; PsiMod.set_global_option('FREEZE_CORE',""FALSE""); optimize('conv-mp2'); PsiMod.clean(). # qcisd(t); PsiMod.set_local_option('FNOCC','COMPUTE_MP4_TRIPLES',""TRUE""); PsiMod.set_global_option('FREEZE_CORE',""TRUE""); PsiMod.set_global_option('BASIS',""6-311G(D_P)""); run_fnocc('qcisd(t)',**kwargs). # HLC: high-level correction based on number of valence electrons; ref = PsiMod.wavefunction(); nirrep = ref.nirrep(); frzcpi = ref.frzcpi(); nfzc = 0; for i in range (0,nirrep):; nfzc += frzcpi[i]; nalpha = r",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/gaussian_n.html:826,optimiz,optimize,826,psi4manual/4.0b4/_modules/gaussian_n.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/gaussian_n.html,2,['optimiz'],['optimize']
Performance,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:; Matrix – Total electronic gradient in Hartrees/Bohr. Returns:; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). table of contents. gradient; gradient(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.gradient.html:218,optimiz,optimize,218,psi4manual/master/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.gradient.html,1,['optimiz'],['optimize']
Performance,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to :py:func:~driver.optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:Matrix – Total electronic gradient in Hartrees/Bohr. Returns:(Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. 1; 2; 3; 4; 5; 6>>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.gradient-1.html:218,optimiz,optimize,218,psi4manual/1.2.1/api/psi4.driver.gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.gradient-1.html,2,['optimiz'],['optimize']
Performance,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to :py:func:~driver.optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:Matrix – Total electronic gradient in Hartrees/Bohr. Returns:(Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.gradient-1.html:218,optimiz,optimize,218,psi4manual/1.3.2/api/psi4.driver.gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.gradient-1.html,2,['optimiz'],['optimize']
Performance,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns; Matrix – Total electronic gradient in Hartrees/Bohr. Returns; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.gradient-1.html:209,optimiz,optimize,209,psi4manual/1.4.0/api/psi4.driver.gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.gradient-1.html,2,['optimiz'],['optimize']
Performance,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns; Matrix – Total electronic gradient in Hartrees/Bohr. Returns; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.gradient-1.html:209,optimiz,optimize,209,psi4manual/1.5.0/api/psi4.driver.gradient-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.gradient-1.html,2,['optimiz'],['optimize']
Performance,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns; Matrix – Total electronic gradient in Hartrees/Bohr. Returns; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.gradient.html:209,optimiz,optimize,209,psi4manual/1.6.x/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.gradient.html,1,['optimiz'],['optimize']
Performance,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:; Matrix – Total electronic gradient in Hartrees/Bohr. Returns:; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.gradient.html:209,optimiz,optimize,209,psi4manual/1.7.x/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.gradient.html,1,['optimiz'],['optimize']
Performance,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:; Matrix – Total electronic gradient in Hartrees/Bohr. Returns:; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). table of contents. gradient; gradient(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.gradient.html:211,optimiz,optimize,211,psi4manual/1.8.x/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.gradient.html,1,['optimiz'],['optimize']
Performance,"﻿. gradient. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:; Matrix – Total electronic gradient in Hartrees/Bohr. Returns:; (Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. >>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). table of contents. gradient; gradient(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; gradient. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.gradient.html:211,optimiz,optimize,211,psi4manual/1.9.x/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.gradient.html,1,['optimiz'],['optimize']
Performance,"﻿. import_ignorecase. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. import_ignorecase¶. psi4.driver.p4util.import_ignorecase(module)[source]¶; Import loader for module in any possible lettercase permutation. Parameters:; module (str) – Name of module with uncertain case. Returns:; Module object. Return type:; types.ModuleType. table of contents. import_ignorecase; import_ignorecase(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.import_ignorecase.html:234,load,loader,234,psi4manual/master/api/psi4.driver.p4util.import_ignorecase.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.import_ignorecase.html,1,['load'],['loader']
Performance,"﻿. import_ignorecase. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. import_ignorecase¶. psi4.driver.p4util.import_ignorecase(module)[source]¶; Import loader for module in any possible lettercase permutation. Parameters:; module (str) – Name of module with uncertain case. Returns:; Module object. Return type:; types.ModuleType. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.import_ignorecase.html:225,load,loader,225,psi4manual/1.7.x/api/psi4.driver.p4util.import_ignorecase.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.import_ignorecase.html,1,['load'],['loader']
Performance,"﻿. import_ignorecase. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. import_ignorecase¶. psi4.driver.p4util.import_ignorecase(module)[source]¶; Import loader for module in any possible lettercase permutation. Parameters:; module (str) – Name of module with uncertain case. Returns:; Module object. Return type:; types.ModuleType. table of contents. import_ignorecase; import_ignorecase(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.import_ignorecase.html:227,load,loader,227,psi4manual/1.8.x/api/psi4.driver.p4util.import_ignorecase.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.import_ignorecase.html,1,['load'],['loader']
Performance,"﻿. import_ignorecase. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. import_ignorecase¶. psi4.driver.p4util.import_ignorecase(module)[source]¶; Import loader for module in any possible lettercase permutation. Parameters:; module (str) – Name of module with uncertain case. Returns:; Module object. Return type:; types.ModuleType. table of contents. import_ignorecase; import_ignorecase(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; import_ignorecase. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.import_ignorecase.html:227,load,loader,227,psi4manual/1.9.x/api/psi4.driver.p4util.import_ignorecase.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.import_ignorecase.html,1,['load'],['loader']
Performance,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. table of contents. occ; occ(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.occ.html:221,optimiz,optimized,221,psi4manual/master/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.occ.html,1,['optimiz'],['optimized']
Performance,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. occ¶. psi4.core.occ(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.occ-1.html:196,optimiz,optimized,196,psi4manual/1.2.1/api/psi4.core.occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. occ¶. psi4.core.occ(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.occ-1.html:196,optimiz,optimized,196,psi4manual/1.3.2/api/psi4.core.occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.occ-1.html:212,optimiz,optimized,212,psi4manual/1.4.0/api/psi4.core.occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.occ-1.html:212,optimiz,optimized,212,psi4manual/1.5.0/api/psi4.core.occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.occ-1.html,2,['optimiz'],['optimized']
Performance,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.occ.html:212,optimiz,optimized,212,psi4manual/1.6.x/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.occ.html,1,['optimiz'],['optimized']
Performance,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.occ.html:212,optimiz,optimized,212,psi4manual/1.7.x/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.occ.html,1,['optimiz'],['optimized']
Performance,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. table of contents. occ; occ(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.occ.html:214,optimiz,optimized,214,psi4manual/1.8.x/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.occ.html,1,['optimiz'],['optimized']
Performance,"﻿. occ. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; occ. occ¶. psi4.core.occ(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the orbital optimized CC codes. table of contents. occ; occ(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; occ. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.occ.html:214,optimiz,optimized,214,psi4manual/1.9.x/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.occ.html,1,['optimiz'],['optimized']
Performance,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of p",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.opt.html:176,perform,perform,176,psi4manual/master/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.opt.html,3,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whether; the calculations required to complete the; optimization are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job with; 'sow' and follow instructions in its output file",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.opt-1.html:164,perform,perform,164,psi4manual/1.2.1/api/psi4.driver.opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.opt-1.html,6,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Indicates whether analytic (if available) or finite difference; optimization is to be performed. hessian_with (string) – 'scf' || 'mp2' || etc.; Indicates the computational method with which to perform a hessian; analysis to guide the geometry optimization. Warning; Optimizations where the molecule is specified in Z-matrix format; with dummy atoms will result in the ge",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.opt-1.html:164,perform,perform,164,psi4manual/1.3.2/api/psi4.driver.opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.opt-1.html,6,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Ind",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.opt-1.html:167,perform,perform,167,psi4manual/1.4.0/api/psi4.driver.opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.opt-1.html,6,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Ind",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.opt-1.html:167,perform,perform,167,psi4manual/1.5.0/api/psi4.driver.opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.opt-1.html,6,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Ind",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.opt.html:167,perform,perform,167,psi4manual/1.6.x/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.opt.html,3,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python fun",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.opt.html:167,perform,perform,167,psi4manual/1.7.x/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.opt.html,3,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.opt.html:169,perform,perform,169,psi4manual/1.8.x/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.opt.html,3,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.opt.html:169,perform,perform,169,psi4manual/1.9.x/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.opt.html,3,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.opt_clean-1.html:175,optimiz,optimizer,175,psi4manual/1.2.1/api/psi4.core.opt_clean-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.opt_clean-1.html,2,['optimiz'],['optimizer']
Performance,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.opt_clean-1.html:175,optimiz,optimizer,175,psi4manual/1.3.2/api/psi4.core.opt_clean-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.opt_clean-1.html,2,['optimiz'],['optimizer']
Performance,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.opt_clean-1.html:184,optimiz,optimizer,184,psi4manual/1.4.0/api/psi4.core.opt_clean-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.opt_clean-1.html,2,['optimiz'],['optimizer']
Performance,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.opt_clean-1.html:184,optimiz,optimizer,184,psi4manual/1.5.0/api/psi4.core.opt_clean-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.opt_clean-1.html,2,['optimiz'],['optimizer']
Performance,"﻿. opt_clean. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; opt_clean. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.opt_clean.html:184,optimiz,optimizer,184,psi4manual/1.6.x/api/psi4.core.opt_clean.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.opt_clean.html,1,['optimiz'],['optimizer']
Performance,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculati",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.optimize.html:3,optimiz,optimize,3,psi4manual/master/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.optimize.html,7,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whether; the calculations required to complete the; optimization are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job with; 'sow' and follow instruct",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.optimize-1.html:3,optimiz,optimize,3,psi4manual/1.2.1/api/psi4.driver.optimize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.optimize-1.html,12,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Indicates whether analytic (if available) or finite difference; optimization is to be performed. hessian_with (string) – 'scf' || 'mp2' || etc.; Indicates the computational method with which to perform a hessian; analysis to guide the geometry optimization. Warning; Optimizations where the molecule is specified in Z-matrix format; with dummy atom",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.optimize-1.html:3,optimiz,optimize,3,psi4manual/1.3.2/api/psi4.driver.optimize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.optimize-1.html,12,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) –",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.optimize-1.html:3,optimiz,optimize,3,psi4manual/1.4.0/api/psi4.driver.optimize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.optimize-1.html,14,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) –",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.optimize-1.html:3,optimiz,optimize,3,psi4manual/1.5.0/api/psi4.driver.optimize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.optimize-1.html,14,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) –",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.optimize.html:3,optimiz,optimize,3,psi4manual/1.6.x/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.optimize.html,7,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.optimize.html:3,optimiz,optimize,3,psi4manual/1.7.x/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.optimize.html,7,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.optimize.html:3,optimiz,optimize,3,psi4manual/1.8.x/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.optimize.html,7,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.optimize.html:3,optimiz,optimize,3,psi4manual/1.9.x/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.optimize.html,7,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization / frequency analysis code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.optking-1.html:172,optimiz,optimization,172,psi4manual/1.2.1/api/psi4.core.optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.optking-1.html,2,['optimiz'],['optimization']
Performance,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization / frequency analysis code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.optking-1.html:172,optimiz,optimization,172,psi4manual/1.3.2/api/psi4.core.optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.optking-1.html,2,['optimiz'],['optimization']
Performance,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; optking. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; optking. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.optking-1.html:179,optimiz,optimization,179,psi4manual/1.4.0/api/psi4.core.optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.optking-1.html,2,['optimiz'],['optimization']
Performance,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; optking. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; optking. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.optking-1.html:179,optimiz,optimization,179,psi4manual/1.5.0/api/psi4.core.optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.optking-1.html,2,['optimiz'],['optimization']
Performance,"﻿. optking. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; optking. optking¶. psi4.core.optking() → int¶; Runs the geometry optimization code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; optking. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.optking.html:179,optimiz,optimization,179,psi4manual/1.6.x/api/psi4.core.optking.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.optking.html,1,['optimiz'],['optimization']
Performance,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. table of contents. plugin_load; plugin_load(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.plugin_load.html:242,load,loaded,242,psi4manual/master/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.plugin_load.html,3,['load'],['loaded']
Performance,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin_load-1.html:222,load,loaded,222,psi4manual/1.2.1/api/psi4.core.plugin_load-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.plugin_load-1.html,6,['load'],['loaded']
Performance,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin_load-1.html:222,load,loaded,222,psi4manual/1.3.2/api/psi4.core.plugin_load-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.plugin_load-1.html,6,['load'],['loaded']
Performance,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin_load-1.html:233,load,loaded,233,psi4manual/1.4.0/api/psi4.core.plugin_load-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.plugin_load-1.html,6,['load'],['loaded']
Performance,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin_load-1.html:233,load,loaded,233,psi4manual/1.5.0/api/psi4.core.plugin_load-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.plugin_load-1.html,6,['load'],['loaded']
Performance,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin_load.html:233,load,loaded,233,psi4manual/1.6.x/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.plugin_load.html,3,['load'],['loaded']
Performance,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin_load.html:233,load,loaded,233,psi4manual/1.7.x/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.plugin_load.html,3,['load'],['loaded']
Performance,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. table of contents. plugin_load; plugin_load(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin_load.html:235,load,loaded,235,psi4manual/1.8.x/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.plugin_load.html,3,['load'],['loaded']
Performance,"﻿. plugin_load. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. table of contents. plugin_load; plugin_load(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; plugin_load. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin_load.html:235,load,loaded,235,psi4manual/1.9.x/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.plugin_load.html,3,['load'],['loaded']
Performance,"﻿. plugin_mp2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_mp2¶. C-side Documentation¶. CACHELEV (PLUGIN_MP2); How to cache quantities within the DPD library. Type: integer; Default: 2. MEMORY (PLUGIN_MP2); The amount of memory available (in Mb). Type: integer; Default: 2000. PRINT (PLUGIN_MP2); The amount of information printed to the output file. Type: integer; Default: 1. REFERENCE (PLUGIN_MP2); The Reference. Type: string; Default: No Default. Table Of Contents. plugin_mp2; C-side Documentation. Previous topic; PRINT; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_mp2-1.html:233,cache,cache,233,psi4manual/4.0b2/autodir_plugins/module__plugin_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_mp2-1.html,2,['cache'],['cache']
Performance,"﻿. plugin_test_matrix — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». plugin_test_matrix¶. C-side Documentation¶. CACHELEV (PLUGIN_TEST_MATRIX); How to cache quantities within the DPD library. Type: integer; Default: 2. MATRIX_SIZE (PLUGIN_TEST_MATRIX); The size of the matrices. Type: integer; Default: 1000. MEMORY (PLUGIN_TEST_MATRIX); The amount of memory available (in Mb). Type: integer; Default: 2000. PRINT (PLUGIN_TEST_MATRIX); The amount of information printed to the output file. Type: integer; Default: 1. TILE_SIZE (PLUGIN_TEST_MATRIX); The size of the tiles. Type: integer; Default: 10. Table Of Contents. plugin_test_matrix; C-side Documentation. Previous topic; SEM_MAX; Next topic; <no title>; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Emerging Theoretical Methods: Plugins DFADC to RQCHF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_test_matrix-1.html:257,cache,cache,257,psi4manual/4.0b2/autodir_plugins/module__plugin_test_matrix-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_plugins/module__plugin_test_matrix-1.html,2,['cache'],['cache']
Performance,"﻿. proc — PSI4 [beta2] documentation. Navigation. index. modules |; PSI4 [beta2] » ; Module code ». Source code for proc; """"""Module with functions that encode the sequence of PSI module; calls for each of the *name* values of the energy(), optimize(),; response(), and frequency() function. """""". import PsiMod; import shutil; import os; import subprocess; import re; import input; import physconst; from molutil import *; from text import *; from procutil import *; # never import driver, wrappers, or aliases into this file. [docs]def run_dcft(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; a density cumulant functional theory calculation. """"""; PsiMod.scf(); return PsiMod.dcft(). [docs]def run_dcft_gradient(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; DCFT gradient calculation. """"""; PsiMod.set_global_option('DERTYPE', 'FIRST'). run_dcft(name, **kwargs); PsiMod.deriv(). [docs]def run_omp2(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; an orbital-optimized MP2 computation. """"""; oldref = PsiMod.get_global_option('REFERENCE'); PsiMod.set_global_option('REFERENCE', 'UHF'); PsiMod.scf(); return PsiMod.omp2(); PsiMod.set_global_option('REFERENCE', oldref). [docs]def run_scf(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; a self-consistent-field theory (HF & DFT) calculation. """"""; lowername = name.lower(). user_fctl = PsiMod.get_local_option('SCF', 'DFT_FUNCTIONAL'); b_user_fctl = PsiMod.has_option_changed('DFT_FUNCTIONAL'); user_ref = PsiMod.get_local_option('SCF', 'REFERENCE'); b_user_ref = PsiMod.has_option_changed('REFERENCE'); user_scftype = PsiMod.get_local_option('SCF', 'SCF_TYPE'); b_user_scftype = PsiMod.has_option_changed('SCF_TYPE'). if lowername == 'df-scf':; PsiMod.set_global_option('SCF_TYPE', 'DF'); elif lowername == 'hf':; if PsiMod.get_local_option('SCF', 'REFERENCE') == 'RKS':; PsiMod.set_global_option('REFERENCE', 'RHF'); elif PsiMod.get_local_option('SCF', '",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/proc.html:240,optimiz,optimize,240,psi4manual/4.0b2/_modules/proc.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/proc.html,2,['optimiz'],"['optimize', 'optimized']"
Performance,"﻿. proc — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for proc; from __future__ import print_function; """"""Module with functions that encode the sequence of PSI module; calls for each of the *name* values of the energy(), optimize(),; response(), and frequency() function. """"""; import PsiMod; import shutil; import os; import subprocess; import re; import physconst; from molutil import *; from text import *; from procutil import *; from basislist import *; from functional import *; from optproc import *; # never import driver, wrappers, or aliases into this file. [docs]def run_dcft(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; a density cumulant functional theory calculation. """"""; optstash = OptionsState(; ['REFERENCE']). # DCFT module should probably take a REFERENCE keyword with only UHF allowed value; PsiMod.set_global_option('REFERENCE', 'UHF'); PsiMod.scf(); returnvalue = PsiMod.dcft(). optstash.restore(); return returnvalue. [docs]def run_dcft_gradient(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; DCFT gradient calculation. """"""; optstash = OptionsState(; ['REFERENCE'],; ['GLOBALS', 'DERTYPE']). PsiMod.set_global_option('DERTYPE', 'FIRST'); run_dcft(name, **kwargs); PsiMod.deriv(). optstash.restore(). [docs]def run_omp2(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; an orbital-optimized MP2 computation. """"""; oldref = PsiMod.get_global_option('REFERENCE'); PsiMod.set_global_option('REFERENCE', 'UHF'); PsiMod.scf(); return PsiMod.omp2(); PsiMod.set_global_option('REFERENCE', oldref). [docs]def run_omp3(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; an orbital-optimized MP3 computation. """"""; oldref = PsiMod.get_global_option('REFERENCE'); PsiMod.set_global_option('REFERENCE', 'UHF'); PsiMod.scf(); return PsiMod.omp3(); PsiMod.set_global_option('REFERENCE', oldref). [docs]def run_scf(name, **kwarg",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/proc.html:290,optimiz,optimize,290,psi4manual/4.0b3/_modules/proc.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/proc.html,1,['optimiz'],['optimize']
Performance,"﻿. proc — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for proc; from __future__ import print_function; """"""Module with functions that encode the sequence of PSI module; calls for each of the *name* values of the energy(), optimize(),; response(), and frequency() function. """"""; from psifiles import *; import PsiMod; import shutil; import os; import subprocess; import re; import physconst; from molutil import *; from text import *; from procutil import *; from basislist import *; from functional import *; from optproc import *; from util import *; # never import driver, wrappers, or aliases into this file. # ATTN NEW ADDITIONS!; # consult http://sirius.chem.vt.edu/psi4manual/master/proc_py.html. [docs]def run_dcft(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; a density cumulant functional theory calculation. """"""; optstash = OptionsState(; ['SCF', 'REFERENCE'],; ['DCFT', 'REFERENCE']). PsiMod.set_local_option('SCF', 'REFERENCE', 'UHF'); PsiMod.set_local_option('DCFT', 'REFERENCE', 'UHF'). # Bypass routine scf if user did something special to get it to converge; if not (('bypass_scf' in kwargs) and yes.match(str(kwargs['bypass_scf']))):; scf_helper(name, **kwargs); PsiMod.dcft(). optstash.restore(). [docs]def run_dcft_gradient(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; DCFT gradient calculation. """"""; optstash = OptionsState(; ['GLOBALS', 'DERTYPE']). PsiMod.set_global_option('DERTYPE', 'FIRST'); run_dcft(name, **kwargs); PsiMod.deriv(). optstash.restore(). [docs]def run_omp2(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; an orbital-optimized MP2 computation. """"""; # Bypass routine scf if user did something special to get it to converge; if not (('bypass_scf' in kwargs) and yes.match(str(kwargs['bypass_scf']))):; scf_helper(name, **kwargs). return PsiMod.occ(). [docs]def run_omp2_gradient(name, **kwargs):; """"""Function encodi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/proc.html:290,optimiz,optimize,290,psi4manual/4.0b4/_modules/proc.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/proc.html,1,['optimiz'],['optimize']
Performance,"﻿. psi4.core.dfocc. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.dfocc¶. psi4.core.dfocc(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the density-fitted orbital optimized CC codes. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfocc.html:191,optimiz,optimized,191,psi4manual/1.1.0/api/psi4.core.dfocc.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.dfocc.html,1,['optimiz'],['optimized']
Performance,"﻿. psi4.core.occ. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.occ¶. psi4.core.occ(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the orbital optimized CC codes. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.occ.html:170,optimiz,optimized,170,psi4manual/1.1.0/api/psi4.core.occ.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.occ.html,1,['optimiz'],['optimized']
Performance,"﻿. psi4.core.opt_clean. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.opt_clean¶. psi4.core.opt_clean() → None¶; Cleans up the optimizer’s scratch files. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.opt_clean.html:149,optimiz,optimizer,149,psi4manual/1.1.0/api/psi4.core.opt_clean.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.opt_clean.html,1,['optimiz'],['optimizer']
Performance,"﻿. psi4.core.optking. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.optking¶. psi4.core.optking() → int¶; Runs the geometry optimization / frequency analysis code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.optking.html:146,optimiz,optimization,146,psi4manual/1.1.0/api/psi4.core.optking.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.optking.html,1,['optimiz'],['optimization']
Performance,"﻿. psi4.core.plugin_load. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.plugin_load¶. psi4.core.plugin_load(arg0: str) → int¶; Load the plugin of name arg0. Returns 0 if not loaded, 1 if loaded, 2 if already loaded. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin_load.html:196,load,loaded,196,psi4manual/1.1.0/api/psi4.core.plugin_load.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.plugin_load.html,3,['load'],['loaded']
Performance,"﻿. psi4.driver.freq. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file.; For maximum flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.freq.html:996,perform,performed,996,psi4manual/1.1.0/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.freq.html,1,['perform'],['performed']
Performance,"﻿. psi4.driver.frequencies. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file.; For maximum flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is t",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.frequencies.html:1017,perform,performed,1017,psi4manual/1.1.0/api/psi4.driver.frequencies.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.frequencies.html,1,['perform'],['performed']
Performance,"﻿. psi4.driver.frequency. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file.; For maximum flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.frequency.html:1019,perform,performed,1019,psi4manual/1.1.0/api/psi4.driver.frequency.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.frequency.html,1,['perform'],['performed']
Performance,"﻿. psi4.driver.gradient. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.gradient¶. psi4.driver.gradient(name, **kwargs)[source]¶; Function complementary to :py:func:~driver.optimize(). Carries out one gradient pass,; deciding analytic or finite difference. Returns:Matrix – Total electronic gradient in Hartrees/Bohr. Returns:(Matrix, Wavefunction) – gradient and wavefunction when return_wfn specified. Examples:. 1; 2; 3; 4; 5; 6>>> # [1] Single-point dft gradient getting the gradient; >>> # in file, core.Matrix, and np.array forms; >>> set gradient_write on; >>> G, wfn = gradient('b3lyp-d', return_wfn=True); >>> wfn.gradient().print_out(); >>> np.array(G). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.gradient.html:196,optimiz,optimize,196,psi4manual/1.1.0/api/psi4.driver.gradient.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.gradient.html,1,['optimiz'],['optimize']
Performance,"﻿. psi4.driver.opt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.ConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whether; the calculations required to complete the; optimization are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job with; 'sow' and follow instructions in its output file. For maximum; flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – 'gradient' || 'energy'; Indicates whether analytic (if available) or finite difference; optimization is to be performed. hessian_with (string) – ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.opt.html:142,perform,perform,142,psi4manual/1.1.0/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.opt.html,3,"['optimiz', 'perform']","['optimization', 'optimized', 'perform']"
Performance,"﻿. psi4.driver.optimize. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.ConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whether; the calculations required to complete the; optimization are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job with; 'sow' and follow instructions in its output file. For maximum; flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – 'gradient' || 'energy'; Indicates whether analytic (if available) or finite difference; optimization is to be performed. h",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.optimize.html:15,optimiz,optimize,15,psi4manual/1.1.0/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.optimize.html,6,"['optimiz', 'perform']","['optimization', 'optimize', 'optimized', 'perform']"
Performance,"﻿. qcdb.libmintsbasissetparser — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    ; Psi4 [1.0.0 6a9a71b] » ; Module code ». Source code for qcdb.libmintsbasissetparser; from __future__ import absolute_import; from __future__ import print_function; from __future__ import division; import os; import re; import sys; from .exceptions import *; from .libmintsgshell import *; if sys.version_info >= (3,0):; basestring = str. [docs]class Gaussian94BasisSetParser(object):; """"""Class for parsing basis sets from a text file in Gaussian 94; format. Translated directly from the Psi4 libmints class written; by Justin M. Turney and Andrew C. Simmonett. """""". def __init__(self, forced_puream=None):; """"""Constructor""""""; # If the parser needs to force spherical or cartesian (e.g., loading old guess); self.force_puream_or_cartesian = False if forced_puream is None else True; # Is the forced value to use puream? (Otherwise force Cartesian).; self.forced_is_puream = False if forced_puream is None else forced_puream; # string filename; self.filename = None. [docs] def load_file(self, filename, basisname=None):; """"""Load and return the file to be used by parse. Return only; portion of *filename* pertaining to *basisname* if specified (for; multi-basisset files) otherwise entire file as list of strings. """"""; # string filename; self.filename = filename. given_basisname = False if basisname is None else True; found_basisname = False; basis_separator = re.compile(r'^\s*\[\s*(.*?)\s*\]\s*$'). # Loads an entire file.; try:; infile = open(filename, 'r'); except IOError:; raise BasisSetFileNotFound(""""""BasisSetParser::parse: Unable to open basis set file: %s"""""" % (filename)); if os.stat(filename).st_size == 0:; raise ValidationError(""""""BasisSetParser::parse: given filename '%s' is blank."""""" % (filename)); contents = infile.readlines(). lines = []; for text in contents:; text = text.strip(); # If no basisname was given always save the line.; if given_basisname is False:; lines.append(te",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/libmintsbasissetparser.html:788,load,loading,788,psi4manual/1.0.0/_modules/qcdb/libmintsbasissetparser.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/libmintsbasissetparser.html,1,['load'],['loading']
Performance,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis; is skipped if this is specified (non-None),; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns:; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:; Dict[str, ndarray]. table of contents. vibanal_wfn; vibanal_wfn(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.vibanal_wfn.html:281,perform,perform,281,psi4manual/master/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.vibanal_wfn.html,1,['perform'],['perform']
Performance,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:; wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (ndarray of float, optional) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (int or string) – The irrep for which frequencies are calculated. Thermochemical analysis is skipped if this is given,; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (boolean) – Should translations be projected in the harmonic analysis?; project_rot (boolean) – Should rotations be projected in the harmonic analysis?. Returns:vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:dict. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.vibanal_wfn-1.html:261,perform,perform,261,psi4manual/1.3.2/api/psi4.driver.vibanal_wfn-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.vibanal_wfn-1.html,2,['perform'],['perform']
Performance,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis is skipped if this is given,; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type; dict. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.vibanal_wfn-1.html:272,perform,perform,272,psi4manual/1.4.0/api/psi4.driver.vibanal_wfn-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.vibanal_wfn-1.html,2,['perform'],['perform']
Performance,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis is skipped if this is given,; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type; dict. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.vibanal_wfn-1.html:272,perform,perform,272,psi4manual/1.5.0/api/psi4.driver.vibanal_wfn-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.vibanal_wfn-1.html,2,['perform'],['perform']
Performance,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis is skipped if this is given,; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type; dict. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.vibanal_wfn.html:272,perform,perform,272,psi4manual/1.6.x/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.vibanal_wfn.html,1,['perform'],['perform']
Performance,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis; is skipped if this is specified (non-None),; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns:; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:; Dict[str, ndarray]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.vibanal_wfn.html:272,perform,perform,272,psi4manual/1.7.x/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.vibanal_wfn.html,1,['perform'],['perform']
Performance,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis; is skipped if this is specified (non-None),; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns:; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:; Dict[str, ndarray]. table of contents. vibanal_wfn; vibanal_wfn(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.vibanal_wfn.html:274,perform,perform,274,psi4manual/1.8.x/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.vibanal_wfn.html,1,['perform'],['perform']
Performance,"﻿. vibanal_wfn. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. vibanal_wfn¶. psi4.driver.vibanal_wfn(wfn, hess=None, irrep=None, molecule=None, project_trans=True, project_rot=True)[source]¶; Function to perform analysis of a hessian or hessian block, specifically…; calling for and printing vibrational and thermochemical analysis, setting thermochemical variables,; and writing the vibrec and normal mode files. Parameters:. wfn (Wavefunction) – The wavefunction which had its Hessian computed.; hess (Optional[ndarray]) – Hessian to analyze, if not the hessian in wfn.; (3*nat, 3*nat) non-mass-weighted Hessian in atomic units, [Eh/a0/a0].; irrep (Union[int, str, None]) – The irrep for which frequencies are calculated. Thermochemical analysis; is skipped if this is specified (non-None),; as only one symmetry block of the hessian has been computed.; molecule (Molecule or qcdb.Molecule, optional) – The molecule to pull information from, if not the molecule in wfn. Must at least have similar; geometry to the molecule in wfn.; project_trans (bool) – Should translations be projected in the harmonic analysis?; project_rot (bool) – Should rotations be projected in the harmonic analysis?. Returns:; vibinfo – A dictionary of vibrational information. See harmonic_analysis(). Return type:; Dict[str, ndarray]. table of contents. vibanal_wfn; vibanal_wfn(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; vibanal_wfn. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.vibanal_wfn.html:274,perform,perform,274,psi4manual/1.9.x/api/psi4.driver.vibanal_wfn.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.vibanal_wfn.html,1,['perform'],['perform']
Performance,"﻿. wrappers — PSI4 [beta2] documentation. Navigation. index. modules |; PSI4 [beta2] » ; Module code ». Source code for wrappers; """"""Module with functions that call the four main :py:mod:`driver`; functions: :py:mod:`driver.energy`, :py:mod:`driver.optimize`,; :py:mod:`driver.response`, and :py:mod:`driver.frequency`. """"""; import PsiMod; import re; import os; import input; import math; import warnings; import pickle; import copy; import physconst; from driver import *; from molutil import *; from text import *; from collections import defaultdict; from procutil import *; # never import aliases into this file. # Function to make calls among wrappers(), energy(), optimize(), etc.; [docs]def call_function_in_1st_argument(funcarg, **largs):; r""""""Function to make primary function call to energy(), opt(), etc.; with options dictionary *largs*.; Useful when *funcarg* to call is stored in variable. """"""; return funcarg(**largs). [docs]def convert(p, symbol):; if symbol[p] == 'H':; d = 1.001; if symbol[p] == 'He':; d = 1.012; if symbol[p] == 'Li':; d = 0.825; if symbol[p] == 'Be':; d = 1.408; if symbol[p] == 'B':; d = 1.485; if symbol[p] == 'C':; d = 1.452; if symbol[p] == 'N':; d = 1.397; if symbol[p] == 'O':; d = 1.342; if symbol[p] == 'F':; d = 1.287; if symbol[p] == 'Ne':; d = 1.243; if symbol[p] == 'Na':; d = 1.144; if symbol[p] == 'Mg':; d = 1.364; if symbol[p] == 'Al':; d = 1.639; if symbol[p] == 'Si':; d = 1.716; if symbol[p] == 'P':; d = 1.705; if symbol[p] == 'S':; d = 1.683; if symbol[p] == 'Cl':; d = 1.639; if symbol[p] == 'Ar':; d = 1.595; ; return d / 1.5. #Automatically detect fragments and build a new molecule for fragment; #needing methods (SAPT0, etc...); [docs]def auto_fragments(name, **kwargs):; r""""""; Detects fragments if the user does not supply them.; Currently only used for the WebMO implementation of SAPT. usage: auto_fragments(''); """"""; if 'molecule' in kwargs:; activate(kwargs['molecule']); del kwargs['molecule']; molecule = PsiMod.get_active_molecule",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html:249,optimiz,optimize,249,psi4manual/4.0b2/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/wrappers.html,2,['optimiz'],['optimize']
Performance,"﻿. wrappers — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for wrappers; """"""Module with functions that call the four main :py:mod:`driver`; functions: :py:mod:`driver.energy`, :py:mod:`driver.optimize`,; :py:mod:`driver.response`, and :py:mod:`driver.frequency`. """"""; import PsiMod; import re; import os; import math; import warnings; import pickle; import copy; import physconst; from driver import *; from molutil import *; from text import *; from collections import defaultdict; from procutil import *; # never import aliases into this file. # Function to make calls among wrappers(), energy(), optimize(), etc.; [docs]def call_function_in_1st_argument(funcarg, **largs):; r""""""Function to make primary function call to energy(), opt(), etc.; with options dictionary *largs*.; Useful when *funcarg* to call is stored in variable. """"""; return funcarg(**largs). [docs]def convert(p, symbol):; if symbol[p] == 'H':; d = 1.001; if symbol[p] == 'He':; d = 1.012; if symbol[p] == 'Li':; d = 0.825; if symbol[p] == 'Be':; d = 1.408; if symbol[p] == 'B':; d = 1.485; if symbol[p] == 'C':; d = 1.452; if symbol[p] == 'N':; d = 1.397; if symbol[p] == 'O':; d = 1.342; if symbol[p] == 'F':; d = 1.287; if symbol[p] == 'Ne':; d = 1.243; if symbol[p] == 'Na':; d = 1.144; if symbol[p] == 'Mg':; d = 1.364; if symbol[p] == 'Al':; d = 1.639; if symbol[p] == 'Si':; d = 1.716; if symbol[p] == 'P':; d = 1.705; if symbol[p] == 'S':; d = 1.683; if symbol[p] == 'Cl':; d = 1.639; if symbol[p] == 'Ar':; d = 1.595; ; return d / 1.5. #Automatically detect fragments and build a new molecule for fragment; #needing methods (SAPT0, etc...); [docs]def auto_fragments(name, **kwargs):; r""""""; Detects fragments if the user does not supply them.; Currently only used for the WebMO implementation of SAPT. usage: auto_fragments(''); """"""; if 'molecule' in kwargs:; activate(kwargs['molecule']); del kwargs['molecule']; molecule = PsiMod.get_active_molecule();",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/wrappers.html:260,optimiz,optimize,260,psi4manual/4.0b3/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/wrappers.html,2,['optimiz'],['optimize']
Performance,"﻿. wrappers — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for wrappers; """"""Module with functions that call the four main :py:mod:`driver`; functions: :py:mod:`driver.energy`, :py:mod:`driver.optimize`,; :py:mod:`driver.response`, and :py:mod:`driver.frequency`. """"""; import PsiMod; import re; import os; import math; import warnings; import pickle; import copy; import physconst; from driver import *; from molutil import *; from text import *; from collections import defaultdict; from procutil import *; # never import aliases into this file. # Function to make calls among wrappers(), energy(), optimize(), etc.; [docs]def call_function_in_1st_argument(funcarg, **largs):; r""""""Function to make primary function call to energy(), opt(), etc.; with options dictionary *largs*.; Useful when *funcarg* to call is stored in variable. """"""; return funcarg(**largs). [docs]def convert(p, symbol):; if symbol[p] == 'H':; d = 1.001; if symbol[p] == 'He':; d = 1.012; if symbol[p] == 'Li':; d = 0.825; if symbol[p] == 'Be':; d = 1.408; if symbol[p] == 'B':; d = 1.485; if symbol[p] == 'C':; d = 1.452; if symbol[p] == 'N':; d = 1.397; if symbol[p] == 'O':; d = 1.342; if symbol[p] == 'F':; d = 1.287; if symbol[p] == 'Ne':; d = 1.243; if symbol[p] == 'Na':; d = 1.144; if symbol[p] == 'Mg':; d = 1.364; if symbol[p] == 'Al':; d = 1.639; if symbol[p] == 'Si':; d = 1.716; if symbol[p] == 'P':; d = 1.705; if symbol[p] == 'S':; d = 1.683; if symbol[p] == 'Cl':; d = 1.639; if symbol[p] == 'Ar':; d = 1.595; ; return d / 1.5. #Automatically detect fragments and build a new molecule for fragment; #needing methods (SAPT0, etc...); [docs]def auto_fragments(name, **kwargs):; r""""""; Detects fragments if the user does not supply them.; Currently only used for the WebMO implementation of SAPT. usage: auto_fragments(''); """"""; if 'molecule' in kwargs:; activate(kwargs['molecule']); del kwargs['molecule']; molecule = PsiMod.get_active_molecule();",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/wrappers.html:260,optimiz,optimize,260,psi4manual/4.0b4/_modules/wrappers.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/wrappers.html,2,['optimiz'],['optimize']
Safety," (TRANSQT); TRANSQT — Do check MO orthogonality condition?. Type: boolean; Default: false. CHOLESKY_TOLERANCE (FNOCC); FNOCC — tolerance for Cholesky decomposition of the ERI tensor. Type: conv double; Default: 1.0e-4. CI_DIIS (MCSCF); MCSCF — Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. CI_NUM_THREADS (DETCI); DETCI — Number of threads for DETCI. Type: integer; Default: 1. CIBLKS_PRINT (DETCI); DETCI — Do print a summary of the CI blocks?. Type: boolean; Default: false. CIS_AD_STATES (CPHF); CPHF — Which states to save AD Matrices for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. CIS_AMPLITUDE_CUTOFF (CPHF); CPHF — Minimum singles amplitude to print in CIS analysis. Type: double; Default: 0.15. CIS_DOPDM_STATES (CPHF); CPHF — Which states to save AO difference OPDMs for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. CIS_MEM_SAFETY_FACTOR (CPHF); CPHF — Memory safety factor for allocating JK. Type: double; Default: 0.75. CIS_NO_STATES (CPHF); CPHF — Which states to save AO Natural Orbitals for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. CIS_OPDM_STATES (CPHF); CPHF — Which states to save AO OPDMs for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. CIS_TOPDM_STATES (CPHF); CPHF — Which states to save AO transition OPDMs for? * Positive - Singlets * Negative - Triplets *. Type: array; Default: No Default. COLLAPSE_SIZE (DETCI); DETCI — Gives the number of vectors to retain when the Davidson subspace is collapsed (see MAX_NUM_VECS). If greater than one, the collapsed subspace retains the best estimate of the CI vector for the previous n iterations. Defaults to 1. Type: integer; Default: 1. COLLAPSE_WITH_LAST (CCEOM); CCEOM — Do collapse with last vector?. Type: boolean; Default: true. COMPLEX_TOLERANCE (CCEOM); CCEOM — Complex tolerance applied in CCEOM computations. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodoc_glossary_options_c-1.html:17764,safe,safety,17764,psi4manual/4.0b4/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodoc_glossary_options_c-1.html,2,['safe'],['safety']
Safety," += """""" cid.href = %s;\n"""""" % (mouselink); if mouseimag:; htmlcode += """""" var cmpd_img = document.getElementById(""cmpd_img"");\n""""""; htmlcode += """""" cmpd_img.src = %s;\n"""""" % (mouseimag); htmlcode += """"""}\n""""""; htmlcode += """"""</SCRIPT>\n"""""". if mousediv:; htmlcode += """"""%s\n"""""" % (mousediv[0]); if mousetitle:; htmlcode += """"""%s <BR>"""""" % (mousetitle); htmlcode += """"""<h4>Mouseover</h4><a id=""cid""></a><br>\n""""""; if mouseimag:; htmlcode += """"""<div class=""text-center"">""""""; htmlcode += """"""<IMG ID=""cmpd_img"" WIDTH=""%d"" HEIGHT=""%d"">\n"""""" % (200, 160); htmlcode += """"""</div>""""""; if mousediv:; htmlcode += """"""%s\n"""""" % (mousediv[1]); #htmlcode += """"""<IMG SRC=""%s"" ismap usemap=""#points"" WIDTH=""%d"" HEIGHT=""%d"">\n"""""" % \; # (pltfile + '.png', img_width, img_height); htmlcode += """"""<IMG SRC=""%s"" ismap usemap=""#points"" WIDTH=""%d"">\n"""""" % \; (pltfile + '.png', img_width); htmlcode += """"""<MAP name=""points"">\n"""""". # generating html image map code; # points sorted to avoid overlapping map areas that can overwhelm html for SSI; # y=0 on top for html and on bottom for mpl, so flip the numbers; posnM.sort(key=lambda tup: tup[2]); posnM.sort(key=lambda tup: tup[3]); last = (0, 0); for dbse, rxn, val, show, x, y in posnM:; if val is None or val is np.nan:; continue. now = (int(x), int(y)); if now == last:; htmlcode += """"""<!-- map overlap! %s-%s %+.2f skipped -->\n"""""" % (dbse, rxn, val); else:; htmlcode += """"""<AREA shape=""rect"" coords=""%d,%d,%d,%d"" onmouseover=""javascript:mouseshow('%s', '%s', '%+.2f', '%s');"">\n"""""" % \; (x - 2, img_height - y - 20,; x + 2, img_height - y + 20,; dbse, rxn, val, show); last = now. htmlcode += """"""</MAP>\n"""""". plt.close(); return files_saved, htmlcode. [docs]def ternary(sapt, title='', labeled=True, view=True,; saveas=None, relpath=False, graphicsformat=['pdf']):; """"""Takes array of arrays *sapt* in form [elst, indc, disp] and builds formatted; two-triangle ternary diagrams. Either fully-readable or dotsonly depending; on *labeled*. Saves in formats *graphicsforma",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/mpl.html:22367,avoid,avoid,22367,psi4manual/1.0.0/_modules/qcdb/mpl.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/_modules/qcdb/mpl.html,1,['avoid'],['avoid']
Safety," - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, ecpint, libefp, erd, gau2grid, gdma, Libint2, PCMSolver, pybind11, pylibefp,; # qcelemental, qcengine, optking, simint, Libxc; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to OFF to force internal build""; # - CMAKE_INSIST_FIND_PACKAGE_${AddON} ""Set to ON to force external detect"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>FLEXIBLAS>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection""; # - OpenMP_LIBRARY_DIRS ""Location of OpenMP libraries (iomp5/gomp/omp) as "";""-separated list, hinting OpenMP detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries are installed (default: lib)""; # ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/build_planning.html:17441,detect,detection,17441,psi4manual/1.7.x/build_planning.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/build_planning.html,2,['detect'],['detection']
Safety," -------; a : float; The dot product (X x Y); """"""; pass. # cython doesn't like static+ decorators https://github.com/cython/cython/issues/1434#issuecomment-608975116; vector_dot = staticmethod(abstractmethod(vector_dot)). [docs]; @abstractmethod; def vector_axpy(a: float, X, Y):; """"""Compute scaled `vector` addition operation `a*X + Y`. Parameters; ----------; a; The scale factor applied to `X`; X : singlet `vector`; The `vector` which will be scaled and added to `Y`; Y : single `vector`; The `vector` which the result of `a*X` is added to. Returns; -------; Y : single `vector`; The solver assumes that Y is updated, and returned. So it is safe to; avoid a copy of Y if possible; """"""; pass. [docs]; @abstractmethod; def vector_scale(a: float, X):; """"""Scale a vector by some factor. Parameters; ----------; a; The scale facor; X : single `vector`; The vector that will be scaled. Returns; -------; X : single `vector`; The solver assumes that the passed vector is modifed. So it is save; to avoid a copy of X if possible.; """"""; pass. [docs]; @abstractmethod; def vector_copy(X):; """"""Make a copy of a `vector`. Parameters; ----------; X : single `vector`; The `vector` to copy. Returns; -------; X' : single `vector`; A copy of `X` should be distinct object that can be modified; independently of the passed object, Has the same data when returned.; """"""; pass. [docs]; @abstractmethod; def residue(self, X, so_prop_ints):; """"""Compute residue. Parameters; ----------; X; The single `vector` to use to compute the property.; so_prop_ints :; Property integrals in SO basis for the desired transition property.; prefactor; Optional float scaling factor. Returns; -------; residue : Any; The transition property.; """"""; pass. [docs]; def davidson_solver(; engine: Type[SolverEngine],; guess: List,; *,; nroot: int,; r_convergence: float = 1.0E-4,; max_ss_size: int = 100,; maxiter: int = 60,; verbose: int = 1,; nonneg_only: bool = False) -> Dict[str, Any]:; """"""Solves for the lowest few eigenvalues and ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/_modules/psi4/driver/p4util/solvers.html:17659,avoid,avoid,17659,psi4manual/1.8.x/_modules/psi4/driver/p4util/solvers.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/_modules/psi4/driver/p4util/solvers.html,1,['avoid'],['avoid']
Safety," -DCMAKE_INSTALL_PATH=""/Users/me/psi4"" \; -DCMAKE_PREFIX_PATH=""/Users/me/externals/install-libint"" \; -DMAX_AM_ERI=6 \; -DENABLE_gdma=ON \; -DBUILD_SHARED_LIBS=ON; >>> chmod u+x do-configure; >>> ./do-configure. What is the directory layout of the installed or staged Psi4¶; After compilation (cd objdir && make), a directory structure like the; below will exist at objdir/stage. This may be tested and used; just like a full installation.; After installation (cd objdir && make && make install), a directory; structure like the below will exist at /prefix. This is a full; installation.; /; bin/ (executables for psi4 + any external proj); bin/psi4 (psi4 executable, actually just a py script); include/ (installed headers for psi4 + any external proj); include/psi4/ (header files for #include-ing); include/psi4/psi4-dec.h (primary psi4 header); include/psi4/masses.h (a project-wide psi4 header); include/psi4/libmints/ (psi4 library headers); include/psi4/libfock/ (ditto); share/ (read-only arch-indep files for psi4 + any external proj); share/cmake/psi4/ (files for detecting installed targets); share/cmake/psi4/psi4Config.cmake (psi4 build/install info); share/cmake/psi4/psi4ConfigVersion.cmake (psi4 cmake version info); share/doc/psi4/html/ (sphinx html documentation); share/psi4/ (text files needed by psi4); share/psi4/basis (basis sets); share/psi4/plugins (plugin template files); share/psi4/fsapt (fsapt scripts); share/psi4/samples/ (sample input files); lib/ (shared libraries and py modules for psi4 + any external proj); # ordinary; lib/psi4/ (object files); lib/psi4/driver/ (py-side, uncompiled); lib/psi4/header.py (prints file header); lib/psi4/metadata.py (psi4 version info); lib/psi4/__init__.py (module marker/loader for psi4.core); lib/psi4/core.cpython-*.so (c-side, compiled and bound by pybind11); # conda; lib/pythonX.X/site-packages/psi4/. The following environment variables point to certain places in the above; directory structure. None to few need to be set; s",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/build_planning-1.html:21402,detect,detecting,21402,psi4manual/1.3.2/build_planning-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/build_planning-1.html,11,['detect'],['detecting']
Safety," -c psi4.; Then, hint its location with CMAKE_PREFIX_PATH,; and rebuild PSI4 to detect gau2grid and activate dependent code. To remove a conda installation, conda remove gau2grid. Source. If using PSI4 built from source and you want gau2grid built from; from source also, let the build system fetch and build it and activate; dependent code. How to configure gau2gridfor building Psi4¶; Role and Dependencies. Role — In PSI4, gau2grid is a library that provides essential; grid operations for DFT.; Downstream Dependencies — PSI4 \(\Leftarrow\) gau2grid; Upstream Dependencies — gau2grid \(\Leftarrow\) None. CMake Variables. CMAKE_PREFIX_PATH — CMake list variable to specify where pre-built dependencies can be found. For gau2grid, set to an installation directory containing include/gau2grid/gau2grid.h; gau2grid_DIR — CMake variable to specify where pre-built gau2grid can be found. Set to installation directory containing share/cmake/gau2grid/gau2gridConfig.cmake; CMAKE_DISABLE_FIND_PACKAGE_gau2grid — CMake variable to force internal build of gau2grid instead of detecting pre-built; CMAKE_INSIST_FIND_PACKAGE_gau2grid — CMake variable to force detecting pre-built gau2grid and not falling back on internal build. Examples. Build bundled. >>> cmake. Link against pre-built. >>> cmake -DCMAKE_PREFIX_PATH=/path/to/gau2grid/root. >>> cmake -Dgau2grid_DIR=/path/to/gau2grid/configdir. Build bundled despite pre-built being detectable. >>> cmake -DCMAKE_PREFIX_PATH=/path/to/unwanted/gau2grid/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_gau2grid=ON. table of contents. Interface to gau2grid by D. G. A. Smith; Installation; How to configure gau2gridfor building Psi4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to gau2grid by D. G. A. Smith. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/gau2grid-1.html:1943,detect,detecting,1943,psi4manual/1.4.0/gau2grid-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/gau2grid-1.html,6,['detect'],"['detectable', 'detecting']"
Safety," -c psi4.; Then, hint its location with CMAKE_PREFIX_PATH,; and rebuild PSI4 to detect gau2grid and activate dependent code. To remove a conda installation, conda remove gau2grid. Source. If using PSI4 built from source and you want gau2grid built from; from source also, let the build system fetch and build it and activate; dependent code. How to configure gau2gridfor building Psi4¶; Role and Dependencies. Role — In PSI4, gau2grid is a library that provides essential; grid operations for DFT.; Downstream Dependencies — PSI4 \(\Leftarrow\) gau2grid; Upstream Dependencies — gau2grid \(\Leftarrow\) None. CMake Variables. CMAKE_PREFIX_PATH — CMake list variable to specify where pre-built dependencies can be found. For gau2grid, set to an installation directory containing include/gau2grid/gau2grid.h; gau2grid_DIR — CMake variable to specify where pre-built gau2grid can be found. Set to installation directory containing share/cmake/gau2grid/gau2gridConfig.cmake; CMAKE_DISABLE_FIND_PACKAGE_gau2grid — CMake variable to force internal build of gau2grid instead of detecting pre-built; CMAKE_INSIST_FIND_PACKAGE_gau2grid — CMake variable to force detecting pre-built gau2grid and not falling back on internal build. Examples. Build bundled. >>> cmake. Link against pre-built. >>> cmake -DCMAKE_PREFIX_PATH=/path/to/gau2grid/root. >>> cmake -Dgau2grid_DIR=/path/to/gau2grid/configdir. Build bundled despite pre-built being detectable. >>> cmake -DCMAKE_PREFIX_PATH=/path/to/unwanted/gau2grid/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_gau2grid=ON. table of contents. Interface to gau2grid by D. G. A. Smith; Installation; How to configure gau2gridfor building Psi4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to gau2grid by D. G. A. Smith. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/gau2grid-1.html:1943,detect,detecting,1943,psi4manual/1.5.0/gau2grid-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/gau2grid-1.html,6,['detect'],"['detectable', 'detecting']"
Safety," 02110-1301 USA.; #; #@END LICENSE; #. import os; #import re; #import math; #import copy; #from periodictable import *; #from physconst import *; #from vecutil import *; #from exceptions import *; #from coordentry import *; import subprocess; import socket; import shutil; import random; from libmintsmolecule import *. [docs]class Molecule(LibmintsMolecule):; """"""Class to store python extensions to the MoleculeLibmints class.; Multiple classes allows separation of libmints and extension methods. """""". def __init__(self, psi4molstr=None):; """"""Initialize Molecule object from LibmintsMolecule""""""; LibmintsMolecule.__init__(self, psi4molstr). # The comment line; self.tagline = """". def __str__(self):; text = """""" ==> qcdb Molecule %s <==\n\n"""""" % (self.name()); text += """""" => %s <=\n\n"""""" % (self.tagline); text += self.save_string_for_psi4(); return text. @classmethod; [docs] def init_with_xyz(cls, xyzfilename, no_com=False, no_reorient=False):; """"""Pull information from an XYZ file. No fragment info detected.; Charge, multiplicity, tagline pulled from second line if available. >>> H2O = qcdb.Molecule.init_with_xyz('h2o.xyz'). """"""; instance = cls(); instance.lock_frame = False; instance.PYmove_to_com = not no_com; instance.PYfix_orientation = no_reorient. try:; infile = open(xyzfilename, 'r'); except IOError:; raise ValidationError(""""""Molecule::init_with_xyz: given filename '%s' does not exist."""""" % (xyzfilename)); if os.stat(xyzfilename).st_size == 0:; raise ValidationError(""""""Molecule::init_with_xyz: given filename '%s' is blank."""""" % (xyzfilename)); text = infile.readlines(). xyz1 = re.compile(r""^\s*(\d+)\s*(bohr|au)?\s*$"", re.IGNORECASE); xyz2 = re.compile(r'^\s*(-?\d+)\s+(\d+)\s+(.*)\s*$'); xyzN = re.compile(r""(?:\s*)([A-Z](?:[a-z])?)(?:\s+)(-?\d+\.\d+)(?:\s+)(-?\d+\.\d+)(?:\s+)(-?\d+\.\d+)(?:\s*)"", re.IGNORECASE). # Try to match the first line; if xyz1.match(text[0]):; fileNatom = int(xyz1.match(text[0]).group(1)); if xyz1.match(text[0]).group(2) == None:; fileUnits = 'An",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/_modules/qcdb/molecule.html:1937,detect,detected,1937,psi4manual/4.0b5/_modules/qcdb/molecule.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/_modules/qcdb/molecule.html,1,['detect'],['detected']
Safety," 1B2; basis cc-pvdz; }. energy('scf'). Orthogonalization¶; One of the first steps in the SCF procedure is the determination of an; orthogonal basis (known as the OSO basis) from the atomic orbital basis (known; as the AO basis). The Molecular Orbital basis (MO basis) is then built as a; particular unitary transformation of the OSO basis. In PSI4, the; determination of the OSO basis is accomplished via either symmetric or canonical; orthogonalization. Symmetric orthogonalization uses the symmetric inverse square; root of the overlap matrix for the orthogonalization matrix. Use of symmetric; orthogonalization always yields the same number of OSO functions (and thereby; MOs) as AO functions. However, this may lead to numerical problems if the; overlap matrix has small eigenvalues, which may occur for large systems or for; systems where diffuse basis sets are used. This problem may be avoided by using; canonical orthogonalization, in which an asymmetric inverse square root of the; overlap matrix is formed, with numerical stability enhanced by the elimination; of eigenvectors corresponding to very small eigenvalues. As a few combinations; of AO basis functions may be discarded, the number of canonical-orthogonalized; OSOs and MOs may be slightly smaller than the number of AOs. In PSI4,; symmetric orthogonalization is used by default, unless the smallest overlap; eigenvalue falls below the user-supplied double option S_TOLERANCE, which; defaults to 1E-7. If the smallest eigenvalue is below this cutoff, canonical; orthogonalization is forced, and all eigenvectors corresponding to eigenvalues; below the cutoff are eliminated. Use of canonical orthogonalization can be; forced by setting the S_ORTHOGONALIZATION option to CANONICAL. Note; that in practice, the MOs and OSOs are built separately within each irrep from; the symmetry-adapted combinations of AOs known as Unique Symmetry Orbitals; (USOs). For canonical orthogonalization, this implies that the number of MOs; and OSOs ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/scf-1.html:9120,avoid,avoided,9120,psi4manual/4.0b2/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/scf-1.html,2,['avoid'],['avoided']
Safety," CORR_MULTP (PSIMRCC); PSIMRCC — The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_REFERENCE (PSIMRCC); PSIMRCC — Reference wavefunction type used in MRCC computations. Type: string; Possible Values: RHF, ROHF, TCSCF, MCSCF, GENERAL; Default: GENERAL. CORR_WFN (PSIMRCC); PSIMRCC — The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING (PSIMRCC); PSIMRCC — The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS (PSIMRCC); PSIMRCC — Do include the terms that couple the reference determinants?. Type: boolean; Default: true. COVALENT_CONNECT (OPTKING); OPTKING — When determining connectivity, a bond is assigned if interatomic distance is less than (this number) * sum of covalent radii. Type: double; Default: 1.3. CPHF_MEM_SAFETY_FACTOR (CPHF); CPHF — Memory safety factor for allocating JK. Type: double; Default: 0.75. CPHF_TASKS (CPHF); CPHF — Which tasks to run CPHF For * Valid choices: * -Polarizability *. Type: array; Default: No Default. CUTOFF (OMP2); OMP2 —. Type: integer; Default: 14. D_CONVERGENCE (MCSCF); MCSCF — Convergence criterion for density. Type: conv double; Default: 1e-6. D_CONVERGENCE (SAPT); SAPT — Convergence criterion for residual of the CPHF coefficients in the SAPT term. Type: conv double; Default: 1e-8. D_CONVERGENCE (SCF); SCF — Convergence criterion for SCF density. Type: conv double; Default: 1e-8. DAMPING_CONVERGENCE (SCF); SCF — The density convergence threshold after which damping is no longer performed, if it is enabled. It is recommended to leave damping on until convergence, which is the default. Type: conv double; Default: 1.0e-18. DAMPING_PERCENTAGE (DCFT); DCFT — The amount (percentage) of damping to apply to the orbital update procedure: 0 will result in a full update, 100 will completely stall",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodoc_glossary_options_c-1.html:14717,safe,safety,14717,psi4manual/4.0b2/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodoc_glossary_options_c-1.html,2,['safe'],['safety']
Safety," COUPLED_INDUCTION (SAPT); SAPT (Expert) — Whether or not to compute coupled induction, applies only to the open-shell SAPT0 code. Coupled induction is not available for ROHF, and the option is automatically false in this case. Note that when coupled induction is turned off, the Psi variables SAPT IND20,R ENERGY and SAPT EXCH-IND20,R ENERGY actually contain the uncoupled induction! A corresponding warning is issued in the output file. Type: boolean; Default: true. COUPLING (PSIMRCC); PSIMRCC — The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS (PSIMRCC); PSIMRCC — Do include the terms that couple the reference determinants?. Type: boolean; Default: true. COVALENT_CONNECT (OPTKING); OPTKING — When determining connectivity, a bond is assigned if interatomic distance is less than (this number) * sum of covalent radii. Type: double; Default: 1.3. CPHF_MEM_SAFETY_FACTOR (CPHF); CPHF — Memory safety factor for allocating JK. Type: double; Default: 0.75. CPHF_TASKS (CPHF); CPHF — Which tasks to run CPHF For * Valid choices: * -Polarizability *. Type: array; Default: No Default. CUBEPROP_BASIS_FUNCTIONS (GLOBALS); GLOBALS — List of basis function indices for which cube files are generated (1-based). All basis functions computed if empty. Type: array; Default: No Default. CUBEPROP_FILEPATH (GLOBALS); GLOBALS — Directory to which to write cube files. Default is the input file directory. Type: string; Default: No Default. CUBEPROP_ORBITALS (GLOBALS); GLOBALS — List of orbital indices for which cube files are generated (1-based, \(+\) for alpha, \(-\) for beta). All orbitals computed if empty. Type: array; Default: No Default. CUBEPROP_TASKS (GLOBALS); GLOBALS — Properties to compute. Valid tasks include: DENSITY - Da, Db, Dt, Ds ESP - Dt, ESP ORBITALS - Psi_a_N, Psi_b_N BASIS_FUNCTIONS - Phi_N LOL - LOLa, LOLb ELF - ELFa, ELFb. Type: array; Default: No Default. CUBIC_BASI",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodoc_glossary_options_c-1.html:90092,safe,safety,90092,psi4manual/1.1.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodoc_glossary_options_c-1.html,2,['safe'],['safety']
Safety," CheMPS2 by S. Wouters. Interface to CheMPS2 by S. Wouters¶; Code author: Sebastian Wouters; Section author: Lori A. Burns; Module: Keywords, PSI Variables, Samples. Note; As of late June 2016, DMRG keywords in PSI4 have been; realigned with those of the chemps2 executable, plus a; “dmrg_” prefix. The only exceptions are the orbital space; PSI4 keywords RESTRICTED_DOCC (formerly; CheMPS2 used FROZEN_DOCC, contrary to its; definition) and ACTIVE which are passed along to; CheMPS2 keywords NOCC and NACT. A translation table; is available. Installation¶; Binary. CheMPS2 is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, CheMPS2 has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; CheMPS2 can be obtained through conda install chemps2.; Then enable it as a feature with ENABLE_CheMPS2,; hint its location with CMAKE_PREFIX_PATH,; and rebuild PSI4 to detect CheMPS2 and activate dependent code. To remove a conda installation, conda remove chemps2. Source. If using PSI4 built from source and you want CheMPS2 built from; from source also,; enable it as a feature with ENABLE_CheMPS2,; and let the build system fetch and build it and activate dependent code. Methods¶. Density matrix renormalization group capabilities of PSI4 through CheMPS2¶. name; calls method; Energy; Gradient. dmrg-ci; DMRG configuration interaction (CI); RHF/ROHF; —. dmrg-scf; DMRG complete active space SCF (CASSCF); RHF/ROHF; —. dmrg-caspt2; DMRG CAS with 2nd-order perturbation theory (CASPT2); RHF/ROHF; —. DMRG Keywords¶. DMRG_CASPT2_CALC¶. Do calculate the DMRG-CASPT2 energy after the DMRGSCF calculations are done?. Type: boolean; Default: false. DMRG_CASPT2_IMAG¶. CASPT2 Imaginary shift. Type: double; Default: 0.0. DMRG_CASPT2_IPEA¶. CASPT2 IPEA shift. Type: double; Default: 0.0. DMRG_CASPT2_ORBS¶. Whether to calculate the DMRG",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/chemps2-1.html:1196,detect,detect,1196,psi4manual/1.4.0/chemps2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/chemps2-1.html,9,['detect'],['detect']
Safety," DMRG_CASPT2_CALC (DMRG); DMRG — Do calculate the DMRG-CASPT2 energy after the DMRGSCF calculations are done?. Type: boolean; Default: false. DMRG_CASPT2_IMAG (DMRG); DMRG — CASPT2 Imaginary shift. Type: double; Default: 0.0. DMRG_CASPT2_IPEA (DMRG); DMRG — CASPT2 IPEA shift. Type: double; Default: 0.0. DMRG_CASPT2_ORBS (DMRG); DMRG — Whether to calculate the DMRG-CASPT2 energy after the DMRGSCF calculations are done. Type: string; Possible Values: PSEUDOCANONICAL, ACTIVE; Default: PSEUDOCANONICAL. DMRG_DIIS (DMRG); DMRG — Whether or not to use DIIS for DMRG. Type: boolean; Default: false. DMRG_DIIS_WRITE (DMRG); DMRG — Whether or not to store the DIIS checkpoint on disk (convenient for restarting). Type: boolean; Default: true. DMRG_EXCITATION (DMRG); DMRG — Which root is targeted: 0 means ground state, 1 first excited state, etc. Type: integer; Default: 0. DMRG_IRREP (DMRG); DMRG — The DMRG wavefunction irrep uses the same conventions as PSI4. How convenient :-). Just to avoid confusion, it’s copied here. It can also be found on http://sebwouters.github.io/CheMPS2/doxygen/classCheMPS2_1_1Irreps.html . Symmetry Conventions Irrep Number & Name Group Number & Name 0 1 2 3 4 5 6 7 0: c1 A 1: ci Ag Au 2: c2 A B 3: cs A’ A’’ 4: d2 A B1 B2 B3 5: c2v A1 A2 B1 B2 6: c2h Ag Bg Au Bu 7: d2h Ag B1g B2g B3g Au B1u B2u B3u. Type: integer; Default: -1. DMRG_LOCAL_INIT (DMRG); DMRG — Whether to start the active space localization process from a random unitary or the unit matrix. Type: boolean; Default: true. DMRG_MOLDEN_WRITE (DMRG); DMRG — DMRG-CI or converged DMRG-SCF orbitals in molden format. Type: boolean; Default: false. DMRG_MPS_WRITE (DMRG); DMRG — Whether or not to create intermediary MPS checkpoints. Type: boolean; Default: false. DMRG_MULTIPLICITY (DMRG); DMRG — The DMRG wavefunction multiplicity in the form (2S+1). Type: integer; Default: -1. DMRG_OPDM_AO_PRINT (DMRG); DMRG — Print out the density matrix in the AO basis. Type: boolean; Default: false. DMRG_PRINT_CORR (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_glossary_options_c-1.html:107252,avoid,avoid,107252,psi4manual/1.0.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_glossary_options_c-1.html,8,['avoid'],['avoid']
Safety," Default: 0.9. SAPT_MEM_SAFETY (SAPT); SAPT — Memory safety. Type: double; Default: 0.9. SAPT_OS_SCALE (SAPT); SAPT — The scale factor used for opposite-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 6.0/5.0. SAPT_SS_SCALE (SAPT); SAPT — The scale factor used for same-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 1.0/3.0. SAVE_JK (SCF); SCF — Keep JK object for later use?. Type: boolean; Default: false. SCALE (STABILITY); STABILITY — Scale factor (between 0 and 1) for orbital rotation step. Type: double; Default: 0.5. SCF_MAXITER (DCFT); DCFT — Maximum number of the orbital update micro-iterations per macro-iteration (for ALOGRITHM = TWOSTEP). Same keyword controls the maximum number of orbital response micro-iterations per macro-iteration for the solution of the response equations (for RESPONSE_ALOGRITHM = TWOSTEP). Type: integer; Default: 50. SCF_MEM_SAFETY_FACTOR (SCF); SCF — Memory safety factor for allocating JK. Type: double; Default: 0.75. SCF_TYPE (CPHF); CPHF — SCF Type. Type: string; Possible Values: DIRECT, DF, PK, OUT_OF_CORE, PS; Default: DIRECT. SCF_TYPE (SCF); SCF — What algorithm to use for the SCF computation. See Table SCF Convergence & Algorithm for default algorithm for different calculation types. Type: string; Possible Values: DIRECT, DF, PK, OUT_OF_CORE; Default: PK. SCHMIDT_ADD_RESIDUAL_TOLERANCE (CCEOM); CCEOM — Minimum absolute value above which a guess vector to a root is added to the Davidson algorithm in the EOM-CC iterative procedure. Type: conv double; Default: 1e-3. SCHWARZ_CUTOFF (CPHF); CPHF — The schwarz cutoff value. Type: double; Default: 1.0e-12. SCREEN_INTS (LMP2); LMP2 — Do screen integrals?. Type: boolean; Default: false. SCS (LMP2); LMP2 — Do spin-component-scaled MP2 (SCS-MP2)?. Type: boolean; Default: false. SCS_CCSD (CCENERGY); CCENERGY — Do spin-component-scaled CCSD. Type: boolean; Default: false. SCS_CCSD (FNOCC); ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodoc_glossary_options_c-1.html:117504,safe,safety,117504,psi4manual/4.0b4/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodoc_glossary_options_c-1.html,2,['safe'],['safety']
Safety," Detecting dependencies and add-ons >>>; #; # - PYTHON_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python2.7)""; # - PYTHON_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python2.7.so)""; # - PYTHON_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/include/python2.7)""; # - SPHINX_ROOT ""Root directory for Sphinx: 'bin/sphinx-build' (or similar) should be in this dir.""; #; # For any ${AddOn} of: ambit, CheMPS2, dkh, libefp, erd, gdma, Libint, PCMSolver, pybind11, simint; # - CMAKE_PREFIX_PATH ""Set to list of root directories to look for externally built add-ons and dependencies; # (e.g., /path/to/install-libint;/path/to/install-gdma where exists /path/to/install-libint/lib/libderiv.a)""; # - ${AddOn}_DIR ""Set to directory containing ${AddOn}Config.cmake file to facilitate detection of external build""; # - CMAKE_DISABLE_FIND_PACKAGE_${AddON} ""Set to OFF to force internal build"". # <<< Detecting BLAS/LAPACK >>>; #; # - ENV(MATH_ROOT) ""Root directory where BLAS/LAPACK libraries should be detected (e.g., ${MATH_ROOT}/lib/libblas.so)""; # - BLAS_TYPE ""Target BLAS distribution for math detection; # (default: search order MKL>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_TYPE ""Target LAPACK distribution for math detection; # (default: search order MKL>OPENBLAS>ESSL>ATLAS>ACML>SYSTEM_NATIVE on Linux; MKL>Accelerate>... on Mac)""; # - LAPACK_LIBRARIES ""Location of BLAS/LAPACK libraries as "";""-separated list of full paths, bypassing math detection""; # - LAPACK_INCLUDE_DIRS ""Location of BLAS/LAPACK headers (only needed for MKL), bypassing math detection"". # <<< Install >>>; #; # - CMAKE_INSTALL_PREFIX ""Location to which Psi4 and internally built add-ons are installed (default: /usr/local/psi4)""; # - CMAKE_INSTALL_BINDIR ""Location within CMAKE_INSTALL_PREFIX to which executables are installed (default: bin)""; # - CMAKE_INSTALL_LIBDIR ""Location within CMAKE_INSTALL_PREFIX to which libraries",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/build_planning-1.html:9872,detect,detected,9872,psi4manual/1.1.0/build_planning-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/build_planning-1.html,2,['detect'],['detected']
Safety," For difficult cases, the following suggestions are made. As for any optimizer, computing the Hessian and limiting the step size will; successfully converge a higher percentage of cases. The default settings have; been chosen because they perform efficiently for common, representative test sets.; More restrictive, cautious steps are sometimes necessary.; DYNAMIC_LEVEL allows optking to change the method of optimization; toward algorithms that, while often less efficient, may help to converge difficult; cases. If this is initially set to 1, then optking, as poor steps are detected,; will increase the dynamic level through several forms of more robust and cautious algorithms.; The changes will reduce the trust radius, allow backward steps (partial line; searching), add cartesian coordinates, switch to cartesian coordinates, and take; steepest-descent steps.; The developers have found the OPT_COORDINATES set to “BOTH” which; includes both the redundant internal coordinate set, as well as cartesian coordinates,; works well for systems with long ‘arms’ or floppy portions of a molecule poorly; described by local internals.; Optking does support the specification of ghost atoms. Certain internal coordinates such; as torsions become poorly defined when they contain near-linear bends.; An internal error AlgError may be raised in such cases. Optking will avoid such; coordinates when choosing an initial coordinate system; however, they may arise in the course; of an optimization. In such cases, try restarting from the most recent geometry.; Alternatively, setting OPT_COORDINATES to cartesian will avoid any internal; coordinate difficulties altogether. These coordinate changes can be automatically; performed by turning DYNAMIC_LEVEL to 1. Warning; In some cases, such as the coordinate issues described above, optking will reset to maintain; a consistent history. If an error occurs in Psi4 due to GEOM_MAXITER being exceeded but; the final step report indicates that optking has not",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/optking.html:17000,redund,redundant,17000,psi4manual/1.7.x/optking.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/optking.html,4,['redund'],['redundant']
Safety," GDMA_SWITCH¶. The value to switch between the older standard DMA and the new grid-based approach. Pairs of primitives whose exponents sum is above this value will be treated using standard DMA. Set to 0 to force all pairs to be treated with standard DMA. Type: double; Default: 4.0. How to configure gdma for building Psi4¶; Role and Dependencies. Role — In PSI4, GDMA is a library that provides additional; quantum chemical capabilities (multipole analysis).; Downstream Dependencies — PSI4 (\(\Leftarrow\) optional) gdma; Upstream Dependencies — gdma \(\Leftarrow\) Fortran. CMake Variables. ENABLE_gdma — CMake variable toggling whether Psi4 builds with gdma; CMAKE_PREFIX_PATH — CMake list variable to specify where pre-built dependencies can be found. For gdma, set to an installation directory containing include/GDMA/GDMA_MANGLE.h; gdma_DIR — CMake variable to specify where pre-built gdma can be found. Set to installation directory containing share/cmake/gdma/gdmaConfig.cmake; CMAKE_DISABLE_FIND_PACKAGE_gdma — CMake variable to force internal build of gdma instead of detecting pre-built. Examples. Build bundled. >>> cmake -DENABLE_gdma=ON. Build without gdma. >>> cmake. Link against pre-built. >>> cmake -DENABLE_gdma=ON -DCMAKE_PREFIX_PATH=/path/to/gdma/root. >>> cmake -DENABLE_gdma=ON -Dgdma_DIR=/path/to/gdma/configdir. Build bundled despite pre-built being detectable. >>> cmake -DENABLE_gdma=ON -DCMAKE_PREFIX_PATH=/path/to/unwanted/gdma/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_gdma=ON. table of contents. Interface to GDMA Distributed Multipole Analysis by A. J. Stone — gdma(); Installation; Input; Options; GDMA_LIMIT; GDMA_ORIGIN; GDMA_MULTIPOLE_UNITS; GDMA_RADIUS; GDMA_SWITCH. How to configure gdma for building Psi4. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/gdma-1.html:5918,detect,detecting,5918,psi4manual/1.1.0/gdma-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/gdma-1.html,4,['detect'],"['detectable', 'detecting']"
Safety," Generalized Douglas-Kroll Transformation,” A. Wolf,; M. Reiher, and B. A. Hess, J. Chem. Phys. 117, 9215 (2002).; (doi: 10.1063/1.1515314). How to configure dkh for building Psi4¶; Role and Dependencies. Role — In PSI4, DKH is a library that provides additional; quantum chemical capabilities (relativistic effects).; Downstream Dependencies — PSI4 (\(\Leftarrow\) optional) dkh; Upstream Dependencies — dkh \(\Leftarrow\) Fortran. CMake Variables. ENABLE_dkh — CMake variable toggling whether Psi4 builds with dkh; CMAKE_PREFIX_PATH — CMake list variable to specify where pre-built dependencies can be found. For dkh, set to an installation directory containing include/DKH/DKH_MANGLE.h; dkh_DIR — CMake variable to specify where pre-built dkh can be found. Set to installation directory containing share/cmake/dkh/dkhConfig.cmake; CMAKE_DISABLE_FIND_PACKAGE_dkh — CMake variable to force internal build of dkh instead of detecting pre-built; CMAKE_INSIST_FIND_PACKAGE_dkh — CMake variable to force detecting pre-built dkh and not falling back on internal build. Examples. Build bundled. >>> cmake -DENABLE_dkh=ON. Build without dkh. >>> cmake. Link against pre-built. >>> cmake -DENABLE_dkh=ON -DCMAKE_PREFIX_PATH=/path/to/dkh/root. >>> cmake -DENABLE_dkh=ON -Ddkh_DIR=/path/to/dkh/configdir. Build bundled despite pre-built being detectable. >>> cmake -DENABLE_dkh=ON -DCMAKE_PREFIX_PATH=/path/to/unwanted/dkh/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_dkh=ON. table of contents. Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess; Installation; Input; Keywords; RELATIVISTIC; DKH_ORDER. Reference; How to configure dkh for building Psi4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/dkh.html:3241,detect,detectable,3241,psi4manual/1.8.x/dkh.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/dkh.html,1,['detect'],['detectable']
Safety," Generalized Douglas-Kroll Transformation,” A. Wolf,; M. Reiher, and B. A. Hess, J. Chem. Phys. 117, 9215 (2002).; (doi: 10.1063/1.1515314). How to configure dkh for building Psi4¶; Role and Dependencies. Role — In PSI4, DKH is a library that provides additional; quantum chemical capabilities (relativistic effects).; Downstream Dependencies — PSI4 (\(\Leftarrow\) optional) dkh; Upstream Dependencies — dkh \(\Leftarrow\) Fortran. CMake Variables. ENABLE_dkh — CMake variable toggling whether Psi4 builds with dkh; CMAKE_PREFIX_PATH — CMake list variable to specify where pre-built dependencies can be found. For dkh, set to an installation directory containing include/DKH/DKH_MANGLE.h; dkh_DIR — CMake variable to specify where pre-built dkh can be found. Set to installation directory containing share/cmake/dkh/dkhConfig.cmake; CMAKE_DISABLE_FIND_PACKAGE_dkh — CMake variable to force internal build of dkh instead of detecting pre-built; CMAKE_INSIST_FIND_PACKAGE_dkh — CMake variable to force detecting pre-built dkh and not falling back on internal build. Examples. Build bundled. >>> cmake -DENABLE_dkh=ON. Build without dkh. >>> cmake. Link against pre-built. >>> cmake -DENABLE_dkh=ON -DCMAKE_PREFIX_PATH=/path/to/dkh/root. >>> cmake -DENABLE_dkh=ON -Ddkh_DIR=/path/to/dkh/configdir. Build bundled despite pre-built being detectable. >>> cmake -DENABLE_dkh=ON -DCMAKE_PREFIX_PATH=/path/to/unwanted/dkh/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_dkh=ON. table of contents. Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess; Installation; Input; Keywords; RELATIVISTIC; DKH_ORDER. Reference; How to configure dkh for building Psi4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/dkh.html:3241,detect,detectable,3241,psi4manual/1.9.x/dkh.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/dkh.html,1,['detect'],['detectable']
Safety," Interface to PCMSolver by R. Di Remigio¶; Code author: Roberto Di Remigio, T. Daniel Crawford, Andrew C. Simmonett; Section author: Roberto Di Remigio; Module: Keywords, PSI Variables, PCMSolver. PSI4 contains code to interface to the PCMSolver library developed; by R. Di Remigio and L. Frediani.; The PCMSolver library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable continuum model (PCM), a continuum solvation model [Tomasi:2005:2999]. Installation¶; Binary. PCMSolver is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, PCMSolver has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; PCMSolver can be obtained through conda install pcmsolver -c psi4.; Then enable it as a feature with ENABLE_PCMSolver,; hint its location with CMAKE_PREFIX_PATH,; and rebuild PSI4 to detect PCMSolver and activate dependent code. To remove a conda installation, conda remove pcmsolver. Source. If using PSI4 built from source and you want PCMSolver built from; from source also,; enable it as a feature with ENABLE_PCMSolver,; and let the build system fetch and build it and activate dependent code. Using the polarizable continuum model¶; The inclusion of a PCM description of the solvent into your calculation; can be achieved in two ways in PSI4, using either the PCMSolver or ddx package.; PCMSolver is based on a boundary-element discretisation [Cances:1998:309],; while ddx is based on a domain decomposition approach; [Cances:2013:054111] making it linear scaling.; For more details about ddx see the section on ddx.; Using PCMsolver is achieved instead by setting PCM true in your input file.; PSI4 understands the additional option PCM_SCF_TYPE with possible values total; (the default) or separate.; The latter forces the separate handlin",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/pcmsolver.html:1229,detect,detect,1229,psi4manual/1.7.x/pcmsolver.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/pcmsolver.html,4,['detect'],['detect']
Safety," Interface to PCMSolver by R. Di Remigio¶; Code author: Roberto Di Remigio, T. Daniel Crawford, Andrew C. Simmonett; Section author: Roberto Di Remigio; Module: Keywords, PSI Variables, PCMSolver. PSI4 contains code to interface to the PCMSolver library developed; by R. Di Remigio and L. Frediani.; The PCMSolver library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable continuum model (PCM), a continuum solvation model [Tomasi:2005:2999]. Installation¶; Binary. PCMSolver is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell).; If using the PSI4 binary, PCMSolver has already been installed alongside.; If using PSI4 built from source, and anaconda or miniconda has; already been installed (instructions at Quick Installation),; PCMSolver can be obtained through conda install pcmsolver -c psi4.; Then enable it as a feature with ENABLE_PCMSolver,; hint its location with CMAKE_PREFIX_PATH,; and rebuild PSI4 to detect PCMSolver and activate dependent code. To remove a conda installation, conda remove pcmsolver. Source. If using PSI4 built from source and you want PCMSolver built from; from source also,; enable it as a feature with ENABLE_PCMSolver,; and let the build system fetch and build it and activate dependent code. Using the polarizable continuum model¶; The inclusion of a PCM description of the solvent into your calculation; is achieved by setting PCM true in your input file.; PSI4 understands the additional option PCM_SCF_TYPE with possible values total; (the default) or separate.; The latter forces the separate handling of nuclear and electronic electrostatic potentials and; polarization charges. It is mainly useful for debugging.; For the calculation of vertical excitation energies with PCM non-equilibrium solvation should be included with:; pcm = {; Medium {; Nonequilibrium = True; }; }. Note; At present PCM can only be used for energy calculatio",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/pcmsolver-1.html:1229,detect,detect,1229,psi4manual/1.4.0/pcmsolver-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/pcmsolver-1.html,5,['detect'],['detect']
Safety," MOLDEN_WRITE¶. Do write a MOLDEN output file? If so, the filename will end in .molden, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. ORBITALS_WRITE¶. File name (case sensitive) to which to serialize Wavefunction orbital data. Type: string; Default: No Default. PRINT_BASIS¶. Do print the basis set?. Type: boolean; Default: false. PRINT_MOS¶. Do print the molecular orbitals?. Type: boolean; Default: false. QCHF¶. Do perform a QCHF computation?. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Cfour Interface: Keyword translates into CFOUR_REFERENCE. Type: string; Possible Values: RHF, ROHF, UHF, CUHF, RKS, UKS; Default: RHF. SAPGAU_BASIS¶. The potential basis set used for the SAPGAU guess. Type: string; Default: sap_helfem_large. SAVE_JK¶. Keep JK object for later use?. Type: boolean; Default: false. SCF_MEM_SAFETY_FACTOR¶. Memory safety factor for allocating JK. Type: double; Default: 0.75. SCF_PROPERTIES¶. SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. S_CHOLESKY_TOLERANCE¶. Tolerance for partial Cholesky decomposition of overlap matrix. Type: conv double; Default: 1e-8. S_ORTHOGONALIZATION¶. SO orthogonalization: automatic, symmetric, or canonical?. Type: string; Possible Values: AUTO, SYMMETRIC, CANONICAL, PARTIALCHOLESKY; Default: AUTO. S_TOLERANCE¶. Minimum S matrix eigenvalue to allow before linear dependencies are removed. Type: conv double; Default: 1e-7. Convergence Control/Stabilization¶. BASIS_GUESS¶. Accelerate convergence by performing a preliminary SCF with this small basis set followed by projection into the full target basis. A value of TRUE turns on projection using the Defaults small basis set 3-21G, pcseg-0, or def2-SV(P). Type: string; Default: FALSE. DAMPING_CONVERGENCE¶. The density convergence threshol",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__scf.html:2774,safe,safety,2774,psi4manual/1.8.x/autodir_options_c/module__scf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__scf.html,3,['safe'],['safety']
Safety," MP2.5 cc-pVDZ gradient for the H2O molecule. mints10; H2 with tiny basis set, to test basis set parser’s handling of integers. scf-occ; force occupations in scf. x2c-perturb-h; Test SFX2C-1e with a static electric field on He aug-cc-pVTZ. cisd-h2o+-1; 6-31G** H2O+ Test CISD Energy Point. dft-custom; DFT custom functional test. omp2p5-grad1; OMP2.5 cc-pVDZ gradient for the H2O molecule. cc22; ROHF-EOM-CCSD/DZ on the lowest two states of each irrep in \(^{3}B_1\) CH2. dfcasscf-sa-sp; Example of state-averaged CASSCF for the C2 molecule. decontract; RHF/cc-pvdz-decontract HCl single-point energy Testing the in line -decontract option for basis sets. dct8; DCT calculation for the NH3+ radical using the ODC-12 and ODC-13 functionals. This performs both simultaneous and QC update of the orbitals and cumulant using DIIS extrapolation. Four-virtual integrals are first handled in the MO Basis for the first two energy computations. In the next computation ao_basis=disk algorithm is used, where the transformation of integrals for four-virtual case is avoided. cc52; CCSD Response for H2O2. molden2; Test of the superposition of atomic densities (SAD) guess, using a highly distorted water geometry with a cc-pVDZ basis set. This is just a test of the code and the user need only specify guess=sad to the SCF module’s (or global) options in order to use a SAD guess. The test is first performed in C2v symmetry, and then in C1. dft-psivar; HF and DFT variants single-points on zmat methane, mostly to test that PSI variables are set and computed correctly. Now also testing that CSX harvesting PSI variables correctly update ref_dft_2e/xc due to new BraggSlater radii. mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule ob",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_corepsi4.html:26667,avoid,avoided,26667,psi4manual/1.6.x/autodoc_testsuite_corepsi4.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_corepsi4.html,2,['avoid'],['avoided']
Safety," Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. A version of MPI is required to compile distributed-parallel PSI;; MPICH2 is recommended.; (Note: MPICH2-1.1.0 had trouble with some header files. MPICH2-1.2.1; seems to fix it.). GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures, to compile with MADNESS, or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). To make a distributed-parallel version with MADNESS, you may also need:. libtool (called by autoreconf). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and Installatio",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/installfile.html:1564,detect,detected,1564,psi4manual/4.0b3/installfile.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/installfile.html,1,['detect'],['detected']
Safety," Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and Installation¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for developers working in the development; branch), one needs to first run autoconf to generate; the file “configure” in the top-level psi4",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/installfile.html:1564,detect,detected,1564,psi4manual/4.0b4/installfile.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/installfile.html,1,['detect'],['detected']
Safety," Note; The F77 compiler is only used to determine the symbol-naming; convention of and some system routines for the BLAS and LAPACK libraries; on a few architectures. It is optional in a few cases (e.g. Mac OS X; systems). Optimized BLAS library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). Optimized LAPACK library (preferably NOT one supplied by a standard; Linux distribution; see recommendations at Section IV below). POSIX threads (Pthreads) library (optional). Python interpreter (2.6 or higher; psi4 is Python3 compatible). Python developer libraries corresponding to your interpreter. Note; To check to see if you have the Python developer libraries; installed look for the Python config program. If your Python interpreter; is named python look for the config program python-config,; likewise if your interpreter is python2.6, the config program is; python2.6-config. If you cannot find the config program the; developer libraries will not be detected and the PSI4 configure script; will fail. The library is called python-devel for Fedora and; python-dev for Ubuntu. GNU utilities: (see http://www.gnu.org). make. autoconf (version 2.52 or higher). Note; autoconf is only needed for special; architectures, to compile with MADNESS, or to compile the; development branch. aclocal. fileutils (esp. install). For documentation: (available pre-built off http://www.psicode.org). latex; sphinx (version 1.1 or higher); dvipng (for latex math in html). To make a distributed-parallel version with MADNESS, you may also need:. libtool (called by autoreconf). For Ubuntu users, you will need the following packages installed:; gfortran [for linking to BLAS/LAPACK], g++, autoconf, python-dev. II. Brief Summary of Configuration, Compilation, and Installation¶; This section outlines the main steps of configuring, compiling, and; installing PSI. More detail is given below in Section III. Autoconf. For unusual architectures (or for deve",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/installfile.html:1564,detect,detected,1564,psi4manual/4.0b5/installfile.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/installfile.html,1,['detect'],['detected']
Safety," OFF often results in poor convergence and thus cannot be recommended. Type: string; Possible Values: RLE, DIIS, NOJACOBI, OFF; Default: DIIS. CFOUR_CC_MAXCYC (CFOUR)¶CFOUR — Specifies the maximum number of iterations in solving the CC amplitude equations. Type: integer; Default: 50. CFOUR_CC_PROGRAM (CFOUR)¶CFOUR — Specifies which CC program is used. The available options are VCC (=0), ECC (=1), MRCC (=2), and EXTERNAL (=3). The default for all calculations is currently VCC which requests usage of xvcc, but in many cases (e.g., for CCSD and CCSD(T)) ECC should be preferred due to the better performance of xecc (available currently for CCSD, CCSD+T, CCSD(T), and closed-shell CCSDT-n, CC3, and CCSDT). MRCC and External are intended for CC programs outside the CFOUR suite, e.g., the general CC module mrcc written by M. Kallay (Budapest, Hungary). Default: VCC Note: Using the option ECC is not recommended for ROHF gradients. That is, if you are doing a geometry optimization with ROHF as your reference wave function then it is safe to use the option VCC. Psi4 Interface: Keyword set according to best practice for the computational method CFOUR_CALC_LEVEL, reference CFOUR_REFERENCE (NYI) and derivative level CFOUR_DERIV_LEVEL according to Table Best Practices when method specified by argument to computation command (e.g., when energy('c4-ccsd') requested but not when energy('cfour') requested). Value can always be set explicitly. Type: string; Possible Values: VCC, ECC, NCC, MRCC, EXTERNAL; Default: VCC. CFOUR_CHARGE (CFOUR)¶CFOUR — Specifies the molecular charge. Psi4 Interface: Keyword set from active molecule. Type: integer; Default: 0. CFOUR_CIS_CONV (CFOUR)¶CFOUR — Specifies the convergence threshold as \(10^{-N}\) for CIS calculations. Type: integer; Default: 5. CFOUR_CONTINUUM (CFOUR)¶CFOUR — Signifies that one or more “continuum” orbitals should be added to the calculation. VIRTUAL and DVIRTUAL specify one or two orbital which should be initially unoccupied (in the",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_glossary_options_c-1.html:27822,safe,safe,27822,psi4manual/1.4.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_glossary_options_c-1.html,9,['safe'],['safe']
Safety," PSI4 from source and use; Libxc from conda without thinking, consult sec:condapsi4dev. To remove a conda installation, conda remove libxc. Source. Note that PSI4 has forked and slightly modified upstream Libxc from; https://gitlab.com/libxc/libxc to regain functionality. If using PSI4 built from source and you want Libxc built from; from source also,; let the build system fetch and build it and activate dependent code. How to configure Libxc for building Psi4¶; Role and Dependencies. Role — In PSI4, Libxc is a library that provides essential; density functional definitions and compositions.; Downstream Dependencies — PSI4 \(\Leftarrow\) Libxc; Upstream Dependencies — Libxc \(\Leftarrow\) None. CMake Variables. CMAKE_PREFIX_PATH — CMake list variable to specify where pre-built dependencies can be found. For Libxc, set to an installation directory containing include/libxc/xc.h; Libxc_DIR — CMake variable to specify where pre-built Libxc can be found. Set to installation directory containing share/cmake/Libxc/LibxcConfig.cmake; CMAKE_DISABLE_FIND_PACKAGE_Libxc — CMake variable to force internal build of Libxc instead of detecting pre-built; CMAKE_INSIST_FIND_PACKAGE_Libxc — CMake variable to force detecting pre-built Libxc and not falling back on internal build. Examples. Build bundled. >>> cmake. Link against pre-built. >>> cmake -DCMAKE_PREFIX_PATH=/path/to/libxc/root. >>> cmake -DLibxc_DIR=/path/to/libxc/configdir. Build bundled despite pre-built being detectable. >>> cmake -DCMAKE_PREFIX_PATH=/path/to/unwanted/libxc/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_Libxc=ON. table of contents. Interface to Libxc by M. A. L. Marques; Installation; How to configure Libxc for building Psi4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/libxc-1.html:2115,detect,detecting,2115,psi4manual/1.3.2/libxc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/libxc-1.html,6,['detect'],"['detectable', 'detecting']"
Safety," PSI4 to detect Libxc and activate dependent code. To remove a conda installation, conda remove libxc. Source. Note that PSI4 has forked and slightly modified upstream Libxc from; https://gitlab.com/libxc/libxc to regain functionality. If using PSI4 built from source and you want Libxc built from; from source also,; let the build system fetch and build it and activate dependent code. How to configure Libxc for building Psi4¶; Role and Dependencies. Role — In PSI4, Libxc is a library that provides essential; density functional definitions and compositions.; Downstream Dependencies — PSI4 \(\Leftarrow\) Libxc; Upstream Dependencies — Libxc \(\Leftarrow\) None. CMake Variables. CMAKE_PREFIX_PATH — CMake list variable to specify where pre-built dependencies can be found. For Libxc, set to an installation directory containing include/libxc/xc.h; Libxc_DIR — CMake variable to specify where pre-built Libxc can be found. Set to installation directory containing share/cmake/Libxc/LibxcConfig.cmake; CMAKE_DISABLE_FIND_PACKAGE_Libxc — CMake variable to force internal build of Libxc instead of detecting pre-built; CMAKE_INSIST_FIND_PACKAGE_Libxc — CMake variable to force detecting pre-built Libxc and not falling back on internal build. Examples. Build bundled. >>> cmake. Link against pre-built. >>> cmake -DCMAKE_PREFIX_PATH=/path/to/libxc/root. >>> cmake -DLibxc_DIR=/path/to/libxc/configdir. Build bundled despite pre-built being detectable. >>> cmake -DCMAKE_PREFIX_PATH=/path/to/unwanted/libxc/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_Libxc=ON. table of contents. Interface to Libxc by M. A. L. Marques; Installation; How to configure Libxc for building Psi4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to Libxc by M. A. L. Marques. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/libxc.html:2030,detect,detecting,2030,psi4manual/1.6.x/libxc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/libxc.html,3,['detect'],"['detectable', 'detecting']"
Safety," PSI4‘s speed and efficiency depends on the corresponding; speed and efficiency of the linked BLAS and LAPACK libraries; (especially the former). Consider the following recommendations:. It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat, as it is usually just the completely; unoptimized netlib distribution. The choice of LAPACK is less; critical, and so the unoptimized netlib distribution is acceptable.; Perhaps the best choice, if available, is Intel’s MKL library,; which includes efficient threaded BLAS and LAPACK (as of PSI4; v1.1, earliest known working version is MKL 2013; as of v1.4,; should use at leat MKL 2019). MKL, which is; freely available through conda, is the only threaded BLAS/LAPACK; distribution fully supported by PSI4.; On Mac, the native Accelerate libraries are very nice and would; be recommended but for the potential conflict between PSI4; BLAS and NumPy BLAS. Unless you’ve a special NumPy, avoid!; The open-source LAPACK distributions OpenBLAS (formerly GotoBLAS); mostly works. Use it at your own risk and after testing your; particular distribution, including tests run multithreaded,; if you intend to run PSI4 so. Use at least 0.2.15, and; pay attention to how it was compiled - unthreaded seems safe,; openmp-threaded is mostly safe, default pthreaded is not safe. See; https://github.com/psi4/psi4/issues/1009 for recent analysis.; Another open-source LAPACK distribution, ATLAS had; stability issues with the DFOCC module at last testing,; https://github.com/psi4/psi4/issues/391.; ACML libraries are known to work with PSI4 v1.1 at ACML 6. Because of how link loaders work, at runtime, the BLAS of PSI4; and the BLAS of NumPy are not independent. There can be unpredictable; but reproducible numerical and thread-scaling errors if PSI4; and NumPy BLAS don’t match down to the library name (that is,; libmkl_rt, libmkl_core.so, libmkl_core.a are not; interchangeable). See https://github.com/psi4/psi4/issues/10",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/build_planning-1.html:44496,avoid,avoid,44496,psi4manual/1.4.0/build_planning-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/build_planning-1.html,9,['avoid'],['avoid']
Safety," Psi4 builds with CheMPS2; CMAKE_PREFIX_PATH — CMake list variable to specify where pre-built dependencies can be found. For CheMPS2, set to an installation directory containing include/chemps2/DMRG.h; CheMPS2_DIR — CMake variable to specify where pre-built CheMPS2 can be found. Set to installation directory containing share/cmake/CheMPS2/CheMPS2Config.cmake; CMAKE_DISABLE_FIND_PACKAGE_CheMPS2 — CMake variable to force internal build of CheMPS2 instead of detecting pre-built. Examples. Build bundled. >>> cmake -DENABLE_CheMPS2=ON. Build without CheMPS2. >>> cmake. Build bundled with specific HDF5. >>> cmake -DENABLE_CheMPS2=ON -DCMAKE_PREFIX_PATH=/path/to/hdf5. Link against pre-built. >>> cmake -DENABLE_CheMPS2=ON -DCMAKE_PREFIX_PATH=/path/to/chemps2/root. >>> cmake -DENABLE_CheMPS2=ON -DCheMPS2_DIR=/path/to/chemps2/configdir. Link against pre-built with specific HDF5. >>> cmake -DENABLE_CheMPS2=ON -DCMAKE_PREFIX_PATH=""/path/to/chemps2/root;/path/to/hdf5/root"". Build bundled despite pre-built being detectable. >>> cmake -DENABLE_CheMPS2=ON -DCMAKE_PREFIX_PATH=/path/to/unwanted/chemps2/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_CheMPS2=ON. How to fix “plugin needed to handle lto object” when building CheMPS2¶; For building with GCC, errors involving unresolved symbols or a message; “plugin needed to handle lto object” may indicate a failure of the; interprocedural optimization. This can be resolved by passing full; locations to gcc toolchain utilities to setup or cmake:; -DCMAKE_RANLIB=/path/to/gcc-ranlib -DCMAKE_AR=/path/to/gcc-ar .; Details at https://github.com/psi4/psi4/issues/414. table of contents. Interface to CheMPS2 by S. Wouters; Installation; Methods; DMRG Keywords; DMRG_CASPT2_CALC; DMRG_CASPT2_IMAG; DMRG_CASPT2_IPEA; DMRG_CASPT2_ORBS; DMRG_DIIS; DMRG_DIIS_WRITE; DMRG_EXCITATION; DMRG_IRREP; DMRG_LOCAL_INIT; DMRG_MOLDEN_WRITE; DMRG_MPS_WRITE; DMRG_MULTIPLICITY; DMRG_OPDM_AO_PRINT; DMRG_PRINT_CORR; DMRG_SCF_ACTIVE_SPACE; DMRG_SCF_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/chemps2-1.html:6652,detect,detectable,6652,psi4manual/1.1.0/chemps2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/chemps2-1.html,2,['detect'],['detectable']
Safety," Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT¶. Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION¶. Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS¶. Manual link bond specification [[Atom1, Atom2], ...]. Type: array; Default: No Default. FISAPT_PLOT_FILEPATH¶. Filepath to drop scalar data. Type: string; Default: plot/. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. For ISAPT, a variational collapse problem seems to occur for even rather modest values of this cutoff, when DF is used and when very close contacts occur. Therefore, we will be safe and turn it off (this does not affect performance overtly). Type: conv double; Default: 0.0. LOCAL_CONVERGENCE¶. Relative convergence in orbital localization. Type: conv double; Default: 1.0e-12. LOCAL_IBO_POWER¶. IBO localization metric power. Type: integer; Default: 4. LOCAL_IBO_STARS¶. IBO Centers for Pi Degeneracy. Type: array; Default: No Default. LOCAL_IBO_STARS_COMPLETENESS¶. IBO Charge metric for classification as Pi. Type: double; Default: 0.90. LOCAL_IBO_USE_STARS¶. IBO Stars procedure. Type: boolean; Default: false. LOCAL_MAXITER¶. Maximum iterations in localization. Type: integer; Default: 1000. MAXITER¶. Maximum number of iterations for CPHF. Type: integer; Default: 50. SSAPT0_SCALE¶. Do sSAPT0 exchange-scaling with F-SAPT. Type: boolean; Default: false. Expert¶. CUBIC_BASIS_TOLERANCE¶. CubicScalarGrid basis cutoff. Type: conv double; Default: 1.0e-12. CUBIC_BLOCK_MAX_POINTS¶. CubicScalarGrid maximum number of grid points per evaluation block. Type: integer; Default: 1000. FISAPT_MEM_SAFE",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__fisapt-1.html:2109,safe,safe,2109,psi4manual/1.0.0/autodir_options_c/module__fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__fisapt-1.html,2,['safe'],['safe']
Safety," Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH (FISAPT); FISAPT — Filepath to drop F-SAPT data. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE (FISAPT); FISAPT — Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE (FISAPT); FISAPT — Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH (FISAPT); FISAPT — Filepath to drop sSAPT0 exchange-scaling F-SAPT data. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT (FISAPT); FISAPT — Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION (FISAPT); FISAPT — Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS (FISAPT); FISAPT — Manual link bond specification [[Atom1, Atom2], …]. Type: array; Default: No Default. FISAPT_MEM_SAFETY_FACTOR (FISAPT); FISAPT (Expert) — Memory safety factor for heavy FISAPT operations. Type: double; Default: 0.9. FISAPT_PLOT_FILEPATH (FISAPT); FISAPT — Filepath to drop scalar data. Type: string; Default: plot/. FITTING_ALGORITHM (CPHF); CPHF — Fitting algorithm (0 for old, 1 for new). Type: integer; Default: 0. FITTING_CONDITION (CPHF); CPHF — The maximum reciprocal condition allowed in the fitting metric. Type: double; Default: 1.0e-12. FIXED_BEND (OPTKING); OPTKING — Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_COORD_FORCE_CONSTANT (OPTKING); OPTKING — In constrained optimizations, for coordinates with user-specified equilibrium values, this is the initial force constant (in au) used to apply an additional force to each coordinate. Type: double; Default: 0.5. FIXED_DIHEDRAL (OPTKING); OPTKING — Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE (OPTKING); OPTKING — Specify distances b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_glossary_options_c-1.html:127891,safe,safety,127891,psi4manual/1.2.1/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_glossary_options_c-1.html,2,['safe'],['safety']
Safety," Type: integer; Default: 10. SAPT_FDDS_V2_RHO_CUTOFF (SAPT)¶SAPT (Expert) — Minimum rho cutoff for the in the LDA response for FDDS. Type: double; Default: 1.e-6. SAPT_LEVEL (SAPT)¶SAPT — The level of theory for SAPT. Type: string; Possible Values: SAPT0, SAPT2, SAPT2+, SAPT2+3; Default: SAPT0. SAPT_MEM_CHECK (SAPT)¶SAPT — Do force SAPT2 and higher to die if it thinks there isn’t enough memory? Turning this off is ill-advised. Type: boolean; Default: true. SAPT_MEM_FACTOR (SAPT)¶SAPT (Expert) — Proportion of memory available for the DF-MP2 three-index integral buffers used to evaluate dispersion. Type: double; Default: 0.9. SAPT_MEM_SAFETY (SAPT)¶SAPT — Memory safety. Type: double; Default: 0.9. SAPT_QUIET (SAPT)¶SAPT (Expert) — Interior option to clean up printing. Type: boolean; Default: false. SAVE_JK (SCF)¶SCF — Keep JK object for later use?. Type: boolean; Default: false. SAVE_UHF_NOS (SCF)¶SCF — Save the UHF NOs. Type: boolean; Default: false. SCF_MEM_SAFETY_FACTOR (SCF)¶SCF — Memory safety factor for allocating JK. Type: double; Default: 0.75. SCF_PROPERTIES (SCF)¶SCF — SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. SCF_TYPE (CPHF)¶CPHF — SCF Type. Type: string; Possible Values: DIRECT, DF, PK, OUT_OF_CORE, PS, INDEPENDENT, GTFOCK; Default: DIRECT. SCF_TYPE (GLOBALS)¶GLOBALS — What algorithm to use for the SCF computation. See Table SCF Convergence & Algorithm for default algorithm for different calculation types. Type: string; Possible Values: DIRECT, DF, MEM_DF, DISK_DF, PK, OUT_OF_CORE, CD, GTFOCK; Default: PK. SCHMIDT_ADD_RESIDUAL_TOLERANCE (CCEOM)¶CCEOM — Minimum absolute value above which a guess vector to a root is added to the Davidson algorithm in the EOM-CC iterative procedure. Type: conv double; Default: 1e-3. SCREENING (GLOBALS)¶GLOBALS — The type of screening used when computing two-electron integrals. Type: string; Possible Values: SCHWARZ, CSAM, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_glossary_options_c-1.html:214131,safe,safety,214131,psi4manual/1.5.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_glossary_options_c-1.html,2,['safe'],['safety']
Safety," Type: integer; Default: 10. SAPT_FDDS_V2_RHO_CUTOFF (SAPT)¶SAPT (Expert) — Minimum rho cutoff for the in the LDA response for FDDS. Type: double; Default: 1.e-6. SAPT_LEVEL (SAPT)¶SAPT — The level of theory for SAPT. Type: string; Possible Values: SAPT0, SAPT2, SAPT2+, SAPT2+3; Default: SAPT0. SAPT_MEM_CHECK (SAPT)¶SAPT — Do force SAPT2 and higher to die if it thinks there isn’t enough memory? Turning this off is ill-advised. Type: boolean; Default: true. SAPT_MEM_FACTOR (SAPT)¶SAPT (Expert) — Proportion of memory available for the DF-MP2 three-index integral buffers used to evaluate dispersion. Type: double; Default: 0.9. SAPT_MEM_SAFETY (SAPT)¶SAPT — Memory safety. Type: double; Default: 0.9. SAPT_QUIET (SAPT)¶SAPT (Expert) — Interior option to clean up printing. Type: boolean; Default: false. SAVE_JK (SCF)¶SCF — Keep JK object for later use?. Type: boolean; Default: false. SAVE_UHF_NOS (SCF)¶SCF — Save the UHF NOs. Type: boolean; Default: false. SCF_MEM_SAFETY_FACTOR (SCF)¶SCF — Memory safety factor for allocating JK. Type: double; Default: 0.75. SCF_PROPERTIES (SCF)¶SCF — SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. SCF_TYPE (CPHF)¶CPHF — SCF Type. Type: string; Possible Values: DIRECT, DF, PK, OUT_OF_CORE, PS, INDEPENDENT, GTFOCK; Default: DIRECT. SCF_TYPE (GLOBALS)¶GLOBALS — What algorithm to use for the SCF computation. See Table SCF Convergence & Algorithm for default algorithm for different calculation types. Type: string; Possible Values: DIRECT, DF, MEM_DF, DISK_DF, PK, OUT_OF_CORE, CD, GTFOCK; Default: PK. SCHMIDT_ADD_RESIDUAL_TOLERANCE (CCEOM)¶CCEOM — Minimum absolute value above which a guess vector to a root is added to the Davidson algorithm in the EOM-CC iterative procedure. Type: conv double; Default: 1e-3. SCREENING (SAPT)¶SAPT — Do use Combined Schwarz Approximation Maximum (CSAM) screening on two-electron integrals. This is a slightly tighter b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_glossary_options_c-1.html:212772,safe,safety,212772,psi4manual/1.4.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_glossary_options_c-1.html,2,['safe'],['safety']
Safety," \(\rho(\mathbf{r}) = \rho_\alpha(\mathbf{r}) - \rho_\beta(\mathbf{r})\). BASIS_FUNCTIONSThis task is useful to produce cube files of the atomic orbital basis; functions \(\chi_\mu(\mathbf{r})\). ESPCalculates the total (nuclear + electronic) electrostatic potential; \(V(\mathbf{r})\). DUAL_DESCRIPTORCalculates the dual descriptor from frontier orbitals:; \(f^2(\mathbf{r})=\rho_{\mathrm{LUMO}}(\mathbf{r})-\rho_{\mathrm{HOMO}}(\mathbf{r})\).; The dual descriptor is a good measure of nucleophilicity and electrophilicity,; containing information essentially equivalent to both Fukui functions combined.; More details on the dual descriptor itself can be found in [Morell:2005:205],; while the current implementation is described in [Martinez-Araya:2015:451].; This feature is currently only supported for closed shell systems. Note; The ESP task requires the user to specify a density-fitting basis; via the DF_BASIS_SCF keyword. Warning; It is important to specify the CUBEPROP_ORBITALS option when; dealing with large molecules to avoid running out of disk space.; For example, using the default grid spacing of; 0.2 Ångström, the size of a single cube file for a molecule like water; is of the order of 1.4 MB. For a molecule with 200 basis functions, the cube; files for all the orbitals occupy more than half a GB. Keywords¶. CUBEPROP_TASKS¶. Properties to compute. Valid tasks include: DENSITY - Da, Db, Dt, Ds; ESP - Dt, ESP; ORBITALS - Psi_a_N, Psi_b_N; BASIS_FUNCTIONS - Phi_N; LOL - LOLa, LOLb; ELF - ELFa, ELFb; FRONTIER_ORBITALS - Psi_a_N_HOMO + Psi_a_N_LUMO; DUAL_DESCRIPTOR - DUAL_N_HOMO-M_LUMO. Type: array; Default: No Default. CUBEPROP_FILEPATH¶. Directory to which to write cube files. Default is the input file directory. Type: string; Default: No Default. CUBEPROP_ORBITALS¶. List of orbital indices for which cube files are generated (1-based, \(+\) for alpha, \(-\) for beta). All orbitals computed if empty. Type: array; Default: No Default. CUBEPROP_BASIS_FUNCTIONS¶. List ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/cubeprop-1.html:5461,avoid,avoid,5461,psi4manual/1.4.0/cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/cubeprop-1.html,9,['avoid'],['avoid']
Safety," a value \(\alpha\), performs scaling with \((Exch10 / Exch10(S^2))^{\alpha}\). Type: string; Default: FALSE. INTS_TOLERANCE¶. Schwarz screening threshold. Minimum absolute value below which all three-index DF integrals and those contributing to four-index integrals are neglected. The default is conservative, but there isn’t much to be gained from loosening it, especially for higher-order SAPT. Type: conv double; Default: 1.0e-12. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DEBUG¶. The amount of information to print to the output file. Type: integer; Default: 0. Specific open-shell SAPT0 keywords¶. SAPT_MEM_SAFETY¶. Memory safety. Type: double; Default: 0.9. COUPLED_INDUCTION¶. Solve the CPHF equations to compute coupled induction and exchange-induction. These are not available for ROHF, and the option is automatically false in this case. In all other cases, coupled induction is strongly recommended. Only turn it off if the induction energy is not going to be used. Type: boolean; Default: true. Higher-Order SAPT¶; For smaller systems (up to the size of a nucleic acid base pair), more; accurate interaction energies can be obtained through higher-order SAPT; computations. The SAPT module can perform density-fitted evaluations; of SAPT2, SAPT2+, SAPT2+(3), and SAPT2+3 energies for closed-shell systems; only. Publications resulting from the use of the higher-order SAPT code; should cite the following:; [Hohenstein:2010:014101].; For methods SAPT2+ and above, one can replace the many-body treatment of; dispersion by an improved method based on coupled-cluster doubles (CCD).; This approach tends to give good i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/sapt-1.html:18367,safe,safety,18367,psi4manual/1.3.2/sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/sapt-1.html,2,['safe'],['safety']
Safety," a value \(\alpha\), performs scaling with \((Exch10 / Exch10(S^2))^{\alpha}\). Type: string; Default: FALSE. INTS_TOLERANCE¶. Schwarz screening threshold. Minimum absolute value below which all three-index DF integrals and those contributing to four-index integrals are neglected. The default is conservative, but there isn’t much to be gained from loosening it, especially for higher-order SAPT. Type: conv double; Default: 1.0e-12. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DEBUG¶. The amount of information to print to the output file. Type: integer; Default: 0. Specific open-shell SAPT0 keywords¶. SAPT_MEM_SAFETY¶. Memory safety. Type: double; Default: 0.9. COUPLED_INDUCTION¶. Solve the CPHF equations to compute coupled induction and exchange-induction. These are not available for ROHF, and the option is automatically false in this case. In all other cases, coupled induction is strongly recommended. Only turn it off if the induction energy is not going to be used. Type: boolean; Default: true. SAPT(DFT)¶; In general, SAPT(DFT) should provide more accurate interaction energy; components, and overall interaction energies, than SAPT0. The drawback; is SAPT(DFT) method is more computationally demanding than SAPT0,; SAPT(DFT) can still be applied to medium-sized or large systems. The; SAPT(DFT) module was employed successfully in computations of systems; with up to 2000 basis functions, and the code should be scalable to; 3000 basis functions. Like higher-order SAPT, SAPT(DFT) requires; sufficient memory to hold \(2ovN_aux\) doubles.; SAPT(DFT) requires a few special treatments to obtain accurate; result. Th",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/sapt-1.html:20680,safe,safety,20680,psi4manual/1.4.0/sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/sapt-1.html,9,['safe'],['safety']
Safety," active criteria are fulfilled. [5](1, 2, 3) Convergence achieved when Max Force and one of Max Energy or Max Disp are fulfilled. [6](1, 2, 3, 4, 5) Normal convergence achieved when all four criteria (Max Force, RMS Force,; Max Disp, and RMS Disp) are fulfilled. To help with flat; potential surfaces, alternate convergence achieved when 100\(\times\)rms force is less; than RMS Force criterion. [7]Compensates for difficulties in converging geometry optmizations of supermolecular complexes; tightly, where large rms disp and max disp may result from flat potential surfaces even when; max force and/or rms force are small. For ultimate control, specifying a value for any of the five monitored options activates that; criterium and overwrites/appends it to the criteria set by G_CONVERGENCE.; Note that this revokes the special convergence arrangements detailed in notes [5] and [6]; and instead requires all active criteria to be fulfilled to; achieve convergence. To avoid this revokation, turn on keyword FLEXIBLE_G_CONVERGENCE. Output¶; The progress of a geometry optimization can be monitored by grepping the output file for the; tilde character (~). This produces a table like the one below that shows; for each iteration the value for each of the five quantities and whether the criterion; is active and fulfilled (*), active and unfulfilled ( ), or inactive (o).; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10--------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -38.91591820 -3.89e+01 6.91e-02 5.72e-02 o 1.42e-01 1.19e-01 o ~; 2 -38.92529543 -9.38e-03 6.21e-03 3.91e-03 o 2.00e-02 1.18e-02 o ~; 3 -38.92540669 -1.11e-04 4.04e-03 2.46e-03",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/optking-1.html:14233,avoid,avoid,14233,psi4manual/1.2.1/optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/optking-1.html,4,['avoid'],['avoid']
Safety," aligned (and atom-ordered) geometry. Return type; determined by concern_mol type. Return type:; float, tuple, qcdb.Molecule or psi4.core.Molecule. BFS(seed_atoms=None, bond_threshold=1.2, return_arrays=False, return_molecules=False, return_molecule=False)[source]¶; Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Parameters:. self (qcdb.Molecule or psi4.core.Molecule) – ; seed_atoms (List) – List of lists of atoms (0-indexed) belonging to independent fragments.; Useful to prompt algorithm or to define intramolecular fragments through; border atoms. Example: [[1, 0], [2]]; bond_threshold (float) – Factor beyond average of covalent radii to determine bond cutoff.; return_arrays (bool) – If True, also return fragments as list of arrays.; return_molecules (bool) – If True, also return fragments as list of Molecules.; return_molecule (bool) – If True, also return one big Molecule with fragmentation encoded. Returns:. bfs_map (list of lists) – Array of atom indices (0-indexed) of detected fragments.; bfs_arrays (tuple of lists of ndarray, optional) – geom, mass, elem info per-fragment.; Only provided if return_arrays is True.; bfs_molecules (list of qcdb.Molecule or psi4.core.Molecule, optional) – List of molecules, each built from one fragment. Center and; orientation of fragments is fixed so orientation info from self is; not lost. Loses chgmult and ghost/dummy info from self and contains; default chgmult.; Only provided if return_molecules is True.; Returned are of same type as self.; bfs_molecule (qcdb.Molecule or psi4.core.Molecule, optional) – Single molecule with same number of real atoms as self with atoms; reordered into adjacent fragments and fragment markers inserted.; Loses ghost/dummy info from self; keeps total charge but not total mult.; Only provided if return_molecule is True.; Returned is of same type as self.; Authors; ——-; Original code from Michael S. Marshall, linear-scaling algorithm from; Trent M. Parker, revamped b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.Molecule.html:14235,detect,detected,14235,psi4manual/1.8.x/api/psi4.core.Molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.Molecule.html,1,['detect'],['detected']
Safety," as it is usually just the completely; unoptimized netlib distribution. The choice of LAPACK is less; critical, and so the unoptimized netlib distribution is acceptable.; Perhaps the best choice, if available, is Intel’s MKL library,; which includes efficient threaded BLAS and LAPACK (as of PSI4; v1.1, earliest known working version is MKL 2013; as of v1.4,; should use at leat MKL 2019). MKL, which is; freely available through conda, is the only threaded BLAS/LAPACK; distribution fully supported by PSI4.; On Mac, the native Accelerate libraries are very nice and would; be recommended but for the potential conflict between PSI4; BLAS and NumPy BLAS. Unless you’ve a special NumPy, avoid!; The open-source LAPACK distributions OpenBLAS (formerly GotoBLAS); mostly works. Use it at your own risk and after testing your; particular distribution, including tests run multithreaded,; if you intend to run PSI4 so. Use at least 0.2.15, and; pay attention to how it was compiled - unthreaded seems safe,; openmp-threaded is mostly safe, default pthreaded is not safe. See; https://github.com/psi4/psi4/issues/1009 for recent analysis.; Another open-source LAPACK distribution, ATLAS had; stability issues with the DFOCC module at last testing,; https://github.com/psi4/psi4/issues/391.; ACML libraries are known to work with PSI4 v1.1 at ACML 6. Because of how link loaders work, at runtime, the BLAS of PSI4; and the BLAS of NumPy are not independent. There can be unpredictable; but reproducible numerical and thread-scaling errors if PSI4; and NumPy BLAS don’t match down to the library name (that is,; libmkl_rt, libmkl_core.so, libmkl_core.a are not; interchangeable). See https://github.com/psi4/psi4/issues/1007,; https://github.com/psi4/psi4/issues/748,; https://github.com/psi4/psi4/issues/755 for gory discussions.; Choose your NumPy and PSI4 compile conditions to use the same; BLAS distribution.; The BLAS/LAPACK detected for PSI4 are also linked into any; Add-Ons (e.g., libefp) that req",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/build_planning-1.html:44806,safe,safe,44806,psi4manual/1.4.0/build_planning-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/build_planning-1.html,27,['safe'],['safe']
Safety," boolean; Default: false. NO_RESPONSE¶. Don’t solve the CPHF equations? Evaluate and instead of their response-including coupterparts. Only turn on this option if the induction energy is not going to be used. Type: boolean; Default: false. OCC_TOLERANCE¶. Minimum occupation (eigenvalues of the MP2 OPDM) below which virtual natural orbitals are discarded for evaluating the triples contribution to dispersion. Type: conv double; Default: 1.0e-6. PRINT¶. The amount of information to print to the output file for the sapt module. For 0, only the header and final results are printed. For 1, (recommended for large calculations) some intermediate quantities are also printed. Type: integer; Default: 1. SAPT_LEVEL¶. The level of theory for SAPT. Type: string; Possible Values: SAPT0, SAPT2, SAPT2+, SAPT2+3; Default: SAPT0. SAPT_MEM_CHECK¶. Do force SAPT2 and higher to die if it thinks there isn’t enough memory? Turning this off is ill-advised. Type: boolean; Default: true. SAPT_MEM_SAFETY¶. Memory safety. Type: double; Default: 0.9. SAPT_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 6.0/5.0. SAPT_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 1.0/3.0. Expert¶. DO_CCD_DISP¶. Do CCD dispersion correction in SAPT2+, SAPT2+(3) or SAPT2+3?. Type: boolean; Default: false. DO_THIRD_ORDER¶. Do compute third-order corrections?. Type: boolean; Default: false. Table Of Contents. SAPT; General; AIO_CPHF; AIO_DF_INTS; BASIS; CCD_E_CONVERGENCE; CCD_MAXITER; CCD_T_CONVERGENCE; DENOMINATOR_ALGORITHM; DENOMINATOR_DELTA; DF_BASIS_ELST; DF_BASIS_SAPT; D_CONVERGENCE; E_CONVERGENCE; FREEZE_CORE; INTS_TOLERANCE; MAXITER; MAX_CCD_DIISVECS; MIN_CCD_DIISVECS; NAT_ORBS; NAT_ORBS_T2; NO_RESPONSE; OCC_TOLERANCE; PRINT; SAPT_LEVEL; SAPT_MEM_CHECK; SAPT_MEM_SAFETY; SAPT_OS_SCALE; SAPT_SS_SCALE. Expert; DO_CCD_DISP; D",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__sapt-1.html:4316,safe,safety,4316,psi4manual/4.0b4/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__sapt-1.html,2,['safe'],['safety']
Safety," boolean; Default: false. NO_RESPONSE¶. Don’t solve the CPHF equations? Evaluate and instead of their response-including coupterparts. Only turn on this option if the induction energy is not going to be used. Type: boolean; Default: false. OCC_TOLERANCE¶. Minimum occupation (eigenvalues of the MP2 OPDM) below which virtual natural orbitals are discarded for evaluating the triples contribution to dispersion. Type: conv double; Default: 1.0e-6. PRINT¶. The amount of information to print to the output file for the sapt module. For 0, only the header and final results are printed. For 1, (recommended for large calculations) some intermediate quantities are also printed. Type: integer; Default: 1. SAPT_LEVEL¶. The level of theory for SAPT. Type: string; Possible Values: SAPT0, SAPT2, SAPT2+, SAPT2+3; Default: SAPT0. SAPT_MEM_CHECK¶. Do force SAPT2 and higher to die if it thinks there isn’t enough memory? Turning this off is ill-advised. Type: boolean; Default: true. SAPT_MEM_SAFETY¶. Memory safety. Type: double; Default: 0.9. SAPT_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 6.0/5.0. SAPT_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 1.0/3.0. Expert¶. DO_THIRD_ORDER¶. Do compute third-order corrections?. Type: boolean; Default: false. Table Of Contents. SAPT; General; AIO_CPHF; AIO_DF_INTS; BASIS; DENOMINATOR_ALGORITHM; DENOMINATOR_DELTA; DF_BASIS_ELST; DF_BASIS_SAPT; D_CONVERGENCE; E_CONVERGENCE; FREEZE_CORE; INTS_TOLERANCE; MAXITER; NAT_ORBS; NAT_ORBS_T2; NO_RESPONSE; OCC_TOLERANCE; PRINT; SAPT_LEVEL; SAPT_MEM_CHECK; SAPT_MEM_SAFETY; SAPT_OS_SCALE; SAPT_SS_SCALE. Expert; DO_THIRD_ORDER. Previous topic; REFERENCE; Next topic; AIO_CPHF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__sapt-1.html:3890,safe,safety,3890,psi4manual/4.0b2/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__sapt-1.html,2,['safe'],['safety']
Safety," boolean; Default: false. NO_RESPONSE¶. Don’t solve the CPHF equations? Evaluate and instead of their response-including coupterparts. Only turn on this option if the induction energy is not going to be used. Type: boolean; Default: false. OCC_TOLERANCE¶. Minimum occupation (eigenvalues of the MP2 OPDM) below which virtual natural orbitals are discarded for evaluating the triples contribution to dispersion. Type: conv double; Default: 1.0e-6. PRINT¶. The amount of information to print to the output file for the sapt module. For 0, only the header and final results are printed. For 1, (recommended for large calculations) some intermediate quantities are also printed. Type: integer; Default: 1. SAPT_LEVEL¶. The level of theory for SAPT. Type: string; Possible Values: SAPT0, SAPT2, SAPT2+, SAPT2+3; Default: SAPT0. SAPT_MEM_CHECK¶. Do force SAPT2 and higher to die if it thinks there isn’t enough memory? Turning this off is ill-advised. Type: boolean; Default: true. SAPT_MEM_SAFETY¶. Memory safety. Type: double; Default: 0.9. SAPT_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 6.0/5.0. SAPT_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. SS/OS decomposition performed for and terms. Type: double; Default: 1.0/3.0. Expert¶. DO_THIRD_ORDER¶. Do compute third-order corrections?. Type: boolean; Default: false. Table Of Contents. SAPT; General; AIO_CPHF; AIO_DF_INTS; BASIS; DENOMINATOR_ALGORITHM; DENOMINATOR_DELTA; DF_BASIS_ELST; DF_BASIS_SAPT; D_CONVERGENCE; E_CONVERGENCE; FREEZE_CORE; INTS_TOLERANCE; MAXITER; NAT_ORBS; NAT_ORBS_T2; NO_RESPONSE; OCC_TOLERANCE; PRINT; SAPT_LEVEL; SAPT_MEM_CHECK; SAPT_MEM_SAFETY; SAPT_OS_SCALE; SAPT_SS_SCALE. Expert; DO_THIRD_ORDER. Previous topic; REFERENCE; Next topic; AIO_CPHF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next  ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__sapt-1.html:3912,safe,safety,3912,psi4manual/4.0b3/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__sapt-1.html,2,['safe'],['safety']
Safety," changing the PSI4 repo codebase between compiles, there’s; nothing more to do as CMake will handle the code rebuild deps for you.; If you’re changing the local Add-On repo codebase between compiles,; CMake does not know when libaddon.[a|so|dylib] needs rebuilding. It; is recommended that the PSI4 build be initially configured with; -DBUILD_SHARED_LIBS=ON (easier to notice changes). And to trigger; Add-On library rebuild, rm -rf {objdir}/external/upstream/addon/; and rm -rf {objdir}/stage/{prefix}/share/cmake/AddOn. This should; re-clone the Add-On, rebuild and install it, rebuild any parts of; PSI4 that interface to it, and relink the main core.so.; If you’re modifying the Add-On’s file or directory structure, be; smart and rm all traces of it within {objdir}/stage/{prefix},; especially any *.pyc files.; Alternatively to the above, you can instead build and install the; Add-On library yourself, external to the PSI4 repository. This; is especially useful if you want to avoid full recompiles of the; Add-On at each change to the Add-On’s source. Build the Add-On; library dynamically (-DBUILD_SHARED_LIBS=ON) and mind any; “Psi4 wants” in the Add-On’s top-level CMakeLists.txt. Install the; Add-On and note the full path to AddOnConfig.cmake. Pass; the path containing that file to PSI4’s CMake as; -DAddon_DIR=/path/to/config/usually/ending/in/share/cmake/AddON; and build PSI4. The main core.so should be dynamically linked; to your dev AddOn dynamic lib and update automatically when you rebuild; the AddOn lib. Naturally, you may need to delete core.so and remake; as needed. table of contents. Compiling and Installing from Source; Planning: how to configure Psi4 and invoke CMake; How to build and install Psi4, the compact version; How to build, test, and install Psi4, in detail; What are the tools and dependencies strictly required for building Psi4; What are the add-on capabilities for Psi4 and what are their dependencies; How to configure code to use high angular momentum",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/build_planning-1.html:51037,avoid,avoid,51037,psi4manual/1.2.1/build_planning-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/build_planning-1.html,2,['avoid'],['avoid']
Safety," comment line; self.tagline = """". def __str__(self):; text = """""" ==> qcdb Molecule %s <==\n\n"""""" % (self.name()); text += """""" => %s <=\n\n"""""" % (self.tagline); text += self.create_psi4_string_from_molecule(); return text. def __setattr__(self, name, value):; """"""Function to overload setting attributes to allow geometry; variable assigment as if member data. """"""; if 'all_variables' in self.__dict__:; if name.upper() in self.__dict__['all_variables']:; self.set_variable(name, value); super(Molecule, self).__setattr__(name, value). def __getattr__(self, name):; """"""Function to overload accessing attribute contents to allow; retrival of geometry variable values as if member data. """"""; if 'all_variables' in self.__dict__ and name.upper() in self.__dict__['all_variables']:; return self.get_variable(name); else:; raise AttributeError. @classmethod; def init_with_xyz(cls, xyzfilename, no_com=False, no_reorient=False, contentsNotFilename=False):; """"""Pull information from an XYZ file. No fragment info detected.; Bohr/Angstrom pulled from first line if available. Charge,; multiplicity, tagline pulled from second line if available. Body; accepts atom symbol or atom charge in first column. Arguments; *no_com* and *no_reorient* can be used to turn off shift and; rotation. If *xyzfilename* is a string of the contents of an XYZ; file, rather than the name of a file, set *contentsNotFilename*; to ``True``. >>> H2O = qcdb.Molecule.init_with_xyz('h2o.xyz'). """"""; instance = cls(); instance.lock_frame = False; instance.PYmove_to_com = not no_com; instance.PYfix_orientation = no_reorient. if contentsNotFilename:; text = xyzfilename.splitlines(); else:; try:; infile = open(xyzfilename, 'r'); except IOError:; raise ValidationError(""""""Molecule::init_with_xyz: given filename '%s' does not exist."""""" %; (xyzfilename)); if os.stat(xyzfilename).st_size == 0:; raise ValidationError(""""""Molecule::init_with_xyz: given filename '%s' is blank."""""" % (xyzfilename)); text = infile.readlines(). xyz1 = re.com",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/qcdb/molecule.html:4945,detect,detected,4945,psi4manual/1.2.1/_modules/psi4/driver/qcdb/molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/qcdb/molecule.html,1,['detect'],['detected']
Safety," comment line; self.tagline = """". def __str__(self):; text = """""" ==> qcdb Molecule %s <==\n\n"""""" % (self.name()); text += """""" => %s <=\n\n"""""" % (self.tagline); text += self.create_psi4_string_from_molecule(); return text. def __setattr__(self, name, value):; """"""Function to overload setting attributes to allow geometry; variable assigment as if member data. """"""; if 'all_variables' in self.__dict__:; if name.upper() in self.__dict__['all_variables']:; self.set_variable(name, value); super(Molecule, self).__setattr__(name, value). def __getattr__(self, name):; """"""Function to overload accessing attribute contents to allow; retrival of geometry variable values as if member data. """"""; if 'all_variables' in self.__dict__ and name.upper() in self.__dict__['all_variables']:; return self.get_variable(name); else:; raise AttributeError. @classmethod; def init_with_xyz(cls, xyzfilename, no_com=False, no_reorient=False, contentsNotFilename=False):; """"""Pull information from an XYZ file. No fragment info detected.; Bohr/Angstrom pulled from first line if available. Charge,; multiplicity, tagline pulled from second line if available. Body; accepts atom symbol or atom charge in first column. Arguments; *no_com* and *no_reorient* can be used to turn off shift and; rotation. If *xyzfilename* is a string of the contents of an XYZ; file, rather than the name of a file, set *contentsNotFilename*; to ``True``. >>> H2O = qcdb.Molecule.init_with_xyz('h2o.xyz'). """"""; raise FeatureDeprecated(; """"""qcdb.Molecule.init_with_xyz. Replace with: qcdb.Molecule.from_string(..., dtype='xyz+')""""""). @classmethod; def init_with_mol2(cls, xyzfilename, no_com=False, no_reorient=False, contentsNotFilename=False):; """"""Pull information from a MOl2 file. No fragment info detected.; Bohr/Angstrom pulled from first line if available. Charge,; multiplicity, tagline pulled from second line if available. Body; accepts atom symbol or atom charge in first column. Arguments; *no_com* and *no_reorient* can be used to tur",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/qcdb/molecule.html:4911,detect,detected,4911,psi4manual/1.3.2/_modules/psi4/driver/qcdb/molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/qcdb/molecule.html,8,['detect'],['detected']
Safety," conjuction to specify charge, multiplicity, symmetry to use, etc. . Symmetry¶; For efficiency, Psi4 can utilize the largest Abelian subgroup of the full; point group of the molecule. Concomitantly, a number of quantities, such as; SOCC and DOCC, are arrays whose entries pertain to irreducible; representations (irreps) of the molecular point group. Ordering of irreps; follows the convention used in Cotton’s Chemical Applications of Group; Theory, as detailed in Table Irreps. We refer to this; convention as “Cotton Ordering” hereafter. Ordering of irreducible representations (irreps) used in Psi4¶. Point Group; 1; 2; 3; 4; 5; 6; 7; 8.  ;  ;  ;  ;  ;  ;  .  ;  ;  ;  ;  ;  .  ;  ;  ;  ;  ;  .  ;  ;  ;  ;  ;  .  ;  ;  ;  .  ;  ;  ;  .  ;  ;  ;  . For example, water ( symmetry) has three doubly occupied ; orbitals, as well as one each of and symmetry; the; corresponding DOCC array is therefore:; DOCC = [3, 0, 1, 1]. Although Psi4 will detect the symmetry automatically, and use the largest; possible Abelian subgroup, the user might want to run in a lower point group.; To do this the molecule keyword symmetry symbol can be used; (see Molecule Keywords). In most cases the standard; Schönflies symbol (one of c1, c2, ci, cs, d2,; c2h, c2v, d2h will suffice for symbol.; For certain computations, the user might want to specify which particular; subgroup is to be used by appending a unique axis specifier. For example when; running a computation on a molecule with symmetry in , the; axis can be chosen as either the , the , or the ; these can; be specified by requesing the symmetry as c2vx, c2vy, or c2vz, respectively.; Likewise the c2x, c2y, c2z, c2hx, c2hy, and c2hz; labels are valid. For symmetry the labels csx, csy, and; csz request the , , and planes be used as the mirror plane,; respectively. If no unique axis is specified, Psi4 will choose an appropriate; subgroup.; Certain types of finite difference computations, such as numerical vibrational; frequencies, might lower the s",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/psithonmol-1.html:11113,detect,detect,11113,psi4manual/1.0.0/psithonmol-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/psithonmol-1.html,2,['detect'],['detect']
Safety," corresponding files.; #; # This file is part of Psi4.; #; # Psi4 is free software; you can redistribute it and/or modify; # it under the terms of the GNU Lesser General Public License as published by; # the Free Software Foundation, version 3.; #; # Psi4 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public License along; # with Psi4; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. import math; from functools import partial; from typing import Callable, Optional, Union; import logging. import numpy as np. from psi4 import core; from psi4.driver.p4util.exceptions import ValidationError; nppp = partial(np.array_str, max_line_width=120, precision=8, suppress_small=True) # when safe, ""from psi4.driver import nppp""; from psi4.driver.aliases import sherrill_gold_standard, allen_focal_point. logger = logging.getLogger(__name__). _zeta_val2sym = {k + 2: v for k, v in enumerate('dtq5678')}; Extrapolatable = Union[float, core.Matrix, core.Vector]. [docs]; def xtpl_highest_1(functionname: str, zHI: int, valueHI: Extrapolatable, verbose: int = 1, **kwargs) -> Extrapolatable:; r""""""Scheme for total or correlation energies with a single basis or the highest; zeta-level among an array of bases. Used by :py:func:`~psi4.driver.cbs`. Parameters; ----------; functionname; Name of the CBS component (e.g., 'mp2') used in summary printing.; zHI; Zeta-level, only used for printing.; valueHI; Energy, gradient, or Hessian value at the basis set.; verbose; Controls volume of printing. Returns; -------; float or ~numpy.ndarray; Returns :math:`E_{total}^{\infty}` which is equal to valueHI.; Eponymous function applied to input zetas and values; type from `va",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/_modules/psi4/driver/driver_cbs_helper.html:1422,safe,safe,1422,psi4manual/1.8.x/_modules/psi4/driver/driver_cbs_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/_modules/psi4/driver/driver_cbs_helper.html,1,['safe'],['safe']
Safety," corresponding files.; #; # This file is part of Psi4.; #; # Psi4 is free software; you can redistribute it and/or modify; # it under the terms of the GNU Lesser General Public License as published by; # the Free Software Foundation, version 3.; #; # Psi4 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public License along; # with Psi4; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. import math; from functools import partial; from typing import Callable, Optional, Union; import logging. import numpy as np. from psi4 import core; from psi4.driver.p4util.exceptions import ValidationError; nppp = partial(np.array_str, max_line_width=120, precision=8, suppress_small=True) # when safe, ""from psi4.driver import nppp""; from psi4.driver.aliases import sherrill_gold_standard, allen_focal_point. logger = logging.getLogger(__name__). _zeta_val2sym = {k + 2: v for k, v in enumerate('dtq5678')}; Extrapolatable = Union[float, core.Matrix, core.Vector]. [docs]def xtpl_highest_1(functionname: str, zHI: int, valueHI: Extrapolatable, verbose: int = 1, **kwargs) -> Extrapolatable:; r""""""Scheme for total or correlation energies with a single basis or the highest; zeta-level among an array of bases. Used by :py:func:`~psi4.cbs`. Parameters; ----------; functionname; Name of the CBS component (e.g., 'mp2') used in summary printing.; zHI; Zeta-level, only used for printing.; valueHI; Energy, gradient, or Hessian value at the basis set.; verbose; Controls volume of printing. Returns; -------; float or ndarray; Returns :math:`E_{total}^{\infty}` which is equal to valueHI.; Eponymous function applied to input zetas and values; type from `valueHI`. Notes; -",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/_modules/psi4/driver/driver_cbs_helper.html:1420,safe,safe,1420,psi4manual/1.6.x/_modules/psi4/driver/driver_cbs_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/_modules/psi4/driver/driver_cbs_helper.html,1,['safe'],['safe']
Safety," corresponding files.; #; # This file is part of Psi4.; #; # Psi4 is free software; you can redistribute it and/or modify; # it under the terms of the GNU Lesser General Public License as published by; # the Free Software Foundation, version 3.; #; # Psi4 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; # GNU Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public License along; # with Psi4; if not, write to the Free Software Foundation, Inc.,; # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; #; # @END LICENSE; #. import math; from functools import partial; from typing import Callable, Optional, Union; import logging. import numpy as np. from psi4 import core; from psi4.driver.p4util.exceptions import ValidationError; nppp = partial(np.array_str, max_line_width=120, precision=8, suppress_small=True) # when safe, ""from psi4.driver import nppp""; from psi4.driver.aliases import sherrill_gold_standard, allen_focal_point. logger = logging.getLogger(__name__). _zeta_val2sym = {k + 2: v for k, v in enumerate('dtq5678')}; Extrapolatable = Union[float, core.Matrix, core.Vector]. [docs]def xtpl_highest_1(functionname: str, zHI: int, valueHI: Extrapolatable, verbose: int = 1, **kwargs) -> Extrapolatable:; r""""""Scheme for total or correlation energies with a single basis or the highest; zeta-level among an array of bases. Used by :py:func:`~psi4.driver.cbs`. Parameters; ----------; functionname; Name of the CBS component (e.g., 'mp2') used in summary printing.; zHI; Zeta-level, only used for printing.; valueHI; Energy, gradient, or Hessian value at the basis set.; verbose; Controls volume of printing. Returns; -------; float or ~numpy.ndarray; Returns :math:`E_{total}^{\infty}` which is equal to valueHI.; Eponymous function applied to input zetas and values; type from `valu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/_modules/psi4/driver/driver_cbs_helper.html:1420,safe,safe,1420,psi4manual/1.7.x/_modules/psi4/driver/driver_cbs_helper.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/_modules/psi4/driver/driver_cbs_helper.html,1,['safe'],['safe']
Safety," dftd3 program (http://toc.uni-muenster.de/DFTD3/); to compute the -D correction of level dashlvl using parameters for; the functional func. The dictionary dashparam can be used to supply; a full set of dispersion parameters in the absense of func or to supply; individual overrides in the presence of func. The dftd3 executable must be; independently compiled and found in :envvar:PATH. inertia_tensor(masswt=True)[source]¶; Compute inertia tensor.; >>> print H2OH2O.inertia_tensor(); [[8.704574864178731, -8.828375721817082, 0.0], [-8.828375721817082, 280.82861714077666, 0.0], [0.0, 0.0, 281.249500988553]]. inertia_tensor_partial(part, masswt=True)[source]¶; Compute inertia tensor based on atoms in part. inertial_system(masswt=True)[source]¶; Solve inertial system. inertial_system_partial(part, masswt=True)[source]¶; Solve inertial system based on atoms in part. classmethod init_with_xyz(xyzfilename, no_com=False, no_reorient=False)[source]¶; Pull information from an XYZ file. No fragment info detected.; Charge, multiplicity, tagline pulled from second line if available.; >>> H2O = qcdb.Molecule.init_with_xyz('h2o.xyz'). print_ring_planes(entity1, entity2, entity3=None, entity4=None)[source]¶; (reals only, 1-indexed). save_string_xyz(save_ghosts=True)[source]¶; Save a string for a XYZ-style file.; >>> H2OH2O.save_string_xyz(); 6; -2 3 water_dimer; O -1.551007000000 -0.114520000000 0.000000000000; H -1.934259000000 0.762503000000 0.000000000000; H -0.599677000000 0.040712000000 0.000000000000; O 1.350625000000 0.111469000000 0.000000000000; H 1.680398000000 -0.373741000000 -0.758561000000; H 1.680398000000 -0.373741000000 0.758561000000. Elemental masses (most common isotope), symbols, and atomic numbers from psi4.; Stuff stolen from psi. Should import or not as necessary; or some better way. Apologies to the coders. compare_matrices(expected, computed, digits, label)[source]¶; Function to compare two matrices. Prints util.success(); when elements of matrix computed match",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodoc_driver-1.html:65895,detect,detected,65895,psi4manual/4.0b5/autodoc_driver-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodoc_driver-1.html,2,['detect'],['detected']
Safety," double; Default: 1.00. HESS_UPDATE_LIMIT_SCALE¶. If HESS_UPDATE_LIMIT is true, changes to the Hessian from the update are limited to the larger of HESS_UPDATE_LIMIT_SCALE * (the previous value) and HESS_UPDATE_LIMIT_MAX [au]. Type: double; Default: 0.50. HESS_UPDATE_USE_LAST¶. Number of previous steps to use in Hessian update, 0 uses all. Type: integer; Default: 1. INTRAFRAG_HESS¶. Model Hessian to guess intrafragment force constants. Type: string; Possible Values: FISCHER, SCHLEGEL, SIMPLE; Default: SCHLEGEL. Fragment/Internal Coordinate Control¶. ADD_AUXILIARY_BONDS¶. Do add bond coordinates at nearby atoms for non-bonded systems?. Type: boolean; Default: false. COVALENT_CONNECT¶. When determining connectivity, a bond is assigned if interatomic distance is less than (this number) * sum of covalent radii. Type: double; Default: 1.3. FRAG_MODE¶. For multi-fragment molecules, treat as single bonded molecule or via interfragment coordinates. A primary difference is that in MULTI mode, the interfragment coordinates are not redundant. Type: string; Possible Values: SINGLE, MULTI; Default: SINGLE. FREEZE_INTERFRAG¶. Do freeze all interfragment modes?. Type: boolean; Default: false. FREEZE_INTRAFRAG¶. Do freeze all fragments rigid?. Type: boolean; Default: false. H_BOND_CONNECT¶. For now, this is a general maximum distance for the definition of H-bonds. Type: double; Default: 4.3. INTCOS_GENERATE_EXIT¶. Do only generate the internal coordinates and then stop?. Type: boolean; Default: false. INTERFRAG_DIST_INV¶. Do use for the stretching coordinate between fragments? Otherwise, use . Type: boolean; Default: false. INTERFRAG_HESS¶. Model Hessian to guess interfragment force constants. Type: string; Possible Values: DEFAULT, FISCHER_LIKE; Default: DEFAULT. INTERFRAG_MODE¶. When interfragment coordinates are present, use as reference points either principal axes or fixed linear combinations of atoms. Type: string; Possible Values: FIXED, INTERFRAGMENT; Default: FIXED. Misc.¶.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__optking-1.html:4944,redund,redundant,4944,psi4manual/4.0b2/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__optking-1.html,2,['redund'],['redundant']
Safety," energy('scf',return_wfn=True). This C++/Python object (psi4.core.Wavefunction) contains orbital; data, basis set information, result variables and more.; It can be saved either to a numpy file or converted to a python dictionary; # write the wavefunction to file; wfn.to_file('my_wfn'). # alternatively store the dict representation of the wavefunction in memory; wfn_dict = wfn.to_file(). In either form, its attributes can be set and edited.; This is an expert-level feature, though.; In general, let PSI4 create the Wavefunction, then treat it as read-only.; The back conversion to a Wavefunction object uses the .from_file() functionality; # read wavefunction from file; wfn_from_file = psi4.core.Wavefunction.from_file('my_wfn'). # make a wavefunction from the dict; wfn_from_dict = psi4.core.Wavefunction.from_file(wfn_dict). ~/.psi4rc File¶. Caution; The ~/.psi4rc file is only read for Psithon input, not PsiAPI.; It does nothing that can’t be done in other more transparent ways.; It should be avoided.; It is very easy to forget about the ~/.psi4rc file you once; created, leading to great confusion over why all your jobs are using; the wrong memory or are suddenly not density-fit. Also be aware that; ~/.psi4rc contents count as part of your input file (invoked after; e.g. from psi4 import * and before your Psithon–>Python parsed; input commands), so these settings take priority over command-line; arguments to the psi4 executable.; Please use the ~/.psi4rc file sparingly. If using the environment variable PSI_SCRATCH is inconvenient,; or if some psi4_io commands must be present in all input files,; the ~/.psi4rc resource file can be used (example psi4/samples/example_psi4rc_file).; All the commands mentioned in section Scratch Files can be used in this file.; To set up the scratch path:; psi4_io.set_default_path('/scratch/user'). To set up the scratch path from a variable $MYSCRATCH:; import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_defaul",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/external-1.html:9435,avoid,avoided,9435,psi4manual/1.4.0/external-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/external-1.html,9,['avoid'],['avoided']
Safety," erd from conda without thinking, consult sec:condapsi4dev.; To remove a conda installation, conda remove erd. Source. If using PSI4 built from source and you want erd built from; from source also,; enable it as a feature with ENABLE_erd,; and let the build system fetch and build it and activate dependent code. How to configure erd for building Psi4¶; Role and Dependencies. Role — In PSI4, ERD is a library that provides alternate; integrals.; Downstream Dependencies — PSI4 (\(\Leftarrow\) optional) erd; Upstream Dependencies — erd \(\Leftarrow\) Fortran. CMake Variables. ENABLE_erd — CMake variable toggling whether PSI4 builds with erd; CMAKE_PREFIX_PATH — CMake list variable to specify where pre-built dependencies can be found. For erd, set to an installation directory containing include/ERD/ERD_MANGLE.h; erd_DIR — CMake variable to specify where pre-built erd can be found. Set to installation directory containing share/cmake/erd/erdConfig.cmake; CMAKE_DISABLE_FIND_PACKAGE_erd — CMake variable to force internal build of erd instead of detecting pre-built; CMAKE_INSIST_FIND_PACKAGE_erd — CMake variable to force detecting pre-built erd and not falling back on internal build. Examples. Build bundled. >>> cmake -DENABLE_erd=ON. Build without erd. >>> cmake. Link against pre-built. >>> cmake -DENABLE_erd=ON -DCMAKE_PREFIX_PATH=/path/to/erd/root. >>> cmake -DENABLE_erd=ON -Derd_DIR=/path/to/erd/configdir. Build bundled despite pre-built being detectable. >>> cmake -DENABLE_erd=ON -DCMAKE_PREFIX_PATH=/path/to/unwanted/erd/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_erd=ON. table of contents. Interface to ERD by N. Flocke and V. Lotrich; Installation; How to configure erd for building Psi4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/erd-1.html:2685,detect,detecting,2685,psi4manual/1.3.2/erd-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/erd-1.html,6,['detect'],"['detectable', 'detecting']"
Safety," eri->first_RS_shell_block(blockPQ_idx);; for (int blockRS_idx = loop_start; blockRS_idx < blocksRS.size(); ++blockRS_idx) {; const auto& blockRS = blocksRS[blockRS_idx];. if (!eri->shell_block_significant(blockPQ_idx, blockRS_idx)) continue;. eri->compute_shell_blocks(blockPQ_idx, blockRS_idx);; const auto* block_start = buffers[0];. // Loop over all of the P,Q,R,S shells within the blocks. We have P>=Q, R>=S and PQ<=RS.; for (const auto& pairPQ : blockPQ) {; const auto &P = pairPQ.first;; const auto &Q = pairPQ.second;; const auto& Pshell = basisset->shell(P);; const auto& Qshell = basisset->shell(Q);; const auto Pam = Pshell.am();; const auto Qam = Qshell.am();; for (const auto& pairRS : blockRS) {; const auto &R = pairRS.first;; const auto &S = pairRS.second;; const auto& Rshell = basisset->shell(R);; const auto& Sshell = basisset->shell(S);; const auto Ram = Rshell.am();; const auto Sam = Sshell.am();. size_t block_size = Psize * Qsize * Rsize * Ssize;; // When there are chunks of shellpairs in RS, we need to make sure; // we filter out redundant combinations.; if (use_batching && Pam == Ram && Qam == Sam && ((P > R) || (P == R && Q > S))) {; block_start += block_size;; continue;; }; const double* int_ptr = block_start;; // Query P,Q,R,S shells for metadata and loop over that quartet; // as usual, getting the integrals from the int_ptr buffer.; block_start += block_size;; }; }; }; }. Although this looks more complex, it’s essentially doing the same thing. There; are a number of differences that we’ll highlight now. Sieving¶; This is one of two breaking changes to the old style syntax. Instead of; constructing a sieve object, the integral object should be queried directly; using the exact same syntax. Requests for whether a shell is significant or a; shell block is significant are both supported. A sieve object is created if; matching basis sets are found in either the bra or the ket. For a density; fitting integral (PQ|0A) where 0 is the null basis set and A is ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/prog_integrals-1.html:4006,redund,redundant,4006,psi4manual/1.4.0/prog_integrals-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/prog_integrals-1.html,8,['redund'],['redundant']
Safety," eri->first_RS_shell_block(blockPQ_idx);; for (int blockRS_idx = loop_start; blockRS_idx < blocksRS.size(); ++blockRS_idx) {; const auto& blockRS = blocksRS[blockRS_idx];. if (!eri->shell_block_significant(blockPQ_idx, blockRS_idx)) continue;. eri->compute_shell_blocks(blockPQ_idx, blockRS_idx);; const auto* block_start = buffers[0];. // Loop over all of the P,Q,R,S shells within the blocks. We have P>=Q, R>=S and PQ<=RS.; for (const auto& pairPQ : blockPQ) {; const auto &P = pairPQ.first;; const auto &Q = pairPQ.second;; const auto& Pshell = basisset->shell(P);; const auto& Qshell = basisset->shell(Q);; const auto Pam = Pshell.am();; const auto Qam = Qshell.am();; for (const auto& pairRS : blockRS) {; const auto &R = pairRS.first;; const auto &S = pairRS.second;; const auto& Rshell = basisset->shell(R);; const auto& Sshell = basisset->shell(S);; const auto Ram = Rshell.am();; const auto Sam = Sshell.am();. size_t block_size = Psize * Qsize * Rsize * Ssize;; // When there are chunks of shellpairs in RS, we need to make sure; // we filter out redundant combinations.; if (use_batching && Pam == Ram && Qam == Sam && ((P > R) || (P == R && Q > S))) {; block_start += block_size;; continue;; }; const double* int_ptr = block_start;; // Query P,Q,R,S shells for metadata and loop over that quartet; // as usual, getting the integrals from the int_ptr buffer.; block_start += block_size;; }; }; }; }. Although this looks more complex, it’s essentially doing the same thing. There; are a number of differences that we’ll highlight now. Sieving¶; This is one of two breaking changes to the old style syntax. Instead of; constructing a sieve object, the integral object should be queried directly; using the exact same syntax. Requests for whether a shell is significant or a; shell block is significant are both supported. Sieving information is generated directly; within the integral object if matching basis sets are found in either the bra or the ket.; For a density fitting integral (PQ|",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/prog_integrals.html:4015,redund,redundant,4015,psi4manual/master/prog_integrals.html,https://psicode.org,https://psicode.org/psi4manual/master/prog_integrals.html,1,['redund'],['redundant']
Safety," field. This matches the current setting in conda_build_config.yaml; For prereleases, ""channel_tag"": ""/label/dev"", while for (post)releases, it should be the empty string; Leave this file set to a “rc” with Git, as that has more details. For (post)releases (not prereleases), copy cookiecutter.json to cookiecutter.json-vXXX; Edit cookiecutter/{{.../construct.yaml for templating. This is rarely needed; If it’s been a while or you need the space, clear out ~/.conda/constructor, where the downloaded packages are cached; Note that installers get written to build/ and this gets regenerated each time. Clear out between runs.; python run.py; [Outdated] Watch out for py_ in buildstring as this means a noarch package has been pulled. It must be eliminated. Constructors can’t handle “noarch” packages and will fail at runtime. If see a “noarch” package, must find the recipe and rebuild for all OS & Python combinations. Then run constructor again.; [Replacement] After adding a post_install to reposition the noarch packages, they are safe to include.; If fetching times out, may have to run run.py several times. Clear out build/ in between. It’s the fetching that takes a long time, not constucting; In the end, should have several installers; >>> ls -l build/psi4conda-1.3-py3.*/*64.sh; -rwxr-xr-x. 516M Feb 28 20:30 build/psi4conda-1.3-py3.6-linux-64/psi4conda-1.3-py36-Linux-x86_64.sh; -rwxr-xr-x. 299M Feb 28 20:31 build/psi4conda-1.3-py3.6-osx-64/psi4conda-1.3-py36-MacOSX-x86_64.sh; -rwxr-xr-x. 518M Feb 28 20:30 build/psi4conda-1.3-py3.7-linux-64/psi4conda-1.3-py37-Linux-x86_64.sh; -rwxr-xr-x. 299M Feb 28 20:31 build/psi4conda-1.3-py3.7-osx-64/psi4conda-1.3-py37-MacOSX-x86_64.sh. Upload installer files to vergil, scp -r build/Psi4*/Psi4*sh root@vergil.chemistry.gatech.edu:/var/www/html/psicode-download/; Log in to vergil root and make WindowsWSL symlinks. Build Psi4conda set¶; Installers are build using the project constructor and build binary bash or exe scripts, one per OS per Py",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/manage_release-1.html:12941,safe,safe,12941,psi4manual/1.5.0/manage_release-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/manage_release-1.html,5,['safe'],['safe']
Safety," field. This matches the current setting in conda_build_config.yaml; For prereleases, ""channel_tag"": ""/label/dev"", while for (post)releases, it should be the empty string; Leave this file set to a “rc” with Git, as that has more details. For (post)releases (not prereleases), copy cookiecutter.json to cookiecutter.json-vXXX; Edit cookiecutter/{{.../construct.yaml for templating. This is rarely needed; If it’s been a while or you need the space, clear out ~/.conda/constructor, where the downloaded packages are cached; Note that installers get written to build/ and this gets regenerated each time. Clear out between runs.; python run.py; [Outdated] Watch out for py_ in buildstring as this means a noarch package has been pulled. It must be eliminated. Constructors can’t handle “noarch” packages and will fail at runtime. If see a “noarch” package, must find the recipe and rebuild for all OS & Python combinations. Then run constructor again.; [Replacement] After adding a post_install to reposition the noarch packages, they are safe to include.; If fetching times out, may have to run run.py several times. Clear out build/ in between. It’s the fetching that takes a long time, not constucting; In the end, should have several installers; >>> ls -l build/psi4conda-1.3-py3.*/*64.sh; -rwxr-xr-x. 516M Feb 28 20:30 build/psi4conda-1.3-py3.6-linux-64/psi4conda-1.3-py36-Linux-x86_64.sh; -rwxr-xr-x. 299M Feb 28 20:31 build/psi4conda-1.3-py3.6-osx-64/psi4conda-1.3-py36-MacOSX-x86_64.sh; -rwxr-xr-x. 518M Feb 28 20:30 build/psi4conda-1.3-py3.7-linux-64/psi4conda-1.3-py37-Linux-x86_64.sh; -rwxr-xr-x. 299M Feb 28 20:31 build/psi4conda-1.3-py3.7-osx-64/psi4conda-1.3-py37-MacOSX-x86_64.sh. Upload installer files to vergil, scp -r build/Psi4*/Psi4*sh root@vergil.chemistry.gatech.edu:/var/www/html/psicode-download/; Log in to vergil root and make WindowsWSL symlinks. Generate download page for psicode.org¶. Be in repo psicode-hugo-website; Copy and edit new file akin to https://github.com/psi4",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/manage_release-1.html:12576,safe,safe,12576,psi4manual/1.4.0/manage_release-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/manage_release-1.html,2,['safe'],['safe']
Safety," for Davidson’s diagonalization in stability check. Type: integer; Default: 20. STEP_TYPE (OPTKING); OPTKING — Geometry optimization step type, either Newton-Raphson or Rational Function Optimization. Type: string; Possible Values: RFO, NR, SD, LINESEARCH_STATIC; Default: RFO. SYMMETRIZE (OCC); OCC — Do symmetrize the GFM and OPDM in the EKT computations?. Type: boolean; Default: true. T (THERMO); THERMO — Temperature in Kelvin for thermodynamic analysis. Note that 273.15 is the value for IUPAC STP. Type: double; Default: 298.15. T2_COUPLED (CCENERGY); CCENERGY —. Type: boolean; Default: false. T3_WS_INCORE (CCENERGY); CCENERGY — Do build W intermediates required for cc3 in core memory?. Type: boolean; Default: false. T3_WS_INCORE (CCEOM); CCEOM — Do build W intermediates required for eom_cc3 in core memory?. Type: boolean; Default: false. T_AMPS (CCHBAR); CCHBAR — Do compute the Tamplitude equation matrix elements?. Type: boolean; Default: false. TDHF_MEM_SAFETY_FACTOR (CPHF); CPHF — Memory safety factor for allocating JK. Type: double; Default: 0.75. TDM (DETCI); DETCI — Do compute the transition density? Note: only transition densities between roots of the same symmetry will be evaluated. DETCI does not compute states of different irreps within the same computation; to do this, lower the symmetry of the computation. Type: boolean; Default: false. TDM_PRINT (DETCI); DETCI — Do print the transition density?. Type: boolean; Default: false. TDM_WRITE (DETCI); DETCI — Do write the transition density?. Type: boolean; Default: false. TEST_B (OPTKING); OPTKING — Do test B matrix?. Type: boolean; Default: false. TEST_DERIVATIVE_B (OPTKING); OPTKING — Do test derivative B matrix?. Type: boolean; Default: false. THETA_POINTS (SCF); SCF — Number of colatitude grid points for sphereical potential integration. Type: integer; Default: 360. THICKNESS (SCF); SCF — Thickness (bohr) of a hard-sphere external potential. Type: double; Default: 20.0. THREE_PARTICLE (DCFT); DCFT — Whet",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_glossary_options_c-1.html:212272,safe,safety,212272,psi4manual/1.0.0/autodoc_glossary_options_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_glossary_options_c-1.html,2,['safe'],['safety']
Safety," for item in restartfile:; name_split = re.split(r'\.', item); if ""npz"" in item:; fname = os.path.split(os.path.abspath(core.get_writer_file_prefix(molecule.name())))[1]; psi_scratch = core.IOManager.shared_object().get_default_path(); file_num = item.split('.')[-2]; targetfile = os.path.join(psi_scratch, fname + ""."" + file_num + "".npz""); else:; filenum = name_split[-1]; try:; filenum = int(filenum); except ValueError:; filenum = 32 # Default file number is the checkpoint one; psioh = core.IOManager.shared_object(); psio = core.IO.shared_object(); filepath = psioh.get_file_path(filenum); namespace = psio.get_default_namespace(); pid = str(os.getpid()); prefix = 'psi'; targetfile = filepath + prefix + '.' + pid + '.' + namespace + '.' + str(filenum); shutil.copy(item, targetfile). wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). for postcallback in hooks['energy']['post']:; postcallback(lowername, wfn=wfn, **kwargs). optstash.restore(); if return_wfn: # TODO current energy safer than wfn.energy() for now, but should be revisited. # TODO place this with the associated call, very awkward to call this in other areas at the moment; if lowername in ['efp', 'mrcc', 'dmrg', 'psimrcc']:; core.print_out(""\n\nWarning! %s does not have an associated derived wavefunction."" % name); core.print_out(""The returned wavefunction is the incoming reference wavefunction.\n\n""); elif 'sapt' in lowername:; core.print_out(""\n\nWarning! %s does not have an associated derived wavefunction."" % name); core.print_out(""The returned wavefunction is the dimer SCF wavefunction.\n\n""). return (core.get_variable('CURRENT ENERGY'), wfn); else:; return core.get_variable('CURRENT ENERGY'). [docs]def gradient(name, **kwargs):; r""""""Function complementary to :py:func:~driver.optimize(). Carries out one gradient pass,; deciding analytic or finite difference. :returns: :py:class:`~psi4.core.Matrix` |w--w| Total electronic gradient in Hartrees/Bohr. :returns: (:py:class:`~psi4.core",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver.html:33330,safe,safer,33330,psi4manual/1.2.1/_modules/psi4/driver/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/_modules/psi4/driver/driver.html,1,['safe'],['safer']
Safety," for item in restartfile:; name_split = re.split(r'\.', item); if ""npz"" in item:; fname = os.path.split(os.path.abspath(core.get_writer_file_prefix(molecule.name())))[1]; psi_scratch = core.IOManager.shared_object().get_default_path(); file_num = item.split('.')[-2]; targetfile = os.path.join(psi_scratch, fname + ""."" + file_num + "".npz""); else:; filenum = name_split[-1]; try:; filenum = int(filenum); except ValueError:; filenum = 32 # Default file number is the checkpoint one; psioh = core.IOManager.shared_object(); psio = core.IO.shared_object(); filepath = psioh.get_file_path(filenum); namespace = psio.get_default_namespace(); pid = str(os.getpid()); prefix = 'psi'; targetfile = filepath + prefix + '.' + pid + '.' + namespace + '.' + str(filenum); shutil.copy(item, targetfile). wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). for postcallback in hooks['energy']['post']:; postcallback(lowername, wfn=wfn, **kwargs). optstash.restore(); if return_wfn: # TODO current energy safer than wfn.energy() for now, but should be revisited. # TODO place this with the associated call, very awkward to call this in other areas at the moment; if lowername in ['efp', 'mrcc', 'dmrg', 'psimrcc']:; core.print_out(""\n\nWarning! %s does not have an associated derived wavefunction."" % name); core.print_out(""The returned wavefunction is the incoming reference wavefunction.\n\n""); elif 'sapt' in lowername:; core.print_out(""\n\nWarning! %s does not have an associated derived wavefunction."" % name); core.print_out(""The returned wavefunction is the dimer SCF wavefunction.\n\n""). return (core.variable('CURRENT ENERGY'), wfn); else:; return core.variable('CURRENT ENERGY'). [docs]def gradient(name, **kwargs):; r""""""Function complementary to :py:func:~driver.optimize(). Carries out one gradient pass,; deciding analytic or finite difference. :returns: :py:class:`~psi4.core.Matrix` |w--w| Total electronic gradient in Hartrees/Bohr. :returns: (:py:class:`~psi4.core.Matrix`",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/driver.html:35564,safe,safer,35564,psi4manual/1.3.2/_modules/psi4/driver/driver.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/_modules/psi4/driver/driver.html,1,['safe'],['safer']
