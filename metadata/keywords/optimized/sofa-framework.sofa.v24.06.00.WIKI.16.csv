quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"﻿. SOFA API: sofa::gui::qt::GenericDataWidget< DATA, WIDGET > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::GenericDataWidget< DATA, WIDGET > Class Template Reference . #include <GenericWidget.h>. Inheritance diagram for sofa::gui::qt::GenericDataWidget< DATA, WIDGET >:. [legend]. Protected Attributes; MyData * m_data;  ; MyWidget * m_widget;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  GenericDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html:546,inherit,inherited,546,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html,5,"['Inherit', 'config', 'inherit']","['Inheritance', 'configure', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::GraphDataWidget< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::GraphDataWidget< T > Class Template Reference . #include <GraphDataWidget.h>. Inheritance diagram for sofa::gui::qt::GraphDataWidget< T >:. [legend]. Public Member Functions;  GraphDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html:640,inherit,inherited,640,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget.html,5,"['Inherit', 'config', 'inherit']","['Inheritance', 'configure', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::GraphDataWidget_Linear< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::GraphDataWidget_Linear< T > Class Template Reference . #include <GraphDataWidget.h>. Inheritance diagram for sofa::gui::qt::GraphDataWidget_Linear< T >:. [legend]. Public Member Functions;  GraphDataWidget_Linear (QWidget *parent, const char *name, MyData *d);  ; virtual bool createWidgets ();  ;  Public Member Functions inherited from sofa::gui::qt::GraphDataWidget< T >;  GraphDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, graph_data_widget_container< T > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html:543,inherit,inherited,543,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_data_widget___linear.html,7,"['Inherit', 'config', 'inherit']","['Inheritance', 'configure', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::GraphListenerQListView Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::GraphListenerQListView Class Reference . #include <GraphListenerQListView.h>. Inheritance diagram for sofa::gui::qt::GraphListenerQListView:. [legend]. Public Attributes; SofaSceneGraphWidget * widget;  ; std::map< core::objectmodel::Base *, ObjectStateListener * > listeners;  ; std::map< core::objectmodel::Base *, QTreeWidgetItem * > items;  ; std::map< core::objectmodel::BaseData *, QTreeWidgetItem * > datas;  ; std::multimap< QTreeWidgetItem *, QTreeWidgetItem * > nodeWithMultipleParents;  . Static Public Attributes; static QColor nameColor { 120, 120, 120};  . Public Member Functions;  GraphListenerQListView (SofaSceneGraphWidget *w);  ;  ~GraphListenerQListView () override;  ; QTreeWidgetItem * createItem (QTreeWidgetItem *parent);  ; virtual void onBeginAddChild (Node *parent, Node *child) override;  ; virtual void onBeginRemoveChild (Node *parent, Node *child) override;  ; virtual void onBeginAddObject (Node *parent, core::objectmodel::BaseObject *object) override;  ; virtual void onBeginRemoveObject (Node *, core::objectmodel::BaseObject *object) override;  ; virtual void onBeginAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave) override;  ; virtual void onBeginRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave) override;  ; virtual void sleepChanged (Node *node) override;  ; virtual void addDatas (core::objectmodel::BaseObject *parent);  ; virtual void removeDatas (core::objectmodel::BaseObject *parent);  ; core::objectmodel::Base * findObject (const QTreeWidgetItem *item);  ; core::objectmodel::BaseData * findData (const QTreeWidgetItem *item);  ;  Public Member Functions inherited from sofa::simulation::MutationListener; virtual ~Mut",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_listener_q_list_view.html:333,Inherit,Inheritance,333,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_listener_q_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_listener_q_list_view.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::GraphOptionWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::GraphOptionWidget Class Reference . #include <GraphDataWidget.h>. Inheritance diagram for sofa::gui::qt::GraphOptionWidget:. [legend]. Protected Attributes; unsigned idfile;  ; QPushButton * exportGNUPLOTButton;  ; QLineEdit * fileGNUPLOTLineEdit;  ; QPushButton * findGNUPLOTFile;  ; QCheckBox * checkBox;  ; QPushButton * exportImageButton;  ; QLineEdit * fileImageLineEdit;  ; QPushButton * findImageFile;  ; GraphSetting * graph;  . Public Member Functions;  GraphOptionWidget (const std::string &dataName, GraphSetting *graphConf);  . Public Slots; void openFindFileDialog ();  ; void exportGNUPlot ();  ; void exportImage ();  ; bool isCheckedBox ();  . Attribute details. ◆ checkBox. QCheckBox* sofa::gui::qt::GraphOptionWidget::checkBox. protected . ◆ exportGNUPLOTButton. QPushButton* sofa::gui::qt::GraphOptionWidget::exportGNUPLOTButton. protected . ◆ exportImageButton. QPushButton* sofa::gui::qt::GraphOptionWidget::exportImageButton. protected . ◆ fileGNUPLOTLineEdit. QLineEdit* sofa::gui::qt::GraphOptionWidget::fileGNUPLOTLineEdit. protected . ◆ fileImageLineEdit. QLineEdit* sofa::gui::qt::GraphOptionWidget::fileImageLineEdit. protected . ◆ findGNUPLOTFile. QPushButton* sofa::gui::qt::GraphOptionWidget::findGNUPLOTFile. protected . ◆ findImageFile. QPushButton* sofa::gui::qt::GraphOptionWidget::findImageFile. protected . ◆ graph. GraphSetting* sofa::gui::qt::GraphOptionWidget::graph. protected . ◆ idfile. unsigned sofa::gui::qt::GraphOptionWidget::idfile. protected . Constructor details. ◆ GraphOptionWidget(). sofa::gui::qt::GraphOptionWidget::GraphOptionWidget ; (; const std::string & ; dataName, . GraphSetting * ; graphConf . ). Function details. ◆ exportGNUPlot. void sofa::gui::qt::GraphOptionWidget::exportGNUPlot ; (; ). slot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_option_widget.html:307,Inherit,Inheritance,307,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_option_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_option_widget.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::gui::qt::GraphSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::GraphSetting Class Referenceabstract . #include <GraphDataWidget.h>. Inheritance diagram for sofa::gui::qt::GraphSetting:. [legend]. Public Member Functions; virtual ~GraphSetting ();  ; virtual void exportGNUPlot (const std::string &baseFileName) const =0;  ; virtual void exportImage (const std::string &baseFileName) const =0;  . Constructor details. ◆ ~GraphSetting(). virtual sofa::gui::qt::GraphSetting::~GraphSetting ; (; ). inlinevirtual . Function details. ◆ exportGNUPlot(). virtual void sofa::gui::qt::GraphSetting::exportGNUPlot ; (; const std::string & ; baseFileName); const. pure virtual . Implemented in sofa::gui::qt::GraphWidget< DataType >. ◆ exportImage(). virtual void sofa::gui::qt::GraphSetting::exportImage ; (; const std::string & ; baseFileName); const. pure virtual . Implemented in sofa::gui::qt::GraphWidget< DataType >. sofaguiqtGraphSetting; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_setting.html:265,Inherit,Inheritance,265,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_setting.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::GraphWidget< DataType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::GraphWidget< DataType > Class Template Reference . #include <GraphDataWidget.h>. Inheritance diagram for sofa::gui::qt::GraphWidget< DataType >:. [legend]. Protected Attributes; QChartView * w;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; std::map< QString, CurveData * > m_curves;  vector of series to be plotted More...;  ; data_type currentData;  . Public Member Functions;  GraphWidget (QWidget *parent);  ; virtual ~GraphWidget ();  ; QWidget * getWidget ();  ; void readFromData (const data_type &d0);  ; void exportGNUPlot (const std::string &baseFileName) const;  ; void exportImage (const std::string &baseFileName) const;  ;  Public Member Functions inherited from sofa::gui::qt::GraphSetting; virtual ~GraphSetting ();  . Protected Member Functions; std::string getCurveFilename (unsigned int idx) const;  . Attribute details. ◆ currentData. template<class DataType > . data_type sofa::gui::qt::GraphWidget< DataType >::currentData. protected . ◆ m_axisX. template<class DataType > . QValueAxis* sofa::gui::qt::GraphWidget< DataType >::m_axisX. protected . x axis pointer . ◆ m_axisY. template<class DataType > . QValueAxis* sofa::gui::qt::GraphWidget< DataType >::m_axisY. protected . y axis pointer . ◆ m_chart. template<class DataType > . QChart* sofa::gui::qt::GraphWidget< DataType >::m_chart. protected . Pointer to the chart Data. . ◆ m_curves. template<class DataType > . std::map<QString, CurveData*> sofa::gui::qt::GraphWidget< DataType >::m_curves. protected . vector of series to be plotted . ◆ w. template<class DataType > . QChartView* sofa::gui::qt::GraphWidget< DataType >::w. protected .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_widget.html:1046,inherit,inherited,1046,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_widget.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::gui::qt::InformationOnPickCallBack Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::InformationOnPickCallBack Class Reference . #include <PickHandlerCallBacks.h>. Inheritance diagram for sofa::gui::qt::InformationOnPickCallBack:. [legend]. Protected Attributes; RealGUI * gui;  . Public Member Functions;  InformationOnPickCallBack ();  ;  InformationOnPickCallBack (RealGUI *g);  ; void execute (const BodyPicked &body) override;  ;  Public Member Functions inherited from sofa::gui::common::CallBackPicker; virtual ~CallBackPicker ();  . Attribute details. ◆ gui. RealGUI* sofa::gui::qt::InformationOnPickCallBack::gui. protected . Constructor details. ◆ InformationOnPickCallBack() [1/2]. sofa::gui::qt::InformationOnPickCallBack::InformationOnPickCallBack ; (; ). ◆ InformationOnPickCallBack() [2/2]. sofa::gui::qt::InformationOnPickCallBack::InformationOnPickCallBack ; (; RealGUI * ; g). Function details. ◆ execute(). void sofa::gui::qt::InformationOnPickCallBack::execute ; (; const BodyPicked & ; body). overridevirtual . Implements sofa::gui::common::CallBackPicker. sofaguiqtInformationOnPickCallBack; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_information_on_pick_call_back.html:608,inherit,inherited,608,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_information_on_pick_call_back.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_information_on_pick_call_back.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::LinkWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::LinkWidget Class Referenceabstract . #include <LinkWidget.h>; Abstract Interface of a qwidget which allows to edit a link. ; More... Inheritance diagram for sofa::gui::qt::LinkWidget:. [legend]; Detailed Description; Abstract Interface of a qwidget which allows to edit a link. . Classes; struct  CreatorArgument;  . Protected Attributes; core::objectmodel::BaseLink * baseLink;  ; bool dirty;  ; int counter;  . Public Member Functions;  LinkWidget (QWidget *parent, const char *, MyLink *l);  ;  ~LinkWidget () override;  ; virtual void setLink (MyLink *d);  ; const core::objectmodel::BaseLink * getBaseLink () const;  BaseLink pointer accessor function. More...;  ; core::objectmodel::BaseLink * getBaseLink ();  ; void updateVisibility ();  ; bool isDirty ();  ; virtual bool createWidgets ()=0;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Static Public Member Functions; static LinkWidget * CreateLinkWidget (const LinkWidget::CreatorArgument &dwarg);  . Protected Member Functions; virtual void readFromLink ()=0;  The implementation of this method tells how the widget reads the value of the link. More...;  ; virtual void writeToLink ()=0;  . Signals; void WidgetDirty (bool);  ; void LinkOwnerDirty (bool);  ; void LinkBeingChanged ();  . Public Slots; void updateLinkValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty ();  ; void setWidgetDirty (bool b);  . Attribute details. ◆ baseLink. core::objectmodel::BaseLink* sofa::gui::qt::LinkWidget::baseLink. protected . ◆ counter. int sofa::gui::qt::LinkWidget::counter. protected . ◆ dirty. b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html:453,Inherit,Inheritance,453,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_link_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::ModifyObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; Protected Slots |; List of all members . sofa::gui::qt::ModifyObject Class Reference . #include <ModifyObject.h>. Inheritance diagram for sofa::gui::qt::ModifyObject:. [legend]. Protected Attributes; void * Id_;  ; QTreeWidgetItem * item_;  ; core::objectmodel::Base * basenode;  ; core::objectmodel::BaseData * data_;  ; const ModifyObjectFlags dialogFlags_;  ; QWidget * messageTab;  ; QTextBrowser * messageEdit;  ; QTabWidget * dialogTab;  ; QPushButton * buttonUpdate;  ; int m_numMessages;  ; std::vector< QTabulationModifyObject * > m_tabs;  . Public Member Functions;  ModifyObject (void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~ModifyObject () override;  ; const ModifyObjectFlags & getFlags ();  ; void createDialog (core::objectmodel::Base *node);  ; void createDialog (core::objectmodel::BaseData *data);  ; bool hideData (core::objectmodel::BaseData *data);  ; void readOnlyData (QTableWidget *widget, core::objectmodel::BaseData *data);  ; void readOnlyData (QWidget *widget, core::objectmodel::BaseData *data);  . Protected Member Functions; void updateConsole ();  ; QString parseDataModified ();  . Signals; void updateDataWidgets ();  ; void objectUpdated ();  ; void dialogClosed (void *);  ; void nodeNameModification (simulation::Node *);  ; void componentDirty (bool);  ; void dataModified (QString);  ; void beginObjectModification (sofa::core::objectmodel::Base *object);  ; void endObjectModification (sofa::core::objectmodel::Base *object);  ; void beginDataModification (sofa::core::objectmodel::BaseData *data);  ; void endDataModification (sofa::core::objectmodel::BaseData *data);  . Publi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:354,Inherit,Inheritance,354,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::gui::qt::MovieOptionsWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::MovieOptionsWidget Class Reference . #include <SofaVideoRecorderManager.h>. Inheritance diagram for sofa::gui::qt::MovieOptionsWidget:. [legend]. Classes; struct  Codec;  . Public Attributes; QComboBox * codecComboBox;  ; QSpinBox * bitrateSpinBox;  ; std::vector< Codec > listCodecs;  . Public Member Functions;  MovieOptionsWidget (QWidget *parent=nullptr);  . Attribute details. ◆ bitrateSpinBox. QSpinBox* sofa::gui::qt::MovieOptionsWidget::bitrateSpinBox. ◆ codecComboBox. QComboBox* sofa::gui::qt::MovieOptionsWidget::codecComboBox. ◆ listCodecs. std::vector< Codec > sofa::gui::qt::MovieOptionsWidget::listCodecs. Constructor details. ◆ MovieOptionsWidget(). sofa::gui::qt::MovieOptionsWidget::MovieOptionsWidget ; (; QWidget * ; parent = nullptr). sofaguiqtMovieOptionsWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_movie_options_widget.html:310,Inherit,Inheritance,310,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_movie_options_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_movie_options_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::ObjectStateListener Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::ObjectStateListener Class Reference . #include <GraphListenerQListView.h>. Inheritance diagram for sofa::gui::qt::ObjectStateListener:. [legend]; Detailed Description; A listener to connect changes on the component state with its graphical view. The listener is added to the ComponentState of an object to track changes to and update the icon/treewidgetitem when this happens. . Public Attributes; QTreeWidgetItem * item;  ; sofa::core::objectmodel::Base::SPtr object;  . Public Member Functions;  ObjectStateListener (QTreeWidgetItem *item_, sofa::core::objectmodel::Base *object_);  ;  ~ObjectStateListener () override;  ; void update () override;  Update this value. More...;  ; void notifyEndEdit () override;  Notify links that the DGNode has been modified. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html:299,Inherit,Inheritance,299,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_object_state_listener.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::PieWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::PieWidget Class Reference . #include <PieWidget.h>. Inheritance diagram for sofa::gui::qt::PieWidget:. [legend]. Static Public Attributes; static std::vector< type::Vec< 3, int > > colorArray;  . Protected Attributes; std::vector< dataTime > data;  ; unsigned int selection;  ; double totalTime;  ; int sizePie;  . Public Member Functions;  PieWidget (QWidget *parent);  ; void paintEvent (QPaintEvent *);  ; void setChart (std::vector< dataTime > &value, unsigned int s);  ; void clear ();  . Static Public Member Functions; static type::Vec< 3, int > getColor (int i);  . Attribute details. ◆ colorArray. std::vector< type::Vec< 3, int > > sofa::gui::qt::PieWidget::colorArray. static . ◆ data. std::vector< dataTime > sofa::gui::qt::PieWidget::data. protected . ◆ selection. unsigned int sofa::gui::qt::PieWidget::selection. protected . ◆ sizePie. int sofa::gui::qt::PieWidget::sizePie. protected . ◆ totalTime. double sofa::gui::qt::PieWidget::totalTime. protected . Constructor details. ◆ PieWidget(). sofa::gui::qt::PieWidget::PieWidget ; (; QWidget * ; parent). Function details. ◆ clear(). void sofa::gui::qt::PieWidget::clear ; (; ). ◆ getColor(). type::Vec< 3, int > sofa::gui::qt::PieWidget::getColor ; (; int ; i). static . ◆ paintEvent(). void sofa::gui::qt::PieWidget::paintEvent ; (; QPaintEvent * ; ). ◆ setChart(). void sofa::gui::qt::PieWidget::setChart ; (; std::vector< dataTime > & ; value, . unsigned int ; s . ). sofaguiqtPieWidget; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget.html:331,Inherit,Inheritance,331,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::ProfilerChartView Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::ProfilerChartView Class Reference . #include <SofaWindowProfiler.h>; The ProfilerChartView class is a override of QtCharts::QChartView to be able to catch mouse selection and update all widgets of. ; More... Inheritance diagram for sofa::gui::qt::ProfilerChartView:. [legend]; Detailed Description; The ProfilerChartView class is a override of QtCharts::QChartView to be able to catch mouse selection and update all widgets of. ; See alsoSofaWindowProfiler Will also override drawForeground to draw a line to show the selected step. . Protected Attributes; int m_bufferSize;  copy of the series size to check if selection is not out of bound More...;  ; QPointF m_lineSelect;  2D point of the line to draw the selection More...;  ; QPointF m_lineOrigin;  ; int m_pointSelected;  Step number selected on the graph. -1 if none. More...;  ; int m_maxY;  Stored value of the Y axis max. More...;  . Public Member Functions;  ProfilerChartView (QChart *chart, QWidget *parent, int bufferSize);  ; void updateYMax (int y);  method to update the max value of the Y axis (for line rendering). More...;  . Protected Member Functions; virtual void mousePressEvent (QMouseEvent *event);  Override to catch mouse selection on the graph. More...;  ; virtual void drawForeground (QPainter *painter, const QRectF &rect);  Override to draw line at the step selected. More...;  . Signals; void pointSelected (int);  signal emitted when a step has been selected on the graph More...;  . Public Slots; void updateSelection (int x);  method to update the selection on the graph. More...;  . Attribute details. ◆ m_bufferSize. int sofa::gui::qt::ProfilerChartView::m_bufferSize. protected . copy of the series size to check if selection is ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html:490,Inherit,Inheritance,490,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_profiler_chart_view.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QAddRecordedCameraOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QAddRecordedCameraOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QAddRecordedCameraOperation:. [legend]. Public Member Functions;  QAddRecordedCameraOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation;  AddRecordedCameraOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::AddRecordedCameraOperation; sofa::gui::component::AddRecordedCameraButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html:433,config,configure,433,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html,11,"['Inherit', 'config', 'inherit']","['Inheritance', 'configure', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QAddSutureOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::QAddSutureOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QAddSutureOperation:. [legend]. Protected Attributes; QLineEdit * stiffness;  ; QLineEdit * damping;  ;  Protected Attributes inherited from sofa::gui::common::AddSutureOperation; double stiffness;  ; double damping;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QAddSutureOperation ();  ; double getStiffness () const override;  ; double getDamping () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::AddSutureOperation;  AddSutureOperation ();  ;  ~AddSutureOperation () override;  ; void setStiffness (double f);  ; void setDamping (double f);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html:461,inherit,inherited,461,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QAttachOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::QAttachOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QAttachOperation:. [legend]. Protected Attributes; DataWidget * stiffnessWidget;  ; DataWidget * arrowSizeWidget;  ; DataWidget * showSizeFactorWidget;  ;  Protected Attributes inherited from sofa::gui::common::AttachOperation; sofa::gui::component::AttachBodyButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QAttachOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::AttachOperation;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOpera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation.html:506,inherit,inherited,506,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QDataDescriptionWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QDataDescriptionWidget Class Reference . #include <QDataDescriptionWidget.h>. Inheritance diagram for sofa::gui::qt::QDataDescriptionWidget:. [legend]. Public Member Functions;  QDataDescriptionWidget (QWidget *parent, core::objectmodel::Base *object);  ; void addRow (QGridLayout *grid, const std::string &title, const std::string &value, unsigned int row, unsigned int minimumWidth=0);  ; void addRowHyperLink (QGridLayout *grid, const std::string &title, const std::string &value, unsigned int row, unsigned int minimumWidth=0);  . Constructor details. ◆ QDataDescriptionWidget(). sofa::gui::qt::QDataDescriptionWidget::QDataDescriptionWidget ; (; QWidget * ; parent, . core::objectmodel::Base * ; object . ). Function details. ◆ addRow(). void sofa::gui::qt::QDataDescriptionWidget::addRow ; (; QGridLayout * ; grid, . const std::string & ; title, . const std::string & ; value, . unsigned int ; row, . unsigned int ; minimumWidth = 0 . ). ◆ addRowHyperLink(). void sofa::gui::qt::QDataDescriptionWidget::addRowHyperLink ; (; QGridLayout * ; grid, . const std::string & ; title, . const std::string & ; value, . unsigned int ; row, . unsigned int ; minimumWidth = 0 . ). sofaguiqtQDataDescriptionWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_description_widget.html:284,Inherit,Inheritance,284,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_description_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_description_widget.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::gui::qt::QDataSeries< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::QDataSeries< T > Class Template Reference . #include <GraphDataWidget.h>. Inheritance diagram for sofa::gui::qt::QDataSeries< T >:. [legend]. Public Attributes; real_type m_xMin;  ; real_type m_yMin;  ; real_type m_xMax;  ; real_type m_yMax;  . Protected Attributes; const T * data0;  . Public Member Functions;  QDataSeries ();  ;  QDataSeries (const QDataSeries< T > &c);  ; void setData (const T *p);  ; virtual QLineSeries * copy () const;  ; virtual sofa::Size size () const;  ; virtual void parseData ();  ; virtual QPointF sample (sofa::Index i) const;  . Attribute details. ◆ data0. template<class T > . const T* sofa::gui::qt::QDataSeries< T >::data0. protected . ◆ m_xMax. template<class T > . real_type sofa::gui::qt::QDataSeries< T >::m_xMax. ◆ m_xMin. template<class T > . real_type sofa::gui::qt::QDataSeries< T >::m_xMin. ◆ m_yMax. template<class T > . real_type sofa::gui::qt::QDataSeries< T >::m_yMax. ◆ m_yMin. template<class T > . real_type sofa::gui::qt::QDataSeries< T >::m_yMin. Constructor details. ◆ QDataSeries() [1/2]. template<class T > . sofa::gui::qt::QDataSeries< T >::QDataSeries ; (; ). inline . ◆ QDataSeries() [2/2]. template<class T > . sofa::gui::qt::QDataSeries< T >::QDataSeries ; (; const QDataSeries< T > & ; c). inline . Function details. ◆ copy(). template<class T > . virtual QLineSeries* sofa::gui::qt::QDataSeries< T >::copy ; (; ); const. inlinevirtual . ◆ parseData(). template<class T > . virtual void sofa::gui::qt::QDataSeries< T >::parseData ; (; ). inlinevirtual . ◆ sample(). template<class T > . virtual QPointF sofa::gui::qt::QDataSeries< T >::sample ; (; sofa::Index ; i); const. inlinevirtual . ◆ setData(). template<class T > . void sofa::gui::qt::QDataSeries< T >::setData ; (; const T * ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_series.html:328,Inherit,Inheritance,328,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_series.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_series.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QDataSimpleEdit Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QDataSimpleEdit Class Reference . #include <QDisplayDataWidget.h>. Inheritance diagram for sofa::gui::qt::QDataSimpleEdit:. [legend]. Protected Attributes; QSimpleEdit innerWidget_;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  QDataSimpleEdit (QWidget *, const char *name, core::objectmodel::BaseData *);  ; unsigned int numColumnWidget () override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ; void setDataReadOnly (bool readOnly) override;  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Protected Member Functions; void readFromData () override;  The implementation of this method tells how the widget reads the value of the data. More...;  ; void writeToData () override;  . Additiona",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit.html:471,inherit,inherited,471,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_data_simple_edit.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QDisplayDataInfoWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QDisplayDataInfoWidget Class Reference . #include <DataWidget.h>. Inheritance diagram for sofa::gui::qt::QDisplayDataInfoWidget:. [legend]. Protected Attributes; core::objectmodel::BaseData * data;  ; unsigned int numLines_;  ; QLineEdit * linkpath_edit;  . Public Member Functions;  QDisplayDataInfoWidget (QWidget *parent, const std::string &helper, core::objectmodel::BaseData *d, bool modifiable, const ModifyObjectFlags &modifyObjectFlags);  . Protected Member Functions; void formatHelperString (const std::string &helper, std::string &final_text);  . Static Protected Member Functions; static QIcon & LinkIcon ();  ; static unsigned int numLines (const std::string &str);  . Signals; void WidgetDirty ();  . Public Slots; void linkModification ();  ; void linkEdited ();  ; unsigned int getNumLines () const;  . Attribute details. ◆ data. core::objectmodel::BaseData* sofa::gui::qt::QDisplayDataInfoWidget::data. protected . ◆ linkpath_edit. QLineEdit* sofa::gui::qt::QDisplayDataInfoWidget::linkpath_edit. protected . ◆ numLines_. unsigned int sofa::gui::qt::QDisplayDataInfoWidget::numLines_. protected . Constructor details. ◆ QDisplayDataInfoWidget(). sofa::gui::qt::QDisplayDataInfoWidget::QDisplayDataInfoWidget ; (; QWidget * ; parent, . const std::string & ; helper, . core::objectmodel::BaseData * ; d, . bool ; modifiable, . const ModifyObjectFlags & ; modifyObjectFlags . ). Function details. ◆ formatHelperString(). void sofa::gui::qt::QDisplayDataInfoWidget::formatHelperString ; (; const std::string & ; helper, . std::string & ; final_text . ). protected . ◆ getNumLines. unsigned int sofa::gui::qt::QDisplayDataInfoWidget::getNumLines ; (; ); const. inli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_info_widget.html:390,Inherit,Inheritance,390,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_info_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_info_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QDisplayDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QDisplayDataWidget Class Reference . #include <QDisplayDataWidget.h>. Inheritance diagram for sofa::gui::qt::QDisplayDataWidget:. [legend]. Protected Attributes; core::objectmodel::BaseData * data_;  ; ModifyObjectFlags flags_;  ; QDisplayDataInfoWidget * datainfowidget_;  ; DataWidget * datawidget_;  ; unsigned int numWidgets_;  ; QGridLayout * gridLayout_;  . Public Member Functions;  QDisplayDataWidget (QWidget *parent, core::objectmodel::BaseData *data, const ModifyObjectFlags &flags);  ; unsigned int getNumWidgets () const;  ; ModifyObjectFlags flag ();  . Static Protected Member Functions; static QIcon & RefreshIcon ();  . Signals; void WidgetDirty (bool);  ; void WidgetUpdate ();  ; void DataUpdate ();  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString);  . Public Slots; void UpdateData ();  ; void UpdateWidgets ();  . Attribute details. ◆ data_. core::objectmodel::BaseData* sofa::gui::qt::QDisplayDataWidget::data_. protected . ◆ datainfowidget_. QDisplayDataInfoWidget* sofa::gui::qt::QDisplayDataWidget::datainfowidget_. protected . ◆ datawidget_. DataWidget* sofa::gui::qt::QDisplayDataWidget::datawidget_. protected . ◆ flags_. ModifyObjectFlags sofa::gui::qt::QDisplayDataWidget::flags_. protected . ◆ gridLayout_. QGridLayout* sofa::gui::qt::QDisplayDataWidget::gridLayout_. protected . ◆ numWidgets_. unsigned int sofa::gui::qt::QDisplayDataWidget::numWidgets_. protected . Constructor details. ◆ QDisplayDataWidget(). sofa::gui::qt::QDisplayDataWidget::QDisplayDataWidget ; (; QWidget * ; parent, . core::objectmodel::BaseData * ; data, . const ModifyObjectFlags & ; flags . ). Function details. ◆ DataOwnerDirty. void sofa::gui::qt::QDisplayDataWidget::DataOwnerDirty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_widget.html:360,Inherit,Inheritance,360,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_data_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QDisplayLinkInfoWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QDisplayLinkInfoWidget Class Reference . #include <LinkWidget.h>; Widget used to display the name of a Link. ; More... Inheritance diagram for sofa::gui::qt::QDisplayLinkInfoWidget:. [legend]; Detailed Description; Widget used to display the name of a Link. . Protected Attributes; core::objectmodel::BaseLink * link;  ; unsigned int numLines_;  . Public Member Functions;  QDisplayLinkInfoWidget (QWidget *parent, const std::string &helper, core::objectmodel::BaseLink *l, bool modifiable);  . Protected Member Functions; void formatHelperString (const std::string &helper, std::string &final_text);  . Static Protected Member Functions; static unsigned int numLines (const std::string &str);  . Public Slots; unsigned int getNumLines () const;  . Attribute details. ◆ link. core::objectmodel::BaseLink* sofa::gui::qt::QDisplayLinkInfoWidget::link. protected . ◆ numLines_. unsigned int sofa::gui::qt::QDisplayLinkInfoWidget::numLines_. protected . Constructor details. ◆ QDisplayLinkInfoWidget(). sofa::gui::qt::QDisplayLinkInfoWidget::QDisplayLinkInfoWidget ; (; QWidget * ; parent, . const std::string & ; helper, . core::objectmodel::BaseLink * ; l, . bool ; modifiable . ). Function details. ◆ formatHelperString(). void sofa::gui::qt::QDisplayLinkInfoWidget::formatHelperString ; (; const std::string & ; helper, . std::string & ; final_text . ). protected . ◆ getNumLines. unsigned int sofa::gui::qt::QDisplayLinkInfoWidget::getNumLines ; (; ); const. inlineslot . ◆ numLines(). unsigned int sofa::gui::qt::QDisplayLinkInfoWidget::numLines ; (; const std::string & ; str). staticprotected . sofaguiqtQDisplayLinkInfoWidget; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_info_widget.html:432,Inherit,Inheritance,432,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_info_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_info_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QDisplayLinkWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QDisplayLinkWidget Class Reference . #include <QDisplayLinkWidget.h>. Inheritance diagram for sofa::gui::qt::QDisplayLinkWidget:. [legend]. Protected Attributes; core::objectmodel::BaseLink * link_;  ; QDisplayLinkInfoWidget * linkinfowidget_;  ; LinkWidget * linkwidget_;  ; unsigned int numWidgets_;  ; QHBoxLayout * gridLayout_;  . Public Member Functions;  QDisplayLinkWidget (QWidget *parent, core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags);  ; unsigned int getNumWidgets () const;  . Static Protected Member Functions; static QIcon & RefreshIcon ();  . Signals; void WidgetDirty (bool);  ; void WidgetUpdate ();  ; void LinkUpdate ();  ; void LinkOwnerDirty (bool);  . Public Slots; void UpdateLink ();  ; void UpdateWidgets ();  . Attribute details. ◆ gridLayout_. QHBoxLayout* sofa::gui::qt::QDisplayLinkWidget::gridLayout_. protected . ◆ link_. core::objectmodel::BaseLink* sofa::gui::qt::QDisplayLinkWidget::link_. protected . ◆ linkinfowidget_. QDisplayLinkInfoWidget* sofa::gui::qt::QDisplayLinkWidget::linkinfowidget_. protected . ◆ linkwidget_. LinkWidget* sofa::gui::qt::QDisplayLinkWidget::linkwidget_. protected . ◆ numWidgets_. unsigned int sofa::gui::qt::QDisplayLinkWidget::numWidgets_. protected . Constructor details. ◆ QDisplayLinkWidget(). sofa::gui::qt::QDisplayLinkWidget::QDisplayLinkWidget ; (; QWidget * ; parent, . core::objectmodel::BaseLink * ; link, . const ModifyObjectFlags & ; flags . ). Function details. ◆ getNumWidgets(). unsigned int sofa::gui::qt::QDisplayLinkWidget::getNumWidgets ; (; ); const. inline . ◆ LinkOwnerDirty. void sofa::gui::qt::QDisplayLinkWidget::LinkOwnerDirty ; (; bool ; ). signal . ◆ LinkUpdate. void sofa::gui::qt::QDisplayLinkWi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_widget.html:360,Inherit,Inheritance,360,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_link_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QDisplayPropertyWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Slots |; Friends |; List of all members . sofa::gui::qt::QDisplayPropertyWidget Class Reference . #include <QDisplayPropertyWidget.h>. Inheritance diagram for sofa::gui::qt::QDisplayPropertyWidget:. [legend]. Public Member Functions;  QDisplayPropertyWidget (const ModifyObjectFlags &modifyFlags, QWidget *parent=nullptr);  ;  ~QDisplayPropertyWidget () override;  ; void addComponent (const QString &component, core::objectmodel::Base *base, QTreeWidgetItem *listItem, bool clear=true);  ; void addGroup (const QString &component, const QString &group);  ; void addData (const QString &component, const QString &group, sofa::core::objectmodel::BaseData *data);  ; void addLink (const QString &component, const QString &group, sofa::core::objectmodel::BaseLink *link);  ; void setDescription (const QString &component, const QString &group, sofa::core::objectmodel::Base *base);  ; void setConsoleOutput (const QString &component, const QString &group, sofa::core::objectmodel::Base *base);  ; void clear ();  ; void clearAll ();  . Static Public Member Functions; static QString DefaultDataGroup ();  ; static QString DefaultLinkGroup ();  ; static QString DefaultInfoGroup ();  ; static QString DefaultLogGroup ();  . Protected Member Functions; void addDescriptionItem (QTreeWidgetItem *groupItem, const QString &name, const QString &description);  ; QTreeWidgetItem * findComponent (const QString &component) const;  ; QTreeWidgetItem * findGroup (const QString &component, const QString &group) const;  . Protected Slots; void clearComponentOutput ();  ; void clearComponentWarning ();  . Friends; class GraphHistoryManager;  ; class LinkComponent;  . Constructor details. ◆ QDisplayPropertyWidget(). sofa::gui::qt::QDisplayPropertyWidget::QDisplayPrope",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:378,Inherit,Inheritance,378,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QDisplayTreeItemWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Slots |; List of all members . sofa::gui::qt::QDisplayTreeItemWidget Class Reference . #include <QDisplayPropertyWidget.h>. Inheritance diagram for sofa::gui::qt::QDisplayTreeItemWidget:. [legend]. Public Member Functions;  QDisplayTreeItemWidget (QWidget *parent=nullptr, QTreeWidgetItem *item=nullptr);  ;  ~QDisplayTreeItemWidget () override;  . Protected Slots; void updateDirtyWidget ();  . Constructor details. ◆ QDisplayTreeItemWidget(). sofa::gui::qt::QDisplayTreeItemWidget::QDisplayTreeItemWidget ; (; QWidget * ; parent = nullptr, . QTreeWidgetItem * ; item = nullptr . ). ◆ ~QDisplayTreeItemWidget(). sofa::gui::qt::QDisplayTreeItemWidget::~QDisplayTreeItemWidget ; (; ). override . Function details. ◆ updateDirtyWidget. void sofa::gui::qt::QDisplayTreeItemWidget::updateDirtyWidget ; (; ). protectedslot . sofaguiqtQDisplayTreeItemWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_tree_item_widget.html:303,Inherit,Inheritance,303,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_tree_item_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_tree_item_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QEnergyStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QEnergyStatWidget Class Reference . #include <QEnergyStatWidget.h>. Inheritance diagram for sofa::gui::qt::QEnergyStatWidget:. [legend]. Public Member Functions;  QEnergyStatWidget (QWidget *parent, simulation::Node *node);  ;  ~QEnergyStatWidget ();  ; void stepImpl () override;  the only function that should be overloaded More...;  ;  Public Member Functions inherited from sofa::gui::qt::QGraphStatWidget;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::QGraphStatWidget; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  ;  Protected Member Functions inherited from sofa::gui::qt::QGraphStatWidget; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Constructor details. ◆ QEnergyStatWidget(). sofa::gui::qt::QEnergyStatWidget::QEnergySt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget.html:564,inherit,inherited,564,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_energy_stat_widget.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QFixOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::QFixOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QFixOperation:. [legend]. Protected Attributes; DataWidget * stiffnessWidget;  ;  Protected Attributes inherited from sofa::gui::common::FixOperation; sofa::gui::component::FixPickedParticleButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QFixOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::FixOperation;  FixOperation ();  ;  ~FixOperation () override;  ; void setStiffness (double s);  ; virtual double getStiffness () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html:426,inherit,inherited,426,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QGraphStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QGraphStatWidget Class Referenceabstract . #include <QGraphStatWidget.h>. Inheritance diagram for sofa::gui::qt::QGraphStatWidget:. [legend]; Detailed Description; Base class to make graphes in the stat tab of the node widget TODO add gnuplot export . Protected Attributes; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  . Public Member Functions;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  ; virtual void stepImpl ()=0;  the only function that should be overloaded More...;  . Protected Member Functions; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Attribute details. ◆ m_axisX. QValueAxis* sofa::gui::qt::QGraphStatWidget::m_axisX. protected . x axis pointer . ◆ m_axisY. QValueAxis* sofa::gui::qt::QGraphStatWidget::m_axisY. protected . y axis pointer . ◆ ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget.html:328,Inherit,Inheritance,328,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_graph_stat_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QInciseOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QInciseOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QInciseOperation:. [legend]. Public Attributes; bool finishIncision;  ; bool keepPoint;  ;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Protected Attributes; QGroupBox * incisionMethodChoiceGroup;  ; QRadioButton * method1;  ; QRadioButton * method2;  ; QGroupBox * advancedOperations;  ; QCheckBox * finishCut;  ; QCheckBox * storeLastPoint;  ; QGroupBox * advancedOptions;  ; QSlider * snapingBorderSlider;  ; QSpinBox * snapingBorderValue;  ; QSlider * snapingSlider;  ; QSpinBox * snapingValue;  ;  Protected Attributes inherited from sofa::gui::common::InciseOperation; sofa::gui::component::performer::InteractionPerformer * startPerformer;  ; int method;  ; int snapingBorderValue;  ; int snapingValue;  ; int cpt;  ; bool finishIncision;  ; bool keepPoint;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QInciseOperation ();  ; int getIncisionMethod () const override;  ; int getSnapingBorderValue () const override;  ; int getSnapingValue () const override;  ; bool getCompleteIncision () override;  ; bool getKeepPoint () override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::InciseOperation;  InciseOperation ();  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html:476,inherit,inherited,476,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,7,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QLinkSimpleEdit Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QLinkSimpleEdit Class Reference . #include <QDisplayLinkWidget.h>. Inheritance diagram for sofa::gui::qt::QLinkSimpleEdit:. [legend]. Protected Attributes; QSimpleEdit innerWidget_;  ;  Protected Attributes inherited from sofa::gui::qt::LinkWidget; core::objectmodel::BaseLink * baseLink;  ; bool dirty;  ; int counter;  . Public Member Functions;  QLinkSimpleEdit (QWidget *, const char *name, core::objectmodel::BaseLink *);  ; unsigned int numColumnWidget () override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ;  Public Member Functions inherited from sofa::gui::qt::LinkWidget;  LinkWidget (QWidget *parent, const char *, MyLink *l);  ;  ~LinkWidget () override;  ; virtual void setLink (MyLink *d);  ; const core::objectmodel::BaseLink * getBaseLink () const;  BaseLink pointer accessor function. More...;  ; core::objectmodel::BaseLink * getBaseLink ();  ; void updateVisibility ();  ; bool isDirty ();  . Protected Member Functions; void readFromLink () override;  The implementation of this method tells how the widget reads the value of the link. More...;  ; void writeToLink () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::LinkWidget; static LinkWidget * CreateLinkWidget (const LinkWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::LinkWidget; void WidgetDirty (bool);  ; void LinkOwnerDirty (bool);  ; void LinkBeingChanged ();  ;  Public Slots inherited from sofa::gui::qt::LinkWidget; void updateLinkValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty ();  ; void setWidgetDirty (bool b);  . Attribute details. ◆ inn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html:471,inherit,inherited,471,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QMenuFilesRecentlyOpened Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QMenuFilesRecentlyOpened Class Reference . #include <QMenuFilesRecentlyOpened.h>. Inheritance diagram for sofa::gui::qt::QMenuFilesRecentlyOpened:. [legend]. Protected Attributes; QMenu * menuRecentlyOpenedFiles;  ;  Protected Attributes inherited from sofa::gui::common::FilesRecentlyOpenedManager; const unsigned int max_num_files;  ; sofa::type::vector< std::string > files;  ; std::string path;  . Public Member Functions;  QMenuFilesRecentlyOpened (const std::string &configFile);  ;  ~QMenuFilesRecentlyOpened () override;  ; void openFile (const std::string &file) override;  ; QMenu * createWidget (QWidget *parent, const std::string &=std::string(""Recently Opened Files ...""));  ; QMenu * getMenu ();  ;  Public Member Functions inherited from sofa::gui::common::FilesRecentlyOpenedManager;  FilesRecentlyOpenedManager (const std::string &configFile);  ; virtual ~FilesRecentlyOpenedManager ();  ; virtual std::string getFilename (unsigned int idx) const;  ; unsigned int getMaxNumFiles () const;  ; const std::string & getPath () const;  ; void setPath (const std::string &p);  ; const sofa::type::vector< std::string > & getFiles () const;  ; void setFiles (const type::vector< std::string > &f);  . Protected Member Functions; void updateWidget ();  ;  Protected Member Functions inherited from sofa::gui::common::FilesRecentlyOpenedManager; void writeFiles () const;  . Attribute details. ◆ menuRecentlyOpenedFiles. QMenu* sofa::gui::qt::QMenuFilesRecentlyOpened::menuRecentlyOpenedFiles. protected . Constructor details. ◆ QMenuFilesRecentlyOpened(). sofa::gui::qt::QMenuFilesRecentlyOpened::QMenuFilesRecentlyOpened ; (; const std::string & ; configFile). inline . ◆ ~QMenuFilesRecentlyOpened(). sofa::gui::qt::QMenuFilesRec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened.html:500,inherit,inherited,500,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_menu_files_recently_opened.html,5,"['Inherit', 'config', 'inherit']","['Inheritance', 'configFile', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QMomentumStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QMomentumStatWidget Class Reference . #include <QMomentumStatWidget.h>. Inheritance diagram for sofa::gui::qt::QMomentumStatWidget:. [legend]. Public Member Functions;  QMomentumStatWidget (QWidget *parent, simulation::Node *node);  ; virtual ~QMomentumStatWidget ();  ; void stepImpl () override;  the only function that should be overloaded More...;  ;  Public Member Functions inherited from sofa::gui::qt::QGraphStatWidget;  QGraphStatWidget (QWidget *parent, simulation::Node *node, const QString &title, unsigned numberOfCurves, int bufferSize);  ; virtual ~QGraphStatWidget ();  ; virtual void step () final;  Main method called to update the graph. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::QGraphStatWidget; simulation::Node * m_node;  pointer to the node monitored More...;  ; int m_bufferSize;  size of the buffers to stored More...;  ; QChart * m_chart;  Pointer to the chart Data. More...;  ; std::vector< QLineSeries * > m_curves;  vector of series to be plotted More...;  ; QValueAxis * m_axisX;  x axis pointer More...;  ; QValueAxis * m_axisY;  y axis pointer More...;  ; SReal m_yMin;  min y axis value stored More...;  ; SReal m_yMax;  max y axis value stored More...;  ; SReal m_lastTime;  last timestep monitored More...;  ; int m_cptStep;  step counter monitored More...;  ;  Protected Member Functions inherited from sofa::gui::qt::QGraphStatWidget; void setCurve (unsigned index, const QString &name, const QColor &color);  set the index-th curve (index must be < _numberOfCurves) More...;  ; void updateYAxisBounds (SReal value);  Method to update Y axis scale. More...;  ; void flushSeries ();  flush data from series not anymore displayed More...;  . Constructor details. ◆ QMomentumStatWidget(). sofa::gui::qt::QMoment",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html:583,inherit,inherited,583,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_momentum_stat_widget.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,﻿. SOFA API: sofa::gui::qt::QMouseOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QMouseOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QMouseOperation:. [legend]. Public Member Functions; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  . Public Slots; void WidgetDirty (bool);  . Function details. ◆ createWidgetFromData(). DataWidget * sofa::gui::qt::QMouseOperation::createWidgetFromData ; (; sofa::core::objectmodel::BaseData * ; data). ◆ WidgetDirty. void sofa::gui::qt::QMouseOperation::WidgetDirty ; (; bool ; b). slot . sofaguiqtQMouseOperation; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_operation.html:280,Inherit,Inheritance,280,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_operation.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QMouseWheelAdjustmentGuard Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QMouseWheelAdjustmentGuard Class Reference . #include <QMouseWheelAdjustementGuard.h>; Filter qt events to allows wheel event to only be accepted when the widget has focus. ; More... Inheritance diagram for sofa::gui::qt::QMouseWheelAdjustmentGuard:. [legend]; Detailed Description; Filter qt events to allows wheel event to only be accepted when the widget has focus. ; To use it you need to do: myWidget->setFocusPolicy(Qt::StrongFocus); myWidget->installEventFilter(new MouseWheelWidgetAdjustmentGuard(ui.comboBox));; This code is grabbed from: https://stackoverflow.com/questions/5821802/qspinbox-inside-a-qscrollarea-how-to-prevent-spin-box-from-stealing-focus-when . Public Member Functions;  QMouseWheelAdjustmentGuard (QObject *parent);  . Protected Member Functions; bool eventFilter (QObject *o, QEvent *e) override;  . Constructor details. ◆ QMouseWheelAdjustmentGuard(). sofa::gui::qt::QMouseWheelAdjustmentGuard::QMouseWheelAdjustmentGuard ; (; QObject * ; parent). explicit . Function details. ◆ eventFilter(). bool sofa::gui::qt::QMouseWheelAdjustmentGuard::eventFilter ; (; QObject * ; o, . QEvent * ; e . ). overrideprotected . sofaguiqtQMouseWheelAdjustmentGuard; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_wheel_adjustment_guard.html:423,Inherit,Inheritance,423,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_wheel_adjustment_guard.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_mouse_wheel_adjustment_guard.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QPoissonRatioWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Protected Slots |; List of all members . sofa::gui::qt::QPoissonRatioWidget Class Reference . #include <QDisplayDataWidget.h>. Inheritance diagram for sofa::gui::qt::QPoissonRatioWidget:. [legend]. Protected Attributes; QSlider * slider;  ; QLineEdit * lineEdit;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< double >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  QPoissonRatioWidget (QWidget *, const char *, core::objectmodel::Data< double > *);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< double >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< double > * getData ();  ; const sofa::core::objectmodel::Data< double > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html:508,inherit,inherited,508,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QPushButtonUpdater Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QPushButtonUpdater Class Reference . #include <DataWidget.h>. Inheritance diagram for sofa::gui::qt::QPushButtonUpdater:. [legend]. Public Member Functions;  QPushButtonUpdater (const QString &text, QWidget *parent=nullptr);  . Public Slots; void setDisplayed (bool b);  . Constructor details. ◆ QPushButtonUpdater(). sofa::gui::qt::QPushButtonUpdater::QPushButtonUpdater ; (; const QString & ; text, . QWidget * ; parent = nullptr . ). inline . Function details. ◆ setDisplayed. void sofa::gui::qt::QPushButtonUpdater::setDisplayed ; (; bool ; b). slot . sofaguiqtQPushButtonUpdater; Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_push_button_updater.html:280,Inherit,Inheritance,280,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_push_button_updater.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_push_button_updater.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QSOFAApplication Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QSOFAApplication Class Reference . Custom QApplication class handling FileOpen events for MacOS. ; More... Inheritance diagram for sofa::gui::qt::QSOFAApplication:. [legend]; Detailed Description; Custom QApplication class handling FileOpen events for MacOS. . Public Member Functions;  QSOFAApplication (int &argc, char **argv);  . Static Public Member Functions; static QString translate (const char *context, const char *key, const char *disambiguation, QCoreApplication::Encoding encoding=QCoreApplication::UnicodeUTF8, int n=-1);  . Protected Member Functions; bool event (QEvent *event) override;  . Constructor details. ◆ QSOFAApplication(). sofa::gui::qt::QSOFAApplication::QSOFAApplication ; (; int & ; argc, . char ** ; argv . ). inline . Function details. ◆ event(). bool sofa::gui::qt::QSOFAApplication::event ; (; QEvent * ; event). inlineoverrideprotected . ◆ translate(). static QString sofa::gui::qt::QSOFAApplication::translate ; (; const char * ; context, . const char * ; key, . const char * ; disambiguation, . QCoreApplication::Encoding ; encoding = QCoreApplication::UnicodeUTF8, . int ; n = -1 . ). inlinestatic . sofaguiqtQSOFAApplication; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application.html:371,Inherit,Inheritance,371,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_s_o_f_a_application.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QSofaListView Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; Protected Slots |; List of all members . sofa::gui::qt::QSofaListView Class Reference . #include <QSofaListView.h>. Inheritance diagram for sofa::gui::qt::QSofaListView:. [legend]. Classes; class  LockContextManager;  . Protected Attributes; std::map< void *, QTreeWidgetItem * > map_modifyDialogOpened;  ; std::map< void *, QDialog * > map_modifyObjectWindow;  ; GraphListenerQListView * graphListener_;  ; std::vector< std::string > list_object;  ; AddObject * AddObjectDialog_;  ; ObjectModel object_;  ; SofaListViewAttribute attribute_;  ; QDisplayPropertyWidget * propertyWidget;  ;  Protected Attributes inherited from sofa::gui::qt::SofaSceneGraphWidget; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  QSofaListView (const SofaListViewAttribute &attribute, QWidget *parent=nullptr, const char *name=nullptr, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~QSofaListView () override;  ; GraphListenerQListView * getListener () const;  ; void setPropertyWidget (QDisplayPropertyWidget *propertyWid);  ; void addInPropertyWidget (QTreeWidgetItem *item, bool clear);  ; void Clear (sofa::simulation::Node *rootNode);  ; void update ();  ; void setRoot (sofa::simulation::Node *);  ; SofaListViewAttribute getAttribute () const;  ; void contextMenuEvent (QContextMenuEvent *event) override;  ; void expandPathFrom (const std::vector< std::string > &pathes);  ; void getExpandedNodes (std::vector< std::string > &);  ; void loadObject (std::string path, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=delete;  ;  Public Member Functions inherited from sofa::gui::qt::SofaSceneGraphWidget;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock (); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:863,inherit,inherited,863,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QSofaStatWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::QSofaStatWidget Class Reference . #include <QSofaStatWidget.h>. Inheritance diagram for sofa::gui::qt::QSofaStatWidget:. [legend]. Protected Attributes; QLabel * statsLabel;  ; QTreeWidget * statsCounter;  ; std::vector< std::pair< core::objectmodel::Base *, QTreeWidgetItem * > > items_stats;  . Public Member Functions;  QSofaStatWidget (QWidget *parent);  ; void CreateStats (sofa::simulation::Node *root);  . Protected Member Functions; void addSummary ();  ; void addCollisionModelsStat (const sofa::type::vector< sofa::core::CollisionModel * > &v);  . Attribute details. ◆ items_stats. std::vector<std::pair<core::objectmodel::Base*, QTreeWidgetItem*> > sofa::gui::qt::QSofaStatWidget::items_stats. protected . ◆ statsCounter. QTreeWidget* sofa::gui::qt::QSofaStatWidget::statsCounter. protected . ◆ statsLabel. QLabel* sofa::gui::qt::QSofaStatWidget::statsLabel. protected . Constructor details. ◆ QSofaStatWidget(). sofa::gui::qt::QSofaStatWidget::QSofaStatWidget ; (; QWidget * ; parent). Function details. ◆ addCollisionModelsStat(). void sofa::gui::qt::QSofaStatWidget::addCollisionModelsStat ; (; const sofa::type::vector< sofa::core::CollisionModel * > & ; v). protected . ◆ addSummary(). void sofa::gui::qt::QSofaStatWidget::addSummary ; (; ). protected . ◆ CreateStats(). void sofa::gui::qt::QSofaStatWidget::CreateStats ; (; sofa::simulation::Node * ; root). sofaguiqtQSofaStatWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget.html:317,Inherit,Inheritance,317,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_stat_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QStartNavigationOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::QStartNavigationOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QStartNavigationOperation:. [legend]. Public Member Functions;  QStartNavigationOperation ();  ; void configure (common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::StartNavigationOperation;  StartNavigationOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:425,config,configure,425,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,11,"['Inherit', 'config', 'inherit']","['Inheritance', 'configure', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QTableModelUpdater Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTableModelUpdater Class Reference . #include <QModelViewTableUpdater.h>. Inheritance diagram for sofa::gui::qt::QTableModelUpdater:. [legend]. Public Member Functions;  QTableModelUpdater (int numRows, int numCols, QWidget *parent=nullptr, const char *=nullptr);  ; Qt::ItemFlags flags (const QModelIndex &) const override;  ; QVariant data (const QModelIndex &index, int role) const override;  ; void setReadOnly (const bool isReadOnly);  . Public Slots; void resizeTableV (int number);  ; void resizeTableH (int number);  . Constructor details. ◆ QTableModelUpdater(). sofa::gui::qt::QTableModelUpdater::QTableModelUpdater ; (; int ; numRows, . int ; numCols, . QWidget * ; parent = nullptr, . const char * ; = nullptr . ). Function details. ◆ data(). QVariant sofa::gui::qt::QTableModelUpdater::data ; (; const QModelIndex & ; index, . int ; role . ); const. override . ◆ flags(). Qt::ItemFlags sofa::gui::qt::QTableModelUpdater::flags ; (; const QModelIndex & ; ); const. override . ◆ resizeTableH. void sofa::gui::qt::QTableModelUpdater::resizeTableH ; (; int ; number). slot . ◆ resizeTableV. void sofa::gui::qt::QTableModelUpdater::resizeTableV ; (; int ; number). slot . ◆ setReadOnly(). void sofa::gui::qt::QTableModelUpdater::setReadOnly ; (; const bool ; isReadOnly). sofaguiqtQTableModelUpdater; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater.html:292,Inherit,Inheritance,292,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_model_updater.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QTableUpdater Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTableUpdater Class Reference . #include <QTableUpdater.h>. Inheritance diagram for sofa::gui::qt::QTableUpdater:. [legend]. Public Member Functions;  QTableUpdater (int numRows, int numCols, QWidget *parent=0, const char *name=0);  . Public Slots; void setDisplayed (bool b);  ; void resizeTableV (int number);  ; void resizeTableH (int number);  . Constructor details. ◆ QTableUpdater(). sofa::gui::qt::QTableUpdater::QTableUpdater ; (; int ; numRows, . int ; numCols, . QWidget * ; parent = 0, . const char * ; name = 0 . ). inline . Function details. ◆ resizeTableH. void sofa::gui::qt::QTableUpdater::resizeTableH ; (; int ; number). inlineslot . ◆ resizeTableV. void sofa::gui::qt::QTableUpdater::resizeTableV ; (; int ; number). inlineslot . ◆ setDisplayed. void sofa::gui::qt::QTableUpdater::setDisplayed ; (; bool ; b). inlineslot . sofaguiqtQTableUpdater; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater.html:273,Inherit,Inheritance,273,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_updater.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::gui::qt::QTableViewUpdater Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTableViewUpdater Class Reference . #include <QModelViewTableUpdater.h>. Inheritance diagram for sofa::gui::qt::QTableViewUpdater:. [legend]. Public Member Functions;  QTableViewUpdater (QWidget *parent=nullptr);  . Public Slots; void setDisplayed (bool b);  . Constructor details. ◆ QTableViewUpdater(). sofa::gui::qt::QTableViewUpdater::QTableViewUpdater ; (; QWidget * ; parent = nullptr). Function details. ◆ setDisplayed. void sofa::gui::qt::QTableViewUpdater::setDisplayed ; (; bool ; b). slot . sofaguiqtQTableViewUpdater; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater.html:290,Inherit,Inheritance,290,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_table_view_updater.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QTabulationModifyObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QTabulationModifyObject Class Reference . #include <QTabulationModifyObject.h>. Inheritance diagram for sofa::gui::qt::QTabulationModifyObject:. [legend]. Protected Attributes; core::objectmodel::Base * object;  ; QTreeWidgetItem * item;  ; const unsigned int index;  ; unsigned int size;  ; bool dirty;  ; std::map< QObject *, QString > m_dataValueModified;  ; unsigned int pixelSize;  ; unsigned int pixelMaxSize;  . Public Member Functions;  QTabulationModifyObject (QWidget *parent, core::objectmodel::Base *object, QTreeWidgetItem *item, unsigned int idx=1);  ; void externalWidgetAddition (int num);  ; void addData (sofa::core::objectmodel::BaseData *data, const ModifyObjectFlags &flags);  ; void addLink (sofa::core::objectmodel::BaseLink *link, const ModifyObjectFlags &flags);  ; void addStretch ();  ; unsigned int getIndex () const;  ; bool isFull () const;  ; void setFull ();  ; bool isEmpty () const;  ; bool isDirty () const;  ; QString getDataModifiedString () const;  . Signals; void UpdateDatas ();  ; void UpdateDataWidgets ();  ; void TabDirty (bool);  ; void nodeNameModification (simulation::Node *);  . Public Slots; void setTabDirty (bool=true);  ; void updateDataValue ();  ; void updateWidgetValue ();  ; void dataValueChanged (QString dataValue);  . Attribute details. ◆ dirty. bool sofa::gui::qt::QTabulationModifyObject::dirty. protected . ◆ index. const unsigned int sofa::gui::qt::QTabulationModifyObject::index. protected . ◆ item. QTreeWidgetItem* sofa::gui::qt::QTabulationModifyObject::item. protected . ◆ m_dataValueModified. std::map< QObject*, QString> sofa::gui::qt::QTabulationModifyObject::m_dataValueModified. protected . ◆ object. core::objectmodel::Base* sofa::gui::qt::QTabulationModifyObject::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html:338,Inherit,Inheritance,338,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_tabulation_modify_object.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::QTopologyOperation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::QTopologyOperation Class Reference . #include <QMouseOperations.h>. Inheritance diagram for sofa::gui::qt::QTopologyOperation:. [legend]. Protected Attributes; QComboBox * operationChoice;  ; QRadioButton * meshType1;  ; QRadioButton * meshType2;  ; QGroupBox * advancedOptions;  ; QSlider * scaleSlider;  ; QSpinBox * scaleValue;  ;  Protected Attributes inherited from sofa::gui::common::TopologyOperation; int topologicalOperation;  ; double scale;  ; bool volumicMesh;  ; bool firstClick;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  QTopologyOperation ();  ; double getScale () const override;  ; int getTopologicalOperation () const override;  ; bool getVolumicMesh () const override;  ; void configure (common::PickHandler *picker, common::MOUSE_BUTTON b) override;  ;  Public Member Functions inherited from sofa::gui::common::TopologyOperation;  TopologyOperation ();  ;  ~TopologyOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html:598,inherit,inherited,598,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::QTransformationWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QTransformationWidget Class Reference . #include <QTransformationWidget.h>. Inheritance diagram for sofa::gui::qt::QTransformationWidget:. [legend]. Protected Attributes; const unsigned int numWidgets_;  ; WDoubleLineEdit * translation [3];  ; WDoubleLineEdit * rotation [3];  ; WDoubleLineEdit * scale [3];  . Public Member Functions;  QTransformationWidget (QWidget *parent, QString name);  ; unsigned int getNumWidgets () const;  ; void setDefaultValues ();  ; bool isDefaultValues () const;  ; void applyTransformation (simulation::Node *node);  . Signals; void TransformationDirty (bool);  . Public Slots; void changeValue ();  . Attribute details. ◆ numWidgets_. const unsigned int sofa::gui::qt::QTransformationWidget::numWidgets_. protected . ◆ rotation. WDoubleLineEdit* sofa::gui::qt::QTransformationWidget::rotation[3]. protected . ◆ scale. WDoubleLineEdit* sofa::gui::qt::QTransformationWidget::scale[3]. protected . ◆ translation. WDoubleLineEdit* sofa::gui::qt::QTransformationWidget::translation[3]. protected . Constructor details. ◆ QTransformationWidget(). sofa::gui::qt::QTransformationWidget::QTransformationWidget ; (; QWidget * ; parent, . QString ; name . ). Function details. ◆ applyTransformation(). void sofa::gui::qt::QTransformationWidget::applyTransformation ; (; simulation::Node * ; node). ◆ changeValue. void sofa::gui::qt::QTransformationWidget::changeValue ; (; ). inlineslot . ◆ getNumWidgets(). unsigned int sofa::gui::qt::QTransformationWidget::getNumWidgets ; (; ); const. inline . ◆ isDefaultValues(). bool sofa::gui::qt::QTransformationWidget::isDefaultValues ; (; ); const. ◆ setDefaultValues(). void sofa::gui::qt::QTransformationWidget::setDefaultValues ; (; ). ◆ TransformationDirty. void sofa::gui::q",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget.html:332,Inherit,Inheritance,332,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_transformation_widget.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::gui::qt::QVisitorControlPanel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QVisitorControlPanel Class Reference . #include <QVisitorControlPanel.h>. Inheritance diagram for sofa::gui::qt::QVisitorControlPanel:. [legend]. Protected Attributes; QLineEdit * textFilter;  ; WDoubleLineEdit * spinIndex;  ; WDoubleLineEdit * spinRange;  . Public Member Functions;  QVisitorControlPanel (QWidget *parent);  ; void changeFirstIndex (int);  ; void changeRange (int);  . Signals; void focusOn (QString);  ; void clearGraph ();  . Public Slots; void activateTraceStateVectors (bool);  ; void changeFirstIndex ();  ; void changeRange ();  ; void filterResults ();  . Attribute details. ◆ spinIndex. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinIndex. protected . ◆ spinRange. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinRange. protected . ◆ textFilter. QLineEdit* sofa::gui::qt::QVisitorControlPanel::textFilter. protected . Constructor details. ◆ QVisitorControlPanel(). sofa::gui::qt::QVisitorControlPanel::QVisitorControlPanel ; (; QWidget * ; parent). Function details. ◆ activateTraceStateVectors. void sofa::gui::qt::QVisitorControlPanel::activateTraceStateVectors ; (; bool ; active). slot . ◆ changeFirstIndex [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; ). slot . ◆ changeFirstIndex() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; int ; idx). ◆ changeRange [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; ). slot . ◆ changeRange() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; int ; range). ◆ clearGraph. void sofa::gui::qt::QVisitorControlPanel::clearGraph ; (; ). signal . ◆ filterResults. void sofa::gui::qt::QVisitorControlPanel::filterResults ; (; ). slot . ◆ focusOn. void sofa::gui::qt::QVisitorContr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html:329,Inherit,Inheritance,329,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::RadioDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::RadioDataWidget Class Reference . #include <SimpleDataWidget.h>; OptionsGroup support. ; More... Inheritance diagram for sofa::gui::qt::RadioDataWidget:. [legend]; Detailed Description; OptionsGroup support. . Protected Attributes; QButtonGroup * buttonList;  ; QComboBox * comboList;  ; bool buttonMode;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RadioDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< sofa::helper::OptionsGroup > *m_data);  ; virtual bool createWidgets ();  In this method we create the widgets and perform the signal / slots connections. More...;  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::helper::OptionsGroup >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData ();  ; const sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:583,inherit,inherited,583,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::RealGUI Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Signals |; Public Slots |; Protected Slots |; List of all members . sofa::gui::qt::RealGUI Class Reference . #include <RealGUI.h>. Inheritance diagram for sofa::gui::qt::RealGUI:. [legend]. Public Attributes; QSofaListView * simulationGraph;  . Protected Attributes; QLabel * fpsLabel;  ; QLabel * timeLabel;  ; bool m_dumpState;  ; std::ofstream * m_dumpStateStream;  ; std::ostringstream m_dumpVisitorStream;  ; bool m_exportGnuplot;  ; bool m_animateOBJ;  ; int m_animationOBJcounter;  ; bool m_displayComputationTime;  ; bool m_fullScreen;  ; sofa::gui::qt::viewer::SofaViewer * m_viewer;  ; clock_t m_clockBeforeLastStep;  ; QDisplayPropertyWidget * propertyWidget;  ; std::map< helper::SofaViewerFactory::Key, QAction * > viewerMap;  list of all viewer key name (for creation) mapped to its QAction in the GUI More...;  ; InformationOnPickCallBack informationOnPickCallBack;  ; QWidget * currentTab;  ; QSofaStatWidget * statWidget;  ; QTimer * timerStep;  ; QTimer * timerIdle;  ; WDoubleLineEdit * background [3];  ; QLineEdit * backgroundImage;  ; SofaPluginManager * pluginManagerDialog;  ; QMenuFilesRecentlyOpened recentlyOpenedFilesManager;  ; std::string simulationName;  ; std::string gnuplotDirectory;  ; std::string pathDumpVisitor;  ; std::set< std::string > m_modifiedLogFiles;  Keep track of log files that have been modified since the GUI started. More...;  ; bool m_enableInteraction {false};  ; sofa::simulation::Node::SPtr mSimulation;  ; sofa::helper::system::FileEventListener * m_filelistener {nullptr};  . Public Member Functions;  RealGUI (const char *viewername);  ;  ~RealGUI () override;  ; void showFPS (double fps) override;  Force the displayed FPS value (if any) Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:431,Inherit,Inheritance,431,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::gui::qt::RealGUIFileListener Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::RealGUIFileListener Class Reference . Inheritance diagram for sofa::gui::qt::RealGUIFileListener:. [legend]. Public Attributes; RealGUI * m_realgui;  . Public Member Functions;  RealGUIFileListener (RealGUI *realgui);  ;  ~RealGUIFileListener () override;  ; void fileHasChanged (const std::string &filename) override;  ;  Public Member Functions inherited from sofa::helper::system::FileEventListener; virtual ~FileEventListener ();  . Attribute details. ◆ m_realgui. RealGUI* sofa::gui::qt::RealGUIFileListener::m_realgui. Constructor details. ◆ RealGUIFileListener(). sofa::gui::qt::RealGUIFileListener::RealGUIFileListener ; (; RealGUI * ; realgui). inline . ◆ ~RealGUIFileListener(). sofa::gui::qt::RealGUIFileListener::~RealGUIFileListener ; (; ). inlineoverride . Function details. ◆ fileHasChanged(). void sofa::gui::qt::RealGUIFileListener::fileHasChanged ; (; const std::string & ; filename). inlineoverridevirtual . Implements sofa::helper::system::FileEventListener. sofaguiqtRealGUIFileListener; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener.html:571,inherit,inherited,571,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i_file_listener.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::SimpleDataWidget< T, Container > Class Template Reference . #include <SimpleDataWidget.h>; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:846,inherit,inherited,846,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::SofaEnrichedPage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; List of all members . sofa::gui::qt::SofaEnrichedPage Class Reference . #include <QDocBrowser.h>. Inheritance diagram for sofa::gui::qt::SofaEnrichedPage:. [legend]. Public Member Functions;  SofaEnrichedPage (QObject *parent=0);  ; bool isSofaTarget (const QUrl &url);  ; bool acceptNavigationRequest (const QUrl &url, QWebEnginePage::NavigationType type, bool);  . Signals; void linkClicked (const QUrl &);  . Constructor details. ◆ SofaEnrichedPage(). sofa::gui::qt::SofaEnrichedPage::SofaEnrichedPage ; (; QObject * ; parent = 0). PRIVATE OBJECTS ////////////////////////////////// May be moved to their own .cpp/.hh if one day someone needs them. . Function details. ◆ acceptNavigationRequest(). bool sofa::gui::qt::SofaEnrichedPage::acceptNavigationRequest ; (; const QUrl & ; url, . QWebEnginePage::NavigationType ; type, . bool ;  . ). ◆ isSofaTarget(). bool sofa::gui::qt::SofaEnrichedPage::isSofaTarget ; (; const QUrl & ; url). ◆ linkClicked. void sofa::gui::qt::SofaEnrichedPage::linkClicked ; (; const QUrl & ; ). signal . sofaguiqtSofaEnrichedPage; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_enriched_page.html:272,Inherit,Inheritance,272,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_enriched_page.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_enriched_page.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::SofaMouseManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Public Slots |; List of all members . sofa::gui::qt::SofaMouseManager Class Reference . #include <SofaMouseManager.h>. Inheritance diagram for sofa::gui::qt::SofaMouseManager:. [legend]. Protected Attributes; common::PickHandler * pickHandler;  ; std::map< int, std::string > mapIndexOperation;  ; type::fixed_array< std::string, common::NONE > usedOperations;  . Public Member Functions;  SofaMouseManager (QWidget *parent);  ;  ~SofaMouseManager () override;  ; void updateContent ();  ; void setPickHandler (common::PickHandler *);  ; std::map< int, std::string > & getMapIndexOperation ();  ; void updateOperation (sofa::component::setting::MouseButtonSetting *setting);  ; void updateOperation (common::MOUSE_BUTTON button, const std::string &id);  . Protected Member Functions; void updateOperation (common::Operation *op);  . Public Slots; void selectOperation (int);  . Attribute details. ◆ mapIndexOperation. std::map< int, std::string > sofa::gui::qt::SofaMouseManager::mapIndexOperation. protected . ◆ pickHandler. common::PickHandler* sofa::gui::qt::SofaMouseManager::pickHandler. protected . ◆ usedOperations. type::fixed_array< std::string, common::NONE > sofa::gui::qt::SofaMouseManager::usedOperations. protected . Constructor details. ◆ SofaMouseManager(). sofa::gui::qt::SofaMouseManager::SofaMouseManager ; (; QWidget * ; parent). ◆ ~SofaMouseManager(). sofa::gui::qt::SofaMouseManager::~SofaMouseManager ; (; ). override . Function details. ◆ getMapIndexOperation(). std::map< int, std::string >& sofa::gui::qt::SofaMouseManager::getMapIndexOperation ; (; ). inline . ◆ selectOperation. void sofa::gui::qt::SofaMouseManager::selectOperation ; (; int ; operation). slot . ◆ setPickHandler(). void sofa::gui::qt::SofaMouseManager::setPickHandler ; (; common::PickHan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html:336,Inherit,Inheritance,336,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_mouse_manager.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::gui::qt::SofaPluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaPluginManager Class Reference . #include <SofaPluginManager.h>. Inheritance diagram for sofa::gui::qt::SofaPluginManager:. [legend]. Public Member Functions;  SofaPluginManager (QWidget *parent);  ; void updatePluginsListView ();  . Signals; void libraryAdded ();  ; void libraryRemoved ();  . Public Slots; void addLibrary ();  ; void removeLibrary ();  ; void updateComponentList ();  ; void updateDescription ();  . Constructor details. ◆ SofaPluginManager(). sofa::gui::qt::SofaPluginManager::SofaPluginManager ; (; QWidget * ; parent). Function details. ◆ addLibrary. void sofa::gui::qt::SofaPluginManager::addLibrary ; (; ). slot . ◆ libraryAdded. void sofa::gui::qt::SofaPluginManager::libraryAdded ; (; ). signal . ◆ libraryRemoved. void sofa::gui::qt::SofaPluginManager::libraryRemoved ; (; ). signal . ◆ removeLibrary. void sofa::gui::qt::SofaPluginManager::removeLibrary ; (; ). slot . ◆ updateComponentList. void sofa::gui::qt::SofaPluginManager::updateComponentList ; (; ). slot . ◆ updateDescription. void sofa::gui::qt::SofaPluginManager::updateDescription ; (; ). slot . ◆ updatePluginsListView(). void sofa::gui::qt::SofaPluginManager::updatePluginsListView ; (; ). sofaguiqtSofaPluginManager; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html:296,Inherit,Inheritance,296,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_plugin_manager.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::gui::qt::SofaSceneGraphWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; List of all members . sofa::gui::qt::SofaSceneGraphWidget Class Reference . #include <SofaSceneGraphWidget.h>. Inheritance diagram for sofa::gui::qt::SofaSceneGraphWidget:. [legend]. Protected Attributes; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Signals; void dirtynessChanged (bool isDirty);  Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. More...;  ; void lockingChanged (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore wit,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:313,Inherit,Inheritance,313,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::SofaVideoRecorderManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Public Slots |; List of all members . sofa::gui::qt::SofaVideoRecorderManager Class Reference . #include <SofaVideoRecorderManager.h>. Inheritance diagram for sofa::gui::qt::SofaVideoRecorderManager:. [legend]. Protected Attributes; RecordingType currentRecordingType;  ; CaptureOptionsWidget * captureOptionsWidget;  ; MovieOptionsWidget * movieOptionsWidget;  ; QWidget * screenshotsOptionsWidget;  . Public Member Functions;  SofaVideoRecorderManager (QWidget *parent=Q_NULLPTR);  ; void updateContent ();  ; std::string getCodecExtension ();  ; std::string getCodecName ();  ; unsigned int getFramerate ();  ; unsigned int getBitrate ();  ; bool realtime ();  ; unsigned int getFrameskip ();  ; RecordingType getRecordingType ();  . Static Public Member Functions; static SofaVideoRecorderManager * getInstance ();  ; static void internalAddWidget (QWidget *parent, QWidget *widgetToAdd);  . Public Slots; virtual void onChangeRecordingType ();  ; virtual void close ();  . Attribute details. ◆ captureOptionsWidget. CaptureOptionsWidget* sofa::gui::qt::SofaVideoRecorderManager::captureOptionsWidget. protected . ◆ currentRecordingType. RecordingType sofa::gui::qt::SofaVideoRecorderManager::currentRecordingType. protected . ◆ movieOptionsWidget. MovieOptionsWidget* sofa::gui::qt::SofaVideoRecorderManager::movieOptionsWidget. protected . ◆ screenshotsOptionsWidget. QWidget* sofa::gui::qt::SofaVideoRecorderManager::screenshotsOptionsWidget. protected . Constructor details. ◆ SofaVideoRecorderManager(). sofa::gui::qt::SofaVideoRecorderManager::SofaVideoRecorderManager ; (; QWidget * ; parent = Q_NULLPTR). Function details. ◆ close. void sofa::gui::qt::SofaVideoRecorderManager::close ; (; ). virtualslot . ◆ getBitrate(). unsigned int sofa::gui::qt::SofaVideoR",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html:364,Inherit,Inheritance,364,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_video_recorder_manager.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::SofaWindowDataGraph Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::SofaWindowDataGraph Class Reference . #include <SofaWindowDataGraph.h>. Inheritance diagram for sofa::gui::qt::SofaWindowDataGraph:. [legend]; Detailed Description; This Class provide an interface with the library QtNodes to display Data Graph connection inside a QDialog. It will take a SOFA simulation scene and create Graph nodes for each Sofa component and display connections between Data. . Protected Attributes; QtNodes::FlowScene * m_graphScene;  Pointer to the graphScene used to store nodes. More...;  ; QtNodes::FlowView * m_graphView;  Pointer to the view of the graph. More...;  ; sofa::simulation::Node * m_rootNode;  Point to the root node of the current simulation. More...;  ; std::vector< std::string > m_exceptions;  List of component name not to be display in the graph. More...;  ; SReal m_scaleX;  Scale parameter to apply between nodes for display in abscissa. ; More...;  ; SReal m_scaleY;  Scale parameter to apply between nodes for display in ordinate. More...;  ; int m_posX;  Increment position counter on abscissa for Node display. More...;  ; int m_posY;  Increment position counter on ordinate for Node display. More...;  ; bool debugNodeGraph;  parameter to activate graph logs. False by default. More...;  . Public Member Functions;  SofaWindowDataGraph (QWidget *parent, sofa::simulation::Node *scene);  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:329,Inherit,Inheritance,329,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::SofaWindowProfiler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::SofaWindowProfiler Class Reference . #include <SofaWindowProfiler.h>; The SofaWindowProfiler class This class is a QDialog widget to display information recorded by AdvancedTimer mechanism At each step, info will be gathered from the AdvancedTimer using class sofa::helper::StepData Info will be displayed by: ; More... Inheritance diagram for sofa::gui::qt::SofaWindowProfiler:. [legend]; Detailed Description; The SofaWindowProfiler class This class is a QDialog widget to display information recorded by AdvancedTimer mechanism At each step, info will be gathered from the AdvancedTimer using class sofa::helper::StepData Info will be displayed by: . plotting the step duration into a graph; Showing information duration/step number; Showing all substep of an animation step with their own duration in ms and the corresponding percentage over the whole step. . Classes; class  AnimationStepData;  The AnimationStepData internal class to store all info of a animation step recorded by AdvancedTimer Data stored/computed will be the step number, and the total time in ms of the step. All Data will then be stored inside a tree of. More...;  ; class  AnimationSubStepData;  The AnimationSubStepData Internal class to store data for each step of the animation. Correspond to one AdvancedTimer::begin/end Data stored/computed will be step name, its time in ms and the corresponding % inside the whole step. the total ms and percentage it represent if this step has substeps. Buffer of AnimationSubStepData corresponding to its children substeps. More...;  ; struct  CheckedSeries;  . Protected Attributes; QChart * m_chart;  Pointer to the chart Data. More...;  ; QValueAxis * m_axisY;  Pointer to Y Axis. Mor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:614,Inherit,Inheritance,614,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::TDataWidget< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::TDataWidget< T > Class Template Reference . #include <DataWidget.h>; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. ; More... Inheritance diagram for sofa::gui::qt::TDataWidget< T >:. [legend]; Detailed Description; template<class T>; class sofa::gui::qt::TDataWidget< T >; This class is basically the same as DataWidget, except that it takes a template parameter so the actual type of Data can be retrieved through the getData() accessor. In most cases you will need to derive from this class to implement the edition of your data in the GUI. . Protected Attributes; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html:616,Inherit,Inheritance,616,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_t_data_widget.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::TableDataWidget< T, FLAGS > Class Template Reference . #include <TableDataWidget.h>. Inheritance diagram for sofa::gui::qt::TableDataWidget< T, FLAGS >:. [legend]. Public Member Functions;  TableDataWidget (QWidget *parent, const char *name, MyData *d);  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::SimpleDataWidget< T, table_data_widget_container< T, TABLE_NORMAL > >;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html:661,inherit,inherited,661,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_table_data_widget.html,5,"['Inherit', 'config', 'inherit']","['Inheritance', 'configure', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::WindowVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::WindowVisitor Class Reference . #include <WindowVisitor.h>. Inheritance diagram for sofa::gui::qt::WindowVisitor:. [legend]. Public Attributes; QWidget * statsWidget;  . Protected Attributes; std::vector< dataTime > componentsTime;  ; std::vector< dataTime > visitorsTime;  ; std::vector< dataTime > componentsTimeTotal;  ; std::vector< dataTime > visitorsTimeTotal;  ; std::vector< dataTime > componentsTimeMax;  ; std::vector< dataTime > visitorsTimeMax;  ; QVisitorControlPanel * controlPanel;  ; ChartsWidget * chartsComponent;  ; ChartsWidget * chartsVisitor;  ; QComboBox * typeOfCharts;  . Static Protected Attributes; static QPixmap * icons [OTHER+1];  . Public Member Functions;  WindowVisitor (QWidget *parent);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void setCharts (std::vector< dataTime > &latestC, std::vector< dataTime > &maxTC, std::vector< dataTime > &totalC, std::vector< dataTime > &latestV, std::vector< dataTime > &maxTV, std::vector< dataTime > &totalV);  . Protected Member Functions; bool setFocusOn (QTreeWidgetItem *item, QString text);  . Signals; void WindowVisitorClosed (bool);  . Public Slots; void setCurrentCharts (int);  ; void rightClick (const QPoint &point);  ; void collapseNode ();  ; void expandNode ();  ; void focusOn (QString focus);  ; static componentType getComponentType (std::string name);  ; static QPixmap * getPixmap (componentType t);  ; void closeEvent (QCloseEvent *);  ; void clearGraph ();  . Attribute details. ◆ chartsComponent. ChartsWidget* sofa::gui::qt::WindowVisitor::chartsComponent. protected . ◆ chartsVisitor. ChartsWidget* sofa::gui::qt::WindowVisito",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html:390,Inherit,Inheritance,390,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< CLASS > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< CLASS > Class Template Reference . #include <StructDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< CLASS >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::struct_data_widget_container< CLASS >; PrevContainer p;  ; Container w;  ; QCheckBox * check;  ; QLabel * label;  ; Layout * container_layout;  ; MasterLayout * master_layout;  ;  Public Member Functions inherited from sofa::gui::qt::struct_data_widget_container< CLASS >;  struct_data_widget_container ();  ; void setMasterLayout (MasterLayout *layout);  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; void insertWidgets ();  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void readConstantsFromData (const data_type &d);  ; void writeToData (data_type &d);  . sofaguiqtdata_widget_container< CLASS >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_c_l_a_s_s_01_4.html:416,inherit,inherited,416,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_c_l_a_s_s_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_c_l_a_s_s_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< Quat< T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< Quat< T > > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< Quat< T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >; data_widget_container< typename vector_data_trait< Quat< T > >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< Quat< T > >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< Quat< T > >; Generated on Mon Nov 11 2024 03:25:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_quat_3_01_t_01_4_01_4.html:428,inherit,inherited,428,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_quat_3_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01_quat_3_01_t_01_4_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::data_widget_container< T > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< T >:. [legend]; Detailed Description; template<class T>; class sofa::gui::qt::data_widget_container< T >; This class is used to create and manage the GUI of a data type, using data_widget_trait to know which widgets to use . Public Attributes; Widget * w;  ; Layout * container_layout;  . Public Member Functions;  data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . Attribute details. ◆ container_layout. template<class T > . Layout* sofa::gui::qt::data_widget_container< T >::container_layout. ◆ w. template<class T > . Widget* sofa::gui::qt::data_widget_container< T >::w. Constructor details. ◆ data_widget_container(). template<class T > . sofa::gui::qt::data_widget_container< T >::data_widget_container ; (; ). inline . Function details. ◆ createLayout() [1/2]. template<class T > . bool sofa::gui::qt::data_widget_container< T >::createLayout ; (; DataWidget * ; parent). inline . ◆ createLayout() [2/2]. template<class T > . bool sofa::gui::qt::data_widget_container< T >::createLayout ; (; QLayout * ; layout). inline . ◆ createWidgets(). template<class T > . bool sofa::gui::qt::data_widget_container< T >::createWidgets ; (; DataWidget * ; parent, . const data_type & ; d, . bool ; readOnly . ). inline . ◆ insertWidgets(). template<class T > . void sofa::gui::qt::data_widget_container< T >::insertWidgets ; (; ). inline",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container.html:325,Inherit,Inheritance,325,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Edge > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Edge > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Edge >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Edge >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Edge >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Edge >; Generated on Mon Nov 11 2024 03:24:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html:491,inherit,inherited,491,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Hexahedron > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Hexahedron > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Hexahedron >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Hexahedron >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Hexahedron >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Hexahedron >; Generated on Mon Nov 11 2024 03:24:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html:509,inherit,inherited,509,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Quad > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Quad > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Quad >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Quad >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Quad >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Quad >; Generated on Mon Nov 11 2024 03:24:23 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html:491,inherit,inherited,491,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Tetrahedron > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Tetrahedron > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Tetrahedron >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Tetrahedron >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Tetrahedron >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Tetrahedron >; Generated on Mon Nov 11 2024 03:24:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html:512,inherit,inherited,512,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Triangle > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Triangle > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::core::topology::Topology::Triangle >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >; data_widget_container< typename vector_data_trait< sofa::core::topology::Topology::Triangle >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::core::topology::Topology::Triangle >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::core::topology::Topology::Triangle >; Generated on Mon Nov 11 2024 03:24:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html:503,inherit,inherited,503,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidCoord< N, T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidCoord< N, T > > Class Template Reference . #include <StructDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidCoord< N, T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >; PrevContainer p;  ; Container w;  ; QCheckBox * check;  ; QLabel * label;  ; Layout * container_layout;  ; MasterLayout * master_layout;  ;  Public Member Functions inherited from sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidCoord< N, T > >;  struct_data_widget_container ();  ; void setMasterLayout (MasterLayout *layout);  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; void insertWidgets ();  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void readConstantsFromData (const data_type &d);  ; void writeToData (data_type &d);  . sofaguiqtdata_widget_container< sofa::defaulttype::RigidCoord< N, T > >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01_t_01_4_01_4.html:512,inherit,inherited,512,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_coord_3_01_n_00_01_t_01_4_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidMass< N, T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidMass< N, T > > Class Template Reference . #include <StructDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::defaulttype::RigidMass< N, T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >; PrevContainer p;  ; Container w;  ; QCheckBox * check;  ; QLabel * label;  ; Layout * container_layout;  ; MasterLayout * master_layout;  ;  Public Member Functions inherited from sofa::gui::qt::struct_data_widget_container< sofa::defaulttype::RigidMass< N, T > >;  struct_data_widget_container ();  ; void setMasterLayout (MasterLayout *layout);  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; void insertWidgets ();  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void readConstantsFromData (const data_type &d);  ; void writeToData (data_type &d);  . sofaguiqtdata_widget_container< sofa::defaulttype::RigidMass< N, T > >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01_t_01_4_01_4.html:509,inherit,inherited,509,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1defaulttype_1_1_rigid_mass_3_01_n_00_01_t_01_4_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::type::Mat< L, C, T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::type::Mat< L, C, T > > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::type::Mat< L, C, T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >; data_widget_container< typename vector_data_trait< typename vector_data_trait< sofa::type::Mat< L, C, T > >::value_type >::value_type > w [L][C];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_grid_data_widget_container< sofa::type::Mat< L, C, T > >;  fixed_grid_data_widget_container ();  ; bool createLayout (QWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::type::Mat< L, C, T > >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01_t_01_4_01_4.html:479,inherit,inherited,479,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_mat_3_01_l_00_01_c_00_01_t_01_4_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::type::Material > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::type::Material > Class Reference . #include <StructDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::type::Material >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::struct_data_widget_container< sofa::type::Material >; PrevContainer p;  ; Container w;  ; QCheckBox * check;  ; QLabel * label;  ; Layout * container_layout;  ; MasterLayout * master_layout;  ;  Public Member Functions inherited from sofa::gui::qt::struct_data_widget_container< sofa::type::Material >;  struct_data_widget_container ();  ; void setMasterLayout (MasterLayout *layout);  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; void insertWidgets ();  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void readConstantsFromData (const data_type &d);  ; void writeToData (data_type &d);  . sofaguiqtdata_widget_container< sofa::type::Material >; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_material_01_4.html:443,inherit,inherited,443,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_material_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_material_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::type::Vec< N, T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::type::Vec< N, T > > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::type::Vec< N, T > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >; data_widget_container< typename vector_data_trait< sofa::type::Vec< N, T > >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::Vec< N, T > >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::type::Vec< N, T > >; Generated on Mon Nov 11 2024 03:25:19 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_01_4.html:470,inherit,inherited,470,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_container< sofa::type::fixed_array< T, N > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_container< sofa::type::fixed_array< T, N > > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_container< sofa::type::fixed_array< T, N > >:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >; data_widget_container< typename vector_data_trait< sofa::type::fixed_array< T, N > >::value_type > w [N];  ; Layout * container_layout;  ;  Public Member Functions inherited from sofa::gui::qt::fixed_vector_data_widget_container< sofa::type::fixed_array< T, N > >;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . sofaguiqtdata_widget_container< sofa::type::fixed_array< T, N > >; Generated on Mon Nov 11 2024 03:23:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html:494,inherit,inherited,494,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__container_3_01sofa_1_1type_1_1fixed__array_3_01_t_00_01_n_01_4_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< char > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< char > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< char >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::int_data_widget_trait< char, -128, 127 >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< char >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01char_01_4.html:396,inherit,inherited,396,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01char_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01char_01_4.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< double > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< double > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< double >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::real_data_widget_trait< double >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< double >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01double_01_4.html:402,inherit,inherited,402,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01double_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01double_01_4.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< float > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< float > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< float >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::real_data_widget_trait< float >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< float >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01float_01_4.html:399,inherit,inherited,399,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01float_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01float_01_4.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< int > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< int > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< int >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::int_data_widget_trait< int, INT_MIN, INT_MAX >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< int >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01int_01_4.html:393,inherit,inherited,393,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01int_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01int_01_4.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< unsigned char > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< unsigned char > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< unsigned char >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::int_data_widget_trait< unsigned char, 0, 255 >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< unsigned char >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01char_01_4.html:423,inherit,inherited,423,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01char_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01char_01_4.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< unsigned int > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::data_widget_trait< unsigned int > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::data_widget_trait< unsigned int >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::int_data_widget_trait< unsigned int, 0, INT_MAX >; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . sofaguiqtdata_widget_trait< unsigned int >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01int_01_4.html:420,inherit,inherited,420,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01int_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait_3_01unsigned_01int_01_4.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,﻿. SOFA API: sofa::gui::qt::default_flat_data_trait< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::default_flat_data_trait< T > Class Template Reference . #include <QTableDataContainer.h>. Inheritance diagram for sofa::gui::qt::default_flat_data_trait< T >:. [legend]. sofaguiqtdefault_flat_data_trait; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1default__flat__data__trait.html:262,Inherit,Inheritance,262,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1default__flat__data__trait.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1default__flat__data__trait.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::fixed_grid_data_widget_container< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::fixed_grid_data_widget_container< T, Container > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::fixed_grid_data_widget_container< T, Container >:. [legend]. Public Attributes; Container w [L][C];  ; Layout * container_layout;  . Public Member Functions;  fixed_grid_data_widget_container ();  ; bool createLayout (QWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . Attribute details. ◆ container_layout. template<class T , class Container = data_widget_container< typename vector_data_trait< typename vector_data_trait<T>::value_type >::value_type>> . Layout* sofa::gui::qt::fixed_grid_data_widget_container< T, Container >::container_layout. ◆ w. template<class T , class Container = data_widget_container< typename vector_data_trait< typename vector_data_trait<T>::value_type >::value_type>> . Container sofa::gui::qt::fixed_grid_data_widget_container< T, Container >::w[L][C]. Constructor details. ◆ fixed_grid_data_widget_container(). template<class T , class Container = data_widget_container< typename vector_data_trait< typename vector_data_trait<T>::value_type >::value_type>> . sofa::gui::qt::fixed_grid_data_widget_container< T, Container >::fixed_grid_data_widget_container ; (; ). inline . Function details. ◆ createLayout() [1/2]. template<class T , class Container = data_widget_container< typename vector_data_trait< typename vector_data_trait<T>::value_type >::value_type>> . bool sofa::gui::qt::fixed_grid_data_widget_container< T, Container",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__grid__data__widget__container.html:369,Inherit,Inheritance,369,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__grid__data__widget__container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__grid__data__widget__container.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::fixed_vector_data_widget_container< T, Container > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::fixed_vector_data_widget_container< T, Container > Class Template Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::fixed_vector_data_widget_container< T, Container >:. [legend]. Public Attributes; Container w [N];  ; Layout * container_layout;  . Public Member Functions;  fixed_vector_data_widget_container ();  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void writeToData (data_type &d);  ; void insertWidgets ();  . Attribute details. ◆ container_layout. template<class T , class Container = data_widget_container< typename vector_data_trait<T>::value_type>> . Layout* sofa::gui::qt::fixed_vector_data_widget_container< T, Container >::container_layout. ◆ w. template<class T , class Container = data_widget_container< typename vector_data_trait<T>::value_type>> . Container sofa::gui::qt::fixed_vector_data_widget_container< T, Container >::w[N]. Constructor details. ◆ fixed_vector_data_widget_container(). template<class T , class Container = data_widget_container< typename vector_data_trait<T>::value_type>> . sofa::gui::qt::fixed_vector_data_widget_container< T, Container >::fixed_vector_data_widget_container ; (; ). inline . Function details. ◆ createLayout() [1/2]. template<class T , class Container = data_widget_container< typename vector_data_trait<T>::value_type>> . bool sofa::gui::qt::fixed_vector_data_widget_container< T, Container >::createLayout ; (; DataWidget * ; parent). inline . ◆ createLayout() [2/2]. template<class T , class Container = data_widget_container< typename vec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__vector__data__widget__container.html:373,Inherit,Inheritance,373,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__vector__data__widget__container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1fixed__vector__data__widget__container.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::flat_data_trait< T, TYPE_STRUCT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::flat_data_trait< T, TYPE_STRUCT > Class Template Reference . #include <QTableDataContainer.h>. Inheritance diagram for sofa::gui::qt::flat_data_trait< T, TYPE_STRUCT >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::flat_struct_data_trait< T, N >; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static value_type * get (const data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static value_type * get (const data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  . sofaguiqtflat_data_trait< T, TYPE_STRUCT >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___s_t_r_u_c_t_01_4.html:441,inherit,inherited,441,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___s_t_r_u_c_t_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___s_t_r_u_c_t_01_4.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::flat_data_trait< T, TYPE_VECTOR > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::flat_data_trait< T, TYPE_VECTOR > Class Template Reference . #include <QTableDataContainer.h>. Inheritance diagram for sofa::gui::qt::flat_data_trait< T, TYPE_VECTOR >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::flat_vector_data_trait< T >; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  ; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  . sofaguiqtflat_data_trait< T, TYPE_VECTOR >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___v_e_c_t_o_r_01_4.html:441,inherit,inherited,441,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___v_e_c_t_o_r_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__data__trait_3_01_t_00_01_t_y_p_e___v_e_c_t_o_r_01_4.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::flat_struct_data_trait< T, N > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::gui::qt::flat_struct_data_trait< T, N > Class Template Reference . #include <QTableDataContainer.h>. Inheritance diagram for sofa::gui::qt::flat_struct_data_trait< T, N >:. [legend]. Static Public Member Functions; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static value_type * get (const data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static value_type * get (const data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  . Function details. ◆ get() [1/2]. template<class T , int N = struct_data_trait<T>::NVAR> . static value_type* sofa::gui::qt::flat_struct_data_trait< T, N >::get ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ get() [2/2]. template<class T , int N = struct_data_trait<T>::NVAR> . static value_type* sofa::gui::qt::flat_struct_data_trait< T, N >::get ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ header() [1/2]. template<class T , int N = struct_data_trait<T>::NVAR> . static const char* sofa::gui::qt::flat_struct_data_trait< T, N >::header ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ header() [2/2]. template<class T , int N = struct_data_trait<T>::NVAR> . static const char* sofa::gui::qt::flat_struct_data_trait< T, N >::header ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ set() [1/2]. template<class T , int N = struct_data_trait<T>::NVAR> . static void sofa::g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__struct__data__trait.html:322,Inherit,Inheritance,322,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__struct__data__trait.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__struct__data__trait.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::flat_vector_data_trait< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::gui::qt::flat_vector_data_trait< T > Class Template Reference . #include <QTableDataContainer.h>. Inheritance diagram for sofa::gui::qt::flat_vector_data_trait< T >:. [legend]. Static Public Member Functions; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  ; static int size ();  ; static int size (const data_type &);  ; static const char * header (const data_type &d, int i=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void setS (const std::string &v, data_type &d, int i=0);  . Function details. ◆ get() [1/2]. template<class T > . static const value_type* sofa::gui::qt::flat_vector_data_trait< T >::get ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ get() [2/2]. template<class T > . static const value_type* sofa::gui::qt::flat_vector_data_trait< T >::get ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ header() [1/2]. template<class T > . static const char* sofa::gui::qt::flat_vector_data_trait< T >::header ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ header() [2/2]. template<class T > . static const char* sofa::gui::qt::flat_vector_data_trait< T >::header ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ set() [1/2]. template<class T > . static void sofa::gui::qt::flat_vector_data_trait< T >::set ; (; const value_type & ; v, . data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ set() [2/2]. template<class T > . static void sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__vector__data__trait.html:316,Inherit,Inheritance,316,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__vector__data__trait.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1flat__vector__data__trait.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::int_data_widget_trait< T, vmin, vmax > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::gui::qt::int_data_widget_trait< T, vmin, vmax > Class Template Reference . #include <SimpleDataWidget.h>; int, unsigned int, char and unsigned char support ; More... Inheritance diagram for sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >:. [legend]; Detailed Description; template<class T, int vmin, int vmax>; class sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >; int, unsigned int, char and unsigned char support . Static Public Member Functions; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . Function details. ◆ connectChanged(). template<class T , int vmin, int vmax> . static void sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >::connectChanged ; (; Widget * ; w, . DataWidget * ; datawidget . ). inlinestatic . ◆ create(). template<class T , int vmin, int vmax> . static Widget* sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >::create ; (; QWidget * ; parent, . const data_type & ;  . ). inlinestatic . ◆ readFromData(). template<class T , int vmin, int vmax> . static void sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >::readFromData ; (; Widget * ; w, . const data_type & ; d . ). inlinestatic . ◆ setReadOnly(). template<class T , int vmin, int vmax> . static void sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >::setReadOnly ; (; Widget * ; w, . bool ; readOnly . ). inlinestatic . ◆ writeToData(). template<class T , int vmin, int vmax> . static void sofa::gui::qt::int_data_widget_trait< T, vmin, vmax >::writeToData ; (; Widget * ; w, . data_type & ; d . ). inlinest",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1int__data__widget__trait.html:395,Inherit,Inheritance,395,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1int__data__widget__trait.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1int__data__widget__trait.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Variables . sofa::gui::qt::materialdatawidget_h Namespace Reference . Private namespace. ; More... Classes; class  MaterialDataWidget;  ; class  VectorMaterialDataWidget;  . Typedefs; typedef type::vector< Material > VectorMaterial;  . Variables; helper::Creator< DataWidgetFactory, MaterialDataWidget > DWClass_MeshMaterial (""default"", true);  ; helper::Creator< DataWidgetFactory, VectorMaterialDataWidget > DWClass_MeshVectorMaterial (""default"", true);  . Detailed Description; Private namespace. ; Typedef Documentation. ◆ VectorMaterial. typedef type::vector<Material> sofa::gui::qt::materialdatawidget_h::VectorMaterial. Variable Documentation. ◆ DWClass_MeshMaterial. helper::Creator<DataWidgetFactory,MaterialDataWidget> sofa::gui::qt::materialdatawidget_h::DWClass_MeshMaterial(""default"", true) ; (; ""default"" ; , . true ;  . ). ◆ DWClass_MeshVectorMaterial. helper::Creator<DataWidgetFactory,VectorMaterialDataWidget> sofa::gui::qt::materialdatawidget_h::DWClass_MeshVectorMaterial(""default"", true) ; (; ""default"" ; , . true ;  . ). sofaguiqtmaterialdatawidget_h; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1materialdatawidget__h.html:167,Variab,Variables,167,api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1materialdatawidget__h.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1materialdatawidget__h.html,3,['Variab'],"['Variable', 'Variables']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::materialdatawidget_h::MaterialDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::materialdatawidget_h::MaterialDataWidget Class Reference . #include <MaterialDataWidget.h>. Inheritance diagram for sofa::gui::qt::materialdatawidget_h::MaterialDataWidget:. [legend]. Protected Attributes; QLineEdit * _nameEdit;  ; QRGBAColorPicker * _ambientPicker;  ; QRGBAColorPicker * _emissivePicker;  ; QRGBAColorPicker * _specularPicker;  ; QRGBAColorPicker * _diffusePicker;  ; QLineEdit * _shininessEdit;  ; QCheckBox * _ambientCheckBox;  ; QCheckBox * _emissiveCheckBox;  ; QCheckBox * _specularCheckBox;  ; QCheckBox * _diffuseCheckBox;  ; QCheckBox * _shininessCheckBox;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< Material >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  MaterialDataWidget (QWidget *parent, const char *name, Data< Material > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< Material >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< Material > * getData ();  ; const sofa::core::objectmodel::Data< Material > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html:886,inherit,inherited,886,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Protected Slots |; List of all members . sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget Class Reference . #include <MaterialDataWidget.h>. Inheritance diagram for sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget:. [legend]. Protected Attributes; MaterialDataWidget * _materialDataWidget;  ; VectorMaterial _vectorEditedMaterial;  ; core::objectmodel::Data< Material > _currentMaterial;  ; QComboBox * _comboBox;  ; int _currentMaterialPos;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< VectorMaterial >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  VectorMaterialDataWidget (QWidget *parent, const char *name, Data< type::vector< Material > > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< VectorMaterial >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< VectorMaterial > * getData ();  ; const sofa::core::objectmodel::Data< VectorMaterial > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html:740,inherit,inherited,740,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Protected Slots |; List of all members . sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker Class Reference . #include <QRGBAColorPicker.h>. Inheritance diagram for sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker:. [legend]; Detailed Description; Implement a widget to select a color either using a color wheel or by three values. . Protected Attributes; QRgb _rgba;  ; QLineEdit * _r;  ; QLineEdit * _g;  ; QLineEdit * _b;  ; QLineEdit * _a;  ; QPushButton * _colorButton;  . Public Member Functions;  QRGBAColorPicker (QWidget *parent);  ; void setColor (const type::RGBAColor &color);  ; void setColor (const Vec4f &color);  ; type::RGBAColor getColor () const;  . Signals; void hasChanged ();  . Protected Slots; void updateRGBAColor ();  ; void redrawColorButton ();  ; void raiseQColorDialog ();  . Attribute details. ◆ _a. QLineEdit* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_a. protected . ◆ _b. QLineEdit* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_b. protected . ◆ _colorButton. QPushButton* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_colorButton. protected . ◆ _g. QLineEdit* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_g. protected . ◆ _r. QLineEdit* sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_r. protected . ◆ _rgba. QRgb sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::_rgba. protected . Constructor details. ◆ QRGBAColorPicker(). sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::QRGBAColorPicker ; (; QWidget * ; parent). Function details. ◆ getColor(). type::RGBAColor sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::getColor ; (; ); const. ◆ hasChanged. void sofa::gui::qt::qrgbacolorpicker_h::QRGBAColorPicker::hasChanged ; (; ). signal . ◆ raiseQColorDialog. void sofa::gui::qt::qrgbacolorp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1qrgbacolorpicker__h_1_1_q_r_g_b_a_color_picker.html:360,Inherit,Inheritance,360,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1qrgbacolorpicker__h_1_1_q_r_g_b_a_color_picker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1qrgbacolorpicker__h_1_1_q_r_g_b_a_color_picker.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::real_data_widget_trait< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::gui::qt::real_data_widget_trait< T > Class Template Reference . #include <SimpleDataWidget.h>; float and double support ; More... Inheritance diagram for sofa::gui::qt::real_data_widget_trait< T >:. [legend]; Detailed Description; template<typename T>; class sofa::gui::qt::real_data_widget_trait< T >; float and double support . Static Public Member Functions; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . Function details. ◆ connectChanged(). template<typename T > . static void sofa::gui::qt::real_data_widget_trait< T >::connectChanged ; (; Widget * ; w, . DataWidget * ; datawidget . ). inlinestatic . ◆ create(). template<typename T > . static Widget* sofa::gui::qt::real_data_widget_trait< T >::create ; (; QWidget * ; parent, . const data_type & ;  . ). inlinestatic . ◆ readFromData(). template<typename T > . static void sofa::gui::qt::real_data_widget_trait< T >::readFromData ; (; Widget * ; w, . const data_type & ; d . ). inlinestatic . ◆ setReadOnly(). template<typename T > . static void sofa::gui::qt::real_data_widget_trait< T >::setReadOnly ; (; Widget * ; w, . bool ; readOnly . ). inlinestatic . ◆ writeToData(). template<typename T > . static void sofa::gui::qt::real_data_widget_trait< T >::writeToData ; (; Widget * ; w, . data_type & ; d . ). inlinestatic . sofaguiqtreal_data_widget_trait; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1real__data__widget__trait.html:348,Inherit,Inheritance,348,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1real__data__widget__trait.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1real__data__widget__trait.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::gui::qt::rgbacolordatawidget_h Namespace Reference . Classes; class  RGBAColorDataWidget;  . Variables; helper::Creator< DataWidgetFactory, RGBAColorDataWidget > DWClass (""default"", true);  . Variable Documentation. ◆ DWClass. helper::Creator<DataWidgetFactory, RGBAColorDataWidget> sofa::gui::qt::rgbacolordatawidget_h::DWClass(""default"", true) ; (; ""default"" ; , . true ;  . ). sofaguiqtrgbacolordatawidget_h; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h.html:156,Variab,Variables,156,api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h.html,3,['Variab'],"['Variable', 'Variables']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget Class Reference . #include <RGBAColorDataWidget.h>. Inheritance diagram for sofa::gui::qt::rgbacolordatawidget_h::RGBAColorDataWidget:. [legend]. Protected Attributes; QLineEdit * m_nameEdit;  ; QRGBAColorPicker * m_colorPicker;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< RGBAColor >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  RGBAColorDataWidget (QWidget *parent, const char *name, Data< RGBAColor > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< RGBAColor >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< RGBAColor > * getData ();  ; const sofa::core::objectmodel::Data< RGBAColor > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html:577,inherit,inherited,577,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1rgbacolordatawidget__h_1_1_r_g_b_a_color_data_widget.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::struct_data_widget_container< T, N > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::struct_data_widget_container< T, N > Class Template Reference . #include <StructDataWidget.h>. Inheritance diagram for sofa::gui::qt::struct_data_widget_container< T, N >:. [legend]. Public Attributes; PrevContainer p;  ; Container w;  ; QCheckBox * check;  ; QLabel * label;  ; Layout * container_layout;  ; MasterLayout * master_layout;  . Public Member Functions;  struct_data_widget_container ();  ; void setMasterLayout (MasterLayout *layout);  ; bool createLayout (DataWidget *parent);  ; bool createLayout (QLayout *layout);  ; void insertWidgets ();  ; bool createWidgets (DataWidget *parent, const data_type &d, bool readOnly);  ; void setReadOnly (bool readOnly);  ; void readFromData (const data_type &d);  ; void readConstantsFromData (const data_type &d);  ; void writeToData (data_type &d);  . Attribute details. ◆ check. template<class T , int N = struct_data_trait<T>::NVAR> . QCheckBox* sofa::gui::qt::struct_data_widget_container< T, N >::check. ◆ container_layout. template<class T , int N = struct_data_trait<T>::NVAR> . Layout* sofa::gui::qt::struct_data_widget_container< T, N >::container_layout. ◆ label. template<class T , int N = struct_data_trait<T>::NVAR> . QLabel* sofa::gui::qt::struct_data_widget_container< T, N >::label. ◆ master_layout. template<class T , int N = struct_data_trait<T>::NVAR> . MasterLayout* sofa::gui::qt::struct_data_widget_container< T, N >::master_layout. ◆ p. template<class T , int N = struct_data_trait<T>::NVAR> . PrevContainer sofa::gui::qt::struct_data_widget_container< T, N >::p. ◆ w. template<class T , int N = struct_data_trait<T>::NVAR> . Container sofa::gui::qt::struct_data_widget_container< T, N >::w. Constructor details. ◆ struct_data_widget_container(). template<class T , int N =",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__widget__container.html:345,Inherit,Inheritance,345,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__widget__container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1struct__data__widget__container.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::vector_data_trait< T > Class Template Reference . #include <SimpleDataWidget.h>; arrays and vectors support ; More... Inheritance diagram for sofa::gui::qt::vector_data_trait< T >:. [legend]; Detailed Description; template<class T>; class sofa::gui::qt::vector_data_trait< T >; arrays and vectors support ; This class is used to get properties of a data type in order to display it as a table or a list . Public Member Functions; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  . Static Public Member Functions; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . Function details. ◆ get(). template<class T > . static const value_type* sofa::gui::qt::vector_data_trait< T >::get ; (; const data_type & ; d, . Size ; i = 0 . ). inlinestatic . Get a row. . ◆ header() [1/5]. const char * sofa::gui::qt::vector_data_trait< sofa::type::Vec< 2, float > >::header ; (; const data_type & ; , . Size ; i . ). inline . ◆ header() [2/5]. const char * sofa::gui::qt::vector_data_trait< sofa::type::Vec< 2, double > >::header ; (; const data_type & ; , . Size ; i . ). inline . ◆ header() [3/5]. const char * sofa::gui::qt::vector_data_trait< sofa::type::Vec< 3, float > >::header ; (; const data_type & ; , ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait.html:367,Inherit,Inheritance,367,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Edge > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Edge > Class Reference . #include <SimpleDataWidget.h>; Topological edges/triangles/... support. ; More... Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Edge >:. [legend]; Detailed Description; Topological edges/triangles/... support. . Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 2 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Edge >; Generated on Mon Nov 11 2024 03:23:54 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html:601,inherit,inherited,601,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_edge_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Hexahedron > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Hexahedron > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Hexahedron >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 8 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Hexahedron >; Generated on Mon Nov 11 2024 03:24:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html:503,inherit,inherited,503,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_hexahedron_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Quad > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Quad > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Quad >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Quad >; Generated on Mon Nov 11 2024 03:24:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html:485,inherit,inherited,485,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_quad_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Tetrahedron > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Tetrahedron > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Tetrahedron >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 4 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Tetrahedron >; Generated on Mon Nov 11 2024 03:24:23 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html:506,inherit,inherited,506,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_tetrahedron_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Triangle > Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Triangle > Class Reference . #include <SimpleDataWidget.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::core::topology::Topology::Triangle >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ; const char * header (const data_type &, Size i);  ;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< sofa::type::fixed_array< sofa::core::topology::Topology::PointID, 3 > >; static Size size (const data_type &);  Get the number of rows. More...;  ; static const char * header (const data_type &, Size=0);  Get the name of a row, or nullptr if the index should be used instead. More...;  ; static const value_type * get (const data_type &d, Size i=0);  Get a row. More...;  ; static void set (const value_type &v, data_type &d, Size i=0);  Set a row. More...;  ; static void resize (Size, data_type &);  Resize. More...;  . sofaguiqtvector_data_trait< sofa::core::topology::Topology::Triangle >; Generated on Mon Nov 11 2024 03:24:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html:497,inherit,inherited,497,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1core_1_1topology_1_1_topology_1_1_triangle_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< sofa::type::vector< T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::gui::qt::vector_data_trait< sofa::type::vector< T > > Class Template Reference . #include <QTableDataContainer.h>. Inheritance diagram for sofa::gui::qt::vector_data_trait< sofa::type::vector< T > >:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::vector_data_trait< std::vector< T > >; static int size (const data_type &d);  ; static const char * header (const data_type &, int=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void resize (int s, data_type &d);  ; static int size (const data_type &d);  ; static const char * header (const data_type &, int=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void resize (int s, data_type &d);  . sofaguiqtvector_data_trait< sofa::type::vector< T > >; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1vector_3_01_t_01_4_01_4.html:474,inherit,inherited,474,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1vector_3_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01sofa_1_1type_1_1vector_3_01_t_01_4_01_4.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::vector_data_trait< std::vector< T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::gui::qt::vector_data_trait< std::vector< T > > Class Template Reference . #include <QTableDataContainer.h>; variable-sized vectors support ; More... Inheritance diagram for sofa::gui::qt::vector_data_trait< std::vector< T > >:. [legend]; Detailed Description; template<class T>; class sofa::gui::qt::vector_data_trait< std::vector< T > >; variable-sized vectors support . Static Public Member Functions; static int size (const data_type &d);  ; static const char * header (const data_type &, int=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void resize (int s, data_type &d);  ; static int size (const data_type &d);  ; static const char * header (const data_type &, int=0);  ; static const value_type * get (const data_type &d, int i=0);  ; static void set (const value_type &v, data_type &d, int i=0);  ; static void resize (int s, data_type &d);  . Function details. ◆ get() [1/2]. template<class T > . static const value_type* sofa::gui::qt::vector_data_trait< std::vector< T > >::get ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ get() [2/2]. template<class T > . static const value_type* sofa::gui::qt::vector_data_trait< std::vector< T > >::get ; (; const data_type & ; d, . int ; i = 0 . ). inlinestatic . ◆ header() [1/2]. template<class T > . static const char* sofa::gui::qt::vector_data_trait< std::vector< T > >::header ; (; const data_type & ; , . int ; = 0 . ). inlinestatic . ◆ header() [2/2]. template<class T > . static const char* sofa::gui::qt::vector_data_trait< std::vector< T > >::header ; (; const data_type & ; , . int ; = 0 . ). inlinestatic . ◆ resize() [1/2]. template<class T > . static void sofa::gui::qt::vector_data_trait< st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1vector_3_01_t_01_4_01_4.html:336,variab,variable-sized,336,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1vector_3_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1vector__data__trait_3_01std_1_1vector_3_01_t_01_4_01_4.html,5,"['Inherit', 'variab']","['Inheritance', 'variable-sized']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType > Class Template Reference . #include <OglModelPolicy.h>. Inheritance diagram for sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >:. [legend]. Public Member Functions;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual QWidget * getQWidget ()=0;  ; virtual QString helpString () const =0;  ; void captureEvent () override;  ; virtual void keyPressEvent (QKeyEvent *e);  ; virtual void keyReleaseEvent (QKeyEvent *e);  ; bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent *e);  ; virtual bool mouseEvent (QMouseEvent *e);  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void screenshot (const std::string &filename, int compression_level=-1) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html:589,inherit,inherited,589,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,5,"['Inherit', 'config', 'inherit']","['Inheritance', 'configureViewerTab', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::viewer::EngineBackend Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::viewer::EngineBackend Class Referenceabstract . #include <EngineBackend.h>. Inheritance diagram for sofa::gui::qt::viewer::EngineBackend:. [legend]. Public Member Functions;  EngineBackend ()=default;  ; virtual ~EngineBackend ()=default;  ; virtual void setPickingMethod (sofa::gui::common::PickHandler *pick, sofa::component::setting::ViewerSetting *viewerConf)=0;  ; virtual void setPrefix (const std::string &prefix)=0;  ; virtual const std::string screenshotName ()=0;  ; virtual void screenshot (const std::string &filename, int compression_level=-1)=0;  ; virtual void setBackgroundImage (helper::io::Image *image)=0;  ; virtual void drawBackgroundImage (const int screenWidth, const int screenHeight)=0;  ; virtual bool initRecorder (int width, int height, unsigned int framerate, unsigned int bitrate, const std::string &codecExtension="""", const std::string &codecName="""")=0;  ; virtual void endRecorder ()=0;  ; virtual void addFrameRecorder ()=0;  . Constructor details. ◆ EngineBackend(). sofa::gui::qt::viewer::EngineBackend::EngineBackend ; (; ). default . ◆ ~EngineBackend(). virtual sofa::gui::qt::viewer::EngineBackend::~EngineBackend ; (; ). virtualdefault . Function details. ◆ addFrameRecorder(). virtual void sofa::gui::qt::viewer::EngineBackend::addFrameRecorder ; (; ). pure virtual . Implemented in sofa::gui::qt::viewer::GLBackend. ◆ drawBackgroundImage(). virtual void sofa::gui::qt::viewer::EngineBackend::drawBackgroundImage ; (; const int ; screenWidth, . const int ; screenHeight . ). pure virtual . Implemented in sofa::gui::qt::viewer::GLBackend. ◆ endRecorder(). virtual void sofa::gui::qt::viewer::EngineBackend::endRecorder ; (; ). pure virtual . Implemented in sofa::gui::qt::viewer::GLBackend. ◆ initRecorder(). virtual bool sofa::gui::qt::viewer::EngineBacke",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_engine_backend.html:281,Inherit,Inheritance,281,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_engine_backend.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_engine_backend.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::viewer::GLBackend Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::gui::qt::viewer::GLBackend Class Reference . #include <GLBackend.h>. Inheritance diagram for sofa::gui::qt::viewer::GLBackend:. [legend]. Public Member Functions;  GLBackend ();  ; virtual ~GLBackend ();  ; void setPickingMethod (sofa::gui::common::PickHandler *pick, sofa::component::setting::ViewerSetting *viewerConf);  ; void setPrefix (const std::string &prefix);  ; const std::string screenshotName ();  ; void screenshot (const std::string &filename, int compression_level=-1);  ; void setBackgroundImage (helper::io::Image *image);  ; void drawBackgroundImage (const int screenWidth, const int screenHeight);  ; bool initRecorder (int width, int height, unsigned int framerate, unsigned int bitrate, const std::string &codecExtension="""", const std::string &codecName="""");  ; void endRecorder ();  ; void addFrameRecorder ();  ;  Public Member Functions inherited from sofa::gui::qt::viewer::EngineBackend;  EngineBackend ()=default;  ; virtual ~EngineBackend ()=default;  . Constructor details. ◆ GLBackend(). sofa::gui::qt::viewer::GLBackend::GLBackend ; (; ). ◆ ~GLBackend(). sofa::gui::qt::viewer::GLBackend::~GLBackend ; (; ). virtual . Function details. ◆ addFrameRecorder(). void sofa::gui::qt::viewer::GLBackend::addFrameRecorder ; (; ). virtual . Implements sofa::gui::qt::viewer::EngineBackend. ◆ drawBackgroundImage(). void sofa::gui::qt::viewer::GLBackend::drawBackgroundImage ; (; const int ; screenWidth, . const int ; screenHeight . ). virtual . Implements sofa::gui::qt::viewer::EngineBackend. ◆ endRecorder(). void sofa::gui::qt::viewer::GLBackend::endRecorder ; (; ). virtual . Implements sofa::gui::qt::viewer::EngineBackend. ◆ initRecorder(). bool sofa::gui::qt::viewer::GLBackend::initRecorder ; (; int ; width, . int ; height, . unsigned int ; framerate, . unsigned int ; bitrate,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_g_l_backend.html:1053,inherit,inherited,1053,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_g_l_backend.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_g_l_backend.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::gui::qt::viewer::OglModelPolicy Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::viewer::OglModelPolicy Class Reference . #include <OglModelPolicy.h>. Inheritance diagram for sofa::gui::qt::viewer::OglModelPolicy:. [legend]. Protected Attributes; sofa::core::ObjectFactory::ClassEntry::SPtr classVisualModel;  ; std::unique_ptr< sofa::helper::visual::DrawTool > drawTool;  ;  Protected Attributes inherited from sofa::gui::qt::viewer::VisualModelPolicy; sofa::core::visual::VisualParams * vparams;  . Public Member Functions; void load () override;  ; void unload () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::VisualModelPolicy;  VisualModelPolicy (core::visual::VisualParams *vparams=core::visual::visualparams::defaultInstance());  ; virtual ~VisualModelPolicy ();  . Attribute details. ◆ classVisualModel. sofa::core::ObjectFactory::ClassEntry::SPtr sofa::gui::qt::viewer::OglModelPolicy::classVisualModel. protected . ◆ drawTool. std::unique_ptr<sofa::helper::visual::DrawTool> sofa::gui::qt::viewer::OglModelPolicy::drawTool. protected . Function details. ◆ load(). void sofa::gui::qt::viewer::OglModelPolicy::load ; (; void ; ). overridevirtual . Implements sofa::gui::qt::viewer::VisualModelPolicy. ◆ unload(). void sofa::gui::qt::viewer::OglModelPolicy::unload ; (; void ; ). overridevirtual . Implements sofa::gui::qt::viewer::VisualModelPolicy. sofaguiqtviewerOglModelPolicy; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy.html:546,inherit,inherited,546,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_ogl_model_policy.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::gui::qt::viewer::SofaViewer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; List of all members . sofa::gui::qt::viewer::SofaViewer Class Referenceabstract . #include <SofaViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::SofaViewer:. [legend]. Protected Attributes; std::unique_ptr< EngineBackend > m_backend;  ; QTimer captureTimer;  ; bool m_isControlPressed;  ; ColourPickingRenderCallBack colourPickingRenderCallBack;  ;  Protected Attributes inherited from sofa::gui::common::BaseViewer; sofa::simulation::Node::SPtr groot;  the sofa root note of the current scene More...;  ; sofa::component::visual::BaseCamera::SPtr currentCamera;  ; std::string sceneFileName;  ; bool _video;  ; bool m_isVideoButtonPressed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  . Public Member Functions;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual QWidget * getQWidget ()=0;  ; virtual QString helpString () const =0;  ; void captureEvent () override;  ; virtual void keyPressEvent (QKeyEvent *e);  ; virtual void keyReleaseEvent (QKeyEvent *e);  ; bool isControlPressed () const;  ; virtual void wheelEvent (QWheelEvent *e);  ; virtual void mouseMoveEvent (QMouseEvent *e);  ; virtual void mousePressEvent (QMouseEvent *e);  ; virtual void mouseReleaseEvent (QMouseEvent ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html:610,inherit,inherited,610,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::gui::qt::viewer::VisualModelPolicy Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::viewer::VisualModelPolicy Class Referenceabstract . #include <VisualModelPolicy.h>. Inheritance diagram for sofa::gui::qt::viewer::VisualModelPolicy:. [legend]. Protected Attributes; sofa::core::visual::VisualParams * vparams;  . Public Member Functions;  VisualModelPolicy (core::visual::VisualParams *vparams=core::visual::visualparams::defaultInstance());  ; virtual ~VisualModelPolicy ();  ; virtual void load ()=0;  ; virtual void unload ()=0;  . Attribute details. ◆ vparams. sofa::core::visual::VisualParams* sofa::gui::qt::viewer::VisualModelPolicy::vparams. protected . Constructor details. ◆ VisualModelPolicy(). sofa::gui::qt::viewer::VisualModelPolicy::VisualModelPolicy ; (; core::visual::VisualParams * ; vparams = core::visual::visualparams::defaultInstance()). ◆ ~VisualModelPolicy(). sofa::gui::qt::viewer::VisualModelPolicy::~VisualModelPolicy ; (; ). virtual . Function details. ◆ load(). virtual void sofa::gui::qt::viewer::VisualModelPolicy::load ; (; ). pure virtual . Implemented in sofa::gui::qt::viewer::OglModelPolicy. ◆ unload(). virtual void sofa::gui::qt::viewer::VisualModelPolicy::unload ; (; ). pure virtual . Implemented in sofa::gui::qt::viewer::OglModelPolicy. sofaguiqtviewerVisualModelPolicy; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_visual_model_policy.html:317,Inherit,Inheritance,317,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_visual_model_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_visual_model_policy.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::gui::qt::viewer::qgl Namespace Reference . Classes; class  QtGLViewer;  . Variables; helper::SofaViewerCreator< QtGLViewer > QtGLViewer_class (""qglviewer"", false);  . Variable Documentation. ◆ QtGLViewer_class. helper::SofaViewerCreator<QtGLViewer> sofa::gui::qt::viewer::qgl::QtGLViewer_class(""qglviewer"", false) ; (; ""qglviewer"" ; , . false ;  . ). sofaguiqtviewerqgl; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1viewer_1_1qgl.html:146,Variab,Variables,146,api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1viewer_1_1qgl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1viewer_1_1qgl.html,3,['Variab'],"['Variable', 'Variables']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::viewer::qgl::QtGLViewer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::viewer::qgl::QtGLViewer Class Reference . #include <QtGLViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::qgl::QtGLViewer:. [legend]. Public Member Functions; virtual void drawColourPicking (common::ColourPickingVisitor::ColourCode code) override;  ;  QtGLViewer (QWidget *parent, const char *name="""");  ;  ~QtGLViewer () override;  ; QWidget * getQWidget () override;  ; int getWidth () override;  ; int getHeight () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void setCameraMode (core::visual::VisualParams::CameraType mode) override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ; QString helpString () const override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBack",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html:365,Inherit,Inheritance,365,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::gui::qt::viewer::qt Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Variables . sofa::gui::qt::viewer::qt Namespace Reference . Classes; class  QtViewer;  . Typedefs; typedef QGLWidget QOpenGLWidget;  . Variables; helper::SofaViewerCreator< QtViewer > QtViewer_class (""qt"", false);  . Typedef Documentation. ◆ QOpenGLWidget. typedef QGLWidget sofa::gui::qt::viewer::qt::QOpenGLWidget. Variable Documentation. ◆ QtViewer_class. helper::SofaViewerCreator< QtViewer> sofa::gui::qt::viewer::qt::QtViewer_class(""qt"", false) ; (; ""qt"" ; , . false ;  . ). sofaguiqtviewerqt; Generated on Mon Nov 11 2024 03:25:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1viewer_1_1qt.html:157,Variab,Variables,157,api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1viewer_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt_1_1viewer_1_1qt.html,3,['Variab'],"['Variable', 'Variables']"
Modifiability,"﻿. SOFA API: sofa::gui::qt::viewer::qt::QtViewer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::viewer::qt::QtViewer Class Reference . #include <QtViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::qt::QtViewer:. [legend]. Public Attributes; bool _mouseInteractorTranslationMode;  ; bool _mouseInteractorRotationMode;  ; int _translationMode;  ; Quat< SReal > _mouseInteractorCurrentQuat;  ; Vec3 _mouseInteractorAbsolutePosition;  ; Trackball _mouseInteractorTrackball;  . Static Public Attributes; static const std::string VIEW_FILE_EXTENSION = ""view"";  TODO: standardize .view file parameters. More...;  ; static Quat< SReal > _mouseInteractorNewQuat;  ; static bool _mouseTrans = false;  ; static bool _mouseRotate = false;  . Public Member Functions;  QtViewer (QWidget *parent, const char *name="""");  ;  ~QtViewer () override;  ; QWidget * getQWidget () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; sofa::simulation::Node * getScene () override;  ; int getWidth () override;  ; int getHeight () override;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void ApplyMouseInteractorTransformation (int x, int y);  ; QString helpString () const override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html:406,Inherit,Inheritance,406,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qt_1_1_qt_viewer.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::helper Namespace Reference . Namespaces;  advancedtimer;  ;  console;  ;  io;  This allow MeshTrian to interact with the messaging system. ;  ;  lifecycle;  ;  logging;  This allow Base object to interact with the messaging system. ;  ;  messaging;  ;  polygon_cube_intersection;  ;  system;  ;  visual;  . Classes; class  ReadAccessor< core::objectmodel::Data< T > >;  ; class  WriteAccessor< core::objectmodel::Data< T > >;  ; class  WriteOnlyAccessor< core::objectmodel::Data< T > >;  The WriteOnlyAccessor provides an access to the Data without triggering an engine update. This should be the preferred writeAccessor for most of the cases as it avoids unnecessary Data updates. More...;  ; class  ReadAccessor;  ; class  ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  ReadAccessorVector;  ; class  WriteAccessor;  ; class  WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  WriteAccessorVector;  WriteAccessor implementation class for vector types. More...;  ; class  WriteOnlyAccessor;  ; class  WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >;  ; class  TimerData;  ; class  Record;  ; class  StepData;  ; class  AdvancedTimer;  ; class  BackTrace;  ; class  ColorMap;  ; class  Decompose;  ; class  NoArgument;  Allow us to use BaseCreator and Factory without using any Arguments. More...;  ; class  BaseCreator;  ; class  Factory;  ; class  Creator;  ; class  CreatorFn;  ; class  BasicDispatcher;  ; class  FnDispatcher;  ; class  SingletonFnDispatcher;  ; struct  GenerateRigidInfo;  storing rigid infos needed for RigidMass More...;  ; struct  IndexOpenMP;  ; struct  CleanupCheck;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html:187,Variab,Variables,187,api/master/sofa/html/namespacesofa_1_1helper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper.html,1,['Variab'],['Variables']
Modifiability,"﻿. SOFA API: sofa::helper::AdvancedTimer::Id< Base > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::AdvancedTimer::Id< Base > Class Template Reference . #include <AdvancedTimer.h>. Inheritance diagram for sofa::helper::AdvancedTimer::Id< Base >:. [legend]. Classes; class  IdFactory;  . Protected Attributes; unsigned int id;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  Id ();  ;  Id (const std::string &s);  An Id is constructed from a string and appears like one after, without actually storing a string. More...;  ;  Id (const char *s);  An Id is constructed from a string and appears like one after, without actually storing a string. More...;  ;  Id (unsigned int id);  This constructor should be used only if really necessary. More...;  ;  operator unsigned int () const;  Any operation requiring an int can be used on an id using this conversion. More...;  ;  operator std::string () const;  Any operation requiring a string can be used on an id using this conversion. More...;  ; bool operator== (const Id< Base > &t) const;  ; bool operator!= (const Id< Base > &t) const;  ; bool operator< (const Id< Base > &t) const;  ; bool operator> (const Id< Base > &t) const;  ; bool operator<= (const Id< Base > &t) const;  ; bool operator>= (const Id< Base > &t) const;  ; bool operator! () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id.html:513,inherit,inherited,513,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::AdvancedTimer::Id< Base >::IdFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::AdvancedTimer::Id< Base >::IdFactory Class Reference . #include <AdvancedTimer.h>. Inheritance diagram for sofa::helper::AdvancedTimer::Id< Base >::IdFactory:. [legend]; Detailed Description; template<class Base>; class sofa::helper::AdvancedTimer::Id< Base >::IdFactory; Internal class used to generate IDs. . Protected Attributes; std::vector< std::string > idsList;  the list of the id names. the Ids are the indices in the vector More...;  ; std::unordered_map< std::string, unsigned int > idsMap;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Static Public Member Functions; static unsigned int getID (const std::string &name);  ; static std::size_t getLastID ();  ; static std::string getName (unsigned int id);  return the name corresponding to the id in parameter More...;  ; static IdFactory & getInstance ();  return the instance of the factory. Creates it if doesn't exist yet. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  IdFactory ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory.html:806,inherit,inherited,806,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::helper::AdvancedTimer::Timer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::AdvancedTimer::Timer Class Reference . #include <AdvancedTimer.h>. Inheritance diagram for sofa::helper::AdvancedTimer::Timer:. [legend]. sofahelperAdvancedTimerTimer; Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_timer.html:220,Inherit,Inheritance,220,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_timer.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::BaseCreator< Object, Argument, ObjectPtr > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::BaseCreator< Object, Argument, ObjectPtr > Class Template Referenceabstract . #include <Factory.h>. Inheritance diagram for sofa::helper::BaseCreator< Object, Argument, ObjectPtr >:. [legend]. Public Member Functions; virtual ~BaseCreator ();  ; virtual ObjectPtr createInstance (Argument arg)=0;  ; virtual const std::type_info & type ()=0;  . Constructor details. ◆ ~BaseCreator(). template<class Object , class Argument = NoArgument, class ObjectPtr = Object*> . virtual sofa::helper::BaseCreator< Object, Argument, ObjectPtr >::~BaseCreator ; (; ). inlinevirtual . Function details. ◆ createInstance(). template<class Object , class Argument = NoArgument, class ObjectPtr = Object*> . virtual ObjectPtr sofa::helper::BaseCreator< Object, Argument, ObjectPtr >::createInstance ; (; Argument ; arg). pure virtual . ◆ type(). template<class Object , class Argument = NoArgument, class ObjectPtr = Object*> . virtual const std::type_info& sofa::helper::BaseCreator< Object, Argument, ObjectPtr >::type ; (; ). pure virtual . Implemented in sofa::helper::CreatorFn< Factory, RealObject >, sofa::helper::Creator< Factory, RealObject >, sofa::helper::Creator< SofaViewerFactory, RealObject >, and sofa::helper::Creator< Mapper::ContactMapperFactory, Mapper >. sofahelperBaseCreator; Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_base_creator.html:333,Inherit,Inheritance,333,api/master/sofa/html/classsofa_1_1helper_1_1_base_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_base_creator.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::BasicDispatcher< BaseClass, ResulT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::BasicDispatcher< BaseClass, ResulT > Class Template Reference . #include <FnDispatcher.h>. Inheritance diagram for sofa::helper::BasicDispatcher< BaseClass, ResulT >:. [legend]. Protected Attributes; MapType callBackMap;  . Public Member Functions; void add (const std::type_info &class1, const std::type_info &class2, F fun);  ; void ignore (const std::type_info &class1, const std::type_info &class2);  ; template<class ConcreteClass1 , class ConcreteClass2 , ResulT(*)(ConcreteClass1 &, ConcreteClass2 &) F, bool symmetric> ; void ignore ();  ; virtual ResulT defaultFn (BaseClass &arg1, BaseClass &arg2);  ; ResulT go (BaseClass &arg1, BaseClass &arg2);  ; bool isSupported (BaseClass &arg1, BaseClass &arg2);  Return true if a pair of argument correspond to a callback function (different than ignoreFn) More...;  . Static Public Member Functions; static ResulT ignoreFn (BaseClass &arg1, BaseClass &arg2);  . Protected Member Functions; virtual ~BasicDispatcher ();  . Attribute details. ◆ callBackMap. template<class BaseClass , typename ResulT = void> . MapType sofa::helper::BasicDispatcher< BaseClass, ResulT >::callBackMap. protected . Constructor details. ◆ ~BasicDispatcher(). template<class BaseClass , typename ResulT = void> . virtual sofa::helper::BasicDispatcher< BaseClass, ResulT >::~BasicDispatcher ; (; ). inlineprotectedvirtual . Function details. ◆ add(). template<class BaseClass , typename ResulT > . void sofa::helper::BasicDispatcher< BaseClass, ResulT >::add ; (; const std::type_info & ; class1, . const std::type_info & ; class2, . F ; fun . ). ◆ defaultFn(). template<class BaseClass , typename ResulT > . ResulT sofa::helper::BasicDispatcher< BaseClass,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_basic_dispatcher.html:406,Inherit,Inheritance,406,api/master/sofa/html/classsofa_1_1helper_1_1_basic_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_basic_dispatcher.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::Creator< Factory, RealObject > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::Creator< Factory, RealObject > Class Template Reference . #include <Factory.h>. Inheritance diagram for sofa::helper::Creator< Factory, RealObject >:. [legend]. Public Member Functions;  Creator (Key key, bool multi=false);  ; ObjectPtr createInstance (Argument arg);  ; const std::type_info & type ();  ; void registerInFactory ();  ; const Key & getKey () const;  ;  Public Member Functions inherited from sofa::helper::BaseCreator< Object, Argument, ObjectPtr >; virtual ~BaseCreator ();  ; virtual ObjectPtr createInstance (Argument arg)=0;  . Constructor details. ◆ Creator(). template<class Factory , class RealObject > . sofa::helper::Creator< Factory, RealObject >::Creator ; (; Key ; key, . bool ; multi = false . ). inlineexplicit . Function details. ◆ createInstance(). template<class Factory , class RealObject > . ObjectPtr sofa::helper::Creator< Factory, RealObject >::createInstance ; (; Argument ; arg). inline . ◆ getKey(). template<class Factory , class RealObject > . const Key& sofa::helper::Creator< Factory, RealObject >::getKey ; (; ); const. inline . ◆ registerInFactory(). template<class Factory , class RealObject > . void sofa::helper::Creator< Factory, RealObject >::registerInFactory ; (; ). inline . ◆ type(). template<class Factory , class RealObject > . const std::type_info& sofa::helper::Creator< Factory, RealObject >::type ; (; ). inlinevirtual . Implements sofa::helper::BaseCreator< Object, Argument, ObjectPtr >. sofahelperCreator; Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_creator.html:614,inherit,inherited,614,api/master/sofa/html/classsofa_1_1helper_1_1_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_creator.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::CreatorFn< Factory, RealObject > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::CreatorFn< Factory, RealObject > Class Template Reference . #include <Factory.h>. Inheritance diagram for sofa::helper::CreatorFn< Factory, RealObject >:. [legend]. Public Attributes; Fn * constructor;  . Public Member Functions;  CreatorFn (Key key, Fn *constructor, bool multi=false);  ; ObjectPtr createInstance (Argument arg);  ; const std::type_info & type ();  ;  Public Member Functions inherited from sofa::helper::BaseCreator< Object, Argument, ObjectPtr >; virtual ~BaseCreator ();  ; virtual ObjectPtr createInstance (Argument arg)=0;  . Attribute details. ◆ constructor. template<class Factory , class RealObject > . Fn* sofa::helper::CreatorFn< Factory, RealObject >::constructor. Constructor details. ◆ CreatorFn(). template<class Factory , class RealObject > . sofa::helper::CreatorFn< Factory, RealObject >::CreatorFn ; (; Key ; key, . Fn * ; constructor, . bool ; multi = false . ). inline . Function details. ◆ createInstance(). template<class Factory , class RealObject > . ObjectPtr sofa::helper::CreatorFn< Factory, RealObject >::createInstance ; (; Argument ; arg). inline . ◆ type(). template<class Factory , class RealObject > . const std::type_info& sofa::helper::CreatorFn< Factory, RealObject >::type ; (; ). inlinevirtual . Implements sofa::helper::BaseCreator< Object, Argument, ObjectPtr >. sofahelperCreatorFn; Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_creator_fn.html:638,inherit,inherited,638,api/master/sofa/html/classsofa_1_1helper_1_1_creator_fn.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_creator_fn.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::Factory< TKey, TObject, TArgument, TPtr > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::Factory< TKey, TObject, TArgument, TPtr > Class Template Reference . #include <Factory.h>. Inheritance diagram for sofa::helper::Factory< TKey, TObject, TArgument, TPtr >:. [legend]. Protected Attributes; std::multimap< Key, Creator * > registry;  . Public Member Functions; bool registerCreator (Key key, Creator *creator, bool multi=false);  ; template<class U = Argument, std::enable_if_t< std::is_same_v< U, NoArgument >, int > = 0> ; ObjectPtr createObject (Key key, Argument arg=NoArgument());  ; ObjectPtr createObject (Key key, Argument arg);  ; ObjectPtr createAnyObject (Argument arg);  ; template<typename OutIterator > ; void uniqueKeys (OutIterator out);  ; bool hasKey (Key key);  ; bool duplicateEntry (Key existing, Key duplicate);  ; bool resetEntry (Key existingKey);  ; iterator begin ();  ; iterator end ();  ; const_iterator begin () const;  ; const_iterator end () const;  . Static Public Member Functions; static Factory< Key, Object, Argument, ObjectPtr > * getInstance ();  ; static ObjectPtr CreateObject (Key key, Argument arg);  ; static ObjectPtr CreateAnyObject (Argument arg);  ; static bool HasKey (Key key);  ; static bool DuplicateEntry (Key existing, Key duplicate);  ; static bool ResetEntry (Key existing);  . Attribute details. ◆ registry. template<typename TKey , class TObject , typename TArgument = NoArgument, typename TPtr = TObject*> . std::multimap<Key, Creator*> sofa::helper::Factory< TKey, TObject, TArgument, TPtr >::registry. protected . Function details. ◆ begin() [1/2]. template<typename TKey , class TObject , typename TArgument = NoArgument, typename TPtr = TObject*> . iterator sofa::helper::Factory< TKey, TObject, TArgument, TPtr >::begin ; (; ). inline",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_factory.html:381,Inherit,Inheritance,381,api/master/sofa/html/classsofa_1_1helper_1_1_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_factory.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::FnDispatcher< BaseClass, ResulT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::FnDispatcher< BaseClass, ResulT > Class Template Reference . #include <FnDispatcher.h>. Inheritance diagram for sofa::helper::FnDispatcher< BaseClass, ResulT >:. [legend]. Public Member Functions; template<class ConcreteClass1 , class ConcreteClass2 , ResulT(*)(ConcreteClass1 &, ConcreteClass2 &) F, bool symmetric> ; void add ();  ; template<class ConcreteClass1 , class ConcreteClass2 , bool symmetric> ; void ignore ();  ;  Public Member Functions inherited from sofa::helper::BasicDispatcher< BaseClass, ResulT >; void add (const std::type_info &class1, const std::type_info &class2, F fun);  ; void ignore (const std::type_info &class1, const std::type_info &class2);  ; void ignore ();  ; virtual ResulT defaultFn (BaseClass &arg1, BaseClass &arg2);  ; ResulT go (BaseClass &arg1, BaseClass &arg2);  ; bool isSupported (BaseClass &arg1, BaseClass &arg2);  Return true if a pair of argument correspond to a callback function (different than ignoreFn) More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::BasicDispatcher< BaseClass, ResulT >; MapType callBackMap;  ;  Static Public Member Functions inherited from sofa::helper::BasicDispatcher< BaseClass, ResulT >; static ResulT ignoreFn (BaseClass &arg1, BaseClass &arg2);  ;  Protected Member Functions inherited from sofa::helper::BasicDispatcher< BaseClass, ResulT >; virtual ~BasicDispatcher ();  . Function details. ◆ add(). template<class BaseClass , typename ResulT > . template<class ConcreteClass1 , class ConcreteClass2 , ResulT(*)(ConcreteClass1 &, ConcreteClass2 &) F, bool symmetric> . void sofa::helper::FnDispatcher< BaseClass, ResulT >::add ; (; ). inline . ◆ ignore(). template<class BaseClass , typename ResulT > . template<class ConcreteClass1 , class ConcreteC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_fn_dispatcher.html:676,inherit,inherited,676,api/master/sofa/html/classsofa_1_1helper_1_1_fn_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_fn_dispatcher.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::Monomial_LD< Real, N > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::Monomial_LD< Real, N > Class Template Reference . #include <Polynomial_LD.h>; A generic monomial with N variables of type Real. A monomial is one term of a polynomial. ; More...; Detailed Description; template<typename Real, unsigned int N>; class sofa::helper::Monomial_LD< Real, N >; A generic monomial with N variables of type Real. A monomial is one term of a polynomial. ; Todo this first version of polynomial is a linear presentation. This presentation is efficient for arithmetic operator like +,-,*,/ and derivative. But is not optimized for the evaluating (comparing to the recurrent presentation). . Public Attributes; Real coef;  ; sofa::type::Vec< N, int > powers;  . Protected Attributes; sofa::type::Vec< N, std::string > variables;  . Public Member Functions;  Monomial_LD ();  ;  Monomial_LD (Real,...);  ;  Monomial_LD (const Monomial_LD< Real, N > &a);  ; Monomial_LD< Real, N > & operator= (const Monomial_LD< Real, N > &b);  ; void SetCoef (const Real &m_coef);  Setting of Monomial_LD. More...;  ; void SetPower (int numbervar, int powervalue);  ; int degree ();  Return the total degree of monomial. More...;  ; bool operator== (const Monomial_LD< Real, N > &b) const;  Logical operators. More...;  ; bool operator!= (const Monomial_LD< Real, N > &b) const;  ; bool isSamePowers (const Monomial_LD< Real, N > &b) const;  ; bool isnullptr () const;  ; Monomial_LD< Real, N > & operator*= (const Real &alpha);  Mathematical operators. More...;  ; Monomial_LD< Real, N > & operator/= (const Real &alpha);  ; Monomial_LD< Real, N > & operator+= (const Monomial_LD< Real, N > &b);  ; Monomial_LD< Real, N > & operator-= (const Monomial_LD< Real, N > &b);  ; Monomial_LD< Real, N > & operator*= (const Monomial_LD< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html:373,variab,variables,373,api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,6,['variab'],['variables']
Modifiability,"﻿. SOFA API: sofa::helper::Polynomial_LD< Real, N > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::helper::Polynomial_LD< Real, N > Class Template Reference . #include <Polynomial_LD.h>; A generic polynomial with N variables of type Real. A polynomial is a list composed of several monomials. ; More...; Detailed Description; template<typename Real, unsigned int N>; class sofa::helper::Polynomial_LD< Real, N >; A generic polynomial with N variables of type Real. A polynomial is a list composed of several monomials. . Public Attributes; unsigned int nbOfMonomial;  ; MonomialsList listOfMonoMial;  . Public Member Functions;  Polynomial_LD ();  Default constructor. More...;  ;  Polynomial_LD (const Polynomial_LD< Real, N > &a);  Copy constructor. More...;  ;  Polynomial_LD (const Monomial_LD< Real, N > &a);  ; Polynomial_LD< Real, N > & operator= (const Polynomial_LD< Real, N > &b);  Assign operator. More...;  ;  Polynomial_LD (const unsigned int nbofTerm,...);  setting of Polynomial More...;  ; void Set (const unsigned int nbofTerm,...);  ; int degree ();  ; bool operator== (const Polynomial_LD< Real, N > &b) const;  Return true if a and b has the same powers. More...;  ; bool operator!= (const Polynomial_LD< Real, N > &b) const;  ; Polynomial_LD< Real, N > & operator*= (const Real &alpha);  ; Polynomial_LD< Real, N > & operator/= (const Real &alpha);  ; Polynomial_LD< Real, N > & operator+= (const Monomial_LD< Real, N > &b);  ; Polynomial_LD< Real, N > & operator+= (const Polynomial_LD< Real, N > &b);  ; Polynomial_LD< Real, N > & operator-= (const Polynomial_LD< Real, N > &b);  ; Polynomial_LD< Real, N > operator+ () const;  ; Polynomial_LD< Real, N > operator- () const;  ; Polynomial_LD< Real, N > & operator*= (const Polynomial_LD< Real, N > &b);  ; Polynomial_LD< Real, N > operator* (const Real &alph",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_polynomial___l_d.html:385,variab,variables,385,api/master/sofa/html/classsofa_1_1helper_1_1_polynomial___l_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_polynomial___l_d.html,4,['variab'],['variables']
Modifiability,"﻿. SOFA API: sofa::helper::ReadAccessor< T, Enable > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::ReadAccessor< T, Enable > Class Template Reference . #include <ReadAccessor.h>. Inheritance diagram for sofa::helper::ReadAccessor< T, Enable >:. [legend]; Detailed Description; template<class T, class Enable = void>; class sofa::helper::ReadAccessor< T, Enable >; A ReadAccessor is a proxy class, holding a reference to a given container and providing access to its data, using an unified interface (similar to std::vector), hiding API differences within containers.; Other advantadges of using a ReadAccessor are :. It can be faster that the default methods and operators of the container, as verifications and changes notifications can be handled in the accessor's constructor and destructor instead of at each item access.; No modifications to the container will be done by mistake; Accesses can be logged for debugging or task dependencies analysis. The default implementation provides only minimal set of methods and operators, sufficient for scalar types but which should be overloaded for more complex types. Various template specializations are typically used, especially for core::objectmodel::Data<T> . Protected Attributes; const container_type * vref;  . Public Member Functions;  ReadAccessor (const container_type &container);  ; const_reference ref () const;  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  . Attribute details. ◆ vref. template<class T , class Enable = void> . const container_type* sofa::helper::ReadAccessor< T, Enable >::vref. protected . Constructor details. ◆ ReadAccessor(). template<class T , class Enable = void> . sofa::helper::ReadAccessor< T, Enable >::ReadAccessor ; (; const container_type & ; container). inlineexplicit . Function details. ◆ ope",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html:320,Inherit,Inheritance,320,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference . #include <ReadAccessor.h>. Inheritance diagram for sofa::helper::ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >:. [legend]. Public Member Functions;  ReadAccessor (const container_type &c);  ;  Public Member Functions inherited from sofa::helper::ReadAccessorVector< VectorLikeType >;  ReadAccessorVector (const container_type &container);  ; bool empty () const;  ; Size size () const;  ; const_reference operator[] (Size i) const;  ; const_iterator begin () const;  ; const_iterator end () const;  ;  operator const_container_type & () const;  ; const_container_type * operator-> () const;  ; const_container_type & operator* () const;  ; const_container_type & ref () const;  this duplicate operator* (remove ?) More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::ReadAccessorVector< VectorLikeType >; const container_type * vref;  . Constructor details. ◆ ReadAccessor(). template<class VectorLikeType > . sofa::helper::ReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >::ReadAccessor ; (; const container_type & ; c). inline . sofahelperReadAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >; Generated on Mon Nov 11 2024 03:26:27 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_19545b393afc06ce87e7a678b67613e38.html:706,inherit,inherited,706,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_19545b393afc06ce87e7a678b67613e38.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_19545b393afc06ce87e7a678b67613e38.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::ReadAccessor< core::objectmodel::Data< T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::ReadAccessor< core::objectmodel::Data< T > > Class Template Reference . #include <Data.h>. Inheritance diagram for sofa::helper::ReadAccessor< core::objectmodel::Data< T > >:. [legend]; Detailed Description; template<class T>; class sofa::helper::ReadAccessor< core::objectmodel::Data< T > >; Warningthe Data is updated (if needed) only by the Accessor constructor . Public Member Functions;  ReadAccessor (const data_container_type &d);  ;  ReadAccessor (const data_container_type *d);  ;  Public Member Functions inherited from sofa::helper::ReadAccessor< T, Enable >;  ReadAccessor (const container_type &container);  ; const_reference ref () const;  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::ReadAccessor< T, Enable >; const container_type * vref;  . Constructor details. ◆ ReadAccessor() [1/2]. template<class T > . sofa::helper::ReadAccessor< core::objectmodel::Data< T > >::ReadAccessor ; (; const data_container_type & ; d). inline . ◆ ReadAccessor() [2/2]. template<class T > . sofa::helper::ReadAccessor< core::objectmodel::Data< T > >::ReadAccessor ; (; const data_container_type * ; d). inline . sofahelperReadAccessor< core::objectmodel::Data< T > >; Generated on Mon Nov 11 2024 03:26:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html:750,inherit,inherited,750,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::ReadAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::ReadAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > > Class Template Reference . #include <integer_id.h>. Inheritance diagram for sofa::helper::ReadAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >:. [legend]. Public Member Functions;  ReadAccessor (const container_type &c);  ;  Public Member Functions inherited from sofa::helper::ReadAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >;  ReadAccessorVectorId (const container_type &container);  ;  ~ReadAccessorVectorId ();  ; const container_type & ref () const;  ; bool empty () const;  ; Size size () const;  ; const_reference operator[] (Index i) const;  ; const_reference operator() (Index i) const;  ; const_iterator begin () const;  ; const_iterator end () const;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::ReadAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; const container_type & vref;  . Constructor details. ◆ ReadAccessor(). template<class T , class TIndex , bool CheckIndices, class MemoryManager > . sofa::helper::ReadAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >::ReadAccessor ; (; const container_type & ; c). inline . sofahelperReadAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >; Generated on Mon Nov 11 2024 03:29:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_00_01_memory_manager_01_4_01_4.html:590,inherit,inherited,590,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_00_01_memory_manager_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_00_01_memory_manager_01_4_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,﻿. SOFA API: sofa::helper::ReadAccessorVector< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::ReadAccessorVector< T > Class Template Reference . #include <ReadAccessorVector.h>. Inheritance diagram for sofa::helper::ReadAccessorVector< T >:. [legend]; Detailed Description; template<class T>; class sofa::helper::ReadAccessorVector< T >; ReadAccessor for wrapping around vector like object ////////////////////// ReadAccessor implementation class for vector types . Protected Attributes; const container_type * vref;  . Public Member Functions;  ReadAccessorVector (const container_type &container);  ; bool empty () const;  ; Size size () const;  ; const_reference operator[] (Size i) const;  ; const_iterator begin () const;  ; const_iterator end () const;  ;  operator const_container_type & () const;  ; const_container_type * operator-> () const;  ; const_container_type & operator* () const;  ; const_container_type & ref () const;  this duplicate operator* (remove ?) More...;  . Attribute details. ◆ vref. template<class T > . const container_type* sofa::helper::ReadAccessorVector< T >::vref. protected . Constructor details. ◆ ReadAccessorVector(). template<class T > . sofa::helper::ReadAccessorVector< T >::ReadAccessorVector ; (; const container_type & ; container). inline . Function details. ◆ begin(). template<class T > . const_iterator sofa::helper::ReadAccessorVector< T >::begin ; (; ); const. inline . ◆ empty(). template<class T > . bool sofa::helper::ReadAccessorVector< T >::empty ; (; ); const. inline . ◆ end(). template<class T > . const_iterator sofa::helper::ReadAccessorVector< T >::end ; (; ); const. inline . ◆ operator const_container_type &(). template<class T > . sofa::helper::ReadAccessorVector< T >::operator const_container_type & ; (; ); const. inline . ◆ operator*(). template<class T > . const_container_type& sofa:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_vector.html:322,Inherit,Inheritance,322,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_vector.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::ReadAccessorVectorId< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::ReadAccessorVectorId< T > Class Template Reference . #include <integer_id.h>; ReadAccessor implementation class for vector_id types. ; More... Inheritance diagram for sofa::helper::ReadAccessorVectorId< T >:. [legend]; Detailed Description; template<class T>; class sofa::helper::ReadAccessorVectorId< T >; ReadAccessor implementation class for vector_id types. . Protected Attributes; const container_type & vref;  . Public Member Functions;  ReadAccessorVectorId (const container_type &container);  ;  ~ReadAccessorVectorId ();  ; const container_type & ref () const;  ; bool empty () const;  ; Size size () const;  ; const_reference operator[] (Index i) const;  ; const_reference operator() (Index i) const;  ; const_iterator begin () const;  ; const_iterator end () const;  . Friends; std::ostream & operator<< (std::ostream &os, const ReadAccessorVectorId< T > &vec);  . Attribute details. ◆ vref. template<class T > . const container_type& sofa::helper::ReadAccessorVectorId< T >::vref. protected . Constructor details. ◆ ReadAccessorVectorId(). template<class T > . sofa::helper::ReadAccessorVectorId< T >::ReadAccessorVectorId ; (; const container_type & ; container). inline . ◆ ~ReadAccessorVectorId(). template<class T > . sofa::helper::ReadAccessorVectorId< T >::~ReadAccessorVectorId ; (; ). inline . Function details. ◆ begin(). template<class T > . const_iterator sofa::helper::ReadAccessorVectorId< T >::begin ; (; ); const. inline . ◆ empty(). template<class T > . bool sofa::helper::ReadAccessorVectorId< T >::empty ; (; ); const. inline . ◆ end(). template<class T > . const_iterator sofa::helper::ReadAccessorVectorId< T >::end ; (; ); const. inline . ◆ operator()(). template<class T > . const_reference sofa::helper::ReadAccesso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_vector_id.html:394,Inherit,Inheritance,394,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_vector_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_vector_id.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::Record Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::Record Class Reference . #include <AdvancedTimer.h>; Detailed Description; Advanced timer, meant to gather precise statistics for results in published papers. Not so advanced for now, but it will be...; Usage examples :; When all computations start (i.e., Simulation::step): AdvancedTimer::begin(""Animate"");; When all computations stop (i.e., Simulation::step): AdvancedTimer::end(""Animate"");; Using a local variable to automatically call end when current instruction block (i.e. method) ends : AdvancedTimer::TimerVar(""Animate"");; When a part of the computation starts: AdvancedTimer::stepBegin(""Collision"");; When a part of the computation stops: AdvancedTimer::stepEnd(""Collision"");; Both operations combined: AdvancedTimer::stepNext(""Collision"", ""Mechanical"");; Using a local variable to automatically call stepEnd when current instruction block (i.e. method) ends : AdvancedTimer::StepVar(""UpdateMapping"");; Specifying the object being processed: AdvancedTimer::StepVar(""Collision"", objPtr);; When a noteworthy milestone happens: AdvancedTimer::step(""Event1"");; When a noteworthy value must be stored: AdvancedTimer::valSet(""contacts"",nbContacts);; When a noteworthy value must be accumulated: AdvancedTimer::valAdd(""dofs"",mstate->getSize());; When reloading/resetting the simulation: AdvancedTimer::clear();; The produced stats will looks like:; ==== Animate ====; Trace of last iteration : 0 ms > begin Collision : var nbCM = 10 10 ms > begin BP 20 ms < end NP > begin NP 120 ms < end NP : var nbContacts = 100 > begin Response 150 ms < end Response < end Collision > begin Mechanical > begin CGSolve on Torus1 : var dofs += 300 ... 434 ms END; Steps Duration Statistics (in ms) : LEVEL START NUM MEAN MAX TOTAL ID 0 0 100 222.2 546.3 22220 TOTAL 1 0 1 80.5 120.7 80.5 Collision 2 0 1 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_record.html:617,variab,variable,617,api/master/sofa/html/classsofa_1_1helper_1_1_record.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_record.html,4,['variab'],['variable']
Modifiability,"﻿. SOFA API: sofa::helper::SingletonFnDispatcher< BaseClass, ResulT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::SingletonFnDispatcher< BaseClass, ResulT > Class Template Reference . #include <FnDispatcher.h>. Inheritance diagram for sofa::helper::SingletonFnDispatcher< BaseClass, ResulT >:. [legend]. Static Public Member Functions; static SingletonFnDispatcher< BaseClass, ResulT > * getInstance ();  ;  Static Public Member Functions inherited from sofa::helper::BasicDispatcher< BaseClass, ResulT >; static ResulT ignoreFn (BaseClass &arg1, BaseClass &arg2);  . Protected Member Functions;  SingletonFnDispatcher ();  ;  Protected Member Functions inherited from sofa::helper::BasicDispatcher< BaseClass, ResulT >; virtual ~BasicDispatcher ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::BasicDispatcher< BaseClass, ResulT >; MapType callBackMap;  ;  Public Member Functions inherited from sofa::helper::FnDispatcher< BaseClass, ResulT >; template<class ConcreteClass1 , class ConcreteClass2 , ResulT(*)(ConcreteClass1 &, ConcreteClass2 &) F, bool symmetric> ; void add ();  ; template<class ConcreteClass1 , class ConcreteClass2 , bool symmetric> ; void ignore ();  ;  Public Member Functions inherited from sofa::helper::BasicDispatcher< BaseClass, ResulT >; void add (const std::type_info &class1, const std::type_info &class2, F fun);  ; void ignore (const std::type_info &class1, const std::type_info &class2);  ; void ignore ();  ; virtual ResulT defaultFn (BaseClass &arg1, BaseClass &arg2);  ; ResulT go (BaseClass &arg1, BaseClass &arg2);  ; bool isSupported (BaseClass &arg1, BaseClass &arg2);  Return true if a pair of argument correspond to a callback function (different than ignoreFn) More...;  . Constructor details. ◆ SingletonFnDispatcher(). template<class BaseClass , typename Resu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_singleton_fn_dispatcher.html:595,inherit,inherited,595,api/master/sofa/html/classsofa_1_1helper_1_1_singleton_fn_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_singleton_fn_dispatcher.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::SofaViewerCreator< RealObject > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::SofaViewerCreator< RealObject > Class Template Reference . #include <ViewerFactory.h>. Inheritance diagram for sofa::helper::SofaViewerCreator< RealObject >:. [legend]. Public Member Functions;  SofaViewerCreator (Key key, bool multi=false);  ; ObjectPtr createInstance (ArgumentRef arg);  ; const char * viewerName ();  ; const char * acceleratedName ();  ;  Public Member Functions inherited from sofa::helper::Creator< SofaViewerFactory, RealObject >;  Creator (Key key, bool multi=false);  ; ObjectPtr createInstance (Argument arg);  ; const std::type_info & type ();  ; void registerInFactory ();  ; const Key & getKey () const;  ;  Public Member Functions inherited from sofa::helper::BaseCreator< Object, Argument, ObjectPtr >; virtual ~BaseCreator ();  ; virtual ObjectPtr createInstance (Argument arg)=0;  . Constructor details. ◆ SofaViewerCreator(). template<class RealObject > . sofa::helper::SofaViewerCreator< RealObject >::SofaViewerCreator ; (; Key ; key, . bool ; multi = false . ). inline . Function details. ◆ acceleratedName(). template<class RealObject > . const char* sofa::helper::SofaViewerCreator< RealObject >::acceleratedName ; (; ). inline . ◆ createInstance(). template<class RealObject > . ObjectPtr sofa::helper::SofaViewerCreator< RealObject >::createInstance ; (; ArgumentRef ; arg). inline . ◆ viewerName(). template<class RealObject > . const char* sofa::helper::SofaViewerCreator< RealObject >::viewerName ; (; ). inline . sofahelperSofaViewerCreator; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_creator.html:606,inherit,inherited,606,api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_creator.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::SofaViewerFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::SofaViewerFactory Class Reference . #include <ViewerFactory.h>. Inheritance diagram for sofa::helper::SofaViewerFactory:. [legend]. Public Member Functions; const char * getViewerName (Key key);  ; const char * getAcceleratedViewerName (Key key);  ;  Public Member Functions inherited from sofa::helper::Factory< std::string, sofa::gui::common::BaseViewer, sofa::gui::common::BaseViewerArgument & >; bool registerCreator (Key key, Creator *creator, bool multi=false);  ; ObjectPtr createObject (Key key, Argument arg=NoArgument());  ; ObjectPtr createObject (Key key, Argument arg);  ; ObjectPtr createAnyObject (Argument arg);  ; void uniqueKeys (OutIterator out);  ; bool hasKey (Key key);  ; bool duplicateEntry (Key existing, Key duplicate);  ; bool resetEntry (Key existingKey);  ; iterator begin ();  ; const_iterator begin () const;  ; iterator end ();  ; const_iterator end () const;  . Static Public Member Functions; static SofaViewerFactory * getInstance ();  ; static Object * CreateObject (Key key, ArgumentRef arg);  ; static Object * CreateAnyObject (ArgumentRef arg);  ; static bool HasKey (Key key);  ; static const char * ViewerName (Key key);  ; static const char * AcceleratedName (Key key);  ;  Static Public Member Functions inherited from sofa::helper::Factory< std::string, sofa::gui::common::BaseViewer, sofa::gui::common::BaseViewerArgument & >; static Factory< Key, Object, Argument, ObjectPtr > * getInstance ();  ; static ObjectPtr CreateObject (Key key, Argument arg);  ; static ObjectPtr CreateAnyObject (Argument arg);  ; static bool HasKey (Key key);  ; static bool DuplicateEntry (Key existing, Key duplicate);  ; static bool ResetEntry (Key existing);  . Additional Inherited Members;  Protected Attributes inherited from sofa::helpe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_factory.html:508,inherit,inherited,508,api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_sofa_viewer_factory.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::TriangleOctreeRoot Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::TriangleOctreeRoot Class Reference . #include <TriangleOctree.h>. Inheritance diagram for sofa::helper::TriangleOctreeRoot:. [legend]. Public Attributes; const SeqTriangles * octreeTriangles;  the triangles used as input to construct the octree More...;  ; const VecCoord * octreePos;  the positions of vertices used as input to construct the octree More...;  ; TriangleOctree * octreeRoot;  the first node of the octree More...;  ; int cubeSize;  the size of the octree cube More...;  . Static Public Attributes; static constexpr int CUBE_SIZE = 800;  . Public Member Functions;  TriangleOctreeRoot ();  ;  ~TriangleOctreeRoot ();  ; void buildOctree ();  ; void buildOctree (const SeqTriangles *triangles, const VecCoord *pos);  . Protected Member Functions; int fillOctree (int t, int d=0, type::Vec3 v={ 0_sreal, 0_sreal, 0_sreal });  used to add a triangle to the octree More...;  ; void calcTriangleAABB (int t, SReal *bb, SReal &size);  used to compute the Bounding Box for each triangle More...;  . Attribute details. ◆ CUBE_SIZE. constexpr int sofa::helper::TriangleOctreeRoot::CUBE_SIZE = 800. staticconstexpr . ◆ cubeSize. int sofa::helper::TriangleOctreeRoot::cubeSize. the size of the octree cube . ◆ octreePos. const VecCoord* sofa::helper::TriangleOctreeRoot::octreePos. the positions of vertices used as input to construct the octree . ◆ octreeRoot. TriangleOctree* sofa::helper::TriangleOctreeRoot::octreeRoot. the first node of the octree . ◆ octreeTriangles. const SeqTriangles* sofa::helper::TriangleOctreeRoot::octreeTriangles. the triangles used as input to construct the octree . Constructor details. ◆ TriangleOctreeRoot(). sofa::helper::TriangleOctreeRoot::TriangleOctreeRoot ; (; ). ◆ ~TriangleOc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_triangle_octree_root.html:345,Inherit,Inheritance,345,api/master/sofa/html/classsofa_1_1helper_1_1_triangle_octree_root.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_triangle_octree_root.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::WriteAccessor< T, Enable > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::WriteAccessor< T, Enable > Class Template Reference . #include <WriteAccessor.h>. Inheritance diagram for sofa::helper::WriteAccessor< T, Enable >:. [legend]; Detailed Description; template<class T, class Enable = void>; class sofa::helper::WriteAccessor< T, Enable >; A WriteAccessor is a proxy class, holding a reference to a given container and providing access to its data, using an unified interface (similar to std::vector), hiding API differences within some containers.; Other advantadges of using a WriteAccessor are :. It can be faster that the default methods and operators of the container, as verifications and changes notifications can be handled in the accessor's constructor and destructor instead of at each item access.; Accesses can be logged for debugging or task dependencies analysis. The default implementation provides only minimal set of methods and operators, sufficient for scalar types but which should be overloaded for more complex types. Various template specializations are typically used, especially for core::objectmodel::Data<T> . Protected Attributes; container_type * vref;  . Public Member Functions;  WriteAccessor (container_type &container);  ; const_reference ref () const;  ; reference wref ();  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  ;  operator reference ();  ; pointer operator-> ();  ; reference operator* ();  ; template<class T2 > ; void operator= (const T2 &v);  . Attribute details. ◆ vref. template<class T , class Enable = void> . container_type* sofa::helper::WriteAccessor< T, Enable >::vref. protected . Constructor details. ◆ WriteAccessor(). template<class T , class Enable = void> . sofa::helper::WriteAccessor< T, Enable >:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor.html:323,Inherit,Inheritance,323,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference . #include <WriteAccessor.h>. Inheritance diagram for sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >:. [legend]. Public Member Functions;  WriteAccessor (container_type &c);  ;  Public Member Functions inherited from sofa::helper::WriteAccessorVector< VectorLikeType >;  WriteAccessorVector (container_type &container);  ; bool empty () const;  ; Size size () const;  ; void reserve (Size s);  ; reference operator[] (Size pos);  ; const_reference operator[] (Size pos) const;  ; reference front ();  ; const_reference front () const;  ; reference back ();  ; const_reference back () const;  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s);  ; iterator insert (const_iterator pos, const VectorLikeType &value);  ; iterator erase (iterator pos);  ; iterator erase (const_iterator pos);  ; void push_back (const value_type &v);  ; reference emplace_back (Args &&... args);  ; void pop_back ();  ;  operator container_type ();  ; container_type * operator-> ();  ; const_container_type * operator-> () const;  ; container_type & operator* ();  ; const_container_type & operator* () const;  ; container_type & wref ();  ;  operator const_container_type () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::WriteAccessorVector< VectorLikeType >; container_type * vref;  . Constructo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html:459,Inherit,Inheritance,459,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::WriteAccessor< core::objectmodel::Data< T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::WriteAccessor< core::objectmodel::Data< T > > Class Template Reference . #include <Data.h>. Inheritance diagram for sofa::helper::WriteAccessor< core::objectmodel::Data< T > >:. [legend]; Detailed Description; template<class T>; class sofa::helper::WriteAccessor< core::objectmodel::Data< T > >; Read/Write Accessor. The Data is updated before being accessible. This means an expensive chain of Data link and Engine updates can be called For a pure write only Accessor, prefer WriteOnlyAccessor< core::objectmodel::Data<T> > Warningthe Data is updated (if needed) only by the Accessor constructor . Protected Attributes; data_container_type & data;  ;  Protected Attributes inherited from sofa::helper::WriteAccessor< T, Enable >; container_type * vref;  . Public Member Functions;  WriteAccessor (const WriteAccessor &)=delete;  ; WriteAccessor & operator= (const WriteAccessor &)=delete;  ;  WriteAccessor (data_container_type &d);  ;  WriteAccessor (data_container_type *d);  ;  ~WriteAccessor ();  ;  Public Member Functions inherited from sofa::helper::WriteAccessor< T, Enable >;  WriteAccessor (container_type &container);  ; const_reference ref () const;  ; reference wref ();  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  ;  operator reference ();  ; pointer operator-> ();  ; reference operator* ();  ; template<class T2 > ; void operator= (const T2 &v);  . Protected Member Functions;  WriteAccessor (container_type *c, data_container_type &d);  . Attribute details. ◆ data. template<class T > . data_container_type& sofa::helper::WriteAccessor< core::objectmodel::Data< T > >::data. protected . Constructor details. ◆ WriteAcces",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html:964,inherit,inherited,964,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > > Class Template Reference . #include <integer_id.h>. Inheritance diagram for sofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >:. [legend]. Public Member Functions;  WriteAccessor (container_type &c);  ;  Public Member Functions inherited from sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >;  WriteAccessorVectorId (container_type &container);  ;  ~WriteAccessorVectorId ();  ; const container_type & ref () const;  ; container_type & wref ();  ; bool empty () const;  ; Size size () const;  ; const_reference operator[] (Index i) const;  ; reference operator[] (Index i);  ; const_reference operator() (Index i) const;  ; reference operator() (Index i);  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s, bool=true);  ; void reserve (Size s);  ; Index push_back (const_reference v);  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; container_type & vref;  . Constructor details. ◆ WriteAccessor(). template<class T , class TIndex , bool CheckIndices, class MemoryManager > . sofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >::WriteAccessor ; (; container_type & ; c). inline . sofahelperWriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >; Generated on Mon Nov 11 2024 03:30:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_00_01_memory_manager_01_4_01_4.html:588,inherit,inherited,588,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_00_01_memory_manager_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_00_01_memory_manager_01_4_01_4.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::WriteAccessorVector< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::WriteAccessorVector< T > Class Template Reference . #include <WriteAccessorVector.h>; WriteAccessor implementation class for vector types. ; More... Inheritance diagram for sofa::helper::WriteAccessorVector< T >:. [legend]; Detailed Description; template<class T>; class sofa::helper::WriteAccessorVector< T >; WriteAccessor implementation class for vector types. . Protected Attributes; container_type * vref;  . Public Member Functions;  WriteAccessorVector (container_type &container);  ; bool empty () const;  ; Size size () const;  ; void reserve (Size s);  ; reference operator[] (Size pos);  ; const_reference operator[] (Size pos) const;  ; reference front ();  ; const_reference front () const;  ; reference back ();  ; const_reference back () const;  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s);  ; iterator insert (const_iterator pos, const T &value);  ; iterator erase (iterator pos);  ; iterator erase (const_iterator pos);  ; void push_back (const value_type &v);  ; template<class... Args> ; reference emplace_back (Args &&... args);  ; void pop_back ();  ;  operator container_type ();  ; container_type * operator-> ();  ; container_type & operator* ();  ; container_type & wref ();  ;  operator const_container_type () const;  ; const_container_type * operator-> () const;  ; const_container_type & operator* () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Attribute details. ◆ vref. template<class T > . container_type* sofa::helper::WriteAccessorVector< T >::vref. protected . Constructor details. ◆ WriteAccessorVector(). template<class T > . sofa::helper::WriteAccessorVector< T >::WriteAcce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html:388,Inherit,Inheritance,388,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::WriteAccessorVectorId< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::WriteAccessorVectorId< T > Class Template Reference . #include <integer_id.h>; WriteAccessor implementation class for vector_id types. ; More... Inheritance diagram for sofa::helper::WriteAccessorVectorId< T >:. [legend]; Detailed Description; template<class T>; class sofa::helper::WriteAccessorVectorId< T >; WriteAccessor implementation class for vector_id types. . Protected Attributes; container_type & vref;  . Public Member Functions;  WriteAccessorVectorId (container_type &container);  ;  ~WriteAccessorVectorId ();  ; const container_type & ref () const;  ; container_type & wref ();  ; bool empty () const;  ; Size size () const;  ; const_reference operator[] (Index i) const;  ; const_reference operator() (Index i) const;  ; reference operator[] (Index i);  ; reference operator() (Index i);  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s, bool=true);  ; void reserve (Size s);  ; Index push_back (const_reference v);  . Friends; std::ostream & operator<< (std::ostream &os, const WriteAccessorVectorId< T > &vec);  ; std::istream & operator>> (std::istream &in, WriteAccessorVectorId< T > &vec);  . Attribute details. ◆ vref. template<class T > . container_type& sofa::helper::WriteAccessorVectorId< T >::vref. protected . Constructor details. ◆ WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::WriteAccessorVectorId ; (; container_type & ; container). inline . ◆ ~WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::~WriteAccessorVectorId ; (; ). inline . Function details. ◆ begin() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVectorId<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html:397,Inherit,Inheritance,397,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::WriteOnlyAccessor< T, Enable > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::WriteOnlyAccessor< T, Enable > Class Template Reference . #include <WriteOnlyAccessor.h>. Inheritance diagram for sofa::helper::WriteOnlyAccessor< T, Enable >:. [legend]; Detailed Description; template<class T, class Enable = void>; class sofa::helper::WriteOnlyAccessor< T, Enable >; Identical to WriteAccessor for default implementation, but different for some template specializations such as core::objectmodel::Data<T> . Public Member Functions;  WriteOnlyAccessor (container_type &container);  ;  Public Member Functions inherited from sofa::helper::WriteAccessor< T, void >;  WriteAccessor (container_type &container);  ; const_reference ref () const;  ; reference wref ();  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; pointer operator-> ();  ; const_reference operator* () const;  ; reference operator* ();  ;  operator reference ();  ; void operator= (const T2 &v);  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::WriteAccessor< T, void >; container_type * vref;  . Constructor details. ◆ WriteOnlyAccessor(). template<class T , class Enable = void> . sofa::helper::WriteOnlyAccessor< T, Enable >::WriteOnlyAccessor ; (; container_type & ; container). inlineexplicit . sofahelperWriteOnlyAccessor; Generated on Mon Nov 11 2024 03:27:31 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor.html:747,inherit,inherited,747,api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference . #include <WriteOnlyAccessor.h>. Inheritance diagram for sofa::helper::WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >:. [legend]. Public Member Functions;  WriteOnlyAccessor (container_type &c);  ;  Public Member Functions inherited from sofa::helper::WriteAccessorVector< VectorLikeType >;  WriteAccessorVector (container_type &container);  ; bool empty () const;  ; Size size () const;  ; void reserve (Size s);  ; reference operator[] (Size pos);  ; const_reference operator[] (Size pos) const;  ; reference front ();  ; const_reference front () const;  ; reference back ();  ; const_reference back () const;  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s);  ; iterator insert (const_iterator pos, const VectorLikeType &value);  ; iterator erase (iterator pos);  ; iterator erase (const_iterator pos);  ; void push_back (const value_type &v);  ; reference emplace_back (Args &&... args);  ; void pop_back ();  ;  operator container_type ();  ; container_type * operator-> ();  ; const_container_type * operator-> () const;  ; container_type & operator* ();  ; const_container_type & operator* () const;  ; container_type & wref ();  ;  operator const_container_type () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::WriteAccessorVector< VectorLikeType >; container_type *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_0182c0cdde284d988a289939f4832128c2.html:471,Inherit,Inheritance,471,api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_0182c0cdde284d988a289939f4832128c2.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_0182c0cdde284d988a289939f4832128c2.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::WriteOnlyAccessor< core::objectmodel::Data< T > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::WriteOnlyAccessor< core::objectmodel::Data< T > > Class Template Reference . #include <Data.h>; The WriteOnlyAccessor provides an access to the Data without triggering an engine update. This should be the preferred writeAccessor for most of the cases as it avoids unnecessary Data updates. ; More... Inheritance diagram for sofa::helper::WriteOnlyAccessor< core::objectmodel::Data< T > >:. [legend]; Detailed Description; template<class T>; class sofa::helper::WriteOnlyAccessor< core::objectmodel::Data< T > >; The WriteOnlyAccessor provides an access to the Data without triggering an engine update. This should be the preferred writeAccessor for most of the cases as it avoids unnecessary Data updates. ; Warningread access to the Data is NOT up-to-date . Public Member Functions;  WriteOnlyAccessor (const WriteOnlyAccessor &)=delete;  ; WriteOnlyAccessor & operator= (const WriteOnlyAccessor &)=delete;  ;  WriteOnlyAccessor (data_container_type &d);  ;  WriteOnlyAccessor (data_container_type *d);  ;  Public Member Functions inherited from sofa::helper::WriteAccessor< core::objectmodel::Data< T > >;  WriteAccessor (const WriteAccessor &)=delete;  ; WriteAccessor & operator= (const WriteAccessor &)=delete;  ;  WriteAccessor (data_container_type &d);  ;  WriteAccessor (data_container_type *d);  ;  ~WriteAccessor ();  ;  Public Member Functions inherited from sofa::helper::WriteAccessor< T, Enable >;  WriteAccessor (container_type &container);  ; const_reference ref () const;  ; reference wref ();  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  ;  operator reference ();  ; pointer operator-> ();  ; reference operator* ();  ; template<class T2 > ; void operator= (const T2 &v);",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html:540,Inherit,Inheritance,540,api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01core_1_1objectmodel_1_1_data_3_01_t_01_4_01_4.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::io Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::helper::io Namespace Reference . This allow MeshTrian to interact with the messaging system. ; More... Classes; class  BaseFileAccessCreator;  ; class  FileAccessCreator;  ; class  BaseFileAccess;  ; class  File;  ; class  FileAccess;  ; class  Image;  ; struct  DDSHeader;  ; class  ImageDDS;  ; class  ImageRAW;  ; class  Mesh;  ; class  MeshGmsh;  ; class  MeshOBJ;  ; class  MeshTopologyLoader;  ; class  SphereLoaderDataHook;  Inherit this class to load data from sphere description. More...;  ; class  SphereLoader;  ; class  STBImageCreators;  ; class  STBImage;  ; class  TriangleLoader;  ; class  XspLoaderDataHook;  Inherit this class to load data from a Xsp file. More...;  ; class  XspLoader;  . Variables; Creator< Image::FactoryImage, ImageDDS > ImageDDSClass (""dds"");  ; Creator< Mesh::FactoryMesh, MeshGmsh > MeshGmshClass (""gmsh"");  ; Creator< Mesh::FactoryMesh, MeshOBJ > MeshOBJClass (""obj"");  ; Creator< Mesh::FactoryMesh, MeshOBJ > MeshOBJClass2 (""OBJ"");  ; const auto stbImageCreation = STBImageCreators();  . Detailed Description; This allow MeshTrian to interact with the messaging system. ; For SOFA_HELPER_API.; This register the TriangleLoader object to the logging system so that we can use msg_*(this); For size_t For std::string ; Variable Documentation. ◆ ImageDDSClass. Creator<Image::FactoryImage,ImageDDS> sofa::helper::io::ImageDDSClass(""dds"") ; (; ""dds"" ; ). ◆ MeshGmshClass. Creator<Mesh::FactoryMesh, MeshGmsh> sofa::helper::io::MeshGmshClass(""gmsh"") ; (; ""gmsh"" ; ). ◆ MeshOBJClass. Creator<Mesh::FactoryMesh,MeshOBJ> sofa::helper::io::MeshOBJClass(""obj"") ; (; ""obj"" ; ). ◆ MeshOBJClass2. Creator<Mesh::FactoryMesh, MeshOBJ> sofa::helper::io::MeshOBJClass2(""OBJ"") ; (; ""OBJ"" ; ). ◆ stbImageCreation. const auto sofa::helper::io::stbImageCreation = STBImageCreators(). sofahelperio; Generated on Mon Nov 11 20",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1io.html:136,Variab,Variables,136,api/master/sofa/html/namespacesofa_1_1helper_1_1io.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1io.html,3,"['Inherit', 'Variab']","['Inherit', 'Variables']"
Modifiability,"﻿. SOFA API: sofa::helper::io::BaseFileAccess Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::io::BaseFileAccess Class Referenceabstract . #include <BaseFileAccess.h>. Inheritance diagram for sofa::helper::io::BaseFileAccess:. [legend]. Public Member Functions; virtual ~BaseFileAccess ();  ; virtual bool open (const std::string &filename, std::ios_base::openmode openMode)=0;  ; virtual void close ()=0;  ; virtual std::streambuf * streambuf () const =0;  ; virtual std::string readAll ()=0;  ; virtual void write (const std::string &data)=0;  . Static Public Member Functions; static void SetDefaultCreator ();  ; static void SetCreator (BaseFileAccessCreator *baseFileAccessCreator);  ; template<class T > ; static void SetCreator ();  ; static BaseFileAccess * Create ();  . Protected Member Functions;  BaseFileAccess ();  . Constructor details. ◆ BaseFileAccess(). sofa::helper::io::BaseFileAccess::BaseFileAccess ; (; ). protected . ◆ ~BaseFileAccess(). sofa::helper::io::BaseFileAccess::~BaseFileAccess ; (; ). virtual . Function details. ◆ close(). virtual void sofa::helper::io::BaseFileAccess::close ; (; ). pure virtual . Implemented in sofa::helper::io::FileAccess. ◆ Create(). BaseFileAccess * sofa::helper::io::BaseFileAccess::Create ; (; ). static . ◆ open(). virtual bool sofa::helper::io::BaseFileAccess::open ; (; const std::string & ; filename, . std::ios_base::openmode ; openMode . ). pure virtual . Implemented in sofa::helper::io::FileAccess. ◆ readAll(). virtual std::string sofa::helper::io::BaseFileAccess::readAll ; (; ). pure virtual . Implemented in sofa::helper::io::FileAccess. ◆ SetCreator() [1/2]. template<class T > . void sofa::helper::io::BaseFileAccess::SetCreator. inlinestatic . ◆ SetCreator() [2/2]. void sofa::helper::io::BaseFileAccess::SetCreator ; (; BaseFileAccessCreator * ; baseFile",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access.html:338,Inherit,Inheritance,338,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::helper::io::BaseFileAccessCreator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::BaseFileAccessCreator Class Referenceabstract . #include <BaseFileAccess.h>. Inheritance diagram for sofa::helper::io::BaseFileAccessCreator:. [legend]. Public Member Functions; virtual ~BaseFileAccessCreator ();  ; virtual BaseFileAccess * create () const =0;  . Constructor details. ◆ ~BaseFileAccessCreator(). virtual sofa::helper::io::BaseFileAccessCreator::~BaseFileAccessCreator ; (; ). inlinevirtual . Function details. ◆ create(). virtual BaseFileAccess* sofa::helper::io::BaseFileAccessCreator::create ; (; ); const. pure virtual . Implemented in sofa::helper::io::FileAccessCreator< T >. sofahelperioBaseFileAccessCreator; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access_creator.html:288,Inherit,Inheritance,288,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_base_file_access_creator.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::io::FileAccess Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::helper::io::FileAccess Class Reference . #include <FileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccess:. [legend]. Public Member Functions;  ~FileAccess () override;  ; virtual bool open (const std::string &filename, std::ios_base::openmode openMode) override;  ; void close () override;  ; virtual std::streambuf * streambuf () const override;  ; virtual std::string readAll () override;  ; virtual void write (const std::string &data) override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccess; virtual ~BaseFileAccess ();  . Protected Member Functions;  FileAccess ();  ;  Protected Member Functions inherited from sofa::helper::io::BaseFileAccess;  BaseFileAccess ();  . Friends; class FileAccessCreator< FileAccess >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::helper::io::BaseFileAccess; static void SetDefaultCreator ();  ; static void SetCreator (BaseFileAccessCreator *baseFileAccessCreator);  ; template<class T > ; static void SetCreator ();  ; static BaseFileAccess * Create ();  . Constructor details. ◆ FileAccess(). sofa::helper::io::FileAccess::FileAccess ; (; ). protected . ◆ ~FileAccess(). sofa::helper::io::FileAccess::~FileAccess ; (; ). override . Function details. ◆ close(). void sofa::helper::io::FileAccess::close ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ open(). bool sofa::helper::io::FileAccess::open ; (; const std::string & ; filename, . std::ios_base::openmode ; openMode . ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ readAll(). std::string sofa::helper::io::FileAccess::readAll ; (; ). overridevirtual . Implements sofa::helper::io::BaseFileAccess. ◆ streambuf(). std::streambuf * sofa::helper::io:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html:720,inherit,inherited,720,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::helper::io::FileAccessCreator< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::FileAccessCreator< T > Class Template Reference . #include <BaseFileAccess.h>. Inheritance diagram for sofa::helper::io::FileAccessCreator< T >:. [legend]. Public Member Functions; T * create () const override;  ;  Public Member Functions inherited from sofa::helper::io::BaseFileAccessCreator; virtual ~BaseFileAccessCreator ();  . Function details. ◆ create(). template<class T > . T* sofa::helper::io::FileAccessCreator< T >::create ; (; ); const. inlineoverridevirtual . Implements sofa::helper::io::BaseFileAccessCreator. sofahelperioFileAccessCreator; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator.html:460,inherit,inherited,460,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_file_access_creator.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::io::Image Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Image Class Reference . #include <Image.h>. Inheritance diagram for sofa::helper::io::Image:. [legend]. Static Public Attributes; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  . Protected Attributes; unsigned char m_bLoaded;  . Public Member Functions;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  ; virtual bool load (s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:325,Inherit,Inheritance,325,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::io::ImageDDS Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageDDS Class Reference . #include <ImageDDS.h>. Inheritance diagram for sofa::helper::io::ImageDDS:. [legend]. Public Member Functions;  ImageDDS ();  ;  ImageDDS (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:248,Inherit,Inheritance,248,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::io::ImageRAW Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageRAW Class Reference . #include <ImageRAW.h>. Inheritance diagram for sofa::helper::io::ImageRAW:. [legend]. Public Member Functions;  ImageRAW ();  ;  ~ImageRAW () override;  ; void initHeader (unsigned hsize);  ; unsigned getHeaderSize () const;  ; unsigned char * getHeader ();  ; const unsigned char * getHeader () const;  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html:248,Inherit,Inheritance,248,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_r_a_w.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:315,Inherit,Inheritance,315,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::io::MeshGmsh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::io::MeshGmsh Class Reference . #include <MeshGmsh.h>. Inheritance diagram for sofa::helper::io::MeshGmsh:. [legend]. Public Member Functions;  MeshGmsh (const std::string &filename);  ; void init (std::string filename);  ;  Public Member Functions inherited from sofa::helper::io::Mesh;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; sofa::type::vector< type::Vec3 > & getVertices ();  ; const sofa::type::vector< type::Vec3 > & getVertices () const;  ; sofa::type::vector< Edge > & getEdges ();  ; const sofa::type::vector< Edge > & getEdges () const;  ; sofa::type::vector< Triangle > & getTriangles ();  ; const sofa::type::vector< Triangle > & getTriangles () const;  ; sofa::type::vector< Quad > & getQuads ();  ; const sofa::type::vector< Quad > & getQuads () const;  ; sofa::type::vector< Tetrahedron > & getTetrahedra ();  ; const sofa::type::vector< Tetrahedron > & getTetrahedra () const;  ; sofa::type::vector< Hexahedron > & getHexahedra ();  ; const sofa::type::vector< Hexahedron > & getHexahedra () const;  ; sofa::type::vector< type::Vec3 > & getTexCoords ();  ; const sofa::type::vector< type::Vec3 > & getTexCoords () const;  ; sofa::type::vector< type::Vec3 > & getNormals ();  ; const sofa::type::vector< type::Vec3 > & getNormals () const;  ; sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets ();  ; const sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets () const;  ; const sofa::type::vector< PrimitiveGroup > & getEdgesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getTrianglesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getQuadsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPolygonsGroups () const;  ; const sofa::type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:278,Inherit,Inheritance,278,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::io::MeshOBJ Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::io::MeshOBJ Class Reference . #include <MeshOBJ.h>. Inheritance diagram for sofa::helper::io::MeshOBJ:. [legend]. Public Member Functions;  MeshOBJ (const std::string &filename);  ; void init (std::string filename);  ;  Public Member Functions inherited from sofa::helper::io::Mesh;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; sofa::type::vector< type::Vec3 > & getVertices ();  ; const sofa::type::vector< type::Vec3 > & getVertices () const;  ; sofa::type::vector< Edge > & getEdges ();  ; const sofa::type::vector< Edge > & getEdges () const;  ; sofa::type::vector< Triangle > & getTriangles ();  ; const sofa::type::vector< Triangle > & getTriangles () const;  ; sofa::type::vector< Quad > & getQuads ();  ; const sofa::type::vector< Quad > & getQuads () const;  ; sofa::type::vector< Tetrahedron > & getTetrahedra ();  ; const sofa::type::vector< Tetrahedron > & getTetrahedra () const;  ; sofa::type::vector< Hexahedron > & getHexahedra ();  ; const sofa::type::vector< Hexahedron > & getHexahedra () const;  ; sofa::type::vector< type::Vec3 > & getTexCoords ();  ; const sofa::type::vector< type::Vec3 > & getTexCoords () const;  ; sofa::type::vector< type::Vec3 > & getNormals ();  ; const sofa::type::vector< type::Vec3 > & getNormals () const;  ; sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets ();  ; const sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets () const;  ; const sofa::type::vector< PrimitiveGroup > & getEdgesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getTrianglesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getQuadsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPolygonsGroups () const;  ; const sofa::type::vecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:275,Inherit,Inheritance,275,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::io::MeshTopologyLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::MeshTopologyLoader Class Reference . #include <MeshTopologyLoader.h>. Inheritance diagram for sofa::helper::io::MeshTopologyLoader:. [legend]. Public Member Functions;  MeshTopologyLoader ();  ; virtual ~MeshTopologyLoader ();  ; bool load (const char *filename);  ; virtual void setNbPoints (Index);  ; virtual void setNbLines (Index);  ; virtual void setNbEdges (Index);  ; virtual void setNbTriangles (Index);  ; virtual void setNbQuads (Index);  ; virtual void setNbTetrahedra (Index);  ; virtual void setNbCubes (Index);  ; virtual void addPoint (SReal, SReal, SReal);  ; virtual void addLine (Index, Index);  ; virtual void addTriangle (Index, Index, Index);  ; virtual void addQuad (Index, Index, Index, Index);  ; virtual void addTetra (Index, Index, Index, Index);  ; virtual void addCube (Index, Index, Index, Index, Index, Index, Index, Index);  . Constructor details. ◆ MeshTopologyLoader(). sofa::helper::io::MeshTopologyLoader::MeshTopologyLoader ; (; ). inline . ◆ ~MeshTopologyLoader(). virtual sofa::helper::io::MeshTopologyLoader::~MeshTopologyLoader ; (; ). inlinevirtual . Function details. ◆ addCube(). virtual void sofa::helper::io::MeshTopologyLoader::addCube ; (; Index ; , . Index ; , . Index ; , . Index ; , . Index ; , . Index ; , . Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addLine(). virtual void sofa::helper::io::MeshTopologyLoader::addLine ; (; Index ; , . Index ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addPoint(). virtual void sofa::helper::io::MeshTopologyLoader::addPoint ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Reimplemented in sofa::core::topology::DefaultMeshTopologyLoader. ◆ addQuad(). virtual void sofa::helper::i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html:278,Inherit,Inheritance,278,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_topology_loader.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::io::STBImage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::STBImage Class Reference . #include <STBImage.h>. Inheritance diagram for sofa::helper::io::STBImage:. [legend]. Public Member Functions;  STBImage ()=default;  ;  STBImage (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Memb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:282,Inherit,Inheritance,282,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::io::SphereLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::SphereLoaderDataHook Class Reference . #include <SphereLoader.h>; Inherit this class to load data from sphere description. ; More... Inheritance diagram for sofa::helper::io::SphereLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from sphere description. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the SphereLoader events. See alsoSphereLoader for an example of use. . Public Member Functions; virtual ~SphereLoaderDataHook ();  ; virtual void finalizeLoading (const bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumSpheres (const int n);  Called by the XspLoader to specify before loading the number of spheres. More...;  ; virtual void addSphere (const SReal, const SReal, const SReal, const SReal);  Called by the Loader to specify the number of Spheres before actual loading. More...;  . Constructor details. ◆ ~SphereLoaderDataHook(). virtual sofa::helper::io::SphereLoaderDataHook::~SphereLoaderDataHook ; (; ). inlinevirtual . Function details. ◆ addSphere(). virtual void sofa::helper::io::SphereLoaderDataHook::addSphere ; (; const ; SReal, . const ; SReal, . const ; SReal, . const ; SReal . ). inlinevirtual . Called by the Loader to specify the number of Spheres before actual loading. ; Parameters. px,py,pz3D position of the center. ; rthe radius of the sphere. . Reimplemented in sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::SphereLoaderDataHook::finalizeLoading ; (; const bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html:276,Inherit,Inherit,276,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_sphere_loader_data_hook.html,4,['Inherit'],"['Inherit', 'Inheritance']"
Modifiability,"﻿. SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::XspLoaderDataHook Class Reference . #include <XspLoader.h>; Inherit this class to load data from a Xsp file. ; More... Inheritance diagram for sofa::helper::io::XspLoaderDataHook:. [legend]; Detailed Description; Inherit this class to load data from a Xsp file. ; To connect client-code data structure with the XspLoader you need to Inherit from this class and override the virtual methods to you fill your structures from the XspLoader events.; Each overridable method is connected to the reading of a given ""token"" in the Xsp file format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:267,Inherit,Inherit,267,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,4,['Inherit'],"['Inherit', 'Inheritance']"
Modifiability,"﻿. SOFA API: sofa::helper::lifecycle Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::helper::lifecycle Namespace Reference . Classes; class  ComponentChange;  ; class  Deprecated;  ; class  Pluginized;  ; class  Removed;  ; class  Moved;  ; class  Renamed;  ; class  Dealiased;  . Variables; const std::map< std::string, Deprecated, std::less<> > deprecatedComponents;  ; const std::map< std::string, ComponentChange, std::less<> > movedComponents;  ; const std::map< std::string, ComponentChange, std::less<> > uncreatableComponents;  ; const std::map< std::string, Renamed, std::less<> > renamedComponents;  ; const std::map< std::string, Dealiased, std::less<> > dealiasedComponents;  . Variable Documentation. ◆ dealiasedComponents. SOFA_HELPER_API const std::map< std::string, Dealiased, std::less<> > sofa::helper::lifecycle::dealiasedComponents. ◆ deprecatedComponents. SOFA_HELPER_API const std::map< std::string, Deprecated, std::less<> > sofa::helper::lifecycle::deprecatedComponents. Initial value:= {; {""RayTraceDetection"", Deprecated(""v21.06"", ""v21.12"")},; {""BruteForceDetection"", Deprecated(""v21.06"", ""v21.12"")},; {""DirectSAP"", Deprecated(""v21.06"", ""v21.12"")},; {""RigidRigidMapping"", Deprecated(""v23.06"", ""v23.12"", ""You can use the component RigidMapping with template='Rigid3,Rigid3' instead."")},; }. ◆ movedComponents. SOFA_HELPER_API const std::map< std::string, ComponentChange, std::less<> > sofa::helper::lifecycle::movedComponents. ◆ renamedComponents. SOFA_HELPER_API const std::map< std::string, Renamed, std::less<> > sofa::helper::lifecycle::renamedComponents. ◆ uncreatableComponents. SOFA_HELPER_API const std::map< std::string, ComponentChange, std::less<> > sofa::helper::lifecycle::uncreatableComponents. sofahelperlifecycle; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1lifecycle.html:143,Variab,Variables,143,api/master/sofa/html/namespacesofa_1_1helper_1_1lifecycle.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1lifecycle.html,4,"['Plugin', 'Variab']","['Pluginized', 'Variable', 'Variables']"
Modifiability,﻿. SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::lifecycle::ComponentChange Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::ComponentChange:. [legend]. Public Attributes; std::string m_message;  ; std::string m_changeVersion;  . Public Member Functions;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Attribute details. ◆ m_changeVersion. std::string sofa::helper::lifecycle::ComponentChange::m_changeVersion. ◆ m_message. std::string sofa::helper::lifecycle::ComponentChange::m_message. Constructor details. ◆ ComponentChange() [1/2]. sofa::helper::lifecycle::ComponentChange::ComponentChange ; (; ). default . ◆ ComponentChange() [2/2]. sofa::helper::lifecycle::ComponentChange::ComponentChange ; (; const std::string & ; sinceVersion). inlineexplicit . ◆ ~ComponentChange(). virtual sofa::helper::lifecycle::ComponentChange::~ComponentChange ; (; ). virtualdefault . Function details. ◆ getMessage(). const std::string& sofa::helper::lifecycle::ComponentChange::getMessage ; (; ); const. inline . ◆ getVersion(). const std::string& sofa::helper::lifecycle::ComponentChange::getVersion ; (; ); const. inline . sofahelperlifecycleComponentChange; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_component_change.html:304,Inherit,Inheritance,304,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_component_change.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_component_change.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::lifecycle::Dealiased Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Dealiased Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Dealiased:. [legend]. Public Member Functions;  Dealiased (const std::string &sinceVersion, const std::string &originalName);  ; const std::string & getOriginalName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Dealiased(). sofa::helper::lifecycle::Dealiased::Dealiased ; (; const std::string & ; sinceVersion, . const std::string & ; originalName . ). inline . Function details. ◆ getOriginalName(). const std::string& sofa::helper::lifecycle::Dealiased::getOriginalName ; (; ); const. inline . sofahelperlifecycleDealiased; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html:523,inherit,inherited,523,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_dealiased.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::lifecycle::Deprecated Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Deprecated Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Deprecated:. [legend]. Public Member Functions;  Deprecated (const std::string &sinceVersion, const std::string &untilVersion, const std::string &instruction=""\b"");  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Deprecated(). sofa::helper::lifecycle::Deprecated::Deprecated ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; instruction = ""\b"" . ). inlineexplicit . sofahelperlifecycleDeprecated; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html:515,inherit,inherited,515,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_deprecated.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::lifecycle::Moved Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Moved Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Moved:. [legend]. Public Member Functions;  Moved (const std::string &sinceVersion, const std::string &fromPlugin, const std::string &toPlugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Moved(). sofa::helper::lifecycle::Moved::Moved ; (; const std::string & ; sinceVersion, . const std::string & ; fromPlugin, . const std::string & ; toPlugin . ). inline . sofahelperlifecycleMoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html:485,inherit,inherited,485,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_moved.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::lifecycle::Pluginized Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Pluginized Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Pluginized:. [legend]. Public Member Functions;  Pluginized (const std::string &sinceVersion, const std::string &plugin);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Pluginized(). sofa::helper::lifecycle::Pluginized::Pluginized ; (; const std::string & ; sinceVersion, . const std::string & ; plugin . ). inlineexplicit . sofahelperlifecyclePluginized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html:435,plugin,plugin,435,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_pluginized.html,17,"['Inherit', 'Plugin', 'inherit', 'plugin']","['Inheritance', 'Inherited', 'Pluginized', 'inherited', 'plugin']"
Modifiability,"﻿. SOFA API: sofa::helper::lifecycle::Removed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Removed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Removed:. [legend]. Public Member Functions;  Removed (const std::string &sinceVersion, const std::string &atVersion);  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Removed(). sofa::helper::lifecycle::Removed::Removed ; (; const std::string & ; sinceVersion, . const std::string & ; atVersion . ). inlineexplicit . sofahelperlifecycleRemoved; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html:463,inherit,inherited,463,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_removed.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::lifecycle::Renamed Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::lifecycle::Renamed Class Reference . #include <ComponentChange.h>. Inheritance diagram for sofa::helper::lifecycle::Renamed:. [legend]. Public Member Functions;  Renamed (const std::string &sinceVersion, const std::string &untilVersion, const std::string &newName);  ; const std::string & getNewName () const;  ;  Public Member Functions inherited from sofa::helper::lifecycle::ComponentChange;  ComponentChange ()=default;  ;  ComponentChange (const std::string &sinceVersion);  ; virtual ~ComponentChange ()=default;  ; const std::string & getMessage () const;  ; const std::string & getVersion () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::lifecycle::ComponentChange; std::string m_message;  ; std::string m_changeVersion;  . Constructor details. ◆ Renamed(). sofa::helper::lifecycle::Renamed::Renamed ; (; const std::string & ; sinceVersion, . const std::string & ; untilVersion, . const std::string & ; newName . ). inline . Function details. ◆ getNewName(). const std::string& sofa::helper::lifecycle::Renamed::getNewName ; (; ); const. inline . sofahelperlifecycleRenamed; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html:538,inherit,inherited,538,api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1lifecycle_1_1_renamed.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,﻿. SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ClangMessageHandler Class Reference . #include <ClangMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ClangMessageHandler:. [legend]. Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ClangMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingClangMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html:459,inherit,inherited,459,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_message_handler.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::ClangStyleMessageFormatter Class Reference . #include <ClangStyleMessageFormatter.h>. Inheritance diagram for sofa::helper::logging::ClangStyleMessageFormatter:. [legend]. Public Member Functions; void formatMessage (const Message &m, std::ostream &out) override;  . Static Public Member Functions; static ClangStyleMessageFormatter & getInstance ();  . Protected Member Functions; std::string getPrefixText (unsigned int type) const override;  ;  Protected Member Functions inherited from sofa::helper::logging::MessageFormatter;  MessageFormatter ();  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Function details. ◆ formatMessage(). void sofa::helper::logging::ClangStyleMessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). overridevirtual . Implements sofa::helper::logging::MessageFormatter. ◆ getInstance(). static ClangStyleMessageFormatter& sofa::helper::logging::ClangStyleMessageFormatter::getInstance ; (; ). inlinestatic . ◆ getPrefixText(). std::string sofa::helper::logging::ClangStyleMessageFormatter::getPrefixText ; (; unsigned int ; type); const. overrideprotectedvirtual . Reimplemented from sofa::helper::logging::MessageFormatter. sofahelperloggingClangStyleMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter.html:765,inherit,inherited,765,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_clang_style_message_formatter.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:310,Inherit,Inheritance,310,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ConsoleMessageHandler Class Reference . #include <ConsoleMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ConsoleMessageHandler:. [legend]; Detailed Description; Print the message on the console using a specified formatter. The Message::Error, Message::Fatal are going to std:cerr while the others are going to std::cout. . Public Member Functions;  ConsoleMessageHandler (MessageFormatter *formatter=nullptr);  ; void process (Message &m) override;  ; void setMessageFormatter (MessageFormatter *formatter);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ ConsoleMessageHandler(). sofa::helper::logging::ConsoleMessageHandler::ConsoleMessageHandler ; (; MessageFormatter * ; formatter = nullptr). Create a new ConsoleMessageHandler. By default the handler is using the DefaultStyleMessageFormatter object to format the message. . Function details. ◆ process(). void sofa::helper::logging::ConsoleMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. ◆ setMessageFormatter(). void sofa::helper::logging::ConsoleMessageHandler::setMessageFormatter ; (; MessageFormatter * ; formatter). sofahelperloggingConsoleMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_console_message_handler.html:775,inherit,inherited,775,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_console_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_console_message_handler.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::logging::DefaultStyleMessageFormatter Class Reference . #include <DefaultStyleMessageFormatter.h>. Inheritance diagram for sofa::helper::logging::DefaultStyleMessageFormatter:. [legend]; Detailed Description; Format the message using a very simple sofa style. For more advanced formatting style have a look at RichStyleMessageFormatter. Example: [ERROR] ClassName(instanceName): this is a message printed somewhere. . Public Member Functions; void formatMessage (const Message &m, std::ostream &out) override;  . Static Public Member Functions; static MessageFormatter & getInstance ();  . Additional Inherited Members;  Protected Member Functions inherited from sofa::helper::logging::MessageFormatter;  MessageFormatter ();  ; virtual std::string getPrefixText (unsigned int type) const;  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Function details. ◆ formatMessage(). void sofa::helper::logging::DefaultStyleMessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). overridevirtual . Implements sofa::helper::logging::MessageFormatter. ◆ getInstance(). static MessageFormatter& sofa::helper::logging::DefaultStyleMessageFormatter::getInstance ; (; ). inlinestatic . sofahelperloggingDefaultStyleMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html:901,inherit,inherited,901,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler Class Reference . #include <ExceptionMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler:. [legend]; Detailed Description; Raise an exception each time a error message is processed. Useful for automatic examples that only detects crashes! . Classes; struct  ErrorMessageException;  the exception raised by an error Message More...;  . Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ExceptionMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingExceptionMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html:720,inherit,inherited,720,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference . #include <ExceptionMessageHandler.h>; the exception raised by an error Message; More... Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException:. [legend]; Detailed Description; the exception raised by an error Message . Public Member Functions;  ErrorMessageException ();  ; virtual const char * what () const throw ();  . Constructor details. ◆ ErrorMessageException(). sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::ErrorMessageException ; (; ). inline . Function details. ◆ what(). virtual const char* sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException::what ; (; ); const. throw (. ). inlinevirtual . sofahelperloggingExceptionMessageHandlerErrorMessageException; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html:401,Inherit,Inheritance,401,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_exception_message_handler_1_1_error_message_exception.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:311,Inherit,Inheritance,311,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:735,inherit,inherited,735,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,8,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::logging::FileMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileMessageHandler Class Reference . #include <FileMessageHandler.h>. Inheritance diagram for sofa::helper::logging::FileMessageHandler:. [legend]; Detailed Description; A message handle that saves the content message passing by in a file. The formatting can be customize by passing a different MessageFormatter in the constructor. Example of use: MessageDispatcher::addHandler(new FileMessageHandler(""myfile.log"")); . Public Member Functions;  FileMessageHandler (const char *filename, MessageFormatter *formatter=nullptr);  ;  ~FileMessageHandler () override;  ; void process (Message &m) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ FileMessageHandler(). sofa::helper::logging::FileMessageHandler::FileMessageHandler ; (; const char * ; filename, . MessageFormatter * ; formatter = nullptr . ). ◆ ~FileMessageHandler(). sofa::helper::logging::FileMessageHandler::~FileMessageHandler ; (; ). override . Function details. ◆ isValid(). bool sofa::helper::logging::FileMessageHandler::isValid ; (; ). ◆ process(). void sofa::helper::logging::FileMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingFileMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler.html:867,inherit,inherited,867,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference . #include <MessageDispatcher.h>; Detailed Description; a utility interface to automatically process a Message at the end of scope of the LoggerStream variable (processed by all the handlers of the MessageDispatcher) . Public Member Functions;  LoggerStream (const LoggerStream &s);  ;  LoggerStream (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &sender, const FileInfo::SPtr &fileInfo);  ;  ~LoggerStream ();  ; template<class T > ; LoggerStream & operator<< (const T &x);  ; Message getMessage () const;  . Constructor details. ◆ LoggerStream() [1/2]. sofa::helper::logging::MessageDispatcher::LoggerStream::LoggerStream ; (; const LoggerStream & ; s). inline . ◆ LoggerStream() [2/2]. sofa::helper::logging::MessageDispatcher::LoggerStream::LoggerStream ; (; Message::Class ; mclass, . Message::Type ; type, . const ComponentInfo::SPtr & ; sender, . const FileInfo::SPtr & ; fileInfo . ). ◆ ~LoggerStream(). sofa::helper::logging::MessageDispatcher::LoggerStream::~LoggerStream ; (; ). Function details. ◆ getMessage(). Message sofa::helper::logging::MessageDispatcher::LoggerStream::getMessage ; (; ); const. inline . ◆ operator<<(). template<class T > . LoggerStream& sofa::helper::logging::MessageDispatcher::LoggerStream::operator<< ; (; const T & ; x). inline . sofahelperloggingMessageDispatcherLoggerStream; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream.html:430,variab,variable,430,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream.html,2,['variab'],['variable']
Modifiability,"﻿. SOFA API: sofa::helper::logging::MessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::MessageFormatter Class Referenceabstract . #include <MessageFormatter.h>. Inheritance diagram for sofa::helper::logging::MessageFormatter:. [legend]. Public Member Functions; virtual void formatMessage (const Message &m, std::ostream &out)=0;  . Protected Member Functions;  MessageFormatter ();  ; virtual std::string getPrefixText (unsigned int type) const;  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Constructor details. ◆ MessageFormatter(). sofa::helper::logging::MessageFormatter::MessageFormatter ; (; ). inlineprotected . Function details. ◆ formatMessage(). virtual void sofa::helper::logging::MessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). pure virtual . Implemented in sofa::helper::logging::DefaultStyleMessageFormatter, sofa::helper::logging::ClangStyleMessageFormatter, and sofa::helper::logging::RichConsoleStyleMessageFormatter. ◆ getPrefixText(). std::string sofa::helper::logging::MessageFormatter::getPrefixText ; (; unsigned int ; type); const. protectedvirtual . Reimplemented in sofa::helper::logging::ClangStyleMessageFormatter. ◆ setColor(). std::ostream & sofa::helper::logging::MessageFormatter::setColor ; (; std::ostream & ; stream, . unsigned int ; type . ); const. protectedvirtual . sofahelperloggingMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_formatter.html:320,Inherit,Inheritance,320,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_formatter.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::logging::MessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::MessageHandler Class Referenceabstract . #include <MessageHandler.h>. Inheritance diagram for sofa::helper::logging::MessageHandler:. [legend]. Public Member Functions; virtual ~MessageHandler ();  ; virtual void process (Message &m)=0;  . Constructor details. ◆ ~MessageHandler(). virtual sofa::helper::logging::MessageHandler::~MessageHandler ; (; ). inlinevirtual . Function details. ◆ process(). virtual void sofa::helper::logging::MessageHandler::process ; (; Message & ; m). pure virtual . Implemented in sofa::testing::GtestMessageHandler, sofa::helper::logging::TracyMessageHandler, sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, sofa::helper::logging::FileMessageHandler, sofa::helper::logging::ExceptionMessageHandler, sofa::helper::logging::countingmessagehandler::CountingMessageHandler, sofa::helper::logging::ConsoleMessageHandler, sofa::helper::logging::ClangMessageHandler, sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, and sofa::helper::logging::SilentMessageHandler. sofahelperloggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler.html:284,Inherit,Inheritance,284,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference . #include <RichConsoleStyleMessageFormatter.h>; The RichConsoleStyleMessageFormatter class. ; More... Inheritance diagram for sofa::helper::logging::RichConsoleStyleMessageFormatter:. [legend]; Detailed Description; The RichConsoleStyleMessageFormatter class. ; The class implement a message formatter dedicated to console pretty printing on a console Among other thing it feature formatting using a markdown like syntax:; color rendering, 'italics' or italics; alignment and wrapping for long message that are then much easier to read.; automatic reading of the console number of column for prettier display. . Public Member Functions; void formatMessage (const Message &m, std::ostream &out) override;  . Static Public Member Functions; static RichConsoleStyleMessageFormatter & getInstance ();  . Additional Inherited Members;  Protected Member Functions inherited from sofa::helper::logging::MessageFormatter;  MessageFormatter ();  ; virtual std::string getPrefixText (unsigned int type) const;  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Function details. ◆ formatMessage(). void sofa::helper::logging::RichConsoleStyleMessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). overridevirtual . Implements sofa::helper::logging::MessageFormatter. ◆ getInstance(). static RichConsoleStyleMessageFormatter& sofa::helper::logging::RichConsoleStyleMessageFormatter::getInstance ; (; ). inlinestatic . sofahelperloggingRichConsoleStyleMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter.html:1174,inherit,inherited,1174,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,﻿. SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::SilentMessageHandler Class Reference . #include <SilentMessageHandler.h>; This class is a MessageHandler that simply do nothing with the message. ; More... Inheritance diagram for sofa::helper::logging::SilentMessageHandler:. [legend]; Detailed Description; This class is a MessageHandler that simply do nothing with the message. . Public Member Functions; void process (Message &) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::SilentMessageHandler::process ; (; Message & ; ). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingSilentMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html:640,inherit,inherited,640,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::logging::SofaComponentInfo Class Reference . #include <Base.h>. Inheritance diagram for sofa::helper::logging::SofaComponentInfo:. [legend]. Public Attributes; const sofa::core::objectmodel::Base * m_component;  ; std::string m_name;  . Public Member Functions;  SofaComponentInfo (const sofa::core::objectmodel::Base *c);  ; const std::string & name () const;  ; std::ostream & toStream (std::ostream &out) const;  ;  Public Member Functions inherited from sofa::helper::logging::ComponentInfo;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::logging::ComponentInfo; std::string m_sender;  . Attribute details. ◆ m_component. const sofa::core::objectmodel::Base* sofa::helper::logging::SofaComponentInfo::m_component. ◆ m_name. std::string sofa::helper::logging::SofaComponentInfo::m_name. Constructor details. ◆ SofaComponentInfo(). sofa::helper::logging::SofaComponentInfo::SofaComponentInfo ; (; const sofa::core::objectmodel::Base * ; c). Function details. ◆ name(). const std::string& sofa::helper::logging::SofaComponentInfo::name ; (; ); const. inline . ◆ toStream(). std::ostream& sofa::helper::logging::SofaComponentInfo::toStream ; (; std::ostream & ; out); const. inlinevirtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented from sofa::helper::logging::ComponentInfo. sofahelperloggingSofaComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info.html:672,inherit,inherited,672,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info.html,8,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited', 'inheriting']"
Modifiability,﻿. SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::TracyMessageHandler Class Reference . #include <TracyMessageHandler.h>; Send the message to the Tracy profiler. ; More... Inheritance diagram for sofa::helper::logging::TracyMessageHandler:. [legend]; Detailed Description; Send the message to the Tracy profiler. . Public Member Functions;  TracyMessageHandler (MessageFormatter *formatter=nullptr);  ; void process (Message &m) override;  ; void setMessageFormatter (MessageFormatter *formatter);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ TracyMessageHandler(). sofa::helper::logging::TracyMessageHandler::TracyMessageHandler ; (; MessageFormatter * ; formatter = nullptr). Create a new ConsoleMessageHandler. By default the handler is using the DefaultStyleMessageFormatter object to format the message. . Function details. ◆ process(). void sofa::helper::logging::TracyMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. ◆ setMessageFormatter(). void sofa::helper::logging::TracyMessageHandler::setMessageFormatter ; (; MessageFormatter * ; formatter). sofahelperloggingTracyMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler.html:695,inherit,inherited,695,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:420,Inherit,Inheritance,420,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:427,Inherit,Inheritance,427,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:487,Inherit,Inheritance,487,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:427,Inherit,Inheritance,427,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference . #include <map_ptr_stable_compare.h>; A map container that order pointers in a stable way, i.e. in the order pointers are presented. ; More... Inheritance diagram for sofa::helper::map_ptr_stable_compare< Key, Tp >:. [legend]; Detailed Description; template<typename Key, typename Tp>; class sofa::helper::map_ptr_stable_compare< Key, Tp >; A map container that order pointers in a stable way, i.e. in the order pointers are presented. . Public Member Functions;  map_ptr_stable_compare ();  Basic constructor. More...;  ;  map_ptr_stable_compare (const map_ptr_stable_compare &other);  Copy constructor. More...;  ;  map_ptr_stable_compare (const_iterator first, const_iterator last);  Constructor. More...;  . Constructor details. ◆ map_ptr_stable_compare() [1/3]. template<typename Key , typename Tp > . sofa::helper::map_ptr_stable_compare< Key, Tp >::map_ptr_stable_compare ; (; ). inline . Basic constructor. . ◆ map_ptr_stable_compare() [2/3]. template<typename Key , typename Tp > . sofa::helper::map_ptr_stable_compare< Key, Tp >::map_ptr_stable_compare ; (; const map_ptr_stable_compare< Key, Tp > & ; other). inline . Copy constructor. . ◆ map_ptr_stable_compare() [3/3]. template<typename Key , typename Tp > . sofa::helper::map_ptr_stable_compare< Key, Tp >::map_ptr_stable_compare ; (; const_iterator ; first, . const_iterator ; last . ). inline . Constructor. . sofahelpermap_ptr_stable_compare; Generated on Mon Nov 11 2024 03:30:30 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1map__ptr__stable__compare.html:427,Inherit,Inheritance,427,api/master/sofa/html/classsofa_1_1helper_1_1map__ptr__stable__compare.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1map__ptr__stable__compare.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::helper::narrowing_error Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::narrowing_error Struct Reference . #include <narrow_cast.h>. Inheritance diagram for sofa::helper::narrowing_error:. [legend]. Public Member Functions; const char * what () const noexcept override;  . Function details. ◆ what(). const char* sofa::helper::narrowing_error::what ; (; ); const. inlineoverridenoexcept . sofahelpernarrowing_error; Generated on Mon Nov 11 2024 03:30:30 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1narrowing__error.html:259,Inherit,Inheritance,259,api/master/sofa/html/structsofa_1_1helper_1_1narrowing__error.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1narrowing__error.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::system Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::helper::system Namespace Reference . Namespaces;  thread;  . Classes; class  DynamicLibrary;  Wrapper around the dynamic library facilities of the operating system. More...;  ; class  FileEventListener;  Contains an event-based API to monitor file changes. More...;  ; class  FileMonitor;  ; class  MonitoredFile;  ; class  FileRepository;  ; class  FileSystem;  Contains functions to interact with the file system. More...;  ; class  Locale;  ; class  TemporaryLocale;  RAII class to modify the locale temporarily. More...;  ; class  PipeProcess;  ; class  Plugin;  ; class  PluginManager;  ; class  SetDirectory;  . Typedefs; typedef vector< string > ListOfFiles;  ; typedef vector< FileEventListener * > ListOfListeners;  ; typedef list< MonitoredFile * > ListOfMonitors;  . Functions; const char * eventmaskToString (int evtmask);  ; void addAFileListenerInDict (string pathfilename, FileEventListener *listener);  ; int FileMonitor_init ();  ; void catch_alarm (int sig);  ; std::string cleanPath (const std::string &path);  . Variables; map< string, ListOfFiles > dir2files;  ; map< int, string > fd2fn;  ; map< string, ListOfListeners > file2listener;  ; int filemonitor_inotifyfd =-1;  ; ListOfMonitors monitors;  ; volatile sig_atomic_t keep_going = 1;  ; FileRepository PluginRepository (""SOFA_PLUGIN_PATH"", { Utils::getSofaPathTo(""plugins""), Utils::getSofaPathTo(""collections""), Utils::getSofaPathTo(""lib""), });  Default repository. More...;  ; FileRepository DataRepository (""SOFA_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa""), Utils::getSofaPathTo(""share/sofa/examples"") }, { { Utils::getSofaPathTo(""etc/sofa.ini""), {""SHARE_DIR"", ""EXAMPLES_DIR""} } });  Default repository. More...;  . Typedef Documentation. ◆ ListOfFiles. typedef vector<string> sofa::helper::system::ListOfFiles. ◆ ListO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html:179,Variab,Variables,179,api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system.html,3,"['Plugin', 'Variab']","['Plugin', 'PluginManager', 'Variables']"
Modifiability,"﻿. SOFA API: sofa::helper::system::FileEventListener Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::system::FileEventListener Class Referenceabstract . #include <FileMonitor.h>; Contains an event-based API to monitor file changes. ; More... Inheritance diagram for sofa::helper::system::FileEventListener:. [legend]; Detailed Description; Contains an event-based API to monitor file changes. ; Those functions are here only to avoid depending on an external library, and they provide only basic functionality.; This set of functions is not meant to be complete, but it can be completed if need be.; Example of use: 1) implement the FileEventListener interface 2) register the files you want to monitor using FileMonitor::addFile(""mypath/to/file"", &mylistener); 3) call the update function to process & trigger the events.; The system does not contains any hidden thread. If you request the monitoring to happens in an hidden thread you can implement it externally. . Public Member Functions; virtual ~FileEventListener ();  ; virtual void fileHasChanged (const std::string &filename)=0;  . Constructor details. ◆ ~FileEventListener(). virtual sofa::helper::system::FileEventListener::~FileEventListener ; (; ). inlinevirtual . Function details. ◆ fileHasChanged(). virtual void sofa::helper::system::FileEventListener::fileHasChanged ; (; const std::string & ; filename). pure virtual . Implemented in sofa::gui::qt::RealGUIFileListener, and sofa::gl::GLSLFileListener. sofahelpersystemFileEventListener; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_event_listener.html:348,Inherit,Inheritance,348,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_event_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_event_listener.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::system::FileRepository Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Friends |; List of all members . sofa::helper::system::FileRepository Class Reference . #include <FileRepository.h>; Detailed Description; Helper class to find files in a list of directories.; Each file is searched as follow:; 1: Using the specified filename in current directory, or in the specified directory. If the filename does not start with ""/"", ""./"", or ""../"" : 2: In the directory path specified using addFirstPath method. 3: In the directory path specified using an environment variable (default to SOFA_DATA_PATH). 4: In the default directories relative to the main executable (default to ../share). 5: In the directory path specified using addLastPath method.; For file name starting with '/', './' or '../' only the first step is used.; A path is considered as a concatenation of directories separated by : on linux / mac and ; on windows . Protected Attributes; std::string directAccessProtocolPrefix;  ; std::vector< std::string > vpath;  Vector of paths. More...;  . Public Member Functions;  FileRepository ();  ;  FileRepository (const char *envVar);  ;  FileRepository (const char *envVar, const char *relativePath);  ;  FileRepository (const char *envVar, const std::vector< std::string > &paths);  ;  FileRepository (const char *envVar, const char *relativePath, const fileKeysMap &iniFilesAndKeys);  ;  FileRepository (const char *envVar, const std::vector< std::string > &paths, const fileKeysMap &iniFilesAndKeys);  ;  ~FileRepository ();  ; void addFirstPath (const std::string &path);  Adds a path to the front of the set of paths. More...;  ; void addLastPath (const std::string &path);  Adds a path to the back of the set of paths. More...;  ; void removePath (const std::string &path);  Remove a path of the s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:751,variab,variable,751,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,2,['variab'],['variable']
Modifiability,﻿. SOFA API: sofa::helper::system::Plugin Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Friends |; List of all members . sofa::helper::system::Plugin Class Reference . #include <PluginManager.h>. Classes; struct  GetModuleComponentList;  ; struct  GetModuleDescription;  ; struct  GetModuleLicense;  ; struct  GetModuleName;  ; struct  GetModuleVersion;  ; struct  InitExternalModule;  ; struct  ModuleIsInitialized;  . Public Attributes; InitExternalModule initExternalModule;  ; GetModuleName getModuleName;  ; GetModuleDescription getModuleDescription;  ; GetModuleLicense getModuleLicense;  ; GetModuleComponentList getModuleComponentList;  ; GetModuleVersion getModuleVersion;  ; ModuleIsInitialized moduleIsInitialized;  . Friends; class PluginManager;  . Attribute details. ◆ getModuleComponentList. GetModuleComponentList sofa::helper::system::Plugin::getModuleComponentList. ◆ getModuleDescription. GetModuleDescription sofa::helper::system::Plugin::getModuleDescription. ◆ getModuleLicense. GetModuleLicense sofa::helper::system::Plugin::getModuleLicense. ◆ getModuleName. GetModuleName sofa::helper::system::Plugin::getModuleName. ◆ getModuleVersion. GetModuleVersion sofa::helper::system::Plugin::getModuleVersion. ◆ initExternalModule. InitExternalModule sofa::helper::system::Plugin::initExternalModule. ◆ moduleIsInitialized. ModuleIsInitialized sofa::helper::system::Plugin::moduleIsInitialized. Related details. ◆ PluginManager. friend class PluginManager. friend . sofahelpersystemPlugin; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin.html:35,Plugin,Plugin,35,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin.html,13,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"﻿. SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::helper::system::Plugin::GetModuleComponentList Struct Reference . #include <PluginManager.h>. Public Attributes; FuncPtr func;  . Static Public Attributes; static const char * symbol = ""getModuleComponentList"";  . Public Member Functions; const char * operator() () const;  ;  GetModuleComponentList ();  . Attribute details. ◆ func. FuncPtr sofa::helper::system::Plugin::GetModuleComponentList::func. ◆ symbol. const char * sofa::helper::system::Plugin::GetModuleComponentList::symbol = ""getModuleComponentList"". static . Constructor details. ◆ GetModuleComponentList(). sofa::helper::system::Plugin::GetModuleComponentList::GetModuleComponentList ; (; ). inline . Function details. ◆ operator()(). const char* sofa::helper::system::Plugin::GetModuleComponentList::operator() ; (; ); const. inline . sofahelpersystemPluginGetModuleComponentList; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_component_list.html:35,Plugin,Plugin,35,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_component_list.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_component_list.html,7,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"﻿. SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::helper::system::Plugin::GetModuleDescription Struct Reference . #include <PluginManager.h>. Public Attributes; FuncPtr func;  . Static Public Attributes; static const char * symbol = ""getModuleDescription"";  . Public Member Functions; const char * operator() () const;  ;  GetModuleDescription ();  . Attribute details. ◆ func. FuncPtr sofa::helper::system::Plugin::GetModuleDescription::func. ◆ symbol. const char * sofa::helper::system::Plugin::GetModuleDescription::symbol = ""getModuleDescription"". static . Constructor details. ◆ GetModuleDescription(). sofa::helper::system::Plugin::GetModuleDescription::GetModuleDescription ; (; ). inline . Function details. ◆ operator()(). const char* sofa::helper::system::Plugin::GetModuleDescription::operator() ; (; ); const. inline . sofahelpersystemPluginGetModuleDescription; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_description.html:35,Plugin,Plugin,35,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_description.html,7,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"﻿. SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::helper::system::Plugin::GetModuleLicense Struct Reference . #include <PluginManager.h>. Public Attributes; FuncPtr func;  . Static Public Attributes; static const char * symbol = ""getModuleLicense"";  . Public Member Functions; const char * operator() () const;  ;  GetModuleLicense ();  . Attribute details. ◆ func. FuncPtr sofa::helper::system::Plugin::GetModuleLicense::func. ◆ symbol. const char * sofa::helper::system::Plugin::GetModuleLicense::symbol = ""getModuleLicense"". static . Constructor details. ◆ GetModuleLicense(). sofa::helper::system::Plugin::GetModuleLicense::GetModuleLicense ; (; ). inline . Function details. ◆ operator()(). const char* sofa::helper::system::Plugin::GetModuleLicense::operator() ; (; ); const. inline . sofahelpersystemPluginGetModuleLicense; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_license.html:35,Plugin,Plugin,35,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_license.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_license.html,7,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"﻿. SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::helper::system::Plugin::GetModuleName Struct Reference . #include <PluginManager.h>. Public Attributes; FuncPtr func;  . Static Public Attributes; static const char * symbol = ""getModuleName"";  . Public Member Functions; const char * operator() () const;  ;  GetModuleName ();  . Attribute details. ◆ func. FuncPtr sofa::helper::system::Plugin::GetModuleName::func. ◆ symbol. const char * sofa::helper::system::Plugin::GetModuleName::symbol = ""getModuleName"". static . Constructor details. ◆ GetModuleName(). sofa::helper::system::Plugin::GetModuleName::GetModuleName ; (; ). inline . Function details. ◆ operator()(). const char* sofa::helper::system::Plugin::GetModuleName::operator() ; (; ); const. inline . sofahelpersystemPluginGetModuleName; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_name.html:35,Plugin,Plugin,35,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_name.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_name.html,7,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"﻿. SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::helper::system::Plugin::GetModuleVersion Struct Reference . #include <PluginManager.h>. Public Attributes; FuncPtr func;  . Static Public Attributes; static const char * symbol = ""getModuleVersion"";  . Public Member Functions; const char * operator() () const;  ;  GetModuleVersion ();  . Attribute details. ◆ func. FuncPtr sofa::helper::system::Plugin::GetModuleVersion::func. ◆ symbol. const char * sofa::helper::system::Plugin::GetModuleVersion::symbol = ""getModuleVersion"". static . Constructor details. ◆ GetModuleVersion(). sofa::helper::system::Plugin::GetModuleVersion::GetModuleVersion ; (; ). inline . Function details. ◆ operator()(). const char* sofa::helper::system::Plugin::GetModuleVersion::operator() ; (; ); const. inline . sofahelpersystemPluginGetModuleVersion; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_version.html:35,Plugin,Plugin,35,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_version.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_get_module_version.html,7,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"﻿. SOFA API: sofa::helper::system::Plugin::InitExternalModule Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::helper::system::Plugin::InitExternalModule Struct Reference . #include <PluginManager.h>. Public Attributes; FuncPtr func;  . Static Public Attributes; static const char * symbol = ""initExternalModule"";  . Public Member Functions; void operator() ();  ;  InitExternalModule ();  . Attribute details. ◆ func. FuncPtr sofa::helper::system::Plugin::InitExternalModule::func. ◆ symbol. const char * sofa::helper::system::Plugin::InitExternalModule::symbol = ""initExternalModule"". static . Constructor details. ◆ InitExternalModule(). sofa::helper::system::Plugin::InitExternalModule::InitExternalModule ; (; ). inline . Function details. ◆ operator()(). void sofa::helper::system::Plugin::InitExternalModule::operator() ; (; ). inline . sofahelpersystemPluginInitExternalModule; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_init_external_module.html:35,Plugin,Plugin,35,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_init_external_module.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_init_external_module.html,7,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"﻿. SOFA API: sofa::helper::system::Plugin::ModuleIsInitialized Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::helper::system::Plugin::ModuleIsInitialized Struct Reference . #include <PluginManager.h>. Public Attributes; FuncPtr func;  . Static Public Attributes; static const char * symbol = ""moduleIsInitialized"";  . Public Member Functions; bool operator() () const;  ;  ModuleIsInitialized ();  . Attribute details. ◆ func. FuncPtr sofa::helper::system::Plugin::ModuleIsInitialized::func. ◆ symbol. const char * sofa::helper::system::Plugin::ModuleIsInitialized::symbol = ""moduleIsInitialized"". static . Constructor details. ◆ ModuleIsInitialized(). sofa::helper::system::Plugin::ModuleIsInitialized::ModuleIsInitialized ; (; ). inline . Function details. ◆ operator()(). bool sofa::helper::system::Plugin::ModuleIsInitialized::operator() ; (; ); const. inline . sofahelpersystemPluginModuleIsInitialized; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_module_is_initialized.html:35,Plugin,Plugin,35,api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_module_is_initialized.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1system_1_1_plugin_1_1_module_is_initialized.html,7,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"﻿. SOFA API: sofa::helper::system::PluginManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::helper::system::PluginManager Class Reference . #include <PluginManager.h>. Static Public Attributes; static std::string s_gui_postfix = ""gui"";  the postfix to gui plugin, default=""gui"" (e.g. myplugin_gui.so) More...;  . Public Member Functions; PluginLoadStatus loadPlugin (const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr);  ; PluginLoadStatus loadPluginByPath (const std::string &path, std::ostream *errlog=nullptr);  ; PluginLoadStatus loadPluginByName (const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr);  ; bool unloadPlugin (const std::string &path, std::ostream *errlog=nullptr);  ; PluginLoadStatus registerPlugin (const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr);  Register a plugin. Merely an alias for loadPlugin() More...;  ; const std::unordered_set< std::string > & unloadedPlugins () const;  ; bool isPluginUnloaded (const std::string &pluginName) const;  ; void init ();  ; void init (const std::string &pluginPath);  ; void cleanup ();  ; std::string findPlugin (const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, int maxRecursiveDepth=3);  ; bool pluginIsLoaded (const std::string &plugin);  ; std::pair< std::string, bool > isPluginLoaded (const std::string &plugin);  ; bool checkDuplicatedPlugin (const Plugin &plugin, const std::string &pluginPath);  ; PluginMap & getPluginMap ();  ; Plugin * getPlugin (const std::string &plugin, const std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:432,plugin,plugin,432,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,17,"['Plugin', 'plugin']","['PluginLoadStatus', 'PluginManager', 'plugin', 'pluginName']"
Modifiability,﻿. SOFA API: sofa::helper::system::thread Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Variables . sofa::helper::system::thread Namespace Reference . Classes; class  CircularQueue;  ; struct  AlignPow2;  ; struct  AlignPow2< 1 >;  ; struct  AlignPow2< 0 >;  ; struct  FixedSize;  ; struct  FixedPower2Size;  ; class  OneThreadPerEnd;  ; class  ManyThreadsPerEnd;  ; class  CTime;  ; class  Trace;  ; class  TraceProfile;  ; class  thread_specific_ptr;  . Typedefs; typedef unsigned long long ctime_t;  . Variables; Trace mySingletonTrace;  . Typedef Documentation. ◆ ctime_t. typedef unsigned long long sofa::helper::system::thread::ctime_t. Variable Documentation. ◆ mySingletonTrace. Trace sofa::helper::system::thread::mySingletonTrace. sofahelpersystemthread; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html:160,Variab,Variables,160,api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1system_1_1thread.html,3,['Variab'],"['Variable', 'Variables']"
Modifiability,"﻿. SOFA API: sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy > Class Template Reference . #include <CircularQueue.h>. Inheritance diagram for sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >:. [legend]; Detailed Description; template<class T, template< class U > class StoragePolicy, class ThreadAccessPolicy>; class sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; This class implements a policy-based circular queue. The template parameter ThreadAccessPolicy allows to customize access to the array according to thread-safety requirements. . Public Member Functions;  CircularQueue ();  ;  ~CircularQueue ();  ; bool push (const T &item);  ; bool pop (T &item, bool clear=true);  ; bool isEmpty () const;  ; unsigned size () const;  ; bool isFull () const;  ; unsigned skip (unsigned maxsize, bool clear=true);  ; template<class OutputIterator > ; unsigned pop (OutputIterator out, unsigned maxsize, bool clear=true);  . Constructor details. ◆ CircularQueue(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::CircularQueue. ◆ ~CircularQueue(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::~CircularQueue. Function details. ◆ isEmpty(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isEmpty. ◆ isFull(). template<class T , template< class U > class StoragePolicy, class Thre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html:385,Inherit,Inheritance,385,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::helper::system::thread::FixedPower2Size< N >::type< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::system::thread::FixedPower2Size< N >::type< T > Class Template Reference . #include <CircularQueue.h>. Inheritance diagram for sofa::helper::system::thread::FixedPower2Size< N >::type< T >:. [legend]. Public Member Functions; T * getQueue ();  . Static Public Member Functions; static int maxSize ();  ; static int maxCapacity ();  . Function details. ◆ getQueue(). template<int N> . template<class T > . T* sofa::helper::system::thread::FixedPower2Size< N >::type< T >::getQueue ; (; ). inline . ◆ maxCapacity(). template<int N> . template<class T > . static int sofa::helper::system::thread::FixedPower2Size< N >::type< T >::maxCapacity ; (; ). inlinestatic . ◆ maxSize(). template<int N> . template<class T > . static int sofa::helper::system::thread::FixedPower2Size< N >::type< T >::maxSize ; (; ). inlinestatic . sofahelpersystemthreadFixedPower2Sizetype; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_fixed_power2_size_1_1type.html:375,Inherit,Inheritance,375,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_fixed_power2_size_1_1type.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_fixed_power2_size_1_1type.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::system::thread::ManyThreadsPerEnd Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Protected Member Functions |; List of all members . sofa::helper::system::thread::ManyThreadsPerEnd Class Reference . #include <CircularQueue.h>. Inheritance diagram for sofa::helper::system::thread::ManyThreadsPerEnd:. [legend]; Detailed Description; This is a lock-free (but not wait-free) multi-producer multi-consumer implementation of a circular queue matching the ThreadAccessPolicy of CircularQueue. NotemaxCapacity parameters MUST always be a power of 2. . Protected Attributes; AtomicInt head;  ; AtomicInt tail;  . Protected Member Functions;  ManyThreadsPerEnd ();  ; bool isEmpty (unsigned maxSize) const;  ; bool isFull (unsigned maxSize) const;  ; unsigned size (unsigned maxSize) const;  ; void init (AtomicInt array[], int maxCapacity);  ; bool push (AtomicInt array[], int maxSize, int maxCapacity, const AtomicInt &item);  ; bool pop (AtomicInt array[], int maxSize, int maxCapacity, AtomicInt &item, bool clear=true);  ; unsigned skip (AtomicInt array[], int maxSize, int maxCapacity, unsigned outmaxsize, bool clear=true);  ; template<class OutputIterator > ; unsigned pop (AtomicInt array[], int maxSize, int maxCapacity, OutputIterator out, unsigned outmaxsize, bool clear=true);  . Attribute details. ◆ head. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::head. protected . ◆ tail. AtomicInt sofa::helper::system::thread::ManyThreadsPerEnd::tail. protected . Constructor details. ◆ ManyThreadsPerEnd(). SOFA_HELPER_API sofa::helper::system::thread::ManyThreadsPerEnd::ManyThreadsPerEnd ; (; ). inlineprotected . Function details. ◆ init(). SOFA_HELPER_API void sofa::helper::system::thread::ManyThreadsPerEnd::init ; (; AtomicInt ; array[], . int ; maxCapacity . ). inlineprotected . ◆ isEmpty(). SOFA_HELPER_API bool sofa::helper::system::thread::ManyThreadsPerEnd::isEmpty ; (; unsigned ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html:322,Inherit,Inheritance,322,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::vector_id< T, TIndex, CheckIndices, MemoryManager > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::vector_id< T, TIndex, CheckIndices, MemoryManager > Class Template Reference . #include <integer_id.h>. Inheritance diagram for sofa::helper::vector_id< T, TIndex, CheckIndices, MemoryManager >:. [legend]. Public Member Functions;  vector_id ();  Basic constructor. More...;  ;  vector_id (Size n, const T &value);  Constructor. More...;  ;  vector_id (int n, const T &value);  Constructor. More...;  ;  vector_id (long n, const T &value);  Constructor. More...;  ;  vector_id (Size n);  Constructor. More...;  ;  vector_id (const std::vector< T > &x);  Constructor. More...;  ;  vector_id (const_iterator first, const_iterator last);  Constructor. More...;  ; reference at (Index n);  Read/write random access, with explicit Index. More...;  ; const_reference at (Index n) const;  Read-only random access, with explicit Index. More...;  ; reference operator() (Index n);  Read/write random access, with explicit Index. More...;  ; const_reference operator() (Index n) const;  Read-only random access, with explicit Index. More...;  ; reference operator[] (Index n);  Read/write random access, with explicit Index. More...;  ; const_reference operator[] (Index n) const;  Read-only random access. More...;  ; Index push_back (const_reference v);  ;  Public Member Functions inherited from sofa::type::vector< T, MemoryManager >;  vector ();  Basic constructor. More...;  ;  vector (Size n, const T &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< T, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< T > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< T, Alloc > &&v);  Move constructor. More...;  ; vector & operator= (c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1vector__id.html:376,Inherit,Inheritance,376,api/master/sofa/html/classsofa_1_1helper_1_1vector__id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1vector__id.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::visual::DrawTool Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::visual::DrawTool Struct Referenceabstract . #include <DrawTool.h>; Utility class to perform debug drawing. ; More... Inheritance diagram for sofa::helper::visual::DrawTool:. [legend]; Detailed Description; Utility class to perform debug drawing. ; Class which contains a set of methods to perform minimal debug drawing regardless of the graphics API used. Components receive a pointer to the DrawTool through the VisualParams parameter of their draw method. Sofa provides a default concrete implementation of this class for the OpenGL API with the DrawToolGL class. k . Public Member Functions;  DrawTool ();  ; virtual ~DrawTool ();  ; virtual void init ()=0;  ; virtual void enableBlending ()=0;  ; virtual void disableBlending ()=0;  ; virtual void enableLighting ()=0;  ; virtual void disableLighting ()=0;  ; virtual void enableDepthTest ()=0;  ; virtual void disableDepthTest ()=0;  ; virtual void clear ();  ;  StateLifeCycle ()=delete;  ;  StateLifeCycle (const StateLifeCycle &)=delete;  ;  StateLifeCycle (DrawTool *drawTool);  ;  ~StateLifeCycle ();  ; Primitive rendering methods; virtual void drawPoints (const std::vector< Vec3 > &points, float size, const RGBAColor &color)=0;  ; virtual void drawPoints (const std::vector< Vec3 > &points, float size, const std::vector< RGBAColor > &color)=0;  ; virtual void drawLine (const Vec3 &p1, const Vec3 &p2, const RGBAColor &color)=0;  ; virtual void drawInfiniteLine (const Vec3 &point, const Vec3 &direction, const RGBAColor &color)=0;  ; virtual void drawLines (const std::vector< Vec3 > &points, float size, const RGBAColor &color)=0;  ; virtual void drawLines (const std::vector< Vec3 > &points, float size, const std::vector< RGBAColor > &colors)=0;  ; virtual void drawLines (const std::vector< Vec3 > &points, const std::vector< Vec2i ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html:316,Inherit,Inheritance,316,api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::helper::visual::Transformation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::visual::Transformation Class Reference . #include <Transformation.h>. Inheritance diagram for sofa::helper::visual::Transformation:. [legend]. Public Attributes; SReal translation [3];  ; SReal scale [3];  ; SReal rotation [4][4];  ; SReal objectCenter [3];  . Public Member Functions;  Transformation ();  ; virtual ~Transformation ();  ;  Transformation (const Transformation &other);  ; Transformation & operator= (const Transformation &transform);  ; virtual void Apply ();  ; virtual void ApplyWithCentring ();  ; virtual void ApplyInverse ();  ; template<class Vector > ; Vector operator* (Vector v) const;  . Protected Member Functions; void InvertTransRotMatrix (SReal matrix[4][4]);  ; void InvertTransRotMatrix (SReal sMatrix[4][4], SReal dMatrix[4][4]);  . Attribute details. ◆ objectCenter. SReal sofa::helper::visual::Transformation::objectCenter[3]. ◆ rotation. SReal sofa::helper::visual::Transformation::rotation[4][4]. ◆ scale. SReal sofa::helper::visual::Transformation::scale[3]. ◆ translation. SReal sofa::helper::visual::Transformation::translation[3]. Constructor details. ◆ Transformation() [1/2]. sofa::helper::visual::Transformation::Transformation ; (; ). ◆ ~Transformation(). sofa::helper::visual::Transformation::~Transformation ; (; ). virtual . ◆ Transformation() [2/2]. sofa::helper::visual::Transformation::Transformation ; (; const Transformation & ; other). Function details. ◆ Apply(). virtual void sofa::helper::visual::Transformation::Apply ; (; ). inlinevirtual . Reimplemented in sofa::gl::TransformationGL. ◆ ApplyInverse(). virtual void sofa::helper::visual::Transformation::ApplyInverse ; (; ). inlinevirtual . Reimplemented in sofa::gl::TransformationGL. ◆ ApplyWithCentring(). virtual void sofa::helper",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_transformation.html:325,Inherit,Inheritance,325,api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_transformation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_transformation.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::linearalgebra Namespace Reference . Namespaces;  sparsematrixproduct;  ;  testing;  . Classes; class  matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal;  ; struct  BaseMatrixLinearOpMV_BlockDiagonal< Real, 1, 1, add, transpose, M, V1, V2 >;  ; struct  BaseMatrixLinearOpMV_BlockSparse;  ; class  BaseMatrixLinearOpMV;  ; class  BaseMatrixLinearOpMulV;  ; class  BaseMatrixLinearOpPMulV;  ; class  BaseMatrixLinearOpMulTV;  ; class  BaseMatrixLinearOpPMulTV;  ; struct  BaseMatrixLinearOpAM_BlockSparse;  ; struct  BaseMatrixLinearOpAMS_BlockSparse;  ; struct  BaseMatrixLinearOpAM1_BlockSparse;  ; class  BaseMatrixLinearOpAM;  ; class  BaseMatrixLinearOpAddM;  ; class  BaseMatrixLinearOpAddMT;  ; class  BaseMatrix;  ; class  BaseVector;  ; class  BlockDiagonalMatrix;  Simple full matrix container. More...;  ; class  BlockFullMatrix;  Simple block full matrix container (used for InvMatrixType) More...;  ; class  BlockVector;  ; class  BTDMatrix;  Simple BTD matrix container. More...;  ; class  CRSConstraintPolicy;  ; class  CompressedRowSparseMatrixConstraint;  ; struct  CompressedRowSparseMatrixToEigenSparse;  ; struct  CompressedRowSparseMatrixToEigenSparseVec;  ; struct  CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >;  ; struct  EigenSparseToCompressedRowSparseMatrix;  ; struct  EigenSparseToCompressedRowSparseMatrixVec;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; struct  CRSBlockTraits;  Traits class which defines the containers to use for a given type of block. More...;  ; struct  CRSDefaultPolicy;  ; class  CompressedRowSparseMatrixGeneric;  ; clas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:194,Variab,Variables,194,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html,1,['Variab'],['Variables']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BTDMatrix< N, T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::BTDMatrix< N, T > Class Template Reference . #include <BTDMatrix.h>; Simple BTD matrix container. ; More... Inheritance diagram for sofa::linearalgebra::BTDMatrix< N, T >:. [legend]; Detailed Description; template<std::size_t N, typename T>; class sofa::linearalgebra::BTDMatrix< N, T >; Simple BTD matrix container. . Classes; class  Block;  ; class  TransposedBlock;  . Protected Attributes; Block * data;  ; Index nTRow;  ; Index nTCol;  ; Index nBRow;  ; Index nBCol;  ; Index allocsize;  . Public Member Functions;  BTDMatrix ();  ;  BTDMatrix (Index nbRow, Index nbCol);  ;  ~BTDMatrix () override;  ; Block * ptr ();  ; const Block * ptr () const;  ; const Block & bloc (Index bi, Index bj) const;  ; Block & bloc (Index bi, Index bj);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; const Block & asub (Index bi, Index bj, Index, Index) const;  ; const Block & sub (Index i, Index j, Index, Index) const;  ; Block & asub (Index bi, Index bj, Index, Index);  ; Block & sub (Index i, Index j, Index, Index);  ; template<class B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:399,Inherit,Inheritance,399,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BTDMatrix< N, T >::Block Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::linearalgebra::BTDMatrix< N, T >::Block Class Reference . #include <BTDMatrix.h>. Inheritance diagram for sofa::linearalgebra::BTDMatrix< N, T >::Block:. [legend]. Public Member Functions; Index Nrows () const;  ; Index Ncols () const;  ; void resize (Index, Index);  ; const T & element (Index i, Index j) const;  ; void set (Index i, Index j, const T &v);  ; void add (Index i, Index j, const T &v);  ; void operator= (const type::Mat< BSIZE, BSIZE, Real > &v);  ; type::Mat< BSIZE, BSIZE, Real > operator- () const;  ; type::Mat< BSIZE, BSIZE, Real > operator- (const type::Mat< BSIZE, BSIZE, Real > &m) const;  ; type::Vec< BSIZE, Real > operator* (const type::Vec< BSIZE, Real > &v);  ; type::Mat< BSIZE, BSIZE, Real > operator* (const type::Mat< BSIZE, BSIZE, Real > &m);  ; type::Mat< BSIZE, BSIZE, Real > operator* (const TransposedBlock &mt);  ; TransposedBlock t () const;  ; Block i () const;  ;  Public Member Functions inherited from sofa::type::Mat< BSIZE, BSIZE, Real >; constexpr Mat () noexcept=default;  ; constexpr Mat (NoInit) noexcept;  ; constexpr Mat (std::initializer_list< Real > &&scalars) noexcept;  ; constexpr Mat (std::initializer_list< std::initializer_list< Real >> &&rows) noexcept;  ; constexpr Mat (ArgsT &&... r) noexcept;  ; constexpr Mat (const Real &v) noexcept;  Constructor from an element. More...;  ; constexpr Mat (const Mat< L, C, real2 > &m) noexcept;  Constructor from another matrix. More...;  ; constexpr Mat (const Mat< L2, C2, real2 > &m) noexcept;  Constructor from another matrix with different size (with null default entries and ignoring outside entries) More...;  ; constexpr Mat (const real2 *p) noexcept;  Constructor from an array of elements (stored per line). More...;  ; constexpr Size getNbLines () const;  number of lines More...;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix_1_1_block.html:1137,inherit,inherited,1137,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix_1_1_block.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix_1_1_block.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseMatrix Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; Friends |; List of all members . sofa::linearalgebra::BaseMatrix Class Referenceabstract . #include <BaseMatrix.h>. Inheritance diagram for sofa::linearalgebra::BaseMatrix:. [legend]; Detailed Description; Generic matrix API, allowing to fill and use a matrix independently of the linear algebra library in use.; Note that accessing values using this class is rather slow and should only be used in codes where the provided genericity is necessary. . Classes; class  BlockAccessor;  ; class  BlockConstAccessor;  ; class  ColBlockConstIterator;  ; class  InternalBlockAccessor;  ; class  InternalColBlockIterator;  ; class  InternalRowBlockIterator;  ; class  RowBlockConstIterator;  . Public Member Functions;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; virtual Index rowSize (void) const =0;  Number of rows. More...;  ; virtual Index colSize (void) const =0;  Number of columns. More...;  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; virtual SReal element (Index i, Index j) const =0;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void resize (Index nbRow, Index nbCol)=0;  Resize the matrix and reset all values to 0. More...;  ; virtual void clear ()=0;  Reset all values to 0. More...;  ; virtual void set (Index i, Index j, double v)=0;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, I",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:290,Inherit,Inheritance,290,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseMatrixLinearOpAM< transpose > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::BaseMatrixLinearOpAM< transpose > Class Template Reference . Inheritance diagram for sofa::linearalgebra::BaseMatrixLinearOpAM< transpose >:. [legend]. Static Public Member Functions; template<class M1 , class M2 > ; static void opFull (const M1 *m1, M2 *m2, double fact);  ; template<class M1 , class M2 > ; static void opIdentity (const M1 *m1, M2 *m2, double fact);  ; template<int NL, int NC, class M1 , class M2 > ; static void opDiagonal (const M1 *m1, M2 *m2, double fact);  ; template<class Real , class M1 , class M2 > ; static void opDynamicRealDefault (const M1 *m1, M2 *m2, double fact, Index NL, Index NC, BaseMatrix::MatrixCategory);  ; template<class Real , int NL, int NC, class M1 , class M2 > ; static void opDynamicRealNLNC (const M1 *m1, M2 *m2, double fact, BaseMatrix::MatrixCategory);  ; template<class Real , class M1 , class M2 > ; static void opDynamicReal1 (const M1 *m1, M2 *m2, double fact, BaseMatrix::MatrixCategory);  ; template<class Real , int NL, class M1 , class M2 > ; static void opDynamicRealNL (const M1 *m1, M2 *m2, double fact, Index NC, BaseMatrix::MatrixCategory category);  ; template<class Real , class M1 , class M2 > ; static void opDynamicReal (const M1 *m1, M2 *m2, double fact, Index NL, Index NC, BaseMatrix::MatrixCategory category);  ; template<class M1 , class M2 > ; static void opDynamic (const M1 *m1, M2 *m2, double fact);  . Function details. ◆ opDiagonal(). template<bool transpose> . template<int NL, int NC, class M1 , class M2 > . static void sofa::linearalgebra::BaseMatrixLinearOpAM< transpose >::opDiagonal ; (; const M1 * ; m1, . M2 * ; m2, . double ; fact . ). inlinestatic . ◆ opDynamic(). template<bool transpose> . template<class M1 , class M2 > . static void sofa::linearalgebra::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m.html:306,Inherit,Inheritance,306,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_a_m.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseMatrixLinearOpAddM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::BaseMatrixLinearOpAddM Class Reference . Inheritance diagram for sofa::linearalgebra::BaseMatrixLinearOpAddM:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::linearalgebra::BaseMatrixLinearOpAM< false >; static void opFull (const M1 *m1, M2 *m2, double fact);  ; static void opIdentity (const M1 *m1, M2 *m2, double fact);  ; static void opDiagonal (const M1 *m1, M2 *m2, double fact);  ; static void opDynamicRealDefault (const M1 *m1, M2 *m2, double fact, Index NL, Index NC, BaseMatrix::MatrixCategory);  ; static void opDynamicRealNLNC (const M1 *m1, M2 *m2, double fact, BaseMatrix::MatrixCategory);  ; static void opDynamicReal1 (const M1 *m1, M2 *m2, double fact, BaseMatrix::MatrixCategory);  ; static void opDynamicRealNL (const M1 *m1, M2 *m2, double fact, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamicReal (const M1 *m1, M2 *m2, double fact, Index NL, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamic (const M1 *m1, M2 *m2, double fact);  . sofalinearalgebraBaseMatrixLinearOpAddM; Generated on Mon Nov 11 2024 03:31:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_add_m.html:374,inherit,inherited,374,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_add_m.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_add_m.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseMatrixLinearOpAddMT Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::BaseMatrixLinearOpAddMT Class Reference . Inheritance diagram for sofa::linearalgebra::BaseMatrixLinearOpAddMT:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::linearalgebra::BaseMatrixLinearOpAM< true >; static void opFull (const M1 *m1, M2 *m2, double fact);  ; static void opIdentity (const M1 *m1, M2 *m2, double fact);  ; static void opDiagonal (const M1 *m1, M2 *m2, double fact);  ; static void opDynamicRealDefault (const M1 *m1, M2 *m2, double fact, Index NL, Index NC, BaseMatrix::MatrixCategory);  ; static void opDynamicRealNLNC (const M1 *m1, M2 *m2, double fact, BaseMatrix::MatrixCategory);  ; static void opDynamicReal1 (const M1 *m1, M2 *m2, double fact, BaseMatrix::MatrixCategory);  ; static void opDynamicRealNL (const M1 *m1, M2 *m2, double fact, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamicReal (const M1 *m1, M2 *m2, double fact, Index NL, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamic (const M1 *m1, M2 *m2, double fact);  . sofalinearalgebraBaseMatrixLinearOpAddMT; Generated on Mon Nov 11 2024 03:31:06 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_add_m_t.html:377,inherit,inherited,377,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_add_m_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_add_m_t.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseMatrixLinearOpMV< add, transpose > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::BaseMatrixLinearOpMV< add, transpose > Class Template Reference . Inheritance diagram for sofa::linearalgebra::BaseMatrixLinearOpMV< add, transpose >:. [legend]. Static Public Member Functions; template<class M , class V1 , class V2 > ; static void opFull (const M *mat, V1 &result, const V2 &v);  ; template<class M , class V1 , class V2 > ; static void opIdentity (const M *mat, V1 &result, const V2 &v);  ; template<int NL, int NC, class M , class V1 , class V2 > ; static void opDiagonal (const M *mat, V1 &result, const V2 &v);  ; template<class Real , class M , class V1 , class V2 > ; static void opDynamicRealDefault (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory);  ; template<class Real , int NL, int NC, class M , class V1 , class V2 > ; static void opDynamicRealNLNC (const M *mat, V1 &result, const V2 &v, BaseMatrix::MatrixCategory category);  ; template<class Real , int NL, class M , class V1 , class V2 > ; static void opDynamicRealNL (const M *mat, V1 &result, const V2 &v, Index NC, BaseMatrix::MatrixCategory category);  ; template<class Real , class M , class V1 , class V2 > ; static void opDynamicReal (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory category);  ; template<class M , class V1 , class V2 > ; static void opDynamic (const M *mat, V1 &result, const V2 &v);  . Function details. ◆ opDiagonal(). template<bool add, bool transpose> . template<int NL, int NC, class M , class V1 , class V2 > . static void sofa::linearalgebra::BaseMatrixLinearOpMV< add, transpose >::opDiagonal ; (; const M * ; mat, . V1 & ; result, . const V2 & ; v . ). inlinestatic . ◆ opDynamic(). template<bool add, bool transpose> . template<class M , class V1 , clas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v.html:316,Inherit,Inheritance,316,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_m_v.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseMatrixLinearOpMulTV Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::BaseMatrixLinearOpMulTV Class Reference . Inheritance diagram for sofa::linearalgebra::BaseMatrixLinearOpMulTV:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::linearalgebra::BaseMatrixLinearOpMV< false, true >; static void opFull (const M *mat, V1 &result, const V2 &v);  ; static void opIdentity (const M *mat, V1 &result, const V2 &v);  ; static void opDiagonal (const M *mat, V1 &result, const V2 &v);  ; static void opDynamicRealDefault (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory);  ; static void opDynamicRealNLNC (const M *mat, V1 &result, const V2 &v, BaseMatrix::MatrixCategory category);  ; static void opDynamicRealNL (const M *mat, V1 &result, const V2 &v, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamicReal (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamic (const M *mat, V1 &result, const V2 &v);  . sofalinearalgebraBaseMatrixLinearOpMulTV; Generated on Mon Nov 11 2024 03:31:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_mul_t_v.html:377,inherit,inherited,377,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_mul_t_v.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_mul_t_v.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseMatrixLinearOpMulV Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::BaseMatrixLinearOpMulV Class Reference . Inheritance diagram for sofa::linearalgebra::BaseMatrixLinearOpMulV:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::linearalgebra::BaseMatrixLinearOpMV< false, false >; static void opFull (const M *mat, V1 &result, const V2 &v);  ; static void opIdentity (const M *mat, V1 &result, const V2 &v);  ; static void opDiagonal (const M *mat, V1 &result, const V2 &v);  ; static void opDynamicRealDefault (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory);  ; static void opDynamicRealNLNC (const M *mat, V1 &result, const V2 &v, BaseMatrix::MatrixCategory category);  ; static void opDynamicRealNL (const M *mat, V1 &result, const V2 &v, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamicReal (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamic (const M *mat, V1 &result, const V2 &v);  . sofalinearalgebraBaseMatrixLinearOpMulV; Generated on Mon Nov 11 2024 03:31:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_mul_v.html:374,inherit,inherited,374,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_mul_v.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_mul_v.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseMatrixLinearOpPMulTV Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::BaseMatrixLinearOpPMulTV Class Reference . Inheritance diagram for sofa::linearalgebra::BaseMatrixLinearOpPMulTV:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::linearalgebra::BaseMatrixLinearOpMV< true, true >; static void opFull (const M *mat, V1 &result, const V2 &v);  ; static void opIdentity (const M *mat, V1 &result, const V2 &v);  ; static void opDiagonal (const M *mat, V1 &result, const V2 &v);  ; static void opDynamicRealDefault (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory);  ; static void opDynamicRealNLNC (const M *mat, V1 &result, const V2 &v, BaseMatrix::MatrixCategory category);  ; static void opDynamicRealNL (const M *mat, V1 &result, const V2 &v, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamicReal (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamic (const M *mat, V1 &result, const V2 &v);  . sofalinearalgebraBaseMatrixLinearOpPMulTV; Generated on Mon Nov 11 2024 03:31:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_p_mul_t_v.html:380,inherit,inherited,380,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_p_mul_t_v.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_p_mul_t_v.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseMatrixLinearOpPMulV Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::BaseMatrixLinearOpPMulV Class Reference . Inheritance diagram for sofa::linearalgebra::BaseMatrixLinearOpPMulV:. [legend]. Additional Inherited Members;  Static Public Member Functions inherited from sofa::linearalgebra::BaseMatrixLinearOpMV< true, false >; static void opFull (const M *mat, V1 &result, const V2 &v);  ; static void opIdentity (const M *mat, V1 &result, const V2 &v);  ; static void opDiagonal (const M *mat, V1 &result, const V2 &v);  ; static void opDynamicRealDefault (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory);  ; static void opDynamicRealNLNC (const M *mat, V1 &result, const V2 &v, BaseMatrix::MatrixCategory category);  ; static void opDynamicRealNL (const M *mat, V1 &result, const V2 &v, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamicReal (const M *mat, V1 &result, const V2 &v, Index NL, Index NC, BaseMatrix::MatrixCategory category);  ; static void opDynamic (const M *mat, V1 &result, const V2 &v);  . sofalinearalgebraBaseMatrixLinearOpPMulV; Generated on Mon Nov 11 2024 03:31:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_p_mul_v.html:377,inherit,inherited,377,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_p_mul_v.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_linear_op_p_mul_v.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BaseVector Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::linearalgebra::BaseVector Class Referenceabstract . #include <BaseVector.h>. Inheritance diagram for sofa::linearalgebra::BaseVector:. [legend]; Detailed Description; Generic vector API, allowing to fill and use a vector independently of the linear algebra library in use.; Note that accessing values using this class is rather slow and should only be used in codes where the provided genericity is necessary. . Public Member Functions; virtual ~BaseVector ();  ; virtual Index size (void) const =0;  Number of elements. More...;  ; virtual SReal element (Index i) const =0;  Read the value of element i. More...;  ; virtual void resize (Index dim)=0;  Resize the vector, and reset all values to 0. More...;  ; virtual void clear ()=0;  Reset all values to 0. More...;  ; virtual void set (Index i, SReal v)=0;  Write the value of element i. More...;  ; virtual void add (Index i, SReal v)=0;  Add v to the existing value of element i. More...;  ; virtual const float * elements (Index i0, Index n, float *src) const;  Get the values of n elements, starting at element i0, into given float buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const double * elements (Index i0, Index n, double *src) const;  Get the values of n elements, starting at element i0, into given double buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const int * elements (Index i0, Index n, int *src) const;  Get the values of n elements, starting at element i0, into given int buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual void set (Index i0, Index n, const float *src);  Write the values of n float elements, starting at element i0. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html:309,Inherit,Inheritance,309,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BlockDiagonalMatrix< LC, T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::linearalgebra::BlockDiagonalMatrix< LC, T > Class Template Reference . #include <BlockDiagonalMatrix.h>; Simple full matrix container. ; More... Inheritance diagram for sofa::linearalgebra::BlockDiagonalMatrix< LC, T >:. [legend]; Detailed Description; template<std::size_t LC, typename T = SReal>; class sofa::linearalgebra::BlockDiagonalMatrix< LC, T >; Simple full matrix container. . Protected Attributes; std::vector< Block > data;  ; sofa::Index cSize;  . Public Member Functions;  BlockDiagonalMatrix ();  ;  ~BlockDiagonalMatrix () override;  ; void resize (Index nbRow, Index) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; Index rowBSize (void) const;  ; Index colBSize (void) const;  ; const Block & bloc (Index i) const;  ; const Block & bloc (Index i, Index j) const;  ; Block * wbloc (Index i);  ; Block * wbloc (Index i, Index j);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setB (Index i, const Block &b);  ; void setB (Index i, Index j, const Block &b);  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void addB (Index i, const Block &b);  ; void addB (Index i, Index j, const Block &b);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:432,Inherit,Inheritance,432,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BlockFullMatrix< N, T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::BlockFullMatrix< N, T > Class Template Reference . #include <BlockFullMatrix.h>; Simple block full matrix container (used for InvMatrixType) ; More... Inheritance diagram for sofa::linearalgebra::BlockFullMatrix< N, T >:. [legend]; Detailed Description; template<std::size_t N, typename T>; class sofa::linearalgebra::BlockFullMatrix< N, T >; Simple block full matrix container (used for InvMatrixType) . Classes; class  Block;  ; class  TransposedBlock;  . Protected Attributes; Block * data;  ; Index nTRow;  ; Index nTCol;  ; Index nBRow;  ; Index nBCol;  ; Index allocsize;  . Public Member Functions;  BlockFullMatrix ();  ;  BlockFullMatrix (Index nbRow, Index nbCol);  ;  ~BlockFullMatrix () override;  ; Block * ptr ();  ; const Block * ptr () const;  ; const Block & bloc (Index bi, Index bj) const;  ; Block & bloc (Index bi, Index bj);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; const Block & asub (Index bi, Index bj, Index, Index) const;  ; const Block & sub (Index i, Index j, Index, Index) const;  ; Block & asub (Index bi, Index bj, Index, Index);  ; Block & sub (Index i, Index j, Index, Index);  ; template<class B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:448,Inherit,Inheritance,448,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BlockFullMatrix< N, T >::Block Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::linearalgebra::BlockFullMatrix< N, T >::Block Class Reference . #include <BlockFullMatrix.h>. Inheritance diagram for sofa::linearalgebra::BlockFullMatrix< N, T >::Block:. [legend]. Public Member Functions; Index Nrows () const;  ; Index Ncols () const;  ; void resize (Index, Index);  ; const T & element (Index i, Index j) const;  ; void set (Index i, Index j, const T &v);  ; void add (Index i, Index j, const T &v);  ; void operator= (const type::Mat< BSIZE, BSIZE, Real > &v);  ; type::Mat< BSIZE, BSIZE, Real > operator- () const;  ; type::Mat< BSIZE, BSIZE, Real > operator- (const type::Mat< BSIZE, BSIZE, Real > &m) const;  ; type::Vec< BSIZE, Real > operator* (const type::Vec< BSIZE, Real > &v);  ; type::Mat< BSIZE, BSIZE, Real > operator* (const type::Mat< BSIZE, BSIZE, Real > &m);  ; type::Mat< BSIZE, BSIZE, Real > operator* (const Block &m);  ; type::Mat< BSIZE, BSIZE, Real > operator* (const TransposedBlock &mt);  ; TransposedBlock t () const;  ; Block i () const;  ;  Public Member Functions inherited from sofa::type::Mat< BSIZE, BSIZE, Real >; constexpr Mat () noexcept=default;  ; constexpr Mat (NoInit) noexcept;  ; constexpr Mat (std::initializer_list< Real > &&scalars) noexcept;  ; constexpr Mat (std::initializer_list< std::initializer_list< Real >> &&rows) noexcept;  ; constexpr Mat (ArgsT &&... r) noexcept;  ; constexpr Mat (const Real &v) noexcept;  Constructor from an element. More...;  ; constexpr Mat (const Mat< L, C, real2 > &m) noexcept;  Constructor from another matrix. More...;  ; constexpr Mat (const Mat< L2, C2, real2 > &m) noexcept;  Constructor from another matrix with different size (with null default entries and ignoring outside entries) More...;  ; constexpr Mat (const real2 *p) noexcept;  Constructor from an array of elements (stored",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix_1_1_block.html:1224,inherit,inherited,1224,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix_1_1_block.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix_1_1_block.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BlockVector< N, T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::linearalgebra::BlockVector< N, T > Class Template Reference . #include <BlockVector.h>. Inheritance diagram for sofa::linearalgebra::BlockVector< N, T >:. [legend]. Classes; class  Block;  . Public Member Functions;  BlockVector ();  ;  BlockVector (Index n);  ; virtual ~BlockVector ();  ; const Block & sub (Index i, Index) const;  ; Block & sub (Index i, Index);  ; const Block & asub (Index bi, Index) const;  ; Block & asub (Index bi, Index);  ;  Public Member Functions inherited from sofa::linearalgebra::FullVector< T >;  FullVector ();  ;  FullVector (const FullVector &vect);  ;  FullVector (Index n);  ;  FullVector (T *ptr, Index n);  ;  FullVector (T *ptr, Index n, Index nmax);  ;  ~FullVector () override;  ; T * ptr ();  ; const T * ptr () const;  ; void setptr (T *p);  ; Index capacity () const;  ; Iterator begin ();  ; Iterator end ();  ; ConstIterator begin () const;  ; ConstIterator end () const;  ; void fastResize (Index dim);  ; void resize (Index dim) override;  Resize the vector, and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void swap (FullVector< T > &v);  ; void clear (Index dim) override;  Reset the value of element i to 0. More...;  ; T & operator[] (Index i);  ; const T & operator[] (Index i) const;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; Index size () const override;  Number of elements. More...;  ; FullVector< T > sub (Index i, Index n);  ; template<class TV > ; void getsub (Index i, Index n, TV &v);  ; template<class TV > ; void setsub (Index i, Index n, const TV",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html:696,inherit,inherited,696,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::BlockVector< N, T >::Block Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::linearalgebra::BlockVector< N, T >::Block Class Reference . #include <BlockVector.h>. Inheritance diagram for sofa::linearalgebra::BlockVector< N, T >::Block:. [legend]. Public Member Functions; Index Nrows () const;  ; void resize (Index);  ; void operator= (const type::Vec< N, T > &v);  ; void operator= (int v);  ; void operator= (float v);  ; void operator= (double v);  ;  Public Member Functions inherited from sofa::type::Vec< N, T >; constexpr Vec ()=default;  Default constructor: sets all values to 0. More...;  ; constexpr Vec (NoInit);  Fast constructor: no initialization. More...;  ; constexpr Vec (const T r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr Vec (ArgsT &&... r) noexcept;  ;  Vec (const Vec< 3, R > &a, const Vec< 3, T > &b);  Specific constructor for 6-elements vectors, taking two 3-elements vectors. More...;  ; constexpr Vec (const Vec< N-1, T > &v, T r1) noexcept;  Constructor from an N-1 elements vector and an additional value (added at the end). More...;  ; constexpr Vec (const sofa::type::fixed_array< T, N > &p) noexcept;  ; constexpr Vec (const Vec< N2, real2 > &v) noexcept;  Constructor from a different size vector (null default value and ignoring outside entries) More...;  ; constexpr Vec (const Vec< N, real2 > &p) noexcept;  ; constexpr Vec (const real2 *p) noexcept;  Constructor from an array of values. More...;  ; constexpr void set (const T r1) noexcept;  Specific set function for 1-element vectors. More...;  ; constexpr void set (const ArgsT... r) noexcept;  ; constexpr void set (const Vec< N2, real2 > &v, T defaultvalue=0) noexcept;  Specific set from a different size vector (given default value and ignored outside entries) More...;  ; constexpr T & x () noexcept;  Special access to first element. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block.html:610,inherit,inherited,610,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CRSConstraintPolicy Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; List of all members . sofa::linearalgebra::CRSConstraintPolicy Class Reference . #include <CompressedRowSparseMatrixConstraint.h>. Inheritance diagram for sofa::linearalgebra::CRSConstraintPolicy:. [legend]; Detailed Description; Constraint policy type, showing the types and flags to give to CompressedRowSparseMatrix for its second template type. The default values correspond to the original implementation. . Static Public Attributes; static constexpr bool AutoSize = true;  ; static constexpr bool AutoCompress = true;  ; static constexpr bool CompressZeros = false;  ; static constexpr bool ClearByZeros = false;  ; static constexpr bool OrderedInsertion = false;  ; static constexpr int matrixType = 2;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_constraint_policy.html:912,inherit,inherited,912,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_constraint_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_constraint_policy.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CRSDefaultPolicy Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; List of all members . sofa::linearalgebra::CRSDefaultPolicy Struct Reference . #include <CompressedRowSparseMatrixGeneric.h>. Inheritance diagram for sofa::linearalgebra::CRSDefaultPolicy:. [legend]. Static Public Attributes; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoCompress = true. staticconstexpr . Set to true if the matrix should be automatically compressed (easier to use, but migh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html:297,Inherit,Inheritance,297,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CRSMechanicalPolicy Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; List of all members . sofa::linearalgebra::CRSMechanicalPolicy Class Reference . #include <CompressedRowSparseMatrixMechanical.h>. Inheritance diagram for sofa::linearalgebra::CRSMechanicalPolicy:. [legend]; Detailed Description; Mechanical policy type, showing the types and flags to give to CompressedRowSparseMatrixMechanical for its second template type. . Static Public Attributes; static constexpr bool CompressZeros = false;  ; static constexpr bool IsAlwaysSquare = true;  ; static constexpr bool IsAlwaysSymmetric = true;  ; static constexpr bool OrderedInsertion = false;  ; static constexpr bool StoreLowerTriangularBlock = true;  ; static constexpr int matrixType = 1;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line inde",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_mechanical_policy.html:883,inherit,inherited,883,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_mechanical_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_mechanical_policy.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy > Class Template Reference . #include <CompressedRowSparseMatrixConstraint.h>. Inheritance diagram for sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >:. [legend]. Classes; class  ColConstIterator;  Row Sparse Matrix columns constant Iterator to match with constraint matrix manipulation. More...;  ; class  RowConstIterator;  ; class  RowType;  ; class  RowWriteAccessor;  . Static Public Attributes; static constexpr Index s_invalidIndex = std::is_signed_v<Index> ? std::numeric_limits<Index>::lowest() : std::numeric_limits<Index>::max();  ; static constexpr sofa::Index NL = CRSMatrix::NL;  Number of rows of a block. More...;  ; static constexpr sofa::Index NC = CRSMatrix::NC;  Number of columns of a block. More...;  ;  Static Public Attributes inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; static constexpr sofa::Index NL;  Number of rows of a block. More...;  ; static constexpr sofa::Index NC;  Number of columns of a block. More...;  ; static constexpr Index s_invalidIndex;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSConstraintPolicy; static constexpr bool AutoSize = true;  ; static constexpr bool AutoCompress = true;  ; static constexpr bool CompressZeros = false;  ; static constexpr bool ClearByZeros = false;  ; static constexpr bool OrderedInsertion = false;  ; static constexpr int matrixType = 2;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:475,Inherit,Inheritance,475,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >::RowType Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >::RowType Class Reference . #include <CompressedRowSparseMatrixConstraint.h>. Inheritance diagram for sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >::RowType:. [legend]. Public Member Functions;  RowType (ColConstIterator begin, ColConstIterator end);  ; ColConstIterator begin () const;  ; ColConstIterator end () const;  ; ColConstIterator cbegin () const;  ; ColConstIterator cend () const;  ; void setBegin (ColConstIterator i);  ; void setEnd (ColConstIterator i);  ; bool empty () const;  ; Index size () const;  ; void operator++ ();  ; void operator++ (int);  ; ColConstIterator find (Index col) const;  . Constructor details. ◆ RowType(). template<typename TBlock , typename TPolicy = CRSConstraintPolicy> . sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >::RowType::RowType ; (; ColConstIterator ; begin, . ColConstIterator ; end . ). inline . Function details. ◆ begin(). template<typename TBlock , typename TPolicy = CRSConstraintPolicy> . ColConstIterator sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >::RowType::begin ; (; ); const. inline . ◆ cbegin(). template<typename TBlock , typename TPolicy = CRSConstraintPolicy> . ColConstIterator sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >::RowType::cbegin ; (; ); const. inline . ◆ cend(). template<typename TBlock , typename TPolicy = CRSConstraintPolicy> . ColConstIterator sofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >::RowType::cend ; (; ); const. inline . ◆ empty(). template<typename TBlock , typename TPolicy = CRSConstraintPolicy> . bool sofa::linearalgebra::CompressedRowSp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint_1_1_row_type.html:391,Inherit,Inheritance,391,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint_1_1_row_type.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint_1_1_row_type.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy > Class Template Reference . #include <CompressedRowSparseMatrixGeneric.h>. Inheritance diagram for sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >:. [legend]. Classes; struct  IndexedBlock;  ; class  Range;  . Public Attributes; Index nBlockRow;  Size. More...;  ; Index nBlockCol;  Mathematical size of the matrix, in blocks. More...;  ; VecIndex rowIndex;  Compressed sparse data structure. More...;  ; VecIndex rowBegin;  column indices of non-empty blocks in each row. The column indices of the non-empty block within the i-th non-empty row are all the colsIndex[j], j in [rowBegin[i],rowBegin[i+1]) More...;  ; VecIndex colsIndex;  column indices of all the non-empty blocks, sorted by increasing row index and column index More...;  ; VecBlock colsValue;  values of the non-empty blocks, in the same order as in colsIndex More...;  ; VecFlag touchedBlock;  boolean vector, i-th value is true if block has been touched since last compression. More...;  ; VecIndexedBlock btemp;  Additional storage to make block insertion more efficient. More...;  ; bool skipCompressZero;  ; VecIndex oldRowIndex;  Temporary vectors used during compression. More...;  ; VecIndex oldRowBegin;  ; VecIndex oldColsIndex;  ; VecBlock oldColsValue;  . Static Public Attributes; static constexpr sofa::Index NL = traits::NL;  Number of rows of a block. More...;  ; static constexpr sofa::Index NC = traits::NC;  Number of columns of a block. More...;  ; static constexpr Index s_invalidIndex = std::is_signed_v<Index> ? std::numeric_limits<Index>::lowest() : std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:506,Inherit,Inheritance,506,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::Range Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::Range Class Reference . #include <CompressedRowSparseMatrixGeneric.h>. Inheritance diagram for sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::Range:. [legend]. Public Member Functions;  Range ();  ;  Range (Index begin, Index end);  ; Index begin () const;  ; Index end () const;  ; void setBegin (Index i);  ; void setEnd (Index i);  ; bool empty () const;  ; Index size () const;  ; VecBlock::iterator begin (VecBlock &b) const;  ; VecBlock::iterator end (VecBlock &b) const;  ; VecBlock::const_iterator begin (const VecBlock &b) const;  ; VecBlock::const_iterator end (const VecBlock &b) const;  ; VecIndex::iterator begin (VecIndex &b) const;  ; VecIndex::iterator end (VecIndex &b) const;  ; VecIndex::const_iterator begin (const VecIndex &b) const;  ; VecIndex::const_iterator end (const VecIndex &b) const;  ; void operator++ ();  ; void operator++ (int);  ; bool isInvalid () const;  . Constructor details. ◆ Range() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::Range::Range ; (; ). inline . ◆ Range() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::Range::Range ; (; Index ; begin, . Index ; end . ). inline . Function details. ◆ begin() [1/5]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::Range::begin ; (; ); const. inline . ◆ begin() [2/5]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . VecBlock::const_iterator sofa::linearalgebra::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic_1_1_range.html:378,Inherit,Inheritance,378,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic_1_1_range.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic_1_1_range.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy > Class Template Referencefinal . #include <CompressedRowSparseMatrixMechanical.h>. Inheritance diagram for sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >:. [legend]. Public Attributes; Index nRow;  Size. More...;  ; Index nCol;  Mathematical size of the matrix, in scalars. More...;  ;  Public Attributes inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; Index nBlockRow;  Size. More...;  ; Index nBlockCol;  Mathematical size of the matrix, in blocks. More...;  ; VecIndex rowIndex;  Compressed sparse data structure. More...;  ; VecIndex rowBegin;  column indices of non-empty blocks in each row. The column indices of the non-empty block within the i-th non-empty row are all the colsIndex[j], j in [rowBegin[i],rowBegin[i+1]) More...;  ; VecIndex colsIndex;  column indices of all the non-empty blocks, sorted by increasing row index and column index More...;  ; VecBlock colsValue;  values of the non-empty blocks, in the same order as in colsIndex More...;  ; VecFlag touchedBlock;  boolean vector, i-th value is true if block has been touched since last compression. More...;  ; VecIndexedBlock btemp;  Additional storage to make block insertion more efficient. More...;  ; bool skipCompressZero;  ; VecIndex oldRowIndex;  Temporary vectors used during compression. More...;  ; VecIndex oldRowBegin;  ; VecIndex oldColsIndex;  ; VecBlock oldColsValue;  . Static Public Attributes; static constexpr sofa::Index NL = traits::NL;  Number of rows of a block. More...;  ; static constexpr sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:760,inherit,inherited,760,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > > Struct Template Reference . #include <CompressedRowSparseMatrixConstraintEigenUtils.h>. Inheritance diagram for sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< sofa::type::Vec< N, Real > >; EigenSparseMatrix operator() (const TCompressedRowSparseMatrix &mat, std::size_t size) const;  ; EigenSparseMatrix operator() (const TCompressedRowSparseMatrix &mat) const;  . sofalinearalgebraCompressedRowSparseMatrixToEigenSparse< sofa::type::Vec< N, Real > >; Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_6001f0e8f5d8205bafac5021aa729dce.html:585,inherit,inherited,585,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_6001f0e8f5d8205bafac5021aa729dce.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_3_01sofa_1_1type_1_6001f0e8f5d8205bafac5021aa729dce.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec > Struct Template Reference . #include <CompressedRowSparseMatrixConstraintEigenUtils.h>. Inheritance diagram for sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >:. [legend]. Public Member Functions; EigenSparseMatrix operator() (const TCompressedRowSparseMatrix &mat, std::size_t size) const;  ; EigenSparseMatrix operator() (const TCompressedRowSparseMatrix &mat) const;  . Function details. ◆ operator()() [1/2]. template<typename TVec > . EigenSparseMatrix sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >::operator() ; (; const TCompressedRowSparseMatrix & ; mat); const. inline . ◆ operator()() [2/2]. template<typename TVec > . EigenSparseMatrix sofa::linearalgebra::CompressedRowSparseMatrixToEigenSparseVec< TVec >::operator() ; (; const TCompressedRowSparseMatrix & ; mat, . std::size_t ; size . ); const. inline . sofalinearalgebraCompressedRowSparseMatrixToEigenSparseVec; Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_vec.html:393,Inherit,Inheritance,393,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_to_eigen_sparse_vec.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::DefaultMatrixInvertOp< op1, M1 > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::DefaultMatrixInvertOp< op1, M1 > Class Template Reference . Inheritance diagram for sofa::linearalgebra::DefaultMatrixInvertOp< op1, M1 >:. [legend]. sofalinearalgebraDefaultMatrixInvertOp; Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_default_matrix_invert_op.html:248,Inherit,Inheritance,248,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_default_matrix_invert_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_default_matrix_invert_op.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::DefaultMatrixProductOp< op1, op2, M1, M2 > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::DefaultMatrixProductOp< op1, op2, M1, M2 > Class Template Reference . Inheritance diagram for sofa::linearalgebra::DefaultMatrixProductOp< op1, op2, M1, M2 >:. [legend]. sofalinearalgebraDefaultMatrixProductOp; Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_default_matrix_product_op.html:268,Inherit,Inheritance,268,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_default_matrix_product_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_default_matrix_product_op.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::DiagonalMatrix< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::linearalgebra::DiagonalMatrix< T > Class Template Reference . #include <DiagonalMatrix.h>; Simple full matrix container. ; More... Inheritance diagram for sofa::linearalgebra::DiagonalMatrix< T >:. [legend]; Detailed Description; template<typename T>; class sofa::linearalgebra::DiagonalMatrix< T >; Simple full matrix container. . Protected Attributes; FullVector< T > data;  . Public Member Functions;  DiagonalMatrix ();  ;  DiagonalMatrix (Index nbRow, Index);  ;  DiagonalMatrix (Real *p, Index, Index);  ;  ~DiagonalMatrix () override;  ; Real * ptr ();  ; const Real * ptr () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; void resize (Index nbRow, Index) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:439,Inherit,Inheritance,439,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::EigenBaseSparseMatrix< TReal > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::EigenBaseSparseMatrix< TReal > Class Template Reference . #include <EigenBaseSparseMatrix.h>. Inheritance diagram for sofa::linearalgebra::EigenBaseSparseMatrix< TReal >:. [legend]; Detailed Description; template<class TReal>; class sofa::linearalgebra::EigenBaseSparseMatrix< TReal >; Sparse matrix based on the Eigen library.; An Eigen::SparseMatrix<Real, RowMajor> matrix is used to store the data in Compressed Row Storage mode. This matrix can not be accessed randomly. Two access modes are implemented.; The first access mode consists in inserting entries in increasing row, increasing column order. Method beginRow(Index index) must be called before any entry can be appended to row i. WarningbeginRow must be called even for empty rows Then insertBack(i,j,value) must be used in for increasing j. There is no need to explicitly end a row. Finally, method compress() must be called after the last entry has been inserted. This is the most efficient access mode.; The second access mode is randow access, but you access an auxiliary matrix. Method add is used to add a value at a given location. Method compress() is then used to transfer this data to the compressed matrix. There is no way to replace an entry, you can only add.; Rows, columns, or the full matrix can be set to zero using the clear* methods. . Public Attributes; CompressedMatrix compressedMatrix;  the compressed matrix More...;  . Protected Attributes; SimplicialCholesky cholesky;  used to factorize the matrix and solve systems using Cholesky method, for symmetric positive definite matrices only. More...;  . Public Member Functions;  EigenBaseSparseMatrix (Index nbRow=0, Index nbCol=0);  ;  EigenBaseSparse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:408,Inherit,Inheritance,408,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes > Class Template Reference . #include <EigenSparseMatrix.h>. Inheritance diagram for sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >:. [legend]; Detailed Description; template<class InDataTypes, class OutDataTypes>; class sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >; Variant of EigenBaseSparseMatrix, capable of block-view access. The blocks correspond to matrix blocks of the size of the DataTypes Deriv.; There are two ways of filling the matrix:; Random block access is provided by method wBlock. Use compress() after the last insertion.; Block rows can be efficiently appended using methods beginBlockRow, createBlock, endBlockRow. Use compress() after the last insertion. The rows must be created in increasing index order. The two ways of filling the matrix can not be used at the same time. . Classes; struct  map_traits;  . Protected Attributes; BlockMatMap incomingBlocks;  To store block-view data before it is compressed in optimized format. More...;  ;  Protected Attributes inherited from sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >; SimplicialCholesky cholesky;  used to factorize the matrix and solve systems using Cholesky method, for symmetric positive definite matrices only. More...;  . Public Member Functions;  EigenSparseMatrix (int nbRow=0, int nbCol=0);  ; void resizeBlocks (int nbBlockRows, int nbBlockCols);  Resize the matrix without preserving the data (the matrix is set to zero), with the size given in number of blocks. More...;  ; void addBlock (unsigned row, unsigned co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:493,Inherit,Inheritance,493,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > > Class Template Reference . #include <CompressedRowSparseMatrixConstraintEigenUtils.h>. Inheritance diagram for sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< sofa::defaulttype::RigidDeriv< N, Real > >; TCompressedRowSparseMatrix operator() (const EigenSparseMatrix &eigenMat);  . sofalinearalgebraEigenSparseToCompressedRowSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >; Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_3_01sofa_1_1defaultt0f4f61ab2a67e77212e747c4d2833f62.html:625,inherit,inherited,625,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_3_01sofa_1_1defaultt0f4f61ab2a67e77212e747c4d2833f62.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_3_01sofa_1_1defaultt0f4f61ab2a67e77212e747c4d2833f62.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > > Class Template Reference . #include <CompressedRowSparseMatrixConstraintEigenUtils.h>. Inheritance diagram for sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< sofa::type::Vec< N, Real > >; TCompressedRowSparseMatrix operator() (const EigenSparseMatrix &eigenMat);  . sofalinearalgebraEigenSparseToCompressedRowSparseMatrix< sofa::type::Vec< N, Real > >; Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_3_01sofa_1_1type_1_1f61c922078f11d08e0df3b973ac597d6.html:583,inherit,inherited,583,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_3_01sofa_1_1type_1_1f61c922078f11d08e0df3b973ac597d6.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_3_01sofa_1_1type_1_1f61c922078f11d08e0df3b973ac597d6.html,4,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,﻿. SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Struct Template Reference . #include <CompressedRowSparseMatrixConstraintEigenUtils.h>. Inheritance diagram for sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >:. [legend]. Public Member Functions; TCompressedRowSparseMatrix operator() (const EigenSparseMatrix &eigenMat);  . Function details. ◆ operator()(). template<typename TVec > . TCompressedRowSparseMatrix sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec >::operator() ; (; const EigenSparseMatrix & ; eigenMat). inline . sofalinearalgebraEigenSparseToCompressedRowSparseMatrixVec; Generated on Mon Nov 11 2024 03:31:22 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_vec.html:393,Inherit,Inheritance,393,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_eigen_sparse_to_compressed_row_sparse_matrix_vec.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::EigenVector< TReal, TBlockSize > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::linearalgebra::EigenVector< TReal, TBlockSize > Class Template Reference . #include <EigenVector.h>. Inheritance diagram for sofa::linearalgebra::EigenVector< TReal, TBlockSize >:. [legend]; Detailed Description; template<class TReal, std::size_t TBlockSize = 1>; class sofa::linearalgebra::EigenVector< TReal, TBlockSize >; Container of a vector of the Eigen library. Not an eigenvector of a matrix. . Protected Attributes; VectorEigen eigenVector;  the data More...;  . Public Member Functions; VectorEigen & getVectorEigen ();  ; const VectorEigen & getVectorEigen () const;  ;  EigenVector (Index nbRow=0);  ; Index size () const override;  Number of elements. More...;  ; void resize (Index nbRow) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; void resizeBlocks (Index nbBlocks);  Resize the matrix without preserving the data (the matrix is set to zero), with the size given in number of blocks. More...;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void setBlock (Index i, const Block &v);  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; void clear (Index i) override;  Reset the value of element i to 0. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; const std::string Name ();  ;  Public Member Functions inherited from sofa::linearalgebra::BaseVector; virtual ~BaseVector ();  ; virtual const float * elements (Index i0, Index n, float *src) const;  Get the values of n elements, starting at element i0, into given float buffer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html:392,Inherit,Inheritance,392,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::FullMatrix< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::FullMatrix< T > Class Template Reference . #include <FullMatrix.h>; Simple full matrix container. ; More... Inheritance diagram for sofa::linearalgebra::FullMatrix< T >:. [legend]; Detailed Description; template<typename T>; class sofa::linearalgebra::FullMatrix< T >; Simple full matrix container. . Classes; class  LineConstIterator;  ; class  LineIterator;  . Protected Attributes; Real * data;  ; Index nRow;  ; Index nCol;  ; Index pitch;  ; Index allocsize;  . Public Member Functions;  FullMatrix ();  ;  FullMatrix (Index nbRow, Index nbCol);  ;  FullMatrix (Real *p, Index nbRow, Index nbCol);  ;  FullMatrix (Real *p, Index nbRow, Index nbCol, Index pitch);  ;  ~FullMatrix () override;  ; Real * ptr ();  ; const Real * ptr () const;  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:397,Inherit,Inheritance,397,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::FullMatrix< T >::LineConstIterator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::linearalgebra::FullMatrix< T >::LineConstIterator Class Reference . #include <FullMatrix.h>. Inheritance diagram for sofa::linearalgebra::FullMatrix< T >::LineConstIterator:. [legend]. Public Attributes; Index first;  ; Line second;  . Public Member Functions;  LineConstIterator (Real *p, Index i, Index size, Index pitch);  ; const Line & operator* () const;  ; const Line * operator-> () const;  ; void operator++ ();  ; void operator++ (int);  ; void operator-- ();  ; void operator-- (int);  ; bool operator== (const LineConstIterator &i) const;  ; bool operator!= (const LineConstIterator &i) const;  . Attribute details. ◆ first. template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::LineConstIterator::first. ◆ second. template<typename T > . Line sofa::linearalgebra::FullMatrix< T >::LineConstIterator::second. Constructor details. ◆ LineConstIterator(). template<typename T > . sofa::linearalgebra::FullMatrix< T >::LineConstIterator::LineConstIterator ; (; Real * ; p, . Index ; i, . Index ; size, . Index ; pitch . ). inline . Function details. ◆ operator!=(). template<typename T > . bool sofa::linearalgebra::FullMatrix< T >::LineConstIterator::operator!= ; (; const LineConstIterator & ; i); const. inline . ◆ operator*(). template<typename T > . const Line& sofa::linearalgebra::FullMatrix< T >::LineConstIterator::operator* ; (; ); const. inline . ◆ operator++() [1/2]. template<typename T > . void sofa::linearalgebra::FullMatrix< T >::LineConstIterator::operator++ ; (; ). inline . ◆ operator++() [2/2]. template<typename T > . void sofa::linearalgebra::FullMatrix< T >::LineConstIterator::operator++ ; (; int ; ). inline . ◆ operator--() [1/2]. template<typename T > . void sofa::linearalgebra::FullMatrix< T >::LineConstIterator:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix_1_1_line_const_iterator.html:329,Inherit,Inheritance,329,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix_1_1_line_const_iterator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix_1_1_line_const_iterator.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::FullMatrix< T >::LineIterator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::linearalgebra::FullMatrix< T >::LineIterator Class Reference . #include <FullMatrix.h>. Inheritance diagram for sofa::linearalgebra::FullMatrix< T >::LineIterator:. [legend]. Public Member Functions;  LineIterator (Real *p, Index i, Index size, Index pitch);  ; Line & operator* ();  ; Line * operator-> ();  ;  Public Member Functions inherited from sofa::linearalgebra::FullMatrix< T >::LineConstIterator;  LineConstIterator (Real *p, Index i, Index size, Index pitch);  ; const Line & operator* () const;  ; const Line * operator-> () const;  ; void operator++ ();  ; void operator++ (int);  ; void operator-- ();  ; void operator-- (int);  ; bool operator== (const LineConstIterator &i) const;  ; bool operator!= (const LineConstIterator &i) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::linearalgebra::FullMatrix< T >::LineConstIterator; Index first;  ; Line second;  . Constructor details. ◆ LineIterator(). template<typename T > . sofa::linearalgebra::FullMatrix< T >::LineIterator::LineIterator ; (; Real * ; p, . Index ; i, . Index ; size, . Index ; pitch . ). inline . Function details. ◆ operator*(). template<typename T > . Line& sofa::linearalgebra::FullMatrix< T >::LineIterator::operator* ; (; ). inline . ◆ operator->(). template<typename T > . Line* sofa::linearalgebra::FullMatrix< T >::LineIterator::operator-> ; (; ). inline . sofalinearalgebraFullMatrixLineIterator; Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix_1_1_line_iterator.html:546,inherit,inherited,546,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix_1_1_line_iterator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix_1_1_line_iterator.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::FullVector< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::linearalgebra::FullVector< T > Class Template Reference . #include <FullVector.h>. Inheritance diagram for sofa::linearalgebra::FullVector< T >:. [legend]. Protected Attributes; T * data;  ; Index cursize;  ; Index allocsize;  . Public Member Functions;  FullVector ();  ;  FullVector (const FullVector &vect);  ;  FullVector (Index n);  ;  FullVector (T *ptr, Index n);  ;  FullVector (T *ptr, Index n, Index nmax);  ;  ~FullVector () override;  ; T * ptr ();  ; const T * ptr () const;  ; void setptr (T *p);  ; Index capacity () const;  ; Iterator begin ();  ; Iterator end ();  ; ConstIterator begin () const;  ; ConstIterator end () const;  ; void fastResize (Index dim);  ; void resize (Index dim) override;  Resize the vector, and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void swap (FullVector< T > &v);  ; void clear (Index dim) override;  Reset the value of element i to 0. More...;  ; T & operator[] (Index i);  ; const T & operator[] (Index i) const;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; Index size () const override;  Number of elements. More...;  ; FullVector< T > sub (Index i, Index n);  ; template<class TV > ; void getsub (Index i, Index n, TV &v);  ; template<class TV > ; void setsub (Index i, Index n, const TV &v);  ; void operator= (const FullVector< T > &a);  v = a More...;  ; void operator= (const T &a);  ; void operator+= (const FullVector< Real > &a);  v += a More...;  ; void operator-= (const FullVecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html:376,Inherit,Inheritance,376,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::LPtrFullMatrix< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::linearalgebra::LPtrFullMatrix< T > Class Template Reference . #include <FullMatrix.h>; Simple full matrix container, with an additional pointer per line, to be able do get a T** pointer and use [i][j] directly. ; More... Inheritance diagram for sofa::linearalgebra::LPtrFullMatrix< T >:. [legend]; Detailed Description; template<typename T>; class sofa::linearalgebra::LPtrFullMatrix< T >; Simple full matrix container, with an additional pointer per line, to be able do get a T** pointer and use [i][j] directly. . Protected Attributes; T ** ldata;  ; Index lallocsize;  ;  Protected Attributes inherited from sofa::linearalgebra::FullMatrix< T >; Real * data;  ; Index nRow;  ; Index nCol;  ; Index pitch;  ; Index allocsize;  . Public Member Functions;  LPtrFullMatrix ();  ;  ~LPtrFullMatrix () override;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; T ** lptr ();  ;  Public Member Functions inherited from sofa::linearalgebra::FullMatrix< T >;  FullMatrix ();  ;  FullMatrix (Index nbRow, Index nbCol);  ;  FullMatrix (Real *p, Index nbRow, Index nbCol);  ;  FullMatrix (Real *p, Index nbRow, Index nbCol, Index pitch);  ;  ~FullMatrix () override;  ; Real * ptr ();  ; const Real * ptr () const;  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, do",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html:829,inherit,inherited,829,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::MatrixExpr< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Friends |; List of all members . sofa::linearalgebra::MatrixExpr< T > Class Template Reference . #include <MatrixExpr.h>. Inheritance diagram for sofa::linearalgebra::MatrixExpr< T >:. [legend]; Detailed Description; template<class T>; class sofa::linearalgebra::MatrixExpr< T >; Data structure representing an operation on matrices. Used in the context of the expression templates pattern. . Public Member Functions;  MatrixExpr (const Expr &e);  ; template<class M2 > ; MatrixExpr< MatrixProduct< Expr, typename M2::Expr > > operator* (const M2 &m) const;  ; template<class M2 > ; MatrixExpr< MatrixAddition< Expr, typename M2::Expr > > operator+ (const M2 &m) const;  ; template<class M2 > ; MatrixExpr< MatrixSubtraction< Expr, typename M2::Expr > > operator- (const M2 &m) const;  ; MatrixExpr< MatrixNegative< Expr > > operator- () const;  ; MatrixExpr< MatrixTranspose< Expr > > t () const;  ; MatrixExpr< MatrixScale< Expr, double > > operator* (double d) const;  . Friends; MatrixExpr< MatrixScale< Expr, double > > operator* (double d, const MatrixExpr< Expr > &m);  ; template<class M1 > ; MatrixExpr< MatrixProduct< typename M1::Expr, Expr > > operator* (const M1 &m1, const MatrixExpr< Expr > &m2);  ; template<class M1 > ; MatrixExpr< MatrixAddition< typename M1::Expr, Expr > > operator+ (const M1 &m1, const MatrixExpr< Expr > &m2);  ; template<class M1 > ; MatrixExpr< MatrixSubtraction< typename M1::Expr, Expr > > operator- (const M1 &m1, const MatrixExpr< Expr > &m2);  . Constructor details. ◆ MatrixExpr(). template<class T > . sofa::linearalgebra::MatrixExpr< T >::MatrixExpr ; (; const Expr & ; e). inlineexplicit . Function details. ◆ operator*() [1/2]. template<class T > . template<class M2 > . MatrixExpr< MatrixProduct< Expr, typename M2::Expr > > sofa::linearalgebra::MatrixExpr< T >::operator*",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_matrix_expr.html:299,Inherit,Inheritance,299,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_matrix_expr.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_matrix_expr.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::linearalgebra::MatrixInvertOp< M1 > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::MatrixInvertOp< M1 > Class Template Reference . #include <MatrixExpr.h>. Inheritance diagram for sofa::linearalgebra::MatrixInvertOp< M1 >:. [legend]. sofalinearalgebraMatrixInvertOp; Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_matrix_invert_op.html:249,Inherit,Inheritance,249,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_matrix_invert_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_matrix_invert_op.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::MatrixProductOp< M1, M2 > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::MatrixProductOp< M1, M2 > Class Template Reference . #include <MatrixExpr.h>. Inheritance diagram for sofa::linearalgebra::MatrixProductOp< M1, M2 >:. [legend]. sofalinearalgebraMatrixProductOp; Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_matrix_product_op.html:259,Inherit,Inheritance,259,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_matrix_product_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_matrix_product_op.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::RotationMatrix< TReal > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::linearalgebra::RotationMatrix< TReal > Class Template Reference . #include <RotationMatrix.h>; 3x3 block-diagonal matrix where each block is considered as a rotation. ; More... Inheritance diagram for sofa::linearalgebra::RotationMatrix< TReal >:. [legend]; Detailed Description; template<class TReal>; class sofa::linearalgebra::RotationMatrix< TReal >; 3x3 block-diagonal matrix where each block is considered as a rotation. ; Template Parameters. TRealType of scalar. One of the feature of this class is to rotate another matrix: if M is a matrix and R is a rotation matrix, it can compute M * R. . Protected Attributes; type::vector< Real > data;  . Public Member Functions; sofa::SignedIndex rowSize (void) const override;  Number of rows. More...;  ; sofa::SignedIndex colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, sofa::SignedIndex j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void resize (sofa::SignedIndex nbRow, sofa::SignedIndex nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; virtual void setIdentity ();  ; void set (sofa::SignedIndex i, sofa::SignedIndex j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual type::vector< Real > & getVector ();  ; void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const override;  Mu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:489,Inherit,Inheritance,489,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::SparseMatrix< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::linearalgebra::SparseMatrix< T > Class Template Reference . #include <SparseMatrix.h>. Inheritance diagram for sofa::linearalgebra::SparseMatrix< T >:. [legend]; Detailed Description; template<typename T>; class sofa::linearalgebra::SparseMatrix< T >; This is basically a map of map of T, wrapped in a linearalgebra::BaseMatrix interface. The const access methods avoid creating the entries when they do not exist. . Protected Attributes; Data data;  ; Index nRow;  ; Index nCol;  . Public Member Functions;  SparseMatrix ();  ;  SparseMatrix (Index nbRow, Index nbCol);  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Line & operator[] (Index i);  ; const Line & operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:382,Inherit,Inheritance,382,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType > Class Template Reference . #include <SparseMatrixProduct.h>. Inheritance diagram for sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >:. [legend]; Detailed Description; template<class Lhs, class Rhs, class ResultType>; class sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; Given two matrices, compute the product of both matrices. The first time the algorithm runs, it computes the ""intersection"" between both matrices. This intersection can be reused to compute the product. If, later, both input matrices changed their values, but not their sparsity pattern, the ""intersection"" remains valid. The same intersection can be used to compute the product as long as the sparsity pattern does not change. This strategy is faster than calling the regular matrix product algorithm (but not if the size of the intersection is huge).; To compute the product, the method computeProduct must be called.; Based on: Saupin, G., Duriez, C. and Grisoni, L., 2007, November. Embedded multigrid approach for real-time volumetric deformation. In International Symposium on Visual Computing (pp. 149-159). Springer, Berlin, Heidelberg. and Saupin, G., 2008. Vers la simulation interactive réaliste de corps déformables virtuels (Doctoral dissertation, Lille 1). . Classes; struct  Intersection;  . Public Attributes; const LhsCleaned * m_lhs { nullptr };  Left side of the product A*B. More...;  ; const RhsCleaned * m_rhs { nullptr };  Right side of the product A*B. More...;  . Protected Attributes; ProductResult m_productResult;  ; bool m_hasComputedIntersection { false };  Result of LHS * RHS. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix_product.html:439,Inherit,Inheritance,439,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix_product.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix_product.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::linearalgebra::testing Namespace Reference . Classes; struct  TestBaseMatrixTraits;  ; class  TestBaseMatrix;  Type-parameterized tests for classes derived from BaseMatrix. More...;  ; struct  SparseMatrixProductInit;  ; struct  TestSparseMatrixProduct;  . Functions;  TYPED_TEST_SUITE_P (TestBaseMatrix);  ;  TYPED_TEST_P (TestBaseMatrix, resize);  ;  TYPED_TEST_P (TestBaseMatrix, addScalar);  ;  TYPED_TEST_P (TestBaseMatrix, addBloc);  ;  REGISTER_TYPED_TEST_SUITE_P (TestBaseMatrix, resize, addScalar, addBloc);  ;  TYPED_TEST_SUITE_P (TestSparseMatrixProduct);  ;  TYPED_TEST_P (TestSparseMatrixProduct, squareMatrix);  ;  TYPED_TEST_P (TestSparseMatrixProduct, rectangularMatrix);  ;  REGISTER_TYPED_TEST_SUITE_P (TestSparseMatrixProduct, squareMatrix, rectangularMatrix);  . Function Documentation. ◆ REGISTER_TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; , . resize ; , . addScalar ; , . addBloc ;  . ). ◆ REGISTER_TYPED_TEST_SUITE_P() [2/2]. sofa::linearalgebra::testing::REGISTER_TYPED_TEST_SUITE_P ; (; TestSparseMatrixProduct ; , . squareMatrix ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [1/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addBloc ;  . ). ◆ TYPED_TEST_P() [2/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . addScalar ;  . ). ◆ TYPED_TEST_P() [3/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestBaseMatrix ; , . resize ;  . ). ◆ TYPED_TEST_P() [4/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . rectangularMatrix ;  . ). ◆ TYPED_TEST_P() [5/5]. sofa::linearalgebra::testing::TYPED_TEST_P ; (; TestSparseMatrixProduct ; , . squareMatrix ;  . ). ◆ TYPED_TEST_SUITE_P() [1/2]. sofa::linearalgebra::testing::TYPED_TEST_SUITE_P ; (; TestBaseMatrix ; ). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html:282,parameteriz,parameterized,282,api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra_1_1testing.html,2,['parameteriz'],['parameterized']
Modifiability,"﻿. SOFA API: sofa::linearalgebra::testing::TestBaseMatrix< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestBaseMatrix< T > Class Template Reference . #include <BaseMatrix_test.h>; Type-parameterized tests for classes derived from BaseMatrix. ; More... Inheritance diagram for sofa::linearalgebra::testing::TestBaseMatrix< T >:. [legend]; Detailed Description; template<class T>; class sofa::linearalgebra::testing::TestBaseMatrix< T >; Type-parameterized tests for classes derived from BaseMatrix. . Static Public Attributes; static constexpr sofa::Index NbRows = T::NbRows;  ; static constexpr sofa::Index NbCols = T::NbCols;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Protected Attributes; sofa::type::Mat< NbRows, NbCols, Real > m_modelMatrix;  ; std::unique_ptr< sofa::linearalgebra::BaseMatrix > m_testedMatrix {nullptr};  . Public Member Functions; void onSetUp () override;  ; void onTearDown () override;  ; void checkResize ();  ; void checkAddScalar ();  ; void checkAddBloc (sofa::linearalgebra::BaseMatrix::Index posRow, sofa::linearalgebra::BaseMatrix::Index posCol);  ;  Public Member Functions inherited from sofa::testing::NumericTest< T::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html:376,parameteriz,parameterized,376,api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1testing_1_1_test_base_matrix.html,7,"['Inherit', 'inherit', 'parameteriz']","['Inheritance', 'inherited', 'parameterized']"
Modifiability,"﻿. SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference . #include <SparseMatrixProduct_test.h>. Inheritance diagram for sofa::linearalgebra::testing::TestSparseMatrixProduct< T >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:975,inherit,inherited,975,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference . #include <MappingTestCreation.h>; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; More... Inheritance diagram for sofa::mapping_test::Mapping_test< _Mapping >:. [legend]; Detailed Description; template<class _Mapping>; struct sofa::mapping_test::Mapping_test< _Mapping >; Base class for the Mapping tests, with helpers to automatically test applyJ, applyJT, applyDJT and getJs using finite differences. ; Specific test cases can be created using a derived class instantiated on the mapping class to test, and calling function runTest( const InVecCoord& parentInit, const OutVecCoord& childInit, const InVecCoord parentNew, const OutVecCoord expectedChildNew);; This function compares the actual output positions with the expected ones, then automatically tests the methods related to the Jacobian using finite differences.; A small change of the input positions dxIn is randomly chosen and added to the current position. The same is set as velocity.; mapping->apply is called, and the difference dXout between the new output positions and the previous positions is computed; to validate mapping->applyJ, dXin is converted to input velocity vIn and mapping->applyJ is called. dXout and the output velocity vOut must be the same (up to linear approximations errors, thus we apply a very small change of position).; to validate mapping->getJs, we use it to get the Jacobian, then we check that J.vIn = vOut; to validate mapping->applyJT, we apply it after setting the child force fc=vOut, then we check that parent force fp = J^T.fc; to validate mappin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:542,Inherit,Inheritance,542,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  I",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:191,Variab,Variables,191,api/master/sofa/html/namespacesofa_1_1simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html,1,['Variab'],['Variables']
Modifiability,"﻿. SOFA API: sofa::simulation::AnimateBeginEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::AnimateBeginEvent Class Reference . #include <AnimateBeginEvent.h>. Inheritance diagram for sofa::simulation::AnimateBeginEvent:. [legend]; Detailed Description; Event fired by Simulation::animate() before computing a new animation step. AuthorJeremie Allard . Protected Attributes; SReal dt;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  AnimateBeginEvent (SReal dt);  ;  ~AnimateBeginEvent () override;  ; SReal getDt () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ dt. SReal sofa::simulation::AnimateBeginEvent::dt. protected . Constructor details. ◆ AnimateBeginEvent(). sofa::simulation::AnimateBeginEvent::AnimateBeginEvent ; (; SReal ; dt). ◆ ~AnimateBeginEvent(). sofa::simulation::AnimateBeginEvent::~AnimateBeginEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::AnimateBeginEvent::GetClassName ; (; ). inlinestati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_animate_begin_event.html:583,inherit,inherited,583,api/master/sofa/html/classsofa_1_1simulation_1_1_animate_begin_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_animate_begin_event.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::AnimateEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::AnimateEndEvent Class Reference . #include <AnimateEndEvent.h>. Inheritance diagram for sofa::simulation::AnimateEndEvent:. [legend]; Detailed Description; Event fired by Simulation::animate() after computing a new animation step. AuthorJeremie Allard . Protected Attributes; SReal dt;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  AnimateEndEvent (SReal dt);  ;  ~AnimateEndEvent () override;  ; SReal getDt () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ dt. SReal sofa::simulation::AnimateEndEvent::dt. protected . Constructor details. ◆ AnimateEndEvent(). sofa::simulation::AnimateEndEvent::AnimateEndEvent ; (; SReal ; dt). ◆ ~AnimateEndEvent(). sofa::simulation::AnimateEndEvent::~AnimateEndEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::AnimateEndEvent::GetClassName ; (; ). inlinestatic . ◆ getDt(). SReal sofa::si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_animate_end_event.html:574,inherit,inherited,574,api/master/sofa/html/classsofa_1_1simulation_1_1_animate_end_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_animate_end_event.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::AnimateVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::AnimateVisitor Class Reference . #include <AnimateVisitor.h>. Inheritance diagram for sofa::simulation::AnimateVisitor:. [legend]. Protected Attributes; SReal dt;  ; bool firstNodeVisited;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  AnimateVisitor (const core::ExecParams *params, SReal dt);  ; void setDt (SReal v);  ; SReal getDt () const;  ; virtual void processCollisionPipeline (simulation::Node *node, core::collision::Pipeline *obj);  ; virtual void fwdInteractionForceField (simulation::Node *node, core::behavior::BaseInteractionForceField *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool prec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_animate_visitor.html:442,inherit,inherited,442,api/master/sofa/html/classsofa_1_1simulation_1_1_animate_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_animate_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::BaseMechanicalVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::BaseMechanicalVisitor Class Reference . #include <BaseMechanicalVisitor.h>. Inheritance diagram for sofa::simulation::BaseMechanicalVisitor:. [legend]; Detailed Description; Base class for easily creating new actions for mechanical simulation.; During the first traversal (top-down), method processNodeTopDown(simulation::Node*) is applied to each simulation::Node. Each component attached to this node is processed using the appropriate method, prefixed by fwd. During the second traversal (bottom-up), method processNodeBottomUp(simulation::Node*) is applied to each simulation::Node. Each component attached to this node is processed using the appropriate method, prefixed by bwd. The default behavior of the fwd* and bwd* is to do nothing. Derived actions typically overload these methods to implement the desired processing. . Protected Attributes; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getClassName () const override;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Forward processing; Methods called during the forward (top-down) traversal of the data stru",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_base_mechanical_visitor.html:341,Inherit,Inheritance,341,api/master/sofa/html/classsofa_1_1simulation_1_1_base_mechanical_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_base_mechanical_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::BehaviorUpdatePositionVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::BehaviorUpdatePositionVisitor Class Reference . #include <BehaviorUpdatePositionVisitor.h>. Inheritance diagram for sofa::simulation::BehaviorUpdatePositionVisitor:. [legend]; Detailed Description; Update the position of a new simulation step . Protected Attributes; SReal dt;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  BehaviorUpdatePositionVisitor (const core::ExecParams *params, SReal _dt);  ; void processBehaviorModel (simulation::Node *node, core::BehaviorModel *b);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; void setDt (SReal _dt);  ; SReal getDt ();  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html:545,inherit,inherited,545,api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_behavior_update_position_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::BuildConstraintSystemEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::BuildConstraintSystemEndEvent Class Reference . #include <BuildConstraintSystemEndEvent.h>. Inheritance diagram for sofa::simulation::BuildConstraintSystemEndEvent:. [legend]. Public Member Functions;  BuildConstraintSystemEndEvent ();  ;  ~BuildConstraintSystemEndEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ BuildConstraintSystemEndEvent(). sofa::simulation::BuildConstraintSystemEndEvent::BuildConstraintSystemEndEvent ; (; ). inline . ◆ ~BuildConstraintSystemEndEvent(). sofa::simulation::BuildConstraintSystemEndEvent::~BuildConstraintSystemEndEvent ; (; ). inlineoverride . Function details. ◆ GetClassName(). static const char* sofa::simulation::BuildConstraintSystemEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationBuildConstraintSystemEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_build_constraint_system_end_event.html:565,inherit,inherited,565,api/master/sofa/html/classsofa_1_1simulation_1_1_build_constraint_system_end_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_build_constraint_system_end_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::CleanupVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::CleanupVisitor Class Reference . #include <CleanupVisitor.h>. Inheritance diagram for sofa::simulation::CleanupVisitor:. [legend]. Public Member Functions;  CleanupVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cleanup_visitor.html:822,inherit,inherited,822,api/master/sofa/html/classsofa_1_1simulation_1_1_cleanup_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cleanup_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::CollisionAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Member Functions |; List of all members . sofa::simulation::CollisionAnimationLoop Class Reference . #include <CollisionAnimationLoop.h>; Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. ; More... Inheritance diagram for sofa::simulation::CollisionAnimationLoop:. [legend]; Detailed Description; Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. ; This class can optionally replace the default computation scheme of computing collisions then doing an integration step.; Note that it is in a preliminary stage, hence its functionalities and API will certainly change soon. . Protected Member Functions;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:428,Inherit,Inheritance,428,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::CollisionBeginEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::CollisionBeginEvent Class Reference . #include <CollisionBeginEvent.h>. Inheritance diagram for sofa::simulation::CollisionBeginEvent:. [legend]; Detailed Description; Event fired by CollisionVisitor before performing the collision detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::CollisionBeginEvent::GetClassName ; (; ). inlinestatic . sofasimulationCollisionBeginEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_begin_event.html:570,inherit,inherited,570,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_begin_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_begin_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::CollisionDetectionVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::CollisionDetectionVisitor Class Reference . #include <CollisionVisitor.h>; Compute collision detection. ; More... Inheritance diagram for sofa::simulation::CollisionDetectionVisitor:. [legend]; Detailed Description; Compute collision detection. . Public Member Functions;  CollisionDetectionVisitor (const core::ExecParams *params);  ; void processCollisionPipeline (simulation::Node *node, core::collision::Pipeline *obj) override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::CollisionVisitor;  CollisionVisitor (const core::ExecParams *params);  ; virtual void fwdConstraintSet (simulation::Node *node, core::behavior::BaseConstraintSet *cSet);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; size_t getPrimitiveTestCount () const;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_detection_visitor.html:724,inherit,inherited,724,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_detection_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_detection_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::CollisionEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::CollisionEndEvent Class Reference . #include <CollisionEndEvent.h>. Inheritance diagram for sofa::simulation::CollisionEndEvent:. [legend]; Detailed Description; Event fired by CollisionVisitor after performing the collision detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::CollisionEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationCollisionEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_end_event.html:561,inherit,inherited,561,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_end_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_end_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::CollisionResetVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::CollisionResetVisitor Class Reference . #include <CollisionVisitor.h>; Remove collision response from last step. ; More... Inheritance diagram for sofa::simulation::CollisionResetVisitor:. [legend]; Detailed Description; Remove collision response from last step. . Public Member Functions;  CollisionResetVisitor (const core::ExecParams *params);  ; void processCollisionPipeline (simulation::Node *node, core::collision::Pipeline *obj) override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::CollisionVisitor;  CollisionVisitor (const core::ExecParams *params);  ; virtual void fwdConstraintSet (simulation::Node *node, core::behavior::BaseConstraintSet *cSet);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; size_t getPrimitiveTestCount () const;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->ex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_reset_visitor.html:734,inherit,inherited,734,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_reset_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_reset_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::CollisionResponseVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::CollisionResponseVisitor Class Reference . #include <CollisionVisitor.h>; Compute collision response. ; More... Inheritance diagram for sofa::simulation::CollisionResponseVisitor:. [legend]; Detailed Description; Compute collision response. . Public Member Functions;  CollisionResponseVisitor (const core::ExecParams *params);  ; void processCollisionPipeline (simulation::Node *node, core::collision::Pipeline *obj) override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::CollisionVisitor;  CollisionVisitor (const core::ExecParams *params);  ; virtual void fwdConstraintSet (simulation::Node *node, core::behavior::BaseConstraintSet *cSet);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; size_t getPrimitiveTestCount () const;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(thi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_response_visitor.html:718,inherit,inherited,718,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_response_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_response_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::CollisionVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::CollisionVisitor Class Reference . #include <CollisionVisitor.h>; Compute collision reset, detection and response in one step. ; More... Inheritance diagram for sofa::simulation::CollisionVisitor:. [legend]; Detailed Description; Compute collision reset, detection and response in one step. . Public Member Functions;  CollisionVisitor (const core::ExecParams *params);  ; virtual void fwdConstraintSet (simulation::Node *node, core::behavior::BaseConstraintSet *cSet);  ; virtual void processCollisionPipeline (simulation::Node *node, core::collision::Pipeline *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; size_t getPrimitiveTestCount () const;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_visitor.html:343,Inherit,Inheritance,343,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::Colors Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Enumerations |; Functions . sofa::simulation::Colors Namespace Reference . Enumerations; enum  { ;   NODE; , OBJECT; , CONTEXT; , BMODEL; , ;   CMODEL; , MMODEL; , PROJECTIVECONSTRAINTSET; , CONSTRAINTSET; , ;   IFFIELD; , FFIELD; , SOLVER; , COLLISION; , ;   MMAPPING; , MAPPING; , MASS; , TOPOLOGY; , ;   VMODEL; , LOADER; , CONFIGURATIONSETTING; , ALLCOLORS. };  . Functions; const char * getColor (const char *classname);  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorNODE ; OBJECT ; CONTEXT ; BMODEL ; CMODEL ; MMODEL ; PROJECTIVECONSTRAINTSET ; CONSTRAINTSET ; IFFIELD ; FFIELD ; SOLVER ; COLLISION ; MMAPPING ; MAPPING ; MASS ; TOPOLOGY ; VMODEL ; LOADER ; CONFIGURATIONSETTING ; ALLCOLORS . Function Documentation. ◆ getColor(). const char* sofa::simulation::Colors::getColor ; (; const char * ; classname). inline . sofasimulationColors; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html:460,CONFIG,CONFIGURATIONSETTING,460,api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1_colors.html,2,['CONFIG'],['CONFIGURATIONSETTING']
Modifiability,"﻿. SOFA API: sofa::simulation::CpuTask Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::CpuTask Class Reference . #include <CpuTask.h>. Inheritance diagram for sofa::simulation::CpuTask:. [legend]; Detailed Description; Base class to implement a CPU task all the tasks running on the CPU should inherits from this class . Public Member Functions; Status * getStatus (void) const override final;  ;  CpuTask (Status *status, int scheduledThread=-1);  ; virtual ~CpuTask ()=default;  ;  Public Member Functions inherited from sofa::simulation::Task;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; virtual MemoryAlloc run ()=0;  ; int getScheduledThread () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Task; int m_id;  ;  Protected Attributes inherited from sofa::simulation::Task; int m_scheduledThread;  ;  Static Public Member Functions inherited from sofa::simulation::Task; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Constructor details. ◆ CpuTask(). sofa::simulation::CpuTask::CpuTask ; (; CpuTask::Status * ; status, . int ; scheduledThread = -1 . ). ◆ ~CpuTask(). virtual sofa::simulation::CpuTask::~CpuTask ; (; ). virtualdefault . Function details. ◆ getStatus(). CpuTask::Status * sofa::simulation::CpuTask::getStatus ; (; void ; ); const. finaloverridevirtual . Implements sofa::simulation::Task. sofasimulationCpuTask; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cpu_task.html:404,inherit,inherits,404,api/master/sofa/html/classsofa_1_1simulation_1_1_cpu_task.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cpu_task.html,12,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited', 'inherits']"
Modifiability,﻿. SOFA API: sofa::simulation::CpuTaskStatus Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::CpuTaskStatus Class Reference . #include <CpuTaskStatus.h>. Inheritance diagram for sofa::simulation::CpuTaskStatus:. [legend]. Public Member Functions;  CpuTaskStatus ();  ; bool isBusy () const override final;  ; int setBusy (bool busy) override final;  ;  Public Member Functions inherited from sofa::simulation::Task::Status; virtual ~Status ()=default;  . Constructor details. ◆ CpuTaskStatus(). sofa::simulation::CpuTaskStatus::CpuTaskStatus ; (; ). Function details. ◆ isBusy(). bool sofa::simulation::CpuTaskStatus::isBusy ; (; ); const. finaloverridevirtual . Implements sofa::simulation::Task::Status. ◆ setBusy(). int sofa::simulation::CpuTaskStatus::setBusy ; (; bool ; busy). finaloverridevirtual . Implements sofa::simulation::Task::Status. sofasimulationCpuTaskStatus; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cpu_task_status.html:486,inherit,inherited,486,api/master/sofa/html/classsofa_1_1simulation_1_1_cpu_task_status.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_cpu_task_status.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::DeactivationVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::DeactivationVisitor Class Reference . #include <DeactivatedNodeVisitor.h>. Inheritance diagram for sofa::simulation::DeactivationVisitor:. [legend]. Protected Attributes; bool active;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  DeactivationVisitor (const core::ExecParams *params, bool _active=false);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; void setValue (bool _active);  ; bool getValue ();  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html:442,inherit,inherited,442,api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::DefaultAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::DefaultAnimationLoop Class Reference . #include <DefaultAnimationLoop.h>; Default Animation Loop to be created when no AnimationLoop found on simulation::node. ; More... Inheritance diagram for sofa::simulation::DefaultAnimationLoop:. [legend]; Detailed Description; Default Animation Loop to be created when no AnimationLoop found on simulation::node. . Public Attributes; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileNa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html:768,inherit,inherited,768,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::DefaultTaskScheduler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::simulation::DefaultTaskScheduler Class Reference . #include <DefaultTaskScheduler.h>. Inheritance diagram for sofa::simulation::DefaultTaskScheduler:. [legend]. Public Member Functions; virtual void init (const unsigned int nbThread=0) final;  ; void stop () final;  ; WorkerThread * getCurrent ();  ; unsigned int getThreadCount (void) const final;  ; const char * getCurrentThreadName () override final;  ; int getCurrentThreadType () override final;  ; bool addTask (Task *task) override final;  ; void workUntilDone (Task::Status *status) override final;  ; Task::Allocator * getTaskAllocator () override final;  ;  Public Member Functions inherited from sofa::simulation::TaskScheduler; virtual ~TaskScheduler ()=default;  ; virtual bool addTask (Task::Status &status, const std::function< void()> &task);  . Static Public Member Functions; static const char * name ();  ; static DefaultTaskScheduler * create ();  ;  Static Public Member Functions inherited from sofa::simulation::TaskScheduler; static unsigned GetHardwareThreadsCount ();  . Friends; class WorkerThread;  . Function details. ◆ addTask(). bool sofa::simulation::DefaultTaskScheduler::addTask ; (; Task * ; task). finaloverridevirtual . Implements sofa::simulation::TaskScheduler. ◆ create(). DefaultTaskScheduler * sofa::simulation::DefaultTaskScheduler::create ; (; ). static . ◆ getCurrent(). WorkerThread * sofa::simulation::DefaultTaskScheduler::getCurrent ; (; ). ◆ getCurrentThreadName(). const char * sofa::simulation::DefaultTaskScheduler::getCurrentThreadName ; (; ). finaloverridevirtual . Implements sofa::simulation::TaskScheduler. ◆ getCurrentThreadType(). int sofa::simulation::DefaultTaskScheduler::getCurrentThreadType ; (; ). finaloverridevirtual . Implements sofa::si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_task_scheduler.html:887,inherit,inherited,887,api/master/sofa/html/classsofa_1_1simulation_1_1_default_task_scheduler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_task_scheduler.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::DefaultVisualManagerLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::DefaultVisualManagerLoop Class Reference . #include <DefaultVisualManagerLoop.h>; Default VisualManager Loop to be created when no VisualManager found on simulation::node. ; More... Inheritance diagram for sofa::simulation::DefaultVisualManagerLoop:. [legend]; Detailed Description; Default VisualManager Loop to be created when no VisualManager found on simulation::node. . Public Attributes; SingleLink< DefaultVisualManagerLoop, simulation::Node, BaseLink::FLAG_STOREPATH > l_node;  Link to the scene's node where the rendering will take place. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DefaultVisualManagerLoo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html:844,inherit,inherited,844,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::DeleteVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::DeleteVisitor Class Reference . #include <DeleteVisitor.h>. Inheritance diagram for sofa::simulation::DeleteVisitor:. [legend]. Public Member Functions;  DeleteVisitor (const core::ExecParams *params);  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual Result processNodeTopDown (simulation::Node *);  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ct",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html:644,inherit,inherited,644,api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_delete_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::DofPrintVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::DofPrintVisitor Class Reference . #include <MechanicalVPrintVisitor.h>. Inheritance diagram for sofa::simulation::DofPrintVisitor:. [legend]. Protected Attributes; sofa::core::ConstMultiVecId v_;  ; std::ostream & out_;  ; const std::string & dofname_;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  DofPrintVisitor (const core::ExecParams *params, sofa::core::ConstMultiVecId v, const std::string &dofname, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html:507,inherit,inherited,507,api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_dof_print_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::ExportGnuplotVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::ExportGnuplotVisitor Class Reference . #include <ExportGnuplotVisitor.h>. Inheritance diagram for sofa::simulation::ExportGnuplotVisitor:. [legend]. Protected Attributes; SReal m_time;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  ExportGnuplotVisitor (const core::ExecParams *params, SReal time);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::Visit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html:444,inherit,inherited,444,api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_gnuplot_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::ExportVisualModelOBJVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::ExportVisualModelOBJVisitor Class Reference . #include <ExportVisualModelOBJVisitor.h>. Inheritance diagram for sofa::simulation::ExportVisualModelOBJVisitor:. [legend]. Public Attributes; std::ostream * out;  ; std::ostream * mtl;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Protected Attributes; int ID;  ; sofa::Index vindex;  ; sofa::Index nindex;  ; sofa::Index tindex;  ; int count;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  ExportVisualModelOBJVisitor (const core::ExecParams *params, std::ostream *out);  ;  ExportVisualModelOBJVisitor (const core::ExecParams *params, std::ostream *out, std::ostream *mtl);  ;  ~ExportVisualModelOBJVisitor () override;  ; virtual void processVisualModel (Node *node, core::visual::VisualModel *vm);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html:516,inherit,inherited,516,api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_export_visual_model_o_b_j_visitor.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::FindByTypeVisitor< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::FindByTypeVisitor< T > Class Template Reference . #include <FindByTypeVisitor.h>. Inheritance diagram for sofa::simulation::FindByTypeVisitor< T >:. [legend]; Detailed Description; template<class T>; class sofa::simulation::FindByTypeVisitor< T >; Find all components of a given type and store pointers in a list. . Public Attributes; std::vector< T * > found;  The result of the search: contains pointers to all components of the given type found. More...;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  FindByTypeVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  For each component, if it is of the given type, then put it in the list. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Ali",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html:722,inherit,inherited,722,api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::InitGnuplotVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::InitGnuplotVisitor Class Reference . #include <ExportGnuplotVisitor.h>. Inheritance diagram for sofa::simulation::InitGnuplotVisitor:. [legend]. Public Attributes; std::string gnuplotDirectory;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  InitGnuplotVisitor (const core::ExecParams *params, std::string dir);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html:445,inherit,inherited,445,api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::InitPerThreadDataTask Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::InitPerThreadDataTask Class Reference . #include <InitTasks.h>. Inheritance diagram for sofa::simulation::InitPerThreadDataTask:. [legend]. Public Member Functions;  InitPerThreadDataTask (std::atomic< int > *atomicCounter, std::mutex *mutex, CpuTask::Status *status);  ;  ~InitPerThreadDataTask () override=default;  ; MemoryAlloc run () override;  ;  Public Member Functions inherited from sofa::simulation::CpuTask; Status * getStatus (void) const override final;  ;  CpuTask (Status *status, int scheduledThread=-1);  ; virtual ~CpuTask ()=default;  ;  Public Member Functions inherited from sofa::simulation::Task;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; int getScheduledThread () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Task; int m_id;  ;  Protected Attributes inherited from sofa::simulation::Task; int m_scheduledThread;  ;  Static Public Member Functions inherited from sofa::simulation::Task; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Constructor details. ◆ InitPerThreadDataTask(). sofa::simulation::InitPerThreadDataTask::InitPerThreadDataTask ; (; std::atomic< int > * ; atomicCounter, . std::mutex * ; mutex, . CpuTask::Status * ; status . ). ◆ ~InitPerThreadDataTask(). sofa::simulation::InitPerThreadDataTask::~InitPerThreadDataTask ; (; ). overridedefault . Function details. ◆ run(). Task::MemoryAlloc sofa::simulation::InitPerThreadDataTask::run ; (; ). overridevirtual . Implements sofa::simulation::Task. sofasimulationInitPer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task.html:588,inherit,inherited,588,api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_per_thread_data_task.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::InitVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::InitVisitor Class Reference . #include <InitVisitor.h>. Inheritance diagram for sofa::simulation::InitVisitor:. [legend]; Detailed Description; Initialize a newly created (or modified) scene graph.; Forward: simulation::Node::initialize() This method puts the OdeSolver, if any, first in the list of components. Then BaseObject::init() for all components.; Backward: OdeSolver::bwdInit() . Protected Attributes; Node * rootNode;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  InitVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html:679,inherit,inherited,679,api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::IntegrateBeginEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateBeginEvent Class Reference . #include <IntegrateBeginEvent.h>. Inheritance diagram for sofa::simulation::IntegrateBeginEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor before performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateBeginEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateBeginEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html:570,inherit,inherited,570,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::IntegrateEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateEndEvent Class Reference . #include <IntegrateEndEvent.h>. Inheritance diagram for sofa::simulation::IntegrateEndEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor after performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html:561,inherit,inherited,561,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::MechanicalVPrintVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::MechanicalVPrintVisitor Class Reference . #include <MechanicalVPrintVisitor.h>. Inheritance diagram for sofa::simulation::MechanicalVPrintVisitor:. [legend]; Detailed Description; Print a vector . Protected Attributes; sofa::core::ConstMultiVecId v_;  ; std::ostream & out_;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalVPrintVisitor (const core::ExecParams *params, sofa::core::ConstMultiVecId v, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type"")); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html:537,inherit,inherited,537,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor Class Reference . #include <MechanicalVPrintVisitor.h>. Inheritance diagram for sofa::simulation::MechanicalVPrintWithElapsedTimeVisitor:. [legend]; Detailed Description; Print a vector with an elapsed time, useful to compare convergence in odeSolver in function of time . Protected Attributes; sofa::core::ConstMultiVecId v_;  ; unsigned count_;  ; unsigned time_;  ; std::ostream & out_;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalVPrintWithElapsedTimeVisitor (const core::ExecParams *params, sofa::core::ConstMultiVecId vid, unsigned time, std::ostream &=std::cerr);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html:706,inherit,inherited,706,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_v_print_with_elapsed_time_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::MechanicalVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::MechanicalVisitor Class Reference . #include <MechanicalVisitor.h>. Inheritance diagram for sofa::simulation::MechanicalVisitor:. [legend]. Protected Attributes; const sofa::core::MechanicalParams * mparams;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getClassName () const override;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html:464,inherit,inherited,464,api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mechanical_visitor.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::MutationListener Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::MutationListener Class Reference . #include <MutationListener.h>; Generic API to handle mutations of the graph. ; More... Inheritance diagram for sofa::simulation::MutationListener:. [legend]; Detailed Description; Generic API to handle mutations of the graph. . Public Member Functions; virtual ~MutationListener ();  ; virtual void sleepChanged (Node *node);  ; virtual void onBeginAddChild (Node *parent, Node *child);  ; virtual void onBeginRemoveChild (Node *parent, Node *child);  ; virtual void onBeginAddObject (Node *parent, core::objectmodel::BaseObject *object);  ; virtual void onBeginRemoveObject (Node *parent, core::objectmodel::BaseObject *object);  ; virtual void onBeginAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void onBeginRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void onEndAddChild (Node *parent, Node *child);  ; virtual void onEndRemoveChild (Node *parent, Node *child);  ; virtual void onEndAddObject (Node *parent, core::objectmodel::BaseObject *object);  ; virtual void onEndRemoveObject (Node *parent, core::objectmodel::BaseObject *object);  ; virtual void onEndAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void onEndRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  . Constructor details. ◆ ~MutationListener(). sofa::simulation::MutationListener::~MutationListener ; (; ). virtual . Function details. ◆ onBeginAddChild(). void sofa::simulation::MutationListener::onBeginAddChild ; (; Node * ; parent, . Node * ; child . ). virtual . Reimplemented in sofa::gui::qt::GraphListenerQListView. ◆ onBeginAddObject(). void sofa::simulation::MutationListener::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mutation_listener.html:328,Inherit,Inheritance,328,api/master/sofa/html/classsofa_1_1simulation_1_1_mutation_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_mutation_listener.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::Node Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::simulation::Node Class Referenceabstract . #include <Node.h>. Inheritance diagram for sofa::simulation::Node:. [legend]; Detailed Description; Implements the object (component) management of the core::Context. Contains objects in lists and provides accessors. The other nodes are not visible (unknown scene graph).; AuthorThe SOFA team </www.sofa-framework.org> . Public Attributes; NodeSequence< Node, true > child;  ; NodeSequence< sofa::core::objectmodel::BaseObject, true > object;  ; NodeSequence< sofa::core::BehaviorModel > behaviorModel;  ; NodeSequence< sofa::core::BaseMapping > mapping;  ; NodeSequence< sofa::core::behavior::OdeSolver > solver;  ; NodeSequence< sofa::core::behavior::ConstraintSolver > constraintSolver;  ; NodeSequence< sofa::core::behavior::BaseLinearSolver > linearSolver;  ; NodeSequence< sofa::core::topology::BaseTopologyObject > topologyObject;  ; NodeSequence< sofa::core::behavior::BaseForceField > forceField;  ; NodeSequence< sofa::core::behavior::BaseInteractionForceField > interactionForceField;  ; NodeSequence< sofa::core::behavior::BaseProjectiveConstraintSet > projectiveConstraintSet;  ; NodeSequence< sofa::core::behavior::BaseConstraintSet > constraintSet;  ; NodeSequence< sofa::core::objectmodel::ContextObject > contextObject;  ; NodeSequence< sofa::core::objectmodel::ConfigurationSetting > configurationSetting;  ; NodeSequence< sofa::core::visual::Shader > shaders;  ; NodeSequence< sofa::core::visual::VisualModel > visualModel;  ; NodeSequence< sofa::core::visual::VisualManager > visualManager;  ; NodeSequence< sofa::core::CollisionModel > collisionModel;  ; NodeSequence< sofa::core::objectmodel::BaseObject > unsorted;  ; NodeSingle< sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:364,Inherit,Inheritance,364,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::NodeSequence< T, strong > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::NodeSequence< T, strong > Class Template Reference . #include <Node.h>. Inheritance diagram for sofa::simulation::NodeSequence< T, strong >:. [legend]. Public Member Functions;  NodeSequence (const BaseLink::InitLink< Node > &init);  ; value_type operator[] (std::size_t i) const;  ; void swap (iterator a, iterator b);  Swap two values in the list. Uses a const_cast to violate the read-only iterators. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html:296,Inherit,Inheritance,296,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::NodeSingle< T, duplicate > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::NodeSingle< T, duplicate > Class Template Reference . #include <Node.h>. Inheritance diagram for sofa::simulation::NodeSingle< T, duplicate >:. [legend]; Detailed Description; template<class T, bool duplicate = true>; class sofa::simulation::NodeSingle< T, duplicate >; Class to hold 0-or-1 object. Public access is only readonly using an interface similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. UPDATE: it is now an alias for the Link pointer container . Public Member Functions;  NodeSingle (const BaseLink::InitLink< Node > &init);  ; T * operator-> () const;  ; T & operator* () const;  ;  operator T* () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>;  SingleLink ();  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init);  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~SingleLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html:298,Inherit,Inheritance,298,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType > Class Template Reference . #include <ParallelSparseMatrixProduct.h>. Inheritance diagram for sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType >:. [legend]. Public Attributes; TaskScheduler * taskScheduler { nullptr };  ;  Public Attributes inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; const LhsCleaned * m_lhs { nullptr };  Left side of the product A*B. More...;  ; const RhsCleaned * m_rhs { nullptr };  Right side of the product A*B. More...;  . Public Member Functions; void computeProductFromIntersection () override;  ;  Public Member Functions inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; void computeProduct (bool forceComputeIntersection=false);  ; void computeRegularProduct ();  ; const ResultType & getProductResult () const;  ; void invalidateIntersection ();  ;  SparseMatrixProduct (Lhs *lhs, Rhs *rhs);  ;  SparseMatrixProduct ()=default;  ; virtual ~SparseMatrixProduct ()=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; ProductResult m_productResult;  ; bool m_hasComputedIntersection { false };  Result of LHS * RHS. More...;  ; Intersection m_intersectionAB;  ;  Protected Member Functions inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; void computeIntersection ();  . Attribute details. ◆ taskScheduler. template<class Lhs , class Rhs , class ResultType > . TaskScheduler* sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType >::taskScheduler { nullptr }. Function details. ◆ computeProductFromIntersection(). template<cl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product.html:582,inherit,inherited,582,api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::PauseEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::PauseEvent Class Reference . #include <PauseEvent.h>. Inheritance diagram for sofa::simulation::PauseEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  PauseEvent ();  ;  ~PauseEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ PauseEvent(). sofa::simulation::PauseEvent::PauseEvent ; (; ). ◆ ~PauseEvent(). sofa::simulation::PauseEvent::~PauseEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::PauseEvent::GetClassName ; (; ). inlinestatic . sofasimulationPauseEvent; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pause_event.html:522,inherit,inherited,522,api/master/sofa/html/classsofa_1_1simulation_1_1_pause_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pause_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::PipelineImpl Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::PipelineImpl Class Reference . #include <PipelineImpl.h>. Inheritance diagram for sofa::simulation::PipelineImpl:. [legend]. Public Member Functions; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html:290,Inherit,Inheritance,290,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::PositionEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::PositionEvent Class Reference . #include <PositionEvent.h>. Inheritance diagram for sofa::simulation::PositionEvent:. [legend]; Detailed Description; Event modify the position of model . Public Member Functions;  PositionEvent ();  ;  ~PositionEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ PositionEvent(). sofa::simulation::PositionEvent::PositionEvent ; (; ). ◆ ~PositionEvent(). sofa::simulation::PositionEvent::~PositionEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::PositionEvent::GetClassName ; (; ). inlinestatic . sofasimulationPositionEvent; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_position_event.html:528,inherit,inherited,528,api/master/sofa/html/classsofa_1_1simulation_1_1_position_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_position_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::PrintVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::PrintVisitor Class Reference . #include <PrintVisitor.h>. Inheritance diagram for sofa::simulation::PrintVisitor:. [legend]. Protected Attributes; int verbose;  ; int level;  ; bool visitingOrder;  by default print the graph organisation but can print the graph visiting by setting visitingOrder at true More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  PrintVisitor (const sofa::core::ExecParams *params, bool visitingOrder=false);  ; void setVerbose (int v);  ; int getVerbose () const;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  ; template<class T > ; void processObject (T obj);  ; template<class Seq > ; void processObjects (Seq &list, const char *name);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html:564,inherit,inherited,564,api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_print_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::PropagateEventVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::PropagateEventVisitor Class Reference . #include <PropagateEventVisitor.h>. Inheritance diagram for sofa::simulation::PropagateEventVisitor:. [legend]; Detailed Description; Visitor used to propagate an event in the data structure. Propagation is done top-down until the event is handled. @author The SOFA team </www.sofa-framework.org>; . Protected Attributes; sofa::core::objectmodel::Event * m_event;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  PropagateEventVisitor (const core::ExecParams *params, sofa::core::objectmodel::Event *e);  ;  ~PropagateEventVisitor () override;  ; Visitor::Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processObject (simulation::Node *, core::objectmodel::BaseObject *obj);  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html:664,inherit,inherited,664,api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_propagate_event_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::RequiredPlugin Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::RequiredPlugin Class Reference . #include <RequiredPlugin.h>. Inheritance diagram for sofa::simulation::RequiredPlugin:. [legend]. Public Attributes; sofa::core::objectmodel::Data< type::vector< std::string > > d_pluginName;  plugin name (or several names if you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:481,plugin,plugin,481,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,11,"['Inherit', 'plugin']","['Inheritance', 'plugin', 'plugins']"
Modifiability,"﻿. SOFA API: sofa::simulation::ResetVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::ResetVisitor Class Reference . #include <ResetVisitor.h>. Inheritance diagram for sofa::simulation::ResetVisitor:. [legend]. Public Member Functions;  ResetVisitor (const core::ExecParams *params);  ; void processObject (core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor.html:260,Inherit,Inheritance,260,api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_reset_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::SceneLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Static Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::simulation::SceneLoader Class Referenceabstract . #include <SceneLoaderFactory.h>; Main class used to register scene file loaders. ; More... Inheritance diagram for sofa::simulation::SceneLoader:. [legend]; Detailed Description; Main class used to register scene file loaders. ; It uses the Factory design pattern, where each class is registered in a map, and dynamically retrieved given the type name. Abstract interface of a scene loader . Classes; struct  Listener;  to be able to inform when a scene is loaded More...;  . Static Protected Attributes; static Listeners s_listeners;  . Public Member Functions; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; virtual bool canLoadFileExtension (const char *extension)=0;  ; virtual bool canWriteFileExtension (const char *);  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs)=0;  ; virtual void write (sofa::simulation::Node *, const char *);  write scene graph in the file More...;  ; virtual std::string getFileTypeDesc ()=0;  get the file type description More...;  ; virtual void getExtensionList (ExtensionList *list)=0;  get the list of file extensions More...;  ; virtual bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html:443,Inherit,Inheritance,443,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::SceneLoaderPHP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneLoaderPHP Class Reference . #include <SceneLoaderPHP.h>. Inheritance diagram for sofa::simulation::SceneLoaderPHP:. [legend]. Public Member Functions; bool canLoadFileExtension (const char *extension) override;  Pre-loading check. More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs) override;  load the file More...;  ; virtual std::string getFileTypeDesc () override;  get the file type description More...;  ; void getExtensionList (ExtensionList *list) override;  get the list of file extensions More...;  ;  Public Member Functions inherited from sofa::simulation::SceneLoader; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; virtual bool canWriteFileExtension (const char *);  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  ; virtual void write (sofa::simulation::Node *, const char *);  write scene graph in the file More...;  ; virtual bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded);  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::simulation::SceneLoader; static Listeners s_listeners;  ;  Static Public Member Functions inherited from sofa::simulation::SceneLoader; static void addListener (Listener *l);  adding a listener More...;  ; static void removeListener (Listener *l);  removing a listener More...;  ;  Static Protected Member Functions in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p.html:822,inherit,inherited,822,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_p_h_p.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::SceneLoaderXML Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SceneLoaderXML Class Reference . #include <SceneLoaderXML.h>. Inheritance diagram for sofa::simulation::SceneLoaderXML:. [legend]. Static Public Attributes; static bool loadSucceed = true;  . Public Member Functions; bool canLoadFileExtension (const char *extension) override;  Pre-loading check. More...;  ; bool canWriteFileExtension (const char *extension) override;  Pre-saving check. More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs) override;  load the file More...;  ; void write (sofa::simulation::Node *node, const char *filename) override;  write the file More...;  ; NodeSPtr doLoadFromMemory (const char *filename, const char *data);  load a scene from memory (typically : an xml into a string) More...;  ; virtual std::string getFileTypeDesc () override;  get the file type description More...;  ; void getExtensionList (ExtensionList *list) override;  get the list of file extensions More...;  ; bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded) override;  ;  Public Member Functions inherited from sofa::simulation::SceneLoader; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  . Static Public Member Functions; static NodeSPtr processXML (xml::BaseElement *xml, const char *fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html:328,Inherit,Inheritance,328,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::Simulation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::Simulation Class Referenceabstract . #include <Simulation.h>. Inheritance diagram for sofa::simulation::Simulation:. [legend]; Detailed Description; Main controller of the scene. Defines how the scene is inited at the beginning, and updated at each time step. Derives from Base in order to use smart pointers and model the parameters as Datas, which makes their edition easy in the GUI. . Static Public Attributes; static Simulation::SPtr theSimulation { nullptr };  . Public Member Functions;  Simulation ();  ; virtual ~Simulation ();  ;  Simulation (const Simulation &n)=delete;  ; Simulation & operator= (const Simulation &n)=delete;  ; virtual void print (Node *root)=delete;  Print all object in the graph. More...;  ; virtual void init (Node *root)=delete;  Initialize the objects. More...;  ; virtual void initNode (Node *node)=delete;  Init a node without changing the context of the simulation. More...;  ; virtual void animate (Node *root, SReal dt=0.0)=delete;  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; virtual void updateVisual (Node *root)=delete;  Update the Visual Models: triggers the Mappings. More...;  ; virtual void reset (Node *root)=delete;  Reset to initial state. More...;  ; virtual void initTextures (Node *root)=delete;  Initialize the textures. More...;  ; virtual void updateContext (Node *root)=delete;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; virtual void updateVisualContext (Node *root)=delete;  Update contexts. Required before drawing the scene if root flags are modified. More...;  ; virtual void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init=true)=delete;  ; virtual void computeTotalBBox (Node *root, SReal *minBB",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html:290,Inherit,Inheritance,290,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::SimulationInitDoneEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationInitDoneEvent Class Reference . #include <SimulationInitDoneEvent.h>. Inheritance diagram for sofa::simulation::SimulationInitDoneEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  SimulationInitDoneEvent ();  ;  ~SimulationInitDoneEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationInitDoneEvent(). sofa::simulation::SimulationInitDoneEvent::SimulationInitDoneEvent ; (; ). ◆ ~SimulationInitDoneEvent(). sofa::simulation::SimulationInitDoneEvent::~SimulationInitDoneEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationInitDoneEvent::GetClassName ; (; ). inlinestatic . sofasimulationSimulationInitDoneEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_done_event.html:600,inherit,inherited,600,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_done_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_done_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::SimulationInitStartEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationInitStartEvent Class Reference . #include <SimulationInitStartEvent.h>. Inheritance diagram for sofa::simulation::SimulationInitStartEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  SimulationInitStartEvent ();  ;  ~SimulationInitStartEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationInitStartEvent(). sofa::simulation::SimulationInitStartEvent::SimulationInitStartEvent ; (; ). ◆ ~SimulationInitStartEvent(). sofa::simulation::SimulationInitStartEvent::~SimulationInitStartEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationInitStartEvent::GetClassName ; (; ). inlinestatic . sofasimulationSimulationInitStartEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_start_event.html:606,inherit,inherited,606,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_start_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_start_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::SimulationInitTexturesDoneEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationInitTexturesDoneEvent Class Reference . #include <SimulationInitTexturesDoneEvent.h>. Inheritance diagram for sofa::simulation::SimulationInitTexturesDoneEvent:. [legend]; Detailed Description; Event fired when sofa::simulation::Simulation::initTextures has been called. . Public Member Functions;  SimulationInitTexturesDoneEvent ()=default;  ;  ~SimulationInitTexturesDoneEvent () override=default;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationInitTexturesDoneEvent(). sofa::simulation::SimulationInitTexturesDoneEvent::SimulationInitTexturesDoneEvent ; (; ). default . ◆ ~SimulationInitTexturesDoneEvent(). sofa::simulation::SimulationInitTexturesDoneEvent::~SimulationInitTexturesDoneEvent ; (; ). overridedefault . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationInitTexturesDoneEvent::GetClassName ; (; ). in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event.html:694,inherit,inherited,694,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_init_textures_done_event.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::SimulationStartEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationStartEvent Class Reference . #include <SimulationStartEvent.h>. Inheritance diagram for sofa::simulation::SimulationStartEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  SimulationStartEvent ();  ;  ~SimulationStartEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationStartEvent(). sofa::simulation::SimulationStartEvent::SimulationStartEvent ; (; ). ◆ ~SimulationStartEvent(). sofa::simulation::SimulationStartEvent::~SimulationStartEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationStartEvent::GetClassName ; (; ). inlinestatic . sofasimulationSimulationStartEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_start_event.html:582,inherit,inherited,582,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_start_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_start_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::SimulationStopEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SimulationStopEvent Class Reference . #include <SimulationStopEvent.h>. Inheritance diagram for sofa::simulation::SimulationStopEvent:. [legend]; Detailed Description; Event fired when needed to stop the animation. . Public Member Functions;  SimulationStopEvent ();  ;  ~SimulationStopEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SimulationStopEvent(). sofa::simulation::SimulationStopEvent::SimulationStopEvent ; (; ). ◆ ~SimulationStopEvent(). sofa::simulation::SimulationStopEvent::~SimulationStopEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::SimulationStopEvent::GetClassName ; (; ). inlinestatic . sofasimulationSimulationStopEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_stop_event.html:576,inherit,inherited,576,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_stop_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation_stop_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::SolveConstraintSystemEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::SolveConstraintSystemEndEvent Class Reference . #include <SolveConstraintSystemEndEvent.h>. Inheritance diagram for sofa::simulation::SolveConstraintSystemEndEvent:. [legend]. Public Member Functions;  SolveConstraintSystemEndEvent ();  ;  ~SolveConstraintSystemEndEvent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ SolveConstraintSystemEndEvent(). sofa::simulation::SolveConstraintSystemEndEvent::SolveConstraintSystemEndEvent ; (; ). inline . ◆ ~SolveConstraintSystemEndEvent(). sofa::simulation::SolveConstraintSystemEndEvent::~SolveConstraintSystemEndEvent ; (; ). inlineoverride . Function details. ◆ GetClassName(). static const char* sofa::simulation::SolveConstraintSystemEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationSolveConstraintSystemEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_constraint_system_end_event.html:565,inherit,inherited,565,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_constraint_system_end_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_constraint_system_end_event.html,10,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::SolveVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::SolveVisitor Class Reference . #include <SolveVisitor.h>. Inheritance diagram for sofa::simulation::SolveVisitor:. [legend]; Detailed Description; Used by the animation loop: send the solve signal to the others solvers This visitor is able to run the solvers sequentially or concurrently. . Protected Attributes; SReal dt;  ; sofa::core::MultiVecCoordId x;  ; sofa::core::MultiVecDerivId v;  ; bool m_parallelSolve {false };  ; bool m_computeForceIsolatedInteractionForceFields { false };  ; std::list< SolveVisitorTask > m_tasks;  Container for the parallel tasks. More...;  ; sofa::simulation::CpuTask::Status m_status;  Status for the parallel tasks. More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  SolveVisitor (const sofa::core::ExecParams *params, SReal _dt, sofa::core::MultiVecCoordId X=sofa::core::VecCoordId::position(), sofa::core::MultiVecDerivId V=sofa::core::VecDerivId::velocity(), bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false);  ;  SolveVisitor (const sofa::core::ExecParams *params, SReal _dt, bool free, bool _parallelSolve=false, bool computeForceIsolatedInteractionForceFields=false);  ; virtual void processSolver (simulation::Node *node, sofa::core::behavior::OdeSolver *b);  ; void fwdInteractionForceField (Node *node, core::behavior::BaseInteractionForceField *forceField);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *) override;  Callback method called after child node have been processed and befor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html:944,inherit,inherited,944,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::SolveVisitorTask Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SolveVisitorTask Class Reference . #include <SolveVisitor.h>; A task to provide to a task scheduler in which a solver solves. ; More... Inheritance diagram for sofa::simulation::SolveVisitorTask:. [legend]; Detailed Description; A task to provide to a task scheduler in which a solver solves. . Public Member Functions;  SolveVisitorTask (sofa::simulation::CpuTask::Status *status, sofa::core::behavior::OdeSolver *odeSolver, const sofa::core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId x, sofa::core::MultiVecDerivId v);  ;  ~SolveVisitorTask () override=default;  ; sofa::simulation::Task::MemoryAlloc run () final;  ;  Public Member Functions inherited from sofa::simulation::CpuTask; Status * getStatus (void) const override final;  ;  CpuTask (Status *status, int scheduledThread=-1);  ; virtual ~CpuTask ()=default;  ;  Public Member Functions inherited from sofa::simulation::Task;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; int getScheduledThread () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Task; int m_id;  ;  Protected Attributes inherited from sofa::simulation::Task; int m_scheduledThread;  ;  Static Public Member Functions inherited from sofa::simulation::Task; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Constructor details. ◆ SolveVisitorTask(). sofa::simulation::SolveVisitorTask::SolveVisitorTask ; (; sofa::simulation::CpuTask::Status * ; status, . sofa::core::behavior::OdeSolver * ; odeSolver, . const sofa::core::ExecPar",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html:867,inherit,inherited,867,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::StateChangeVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::StateChangeVisitor Class Reference . #include <StateChangeVisitor.h>. Inheritance diagram for sofa::simulation::StateChangeVisitor:. [legend]. Protected Attributes; bool root;  ; sofa::core::topology::Topology * m_source;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  StateChangeVisitor (const sofa::core::ExecParams *params, sofa::core::topology::Topology *source);  ; virtual void processStateChange (sofa::core::behavior::BaseMechanicalState *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html:479,inherit,inherited,479,api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_state_change_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::StdTaskAllocator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::StdTaskAllocator Class Reference . Inheritance diagram for sofa::simulation::StdTaskAllocator:. [legend]. Public Member Functions; void * allocate (std::size_t sz) final;  ; void free (void *ptr, std::size_t sz) final;  . Function details. ◆ allocate(). void* sofa::simulation::StdTaskAllocator::allocate ; (; std::size_t ; sz). inlinefinalvirtual . Implements sofa::simulation::Task::Allocator. ◆ free(). void sofa::simulation::StdTaskAllocator::free ; (; void * ; ptr, . std::size_t ; sz . ). inlinefinalvirtual . Implements sofa::simulation::Task::Allocator. sofasimulationStdTaskAllocator; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_std_task_allocator.html:241,Inherit,Inheritance,241,api/master/sofa/html/classsofa_1_1simulation_1_1_std_task_allocator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_std_task_allocator.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::StoreResetStateVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::StoreResetStateVisitor Class Reference . #include <ResetVisitor.h>. Inheritance diagram for sofa::simulation::StoreResetStateVisitor:. [legend]. Public Member Functions;  StoreResetStateVisitor (const core::ExecParams *params);  ; void processObject (core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorCont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html:280,Inherit,Inheritance,280,api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_store_reset_state_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::Task Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::Task Class Referenceabstract . #include <Task.h>. Inheritance diagram for sofa::simulation::Task:. [legend]; Detailed Description; Task class interface . Classes; class  Allocator;  Task Allocator class interface used to allocate tasks. More...;  ; class  Status;  Task Status class interface used to synchronize tasks. More...;  . Public Attributes; int m_id;  . Protected Attributes; int m_scheduledThread;  . Public Member Functions;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; virtual MemoryAlloc run ()=0;  ; virtual Task::Status * getStatus (void) const =0;  ; int getScheduledThread () const;  . Static Public Member Functions; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Attribute details. ◆ m_id. int sofa::simulation::Task::m_id. ◆ m_scheduledThread. int sofa::simulation::Task::m_scheduledThread. protected . Constructor details. ◆ Task(). sofa::simulation::Task::Task ; (; int ; scheduledThread). ◆ ~Task(). virtual sofa::simulation::Task::~Task ; (; ). virtualdefault . Function details. ◆ getAllocator(). Task::Allocator * sofa::simulation::Task::getAllocator ; (; ). static . ◆ getScheduledThread(). int sofa::simulation::Task::getScheduledThread ; (; ); const. ◆ getStatus(). virtual Task::Status* sofa::simulation::Task::getStatus ; (; void ; ); const. pure virtual . Implemented in sofa::simulation::CpuTask. ◆ operator delete() [1/2]. void sofa::simulation::Task::operator delete ; (; void * ; ptr). static . ◆ op",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task.html:334,Inherit,Inheritance,334,api/master/sofa/html/classsofa_1_1simulation_1_1_task.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::Task::Allocator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::Task::Allocator Class Referenceabstract . #include <Task.h>; Task Allocator class interface used to allocate tasks. ; More... Inheritance diagram for sofa::simulation::Task::Allocator:. [legend]; Detailed Description; Task Allocator class interface used to allocate tasks. . Public Member Functions; virtual void * allocate (std::size_t sz)=0;  ; virtual void free (void *ptr, std::size_t sz)=0;  . Function details. ◆ allocate(). virtual void* sofa::simulation::Task::Allocator::allocate ; (; std::size_t ; sz). pure virtual . Implemented in sofa::simulation::StdTaskAllocator. ◆ free(). virtual void sofa::simulation::Task::Allocator::free ; (; void * ; ptr, . std::size_t ; sz . ). pure virtual . Implemented in sofa::simulation::StdTaskAllocator. sofasimulationTaskAllocator; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html:331,Inherit,Inheritance,331,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html,1,['Inherit'],['Inheritance']
Modifiability,﻿. SOFA API: sofa::simulation::Task::Status Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::Task::Status Class Referenceabstract . #include <Task.h>; Task Status class interface used to synchronize tasks. ; More... Inheritance diagram for sofa::simulation::Task::Status:. [legend]; Detailed Description; Task Status class interface used to synchronize tasks. . Public Member Functions; virtual ~Status ()=default;  ; virtual bool isBusy () const =0;  ; virtual int setBusy (bool busy)=0;  . Constructor details. ◆ ~Status(). virtual sofa::simulation::Task::Status::~Status ; (; ). virtualdefault . Function details. ◆ isBusy(). virtual bool sofa::simulation::Task::Status::isBusy ; (; ); const. pure virtual . Implemented in sofa::simulation::CpuTaskStatus. ◆ setBusy(). virtual int sofa::simulation::Task::Status::setBusy ; (; bool ; busy). pure virtual . Implemented in sofa::simulation::CpuTaskStatus. sofasimulationTaskStatus; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status.html:325,Inherit,Inheritance,325,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::TaskScheduler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::simulation::TaskScheduler Class Referenceabstract . #include <TaskScheduler.h>. Inheritance diagram for sofa::simulation::TaskScheduler:. [legend]; Detailed Description; Base class for a task scheduler; The API allows to:; initialize the scheduler with a number of dedicated threads; add a task to the scheduler; wait until all tasks are done etc. . Public Member Functions; virtual ~TaskScheduler ()=default;  ; virtual void init (const unsigned int nbThread=0)=0;  ; virtual void stop (void)=0;  ; virtual unsigned int getThreadCount (void) const =0;  ; virtual const char * getCurrentThreadName ()=0;  ; virtual int getCurrentThreadType ()=0;  ; virtual bool addTask (Task *task)=0;  ; virtual bool addTask (Task::Status &status, const std::function< void()> &task);  ; virtual void workUntilDone (Task::Status *status)=0;  ; virtual Task::Allocator * getTaskAllocator ()=0;  . Static Public Member Functions; static unsigned GetHardwareThreadsCount ();  . Friends; class Task;  . Constructor details. ◆ ~TaskScheduler(). virtual sofa::simulation::TaskScheduler::~TaskScheduler ; (; ). virtualdefault . Function details. ◆ addTask() [1/2]. virtual bool sofa::simulation::TaskScheduler::addTask ; (; Task * ; task). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ addTask() [2/2]. bool sofa::simulation::TaskScheduler::addTask ; (; Task::Status & ; status, . const std::function< void()> & ; task . ). virtual . ◆ getCurrentThreadName(). virtual const char* sofa::simulation::TaskScheduler::getCurrentThreadName ; (; ). pure virtual . Implemented in sofa::simulation::DefaultTaskScheduler. ◆ getCurrentThreadType(). virtual int sofa::simulation::TaskScheduler::getCurrentThreadType ; (; ). pure virtual . Implemented in sofa::simulation::D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler.html:316,Inherit,Inheritance,316,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::TopologyChangeVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::TopologyChangeVisitor Class Reference . #include <TopologyChangeVisitor.h>. Inheritance diagram for sofa::simulation::TopologyChangeVisitor:. [legend]. Protected Attributes; sofa::core::topology::Topology * m_source;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  TopologyChangeVisitor (const sofa::core::ExecParams *params, sofa::core::topology::Topology *source);  ;  ~TopologyChangeVisitor () override;  ; virtual void processTopologyChange (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html:477,inherit,inherited,477,api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_topology_change_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::TransformationVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::TransformationVisitor Class Reference . #include <TransformationVisitor.h>. Inheritance diagram for sofa::simulation::TransformationVisitor:. [legend]. Protected Attributes; Vec3 translation;  ; Vec3 rotation;  ; Vec3 scale;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  TransformationVisitor (const sofa::core::ExecParams *params);  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void processVisualModel (simulation::Node *node, core::visual::VisualModel *v);  ; void processMechanicalState (simulation::Node *node, core::behavior::BaseMechanicalState *m);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &rep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html:485,inherit,inherited,485,api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_transformation_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::UpdateBoundingBoxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateBoundingBoxVisitor Class Reference . #include <UpdateBoundingBoxVisitor.h>. Inheritance diagram for sofa::simulation::UpdateBoundingBoxVisitor:. [legend]. Public Member Functions;  UpdateBoundingBoxVisitor (const sofa::core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual const char * getClassName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor.html:854,inherit,inherited,854,api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_bounding_box_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::UpdateContextVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::UpdateContextVisitor Class Reference . #include <UpdateContextVisitor.h>. Inheritance diagram for sofa::simulation::UpdateContextVisitor:. [legend]. Protected Attributes; Node * startingNode;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  UpdateContextVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html:451,inherit,inherited,451,api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_context_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::UpdateInternalDataVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateInternalDataVisitor Class Reference . #include <UpdateInternalDataVisitor.h>. Inheritance diagram for sofa::simulation::UpdateInternalDataVisitor:. [legend]; Detailed Description; Triggers the updateInternal() function to update method called when variables (used to compute other internal variables) are modified . Public Member Functions;  UpdateInternalDataVisitor (const core::ExecParams *params);  ; void processUpdateInternalData (simulation::Node *node, sofa::core::objectmodel::BaseObject *baseObj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html:469,variab,variables,469,api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html,5,"['Inherit', 'variab']","['Inheritance', 'variables']"
Modifiability,"﻿. SOFA API: sofa::simulation::UpdateLinksVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateLinksVisitor Class Reference . #include <UpdateLinksVisitor.h>. Inheritance diagram for sofa::simulation::UpdateLinksVisitor:. [legend]. Public Member Functions;  UpdateLinksVisitor (const core::ExecParams *params);  ; void processObject (core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor.html:278,Inherit,Inheritance,278,api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_links_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::UpdateMappingEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::UpdateMappingEndEvent Class Reference . #include <UpdateMappingEndEvent.h>. Inheritance diagram for sofa::simulation::UpdateMappingEndEvent:. [legend]; Detailed Description; Event fired by Simulation::animate() after computing a new animation step. AuthorJeremie Allard . Protected Attributes; SReal dt;  ;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  . Public Member Functions;  UpdateMappingEndEvent (SReal dt);  ;  ~UpdateMappingEndEvent () override;  ; SReal getDt () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Attribute details. ◆ dt. SReal sofa::simulation::UpdateMappingEndEvent::dt. protected . Constructor details. ◆ UpdateMappingEndEvent(). sofa::simulation::UpdateMappingEndEvent::UpdateMappingEndEvent ; (; SReal ; dt). ◆ ~UpdateMappingEndEvent(). sofa::simulation::UpdateMappingEndEvent::~UpdateMappingEndEvent ; (; ). override . Function details. ◆ GetClassName(). static const char* sofa::simulation::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_end_event.html:598,inherit,inherited,598,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_end_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_end_event.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::UpdateMappingVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateMappingVisitor Class Reference . #include <UpdateMappingVisitor.h>. Inheritance diagram for sofa::simulation::UpdateMappingVisitor:. [legend]; Detailed Description; propagating position and velocity through non-mechanical mappings (while MechanicalPropagateOnlyPositionAndVelocityVisitor is propagating mechanical mappings) . Public Member Functions;  UpdateMappingVisitor (const sofa::core::ExecParams *params);  ; void processMapping (simulation::Node *node, core::BaseMapping *obj);  ; void processMechanicalMapping (simulation::Node *, core::BaseMapping *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html:284,Inherit,Inheritance,284,api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_mapping_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::UpdateSimulationContextVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateSimulationContextVisitor Class Reference . #include <UpdateContextVisitor.h>. Inheritance diagram for sofa::simulation::UpdateSimulationContextVisitor:. [legend]. Public Member Functions;  UpdateSimulationContextVisitor (const core::ExecParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::UpdateContextVisitor;  UpdateContextVisitor (const core::ExecParams *params);  ; const char * getCategoryName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html:741,inherit,inherited,741,api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_simulation_context_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::UpdateVisualContextVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::UpdateVisualContextVisitor Class Reference . #include <UpdateContextVisitor.h>. Inheritance diagram for sofa::simulation::UpdateVisualContextVisitor:. [legend]. Public Member Functions;  UpdateVisualContextVisitor (const sofa::core::visual::VisualParams *vparams);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::UpdateContextVisitor;  UpdateContextVisitor (const core::ExecParams *params);  ; const char * getCategoryName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *nod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html:742,inherit,inherited,742,api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_visual_context_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::VelocityThresholdVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::VelocityThresholdVisitor Class Reference . #include <VelocityThresholdVisitor.h>. Inheritance diagram for sofa::simulation::VelocityThresholdVisitor:. [legend]. Protected Attributes; core::MultiVecId vid;  Id of the vector to process. More...;  ; SReal threshold;  All the entries below this threshold will be set to 0. More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions; Visitor::Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ;  VelocityThresholdVisitor (const core::ExecParams *params, core::MultiVecId v, SReal threshold);  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html:592,inherit,inherited,592,api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_velocity_threshold_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::Visitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::Visitor Class Reference . #include <Visitor.h>; Base class for visitors propagated recursively through the scenegraph. ; More... Inheritance diagram for sofa::simulation::Visitor:. [legend]; Detailed Description; Base class for visitors propagated recursively through the scenegraph. . Classes; class  VisitorContext;  . Public Attributes; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Protected Attributes; const sofa::core::ExecParams * params;  . Public Member Functions;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual Result processNodeTopDown (simulation::Node *);  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual const char * getClassName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html:412,Inherit,Inheritance,412,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::VisualClearVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::VisualClearVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualClearVisitor:. [legend]. Public Member Functions;  VisualClearVisitor (core::visual::VisualParams *params);  ; void processVisualModel (simulation::Node *, core::visual::VisualModel *vm) override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html:594,inherit,inherited,594,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_clear_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::VisualComputeBBoxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualComputeBBoxVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualComputeBBoxVisitor:. [legend]. Public Attributes; SReal minBBox [3];  ; SReal maxBBox [3];  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  VisualComputeBBoxVisitor (const core::ExecParams *params);  ; virtual void processBehaviorModel (simulation::Node *, core::BehaviorModel *vm);  ; virtual void processMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *vm);  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html:467,inherit,inherited,467,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::VisualDrawVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualDrawVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualDrawVisitor:. [legend]. Public Attributes; bool hasShader;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  VisualDrawVisitor (core::visual::VisualParams *params);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual void fwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; void processVisualModel (simulation::Node *node, core::visual::VisualModel *vm) override;  ; void processObject (simulation::Node *node, core::objectmodel::BaseObject *o) override;  ; virtual void bwdVisualModel (simulation::Node *node, core::visual::VisualModel *vm);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor.html:421,inherit,inherited,421,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_draw_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::VisualInitVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::VisualInitVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualInitVisitor:. [legend]. Public Member Functions;  VisualInitVisitor (core::visual::VisualParams *params);  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm) override;  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html:783,inherit,inherited,783,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_init_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::VisualUpdateVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualUpdateVisitor Class Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualUpdateVisitor:. [legend]. Protected Attributes; core::visual::VisualParams * m_vparams;  ;  Protected Attributes inherited from sofa::simulation::VisualVisitor; core::visual::VisualParams * vparams;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  VisualUpdateVisitor (core::visual::VisualParams *params);  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm) override;  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html:460,inherit,inherited,460,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::VisualVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::VisualVisitor Class Referenceabstract . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualVisitor:. [legend]. Protected Attributes; core::visual::VisualParams * vparams;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processVisualModel (simulation::Node *node, core::visual::VisualModel *vm)=0;  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html:448,inherit,inherited,448,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::WriteStateVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::WriteStateVisitor Class Reference . #include <WriteStateVisitor.h>. Inheritance diagram for sofa::simulation::WriteStateVisitor:. [legend]. Protected Attributes; std::ostream & m_out;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  WriteStateVisitor (const sofa::core::ExecParams *params, std::ostream &out);  ;  ~WriteStateVisitor () override;  ; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html:440,inherit,inherited,440,api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_write_state_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::XMLPrintVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::XMLPrintVisitor Class Reference . #include <XMLPrintVisitor.h>. Inheritance diagram for sofa::simulation::XMLPrintVisitor:. [legend]. Protected Attributes; std::ostream & m_out;  ; int level;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  XMLPrintVisitor (const sofa::core::ExecParams *params, std::ostream &out);  ; template<class T > ; void processObject (T obj);  ; template<class Seq > ; void processObjects (Seq &list);  ; void processBaseObject (sofa::core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; const char * getClassName () const override;  ; int getLevel () const;  ; void setLevel (int l);  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html:446,inherit,inherited,446,api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_x_m_l_print_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::common::VectorOperations Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::common::VectorOperations Class Reference . #include <VectorOperations.h>. Inheritance diagram for sofa::simulation::common::VectorOperations:. [legend]. Protected Attributes; VisitorExecuteFunc executeVisitor;  ; SReal result;  Result of latest v_dot operation. More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseVectorOperations; const core::ExecParams * params;  ; core::objectmodel::BaseContext * ctx;  ; SReal result;  . Public Member Functions;  VectorOperations (const sofa::core::ExecParams *params, sofa::core::objectmodel::BaseContext *ctx, bool precomputedTraversalOrder=false);  ; void v_alloc (sofa::core::MultiVecCoordId &v, const core::VecIdProperties &properties={}) override;  Allocate a temporary vector. More...;  ; void v_alloc (sofa::core::MultiVecDerivId &v, const core::VecIdProperties &properties={}) override;  ; void v_free (sofa::core::MultiVecCoordId &id, bool interactionForceField=false, bool propagate=false) override;  Free a previously allocated temporary vector. More...;  ; void v_free (sofa::core::MultiVecDerivId &id, bool interactionForceField=false, bool propagate=false) override;  ; void v_realloc (sofa::core::MultiVecCoordId &id, bool interactionForceField=false, bool propagate=false, const core::VecIdProperties &properties={}) override;  keep already allocated vectors and allocates others. If interactionForceField, also allocates mechanical states linked by an InteractionForceField More...;  ; void v_realloc (sofa::core::MultiVecDerivId &id, bool interactionForceField=false, bool propagate=false, const core::VecIdProperties &properties={}) override;  ; void v_clear (core::MultiVecId v) override;  v=0 More...;  ; void v_eq (core::MultiVecId v, core::ConstMultiVecId a) override;  v=a Mor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_vector_operations.html:534,inherit,inherited,534,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_vector_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_vector_operations.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::graph::DAGNode Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::graph::DAGNode Class Reference . #include <DAGNode.h>. Inheritance diagram for sofa::simulation::graph::DAGNode:. [legend]; Detailed Description; Define the structure of the scene as a Directed Acyclic Graph. Contains component objects (as pointer lists) and parents/childs (as DAGNode objects).; The visitor traversal is performed in two passes:; a complete top-down traversal; then a complete bottom-up traversal in the exact invert order than the top-down traversal NB: contrary to the ""tree"" traversal, there are no interlinked forward/backward callbacks. There are only forward then only backward callbacks. Note that nodes created during a traversal are not traversed if they are created upper than the current node during the top-down traversal or if they are created during the bottom-up traversal. . Classes; struct  StatusStruct;  wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) More...;  . Protected Attributes; LinkParents l_parents;  ;  Protected Attributes inherited from sofa::simulation::Node; bool debug_;  ; bool initialized;  ; std::stack< Visitor * > actionStack;  ; BaseContext * _context;  ; type::vector< MutationListener * > listener;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:358,Inherit,Inheritance,358,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::graph::DAGSimulation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::graph::DAGSimulation Class Reference . #include <DAGSimulation.h>. Inheritance diagram for sofa::simulation::graph::DAGSimulation:. [legend]; Detailed Description; Main controller of the scene. Defines how the scene is inited at the beginning, and updated at each time step. Derives from BaseObject in order to model the parameters as Datas, which makes their edition easy in the GUI. . Public Member Functions;  DAGSimulation ();  ;  ~DAGSimulation () override;  ; virtual NodeSPtr createNewGraph (const std::string &name) override;  create a new graph(or tree) and return its root node. More...;  ; virtual NodeSPtr createNewNode (const std::string &name) override;  creates and returns a new node. More...;  ; bool isDirectedAcyclicGraph () override;  Can the simulation handle a directed acyclic graph? More...;  ;  Public Member Functions inherited from sofa::simulation::Simulation;  Simulation ();  ; virtual ~Simulation ();  ;  Simulation (const Simulation &n)=delete;  ; Simulation & operator= (const Simulation &n)=delete;  ; virtual void print (Node *root)=delete;  Print all object in the graph. More...;  ; virtual void init (Node *root)=delete;  Initialize the objects. More...;  ; virtual void initNode (Node *node)=delete;  Init a node without changing the context of the simulation. More...;  ; virtual void animate (Node *root, SReal dt=0.0)=delete;  Execute one timestep. If dt is 0, the dt parameter in the graph will be used. More...;  ; virtual void updateVisual (Node *root)=delete;  Update the Visual Models: triggers the Mappings. More...;  ; virtual void reset (Node *root)=delete;  Reset to initial state. More...;  ; virtual void initTextures (Node *root)=delete;  Initialize the textures. More...;  ; virtual void updateContext (Node *root)=delete;  Update conte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_simulation.html:277,Inherit,Inheritance,277,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_simulation.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::graph::ExportDotVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::graph::ExportDotVisitor Class Reference . #include <ExportDotVisitor.h>. Inheritance diagram for sofa::simulation::graph::ExportDotVisitor:. [legend]; Detailed Description; Write the graph, starting from a root Node, into a std::ostream. The format is the DOT language from Graphviz (https://graphviz.org/) . Public Attributes; std::ostream * out;  ; bool showNode;  ; bool showObject;  ; bool showBehaviorModel;  ; bool showCollisionModel;  ; bool showVisualModel;  ; bool showMapping;  ; bool showContext;  ; bool showCollisionPipeline;  ; bool showSolver;  ; bool showMechanicalState;  ; bool showForceField;  ; bool showInteractionForceField;  ; bool showConstraint;  ; bool showMass;  ; bool showTopology;  ; bool showMechanicalMapping;  ; bool labelNodeName;  ; bool labelNodeClass;  ; bool labelObjectName;  ; bool labelObjectClass;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Protected Attributes; std::map< core::objectmodel::Base *, std::string > names;  None names in output. More...;  ; std::map< std::string, int > nextIndex;  Next indice available for duplicated names. More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  ExportDotVisitor (const sofa::core::ExecParams *params, std::ostream *out);  ;  ~ExportDotVisitor () override;  ; void processObject (Node *node, core::objectmodel::BaseObject *obj);  ; Result processNodeTopDown (Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method ret",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html:1150,inherit,inherited,1150,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_export_dot_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::graph::GetDownObjectsVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::graph::GetDownObjectsVisitor Class Reference . get all down objects respecting specified class_info and tags ; More... Inheritance diagram for sofa::simulation::graph::GetDownObjectsVisitor:. [legend]; Detailed Description; get all down objects respecting specified class_info and tags . Protected Attributes; const sofa::core::objectmodel::ClassInfo & _class_info;  ; DAGNode::GetObjectsCallBack & _container;  ; const sofa::core::objectmodel::TagSet & _tags;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  GetDownObjectsVisitor (const sofa::core::objectmodel::ClassInfo &class_info, DAGNode::GetObjectsCallBack &container, const sofa::core::objectmodel::TagSet &tags);  ;  ~GetDownObjectsVisitor () override;  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html:728,inherit,inherited,728,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_down_objects_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::graph::GetUpObjectsVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::graph::GetUpObjectsVisitor Class Reference . get all up objects respecting specified class_info and tags ; More... Inheritance diagram for sofa::simulation::graph::GetUpObjectsVisitor:. [legend]; Detailed Description; get all up objects respecting specified class_info and tags . Protected Attributes; DAGNode * _searchNode;  ; const sofa::core::objectmodel::ClassInfo & _class_info;  ; DAGNode::GetObjectsCallBack & _container;  ; const sofa::core::objectmodel::TagSet & _tags;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  GetUpObjectsVisitor (DAGNode *searchNode, const sofa::core::objectmodel::ClassInfo &class_info, DAGNode::GetObjectsCallBack &container, const sofa::core::objectmodel::TagSet &tags);  ;  ~GetUpObjectsVisitor () override;  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_up_objects_visitor.html:744,inherit,inherited,744,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_up_objects_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_get_up_objects_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalAccFromFVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalAccFromFVisitor Class Reference . #include <MechanicalAccFromFVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalAccFromFVisitor:. [legend]; Detailed Description; Compute accelerations generated by given forces . Public Attributes; sofa::core::MultiVecDerivId a;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalAccFromFVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId a);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMass (simulation::Node *, sofa::core::behavior::BaseMass *mass) override;  Process the BaseMass. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryNam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_acc_from_f_visitor.html:601,inherit,inherited,601,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_acc_from_f_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_acc_from_f_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalAccumulateJacobian Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalAccumulateJacobian Class Reference . #include <MechanicalAccumulateJacobian.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalAccumulateJacobian:. [legend]; Detailed Description; This class define a visitor which will go through the scene graph in reverse order and call the method applyJT of each mechanical mapping (See alsosofa::core::BaseMapping) . Protected Attributes; core::MultiMatrixDerivId res;  ; const sofa::core::ConstraintParams * cparams;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalAccumulateJacobian (const core::ConstraintParams *_cparams, core::MultiMatrixDerivId _res);  ; void bwdMechanicalMapping (simulation::Node *node, core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this visitor can be parallelized. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, core::BaseMapping *) override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_jacobian.html:794,inherit,inherited,794,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_jacobian.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_jacobian.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalAccumulateMatrixDeriv Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalAccumulateMatrixDeriv Class Reference . #include <MechanicalAccumulateMatrixDeriv.h>; Accumulate Jacobian matrices through the mappings up to the independent DOFs. ; More... Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalAccumulateMatrixDeriv:. [legend]; Detailed Description; Accumulate Jacobian matrices through the mappings up to the independent DOFs. . Protected Attributes; sofa::core::MultiMatrixDerivId res;  ; const sofa::core::ConstraintParams * cparams;  ; bool reverseOrder;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalAccumulateMatrixDeriv (const sofa::core::ConstraintParams *_cparams, sofa::core::MultiMatrixDerivId _res, bool _reverseOrder=false);  ; const sofa::core::ConstraintParams * constraintParams () const;  ; void bwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; bool childOrderReversed (simulation::Node *) override;  Return true to reverse the order of traversal of child nodes. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  This visitor must go through all mechanical mappings, even if isMechanical flag is disabled. More...;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this visitor can be parallelized. More...;  ;  Public Member Funct",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_matrix_deriv.html:828,inherit,inherited,828,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_matrix_deriv.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_accumulate_matrix_deriv.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalAddMBK_ToMatrixVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalAddMBK_ToMatrixVisitor Class Reference . #include <MechanicalAddMBK_ToMatrixVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalAddMBK_ToMatrixVisitor:. [legend]; Detailed Description; Accumulate the entries of a mechanical matrix (mass or stiffness) of the whole scene . Public Attributes; const sofa::core::behavior::MultiMatrixAccessor * matrix;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalAddMBK_ToMatrixVisitor (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *_matrix);  ; const char * getClassName () const override;  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdForceField (simulation::Node *, core::behavior::BaseForceField *ff) override;  Process all the BaseForceField. More...;  ; bool stopAtMechanicalMapping (simulation::Node *node, core::BaseMapping *map) override;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Nod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_k___to_matrix_visitor.html:693,inherit,inherited,693,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_k___to_matrix_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_k___to_matrix_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalAddMBKdxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalAddMBKdxVisitor Class Reference . #include <MechanicalAddMBKdxVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalAddMBKdxVisitor:. [legend]; Detailed Description; Accumulate the product of the system matrix by a given vector. Typically used in implicit integration solved by a Conjugate Gradient algorithm. The current value of the dx vector is used. This action is typically called after a MechanicalPropagateDxAndResetForceVisitor. . Public Attributes; sofa::core::MultiVecDerivId res;  ; bool accumulate;  Accumulate everything back to the DOFs through the mappings. More...;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalAddMBKdxVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res, bool accumulate=true);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdForceField (simulation::Node *, sofa::core::behavior::BaseForceField *ff) override;  Process all the BaseForceField. More...;  ; void bwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_kdx_visitor.html:917,inherit,inherited,917,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_kdx_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_kdx_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalAddMDxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalAddMDxVisitor Class Reference . #include <MechanicalAddMDxVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalAddMDxVisitor:. [legend]; Detailed Description; Accumulate the product of the mass matrix by a given vector. Typically used in implicit integration solved by a Conjugate Gradient algorithm. Note that if a dx vector is given, it is used and propagated by the mappings, Otherwise the current value is used. . Public Attributes; sofa::core::MultiVecDerivId res;  ; sofa::core::MultiVecDerivId dx;  ; SReal factor;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalAddMDxVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res, sofa::core::MultiVecDerivId dx, SReal factor);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMass (simulation::Node *, sofa::core::behavior::BaseMass *mass) override;  Process the BaseMass. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; bool isThreadSafe () const override;  Specify wheth",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor.html:856,inherit,inherited,856,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalAddSeparateGravityVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalAddSeparateGravityVisitor Class Reference . #include <MechanicalAddSeparateGravityVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalAddSeparateGravityVisitor:. [legend]; Detailed Description; Add dt*mass*Gravity to the velocity This is called if the mass wants to be added separately to the mm from the other forces . Public Attributes; sofa::core::MultiVecDerivId res;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalAddSeparateGravityVisitor (const sofa::core::MechanicalParams *m_mparams, sofa::core::MultiVecDerivId res);  ; Result fwdMass (simulation::Node *, sofa::core::behavior::BaseMass *mass) override;  Process the BaseMass. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_separate_gravity_visitor.html:719,inherit,inherited,719,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_separate_gravity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_separate_gravity_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalApplyConstraintsVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalApplyConstraintsVisitor Class Reference . #include <MechanicalApplyConstraintsVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalApplyConstraintsVisitor:. [legend]; Detailed Description; Apply the constraints as filters to the given vector. This works for simple independent constraints, like maintaining a fixed point. . Public Attributes; sofa::core::MultiVecDerivId res;  ; double ** W;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalApplyConstraintsVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res, double **W=nullptr);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; void bwdProjectiveConstraintSet (simulation::Node *, sofa::core::behavior::BaseProjectiveConstraintSet *c) override;  Process all the BaseProjectiveConstraintSet. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html:736,inherit,inherited,736,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalApplyProjectiveConstraint_ToMatrixVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalApplyProjectiveConstraint_ToMatrixVisitor Class Reference . #include <MechanicalApplyProjectiveConstraint_ToMatrixVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalApplyProjectiveConstraint_ToMatrixVisitor:. [legend]; Detailed Description; Apply projective constraints of the whole scene . Public Attributes; const sofa::core::behavior::MultiMatrixAccessor * matrix;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalApplyProjectiveConstraint_ToMatrixVisitor (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *_matrix);  ; virtual const char * getClassName () const override;  ; virtual Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdProjectiveConstraintSet (simulation::Node *, core::behavior::BaseProjectiveConstraintSet *c) override;  Process all the BaseProjectiveConstraintSet. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_projective_constraint___to_matrix_visitor.html:732,inherit,inherited,732,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_projective_constraint___to_matrix_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_projective_constraint___to_matrix_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalBeginIntegrationVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalBeginIntegrationVisitor Class Reference . #include <MechanicalBeginIntegrationVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalBeginIntegrationVisitor:. [legend]; Detailed Description; Visitor used to prepare a time integration step. Typically, does nothing. . Public Attributes; SReal dt;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalBeginIntegrationVisitor (const sofa::core::ExecParams *_params, SReal _dt);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_begin_integration_visitor.html:638,inherit,inherited,638,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_begin_integration_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_begin_integration_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalBuildConstraintMatrix Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalBuildConstraintMatrix Class Reference . #include <MechanicalBuildConstraintMatrix.h>; Call each BaseConstraintSet to build the Jacobian matrices. ; More... Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalBuildConstraintMatrix:. [legend]; Detailed Description; Call each BaseConstraintSet to build the Jacobian matrices. . Protected Attributes; sofa::core::MultiMatrixDerivId res;  ; unsigned int & contactId;  ; const sofa::core::ConstraintParams * cparams;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalBuildConstraintMatrix (const sofa::core::ConstraintParams *_cparams, sofa::core::MultiMatrixDerivId _res, unsigned int &_contactId);  ; const sofa::core::ConstraintParams * constraintParams () const;  ; Result fwdConstraintSet (simulation::Node *, sofa::core::behavior::BaseConstraintSet *c) override;  Process all the BaseConstraintSet. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  This visitor must go through all mechanical mappings, even if isMechanical flag is disabled. More...;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this visitor can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_build_constraint_matrix.html:799,inherit,inherited,799,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_build_constraint_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_build_constraint_matrix.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalComputeContactForceVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalComputeContactForceVisitor Class Reference . #include <MechanicalComputeContactForceVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalComputeContactForceVisitor:. [legend]; Detailed Description; Accumulate only the contact forces computed in applyContactForce. This action is typically called after a MechanicalResetForceVisitor. . Public Attributes; sofa::core::MultiVecDerivId res;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalComputeContactForceVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; void bwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::Exe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_contact_force_visitor.html:734,inherit,inherited,734,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_contact_force_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_contact_force_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalComputeDfVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalComputeDfVisitor Class Reference . #include <MechanicalComputeDfVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalComputeDfVisitor:. [legend]; Detailed Description; Compute the variation of force corresponding to a variation of position. This action is typically called after a MechanicalPropagateDxVisitor. . Public Attributes; sofa::core::MultiVecDerivId res;  ; bool accumulate;  Accumulate everything back to the DOFs through the mappings. More...;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalComputeDfVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res);  ;  MechanicalComputeDfVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res, bool accumulate);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdForceField (simulation::Node *, sofa::core::behavior::BaseForceField *ff) override;  Process all the BaseForceField. More...;  ; void bwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_df_visitor.html:793,inherit,inherited,793,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_df_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_df_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalComputeEnergyVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalComputeEnergyVisitor Class Reference . #include <MechanicalComputeEnergyVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalComputeEnergyVisitor:. [legend]; Detailed Description; Compute the amount of mechanical energy @author Francois Faure; . Public Member Functions;  MechanicalComputeEnergyVisitor (const sofa::core::MechanicalParams *mparams);  ;  ~MechanicalComputeEnergyVisitor () override;  ; SReal getKineticEnergy ();  ; SReal getPotentialEnergy ();  ; Result fwdMass (simulation::Node *, sofa::core::behavior::BaseMass *mass) override;  Process the BaseMass. More...;  ; Result fwdForceField (simulation::Node *, sofa::core::behavior::BaseForceField *f) override;  Process the BaseForceField. More...;  ; const char * getClassName () const override;  ; void execute (sofa::core::objectmodel::BaseContext *c, bool precomputedTraversalOrder=false) override;  Alias for context->executeVisitor(this) More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_energy_visitor.html:352,Inherit,Inheritance,352,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_energy_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_energy_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalComputeForceVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalComputeForceVisitor Class Reference . #include <MechanicalComputeForceVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalComputeForceVisitor:. [legend]; Detailed Description; Accumulate the forces (internal and interactions). This action is typically called after a MechanicalResetForceVisitor. . Public Attributes; sofa::core::MultiVecDerivId res;  ; bool accumulate;  Accumulate everything back to the DOFs through the mappings. More...;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalComputeForceVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res, bool accumulate=true);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdForceField (simulation::Node *, sofa::core::behavior::BaseForceField *ff) override;  Process all the BaseForceField. More...;  ; void bwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState when it is not mapped from parent level. More...;  ; const char * getClassName () co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_force_visitor.html:782,inherit,inherited,782,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_force_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_force_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalComputeGeometricStiffness Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalComputeGeometricStiffness Class Reference . #include <MechanicalComputeGeometricStiffness.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalComputeGeometricStiffness:. [legend]; Detailed Description; Compute the mapping geometric stiffness matrices. This action must be call before BaseMapping::getK() . Public Attributes; sofa::core::ConstMultiVecDerivId childForce;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalComputeGeometricStiffness (const sofa::core::MechanicalParams *mparams, sofa::core::ConstMultiVecDerivId childForce);  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_geometric_stiffness.html:709,inherit,inherited,709,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_geometric_stiffness.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_geometric_stiffness.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalEndIntegrationVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalEndIntegrationVisitor Class Reference . #include <MechanicalEndIntegrationVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalEndIntegrationVisitor:. [legend]; Detailed Description; Visitor applied after a time step has been applied. Does typically nothing. . Public Attributes; SReal dt;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalEndIntegrationVisitor (const sofa::core::ExecParams *_params, SReal _dt);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_end_integration_visitor.html:632,inherit,inherited,632,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_end_integration_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_end_integration_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalGetConstraintInfoVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalGetConstraintInfoVisitor Class Reference . #include <MechanicalGetConstraintInfoVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalGetConstraintInfoVisitor:. [legend]. Public Member Functions;  MechanicalGetConstraintInfoVisitor (const core::ConstraintParams *params, VecConstraintBlockInfo &blocks, VecPersistentID &ids, VecConstCoord &positions, VecConstDeriv &directions, VecConstArea &areas);  ; Result fwdConstraintSet (simulation::Node *node, core::behavior::BaseConstraintSet *cSet) override;  Process all the BaseConstraintSet. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, core::BaseMapping *) override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_constraint_info_visitor.html:364,Inherit,Inheritance,364,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_constraint_info_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_constraint_info_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalGetConstraintJacobianVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalGetConstraintJacobianVisitor Class Reference . #include <MechanicalGetConstraintJacobianVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalGetConstraintJacobianVisitor:. [legend]; Detailed Description; Compute the size of a mechanical matrix (mass or stiffness) of the whole scene . Public Attributes; const core::ConstraintParams * cparams;  ; linearalgebra::BaseMatrix * J;  ; const sofa::core::behavior::MultiMatrixAccessor * matrix;  ; int offset;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalGetConstraintJacobianVisitor (const core::ConstraintParams *cparams, linearalgebra::BaseMatrix *_J, const sofa::core::behavior::MultiMatrixAccessor *_matrix=nullptr);  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *ms) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_constraint_jacobian_visitor.html:803,inherit,inherited,803,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_constraint_jacobian_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_constraint_jacobian_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalGetMatrixDimensionVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalGetMatrixDimensionVisitor Class Reference . #include <MechanicalGetMatrixDimensionVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalGetMatrixDimensionVisitor:. [legend]; Detailed Description; Compute the size of a mechanical matrix (mass or stiffness) of the whole scene . Public Attributes; sofa::Size *const nbRow;  ; sofa::Size *const nbCol;  ; sofa::core::behavior::MultiMatrixAccessor * matrix;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalGetMatrixDimensionVisitor (const core::ExecParams *params, sofa::Size *const _nbRow, sofa::Size *const _nbCol, sofa::core::behavior::MultiMatrixAccessor *_matrix=nullptr);  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *ms) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, core::BaseMapping *mm) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *ms) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_matrix_dimension_visitor.html:749,inherit,inherited,749,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_matrix_dimension_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_matrix_dimension_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalGetMomentumVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalGetMomentumVisitor Class Reference . #include <MechanicalGetMomentumVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalGetMomentumVisitor:. [legend]; Detailed Description; Compute the linear and angular momenta; AuthorMatthieu Nesme, 2015 . Public Member Functions;  MechanicalGetMomentumVisitor (const core::MechanicalParams *mparams);  ; const type::Vec6 & getMomentum () const;  ; virtual Result fwdMass (simulation::Node *, core::behavior::BaseMass *mass);  Process the BaseMass. More...;  ; virtual const char * getClassName () const;  ; virtual void execute (sofa::core::objectmodel::BaseContext *c, bool precomputedTraversalOrder=false);  Alias for context->executeVisitor(this) More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_momentum_visitor.html:346,Inherit,Inheritance,346,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_momentum_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_momentum_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalGetNonDiagonalMassesCountVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalGetNonDiagonalMassesCountVisitor Class Reference . #include <MechanicalGetNonDiagonalMassesCountVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalGetNonDiagonalMassesCountVisitor:. [legend]; Detailed Description; Count the number of masses which are not diagonal . Public Attributes; sofa::Size *const m_nbNonDiagonalMassesPtr { nullptr };  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalGetNonDiagonalMassesCountVisitor (const sofa::core::MechanicalParams *mparams, SReal *result)=delete;  ;  MechanicalGetNonDiagonalMassesCountVisitor (const sofa::core::MechanicalParams *mparams, sofa::Size *result);  ; Result fwdMass (VisitorContext *ctx, sofa::core::behavior::BaseMass *mass) override;  Process the BaseMass. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_non_diagonal_masses_count_visitor.html:696,inherit,inherited,696,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_non_diagonal_masses_count_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_get_non_diagonal_masses_count_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalIdentityBlocksInJacobianVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalIdentityBlocksInJacobianVisitor Class Reference . #include <MechanicalIdentityBlocksInJacobianVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalIdentityBlocksInJacobianVisitor:. [legend]. Public Member Functions; const char * getClassName () const override;  ;  MechanicalIdentityBlocksInJacobianVisitor (const sofa::core::ExecParams *params, sofa::core::MatrixDerivId id);  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *) override;  Process the BaseMechanicalState when it is mapped from parent level. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, core::BaseMapping *) override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_identity_blocks_in_jacobian_visitor.html:385,Inherit,Inheritance,385,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_identity_blocks_in_jacobian_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_identity_blocks_in_jacobian_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor Class Reference . #include <MechanicalIntegrateConstraintVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor:. [legend]; Detailed Description; Apply the motion correction computed from constraint force influence . Public Attributes; const sofa::core::ConstraintParams * cparams;  ; const double positionFactor;  use the OdeSolver to get the position integration factor More...;  ; const double velocityFactor;  use the OdeSolver to get the position integration factor More...;  ; sofa::core::ConstMultiVecDerivId correctionId;  ; sofa::core::MultiVecDerivId dxId;  ; sofa::core::MultiVecCoordId xId;  ; sofa::core::MultiVecDerivId vId;  ; int offset;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalIntegrateConstraintsVisitor (const core::ConstraintParams *cparams, double pf, double vf, sofa::core::ConstMultiVecDerivId correction, sofa::core::MultiVecDerivId dx=sofa::core::MultiVecDerivId(sofa::core::VecDerivId::dx()), sofa::core::MultiVecCoordId x=sofa::core::MultiVecCoordId(sofa::core::VecCoordId::position()), sofa::core::MultiVecDerivId v=sofa::core::MultiVecDerivId(sofa::core::VecDerivId::velocity()));  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *ms) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html:393,Inherit,Inheritance,393,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalIntegrationVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalIntegrationVisitor Class Reference . #include <MechanicalIntegrationVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalIntegrationVisitor:. [legend]; Detailed Description; Visitor used to do a time integration step using OdeSolvers . Public Attributes; SReal dt;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalIntegrationVisitor (const sofa::core::ExecParams *m_params, SReal _dt);  ; Result fwdOdeSolver (simulation::Node *node, sofa::core::behavior::OdeSolver *obj) override;  Process the OdeSolver. More...;  ; Result fwdInteractionForceField (simulation::Node *, sofa::core::behavior::BaseInteractionForceField *obj) override;  Process all the InteractionForceField. More...;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integration_visitor.html:604,inherit,inherited,604,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integration_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integration_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalMultiVectorFromBaseVectorVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalMultiVectorFromBaseVectorVisitor Class Reference . #include <MechanicalMultiVectorFromBaseVectorVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalMultiVectorFromBaseVectorVisitor:. [legend]. Public Attributes; const sofa::linearalgebra::BaseVector * src;  ; sofa::core::MultiVecId dest;  ; const sofa::core::behavior::MultiMatrixAccessor * matrix;  ; int offset;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalMultiVectorFromBaseVectorVisitor (const core::ExecParams *params, sofa::core::MultiVecId _dest, const linearalgebra::BaseVector *_src, const sofa::core::behavior::MultiMatrixAccessor *_matrix=nullptr);  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_from_base_vector_visitor.html:719,inherit,inherited,719,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_from_base_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_from_base_vector_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalMultiVectorPeqBaseVectorVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalMultiVectorPeqBaseVectorVisitor Class Reference . #include <MechanicalMultiVectorPeqBaseVectorVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalMultiVectorPeqBaseVectorVisitor:. [legend]. Public Attributes; const sofa::linearalgebra::BaseVector * src;  ; sofa::core::MultiVecDerivId dest;  ; const sofa::core::behavior::MultiMatrixAccessor * matrix;  ; int offset;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalMultiVectorPeqBaseVectorVisitor (const core::ExecParams *params, sofa::core::MultiVecDerivId _dest, const linearalgebra::BaseVector *_src, const sofa::core::behavior::MultiMatrixAccessor *_matrix=nullptr);  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method ca",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_peq_base_vector_visitor.html:720,inherit,inherited,720,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_peq_base_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_peq_base_vector_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalMultiVectorToBaseVectorVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalMultiVectorToBaseVectorVisitor Class Reference . #include <MechanicalMultiVectorToBaseVectorVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalMultiVectorToBaseVectorVisitor:. [legend]. Public Attributes; sofa::core::ConstMultiVecId src;  ; sofa::linearalgebra::BaseVector * vect;  ; const sofa::core::behavior::MultiMatrixAccessor * matrix;  ; int offset;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalMultiVectorToBaseVectorVisitor (const core::ExecParams *params, sofa::core::ConstMultiVecId _src, linearalgebra::BaseVector *_vect, const sofa::core::behavior::MultiMatrixAccessor *_matrix=nullptr);  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* meth",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_to_base_vector_visitor.html:710,inherit,inherited,710,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_to_base_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_multi_vector_to_base_vector_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalPickParticlesVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalPickParticlesVisitor Class Reference . #include <MechanicalPickParticlesVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPickParticlesVisitor:. [legend]; Detailed Description; Find mechanical particles hit by the given ray.; A mechanical particle is defined as a 2D or 3D, position or rigid DOF which is linked to the free mechanical DOFs by mechanical mappings . Public Attributes; type::Vec3d rayOrigin;  ; type::Vec3d rayDirection;  ; double radius0;  ; double dRadius;  ; sofa::core::objectmodel::Tag tagNoPicking;  ; Particles particles;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPickParticlesVisitor (const sofa::core::ExecParams *mparams, const type::Vec3d &origin, const type::Vec3d &direction, double r0=0.001, double dr=0.0, sofa::core::objectmodel::Tag tag=sofa::core::objectmodel::Tag(""NoPicking""));  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; void getClosestParticle (sofa::core::behavior::BaseMechanicalState *&mstate, sofa::Index &indexCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_visitor.html:888,inherit,inherited,888,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalPickParticlesWithTagsVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalPickParticlesWithTagsVisitor Class Reference . #include <MechanicalPickParticlesWithTagsVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPickParticlesWithTagsVisitor:. [legend]; Detailed Description; Find mechanical particles hit by the given ray on dof containing one tag or all provided by a tag list; A mechanical particle is defined as a 2D or 3D, position or rigid DOF which is linked to the free mechanical DOFs by mechanical mappings . Public Attributes; type::Vec3d rayOrigin;  ; type::Vec3d rayDirection;  ; double radius0;  ; double dRadius;  ; std::list< sofa::core::objectmodel::Tag > tags;  ; bool mustContainAllTags;  ; Particles particles;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPickParticlesWithTagsVisitor (const sofa::core::ExecParams *mparams, const type::Vec3d &origin, const type::Vec3d &direction, double r0=0.001, double dr=0.0, std::list< sofa::core::objectmodel::Tag > _tags=std::list< sofa::core::objectmodel::Tag >(), bool _mustContainAllTags=false);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped fro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_with_tags_visitor.html:1008,inherit,inherited,1008,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_with_tags_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_with_tags_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalProjectJacobianMatrixVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalProjectJacobianMatrixVisitor Class Reference . #include <MechanicalProjectJacobianMatrixVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalProjectJacobianMatrixVisitor:. [legend]. Public Attributes; sofa::core::MultiMatrixDerivId cId;  ; SReal t;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalProjectJacobianMatrixVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiMatrixDerivId c=sofa::core::MatrixDerivId::constraintJacobian(), SReal time=0.0);  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdProjectiveConstraintSet (simulation::Node *, sofa::core::behavior::BaseProjectiveConstraintSet *c) override;  Process all the BaseProjectiveConstraintSet. More...;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_jacobian_matrix_visitor.html:598,inherit,inherited,598,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_jacobian_matrix_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_jacobian_matrix_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalProjectPositionAndVelocityVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalProjectPositionAndVelocityVisitor Class Reference . #include <MechanicalProjectPositionAndVelocityVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalProjectPositionAndVelocityVisitor:. [legend]. Public Attributes; double t;  ; sofa::core::MultiVecCoordId pos;  ; sofa::core::MultiVecDerivId vel;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalProjectPositionAndVelocityVisitor (const sofa::core::MechanicalParams *mparams, double time=0, sofa::core::MultiVecCoordId x=sofa::core::VecCoordId::position(), sofa::core::MultiVecDerivId v=sofa::core::VecDerivId::velocity());  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdProjectiveConstraintSet (simulation::Node *, sofa::core::behavior::BaseProjectiveConstraintSet *c) override;  Process all the BaseProjectiveConstraintSet. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_and_velocity_visitor.html:652,inherit,inherited,652,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_and_velocity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_and_velocity_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalProjectPositionVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalProjectPositionVisitor Class Reference . #include <MechanicalProjectPositionVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalProjectPositionVisitor:. [legend]. Public Attributes; SReal t;  ; sofa::core::MultiVecCoordId pos;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalProjectPositionVisitor (const sofa::core::MechanicalParams *mparams, SReal time=0, sofa::core::MultiVecCoordId x=sofa::core::VecCoordId::position());  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdProjectiveConstraintSet (simulation::Node *, sofa::core::behavior::BaseProjectiveConstraintSet *c) override;  Process all the BaseProjectiveConstraintSet. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_visitor.html:571,inherit,inherited,571,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_position_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalProjectVelocityVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalProjectVelocityVisitor Class Reference . #include <MechanicalProjectVelocityVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalProjectVelocityVisitor:. [legend]. Public Attributes; SReal t;  ; sofa::core::MultiVecDerivId vel;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalProjectVelocityVisitor (const sofa::core::MechanicalParams *mparams, SReal time=0, sofa::core::MultiVecDerivId v=sofa::core::VecDerivId::velocity());  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdProjectiveConstraintSet (simulation::Node *, sofa::core::behavior::BaseProjectiveConstraintSet *c) override;  Process all the BaseProjectiveConstraintSet. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_velocity_visitor.html:571,inherit,inherited,571,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_velocity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_project_velocity_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalPropagateDxAndResetForceVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalPropagateDxAndResetForceVisitor Class Reference . #include <MechanicalPropagateDxAndResetForceVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPropagateDxAndResetForceVisitor:. [legend]; Detailed Description; Same as MechanicalPropagateDxVisitor followed by MechanicalResetForceVisitor . Public Attributes; sofa::core::MultiVecDerivId dx;  ; sofa::core::MultiVecDerivId f;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPropagateDxAndResetForceVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId dx, sofa::core::MultiVecDerivId f);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState when it is not mapped from parent level. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Mem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_dx_and_reset_force_visitor.html:729,inherit,inherited,729,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_dx_and_reset_force_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_dx_and_reset_force_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalPropagateDxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalPropagateDxVisitor Class Reference . #include <MechanicalPropagateDxVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPropagateDxVisitor:. [legend]; Detailed Description; Apply a hypothetical displacement. This action does not modify the state (i.e. positions and velocities) of the objects. It is typically applied before a MechanicalComputeDfVisitor, in order to compute the df corresponding to a given dx (i.e. apply stiffness). Dx is propagated to all the layers through the mappings. . Public Attributes; sofa::core::MultiVecDerivId dx;  ; bool ignoreFlag;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPropagateDxVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId dx, bool f=false);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState when it is not mapped from parent level. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_dx_visitor.html:780,layers,layers,780,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_dx_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_dx_visitor.html,5,"['Inherit', 'inherit', 'layers']","['Inheritance', 'inherited', 'layers']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndResetForceVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndResetForceVisitor Class Reference . #include <MechanicalPropagateOnlyPositionAndResetForceVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndResetForceVisitor:. [legend]; Detailed Description; Same as MechanicalPropagateOnlyPositionVisitor followed by MechanicalResetForceVisitor; Note that this visitor only propagate through the mappings, and does not apply projective constraints as was previously done by MechanicalPropagatePositionAndResetForceVisitor. Use MechanicalProjectPositionVisitor before this visitor if projection is needed. . Public Attributes; sofa::core::MultiVecCoordId x;  ; sofa::core::MultiVecDerivId f;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPropagateOnlyPositionAndResetForceVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecCoordId x, sofa::core::MultiVecDerivId f);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_reset_force_visitor.html:436,Inherit,Inheritance,436,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_reset_force_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_reset_force_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndVelocityVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndVelocityVisitor Class Reference . #include <MechanicalPropagateOnlyPositionAndVelocityVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndVelocityVisitor:. [legend]; Detailed Description; Propagate positions and velocities to all the levels of the hierarchy. At each level, the mappings form the parent to the child is applied. After the execution of this action, all the (mapped) degrees of freedom are consistent with the independent degrees of freedom. This action is typically applied after time integration of the independent degrees of freedom.; Note that this visitor only propagate through the mappings, and does not apply projective constraints as was previously done by MechanicalPropagatePositionAndVelocityVisitor. Use MechanicalProjectPositionAndVelocityVisitor before this visitor if projection is needed. . Public Attributes; SReal currentTime;  ; sofa::core::MultiVecCoordId x;  ; sofa::core::MultiVecDerivId v;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPropagateOnlyPositionAndVelocityVisitor (const sofa::core::MechanicalParams *mparams, SReal time=0, sofa::core::MultiVecCoordId x=sofa::core::VecId::position(), sofa::core::MultiVecDerivId v=sofa::core::VecId::velocity());  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html:430,Inherit,Inheritance,430,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionVisitor Class Reference . #include <MechanicalPropagateOnlyPositionVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionVisitor:. [legend]; Detailed Description; Propagate positions to all the levels of the hierarchy. At each level, the mappings form the parent to the child is applied.; Note that this visitor only propagate through the mappings, and does not apply projective constraints as was previously done by MechanicalPropagatePositionVisitor. Use MechanicalProjectPositionVisitor before this visitor if projection is needed. . Public Attributes; SReal t;  ; sofa::core::MultiVecCoordId x;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPropagateOnlyPositionVisitor (const sofa::core::MechanicalParams *mparams, SReal time=0, sofa::core::MultiVecCoordId x=sofa::core::VecCoordId::position());  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState when it is not mapped from parent level. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; const char * getClassName () co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_visitor.html:989,inherit,inherited,989,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyVelocityVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyVelocityVisitor Class Reference . #include <MechanicalPropagateOnlyVelocityVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyVelocityVisitor:. [legend]; Detailed Description; Propagate velocities to all the levels of the hierarchy. At each level, the mappings form the parent to the child is applied. After the execution of this action, all the (mapped) degrees of freedom are consistent with the independent degrees of freedom.; Note that this visitor only propagate through the mappings, and does not apply projective constraints as was previously done by MechanicalPropagateVelocityVisitor. Use MechanicalProjectVelocityVisitor before this visitor if projection is needed. . Public Attributes; SReal currentTime;  ; sofa::core::MultiVecDerivId v;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPropagateOnlyVelocityVisitor (const sofa::core::MechanicalParams *mparams, SReal time=0, sofa::core::MultiVecDerivId v=sofa::core::VecId::velocity());  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState when it is not mapped from parent level.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_velocity_visitor.html:397,Inherit,Inheritance,397,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_velocity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_velocity_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalResetConstraintVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalResetConstraintVisitor Class Reference . #include <MechanicalResetConstraintVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalResetConstraintVisitor:. [legend]. Public Member Functions;  MechanicalResetConstraintVisitor (const sofa::core::ConstraintParams *cparams);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdConstraintSet (simulation::Node *, sofa::core::behavior::BaseConstraintSet *mm) override;  Process all the BaseConstraintSet. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTop",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_constraint_visitor.html:358,Inherit,Inheritance,358,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_constraint_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_constraint_visitor.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalResetForceVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalResetForceVisitor Class Reference . #include <MechanicalResetForceVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalResetForceVisitor:. [legend]; Detailed Description; Reset the force in all the MechanicalModel This action is typically applied before accumulating all the forces. . Public Attributes; sofa::core::MultiVecDerivId res;  ; bool onlyMapped;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalResetForceVisitor (const sofa::core::ExecParams *mparams, sofa::core::MultiVecDerivId res, bool onlyMapped=false);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=dele",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_force_visitor.html:695,inherit,inherited,695,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_force_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_reset_force_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalSetPositionAndVelocityVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalSetPositionAndVelocityVisitor Class Reference . #include <MechanicalSetPositionAndVelocityVisitor.h>; Visitor class used to set positions and velocities of the top level MechanicalStates of the hierarchy. ; More... Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalSetPositionAndVelocityVisitor:. [legend]; Detailed Description; Visitor class used to set positions and velocities of the top level MechanicalStates of the hierarchy. . Public Attributes; SReal t;  ; sofa::core::MultiVecCoordId x;  ; sofa::core::MultiVecDerivId v;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalSetPositionAndVelocityVisitor (const sofa::core::MechanicalParams *mparams, SReal time=0, sofa::core::MultiVecCoordId x=sofa::core::VecCoordId::position(), sofa::core::MultiVecDerivId v=sofa::core::VecDerivId::velocity());  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_set_position_and_velocity_visitor.html:871,inherit,inherited,871,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_set_position_and_velocity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_set_position_and_velocity_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVAllocVisitor< vtype > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVAllocVisitor< vtype > Class Template Reference . #include <MechanicalVAllocVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVAllocVisitor< vtype >:. [legend]; Detailed Description; template<sofa::core::VecType vtype>; class sofa::simulation::mechanicalvisitor::MechanicalVAllocVisitor< vtype >; Reserve an auxiliary vector identified by a symbolic constant. . Public Attributes; MyMultiVecId v;  ; const core::VecIdProperties & m_properties;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVAllocVisitor (const sofa::core::ExecParams *params, MyMultiVecId v, const core::VecIdProperties &properties={});  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_alloc_visitor.html:799,inherit,inherited,799,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_alloc_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_alloc_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVAvailVisitor< vtype > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVAvailVisitor< vtype > Class Template Reference . #include <MechanicalVAvailVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVAvailVisitor< vtype >:. [legend]; Detailed Description; template<sofa::core::VecType vtype>; class sofa::simulation::mechanicalvisitor::MechanicalVAvailVisitor< vtype >; Find the first available index for a VecId . Public Attributes; MyVecId & v;  ; StateSet states;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVAvailVisitor (const sofa::core::ExecParams *params, MyVecId &v);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_avail_visitor.html:749,inherit,inherited,749,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_avail_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_avail_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVDotVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVDotVisitor Class Reference . #include <MechanicalVDotVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVDotVisitor:. [legend]; Detailed Description; Compute the dot product of two vectors . Public Attributes; sofa::core::ConstMultiVecId a;  ; sofa::core::ConstMultiVecId b;  ; SReal *const m_total { nullptr };  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVDotVisitor (const sofa::core::ExecParams *params, sofa::core::ConstMultiVecId a, sofa::core::ConstMultiVecId b, SReal *t);  ; Result fwdMechanicalState (VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_dot_visitor.html:647,inherit,inherited,647,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_dot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_dot_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVFreeVisitor< vtype > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVFreeVisitor< vtype > Class Template Reference . #include <MechanicalVFreeVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVFreeVisitor< vtype >:. [legend]; Detailed Description; template<sofa::core::VecType vtype>; class sofa::simulation::mechanicalvisitor::MechanicalVFreeVisitor< vtype >; Free an auxiliary vector identified by a symbolic constant . Public Attributes; MyMultiVecId v;  ; bool interactionForceField;  ; bool propagate;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVFreeVisitor (const sofa::core::ExecParams *params, MyMultiVecId v, bool interactionForceField=false, bool propagate=false);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdInteractionForceField (simulation::Node *node, sofa::core::behavior::BaseInteractionForceField *ff) override;  Process all the InteractionForceField. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_free_visitor.html:793,inherit,inherited,793,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_free_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_free_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVInitVisitor< vtype > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVInitVisitor< vtype > Class Template Reference . #include <MechanicalVInitVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVInitVisitor< vtype >:. [legend]; Detailed Description; template<sofa::core::VecType vtype>; class sofa::simulation::mechanicalvisitor::MechanicalVInitVisitor< vtype >; Initialize unset MState destVecId vectors with srcVecId vectors value. . Public Attributes; DestMultiVecId vDest;  ; SrcMultiVecId vSrc;  ; bool m_propagate;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVInitVisitor (const sofa::core::ExecParams *params, DestMultiVecId _vDest, SrcMultiVecId _vSrc=SrcMultiVecId::null(), bool propagate=false);  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; Result fwdMechanicalState (simulation::Node *node, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *node, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool rea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_init_visitor.html:805,inherit,inherited,805,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_init_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_init_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVMultiOpVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVMultiOpVisitor Class Reference . #include <MechanicalVMultiOpVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVMultiOpVisitor:. [legend]; Detailed Description; Perform a sequence of linear vector accumulation operation $r_i = sum_j (v_j*f_{ij}); This is used to compute in on steps operations such as $v = v + a*dt, x = x + v*dt$. Note that if the result vector appears inside the expression, it must be the first operand. . Public Attributes; bool mapped;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Protected Attributes; VMultiOp ops;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  MechanicalVMultiOpVisitor (const sofa::core::ExecParams *params, const VMultiOp &o);  ; MechanicalVMultiOpVisitor & setMapped (bool m=true);  ; Result fwdMechanicalState (VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; virtual std::string getIn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_multi_op_visitor.html:822,inherit,inherited,822,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_multi_op_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_multi_op_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVNormVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVNormVisitor Class Reference . #include <MechanicalVNormVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVNormVisitor:. [legend]; Detailed Description; Compute the norm of a vector. The type of norm is set by parameter l. Use 0 for the infinite norm. Note that the 2-norm is more efficiently computed using the square root of the dot product. AuthorFrancois Faure, 2013 . Public Attributes; sofa::core::ConstMultiVecId a;  ; unsigned l;  Type of norm: for l>0, , while we use l=0 for the infinite norm: . More...;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVNormVisitor (const sofa::core::ExecParams *params, sofa::core::ConstMultiVecId a, unsigned l);  ; SReal getResult () const;  ; Result fwdMechanicalState (VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_norm_visitor.html:851,inherit,inherited,851,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_norm_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_norm_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVOpVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVOpVisitor Class Reference . #include <MechanicalVOpVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVOpVisitor:. [legend]; Detailed Description; Perform a vector operation v=a+b*f . Public Attributes; sofa::core::MultiVecId v;  ; sofa::core::ConstMultiVecId a;  ; sofa::core::ConstMultiVecId b;  ; SReal f;  ; bool mapped;  ; bool only_mapped;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVOpVisitor (const sofa::core::ExecParams *params, sofa::core::MultiVecId v, sofa::core::ConstMultiVecId a=sofa::core::ConstMultiVecId::null(), sofa::core::ConstMultiVecId b=sofa::core::ConstMultiVecId::null(), SReal f=1.0);  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  ; MechanicalVOpVisitor & setMapped (bool m=true);  ; MechanicalVOpVisitor & setOnlyMapped (bool m=true);  ; Result fwdMechanicalState (VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (VisitorContext *ctx, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisito",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_op_visitor.html:680,inherit,inherited,680,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_op_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_op_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVReallocVisitor< vtype > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVReallocVisitor< vtype > Class Template Reference . #include <MechanicalVReallocVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVReallocVisitor< vtype >:. [legend]; Detailed Description; template<sofa::core::VecType vtype>; class sofa::simulation::mechanicalvisitor::MechanicalVReallocVisitor< vtype >; Reserve an auxiliary vector identified by a symbolic constant. . Public Attributes; DestMultiVecId * v;  ; bool m_propagate;  ; bool m_interactionForceField;  ; const core::VecIdProperties & m_properties;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVReallocVisitor (const sofa::core::ExecParams *params, DestMultiVecId *v, bool interactionForceField=false, bool propagate=false, const core::VecIdProperties &properties={});  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; Result fwdMechanicalState (simulation::Node *node, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *node, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdInteractionForceField (simulation::Node *node, sofa::core::behavior::BaseInteractionForceField *ff) override;  Process all the InteractionForceField. More...;  ; const char * getClassName () const override;  ; std::st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_realloc_visitor.html:897,inherit,inherited,897,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_realloc_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_realloc_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVSizeVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalVSizeVisitor Class Reference . #include <MechanicalVSizeVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalVSizeVisitor:. [legend]; Detailed Description; Get vector size . Public Attributes; sofa::core::ConstMultiVecId v;  ; size_t * result;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalVSizeVisitor (const sofa::core::ExecParams *params, size_t *result, sofa::core::ConstMultiVecId v);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_size_visitor.html:577,inherit,inherited,577,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_size_visitor.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::xml Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Enumerations |; Functions |; Variables . sofa::simulation::xml Namespace Reference . Classes; class  AttributeElement;  ; class  BaseElement;  ; class  BaseMultiMappingElement;  ; class  DataElement;  ; class  Element;  ; class  NodeElement;  ; class  ObjectElement;  . Enumerations; enum  IncludeNodeType { INCLUDE_NODE_CHILD; , INCLUDE_NODE_GROUP; , INCLUDE_NODE_MERGE; };  Flags indicating when an element is from an included file that should be treated specifically. More...;  . Functions; void recReplaceAttribute (BaseElement *node, const char *attr, const char *value, const char *nodename=nullptr);  ; BaseElement * includeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; BaseElement * attributeNode (tinyxml2::XMLNode *root, const char *basefilename);  ; void recursiveMergeNode (BaseElement *destNode, BaseElement *srcNode);  ; BaseElement * createNode (tinyxml2::XMLNode *root, const char *basefilename, bool isRoot=false);  ; BaseElement * processXMLLoading (const char *filename, const tinyxml2::XMLDocument &doc, bool fromMem);  ; BaseElement * loadFromMemory (const char *filename, const char *data);  ; BaseElement * loadFromFile (const char *filename);  ; SOFA_SIMULATION_COMMON_API bool save (const char *filename, BaseElement *root);  . Variables; Creator< BaseElement::NodeFactory, AttributeElement > AttributeNodeClass (""Attribute"");  ; Creator< BaseElement::NodeFactory, DataElement > DataNodeClass (""Data"");  ; helper::Creator< BaseElement::NodeFactory, NodeElement > NodeNodeClass (""Node"");  ; Creator< BaseElement::NodeFactory, ObjectElement > ObjectNodeClass (""Object"");  ; int numDefault =0;  . Enumeration Type Documentation. ◆ IncludeNodeType. enum sofa::simulation::xml::IncludeNodeType. Flags indicating when an element is from an included file that should be treated specifically. . EnumeratorINCLUDE_NODE_CHILD indi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html:170,Variab,Variables,170,api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1xml.html,1,['Variab'],['Variables']
Modifiability,"﻿. SOFA API: sofa::simulation::xml::AttributeElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::xml::AttributeElement Class Reference . #include <AttributeElement.h>. Inheritance diagram for sofa::simulation::xml::AttributeElement:. [legend]. Public Member Functions;  AttributeElement (const std::string &name, const std::string &type, BaseElement *parent=nullptr);  ;  ~AttributeElement () override;  ; bool init () override;  ; bool initNode () override;  ; virtual const char * getClass () const override;  Get the node class (Scene, Mapping, ...) More...;  ; void setValue (const std::string _value);  ; const std::string & getValue () const;  ;  Public Member Functions inherited from sofa::simulation::xml::Element< core::objectmodel::BaseObject >;  Element (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~Element () override;  ; core::objectmodel::BaseObject * getTypedObject ();  ; virtual void setObject (typename Object::SPtr newObject);  ; sofa::core::objectmodel::Base * getObject () override;  Get the associated object. More...;  ;  Public Member Functions inherited from sofa::simulation::xml::BaseElement;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent () const override;  Get the parent node. More...;  ; BaseElement * getParentElement () const;  Get the parent node. More...;  ; std::string getBaseFile () override;  Get the file where this description w",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element.html:791,inherit,inherited,791,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::xml::BaseElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::xml::BaseElement Class Referenceabstract . #include <BaseElement.h>. Inheritance diagram for sofa::simulation::xml::BaseElement:. [legend]. Classes; class  child_iterator;  . Protected Attributes; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  . Public Member Functions;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; virtual const char * getClass () const =0;  Get the node class (Scene, Mapping, ...) More...;  ; sofa::core::objectmodel::Base * getObject () override=0;  Get the associated object. More...;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent () const override;  Get the parent node. More...;  ; BaseElement * getParentElement () const;  Get the parent node. More...;  ; std::string getBaseFile () override;  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual void setBaseFile (const std::string &newBaseFile);  ; const std::string & getSrcFile () const;  ; virtual void setSrcFile (const std::string &newSrcFile);  ; int getSrcLine () const;  ; virtual void setSrcLine (const int l);  ; bool isFileRoot ();  Return true if this element",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html:582,inherit,inherited,582,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::xml::BaseMultiMappingElement Class Referenceabstract . #include <BaseMultiMappingElement.h>. Inheritance diagram for sofa::simulation::xml::BaseMultiMappingElement:. [legend]. Public Member Functions;  BaseMultiMappingElement (const std::string &name, const std::string &type, BaseElement *parent=nullptr);  ; bool initNode () override;  ;  Public Member Functions inherited from sofa::simulation::xml::ObjectElement;  ObjectElement (const std::string &name, const std::string &type, BaseElement *parent=nullptr);  ;  ~ObjectElement () override;  ; bool initNode () override;  ; bool init () override;  ; virtual const char * getClass () const override;  Get the node class (Scene, Mapping, ...) More...;  ;  Public Member Functions inherited from sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >;  Element (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~Element () override;  ; sofa::core::objectmodel::BaseObject * getTypedObject ();  ; virtual void setObject (typename Object::SPtr newObject);  ; sofa::core::objectmodel::Base * getObject () override;  Get the associated object. More...;  ;  Public Member Functions inherited from sofa::simulation::xml::BaseElement;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html:613,inherit,inherited,613,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::xml::DataElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::xml::DataElement Class Reference . #include <DataElement.h>. Inheritance diagram for sofa::simulation::xml::DataElement:. [legend]. Public Member Functions;  DataElement (const std::string &name, const std::string &type, BaseElement *parent=nullptr);  ;  ~DataElement () override;  ; bool initNode () override;  ; virtual const char * getClass () const override;  Get the node class (Scene, Mapping, ...) More...;  ;  Public Member Functions inherited from sofa::simulation::xml::Element< core::objectmodel::BaseObject >;  Element (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~Element () override;  ; core::objectmodel::BaseObject * getTypedObject ();  ; virtual void setObject (typename Object::SPtr newObject);  ; sofa::core::objectmodel::Base * getObject () override;  Get the associated object. More...;  ;  Public Member Functions inherited from sofa::simulation::xml::BaseElement;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent () const override;  Get the parent node. More...;  ; BaseElement * getParentElement () const;  Get the parent node. More...;  ; std::string getBaseFile () override;  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual void setBaseFile (const std::string &newBaseFile);  ; const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_data_element.html:648,inherit,inherited,648,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_data_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_data_element.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::xml::Element< Object > Class Template Reference . #include <Element.h>. Inheritance diagram for sofa::simulation::xml::Element< Object >:. [legend]. Public Member Functions;  Element (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~Element () override;  ; Object * getTypedObject ();  ; virtual void setObject (typename Object::SPtr newObject);  ; sofa::core::objectmodel::Base * getObject () override;  Get the associated object. More...;  ;  Public Member Functions inherited from sofa::simulation::xml::BaseElement;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; virtual const char * getClass () const =0;  Get the node class (Scene, Mapping, ...) More...;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent () const override;  Get the parent node. More...;  ; BaseElement * getParentElement () const;  Get the parent node. More...;  ; std::string getBaseFile () override;  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual void setBaseFile (const std::string &newBaseFile);  ; const std::string & getSrcFile () const;  ; virtual void setSrcFile (const std::string &newSrcFile);  ; int getSrcLine () const;  ; virtual void setSrcLine (const int l);  ; bool isFileRoot ();  Return true if this element was the root of the file. More...;  ; IncludeNodeTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_element.html:729,inherit,inherited,729,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_element.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::simulation::xml::NodeElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::xml::NodeElement Class Reference . #include <NodeElement.h>. Inheritance diagram for sofa::simulation::xml::NodeElement:. [legend]. Public Member Functions;  NodeElement (const std::string &name, const std::string &type, BaseElement *parent=nullptr);  ;  ~NodeElement () override;  ; bool setParent (BaseElement *newParent) override;  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  ; bool initNode () override;  ; bool init () override;  ; virtual const char * getClass () const override;  Get the node class (Scene, Mapping, ...) More...;  ;  Public Member Functions inherited from sofa::simulation::xml::Element< sofa::core::objectmodel::BaseNode >;  Element (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~Element () override;  ; sofa::core::objectmodel::BaseNode * getTypedObject ();  ; virtual void setObject (typename Object::SPtr newObject);  ; sofa::core::objectmodel::Base * getObject () override;  Get the associated object. More...;  ;  Public Member Functions inherited from sofa::simulation::xml::BaseElement;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent () const override;  Get the parent node. More...;  ; BaseElement * getParentElement () const;  Get the parent node. Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html:267,Inherit,Inheritance,267,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::simulation::xml::ObjectElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::xml::ObjectElement Class Reference . #include <ObjectElement.h>. Inheritance diagram for sofa::simulation::xml::ObjectElement:. [legend]. Public Member Functions;  ObjectElement (const std::string &name, const std::string &type, BaseElement *parent=nullptr);  ;  ~ObjectElement () override;  ; bool initNode () override;  ; bool init () override;  ; virtual const char * getClass () const override;  Get the node class (Scene, Mapping, ...) More...;  ;  Public Member Functions inherited from sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >;  Element (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~Element () override;  ; sofa::core::objectmodel::BaseObject * getTypedObject ();  ; virtual void setObject (typename Object::SPtr newObject);  ; sofa::core::objectmodel::Base * getObject () override;  Get the associated object. More...;  ;  Public Member Functions inherited from sofa::simulation::xml::BaseElement;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent () const override;  Get the parent node. More...;  ; BaseElement * getParentElement () const;  Get the parent node. More...;  ; std::string getBaseFile () override;  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual void setBaseFile (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element.html:686,inherit,inherited,686,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:422,portab,portable,422,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,3,"['Variab', 'portab']","['Variables', 'portable']"
Modifiability,﻿. SOFA API: sofa::testing::BaseSimulationTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::testing::BaseSimulationTest Class Reference . #include <BaseSimulationTest.h>. Inheritance diagram for sofa::testing::BaseSimulationTest:. [legend]. Classes; class  SceneInstance;  . Public Member Functions;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Constructor details. ◆ BaseSimulationTest(). sofa::testing::BaseSimulationTest::BaseSimulationTest ; (; ). Function details. ◆ importPlugin(). bool sofa::testing::BaseSimulationTest::importPlugin ; (; const std::string & ; name). sofatestingBaseSimulationTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html:512,inherit,inherited,512,api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_simulation_test.html,8,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::testing::BaseTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::testing::BaseTest Class Reference . #include <BaseTest.h>; Base class for Sofa test fixtures. ; More... Inheritance diagram for sofa::testing::BaseTest:. [legend]; Detailed Description; Base class for Sofa test fixtures. . Public Attributes; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Attribute details. ◆ m_error. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_error. ◆ m_fatal. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_fatal. To prevent that you simply need to add the line EXPECT_MSG_EMIT(Error); Where you want to allow a message. . ◆ seed. int sofa::testing::BaseTest::seed = (unsigned int)time(nullptr). static . Seed value. . Constructor details. ◆ BaseTest(). sofa::testing::BaseTest::BaseTest ; (; ). Initialize Sofa and the random number generator. . ◆ ~BaseTest(). sofa::testing::BaseTest::~BaseTest ; (; ). override . Function details. ◆ onSetUp(). virtual void sofa::testing::BaseTest::onSetUp ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >, and sofa::AdvancedTimerTest. ◆ onTearDown(). virtual void sofa::testing::BaseTest::onTearDown ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >. sofatestingBaseTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html:336,Inherit,Inheritance,336,api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::testing::GtestMessageFrame Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::testing::GtestMessageFrame Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrame:. [legend]; Detailed Description; PRIVATE DECLARATION ///////////////////////////////////////////////// Here are declared the classes that are only used for internal use. In case someone want to use them it is easy to move that in .h file. Until that happens, keeps these here to hide the implementation details from the users of the .h And accelerate compilation of Sofa :) . Public Attributes; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Public Member Functions; virtual ~GtestMessageFrame ();  ; virtual void process (Message &);  ; virtual void finalize ();  . Attribute details. ◆ m_filename. const char* sofa::testing::GtestMessageFrame::m_filename. ◆ m_lineno. int sofa::testing::GtestMessageFrame::m_lineno. ◆ m_type. Message::Type sofa::testing::GtestMessageFrame::m_type. Constructor details. ◆ ~GtestMessageFrame(). virtual sofa::testing::GtestMessageFrame::~GtestMessageFrame ; (; ). inlinevirtual . Function details. ◆ finalize(). virtual void sofa::testing::GtestMessageFrame::finalize ; (; ). inlinevirtual . Reimplemented in sofa::testing::GtestMessageFrameFailureWhenMissing. ◆ process(). virtual void sofa::testing::GtestMessageFrame::process ; (; Message & ; ). inlinevirtual . Reimplemented in sofa::testing::GtestMessageFrameFailureWhenMissing, and sofa::testing::GtestMessageFrameFailure. sofatestingGtestMessageFrame; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame.html:258,Inherit,Inheritance,258,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailure Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailure:. [legend]. Public Member Functions;  GtestMessageFrameFailure (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameFailure(). sofa::testing::GtestMessageFrameFailure::GtestMessageFrameFailure ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). DEFINITION OF PRIVATE CLASSES ////////////////////////////////// . Function details. ◆ process(). void sofa::testing::GtestMessageFrameFailure::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html:507,inherit,inherited,507,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailureWhenMissing:. [legend]. Public Attributes; bool m_gotMessage {false};  ;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Public Member Functions;  GtestMessageFrameFailureWhenMissing (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ; void finalize () override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  . Attribute details. ◆ m_gotMessage. bool sofa::testing::GtestMessageFrameFailureWhenMissing::m_gotMessage {false}. Constructor details. ◆ GtestMessageFrameFailureWhenMissing(). sofa::testing::GtestMessageFrameFailureWhenMissing::GtestMessageFrameFailureWhenMissing ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). Function details. ◆ finalize(). void sofa::testing::GtestMessageFrameFailureWhenMissing::finalize ; (; ). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. ◆ process(). void sofa::testing::GtestMessageFrameFailureWhenMissing::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailureWhenMissing; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html:449,inherit,inherited,449,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html,5,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,﻿. SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameIgnore Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameIgnore:. [legend]. Public Member Functions;  GtestMessageFrameIgnore (Message::Type type);  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void process (Message &);  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameIgnore(). sofa::testing::GtestMessageFrameIgnore::GtestMessageFrameIgnore ; (; Message::Type ; type). sofatestingGtestMessageFrameIgnore; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html:424,inherit,inherited,424,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_ignore.html,6,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::testing::GtestMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageHandler Class Reference . Inheritance diagram for sofa::testing::GtestMessageHandler:. [legend]. Public Member Functions;  GtestMessageHandler (Message::Class mclass);  ;  ~ GtestMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ; void pushFrame (Message::Type type, GtestMessageFrame *frame);  ; void popFrame (Message::Type type);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ GtestMessageHandler(). sofa::testing::GtestMessageHandler::GtestMessageHandler ; (; Message::Class ; mclass). ◆ ~ GtestMessageHandler(). sofa::testing::GtestMessageHandler::~ GtestMessageHandler ; (; ). override . Function details. ◆ popFrame(). void sofa::testing::GtestMessageHandler::popFrame ; (; Message::Type ; type). ◆ process(). void sofa::testing::GtestMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ pushFrame(). void sofa::testing::GtestMessageHandler::pushFrame ; (; Message::Type ; type, . GtestMessageFrame * ; frame . ). sofatestingGtestMessageHandler; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html:635,inherit,inherited,635,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_handler.html,5,"['Inherit', 'inherit']","['Inheritance', 'Inherited', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::LinearCongruentialRandomGenerator Class Reference . #include <LinearCongruentialRandomGenerator.h>; A simple deterministic and portable random number generator. ; More...; Detailed Description; A simple deterministic and portable random number generator. ; This class implements a Linear Congruential Generator (LCG) algorithm to generate pseudo-random numbers. It is designed to provide deterministic and portable random number generation, making it well-suited for testing purposes. . Public Member Functions;  LinearCongruentialRandomGenerator (unsigned int initialSeed);  ; unsigned int generateRandom ();  Generates the next pseudo-random number. More...;  ; template<class Scalar > ; Scalar generateInUnitRange ();  Generates a pseudo-random value within the unit interval [0, 1]. More...;  ; double generateInRange (double rmin, double rmax);  Generates a pseudo-random double value within a specified range. More...;  ; float generateInRange (float rmin, float rmax);  Generates a pseudo-random float value within a specified range. More...;  . Constructor details. ◆ LinearCongruentialRandomGenerator(). sofa::testing::LinearCongruentialRandomGenerator::LinearCongruentialRandomGenerator ; (; unsigned int ; initialSeed). explicit . Function details. ◆ generateInRange() [1/2]. double sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; double ; rmin, . double ; rmax . ). Generates a pseudo-random double value within a specified range. ; This function generates a pseudo-random double value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random double value in the specified range [rmin, rmax]",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html:344,portab,portable,344,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,6,['portab'],['portable']
Modifiability,"﻿. SOFA API: sofa::testing::MainGtestMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::MainGtestMessageHandler Class Reference . #include <TestMessageHandler.h>; Detailed Description; Inherited from MessageHandler, this handler must be installed to have the testing subsystem working. By default it is added in Sofa_test but if you are not inheriting from Sofa_test you have to install it manually. . Static Public Member Functions; static helper::logging::MessageHandler * getInstance ();  . Function details. ◆ getInstance(). MessageHandler * sofa::testing::MainGtestMessageHandler::getInstance ; (; ). static . sofatestingMainGtestMessageHandler; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html:467,inherit,inheriting,467,api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_main_gtest_message_handler.html,3,"['Inherit', 'inherit']","['Inherited', 'inheriting']"
Modifiability,"﻿. SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::testing::NumericTest< _Real > Struct Template Reference . #include <NumericTest.h>; Helper functions to compare scalars, vectors, matrices, etc. ; More... Inheritance diagram for sofa::testing::NumericTest< _Real >:. [legend]; Detailed Description; template<typename _Real = SReal>; struct sofa::testing::NumericTest< _Real >; Helper functions to compare scalars, vectors, matrices, etc. . Public Member Functions;  NumericTest ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; Matrices; Functions to compare matrices . template<typename Matrix1 , typename Matrix2 > ; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; template<Size M, Size N, typename Real , typename Matrix2 > ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  . Static Protected Member Functions; static float norm (float a);  ; static double norm (double a);  ; template<typename T > ; static Real norm (T a);  . Scalars; Type and functions to manipulate real numbers. . typedef _Real Real;  Scalar type. More...;  ; static Real epsilon ();  the smallest real number More...;  ; static Real infinity ();  Infinity. More...;  ; static bool isSmall (Real r, Real ratio=1.);  true if the magnitude of r is less than ratio*epsilon More...;  . Vectors; Functions to com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html:702,inherit,inherited,702,api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_numeric_test.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::testing::SparseMatrixTest< TReal > Struct Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:311,Inherit,Inheritance,311,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::topology::Element< GeometryElement > Struct Template Reference . #include <Element.h>. Inheritance diagram for sofa::topology::Element< GeometryElement >:. [legend]. Static Public Attributes; static constexpr auto NumberOfNodes = GeometryElement::NumberOfNodes;  ; static constexpr sofa::geometry::ElementType Element_type = GeometryElement::Element_type;  . Public Member Functions; constexpr Element () noexcept;  ; template<typename... ArgsT, typename = std::enable_if_t < (std::is_convertible_v<ArgsT, sofa::Index> && ...)>> ; constexpr Element (ArgsT &&... args) noexcept;  ;  Public Member Functions inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; constexpr fixed_array ();  ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr sofa::Index & get () &noexcept;  ; constexpr const sofa::Index & get () const &noexcept;  ; constexpr sofa::Index && get () &&noexcept;  ; constexpr const sofa::Index && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html:846,inherit,inherited,846,api/master/sofa/html/structsofa_1_1topology_1_1_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::type Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa::type Namespace Reference . for std::pair ; More... Namespaces;  pairwise;  ;  trait;  . Classes; class  BoundingBox;  ; class  TBoundingBox;  ; class  BoundingBox2D;  bounding rectangle More...;  ; class  BoundingBox1D;  bounding interval More...;  ; class  DualQuatCoord3;  ; class  fixed_array;  ; class  Frame;  ; class  Vec;  ; class  VecNoInit;  Same as Vec except the values are not initialized by default. More...;  ; class  Mat;  ; class  MatNoInit;  Same as Mat except the values are not initialized by default. More...;  ; class  Quat;  ; struct  CleanupCheck;  ; struct  detect;  ; struct  detect< T, Op, void_t< Op< T > > >;  ; class  Material;  ; class  MatSym;  ; class  PrimitiveGroup;  ; struct  qNoInit;  ; class  QuatNoInit;  Same as Quat except the values are not initialized by default. More...;  ; class  Ray;  ; class  RGBAColor;  encode a 4 RGBA component color More...;  ; class  SpatialVector;  ; class  SVector;  Same as type::vector, + delimiters on serialization. More...;  ; struct  HasRebindTypedef;  ; struct  HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > >;  ; struct  Rebind;  ; struct  Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do have a nested rebind_to member. In this implementation, Rebind has a public member typedef to. It corresponds to the typedef rebind_to. More...;  ; struct  Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > >;  Specialization for types that do NOT have a nested rebind_to member. In this implementation, Rebind has no public member typedef to. If this implementation is chosen by the compiler (the number of template parameters is probably different from 1), a compilation error occurs. More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html:169,Variab,Variables,169,api/master/sofa/html/namespacesofa_1_1type.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type.html,1,['Variab'],['Variables']
Modifiability,"﻿. SOFA API: sofa::type::BoundingBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::type::BoundingBox Class Reference . #include <BoundingBox.h>. Inheritance diagram for sofa::type::BoundingBox:. [legend]. Protected Attributes; bbox_t bbox;  . Public Member Functions;  BoundingBox ();  ;  BoundingBox (const sofa::type::Vec3 &minBBox, const sofa::type::Vec3 &maxBBox);  Define using the endpoints of the main diagonal. More...;  ;  BoundingBox (const bbox_t &bbox);  ;  BoundingBox (SReal xmin, SReal xmax, SReal ymin, SReal ymax, SReal zmin, SReal zmax);  Define using xmin, xmax, ymin, ymax, zmin, zmax in this order. More...;  ;  BoundingBox (const Vec6f &bbox);  Define using xmin, xmax, ymin, ymax, zmin, zmax in this order. More...;  ;  BoundingBox (const Vec6d &bbox);  Define using xmin, xmax, ymin, ymax, zmin, zmax in this order. More...;  ;  operator bbox_t () const;  ; void invalidate ();  ; bool isValid () const;  ; bool isFlat () const;  ; bool isNegligeable () const;  ; bool isNull () const;  ; SReal * minBBoxPtr ();  ; SReal * maxBBoxPtr ();  ; const SReal * minBBoxPtr () const;  ; const SReal * maxBBoxPtr () const;  ; const sofa::type::Vec3 & minBBox () const;  ; const sofa::type::Vec3 & maxBBox () const;  ; sofa::type::Vec3 & minBBox ();  ; sofa::type::Vec3 & maxBBox ();  ; bool contains (const sofa::type::Vec3 &point) const;  ; bool contains (const BoundingBox &other) const;  ; bool intersect (const BoundingBox &other) const;  ; void intersection (const BoundingBox &other);  ; void include (const sofa::type::Vec3 &point);  ; void include (const BoundingBox &other);  ; void inflate (SReal amount);  ; BoundingBox getIntersection (const BoundingBox &other) const;  ; BoundingBox getInclude (const sofa::type::Vec3 &point) const;  ; BoundingBox getInclude (const BoundingBox &other) const;  ; Bounding",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_bounding_box.html:314,Inherit,Inheritance,314,api/master/sofa/html/classsofa_1_1type_1_1_bounding_box.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_bounding_box.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference . #include <Rebind.h>. Inheritance diagram for sofa::type::HasRebindTypedef< T, OtherType, class >:. [legend]. sofatypeHasRebindTypedef; Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_has_rebind_typedef.html:267,Inherit,Inheritance,267,api/master/sofa/html/structsofa_1_1type_1_1_has_rebind_typedef.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_has_rebind_typedef.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference . #include <Rebind.h>. Inheritance diagram for sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > >:. [legend]. sofatypeHasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > >; Generated on Mon Nov 11 2024 03:36:32 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_has_rebind_typedef_3_01_t_00_01_other_type_00_01std_1_1void__t_3_01typena38b5e66e762bce55947455e96e15d75f.html:373,Inherit,Inheritance,373,api/master/sofa/html/structsofa_1_1type_1_1_has_rebind_typedef_3_01_t_00_01_other_type_00_01std_1_1void__t_3_01typena38b5e66e762bce55947455e96e15d75f.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1_has_rebind_typedef_3_01_t_00_01_other_type_00_01std_1_1void__t_3_01typena38b5e66e762bce55947455e96e15d75f.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::Mat< L, C, real > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::type::Mat< L, C, real > Class Template Reference . #include <Mat.h>. Inheritance diagram for sofa::type::Mat< L, C, real >:. [legend]. Public Attributes; ArrayLineType elems {};  . Static Public Attributes; static constexpr sofa::Size N = L * C;  ; static constexpr Size nbLines = L;  ; static constexpr Size nbCols = C;  ; static constexpr sofa::Size static_size = L;  ; static constexpr sofa::Size total_size = L;  . Public Member Functions; constexpr Mat () noexcept=default;  ; constexpr Mat (NoInit) noexcept;  ; template<sofa::Size TL = L, sofa::Size TC = C, typename = std::enable_if_t<(TL == 1 && TC != 1) || (TC == 1 && TL != 1)>> ; constexpr Mat (std::initializer_list< Real > &&scalars) noexcept;  ; constexpr Mat (std::initializer_list< std::initializer_list< Real >> &&rows) noexcept;  ; template<typename... ArgsT, typename = std::enable_if_t< (std::is_convertible_v<ArgsT, Line> && ...) >, typename = std::enable_if_t< (sizeof...(ArgsT) == L && sizeof...(ArgsT) > 1) >> ; constexpr Mat (ArgsT &&... r) noexcept;  ; constexpr Mat (const real &v) noexcept;  Constructor from an element. More...;  ; template<typename real2 > ; constexpr Mat (const Mat< L, C, real2 > &m) noexcept;  Constructor from another matrix. More...;  ; template<Size L2, Size C2, typename real2 > ; constexpr Mat (const Mat< L2, C2, real2 > &m) noexcept;  Constructor from another matrix with different size (with null default entries and ignoring outside entries) More...;  ; template<typename real2 > ; constexpr Mat (const real2 *p) noexcept;  Constructor from an array of elements (stored per line). More...;  ; constexpr Size getNbLines () const;  number of lines More...;  ; constexpr Size getNbCols () const;  numbe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html:361,Inherit,Inheritance,361,api/master/sofa/html/classsofa_1_1type_1_1_mat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::MatNoInit< L, C, real > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::type::MatNoInit< L, C, real > Class Template Reference . #include <Mat.h>; Same as Mat except the values are not initialized by default. ; More... Inheritance diagram for sofa::type::MatNoInit< L, C, real >:. [legend]; Detailed Description; template<sofa::Size L, sofa::Size C, typename real>; class sofa::type::MatNoInit< L, C, real >; Same as Mat except the values are not initialized by default. . Public Member Functions; constexpr MatNoInit () noexcept;  ; constexpr void operator= (const real *p) noexcept;  Assignment from an array of elements (stored per line). More...;  ; template<sofa::Size L2, sofa::Size C2, typename real2 > ; constexpr void operator= (const Mat< L2, C2, real2 > &m) noexcept;  Assignment from another matrix. More...;  ;  Public Member Functions inherited from sofa::type::Mat< L, C, real >; constexpr Mat () noexcept=default;  ; constexpr Mat (NoInit) noexcept;  ; template<sofa::Size TL = L, sofa::Size TC = C, typename = std::enable_if_t<(TL == 1 && TC != 1) || (TC == 1 && TL != 1)>> ; constexpr Mat (std::initializer_list< Real > &&scalars) noexcept;  ; constexpr Mat (std::initializer_list< std::initializer_list< Real >> &&rows) noexcept;  ; template<typename... ArgsT, typename = std::enable_if_t< (std::is_convertible_v<ArgsT, Line> && ...) >, typename = std::enable_if_t< (sizeof...(ArgsT) == L && sizeof...(ArgsT) > 1) >> ; constexpr Mat (ArgsT &&... r) noexcept;  ; constexpr Mat (const real &v) noexcept;  Constructor from an element. More...;  ; template<typename real2 > ; constexpr Mat (const Mat< L, C, real2 > &m) noexcept;  Constructor from another matrix. More...;  ; template<Size L2, Size C2, typename real2 > ; constexpr Mat (const Mat< L2, C2, real2 > &m) noexcept;  Constructor from another matrix with different size (with null default entr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html:351,Inherit,Inheritance,351,api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::MatSym< D, real > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::type::MatSym< D, real > Class Template Reference . #include <MatSym.h>. Inheritance diagram for sofa::type::MatSym< D, real >:. [legend]; Detailed Description; template<sofa::Size D, class real = SReal>; class sofa::type::MatSym< D, real >; Dense symmetric matrix of size DxD storing only D*(D+1)/2 values Template Parameters. DSize of the matrix ; realType of scalar . Static Public Attributes; static constexpr auto NumberStoredValues = D * (D + 1) / 2;  ;  Static Public Attributes inherited from sofa::type::Vec< N, ValueType >; static constexpr sofa::Size static_size = N;  ; static constexpr Size total_size = N;  Compile-time constant specifying the number of scalars within this vector (equivalent to static_size and size() method) More...;  ; static constexpr Size spatial_dimensions = N;  Compile-time constant specifying the number of dimensions of space (equivalent to total_size here) More...;  . Public Member Functions; constexpr MatSym () noexcept;  ; constexpr MatSym (NoInit) noexcept;  ; template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3>> ; constexpr MatSym (const real &v1, const real &v2, const real &v3, const real &v4, const real &v5, const real &v6);  Constructor from 6 elements. More...;  ; constexpr MatSym (const sofa::Size sizeM, const real &v);  Constructor from an element. More...;  ; template<typename real2 > ;  MatSym (const MatSym< D, real2 > &m);  Constructor from another matrix. More...;  ; template<typename real2 > ; void operator= (const MatSym< D, real2 > &m);  Assignment from another matrix. More...;  ; void clear ();  Sets each element to 0. More...;  ; void fill (real r);  Sets each element to r. More...;  ; real & operator() (const int i, const int j);  Write acce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html:756,inherit,inherited,756,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::type::Quat< Real > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::type::Quat< Real > Class Template Reference . #include <Quat.h>. Inheritance diagram for sofa::type::Quat< Real >:. [legend]. Static Public Attributes; static constexpr Size static_size = 4;  ; static constexpr Size total_size = 4;  Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr Size spatial_dimensions = 3;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for quaternions) More...;  . Public Member Functions; constexpr Quat ();  ; constexpr Quat (qNoInit);  Fast constructor: no initialization. More...;  ;  ~Quat ()=default;  ; constexpr Quat (Real x, Real y, Real z, Real w);  ; template<class Real2 > ; constexpr Quat (const Real2 q[]);  ; template<class Real2 > ; constexpr Quat (const Quat< Real2 > &q);  ;  Quat (const Vec3 &axis, Real angle);  ;  Quat (const Vec3 &vFrom, const Vec3 &vTo);  ; void set (Real x, Real y, Real z, Real w);  ; const Real * ptr () const;  Cast into a standard C array of elements. More...;  ; Real * ptr ();  Cast into a standard C array of elements. More...;  ; bool isNormalized ();  Returns true if norm of Quaternion is one, false otherwise. More...;  ; void normalize ();  Normalize a quaternion. More...;  ; void clear ();  ; void fromFrame (const Vec3 &x, const Vec3 &y, const Vec3 &z);  Convert the reference frame orientation into an orientation quaternion. More...;  ; void fromMatrix (const Mat3x3 &m);  Convert a rotation matrix into an orientation quaternion. More...;  ; void toMatrix (Mat3x3 &m) const;  Convert the quaternion into an orientation matrix. More...;  ; constexpr void toHomogeneousMatrix (Mat4x4 &m) const;  ; constexpr auto rotate (const V",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html:320,Inherit,Inheritance,320,api/master/sofa/html/classsofa_1_1type_1_1_quat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::QuatNoInit< Real > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::type::QuatNoInit< Real > Class Template Reference . #include <Quat.h>; Same as Quat except the values are not initialized by default. ; More... Inheritance diagram for sofa::type::QuatNoInit< Real >:. [legend]; Detailed Description; template<class Real>; class sofa::type::QuatNoInit< Real >; Same as Quat except the values are not initialized by default. . Public Member Functions; constexpr QuatNoInit () noexcept;  ;  Public Member Functions inherited from sofa::type::Quat< Real >; constexpr Quat ();  ; constexpr Quat (qNoInit);  Fast constructor: no initialization. More...;  ;  ~Quat ()=default;  ; constexpr Quat (Real x, Real y, Real z, Real w);  ; template<class Real2 > ; constexpr Quat (const Real2 q[]);  ; template<class Real2 > ; constexpr Quat (const Quat< Real2 > &q);  ;  Quat (const Vec3 &axis, Real angle);  ;  Quat (const Vec3 &vFrom, const Vec3 &vTo);  ; void set (Real x, Real y, Real z, Real w);  ; const Real * ptr () const;  Cast into a standard C array of elements. More...;  ; Real * ptr ();  Cast into a standard C array of elements. More...;  ; bool isNormalized ();  Returns true if norm of Quaternion is one, false otherwise. More...;  ; void normalize ();  Normalize a quaternion. More...;  ; void clear ();  ; void fromFrame (const Vec3 &x, const Vec3 &y, const Vec3 &z);  Convert the reference frame orientation into an orientation quaternion. More...;  ; void fromMatrix (const Mat3x3 &m);  Convert a rotation matrix into an orientation quaternion. More...;  ; void toMatrix (Mat3x3 &m) const;  Convert the quaternion into an orientation matrix. More...;  ; constexpr void toHomogeneousMatrix (Mat4x4 &m) const;  ; constexpr auto rotate (const Vec3 &v) const -> Vec3;  Apply the rotation to a given vector. More...;  ; constexpr auto inverseRotate (const Vec3 &v) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html:644,inherit,inherited,644,api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::type::SVector< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Friends |; List of all members . sofa::type::SVector< T > Class Template Reference . #include <SVector.h>; Same as type::vector, + delimiters on serialization. ; More... Inheritance diagram for sofa::type::SVector< T >:. [legend]; Detailed Description; template<class T>; class sofa::type::SVector< T >; Same as type::vector, + delimiters on serialization. . Public Member Functions;  SVector ();  reference to a value (read-write) More...;  ;  SVector (Size n, const T &value);  Constructor. More...;  ;  SVector (int n, const T &value);  Constructor. More...;  ;  SVector (long n, const T &value);  Constructor. More...;  ;  SVector (Size n);  Constructor. More...;  ;  SVector (const Inherit &x);  Constructor. More...;  ;  SVector (Inherit &&v);  Move constructor. More...;  ; SVector< T > & operator= (const Inherit &x);  Copy operator. More...;  ; SVector< T > & operator= (Inherit &&v);  Move assignment operator. More...;  ;  SVector (typename SVector< T >::const_iterator first, typename SVector< T >::const_iterator last);  Constructor. More...;  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; std::ostream & write (std::ostream &os) const;  ;  Public Member Functions inherited from sofa::type::vector< T, type::CPUMemoryManager< T > >;  vector ();  Basic constructor. More...;  ;  vector (Size n, const T &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< T, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< T > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< T, Alloc > &&v);  Move constructor. More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_s_vector.html:335,Inherit,Inheritance,335,api/master/sofa/html/classsofa_1_1type_1_1_s_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_s_vector.html,4,['Inherit'],"['Inherit', 'Inheritance']"
Modifiability,"﻿. SOFA API: sofa::type::SpatialVector< TReal > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::type::SpatialVector< TReal > Class Template Reference . #include <SpatialVector.h>. Inheritance diagram for sofa::type::SpatialVector< TReal >:. [legend]; Detailed Description; template<class TReal>; class sofa::type::SpatialVector< TReal >; A spatial vector. When representing a velocity, lineVec is the angular velocity and freeVec is the linear velocity. When representing a spatial force, lineVec is the force and freeVec is the torque. . Public Attributes; Vec lineVec { type::NOINIT };  ; Vec freeVec { type::NOINIT };  . Public Member Functions; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Friends; std::ostream & operator<< (std::ostream &out, const SpatialVector &t);  write to an output stream More...;  ; std::istream & ope",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html:319,Inherit,Inheritance,319,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::TBoundingBox< TReal > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::type::TBoundingBox< TReal > Class Template Reference . #include <BoundingBox.h>. Inheritance diagram for sofa::type::TBoundingBox< TReal >:. [legend]. Public Member Functions;  TBoundingBox (const TReal *minBBoxPtr, const TReal *maxBBoxPtr);  ;  TBoundingBox ();  ;  Public Member Functions inherited from sofa::type::BoundingBox;  BoundingBox ();  ;  BoundingBox (const sofa::type::Vec3 &minBBox, const sofa::type::Vec3 &maxBBox);  Define using the endpoints of the main diagonal. More...;  ;  BoundingBox (const bbox_t &bbox);  ;  BoundingBox (SReal xmin, SReal xmax, SReal ymin, SReal ymax, SReal zmin, SReal zmax);  Define using xmin, xmax, ymin, ymax, zmin, zmax in this order. More...;  ;  BoundingBox (const Vec6f &bbox);  Define using xmin, xmax, ymin, ymax, zmin, zmax in this order. More...;  ;  BoundingBox (const Vec6d &bbox);  Define using xmin, xmax, ymin, ymax, zmin, zmax in this order. More...;  ;  operator bbox_t () const;  ; void invalidate ();  ; bool isValid () const;  ; bool isFlat () const;  ; bool isNegligeable () const;  ; bool isNull () const;  ; SReal * minBBoxPtr ();  ; SReal * maxBBoxPtr ();  ; const SReal * minBBoxPtr () const;  ; const SReal * maxBBoxPtr () const;  ; const sofa::type::Vec3 & minBBox () const;  ; const sofa::type::Vec3 & maxBBox () const;  ; sofa::type::Vec3 & minBBox ();  ; sofa::type::Vec3 & maxBBox ();  ; bool contains (const sofa::type::Vec3 &point) const;  ; bool contains (const BoundingBox &other) const;  ; bool intersect (const BoundingBox &other) const;  ; void intersection (const BoundingBox &other);  ; void include (const sofa::type::Vec3 &point);  ; void include (const BoundingBox &other);  ; void inflate (SReal amount);  ; BoundingBox getIntersection (const BoundingBox &other) const;  ; BoundingBox getInclude (const sofa::t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_t_bounding_box.html:493,inherit,inherited,493,api/master/sofa/html/classsofa_1_1type_1_1_t_bounding_box.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_t_bounding_box.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::type::Vec< N, ValueType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::type::Vec< N, ValueType > Class Template Reference . #include <Vec.h>. Inheritance diagram for sofa::type::Vec< N, ValueType >:. [legend]. Public Attributes; ArrayType elems {};  . Static Public Attributes; static constexpr sofa::Size static_size = N;  ; static constexpr Size total_size = N;  Compile-time constant specifying the number of scalars within this vector (equivalent to static_size and size() method) More...;  ; static constexpr Size spatial_dimensions = N;  Compile-time constant specifying the number of dimensions of space (equivalent to total_size here) More...;  . Public Member Functions; constexpr Vec ()=default;  Default constructor: sets all values to 0. More...;  ; constexpr Vec (NoInit);  Fast constructor: no initialization. More...;  ; template<Size NN = N, typename std::enable_if< NN==1, int >::type = 0> ; constexpr Vec (const ValueType r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; template<typename... ArgsT, typename = std::enable_if_t< (std::is_convertible_v<ArgsT, ValueType> && ...) >, typename = std::enable_if_t< (sizeof...(ArgsT) == N && sizeof...(ArgsT) > 1) >> ; constexpr Vec (ArgsT &&... r) noexcept;  ; template<typename R , typename T , Size NN = N, typename std::enable_if< NN==6, int >::type = 0> ;  Vec (const Vec< 3, R > &a, const Vec< 3, T > &b);  Specific constructor for 6-elements vectors, taking two 3-elements vectors. More...;  ; template<Size NN = N, typename std::enable_if< NN==1, int >::type = 0> ; constexpr void set (const ValueType r1) noexcept;  Specific set function for 1-element vectors. More...;  ; template<typename... ArgsT, typename = std::enable_if_t< (std::is_convertible_v<ArgsT, ValueType> && ...) >, typename = std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html:354,Inherit,Inheritance,354,api/master/sofa/html/classsofa_1_1type_1_1_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::VecNoInit< N, real > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Friends |; List of all members . sofa::type::VecNoInit< N, real > Class Template Reference . #include <Vec.h>; Same as Vec except the values are not initialized by default. ; More... Inheritance diagram for sofa::type::VecNoInit< N, real >:. [legend]; Detailed Description; template<sofa::Size N, typename real>; class sofa::type::VecNoInit< N, real >; Same as Vec except the values are not initialized by default. . Public Member Functions; constexpr VecNoInit () noexcept;  ; constexpr VecNoInit (const Vec< N, real > &v) noexcept;  ; constexpr VecNoInit (Vec< N, real > &&v) noexcept;  ;  Public Member Functions inherited from sofa::type::Vec< N, real >; constexpr Vec ()=default;  Default constructor: sets all values to 0. More...;  ; constexpr Vec (NoInit);  Fast constructor: no initialization. More...;  ; constexpr Vec (const real r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; constexpr Vec (ArgsT &&... r) noexcept;  ;  Vec (const Vec< 3, R > &a, const Vec< 3, T > &b);  Specific constructor for 6-elements vectors, taking two 3-elements vectors. More...;  ; constexpr Vec (const Vec< N-1, real > &v, real r1) noexcept;  Constructor from an N-1 elements vector and an additional value (added at the end). More...;  ; constexpr Vec (const sofa::type::fixed_array< real, N > &p) noexcept;  ; constexpr Vec (const Vec< N2, real2 > &v) noexcept;  Constructor from a different size vector (null default value and ignoring outside entries) More...;  ; constexpr Vec (const Vec< N, real2 > &p) noexcept;  ; constexpr Vec (const real2 *p) noexcept;  Constructor from an array of values. More...;  ; constexpr void set (const real r1) noexcept;  Specific set function for 1-element vectors. More...;  ; constexpr void set (const ArgsT... r) noexcept;  ; constexpr void set (const Vec< N2, real2 > &v, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html:789,inherit,inherited,789,api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html,3,"['Inherit', 'inherit']","['Inheritance', 'inherited']"
Modifiability,"﻿. SOFA API: sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< T, Op, void_t< Op< T > > >:. [legend]. sofatypedetect< T, Op, void_t< Op< T > > >; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html:262,Inherit,Inheritance,262,api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect_3_01_t_00_01_op_00_01void__t_3_01_op_3_01_t_01_4_01_4_01_4.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::detect< typename, class, typename > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::detect< typename, class, typename > Struct Template Reference . #include <isRigidType.h>. Inheritance diagram for sofa::type::detect< typename, class, typename >:. [legend]. sofatypedetect; Generated on Mon Nov 11 2024 03:36:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect.html:264,Inherit,Inheritance,264,api/master/sofa/html/structsofa_1_1type_1_1detect.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1detect.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::fixed_array< T, N > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; Friends |; List of all members . sofa::type::fixed_array< T, N > Class Template Reference . #include <fixed_array.h>. Inheritance diagram for sofa::type::fixed_array< T, N >:. [legend]. Public Attributes; T elems [N] {};  . Public Member Functions; constexpr fixed_array ();  ; template<size_type NN = N, typename std::enable_if< NN==1, int >::type = 0> ; constexpr fixed_array (value_type r1) noexcept;  Specific constructor for 1-element vectors. More...;  ; template<typename... ArgsT, typename = std::enable_if_t< (std::is_convertible_v<ArgsT, value_type> && ...) >, typename = std::enable_if_t< (sizeof...(ArgsT) == N && sizeof...(ArgsT) > 1) >> ; constexpr fixed_array (ArgsT &&... r) noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr const_iterator cbegin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; template<std::size_t I> ; constexpr T & get () &noexcept;  ; template<std::size_t I> ; constexpr const T & get () const &noexcept;  ; template<std::size_t I> ; constexpr T && get () &&noexcept;  ; template<std::size_t I> ; constexpr const T && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< T, N > &y);  ; constexpr const T * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1fixed__array.html:345,Inherit,Inheritance,345,api/master/sofa/html/classsofa_1_1type_1_1fixed__array.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1fixed__array.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:849,variab,variable,849,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,9,"['Variab', 'variab']","['Variable', 'Variables', 'variable']"
Modifiability,"﻿. SOFA API: sofa::type::trait::is_specialization_of< T, Template > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_specialization_of< T, Template > Struct Template Reference . #include <is_specialization_of.h>; Trait to check if a type T is a specialization of a given template class Template. ; More... Inheritance diagram for sofa::type::trait::is_specialization_of< T, Template >:. [legend]; Detailed Description; template<typename T, template< typename... > class Template>; struct sofa::type::trait::is_specialization_of< T, Template >; Trait to check if a type T is a specialization of a given template class Template. ; The is_specialization_of trait is a compile-time check to determine if a type T is a specialization of a particular template class Template. This trait works with template classes that accept any number of template parameters.; Example usage: template <typename T1, typename T2>; class Foo {};; ; template <typename T>; class Bar {};; ; class Baz {};; ; static_assert(is_specialization_of<Foo<int, double>, Foo>::value, ""Foo<int, double> is a Foo!"");; static_assert(is_specialization_of<Bar<int>, Bar>::value, ""Bar<int> is a Bar!"");; static_assert(!is_specialization_of<int, Foo>::value, ""int is not a Foo specialization."");; static_assert(!is_specialization_of<Baz, Bar>::value, ""Baz is not a Bar specialization."");; Template Parameters. TThe type to be checked. This is the type that you want to determine whether it is a specialization of Template. ; TemplateThe template class to check against. This can be any template class that accepts one or more template parameters. . sofatypetraitis_specialization_of; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__specialization__of.html:380,Inherit,Inheritance,380,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__specialization__of.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__specialization__of.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::trait::is_specialization_of< Template< Args... >, Template > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::trait::is_specialization_of< Template< Args... >, Template > Struct Template Reference . #include <is_specialization_of.h>; Partial specialization for the case where T is an instance of Template<Args...>. ; More... Inheritance diagram for sofa::type::trait::is_specialization_of< Template< Args... >, Template >:. [legend]; Detailed Description; template<template< typename... > class Template, typename... Args>; struct sofa::type::trait::is_specialization_of< Template< Args... >, Template >; Partial specialization for the case where T is an instance of Template<Args...>. ; This specialization checks if T matches the form Template<Args...>, meaning T is a specialization of the template class Template with specific template parameters Args....; Template Parameters. TemplateThe template class that T is expected to be an instance of. ; ArgsThe actual template parameters used in the instantiation of Template. . sofatypetraitis_specialization_of< Template< Args... >, Template >; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__specialization__of_3_01_template_3_01_args_8_8_8_01_4_00_01_template_01_4.html:414,Inherit,Inheritance,414,api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__specialization__of_3_01_template_3_01_args_8_8_8_01_4_00_01_template_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1type_1_1trait_1_1is__specialization__of_3_01_template_3_01_args_8_8_8_01_4_00_01_template_01_4.html,1,['Inherit'],['Inheritance']
Modifiability,"﻿. SOFA API: sofa::type::vector< T, MemoryManager > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Friends |; List of all members . sofa::type::vector< T, MemoryManager > Class Template Reference . #include <vector_T.h>. Inheritance diagram for sofa::type::vector< T, MemoryManager >:. [legend]; Detailed Description; template<class T, class MemoryManager = CPUMemoryManager<T>>; class sofa::type::vector< T, MemoryManager >; Regular vector Using CPUMemoryManager, it has the same behavior as std::vector with extra conveniences:; string serialization (making it usable in Data); operator[] is checking if the index is within the bounds in debug . Public Member Functions;  vector ();  Basic constructor. More...;  ;  vector (Size n, const T &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< T, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< T > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< T, Alloc > &&v);  Move constructor. More...;  ; vector & operator= (const std::vector< T, Alloc > &x);  Copy operator. More...;  ; vector & operator= (std::vector< T, Alloc > &&v);  Move assignment operator. More...;  ;  vector (typename vector< T >::const_iterator first, typename vector< T >::const_iterator last);  Constructor. More...;  ; reference operator[] (Size n);  Read/write random access. More...;  ; const_reference operator[] (Size n) const;  Read-only random access. More...;  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; void fill (const T &value);  Sets every element to 'value'. More...;  ; void fastResize (Size n);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::istream & read (std::istream &in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector.html:301,Inherit,Inheritance,301,api/master/sofa/html/classsofa_1_1type_1_1vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector.html,1,['Inherit'],['Inheritance']
Performance," &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:14589,load,loaded,14589,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,5,['load'],['loaded']
Performance," &filling)sofa::component::topology::container::grid::SparseGridTopology; buildFromFiner() overridesofa::component::topology::container::grid::SparseGridMultipleTopologyinlinevirtual; buildFromRawVoxelFile(const std::string &filename)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildFromRegularGridTypes(sofa::core::sptr< RegularGridTopology > regularGrid, const type::vector< Type > &regularGridTypes)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildFromTriangleMesh(helper::io::Mesh *, unsigned fileIdx)sofa::component::topology::container::grid::SparseGridMultipleTopologyprotected; sofa::component::topology::container::grid::SparseGridRamificationTopology::buildFromTriangleMesh(sofa::helper::io::Mesh *mesh)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildFromVoxelFile(const std::string &filename)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildFromVoxelLoader(sofa::core::loader::VoxelLoader *loader)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildRamifiedFinestLevel()sofa::component::topology::container::grid::SparseGridRamificationTopology; buildVirtualFinerLevels() overridesofa::component::topology::container::grid::SparseGridMultipleTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeIndices(Index oldidx, Index newidx)sofa::component::topology::container::grid::SparseGridRamificationTopology; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html:7976,load,loader,7976,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,1,['load'],['loader']
Performance," (; ). ◆ initTrianglesIndicesBuffer(). void sofa::gl::component::rendering3d::OglModel::initTrianglesIndicesBuffer ; (; ). ◆ initVertexBuffer(). void sofa::gl::component::rendering3d::OglModel::initVertexBuffer ; (; ). ◆ internalDraw(). void sofa::gl::component::rendering3d::OglModel::internalDraw ; (; const core::visual::VisualParams * ; , . bool ;  . ). overrideprotectedvirtual . Rendering method. ; Reimplemented from sofa::component::visual::VisualModelImpl. ◆ isUseEdges(). bool sofa::gl::component::rendering3d::OglModel::isUseEdges ; (; ). inline . ◆ isUseQuads(). bool sofa::gl::component::rendering3d::OglModel::isUseQuads ; (; ). inline . ◆ isUseTriangles(). bool sofa::gl::component::rendering3d::OglModel::isUseTriangles ; (; ). inline . ◆ loadTexture(). bool sofa::gl::component::rendering3d::OglModel::loadTexture ; (; const std::string & ; filename). overridevirtual . Reimplemented from sofa::component::visual::VisualModelImpl. ◆ loadTextures(). bool sofa::gl::component::rendering3d::OglModel::loadTextures ; (; ). overridevirtual . Reimplemented from sofa::component::visual::VisualModelImpl. ◆ parse(). void sofa::gl::component::rendering3d::OglModel::parse ; (; core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::component::visual::VisualModelImpl. ◆ popTransformMatrix(). virtual void sofa::gl::component::rendering3d::OglModel::popTransformMatrix ; (; ). inlineprotectedvirtual . ◆ pushTransformMatrix(). virtual void sofa::gl::component::rendering3d::OglModel::pushTransformMatrix ; (; float * ; matrix). inlineprotectedvirtual . ◆ SOFA_CLASS(). sofa::gl::component::rendering3d::OglModel::SOFA_CLASS ; (; OglModel ; , . Inherit ;  . ). ◆ updateBuffers(). void sofa::gl::component::rendering3d::OglModel::updateBuffers ; (; ). overridevirtual . Reimplemented from sofa::component::visual::VisualModelImpl. ◆ updateEdgesIndice",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html:40233,load,loadTextures,40233,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_model.html,1,['load'],['loadTextures']
Performance," (; ); const. ◆ GetProgram(). GLhandleARB sofa::gl::GLSLShader::GetProgram ; (; ); const. inline . ◆ GetShaderFileName(). std::string sofa::gl::GLSLShader::GetShaderFileName ; (; GLint ; type); const. ◆ GetShaderID(). GLhandleARB sofa::gl::GLSLShader::GetShaderID ; (; GLint ; type); const. ◆ GetShaderStageName(). std::string sofa::gl::GLSLShader::GetShaderStageName ; (; GLint ; target). ◆ GetShaderString(). std::string sofa::gl::GLSLShader::GetShaderString ; (; GLint ; type); const. ◆ GetVariable(). GLint sofa::gl::GLSLShader::GetVariable ; (; std::string ; strVariable). This returns an ID for a variable in our shader. ; This function returns a variable ID for a shader variable. . ◆ GetVertexShaderFileName(). std::string sofa::gl::GLSLShader::GetVertexShaderFileName ; (; ); const. inline . ◆ GetVertexShaderID(). GLhandleARB sofa::gl::GLSLShader::GetVertexShaderID ; (; ); const. inline . ◆ InitGLSL(). bool sofa::gl::GLSLShader::InitGLSL ; (; ). static . This is used to load all of the extensions and checks compatibility. . ◆ InitShaders() [1/2]. void sofa::gl::GLSLShader::InitShaders ; (; ). This function loads a vertex and fragment shader file. . ◆ InitShaders() [2/2]. void sofa::gl::GLSLShader::InitShaders ; (; const std::string & ; strVertex, . const std::string & ; strFragment . ). inline . This loads a vertex and fragment shader. . ◆ IsReady(). bool sofa::gl::GLSLShader::IsReady ; (; ); const. inline . These are our basic get functions for our private data . ◆ IsSet(). bool sofa::gl::GLSLShader::IsSet ; (; GLint ; type); const. ◆ LoadTextFile(). std::string sofa::gl::GLSLShader::LoadTextFile ; (; const std::string & ; strFile). This loads our text file for each shader and returns it in a string. ; This function loads and returns a text file for our shaders. . ◆ Release(). void sofa::gl::GLSLShader::Release ; (; ). This releases our memory for our shader. ; This function frees all of our shader data. . ◆ SetActiveShaderProgram(). void sofa::gl::GLSLShader::SetActi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:7918,load,load,7918,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,2,['load'],['load']
Performance," (; unsigned ; mipmap). ◆ getMipmapRangeSize(). unsigned sofa::helper::io::Image::getMipmapRangeSize ; (; unsigned ; firstMipmap, . unsigned ; mipmaps . ); const. ◆ getMipmapSize(). unsigned sofa::helper::io::Image::getMipmapSize ; (; unsigned ; mipmap); const. ◆ getPixelCount(). unsigned sofa::helper::io::Image::getPixelCount ; (; ); const. ◆ getPixels(). unsigned char * sofa::helper::io::Image::getPixels ; (; ). ◆ getTextureType(). Image::TextureType sofa::helper::io::Image::getTextureType ; (; ); const. ◆ getWidth(). unsigned sofa::helper::io::Image::getWidth ; (; unsigned ; mipmap = 0); const. ◆ init() [1/2]. void sofa::helper::io::Image::init ; (; unsigned ; width, . unsigned ; height, . unsigned ; bpp . ). ◆ init() [2/2]. void sofa::helper::io::Image::init ; (; unsigned ; width, . unsigned ; height, . unsigned ; depth, . unsigned ; mipmaps, . DataType ; dataType, . ChannelFormat ; channelFormat . ). ◆ isLoaded(). bool sofa::helper::io::Image::isLoaded ; (; ); const. inline . ◆ load(). bool sofa::helper::io::Image::load ; (; std::string ; filename). virtual . Reimplemented in sofa::helper::io::STBImage, sofa::helper::io::ImageRAW, and sofa::helper::io::ImageDDS. ◆ operator=(). Image & sofa::helper::io::Image::operator= ; (; const Image & ; rhs). ◆ save(). bool sofa::helper::io::Image::save ; (; std::string ; filename, . int ; compression_level = -1 . ). virtual . Reimplemented in sofa::helper::io::STBImage, sofa::helper::io::ImageRAW, and sofa::helper::io::ImageDDS. Enum details. ◆ ChannelFormat. enum sofa::helper::io::Image::ChannelFormat. EnumeratorL ; LA ; R ; RG ; RGB ; RGBA ; BGR ; BGRA ; COUNT_OF_CHANNEL_FORMATS . ◆ DataType. enum sofa::helper::io::Image::DataType. EnumeratorUNORM8 ; UNORM16 ; UINT32 ; HALF ; FLOAT ; UCOMPRESSED ; COUNT_OF_DATA_TYPES . ◆ TextureType. enum sofa::helper::io::Image::TextureType. EnumeratorTEXTURE_2D ; TEXTURE_3D ; TEXTURE_CUBE ; COUNT_OF_TEXTURE_TYPES ; TEXTURE_INVALID . sofahelperioImage; Generated on Mon Nov 11 2024 03:31:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:5814,load,load,5814,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,2,['load'],['load']
Performance," (BaseMatrixLinearSystem, core::objectmodel::BaseObject);  ; virtual linearalgebra::BaseMatrix * getSystemBaseMatrix () const;  Returns the system matrix as a linearalgebra::BaseMatrix*. More...;  ; void buildSystemMatrix (const core::MechanicalParams *mparams);  Construct and assemble the linear system matrix. More...;  ; sofa::type::Vec2u getMatrixSize () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html:2329,load,loader,2329,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,1,['load'],['loader']
Performance," (DetectionOutputVector *outputs)=0;  Set the generic description of a contact point. More...;  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html:2725,load,loader,2725,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html,1,['load'],['loader']
Performance," (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ createWidgets(). bool sofa::gui::qt::RadioDataWidget::createWidgets ; (; ). virtual . In this method we create the widgets and perform the signal / slots connections. ; Implements sofa::gui::qt::DataWidget. ◆ readFromData(). void sofa::gui::qt::RadioDataWidget::readFromData ; (; ). protectedvirtual . Implements how update the widgets knowing the data value. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). void sofa::gui::qt::RadioDataWidget::setDataReadOnly ; (; bool ; readOnly). virtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ writeToData(). void sofa::gui::qt::RadioDataWidget::writeToData ; (; ). protectedvirtual . Implements how to update the data, knowing the widget value. ; Implements sofa::gui::qt::DataWidget. sofaguiqtRadioDataWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:4300,perform,perform,4300,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,2,['perform'],['perform']
Performance," (after loading the xml structure) More...;  ; static NodeSPtr loadFromMemory (const char *filename, const char *data);  load a scene from memory (typically : an xml into a string) More...;  ;  Static Public Member Functions inherited from sofa::simulation::SceneLoader; static void addListener (Listener *l);  adding a listener More...;  ; static void removeListener (Listener *l);  removing a listener More...;  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::simulation::SceneLoader; static Listeners s_listeners;  ;  Static Protected Member Functions inherited from sofa::simulation::SceneLoader; static void notifyLoadingSceneBefore (SceneLoader *sceneLoader);  ; static void notifyReloadingSceneBefore (SceneLoader *sceneLoader);  ; static void notifyLoadingSceneAfter (sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader);  ; static void notifyReloadingSceneAfter (sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader);  . Attribute details. ◆ loadSucceed. bool sofa::simulation::SceneLoaderXML::loadSucceed = true. static . Function details. ◆ canLoadFileExtension(). bool sofa::simulation::SceneLoaderXML::canLoadFileExtension ; (; const char * ; extension). overridevirtual . Pre-loading check. ; Implements sofa::simulation::SceneLoader. ◆ canWriteFileExtension(). bool sofa::simulation::SceneLoaderXML::canWriteFileExtension ; (; const char * ; extension). overridevirtual . Pre-saving check. ; Reimplemented from sofa::simulation::SceneLoader. ◆ doLoad(). sofa::simulation::Node::SPtr sofa::simulation::SceneLoaderXML::doLoad ; (; const std::string & ; filename, . const std::vector< std::string > & ; sceneArgs . ). overridevirtual . load the file ; Implements sofa::simulation::SceneLoader. ◆ doLoadFromMemory(). NodeSPtr sofa::simulation::SceneLoaderXML::doLoadFromMemory ; (; const char * ; filename, . const char * ; data . ). load a scene from memory (typically : an xml into a string) . ◆ getExtensionList(). void sofa::simulation::Scen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html:3043,load,loadSucceed,3043,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,2,['load'],['loadSucceed']
Performance," (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::loader::BaseLoader;  BaseLoader ();  ;  ~BaseLoader () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Function details. ◆ SOFA_CLASS(). sofa::core::loader::ImageLoader::SOFA_CLASS ; (; ImageLoader ; , . BaseLoader ;  . ). sofacoreloaderImageLoader; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html:13329,load,loader,13329,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html,2,['load'],['loader']
Performance," (const core::visual::VisualParams *vparams) override;  Display shadow-casting surfaces. More...;  ; virtual bool loadTextures ();  ; virtual bool loadTexture (const std::string &);  ; bool load (const std::string &filename, const std::string &loader, const std::string &textureName);  ; void flipFaces ();  ; void setFilename (std::string s);  ; std::string getFilename ();  ; void setColor (float r, float g, float b, float a);  ; void setColor (std::string color);  ; void setUseNormals (bool val);  ; bool getUseNormals () const;  ; void setCastShadow (bool val);  ; bool getCastShadow () const;  ; void setMesh (helper::io::Mesh &m, bool tex=false);  ; bool isUsingTopology () const;  ; const VecCoord & getVertices () const;  ; const VecDeriv & getVnormals () const;  ; const VecTexCoord & getVtexcoords () const;  ; const VecCoord & getVtangents () const;  ; const VecCoord & getVbitangents () const;  ; const VecVisualTriangle & getTriangles () const;  ; const VecVisualQuad & getQuads () const;  ; const VecVisualEdge & getEdges () const;  ; void setVertices (VecCoord *x);  ; void setVnormals (VecDeriv *vn);  ; void setVtexcoords (VecTexCoord *vt);  ; void setVtangents (VecCoord *v);  ; void setVbitangents (VecCoord *v);  ; void setTriangles (VecVisualTriangle *t);  ; void setQuads (VecVisualQuad *q);  ; void setEdges (VecVisualEdge *e);  ; virtual void computePositions ();  ; virtual void computeMesh ();  ; virtual void computeNormals ();  ; virtual void computeTangents ();  ; void computeBBox (const core::ExecParams *params, bool=false) override;  ; virtual void computeUVSphereProjection ();  ; virtual void updateBuffers ();  ; virtual void deleteBuffers ();  ; virtual void deleteTextures ();  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void initFromTopology ();  ; void initPositionFromVertices ();  ; void initFromFile",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:8803,load,loadTextures,8803,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,4,['load'],"['load', 'loadTexture', 'loadTextures', 'loader']"
Performance," (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor.html:2378,load,loader,2378,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor.html,1,['load'],['loader']
Performance," (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageDDS() [1/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; ). inline . ◆ ImageDDS() [2/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; const std::string & ; filename). inline . Function details. ◆ load(). bool sofa::helper::io::ImageDDS::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageDDS::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageDDS; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:2685,load,load,2685,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,4,['load'],['load']
Performance," ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io::XspLoaderDataHook::setNumSprings ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of springs. ; Parameters. nnumber of springs. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setViscosity(). vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3731,load,loading,3731,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,4,['load'],"['loaded', 'loading']"
Performance," *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_filename. objectmodel::DataFileName sofa::core::loader::BaseLoader::d_filename. Constructor details. ◆ BaseLoader(). sofa::core::loader::BaseLoader::BaseLoader ; (; ). protected . ◆ ~BaseLoader(). sofa::core::loader::BaseLoader::~BaseLoader ; (; ). overrideprotected . Function details. ◆ canLoad(). bool sofa::core::loader::BaseLoader::canLoad ; (; ). virtual . Reimplemented in sofa::core::loader::SceneLoader, sofa::core::loader::MeshLoader, sofa::component::io::mesh::VoxelGridLoader, sofa::component::io::mesh::StringMeshCreator, and sofa::component::io::mesh::GridMeshCreator. ◆ getFilename(). const std::string & sofa::core::loader::BaseLoader::getFilename ; (; ). ◆ load(). virtual bool sofa::core::loader::BaseLoader::load ; (; ). pure virtual . Implemented in sofa::component::io::mesh::VoxelGridLoader, sofa::component::io::mesh::SphereLoader, and sofa::core::loader::MeshLoader. ◆ parse(). void sofa::core::loader::BaseLoader::parse ; (; objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base.; Reimplemented in sofa::core::loader::SceneLoader, and sofa::core::loader::MeshLoader. ◆ readLine(). bool sofa::core::loader::BaseLoader::readLine ; (; char * ; buf, . int ; size, . FILE * ; f . ). staticprotected . ◆ setFilename(). void sofa::core::loader::BaseLoader::setFilename ; (; std::string ; f). ◆ skipToEOL(). void sofa::core::loader::BaseLoader::skipToEOL ; (; FILE * ; f). staticprotected . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::loader::BaseLoader::SOFA_AB",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html:13933,load,loader,13933,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,1,['load'],['loader']
Performance," *, BaseMouseInteractor *interactor);  . Attribute details. ◆ firstClick. template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::firstClick. protected . bool: true if first click (when removing zone, first clic show zone, second delete it). . ◆ picked. template<class DataTypes > . BodyPicked sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::picked. protected . picked structure from mouseInteractor. . ◆ selectedElem. template<class DataTypes > . VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::selectedElem. protected . vector of element Id concerned by the operation . ◆ surfaceOnVolume. template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::surfaceOnVolume. protected . bool: true if a surface zone is going to be removed on a volumique mesh. . ◆ volumeOnSurface. template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::volumeOnSurface. protected . bool: true if a volumique zone is going to be removed at the surface of a volumique mesh. . Constructor details. ◆ RemovePrimitivePerformer(). template<class DataTypes > . sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::RemovePrimitivePerformer ; (; BaseMouseInteractor * ; i). ◆ ~RemovePrimitivePerformer(). template<class DataTypes > . sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::~RemovePrimitivePerformer ; (; ). inline . Function details. ◆ createElementList(). template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::createElementList. protected . Function creating a list of elements concerned by the removal operation. This function detect if a volume or a surface or a volume on the surface is going to be removed. Elements are stored in See alsoselectedElem. Calling . getNeighboorElements and . getElementInZone.; Returnsbool: f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html:4460,perform,performer,4460,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,2,['perform'],['performer']
Performance," *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_frames. template<class DataTypes > . Data<VecCoord> sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_frames. protected . Frames at output. . ◆ d_invertNormals. template<class DataTypes > . Data<bool> sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_invertNormals. protected . Swap normals. . ◆ d_normals. template<class DataTypes > . Data< type::vector<CPos> > sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_normals. protected . Normals of the mesh loaded. . ◆ d_rotation. template<class DataTypes > . Data<int> sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_rotation. protected . Apply a local rotation on the frames. If 0 a x-axis rotation is applied. If 1 a y-axis rotation is applied, If 2 a z-axis rotation is applied. . ◆ d_rotationAngle. template<class DataTypes > . Data<double> sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_rotationAngle. protected . Angle rotation. . ◆ d_texCoords. template<class DataTypes > . Data< type::vector<sofa::type::Vec2> > sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_texCoords. protected . TexCoords of the mesh loaded. . ◆ d_useNormals. template<class DataTypes > . Data<bool> sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_useNormals. protected . Use normals to compute the orientations; if disabled the direction of the x axisof a vertice is the one from this vertice to the next one. . ◆ d_vertices. template<class DataTypes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html:17869,load,loaded,17869,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,1,['load'],['loaded']
Performance," *b);  ; static const InternalBlockAccessor * getInternal (const BlockConstAccessor *b);  ; static InternalBlockAccessor * getInternal (BlockAccessor *b);  ; static const InternalBlockAccessor * getInternal (const BlockAccessor *b);  ; static InternalColBlockIterator * getInternal (ColBlockConstIterator *b);  ; static const InternalColBlockIterator * getInternal (const ColBlockConstIterator *b);  ; static InternalRowBlockIterator * getInternal (RowBlockConstIterator *b);  ; static const InternalRowBlockIterator * getInternal (const RowBlockConstIterator *b);  . Additional Inherited Members;  Public Attributes inherited from sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >; CompressedMatrix compressedMatrix;  the compressed matrix More...;  . Attribute details. ◆ incomingBlocks. template<class InDataTypes , class OutDataTypes > . BlockMatMap sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::incomingBlocks. protected . To store block-view data before it is compressed in optimized format. . Constructor details. ◆ EigenSparseMatrix(). template<class InDataTypes , class OutDataTypes > . sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::EigenSparseMatrix ; (; int ; nbRow = 0, . int ; nbCol = 0 . ). inline . Function details. ◆ addBlock(). template<class InDataTypes , class OutDataTypes > . void sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::addBlock ; (; unsigned ; row, . unsigned ; col, . const Block & ; b . ). inline . Schedule the addition of the block at the given place. Scheduled additions must be finalized using function compress(). . ◆ addMult() [1/2]. template<class InDataTypes , class OutDataTypes > . void sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::addMult ; (; OutVecDeriv & ; result, . const InVecDeriv & ; data . ); const. inline . compute result += A * data . ◆ addMult() [2/2]. template<class InDataTypes , class OutDataTypes > . void sofa::linearalgebra::EigenS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:19734,optimiz,optimized,19734,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,2,['optimiz'],['optimized']
Performance, *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; createElementList()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; end()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; execute()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; firstClicksofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getElementInZone(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getNeighboorElements(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; pickedsofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; RemovePrimitivePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; RemovePrimitivePerformerConfiguration()sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; selectedElemsofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; selectorScalesofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; setScale(double s)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; setTopologicalOperation(int m)sofa::gui::c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html:1491,perform,performer,1491,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,2,['perform'],['performer']
Performance," *mat, const linearalgebra::BaseMatrix *Jmat);  ; const char * Name ();  ; const char * Name ();  ; SOFA_LINEARALGEBRA_API const char * Name ();  ; SOFA_LINEARALGEBRA_API const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:3522,perform,performances,3522,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,2,['perform'],['performances']
Performance," *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(GridMeshCreator, sofa::core::loader::MeshLoader)sofa::component::io::mesh::GridMeshCreator; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::core::loader::MeshLoader; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::loader::MeshLoader; trianglePatternsofa::component::io::mesh::GridMeshCreator; type()sofa::component::io::mesh::GridMeshCreatorinlinevirtual; uniqueEdgessofa::component::io::mesh::GridMeshCreatorprotected; updateElements()sofa::core::loader::MeshLoadervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::core::loader::MeshLoadervirtual; updateNormals()sofa::core::loader::MeshLoadervirtual; updatePoints()sofa::core::loader::MeshLoadervirtual; Vec3 typedefsofa::core::loader::MeshLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; vert(unsigned x, unsigned y)sofa::component::io::mesh::GridMeshCreatorinlineprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:17133,load,loader,17133,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,6,['load'],['loader']
Performance," *root, SReal *minBBox, SReal *maxBBox, bool init=true)=deletesofa::simulation::Simulationvirtual; computeTotalBBox(Node *root, SReal *minBBox, SReal *maxBBox)=deletesofa::simulation::Simulationvirtual; createNewGraph(const std::string &name)=0sofa::simulation::Simulationpure virtual; createNewNode(const std::string &name)=0sofa::simulation::Simulationpure virtual; draw(sofa::core::visual::VisualParams *vparams, Node *root)=deletesofa::simulation::Simulationvirtual; dumpState(Node *root, std::ofstream &out)=deletesofa::simulation::Simulationvirtual; exportGraph(Node *root, const char *filename=nullptr)=deletesofa::simulation::Simulationvirtual; exportOBJ(Node *root, const char *filename, bool exportMTL=true)=deletesofa::simulation::Simulationvirtual; exportXML(Node *root, const char *fileName=nullptr)=deletesofa::simulation::Simulationvirtual; init(Node *root)=deletesofa::simulation::Simulationvirtual; initNode(Node *node)=deletesofa::simulation::Simulationvirtual; initTextures(Node *root)=deletesofa::simulation::Simulationvirtual; isDirectedAcyclicGraph()=0sofa::simulation::Simulationpure virtual; load(const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))=deletesofa::simulation::Simulationvirtual; operator=(const Simulation &n)=deletesofa::simulation::Simulation; print(Node *root)=deletesofa::simulation::Simulationvirtual; reset(Node *root)=deletesofa::simulation::Simulationvirtual; Simulation()sofa::simulation::Simulation; Simulation(const Simulation &n)=deletesofa::simulation::Simulation; SPtr typedefsofa::simulation::Simulation; theSimulationsofa::simulation::Simulationinlinestatic; unload(NodeSPtr root)=deletesofa::simulation::Simulationvirtual; updateContext(Node *root)=deletesofa::simulation::Simulationvirtual; updateVisual(Node *root)=deletesofa::simulation::Simulationvirtual; updateVisualContext(Node *root)=deletesofa::simulation::Simulationvirtual; ~Simulation()sofa::simulation::Simulationvirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html:1456,load,load,1456,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation-members.html,2,['load'],['load']
Performance, . ◆ selectedElem. template<class DataTypes > . VecIds sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::selectedElem. protected . vector of element Id concerned by the operation . ◆ surfaceOnVolume. template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::surfaceOnVolume. protected . bool: true if a surface zone is going to be removed on a volumique mesh. . ◆ volumeOnSurface. template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::volumeOnSurface. protected . bool: true if a volumique zone is going to be removed at the surface of a volumique mesh. . Constructor details. ◆ RemovePrimitivePerformer(). template<class DataTypes > . sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::RemovePrimitivePerformer ; (; BaseMouseInteractor * ; i). ◆ ~RemovePrimitivePerformer(). template<class DataTypes > . sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::~RemovePrimitivePerformer ; (; ). inline . Function details. ◆ createElementList(). template<class DataTypes > . bool sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::createElementList. protected . Function creating a list of elements concerned by the removal operation. This function detect if a volume or a surface or a volume on the surface is going to be removed. Elements are stored in See alsoselectedElem. Calling . getNeighboorElements and . getElementInZone.; Returnsbool: false if method has encounter an error. . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ end(). template<class DataTypes > . void sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >::end. ◆ execute(). template<class DataTypes > . void sofa::gui,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html:4923,perform,performer,4923,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,2,['perform'],['performer']
Performance," 18 – Sofa 20 – Linking CXX Shared Library Errors. /ubuntu-software-center-to-install-sofa; . /feed; ; [SOLVED] Ubuntu Software Center to install SOFA – SOFA. SOFA - Topic: [SOLVED] Ubuntu Software Center to install SOFA. /udk-comment-sont-leves-les-mappable-keys; ; SOFA - Topic: UDK : Comment sont levés les ""Mappable keys"". /unable-to-assign-rest_position-to-mo-in-sofapython3-plugin-in-debug-mode; ; SOFA - Topic: Unable to assign rest_position to MO in SofaPython3 plugin in Debug mode. /unable-to-build-main-cpp-in-sofaphysicsapi; ; SOFA - Topic: Unable to build main.cpp in SofaPhysicsAPI. /unable-to-build-of-sofaguiglut; ; SOFA - Topic: Unable to build of SofaGuiGlut. /unable-to-create-bilateralinteractionconstraint; ; SOFA - Topic: [SOLVED] Unable to create ‘BilateralInteractionConstraint’. /unable-to-link-qt5-dlls-could-not-find-qt-plugin-platform-windows; ; SOFA - Topic: [SOLVED] Unable to link Qt5 dlls: could not find Qt plugin platform ""windows"". /unable-to-load-mesh; ; SOFA - Topic: [SOLVED] Unable to load mesh. /unable-to-load-py-scene-from-softrobot-plugin; ; SOFA - Topic: [SOLVED] Unable to load .py scene from SoftRobot plugin. /unable-to-make-sofa-17-06-no-target-specified; ; SOFA - Topic: [SOLVED] Unable to make Sofa 17.06: No target specified. /undefined-reference-to-boostprogram_optionsabstrac_variables_mapoperator; ; SOFA - Topic: [SOLVED] undefined reference to 'boost::program_options::abstrac_variables_map::operator'. /unit-of-young-modulus-in-tetrahedronfemforcefield-and-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Unit of Young Modulus in TetrahedronFEMForceField and SurfacePressureConstraint. /units-of-simulation; . /feed; ; [SOLVED] Units of simulation – SOFA. SOFA - Topic: [SOLVED] Units of simulation. /units-por-pressure-at-fingercontroller-py; ; SOFA - Topic: [SOLVED] Units por pressure at fingerController.py. /upcoming-interesting-call-for-papers; ; SOFA - Topic: Upcoming interesting call for papers!. /update-an-engine-at-every-step; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:410872,load,load-mesh,410872,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['load'],"['load', 'load-mesh']"
Performance," ; Implements sofa::simulation::SceneLoader. ◆ doLoadFromMemory(). NodeSPtr sofa::simulation::SceneLoaderXML::doLoadFromMemory ; (; const char * ; filename, . const char * ; data . ). load a scene from memory (typically : an xml into a string) . ◆ getExtensionList(). void sofa::simulation::SceneLoaderXML::getExtensionList ; (; ExtensionList * ; list). overridevirtual . get the list of file extensions ; Implements sofa::simulation::SceneLoader. ◆ getFileTypeDesc(). std::string sofa::simulation::SceneLoaderXML::getFileTypeDesc ; (; ). overridevirtual . get the file type description ; Implements sofa::simulation::SceneLoader. ◆ loadFromMemory(). Node::SPtr sofa::simulation::SceneLoaderXML::loadFromMemory ; (; const char * ; filename, . const char * ; data . ). static . load a scene from memory (typically : an xml into a string) ; Load from a string in memory. . ◆ processXML(). Node::SPtr sofa::simulation::SceneLoaderXML::processXML ; (; xml::BaseElement * ; xml, . const char * ; filename . ). static . generic function to process xml tree (after loading the xml structure) ; Load a scene from a file. . ◆ syntaxForAddingRequiredPlugin(). bool sofa::simulation::SceneLoaderXML::syntaxForAddingRequiredPlugin ; (; const std::string & ; pluginName, . const std::vector< std::string > & ; listComponents, . std::ostream & ; ss, . sofa::simulation::Node * ; nodeWhereAdded . ). overridevirtual . Write into a ostream the syntax to add a RequiredPlugin component in the scene file. The syntax depends on the file format, hence the SceneLoader. The function returns true if the derived SceneLoader implements this function, false otherwise. ; Reimplemented from sofa::simulation::SceneLoader. ◆ write(). void sofa::simulation::SceneLoaderXML::write ; (; sofa::simulation::Node * ; node, . const char * ; filename . ). overridevirtual . write the file ; Reimplemented from sofa::simulation::SceneLoader. sofasimulationSceneLoaderXML; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html:4811,load,loading,4811,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,3,"['Load', 'load']","['Load', 'loading']"
Performance," > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Function details. ◆ loadDataArray() [1/3]. BaseVTKReader::BaseVTKDataIO * sofa::component::io::mesh::XMLVTKReader::loadDataArray ; (; tinyxml2::XMLElement * ; dataArrayElement). protected . ◆ loadDataArray() [2/3]. BaseVTKReader::BaseVTKDataIO * sofa::component::io::mesh::XMLVTKReader::loadDataArray ; (; tinyxml2::XMLElement * ; dataArrayElement, . int ; size . ). protected . ◆ loadDataArray() [3/3]. BaseVTKReader::BaseVTKDataIO * sofa::component::io::mesh::XMLVTKReader::loadDataArray ; (; tinyxml2::XMLElement * ; dataArrayElement, . int ; size, . string ; type . ). protected . ◆ loadImageData(). bool sofa::component::io::mesh::XMLVTKReader::loadImageData ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadPolydata(). bool sofa::component::io::mesh::XMLVTKReader::loadPolydata ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadRectilinearGrid(). bool sofa::component::io::mesh::XMLVTKReader::loadRectilinearGrid ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadStructuredGrid(). bool sofa::component::io::mesh::XMLVTKReader::loadStructuredGrid ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadStructuredPoints(). bool sofa::component::io::mesh::XMLVTKReader::loadStructuredPoints ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadUnstructuredGrid(). bool sofa::component::io::mesh::XMLVTKReader::loadUnstructuredGrid ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html:14583,load,loadDataArray,14583,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,1,['load'],['loadDataArray']
Performance, > Struct Template Reference . #include <MappedMassMatrixObserver.h>; Detailed Description; template<class Real>; struct sofa::component::linearsystem::MappedMassMatrixObserver< Real >; Pre-compute the mapped mass matrix assuming it is constant and store it. Support cache invalidation . Public Attributes; BaseAssemblingMatrixAccumulator< core::matrixaccumulator::Contribution::MASS > * accumulator { nullptr };  The mass accumulator associated to the observable mass. More...;  ; std::shared_ptr< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantMassMatrix;  ; Data< linearalgebra::CompressedRowSparseMatrix< Real > > m_invariantProjectedMassMatrix;  . Protected Attributes; core::DataTracker m_dataTracker;  ; core::behavior::BaseMass * m_observedMass { nullptr };  ; core::behavior::BaseMechanicalState * m_mstate { nullptr };  The state associated to the observable mass. More...;  ; bool m_newObservables = true;  . Public Member Functions; void observe (core::behavior::BaseMass *mass);  The provided mass is observed to track cache invalidation. More...;  ; void observe (core::BaseMapping *mapping);  ; void observe (core::behavior::BaseMechanicalState *mstate);  The provided state (associated to the mass) is observed to track cache invalidation. More...;  ; core::behavior::BaseMass * getObservableMass () const;  Return the observable mass. More...;  ; core::behavior::BaseMechanicalState * getObservableState () const;  Return the observable state. More...;  ; bool hasObservableChanged ();  Return true if the tracking of the observables noticed a change since the last call. More...;  . Attribute details. ◆ accumulator. template<class Real > . BaseAssemblingMatrixAccumulator<core::matrixaccumulator::Contribution::MASS>* sofa::component::linearsystem::MappedMassMatrixObserver< Real >::accumulator { nullptr }. The mass accumulator associated to the observable mass. . ◆ m_dataTracker. template<class Real > . core::DataTracker sofa::component::linearsystem::MappedMass,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html:1380,cache,cache,1380,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_mapped_mass_matrix_observer.html,2,['cache'],['cache']
Performance, > sofa::core::loader::MeshLoader::d_polylines. Polylines of the mesh loaded. . ◆ d_positions. Data< type::vector< Vec3 > > sofa::core::loader::MeshLoader::d_positions. Vertices of the mesh loaded. . ◆ d_previousTransformation. type::Matrix4 sofa::core::loader::MeshLoader::d_previousTransformation. protected . to be able to call reinit w/o applying several time the same transform . ◆ d_pyramids. Data< type::vector< Pyramid > > sofa::core::loader::MeshLoader::d_pyramids. Pyramids of the mesh loaded. . ◆ d_pyramidsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pyramidsGroups. Groups of Pyramids. . ◆ d_quads. Data< type::vector< Quad > > sofa::core::loader::MeshLoader::d_quads. Quads of the mesh loaded. . ◆ d_quadsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_quadsGroups. Groups of Quads. . ◆ d_rotation. Data< Vec3 > sofa::core::loader::MeshLoader::d_rotation. Rotation of the DOFs. . ◆ d_scale. Data< Vec3 > sofa::core::loader::MeshLoader::d_scale. Scale of the DOFs in 3 dimensions. . ◆ d_tetrahedra. Data< type::vector< Tetrahedron > > sofa::core::loader::MeshLoader::d_tetrahedra. Tetrahedra of the mesh loaded. . ◆ d_tetrahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_tetrahedraGroups. Groups of Tetrahedra. . ◆ d_transformation. Data< type::Matrix4 > sofa::core::loader::MeshLoader::d_transformation. 4x4 Homogeneous matrix to transform the DOFs (when present replace any) . ◆ d_translation. Data< Vec3 > sofa::core::loader::MeshLoader::d_translation. Translation of the DOFs. . ◆ d_triangles. Data< type::vector< Triangle > > sofa::core::loader::MeshLoader::d_triangles. Triangles of the mesh loaded. . ◆ d_trianglesGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_trianglesGroups. Groups of Triangles. . ◆ d_triangulate. Data< bool > sofa::core::loader::MeshLoader::d_triangulate. Divide all polygons into triangles. . Constructor details. ◆ ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:23485,load,loader,23485,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance, > sofa::core::loader::MeshLoader::d_positions. Vertices of the mesh loaded. . ◆ d_previousTransformation. type::Matrix4 sofa::core::loader::MeshLoader::d_previousTransformation. protected . to be able to call reinit w/o applying several time the same transform . ◆ d_pyramids. Data< type::vector< Pyramid > > sofa::core::loader::MeshLoader::d_pyramids. Pyramids of the mesh loaded. . ◆ d_pyramidsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pyramidsGroups. Groups of Pyramids. . ◆ d_quads. Data< type::vector< Quad > > sofa::core::loader::MeshLoader::d_quads. Quads of the mesh loaded. . ◆ d_quadsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_quadsGroups. Groups of Quads. . ◆ d_rotation. Data< Vec3 > sofa::core::loader::MeshLoader::d_rotation. Rotation of the DOFs. . ◆ d_scale. Data< Vec3 > sofa::core::loader::MeshLoader::d_scale. Scale of the DOFs in 3 dimensions. . ◆ d_tetrahedra. Data< type::vector< Tetrahedron > > sofa::core::loader::MeshLoader::d_tetrahedra. Tetrahedra of the mesh loaded. . ◆ d_tetrahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_tetrahedraGroups. Groups of Tetrahedra. . ◆ d_transformation. Data< type::Matrix4 > sofa::core::loader::MeshLoader::d_transformation. 4x4 Homogeneous matrix to transform the DOFs (when present replace any) . ◆ d_translation. Data< Vec3 > sofa::core::loader::MeshLoader::d_translation. Translation of the DOFs. . ◆ d_triangles. Data< type::vector< Triangle > > sofa::core::loader::MeshLoader::d_triangles. Triangles of the mesh loaded. . ◆ d_trianglesGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_trianglesGroups. Groups of Triangles. . ◆ d_triangulate. Data< bool > sofa::core::loader::MeshLoader::d_triangulate. Divide all polygons into triangles. . Constructor details. ◆ MeshLoader(). sofa::core::loader::MeshLoader::MeshLoader ; (; ). protected . Function details. ◆ addEdge() [1/2]. void so,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:23615,load,loader,23615,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance, > sofa::helper::io::Mesh::facets. protected . ◆ groups. std::vector<PrimitiveGroup> sofa::helper::io::Mesh::groups. protected . ◆ loaderType. std::string sofa::helper::io::Mesh::loaderType. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of the mesh loaded. . ◆ m_quadsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_quadsGroups. protected . Groups of Quads. . ◆ m_tetrahedra. sofa::type::vector<,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:5975,load,loaded,5975,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,2,['load'],['loaded']
Performance, > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of the mesh loaded. . ◆ m_quadsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_quadsGroups. protected . Groups of Quads. . ◆ m_tetrahedra. sofa::type::vector< Tetrahedron > sofa::helper::io::Mesh::m_tetrahedra. protected . Tetrahedra of the mesh loaded. . ◆ m_tetrahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_tetrahedraGroups. protected . Groups of Tetrahedra. . ◆ m_triangles. sofa::type::vector< Triangle > sofa::helper::io::Mesh::m_triangles. protected . Triangles of the mesh loaded. . ◆ m_trianglesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_trianglesGroups. protected . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:6433,load,loaded,6433,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,2,['load'],['loaded']
Performance," >::FullMatrix ; (; Real * ; p, . Index ; nbRow, . Index ; nbCol, . Index ; pitch . ). ◆ ~FullMatrix(). template<class Real > . sofa::linearalgebra::FullMatrix< Real >::~FullMatrix. override . Function details. ◆ add() [1/8]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::add ; (; Index ; row, . Index ; col, . double ; v . ). overridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [2/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:17633,perform,performances,17633,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['perform'],['performances']
Performance," > activeValue;  ; sofa::core::objectmodel::RenamedData< bool > generateHexa;  ; Data< type::Vec3 > d_voxelSize;  Dimension of one voxel. More...;  ; Data< Vec3i > d_dataResolution;  Resolution of the voxel file. More...;  ; Data< Vec6i > d_roi;  Region of interest (xmin, ymin, zmin, xmax, ymax, zmax) More...;  ; Data< int > d_headerSize;  Header size in bytes. More...;  ; Data< int > d_segmentationHeaderSize;  Header size in bytes. More...;  ; Data< type::vector< unsigned int > > d_idxInRegularGrid;  indices of the hexa in the grid. More...;  ; Data< type::vector< int > > d_backgroundValue;  Background values (to be ignored) More...;  ; Data< type::vector< int > > d_activeValue;  Active data values. More...;  ; Data< bool > d_generateHexa;  Interpret voxel as either hexa or points. More...;  ;  Public Attributes inherited from sofa::core::loader::VoxelLoader; Data< type::vector< sofa::type::Vec3 > > positions;  Coordinates of the nodes loaded. More...;  ; Data< type::vector< Hexahedron > > hexahedra;  Hexahedra loaded. More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:2029,load,loaded,2029,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['load'],['loaded']
Performance," API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::FixOperation Member List . This is the complete list of members for sofa::gui::common::FixOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::FixOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::FixOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; FixOperation()sofa::gui::common::FixOperationinline; getDescription()sofa::gui::common::FixOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() constsofa::gui::common::FixOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double s)sofa::gui::common::FixOperationinline; settingsofa::gui::common::FixOperationprotected; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~FixOperation() overridesofa::gui::common::FixOperationinline; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html:550,perform,performer,550,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html,4,['perform'],"['performer', 'performersofa']"
Performance," API: Member List; SOFA API: sofa::core::collision::IntersectorFactory< TIntersectionClass > Class Template Reference; SOFA API: Member List; SOFA API: sofa::core::collision::IntersectorMap Class Reference; SOFA API: Member List; SOFA API: sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::core::collision::NarrowPhaseDetection Class Reference; SOFA API: Member List; SOFA API: sofa::core::collision::Pipeline Class Reference; SOFA API: Member List; SOFA API: sofa::core::collision::TDetectionOutputVector< CM1, CM2 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::core::loader::BaseLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::loader::ImageLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::loader::MeshLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::loader::SceneLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::loader::VoxelLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::matrixaccumulator::no_check_policy Class Reference; SOFA API: sofa::core::objectmodel::AbstractDataLink Class Reference; SOFA API: Member List; SOFA API: sofa::core::objectmodel::Aspect Class Reference; SOFA API: sofa::core::objectmodel::AspectBuffer Class Reference; SOFA API: Member List; SOFA API: sofa::core::objectmodel::AspectPool Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::core::objectmodel::Base Class Reference; SOFA API: sofa::core::objectmodel::BaseClass Class Reference; SOFA API: sofa::core::objectmodel::BaseClassNameHelper Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::core::objectmodel::BaseContext Class Reference; SOFA API: sofa::core::objectmodel::BaseContext::GetObjectsCallBack Class Reference; SOFA API: sofa::core::objectmodel::BaseContext::GetObjectsCallBackT< T, Container > Class Template Reference; SOFA API: Member List; SOFA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:105933,load,loader,105933,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['load'],['loader']
Performance," AddSutureOperation()sofa::gui::common::AddSutureOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QAddSutureOperationinlinevirtual; sofa::gui::common::AddSutureOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddSutureOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; dampingsofa::gui::qt::QAddSutureOperationprotected; defaultPerformerType() overridesofa::gui::common::AddSutureOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDamping() const overridesofa::gui::qt::QAddSutureOperationvirtual; getDescription()sofa::gui::common::AddSutureOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() const overridesofa::gui::qt::QAddSutureOperationvirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QAddSutureOperation()sofa::gui::qt::QAddSutureOperation; setDamping(double f)sofa::gui::common::AddSutureOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html:691,perform,performer,691,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html,2,['perform'],['performer']
Performance," AttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::AttachBodyPerformer< DataTypes >; BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *setting) overridesofa::gui::component::performer::AttachBodyPerformer< DataTypes >inlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_sizesofa::gui::component::performer::AttachBodyPer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html:386,perform,performer,386,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,18,['perform'],['performer']
Performance," AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::AttachOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::AttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setArrowSize(double s)sofa::gui::common::AttachOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s) overridesofa::gui::common::AttachOperationinlineprotectedvirtual; setShowFac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html:748,perform,performer,748,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html,2,['perform'],['performer']
Performance," AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::ConstraintAttachOperationinlineprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::ConstraintAttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setArrowSize(double s)sofa::gui::common::AttachOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s) overridesofa::gui::common::AttachOperat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html:768,perform,performer,768,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html,2,['perform'],['performer']
Performance," BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; ConstraintAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_mstate1sofa::gui::component::performer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html:410,perform,performer,410,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,18,['perform'],['performer']
Performance," BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::io::mesh::OffSequenceLoadervirtual; sofa::component::io::mesh::MeshOffLoader::load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; OffSequenceLoader()sofa::component::io::mesh::OffSequenceLoaderprotected; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html:12661,load,load,12661,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,1,['load'],['load']
Performance, Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ; Data< type::vector< sofa::type::Vec3 > > d_normals;  Normals of the mesh loaded. More...;  ; Data< type::vector< PrimitiveGroup > > d_edgesGroups;  Groups of Edges. More...;  ; Data< type::vector< PrimitiveGroup > > d_trianglesGroups;  Groups of Triangles. More...;  ; Data< type::vector< PrimitiveGroup > > d_quadsGroups;  Groups of Quads. More...;  ; Data< type::vector< PrimitiveGroup > > d_polygonsGroups;  Groups of Polygons. More...;  ; Data< type::vector< PrimitiveGroup > > d_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_hexahedraGroups;  Groups of Hexahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flip,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:2585,load,loaded,2585,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,12,['load'],['loaded']
Performance," Data< unsigned int > d_headerSize;  Size of the header binary file (just before the number of facet). More...;  ; Data< bool > d_forceBinary;  Force reading in binary mode. Even in first keyword of the file is solid. More...;  ; Data< bool > d_mergePositionUsingMap;  Since positions are duplicated in a STL, they have to be merged. Using a map to do so will temporarily duplicate memory but should be more efficient. Disable it if memory is really an issue. More...;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron point",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:1603,load,loaded,1603,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,1,['load'],['loaded']
Performance," DataTypes >, and sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >. ◆ execute(). virtual void sofa::gui::component::performer::InteractionPerformer::execute ; (; ). pure virtual . Implemented in sofa::gui::component::performer::StartNavigationPerformer, sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::AddRecordedCameraPerformer, sofa::gui::component::performer::SuturePointPerformer< DataTypes >, sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, sofa::gui::component::performer::FixParticlePerformer< DataTypes >, and sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >. ◆ handleEvent(). virtual void sofa::gui::component::performer::InteractionPerformer::handleEvent ; (; core::objectmodel::Event * ; ). inlinevirtual . ◆ setPerformerFreeze(). virtual void sofa::gui::component::performer::InteractionPerformer::setPerformerFreeze ; (; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::InciseAlongPathPerformer. ◆ SOFA_ATTRIBUTE_DISABLED__NAMING() [1/2]. sofa::gui::component::performer::InteractionPerformer::SOFA_ATTRIBUTE_DISABLED__NAMING ; (; ""v24.06"" ; , . ""v24.06"" ; , . freezePerformer ; , . m_freezePerformer ;  . ). ◆ SOFA_ATTRIBUTE_DISABLED__NAMING() [2/2]. sofa::gui::component::performer::InteractionPerformer::SOFA_ATTRIBUTE_DISABLED__NAMING ; (; ""v24.06"" ; , . ""v24.06"" ; , . interactor ; , . m_interactor ;  . ). ◆ start(). virtual void sofa::gui::component::performer::InteractionPerformer::start ; (; ). pure virtual . Implemented in sofa::gui::component::performer::StartNavigationPerformer, sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::AddRecordedCameraPerformer, sofa::gui::component::performer::SuturePointPerformer< DataTypes >, sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, sofa::gui::component::performer::FixParticlePerformer< DataTypes >, and sofa::gui::component::performer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html:3618,perform,performer,3618,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,2,['perform'],['performer']
Performance," DataTypes >. ◆ create(). template<class RealObject > . static RealObject* sofa::gui::component::performer::InteractionPerformer::create ; (; RealObject * ; , . BaseMouseInteractor * ; interactor . ). inlinestatic . ◆ draw(). virtual void sofa::gui::component::performer::InteractionPerformer::draw ; (; const core::visual::VisualParams * ; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, sofa::gui::component::performer::FixParticlePerformer< DataTypes >, and sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >. ◆ execute(). virtual void sofa::gui::component::performer::InteractionPerformer::execute ; (; ). pure virtual . Implemented in sofa::gui::component::performer::StartNavigationPerformer, sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::AddRecordedCameraPerformer, sofa::gui::component::performer::SuturePointPerformer< DataTypes >, sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, sofa::gui::component::performer::FixParticlePerformer< DataTypes >, and sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >. ◆ handleEvent(). virtual void sofa::gui::component::performer::InteractionPerformer::handleEvent ; (; core::objectmodel::Event * ; ). inlinevirtual . ◆ setPerformerFreeze(). virtual void sofa::gui::component::performer::InteractionPerformer::setPerformerFreeze ; (; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::InciseAlongPathPerformer. ◆ SOFA_ATTRIBUTE_DISABLED__NAMING() [1/2]. sofa::gui::component::performer::InteractionPerformer::SOFA_ATTRIBUTE_DISABLED__NAMING ; (; ""v24.06"" ; , . ""v24.06"" ; , . freezePerformer ; , . m_freezePerformer ;  . ). ◆ SOFA_ATTRIBUTE_DISABLED__NAMING() [2/2]. sofa::gui::component::performer::InteractionPerformer::SOFA_ATTRIBUTE_DISABLED__NAMING ; (; ""v24.06"" ; , . ""v24.06"" ; , . interactor ; , . m_int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html:2854,perform,performer,2854,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,14,['perform'],['performer']
Performance," Functions inherited from sofa::core::behavior::ConstraintSolver;  SOFA_ABSTRACT_CLASS (ConstraintSolver, objectmodel::BaseObject);  ; virtual void solveConstraint (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null());  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:8853,load,loader,8853,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['load'],['loader']
Performance, GUI window on MAC OS X. /sofa-doesnt-open-pyscn-files; ; SOFA - Topic: [SOLVED] SOFA doesn’t open .pyscn files. /sofa-force-cable-actuation; ; SOFA - Topic: SOFA force cable-actuation. /sofa-forum-disturbances; ; SOFA - Topic: SOFA forum disturbances. /sofa-for-virtual-commissioning; ; SOFA - Topic: SOFA for virtual commissioning?. /sofa-generating-error; ; SOFA - Topic: sofa generating error. /sofa-gui-with-sofapython3; ; SOFA - Topic: Sofa Gui with SofaPython3. /sofahapi-and-mouse-interference; . /feed; ; [SOLVED] SofaHAPI and Mouse Interference – SOFA. /page; . /14; ; SOFA - Topic: [SOLVED] SofaHAPI and Mouse Interference. /15; ; SOFA - Topic: [SOLVED] SofaHAPI and Mouse Interference. /4; ; SOFA - Topic: [SOLVED] SofaHAPI and Mouse Interference. /8; ; SOFA - Topic: [SOLVED] SofaHAPI and Mouse Interference. SOFA - Topic: [SOLVED] SofaHAPI and Mouse Interference. /sofahapi-loading-failed; ; SOFA - Topic: [SOLVED] SofaHAPI loading failed. /sofa-in-c-and-code-optimization-tips; ; SOFA - Topic: SOFA in C++ and Code Optimization Tips. /sofa-installation; . /page; . /13; ; SOFA - Topic: [SOLVED] SOFA installation. /14; ; SOFA - Topic: [SOLVED] SOFA installation. /4; ; SOFA - Topic: [SOLVED] SOFA installation. SOFA - Topic: [SOLVED] SOFA installation. /sofa-in-your-browser; . /page; . /11; ; SOFA - Topic: SOFA in your browser !. /14; ; SOFA - Topic: SOFA in your browser !. /4; ; SOFA - Topic: SOFA in your browser !. SOFA - Topic: SOFA in your browser !. /sofa-launcher-and-modelorderreduction-problems; ; SOFA - Topic: sofa-launcher and modelOrderReduction problems. /sofa-libraries-headers-files-on-different-versions; ; SOFA - Topic: SOFA libraries/headers/files on different versions. /sofa-needs-your-support; ; SOFA - Topic: SOFA needs your support. /sofaphysicsapi-improvementsbackward-compatibility; ; SOFA - Topic: SofaPhysicsAPI improvements/backward compatibility. /sofapluginmanager-h-building; ; SOFA - Topic: [SOLVED] SofaPluginManager.h (building). /sofa-plugin-with-,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:392517,optimiz,optimization-tips,392517,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['optimiz'],['optimization-tips']
Performance," Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void resize (Index nbRow, Index nbCol)=0;  Resize the matrix and reset all values to 0. More...;  ; virtual void set (Index i, Index j, double v)=0;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:14974,perform,performances,14974,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['perform'],['performances']
Performance," Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DirectSAPNarrowPhase ();  ;  ~DirectSAPNarrowPhase () override=default;  ; bool isPairFiltered (const BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:13427,cache,cacheData,13427,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,1,['cache'],['cacheData']
Performance," LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MouseInteractor, DataTypes), BaseMouseInteractor);  ;  MouseInteractor ();  ;  ~MouseInteractor () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; core::behavior::BaseMechanicalState * getMouseContainer () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseMouseInteractor;  SOFA_ABSTRACT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCollisionModel *model);  ; BodyPicked getBodyPicked () const;  ; void setBodyPicked (BodyPicked picked);  ; SReal getDistanceFromMouse () const;  ; void setDistanceFromMouse (SReal d);  ;  Public Member Functions inherited from sofa::core::BehaviorModel;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual bool",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html:2083,perform,performer,2083,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,2,['perform'],['performer']
Performance," MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html:2070,load,loader,2070,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,1,['load'],['loader']
Performance," Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3822,load,loaded,3822,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,2,['load'],['loaded']
Performance," Member Functions;  AddSutureOperation ();  ;  ~AddSutureOperation () override;  ; void setStiffness (double f);  ; virtual double getStiffness () const;  ; void setDamping (double f);  ; virtual double getDamping () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ damping. double sofa::gui::common::AddSutureOperation::damping. protected . ◆ stiffness. double sofa::gui::common::AddSutureOperation::stiffness. protected . Constructor details. ◆ AddSutureOperation(). sofa::gui::common::AddSutureOperation::AddSutureOperation ; (; ). inline . ◆ ~AddSutureOperation(). sofa::gui::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html:1688,perform,performer,1688,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,2,['perform'],['performer']
Performance," More...;  ; Data< TexCoord > d_scaleTex;  Scale of the texture. More...;  ; Data< TexCoord > d_translationTex;  Translation of the texture. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Protected Attributes; GLuint abo;  ; OglShader * shader;  ; in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:6744,Load,Loading,6744,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,1,['Load'],['Loading']
Performance," More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ SceneLoader(). sofa::core::loader::SceneLoader::SceneLoader ; (; ). protected . Constructor. . ◆ ~SceneLoader(). sofa::core::loader::SceneLoader::~SceneLoader ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ canLoad(). bool sofa::core::loader::SceneLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ parse(). void sofa::core::loader::SceneLoader::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::core::loader::SceneLoader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::loader::SceneLoader::SOFA_ABSTRACT_CLASS ; (; SceneLoader ; , . BaseLoader ;  . ). sofacoreloaderSceneLoader; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html:13765,load,loader,13765,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,7,['load'],['loader']
Performance," More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Attribute details. ◆ hexahedra. Data< type::vector<Hexahedron > > sofa::core::loader::VoxelLoader::hexahedra. Hexahedra loaded. . ◆ positions. Data< type::vector<sofa::type::Vec3 > > sofa::core::loader::VoxelLoader::positions. Coordinates of the nodes loaded. . Constructor details. ◆ VoxelLoader(). sofa::core::loader::VoxelLoader::VoxelLoader ; (; ). protected . ◆ ~VoxelLoader(). sofa::core::loader::VoxelLoader::~VoxelLoader ; (; ). overrideprotected . Function details. ◆ addHexahedron() [1/2]. void sofa::core::loader::VoxelLoader::addHexahedron ; (; type::vector< Hexahedron > * ; pHexahedra, . const type::fixed_array< unsigned int, 8 > & ; p . ). ◆ addHexahedron() [2/2]. void sofa::core::loader::VoxelLoader::addHexahedron ; (; type::vector< Hexahedron > * ; pHexahedra, . unsigned int ; p0, . unsigned int ; p1, . unsigned int ; p2, . unsigned int ; p3, . unsigned int ; p4, . unsigned int ; p5, . unsigned int ; p6, . unsigned int ; p7 . ). ◆ createSegmentation3DTexture(). virtual void sofa::core::loader::VoxelLoader::createSegmentation3DTexture ; (; unsigned char ** ; textureData, . int & ; width, . int & ; height, . int & ; depth . ). pure virtual . Implemented in s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html:14687,load,loader,14687,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,1,['load'],['loader']
Performance," Node * ; root, . const char * ; fileName = nullptr . ). virtualdelete . Print all object in the graph in XML format. . ◆ init(). virtual void sofa::simulation::Simulation::init ; (; Node * ; root). virtualdelete . Initialize the objects. . ◆ initNode(). virtual void sofa::simulation::Simulation::initNode ; (; Node * ; node). virtualdelete . Init a node without changing the context of the simulation. . ◆ initTextures(). virtual void sofa::simulation::Simulation::initTextures ; (; Node * ; root). virtualdelete . Initialize the textures. . ◆ isDirectedAcyclicGraph(). virtual bool sofa::simulation::Simulation::isDirectedAcyclicGraph ; (; ). pure virtual . Can the simulation handle a directed acyclic graph? ; Implemented in sofa::simulation::graph::DAGSimulation. ◆ load(). virtual NodeSPtr sofa::simulation::Simulation::load ; (; const std::string & ; , . bool ; reload = false, . const std::vector< std::string > & ; sceneArgs = std::vector< std::string >(0) . ). virtualdelete . Load a scene from a file. . ◆ operator=(). Simulation& sofa::simulation::Simulation::operator= ; (; const Simulation & ; n). delete . ◆ print(). virtual void sofa::simulation::Simulation::print ; (; Node * ; root). virtualdelete . Print all object in the graph. . ◆ reset(). virtual void sofa::simulation::Simulation::reset ; (; Node * ; root). virtualdelete . Reset to initial state. . ◆ unload(). virtual void sofa::simulation::Simulation::unload ; (; NodeSPtr ; root). virtualdelete . Unload a scene from a Node. . ◆ updateContext(). virtual void sofa::simulation::Simulation::updateContext ; (; Node * ; root). virtualdelete . Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). virtual void sofa::simulation::Simulation::updateVisual ; (; Node * ; root). virtualdelete . Update the Visual Models: triggers the Mappings. . ◆ updateVisualContext(). virtual void sofa::simulation::Simulation::updateVisualContext ; (; Node * ; root). virtualdelete . Update contex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html:7039,Load,Load,7039,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,1,['Load'],['Load']
Performance, Plugin. /7; ; SOFA - Topic: Linking error with Xitact Plugin. SOFA - Topic: Linking error with Xitact Plugin. /linking-geomagicdevice-position-with-mechanicalobject3d-position-in-cpp; ; SOFA - Topic: [SOLVED] Linking GeomagicDevice.position with MechanicalObject3d.position in cpp. /linking-issues-with-plugin-when-loading-it; ; SOFA - Topic: Linking issues with plugin when loading it. /link-problems; ; SOFA - Topic: [SOLVED] [Solved] Link problems. /link-sofa-as-an-external-dependency-in-a-c-project; ; SOFA - Topic: Link SOFA as an external dependency in a c++ project. /list-of-all-available-fields-for-vtkexporter; ; SOFA - Topic: List of all available fields for VTKExporter?. /liver-fem-implementation; ; SOFA - Topic: Liver FEM implementation. /lmconstraints-with-flexible-simulation; ; SOFA - Topic: [SOLVED] LMConstraints with Flexible simulation. /load-a-python-scene-from-a-c-unit-test; ; SOFA - Topic: [SOLVED] Load a Python scene from a C++ unit test. /loading-off-files; ; SOFA - Topic: [SOLVED] Loading OFF files. /loading-sofas-dlls-for-python3-8-on-windows; ; SOFA - Topic: [SOLVED] Loading SOFA’s dlls for Python3.8+ on Windows. /load-model-built-by-solidworks; ; SOFA - Topic: load model built by solidworks. /load-msh-and-vtk-file-in-xml-and-read-with-sofa; . /feed; ; [SOLVED] Load msh and vtk file in XML and read with sofa – SOFA. SOFA - Topic: [SOLVED] Load msh and vtk file in XML and read with sofa. /local-pivot-points-for-obj-files; ; SOFA - Topic: local pivot points for .obj files. /looking-for-anatomy-transfer-code; ; SOFA - Topic: [SOLVED] Looking for Anatomy Transfer code. /looking-for-an-example-on-cutting-a-3d-volumetric-mesh; ; SOFA - Topic: Looking for an example on cutting a 3D volumetric mesh. /looking-for-sofa-xml-reference; ; SOFA - Topic: Looking for SOFA XML Reference. /lots-of-glew-errors-while-building-sofa; ; SOFA - Topic: [SOLVED] Lots of glew errors while building Sofa. /lowering-contraint-response-without-affecting-fall-speed; ; SOFA - To,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:342150,load,loading-off-files,342150,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['load'],['loading-off-files']
Performance," PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Static Public Member Functions; static Mesh * Create (const std::string &filename);  ; static Mesh * Create (const std::string &loader, const std::string &filename);  ; template<class Object > ; static Object * create (Object *, std::string arg);  . Attribute details. ◆ facets. sofa::type::vector< sofa::type::vector< sofa::type::vector<PointID> > > sofa::helper::io::Mesh::facets. protected . ◆ groups. std::vector<PrimitiveGroup> sofa::helper::io::Mesh::groups. protected . ◆ loaderType. std::string sofa::helper::io::Mesh::loaderType. ◆ m_edges. sofa::type::vector< Edge > sofa::helper::io::Mesh::m_edges. protected . Edges of the mesh loaded. . ◆ m_edgesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_edgesGroups. protected . Groups of Edges. . ◆ m_hexahedra. sofa::type::vector< Hexahedron > sofa::helper::io::Mesh::m_hexahedra. protected . Hexahedra of the mesh loaded. . ◆ m_hexahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_hexahedraGroups. protected . Groups of Hexahedra. . ◆ m_highOrderEdgePositions. type::vector< HighOrderEdgePosition > sofa::helper::io::Mesh::m_highOrderEdgePositions. protected . High order edge points of the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:5091,load,loaderType,5091,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,2,['load'],['loaderType']
Performance," PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pyramidsGroups. Groups of Pyramids. . ◆ d_quads. Data< type::vector< Quad > > sofa::core::loader::MeshLoader::d_quads. Quads of the mesh loaded. . ◆ d_quadsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_quadsGroups. Groups of Quads. . ◆ d_rotation. Data< Vec3 > sofa::core::loader::MeshLoader::d_rotation. Rotation of the DOFs. . ◆ d_scale. Data< Vec3 > sofa::core::loader::MeshLoader::d_scale. Scale of the DOFs in 3 dimensions. . ◆ d_tetrahedra. Data< type::vector< Tetrahedron > > sofa::core::loader::MeshLoader::d_tetrahedra. Tetrahedra of the mesh loaded. . ◆ d_tetrahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_tetrahedraGroups. Groups of Tetrahedra. . ◆ d_transformation. Data< type::Matrix4 > sofa::core::loader::MeshLoader::d_transformation. 4x4 Homogeneous matrix to transform the DOFs (when present replace any) . ◆ d_translation. Data< Vec3 > sofa::core::loader::MeshLoader::d_translation. Translation of the DOFs. . ◆ d_triangles. Data< type::vector< Triangle > > sofa::core::loader::MeshLoader::d_triangles. Triangles of the mesh loaded. . ◆ d_trianglesGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_trianglesGroups. Groups of Triangles. . ◆ d_triangulate. Data< bool > sofa::core::loader::MeshLoader::d_triangulate. Divide all polygons into triangles. . Constructor details. ◆ MeshLoader(). sofa::core::loader::MeshLoader::MeshLoader ; (; ). protected . Function details. ◆ addEdge() [1/2]. void sofa::core::loader::MeshLoader::addEdge ; (; type::vector< Edge > & ; pEdges, . const Edge & ; p . ). protected . ◆ addEdge() [2/2]. void sofa::core::loader::MeshLoader::addEdge ; (; type::vector< Edge > & ; pEdges, . Topology::EdgeID ; p0, . Topology::EdgeID ; p1 . ). protected . ◆ addHexahedron() [1/2]. void sofa::core::loader::MeshLoader::addHexahedron ; (; type::vector< Hexahedron > & ; pHexahedra, . const Hexahedron &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:24027,load,loader,24027,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance," Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::OffSequenceLoader Class Reference . #include <OffSequenceLoader.h>. Inheritance diagram for sofa::component::io::mesh::OffSequenceLoader:. [legend]; Detailed Description; This class load a sequence of .off mesh files, ordered by index in their name . Public Member Functions;  SOFA_CLASS (OffSequenceLoader, MeshOffLoader);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; virtual bool load (const char *filename);  ; void clear ();  ;  Public Member Functions inherited from sofa::component::io::mesh::MeshOffLoader;  SOFA_CLASS (MeshOffLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransf",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:881,load,load,881,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,3,['load'],"['load', 'loader']"
Performance," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(PrecomputedLinearSolver, TMatrix, TVector), SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, TMatrix, TVector));  ;  PrecomputedLinearSolver ();  ; void solve (TMatrix &M, TVector &x, TVector &b) override;  ; void invert (TMatrix &M) override;  ; void setSystemMBKMatrix (const core::MechanicalParams *mparams) override;  ; void loadMatrix (TMatrix &M);  ; void loadMatrixWithCholeskyDecomposition (TMatrix &M);  ; bool addJMInvJt (linearalgebra::BaseMatrix *result, lineara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_precomputed_linear_solver.html:1856,load,loadMatrix,1856,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_precomputed_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_precomputed_linear_solver.html,2,['load'],"['loadMatrix', 'loadMatrixWithCholeskyDecomposition']"
Performance," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:10842,load,loaderPHP,10842,api/master/sofa/html/namespacesofa_1_1simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html,9,"['Load', 'load']","['Load', 'loaderPHP', 'loaderXML']"
Performance," Reference . #include <InteractionPerformer.h>. Inheritance diagram for sofa::gui::component::performer::TInteractionPerformer< DataTypes >:. [legend]. Public Member Functions;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void start ()=0;  ; virtual void execute ()=0;  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  . Constructor details. ◆ TInteractionPerformer(). template<class DataTypes > . sofa::gui::component::performer::TInteractionPerformer< DataTypes >::TInteractionPerformer ; (; BaseMouseInteractor * ; i). inline . Function details. ◆ create(). template<class DataTypes > . template<class RealObject > . static RealObject* sofa::gui::component::performer::TInteractionPerformer< DataTypes >::create ; (; RealObject * ; , . BaseMouseInteractor * ; interactor . ). inlinestatic . sofaguicomponentperformerTInteractionPerformer; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html:1436,perform,performer,1436,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html,8,['perform'],['performer']
Performance, SOFA - Topic Tag: HDMI. /headers; . /feed; ; headers – SOFA. SOFA - Topic Tag: headers. /heat-diffusion; . /feed; ; Heat diffusion – SOFA. SOFA - Topic Tag: Heat diffusion. /heat-diffusion-fem-tetrahedra; . /feed; ; heat diffusion fem tetrahedra – SOFA. SOFA - Topic Tag: heat diffusion fem tetrahedra. /help-with-bilateralinteractionconstraint; . /feed; ; Help with BilateralInteractionConstraint – SOFA. SOFA - Topic Tag: Help with BilateralInteractionConstraint. /hexahedral; . /feed; ; hexahedral – SOFA. SOFA - Topic Tag: hexahedral. /hexahedron; . /feed; ; hexahedron – SOFA. SOFA - Topic Tag: hexahedron. /histogram; . /feed; ; histogram – SOFA. SOFA - Topic Tag: histogram. /hmsim-conference; . /feed; ; HMSIM conference – SOFA. SOFA - Topic Tag: HMSIM conference. /how-to-solve-this-problem; . /feed; ; how to solve this problem? – SOFA. SOFA - Topic Tag: how to solve this problem?. /hyperelastic; . /feed; ; hyperelastic – SOFA. SOFA - Topic Tag: hyperelastic. /hyper-elastic-mass-links-method-performance-testing; . /feed; ; Hyper-Elastic Mass Links method; performance testing – SOFA. SOFA - Topic Tag: Hyper-Elastic Mass Links method; performance testing. /hyper-elastic-material; . /feed; ; Hyper-elastic Material – SOFA. SOFA - Topic Tag: Hyper-elastic Material. /i; . /feed; ; I – SOFA. SOFA - Topic Tag: I. /ide-operating-system-development-environment; . /feed; ; IDE; Operating System; Development Environment; – SOFA. SOFA - Topic Tag: IDE; Operating System; Development Environment;. /iga-xfem-cad; . /feed; ; IGA XFEM CAD – SOFA. SOFA - Topic Tag: IGA XFEM CAD. /image; . /feed; ; Image – SOFA. SOFA - Topic Tag: Image. /image-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. S,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:448646,perform,performance-testing,448646,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['perform'],['performance-testing']
Performance, SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformer Class Reference; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InteractionPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::StartNavigationPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::SuturePointPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TInteractionPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TopologicalChangeManager Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::AboutSOFADialog Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::BrowserHistory Class Reference; SOFA API: sofa::gui::qt::BrowserHistoryEntry Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::qt::CaptureOptionsWidget Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::ChartsWidget Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::ClickableTextEdit Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::ColourPickin,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:137919,perform,performer,137919,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['perform'],['performer']
Performance, SOFA API: Member List; SOFA API: sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::FixParticlePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::FixParticlePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformer Class Reference; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InteractionPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::StartNavigationPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::SuturePointPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TInteractionPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TopologicalChangeManager Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::AboutSOFADialog Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::BrowserHistory Class Reference; SOFA API: sofa::gui::qt::BrowserHisto,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:137564,perform,performer,137564,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['perform'],['performer']
Performance, SOFA API: sofa::helper::io::Mesh Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::Mesh Class Reference . #include <Mesh.h>. Inheritance diagram for sofa::helper::io::Mesh:. [legend]. Public Attributes; std::string loaderType;  . Protected Attributes; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:1057,load,loaded,1057,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,2,['load'],['loaded']
Performance," T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Attribute details. ◆ d_createSubelements. Data< bool > sofa::core::loader::MeshLoader::d_createSubelements. Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) . ◆ d_edges. Data< type::vector< Edge > > sofa::core::loader::MeshLoader::d_edges. Edges of the mesh loaded. . ◆ d_edgesGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_edgesGroups. Groups of Edges. . ◆ d_flipNormals. Data< bool > sofa::core::loader::MeshLoader::d_flipNormals. Flip Normals. . ◆ d_hexahedra. Data< type::vector< Hexahedron > > sofa::core::loader::MeshLoader::d_hexahedra. Hexahedra of the mesh loaded. . ◆ d_hexahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_hexahedraGroups. Groups of Hexahedra. . ◆ d_highOrderEdgePositions. Data< type::vector< HighOrderEdgePosition > > sofa::core::loader::MeshLoader::d_highOrderEdgePositions. High order edge points of the mesh loaded. . ◆ d_highOrderHexahedronPositions. Data< type::vector< HighOrderHexahedronPosition > > sofa::core::loader::MeshLoader::d_highOrderHexahedronPositions. High order hexahedron points of the mesh loaded. . ◆ d_highOrderQuadPositions. Data< type::vector< HighOrderQuadPosition > > sofa::core::loader::MeshLoader::d_highOrderQuadPositions",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:20189,load,loaded,20189,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loaded']
Performance," Topology::EdgeID p0, Topology::EdgeID p1)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, const Hexahedron &p)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addInGroup(type::vector< sofa::core::loader::PrimitiveGroup > &group, int tag, int eid)sofa::component::io::mesh::MeshGmshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa::core::loader::MeshLoaderprotected; addPolyline(type::vector< Polyline > &pPolylines, Polyline p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, const Pyramid &p)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:1767,load,loader,1767,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance," VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ SceneLoader(). sofa::core::loader::SceneLoader::SceneLoader ; (; ). protected . Constructor. . ◆ ~SceneLoader(). sofa::core::loader::SceneLoader::~SceneLoader ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ canLoad(). bool sofa::core::loader::SceneLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ parse(). void sofa::core::loader::SceneLoader::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::core::loader::SceneLoader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::loader::SceneLoader::SOFA_ABSTRACT_CLASS ; (; SceneLoader ; , . BaseLoader ;  . ). sofacoreloaderSceneLoader; Generated on Mon Nov 11 2024",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html:13667,load,loader,13667,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,1,['load'],['loader']
Performance, VisualModel texcoords data. More...;  ; Data< bool > d_computeMaterialFaces;  True to activate export of Data instances containing list of face indices for each material. More...;  ; type::vector< Data< type::vector< unsigned int > > * > d_subsets_indices;  ; Data< type::vector< int > > d_vertPosIdx;  ; Data< type::vector< int > > d_vertNormIdx;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:2654,load,loaded,2654,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['load'],['loaded']
Performance," VisualParams *vparams) overridesofa::component::engine::select::boxroi::BoxROI< DataTypes >virtual; roiInit() overridesofa::component::engine::select::boxroi::BoxROI< DataTypes >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; SetIndex typedefsofa::component::engine::select::BaseROI< DataTypes >; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(BoxROI, DataTypes), SOFA_TEMPLATE(BaseROI, DataTypes))sofa::component::engine::select::boxroi::BoxROI< DataTypes >; sofa::component::engine::select::BaseROI::SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html:17993,load,loader,17993,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,1,['load'],['loader']
Performance," _forceBinarysofa::component::io::mesh::MeshSTLLoader; _headerSizesofa::component::io::mesh::MeshSTLLoader; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(type::vector< Edge > &pEdges, const Edge &p)sofa::core::loader::MeshLoaderprotected; addEdge(type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, const Hexahedron &p)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:809,load,loader,809,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,3,['load'],['loader']
Performance," activeValuesofa::component::io::mesh::VoxelGridLoader; addActiveDataValue(const int value)sofa::component::io::mesh::VoxelGridLoader; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBackgroundValue(const int value)sofa::component::io::mesh::VoxelGridLoader; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addHexahedron(type::vector< Hexahedron > *pHexahedra, const type::fixed_array< unsigned int, 8 > &p)sofa::core::loader::VoxelLoader; addHexahedron(type::vector< Hexahedron > *pHexahedra, unsigned int p0, unsigned int p1, unsigned int p2, unsigned int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7)sofa::core::loader::VoxelLoader; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; backgroundValuesofa::component::io::mesh::VoxelGridLoader; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html:967,load,loader,967,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,2,['load'],['loader']
Performance," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html:815,perform,performer,815,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,2,['perform'],['performer']
Performance," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addBBox(SReal *, SReal *)sofa::core::BehaviorModelinlinevirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:797,perform,performer,797,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,2,['perform'],['performer']
Performance," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(type::vector< Edge > &pEdges, const Edge &p)sofa::core::loader::MeshLoaderprotected; addEdge(type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1)sofa::core::loader::MeshLoaderprotected; addGroup(const sofa::core::loader::PrimitiveGroup &g)sofa::component::io::mesh::MeshOBJLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, const Hexahedron &p)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:702,load,loader,702,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,4,['load'],['loader']
Performance," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(type::vector< Edge > &pEdges, const Edge &p)sofa::core::loader::MeshLoaderprotected; addEdge(type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, const Hexahedron &p)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addInGroup(type::vector< sofa::core::loader::PrimitiveGroup > &group, int tag, int eid)sofa::component::io::mesh::MeshGmshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::Mes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:704,load,loader,704,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,4,['load'],['loader']
Performance," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(type::vector< Edge > &pEdges, const Edge &p)sofa::core::loader::MeshLoaderprotected; addEdge(type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, const Hexahedron &p)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html:710,load,loader,710,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,8,['load'],['loader']
Performance," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(type::vector< Edge > &pEdges, const Edge &p)sofa::core::loader::MeshLoaderprotected; addEdge(type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, const Hexahedron &p)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:706,load,loader,706,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,8,['load'],['loader']
Performance," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(type::vector< Edge > &pEdges, const Edge &p)sofa::core::loader::MeshLoaderprotected; addEdge(type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, const Hexahedron &p)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:702,load,loader,702,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,16,['load'],['loader']
Performance," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(type::vector< Edge > &pEdges, const Edge &p)sofa::core::loader::MeshLoaderprotected; addEdge(type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, const Hexahedron &p)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa::core::loader::MeshLoade",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html:682,load,loader,682,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,4,['load'],['loader']
Performance," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addHexahedron(type::vector< Hexahedron > *pHexahedra, const type::fixed_array< unsigned int, 8 > &p)sofa::core::loader::VoxelLoader; addHexahedron(type::vector< Hexahedron > *pHexahedra, unsigned int p0, unsigned int p1, unsigned int p2, unsigned int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7)sofa::core::loader::VoxelLoader; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:732,load,loader,732,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,2,['load'],['loader']
Performance," addInGroup(type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid)sofa::helper::io::MeshGmshprotected; create(Object *, std::string arg)sofa::helper::io::Meshinlinestatic; Create(const std::string &filename)sofa::helper::io::Meshstatic; Create(const std::string &loader, const std::string &filename)sofa::helper::io::Meshstatic; facetssofa::helper::io::Meshprotected; FactoryMesh typedefsofa::helper::io::Mesh; getEdges()sofa::helper::io::Meshinline; getEdges() constsofa::helper::io::Meshinline; getEdgesGroups() constsofa::helper::io::Meshinline; getFacets()sofa::helper::io::Meshinline; getFacets() constsofa::helper::io::Meshinline; getGroups()sofa::helper::io::Meshinline; getHexahedra()sofa::helper::io::Meshinline; getHexahedra() constsofa::helper::io::Meshinline; getHexahedraGroups() constsofa::helper::io::Meshinline; getHighOrderEdgePositions() constsofa::helper::io::Meshinline; getHighOrderQuadPositions() constsofa::helper::io::Meshinline; getHighOrderTrianglePositions() constsofa::helper::io::Meshinline; getMaterial() constsofa::helper::io::Meshinline; getMaterials()sofa::helper::io::Meshinline; getNormals()sofa::helper::io::Meshinline; getNormals() constsofa::helper::io::Meshinline; getPentahedraGroups() constsofa::helper::io::Meshinline; getPolygonsGroups() constsofa::helper::io::Meshinline; getPyramidsGroups() constsofa::helper::io::Meshinline; getQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helpe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html:527,load,loader,527,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh-members.html,2,['load'],['loader']
Performance," addListener(Listener *l)sofa::simulation::SceneLoaderstatic; canLoadFileExtension(const char *extension) overridesofa::simulation::SceneLoaderXMLvirtual; canLoadFileName(const char *filename)sofa::simulation::SceneLoadervirtual; canWriteFileExtension(const char *extension) overridesofa::simulation::SceneLoaderXMLvirtual; canWriteFileName(const char *filename)sofa::simulation::SceneLoadervirtual; doLoad(const std::string &filename, const std::vector< std::string > &sceneArgs) overridesofa::simulation::SceneLoaderXMLvirtual; doLoadFromMemory(const char *filename, const char *data)sofa::simulation::SceneLoaderXML; ExtensionList typedefsofa::simulation::SceneLoader; getExtensionList(ExtensionList *list) overridesofa::simulation::SceneLoaderXMLvirtual; getFileTypeDesc() overridesofa::simulation::SceneLoaderXMLvirtual; Listeners typedefsofa::simulation::SceneLoaderprotected; load(const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))sofa::simulation::SceneLoader; loadFromMemory(const char *filename, const char *data)sofa::simulation::SceneLoaderXMLstatic; loadSucceedsofa::simulation::SceneLoaderXMLstatic; notifyLoadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyLoadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneAfter(sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; notifyReloadingSceneBefore(SceneLoader *sceneLoader)sofa::simulation::SceneLoaderprotectedstatic; processXML(xml::BaseElement *xml, const char *filename)sofa::simulation::SceneLoaderXMLstatic; removeListener",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l-members.html:1137,load,load,1137,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l-members.html,2,['load'],['load']
Performance," advancedOperationssofa::gui::qt::QInciseOperationprotected; advancedOptionssofa::gui::qt::QInciseOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QInciseOperationinlinevirtual; sofa::gui::common::InciseOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; cptsofa::gui::common::InciseOperationprotected; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::InciseOperationvirtual; endOperation() overridesofa::gui::common::InciseOperationvirtual; execution() overridesofa::gui::common::InciseOperationvirtual; finishCutsofa::gui::qt::QInciseOperationprotected; finishIncisionsofa::gui::qt::QInciseOperation; getCompleteIncision() overridesofa::gui::qt::QInciseOperationinlinevirtual; getDescription()sofa::gui::common::InciseOperationinlinestatic; getId()sofa::gui::common::Operationinline; getIncisionMethod() const overridesofa::gui::qt::QInciseOperationvirtual; getKeepPoint() overridesofa::gui::qt::QInciseOperationinlinevirtual; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getSnapingBorderValue() const overridesofa::gui::qt::QInciseOperationvirtual; getSnapingValue() const overridesofa::gui::qt::QInciseOperationvirtual; InciseOperation()sofa::gui::common::InciseOperationinline; incisionMethodChoiceGroupsofa::gui::qt::QInciseOperationprotected; keepPointsofa::gui:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html:731,perform,performer,731,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html,2,['perform'],['performer']
Performance," advancedOptionssofa::gui::qt::QTopologyOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QTopologyOperationinlinevirtual; sofa::gui::common::TopologyOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html:681,perform,performer,681,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,2,['perform'],['performer']
Performance," arrowSizeWidgetsofa::gui::qt::QAttachOperationprotected; AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QAttachOperationvirtual; sofa::gui::common::AttachOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::AttachOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::AttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; Q",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html:854,perform,performer,854,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html,2,['perform'],['performer']
Performance," bool > d_forceBinary;  Force reading in binary mode. Even in first keyword of the file is solid. More...;  ; Data< bool > d_mergePositionUsingMap;  Since positions are duplicated in a STL, they have to be merged. Using a map to do so will temporarily duplicate memory but should be more efficient. Disable it if memory is really an issue. More...;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:1731,load,loaded,1731,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,1,['load'],['loaded']
Performance, but should be more efficient. Disable it if memory is really an issue. More...;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ; Data< type::vector< sofa::type::Vec3 > > d_normals;  Normals of the mesh loaded. More...;  ; Data< type::vector< PrimitiveGroup > > d_edgesGroups;  Groups of Edges. More...;  ; Data< type::vector< PrimitiveGroup > > d_trianglesGroups;  Groups of Triangles. More...;  ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:1999,load,loaded,1999,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,1,['load'],['loaded']
Performance," buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; cptsofa::gui::common::InciseOperationprotected; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::InciseOperationvirtual; endOperation() overridesofa::gui::common::InciseOperationvirtual; execution() overridesofa::gui::common::InciseOperationvirtual; finishIncisionsofa::gui::common::InciseOperationprotected; getCompleteIncision()sofa::gui::common::InciseOperationinlinevirtual; getDescription()sofa::gui::common::InciseOperationinlinestatic; getId()sofa::gui::common::Operationinline; getIncisionMethod() constsofa::gui::common::InciseOperationinlinevirtual; getKeepPoint()sofa::gui::common::InciseOperationinlinevirtual; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getSnapingBorderValue() constsofa::gui::common::InciseOperationinlinevirtual; getSnapingValue() constsofa::gui::common::InciseOperationinlinevirtual; InciseOperation()sofa::gui::common::InciseOperationinline; keepPointsofa::gui::common::InciseOperationprotected; mbsettingsofa::gui::common::Operationprotected; methodsofa::gui::common::InciseOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html:556,perform,performer,556,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html,2,['perform'],['performer']
Performance," buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() constsofa::gui::common::TopologyOperationinlinevirtual; getTopologicalOperation() constsofa::gui::common::TopologyOperationinlinevirtual; getVolumicMesh() constsofa::gui::common::TopologyOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; scalesofa::gui::common::TopologyOperationprotected; setScale(double s)sofa::gui::common::TopologyOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setTopologicalOperation(int m)sofa::gui::common::TopologyOperationinline; setVolumicM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html:560,perform,performer,560,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html,2,['perform'],['performer']
Performance," cId, unsigned int &cIndex)=0;  ; virtual void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v);  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html:3488,load,loader,3488,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html,2,['load'],['loader']
Performance," called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_filename. objectmodel::DataFileName sofa::core::loader::BaseLoader::d_filename. Constructor details. ◆ BaseLoader(). sofa::core::loader::BaseLoader::BaseLoader ; (; ). protected . ◆ ~BaseLoader(). sofa::core::loader::BaseLoader::~BaseLoader ; (; ). overrideprotected . Function details. ◆ canLoad(). bool sofa::core::loader::BaseLoader::canLoad ; (; ). virtual . Reimplemented in sofa::core::loader::SceneLoader, sofa::core::loader::MeshLoader, sofa::component::io::mesh::VoxelGridLoader, sofa::component::io::mesh::StringMeshCreator, and sofa::component::io::mesh::GridMeshCreator. ◆ getFilename(). const std::string & sofa::core::loader::BaseLoader::getFilename ; (; ). ◆ load(). virtual bool sofa::core::loader::BaseLoader::load ; (; ). pure virtual . Implemented in sofa::component::io::mesh::VoxelGridLoader, sofa::component::io::mesh::SphereLoader, and sofa::core::loader::MeshLoader. ◆ parse(). void sofa::core::loader::BaseLoader::parse ; (; objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base.; Reimplemented in sofa::core::loader::SceneLoader, and sofa::core::loader::MeshLoader. ◆ readLine(). bool sofa::core::loader::BaseLoader::readLine ; (; char * ; buf, . int ; size, . FILE * ; f . ). staticprotected . ◆ setFilename(). void sofa::core::loader::BaseLoader::setFilename ; (; std::string ; f). ◆ skipToEOL(). void sofa::core::loader::BaseLoader::skipToEOL ; (; FILE * ; f). staticprotected . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS ; (; BaseLoader ; , . objectmodel::BaseObject ;  . ). sofacore",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html:14008,load,loader,14008,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,2,['load'],"['load', 'loader']"
Performance," called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Function details. ◆ loadDataArray() [1/3]. BaseVTKReader::BaseVTKDataIO * sofa::component::io::mesh::XMLVTKReader::loadDataArray ; (; tinyxml2::XMLElement * ; dataArrayElement). protected . ◆ loadDataArray() [2/3]. BaseVTKReader::BaseVTKDataIO * sofa::component::io::mesh::XMLVTKReader::loadDataArray ; (; tinyxml2::XMLElement * ; dataArrayElement, . int ; size . ). protected . ◆ loadDataArray() [3/3]. BaseVTKReader::BaseVTKDataIO * sofa::component::io::mesh::XMLVTKReader::loadDataArray ; (; tinyxml2::XMLElement * ; dataArrayElement, . int ; size, . string ; type . ). protected . ◆ loadImageData(). bool sofa::component::io::mesh::XMLVTKReader::loadImageData ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadPolydata(). bool sofa::component::io::mesh::XMLVTKReader::loadPolydata ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadRectilinearGrid(). bool sofa::component::io::mesh::XMLVTKReader::loadRectilinearGrid ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadStructuredGrid(). bool sofa::component::io::mesh::XMLVTKReader::loadStructuredGrid ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadStructuredPoints(). bool sofa::component::io::mesh::XMLVTKReader::loadStructuredPoints ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ loadUnstructuredGrid(). bool sofa::component::io::mesh::XMLVTKReader::loadUnstructuredGrid ; (; tinyxml2::XMLHandle ; datasetFormatHandle). protected . ◆ readFile(). bool sofa::component::io::mesh::XMLVTKReader::readFile ; (; const char * ; filename). overridevirtual . Implements sofa::component::io::mesh::basevtkreader::BaseVTKReader. sofacomponentiomeshXMLVTKReader; Generated on Mon Nov 11 2024 02:46:09 for",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html:14834,load,loadPolydata,14834,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,1,['load'],['loadPolydata']
Performance," cast from Base* into the type parameter Dest. . ◆ castToBase(). template<class Source > . sofa::core::objectmodel::Base* sofa::core::castToBase ; (; Source * ; b). Dynamic cast from the type parameter B* into Base*. ; CORE::OPAQUE FUNCTION /////////////////////////////////////////////////; CORE::OPAQUE function are a groupe of function that make ""opaque"" some of the common sofa behaviors.; Core::Opaque functions are:; Base* sofa::core::castToBase(T*) replace dynamic_cast<Base*>(T*);; T* sofa::core::castTo(Base*) replace dynamic_cast<T*>(Base*);; sofa:core::objectmodel::base::GetClass<T>() replace T::GetClass();. These functions are called ""opaque"" as they work with only forward declaration of the involved types in comparison to class methods the requires the full class declaration to be used.; It is highly recommended to use as much as possible opaque function in header files as this allow to reduce the dependency tree.; Opaque function may be slower at runtime (by one function call) but this is true only if LTO isn't able to optimize them properly. If you have experience/feedback with LTO please join the discussion in https://github.com/sofa-framework/sofa/discussions/1822 Defines the baseline functions for a type all the types in-herit from Base. These are non-opaque function that needs to be specialized in order to implement an opaque version for a given type. . ◆ cleanup(). SOFA_CORE_API void sofa::core::cleanup ; (; ). Clean up the resources used by the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ findTemplatedCreator(). void sofa::core::findTemplatedCreator ; (; objectmodel::BaseContext * ; context, . const ObjectFactory::Creator::SPtr & ; creator, . const std::string & ; templateName, . std::map< std::string, std::vector< std::string >> & ; creatorsErrors, . std::vector< std::pair< std::string, ObjectFactory::Creator::SPtr > > & ; creators, . objectmodel::BaseObjectDescription * ; arg . ). ◆ init(). SOFA_CORE_API void sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:19587,optimiz,optimize,19587,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,2,['optimiz'],['optimize']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshOBJLoader()sofa::component::io::mesh::MeshOBJLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; NBFACETYPE enum valuesofa::component::io::mesh::MeshOBJLoader; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:13535,load,load,13535,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshSTLLoader()sofa::component::io::mesh::MeshSTLLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:12549,load,load,12549,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshTrianLoader()sofa::component::io::mesh::MeshTrianLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; neighborTablesofa::component::io::mesh::MeshTrianLoader; notMuted() constsofa::core::objectmodel::Baseinline; p_trian2sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:12719,load,load,12719,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshXspLoader()sofa::component::io::mesh::MeshXspLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:12417,load,load,12417,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; normalizeGroup(type::vector< sofa::core::loader::PrimitiveGroup > &group)sofa::component::io::mesh::MeshGmshLoaderprotected; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:12560,load,load,12560,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &att",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:12417,load,load,12417,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,3,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() overridesofa::component::io::mesh::SphereLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_savedPositionssofa::component::io::mesh::SphereLoaderprotected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::BaseLoadervirtual; parseField(const std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:7433,load,load,7433,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,1,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() overridesofa::component::io::mesh::VoxelGridLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::BaseLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html:9702,load,load,9702,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,1,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load()=0sofa::core::loader::BaseLoaderpure virtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::BaseLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:7104,load,load,7104,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,3,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load()=0sofa::core::loader::BaseLoaderpure virtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::SceneLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html:7116,load,load,7116,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader-members.html,1,['load'],['load']
Performance," char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::io::mesh::OffSequenceLoadervirtual; sofa::component::io::mesh::MeshOffLoader::load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; OffSequenceLoader(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html:12540,load,load,12540,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,1,['load'],['load']
Performance," check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_loadedPlugins. sofa::core::objectmodel::Data<type::vector<std::string> > sofa::simulation::RequiredPlugin::d_loadedPlugins. List of the plugins that are have been loaded. . ◆ d_pluginName. sofa::core::objectmodel::Data<type::vector<std::string> > sofa::simulation::RequiredPlugin::d_pluginName. plugin name (or several names if you need to load different plugins or a plugin with several alternate names) . ◆ d_requireAll. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireAll. Display an error message if any plugin names failed to be loaded. . ◆ d_requireOne. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireOne. Display an error message if no plugin names were successfully loaded. . ◆ d_stopAfterFirstNameFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstNameFound. Stop after the first plugin name that is loaded successfully. . ◆ d_stopAfterFirstSuffixFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstSuffixFound. For each plugin name, stop after the first suffix that is loaded successfully. . ◆ d_suffixMap. sofa::core::objectmodel::Data<type::vector<type::fixed_array<std::string,2> > > sofa::simulation::RequiredPlugin::d_suffixMap. standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix . Constructor details. ◆ RequiredPlugin(). sofa::simulation::RequiredPlugin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:14655,load,loaded,14655,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,2,['load'],['loaded']
Performance," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1712,perform,performer,1712,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,6,['perform'],['performer']
Performance," configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; Coord typedefsofa::gui::component::performer::FixParticlePerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::FixParticlePerformer< DataTypes >virtual; execute()sofa::gui::component::performer::FixParticlePerformer< DataTypes >virtual; fixationssofa::gui::component::performer::FixParticlePerformer< DataTypes >protected; FixParticlePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::FixParticlePerformer< DataTypes >; getFixationPoints(const BodyPicked &b, type::vector< unsigned int > &points, typename DataTypes::Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >protected; GetFixationPointsOnModelFunction typedefsofa::gui::component::performer::FixParticlePerformer< DataTypes >; getFixationPointsSphere(sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; getFixationPointsTriangle(sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; getMapInstance()sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html:402,perform,performer,402,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html,16,['perform'],['performer']
Performance," configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; cptsofa::gui::component::performer::InciseAlongPathPerformerprotected; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; currentMethodsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::InciseAlongPathPerformervirtual; execute() overridesofa::gui::component::performer::InciseAlongPathPerformervirtual; finishIncisionsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; firstBodysofa::gui::component::performer::InciseAlongPathPerformerprotected; firstIncisionBodysofa::gui::component::performer::InciseAlongPathPerformerprotected; fullcutsofa::gui::component::performer::InciseAlongPathPerformerprotected; getFirstIncisionBodyPicked()sofa::gui::component::performer::InciseAlongPathPerformerinline; getLastBodyPicked()sofa::gui::component::performer::InciseAlongPathPerformerinline; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InciseAlongPathPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InciseAlongPathPerformerinline; Index typedefsofa::gui::component::performer::InciseAlongPathPerformer; initialNbPointssofa::gui::component::performer::InciseAlongPathPerformerprotected; initialNbTrianglessofa::gui::component::performer::InciseAlongPathPerformerprotected; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; Inter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html:384,perform,performer,384,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html,20,['perform'],['performer']
Performance," configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; createElementList()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; end()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; execute()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; firstClicksofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getElementInZone(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getNeighboorElements(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; pickedsofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; RemovePrimitivePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; RemovePrimitivePerformerConfigurati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html:410,perform,performer,410,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,18,['perform'],['performer']
Performance," const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BVHNarrowPhase ();  ;  ~BVHNarrowPhase () override=default;  ; void processExternalCell (const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) const;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:11731,queue,queue,11731,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,1,['queue'],['queue']
Performance," const type::fixed_array< unsigned int, 8 > &p)sofa::core::loader::VoxelLoader; addHexahedron(type::vector< Hexahedron > *pHexahedra, unsigned int p0, unsigned int p1, unsigned int p2, unsigned int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7)sofa::core::loader::VoxelLoader; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:1670,load,loader,1670,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['load'],['loader']
Performance," constsofa::core::objectmodel::Baseinline; isLittleEndiansofa::component::io::mesh::basevtkreader::BaseVTKReader; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; loadDataArray(tinyxml2::XMLElement *dataArrayElement, int size, string type)sofa::component::io::mesh::XMLVTKReaderprotected; loadDataArray(tinyxml2::XMLElement *dataArrayElement, int size)sofa::component::io::mesh::XMLVTKReaderprotected; loadDataArray(tinyxml2::XMLElement *dataArrayElement)sofa::component::io::mesh::XMLVTKReaderprotected; loadImageData(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadPolydata(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadRectilinearGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadStructuredGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadStructuredPoints(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadUnstructuredGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html:8307,load,loadStructuredGrid,8307,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,1,['load'],['loadStructuredGrid']
Performance," core::visual::VisualParams *vparams) overridesofa::component::engine::select::MeshROI< DataTypes >virtual; roiInit() overridesofa::component::engine::select::MeshROI< DataTypes >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; SetIndex typedefsofa::component::engine::select::BaseROI< DataTypes >; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MeshROI, DataTypes), SOFA_TEMPLATE(BaseROI, DataTypes))sofa::component::engine::select::MeshROI< DataTypes >; sofa::component::engine::select::BaseROI::SOFA_CLASS(SOFA_TEMPLATE(BaseROI, DataTypes), Inherit)sofa::component::engine::select::BaseROI< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::component::engine::select::BaseROI< DataTypes >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::select::BaseROI< DataTypes >; update() fina",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html:18571,load,loader,18571,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,1,['load'],['loader']
Performance," create(Object *, std::string arg)sofa::helper::io::Meshinlinestatic; Create(const std::string &filename)sofa::helper::io::Meshstatic; Create(const std::string &loader, const std::string &filename)sofa::helper::io::Meshstatic; facetssofa::helper::io::Meshprotected; FactoryMesh typedefsofa::helper::io::Mesh; getEdges()sofa::helper::io::Meshinline; getEdges() constsofa::helper::io::Meshinline; getEdgesGroups() constsofa::helper::io::Meshinline; getFacets()sofa::helper::io::Meshinline; getFacets() constsofa::helper::io::Meshinline; getGroups()sofa::helper::io::Meshinline; getHexahedra()sofa::helper::io::Meshinline; getHexahedra() constsofa::helper::io::Meshinline; getHexahedraGroups() constsofa::helper::io::Meshinline; getHighOrderEdgePositions() constsofa::helper::io::Meshinline; getHighOrderQuadPositions() constsofa::helper::io::Meshinline; getHighOrderTrianglePositions() constsofa::helper::io::Meshinline; getMaterial() constsofa::helper::io::Meshinline; getMaterials()sofa::helper::io::Meshinline; getNormals()sofa::helper::io::Meshinline; getNormals() constsofa::helper::io::Meshinline; getPentahedraGroups() constsofa::helper::io::Meshinline; getPolygonsGroups() constsofa::helper::io::Meshinline; getPyramidsGroups() constsofa::helper::io::Meshinline; getQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helper::io::Meshinline; getTextureName()sofa::helper::io::Meshinline; getTriangles()sofa::helper::io::Meshinline; getTriangles() co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html:401,load,loader,401,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j-members.html,2,['load'],['loader']
Performance," create(Object *, std::string arg)sofa::helper::io::Meshinlinestatic; Create(const std::string &filename)sofa::helper::io::Meshstatic; Create(const std::string &loader, const std::string &filename)sofa::helper::io::Meshstatic; facetssofa::helper::io::Meshprotected; FactoryMesh typedefsofa::helper::io::Mesh; getEdges()sofa::helper::io::Meshinline; getEdges() constsofa::helper::io::Meshinline; getEdgesGroups() constsofa::helper::io::Meshinline; getFacets()sofa::helper::io::Meshinline; getFacets() constsofa::helper::io::Meshinline; getGroups()sofa::helper::io::Meshinline; getHexahedra()sofa::helper::io::Meshinline; getHexahedra() constsofa::helper::io::Meshinline; getHexahedraGroups() constsofa::helper::io::Meshinline; getHighOrderEdgePositions() constsofa::helper::io::Meshinline; getHighOrderQuadPositions() constsofa::helper::io::Meshinline; getHighOrderTrianglePositions() constsofa::helper::io::Meshinline; getMaterial() constsofa::helper::io::Meshinline; getMaterials()sofa::helper::io::Meshinline; getNormals()sofa::helper::io::Meshinline; getNormals() constsofa::helper::io::Meshinline; getPentahedraGroups() constsofa::helper::io::Meshinline; getPolygonsGroups() constsofa::helper::io::Meshinline; getPyramidsGroups() constsofa::helper::io::Meshinline; getQuads()sofa::helper::io::Meshinline; getQuads() constsofa::helper::io::Meshinline; getQuadsGroups() constsofa::helper::io::Meshinline; getTetrahedra()sofa::helper::io::Meshinline; getTetrahedra() constsofa::helper::io::Meshinline; getTetrahedraGroups() constsofa::helper::io::Meshinline; getTexCoords()sofa::helper::io::Meshinline; getTexCoords() constsofa::helper::io::Meshinline; getTextureName()sofa::helper::io::Meshinline; getTriangles()sofa::helper::io::Meshinline; getTriangles() constsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html:395,load,loader,395,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh-members.html,2,['load'],['loader']
Performance," deleteVisitor). More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when var",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:17557,load,loader,17557,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,2,['load'],['loader']
Performance," details. ◆ add() [1/8]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [2/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:19036,perform,performances,19036,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,['perform'],['performances']
Performance," double &r) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:4368,perform,performances,4368,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['perform'],['performances']
Performance," double > getDistances () const;  ; type::vector< type::vector< core::collision::DetectionOutput > > getContactsVector () const;  ; std::vector< std::tuple< unsigned int, sofa::type::Vec3, unsigned int, sofa::type::Vec3 > > getContactPoints () const;  ; std::vector< std::tuple< unsigned int, unsigned int, unsigned int, unsigned int > > getContactElements () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph crea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html:2705,load,loader,2705,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,1,['load'],['loader']
Performance," each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ; virtual int getTopologicalOperation () const;  ; virtual double getScale () const;  ; virtual bool getVolumicMesh () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ firstClick. bool sofa::gui::common::TopologyOperation::firstClick. protected . ◆ scale. double sofa::gui::common::TopologyOperation::scale. protected . ◆ topologicalOperation. int sofa::gui::common::TopologyOperation::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::common::TopologyOperation::volumicMesh. protected . Constructor details. ◆ TopologyOperation(). sofa::gui::common::TopologyOperation::Topolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html:1838,perform,performer,1838,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,4,['perform'],['performer']
Performance, error with Xitact Plugin. /linking-geomagicdevice-position-with-mechanicalobject3d-position-in-cpp; ; SOFA - Topic: [SOLVED] Linking GeomagicDevice.position with MechanicalObject3d.position in cpp. /linking-issues-with-plugin-when-loading-it; ; SOFA - Topic: Linking issues with plugin when loading it. /link-problems; ; SOFA - Topic: [SOLVED] [Solved] Link problems. /link-sofa-as-an-external-dependency-in-a-c-project; ; SOFA - Topic: Link SOFA as an external dependency in a c++ project. /list-of-all-available-fields-for-vtkexporter; ; SOFA - Topic: List of all available fields for VTKExporter?. /liver-fem-implementation; ; SOFA - Topic: Liver FEM implementation. /lmconstraints-with-flexible-simulation; ; SOFA - Topic: [SOLVED] LMConstraints with Flexible simulation. /load-a-python-scene-from-a-c-unit-test; ; SOFA - Topic: [SOLVED] Load a Python scene from a C++ unit test. /loading-off-files; ; SOFA - Topic: [SOLVED] Loading OFF files. /loading-sofas-dlls-for-python3-8-on-windows; ; SOFA - Topic: [SOLVED] Loading SOFA’s dlls for Python3.8+ on Windows. /load-model-built-by-solidworks; ; SOFA - Topic: load model built by solidworks. /load-msh-and-vtk-file-in-xml-and-read-with-sofa; . /feed; ; [SOLVED] Load msh and vtk file in XML and read with sofa – SOFA. SOFA - Topic: [SOLVED] Load msh and vtk file in XML and read with sofa. /local-pivot-points-for-obj-files; ; SOFA - Topic: local pivot points for .obj files. /looking-for-anatomy-transfer-code; ; SOFA - Topic: [SOLVED] Looking for Anatomy Transfer code. /looking-for-an-example-on-cutting-a-3d-volumetric-mesh; ; SOFA - Topic: Looking for an example on cutting a 3D volumetric mesh. /looking-for-sofa-xml-reference; ; SOFA - Topic: Looking for SOFA XML Reference. /lots-of-glew-errors-while-building-sofa; ; SOFA - Topic: [SOLVED] Lots of glew errors while building Sofa. /lowering-contraint-response-without-affecting-fall-speed; ; SOFA - Topic: [SOLVED] Lowering contraint response without affecting fall speed. /m_contactsv,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:342214,load,loading-sofas-dlls-for-,342214,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['load'],['loading-sofas-dlls-for-']
Performance," finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_edgesOnBordersofa::component::io::mesh::MeshTrianLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_neighborTablesofa::component::io::mesh::MeshTrianLoader; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loade",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:5749,load,loader,5749,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['load'],['loader']
Performance," framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageDDS Class Reference . #include <ImageDDS.h>. Inheritance diagram for sofa::helper::io::ImageDDS:. [legend]. Public Member Functions;  ImageDDS ();  ;  ImageDDS (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:402,load,load,402,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,2,['load'],['load']
Performance," from sofa::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html:3959,load,loader,3959,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,2,['load'],['loader']
Performance, from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; sofa::type::vector< sofa::type::vector< sofa::type::vector< PointID > > > facets;  ; Material material;  ; std::vector< Material > materials;  ; std::vector< PrimitiveGroup > groups;  ; std::string t,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:4123,load,loaded,4123,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,4,['load'],['loaded']
Performance, function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::StartNavigationButtonSetting::SPtr sofa::gui::common::StartNavigationOperation::setting. protected . Constructor details. ◆ StartNavigationOperation(). sofa::gui::common::StartNavigationOperation::StartNavigationOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::StartNavigationOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::StartNavigationOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescription(). static std::string sofa::gui::common::StartNavigationOperation::getDescription ; (; ). inlinestatic . sofaguicommonStartNavigationOperation; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html:2659,perform,performer,2659,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,2,['perform'],['performer']
Performance," getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; GIDMeshLoader()sofa::component::io::mesh::GIDMeshLoaderprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; HEXAHEDRA enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; Hexahedron typedefsofa::component::io::mesh::GIDMeshLoader; HighOrderEdgePosition typedefsofa::core::loader::MeshLoader; HighOrderHexahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderQuadPosition typedefsofa::core::loader::MeshLoader; HighOrderTetrahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderTrianglePosition typedefsofa::core::loader::MeshLoader; init() overridesofa::core::loader::MeshLoadervirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:11169,load,loader,11169,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance," graph creation and modification, during bottom-up traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadState ();  ; void processReadState (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:3559,load,loader,3559,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,1,['load'],['loader']
Performance," if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for error logging. . ◆ pluginIsLoaded(). bool sofa::helper::system::PluginManager::pluginIsLoaded ; (; const std::string & ; plugin). ◆ readFromIniFile() [1/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path). ◆ readFromIniFile() [2/2]. void so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:7508,Load,Loads,7508,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,1,['Load'],['Loads']
Performance," in the graph in the given file (format is given by the filename extension) . ◆ exportInXML(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::exportInXML ; (; Node * ; root, . const char * ; fileName . ). Print all object in the graph in XML format. . ◆ exportOBJ(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::exportOBJ ; (; Node * ; root, . const char * ; filename, . bool ; exportMTL . ). Export a scene to an OBJ 3D Scene. . ◆ getNodeFrom(). SOFA_SIMULATION_CORE_API Node * sofa::simulation::node::getNodeFrom ; (; sofa::core::objectmodel::BaseContext * ; context). ◆ init(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::init ; (; Node * ; node). Init a node without changing the context of the simulation. . ◆ initRoot(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initRoot ; (; Node * ; root). Initialize the objects. . ◆ initTextures(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::initTextures ; (; Node * ; root). Initialize the textures. . ◆ load(). NodeSPtr SOFA_SIMULATION_CORE_API sofa::simulation::node::load ; (; const std::string & ; filename, . bool ; reload, . const std::vector< std::string > & ; sceneArgs . ). Load a scene from a file. . ◆ print(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::print ; (; Node * ; root). Print all object in the graph. . ◆ reset(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::reset ; (; Node * ; root). Reset to initial state. . ◆ toBaseContext(). SOFA_SIMULATION_CORE_API sofa::core::objectmodel::BaseContext * sofa::simulation::node::toBaseContext ; (; sofa::simulation::Node * ; node). ◆ unload(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::unload ; (; NodeSPtr ; root). Unload a scene from a Node. . ◆ updateContext(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updateContext ; (; Node * ; root). Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). void SOFA_SIMULATION_CORE_API sofa::simulation::node::updat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html:4690,load,load,4690,api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1node.html,2,['load'],['load']
Performance," indices) More...;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:2815,perform,performances,2815,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['perform'],['performances']
Performance," indices) More...;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:15322,perform,performances,15322,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['perform'],['performances']
Performance," indices) More...;  ; void add (Index row, Index col, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:2369,perform,performances,2369,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['perform'],['performances']
Performance," inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_size. template<class DataTypes > . SReal sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::m_size. protected . ◆ m_stiffness. template<class DataTypes > . SReal sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::m_stiffness. protected . Constructor details. ◆ AttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::AttachBodyPerformer ; (; BaseMouseInteractor * ; i). ◆ ~AttachBodyPerformer(). template<class DataTypes > . virtual sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::~AttachBodyPerformer ; (; ). virtualdefault . Function details. ◆ configure(). template<class DataTypes > . virtual void sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::configure ; (; sofa::component::setting::MouseButtonSetting * ; setting). inlineoverridevirtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ setArrowSize(). template<class DataTypes > . void sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::setArrowSize ; (; float ; s). inline . ◆ setStiffness(). template<class DataTypes > . void sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::setStiffness ; (; SReal ; s). inline . ◆ startPartial(). template<class DataTypes > . bool sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::startPartial ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html:3181,perform,performer,3181,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,2,['perform'],['performer']
Performance," inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [2/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<std::size_t LC, typename T = SReal> . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addB() [1/2]. template<std::size_t LC, typen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:17251,perform,performances,17251,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['perform'],['performances']
Performance," int unload (Handle handle);  Unload a dynamic library loaded with load(). More...;  ; static void * getSymbolAddress (Handle handle, const std::string &symbol);  Get the address of a symbol. More...;  ; static std::string getLastError ();  Get the message for the most recent error that occurred from load(), unload() or getSymbolAddress(). More...;  . Attribute details. ◆ extension. const std::string sofa::helper::system::DynamicLibrary::extension = ""so"". static . System-specific file extension for a dynamic library (e.g. ""so""). . ◆ prefix. const std::string sofa::helper::system::DynamicLibrary::prefix = ""lib"". static . System-specific file prefix for a dynamic library (e.g. ""lib""). . Function details. ◆ getLastError(). std::string sofa::helper::system::DynamicLibrary::getLastError ; (; ). static . Get the message for the most recent error that occurred from load(), unload() or getSymbolAddress(). ; ReturnsThe error message, or an empty string if no errors have occurred since initialization or since it was last called. . ◆ getSymbolAddress(). void * sofa::helper::system::DynamicLibrary::getSymbolAddress ; (; Handle ; handle, . const std::string & ; symbol . ). static . Get the address of a symbol. ; Parameters. handleThe handle of a library. ; symbolThe symbol to look for. . ReturnsA pointer to the symbol if it was found, or nullptr on error. . ◆ load(). DynamicLibrary::Handle sofa::helper::system::DynamicLibrary::load ; (; const std::string & ; filename). static . Load a dynamic library. ; Parameters. filenameThe library to load. . ReturnsA handle, that must be unloaded with unload(). Use Handle::isValid() to know if the loading was successful. . ◆ unload(). int sofa::helper::system::DynamicLibrary::unload ; (; Handle ; handle). static . Unload a dynamic library loaded with load(). ; Parameters. handleThe handle of a library. . Returns0 on success, and nonzero on error. . sofahelpersystemDynamicLibrary; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_dynamic_library.html:2325,load,load,2325,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_dynamic_library.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_dynamic_library.html,13,"['Load', 'load']","['Load', 'load', 'loaded', 'loading']"
Performance, loaded. . ◆ d_normals. Data< type::vector<sofa::type::Vec3 > > sofa::core::loader::MeshLoader::d_normals. Normals of the mesh loaded. . ◆ d_onlyAttachedPoints. Data< bool > sofa::core::loader::MeshLoader::d_onlyAttachedPoints. Only keep points attached to elements of the mesh. . ◆ d_pentahedra. Data< type::vector< Pentahedron > > sofa::core::loader::MeshLoader::d_pentahedra. Pentahedra of the mesh loaded. . ◆ d_pentahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pentahedraGroups. Groups of Pentahedra. . ◆ d_polygons. Data< type::vector< type::vector<Topology::ElemID> > > sofa::core::loader::MeshLoader::d_polygons. Polygons of the mesh loaded. . ◆ d_polygonsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_polygonsGroups. Groups of Polygons. . ◆ d_polylines. Data< type::vector< Polyline > > sofa::core::loader::MeshLoader::d_polylines. Polylines of the mesh loaded. . ◆ d_positions. Data< type::vector< Vec3 > > sofa::core::loader::MeshLoader::d_positions. Vertices of the mesh loaded. . ◆ d_previousTransformation. type::Matrix4 sofa::core::loader::MeshLoader::d_previousTransformation. protected . to be able to call reinit w/o applying several time the same transform . ◆ d_pyramids. Data< type::vector< Pyramid > > sofa::core::loader::MeshLoader::d_pyramids. Pyramids of the mesh loaded. . ◆ d_pyramidsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pyramidsGroups. Groups of Pyramids. . ◆ d_quads. Data< type::vector< Quad > > sofa::core::loader::MeshLoader::d_quads. Quads of the mesh loaded. . ◆ d_quadsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_quadsGroups. Groups of Quads. . ◆ d_rotation. Data< Vec3 > sofa::core::loader::MeshLoader::d_rotation. Rotation of the DOFs. . ◆ d_scale. Data< Vec3 > sofa::core::loader::MeshLoader::d_scale. Scale of the DOFs in 3 dimensions. . ◆ d_tetrahedra. Data< type::vector< Tetrahedron > > sofa::core::lo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:22622,load,loader,22622,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance," m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::BaseLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; positionssofa::core::loader::VoxelLoader; Ptr typedefsofa::core::objectmodel::Base; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit() overridesofa::component::io::mesh::VoxelGridLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; roisofa::component::io::mesh::VoxelGridLoader; segmentationsofa::component::io::mesh::VoxelGridLoaderprotected; segmentationHeaderSizesofa::component::io::mesh::VoxelGridLoader; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html:11039,load,loader,11039,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,1,['load'],['loader']
Performance," m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::BaseLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; positionssofa::core::loader::VoxelLoader; Ptr typedefsofa::core::objectmodel::Base; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:9407,load,loader,9407,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['load'],['loader']
Performance," need to load different plugins or a plugin with several alternate names) . ◆ d_requireAll. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireAll. Display an error message if any plugin names failed to be loaded. . ◆ d_requireOne. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireOne. Display an error message if no plugin names were successfully loaded. . ◆ d_stopAfterFirstNameFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstNameFound. Stop after the first plugin name that is loaded successfully. . ◆ d_stopAfterFirstSuffixFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstSuffixFound. For each plugin name, stop after the first suffix that is loaded successfully. . ◆ d_suffixMap. sofa::core::objectmodel::Data<type::vector<type::fixed_array<std::string,2> > > sofa::simulation::RequiredPlugin::d_suffixMap. standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix . Constructor details. ◆ RequiredPlugin(). sofa::simulation::RequiredPlugin::RequiredPlugin ; (; ). protected . ◆ ~RequiredPlugin(). sofa::simulation::RequiredPlugin::~RequiredPlugin ; (; ). overrideprotecteddefault . Function details. ◆ loadPlugin(). bool sofa::simulation::RequiredPlugin::loadPlugin ; (; ). load a list of plugins requested in Data . ◆ parse(). void sofa::simulation::RequiredPlugin::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::simulation::RequiredPlugin::SOFA_CLASS ; (; RequiredPlugin ; , . core::objectmodel::BaseObject ;  . ). sofasimulationRequiredPlugin; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:15792,load,loadPlugin,15792,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,6,['load'],"['load', 'loadPlugin']"
Performance," of object (Owner) to another (Dest) More...;  ; class  MultiLink;  Container of vectors of links in the scenegraph, from a given type of object (Owner) to another (Dest) More...;  ; class  MouseEvent;  MouseEvent Class. More...;  ; class  RenamedData;  ; class  ScriptEvent;  Generic Event class to send a message through the simulation graph. More...;  ; class  New;  new operator for classes with smart pointers (such as all components deriving from Base) More...;  ; class  SPtr_dynamic_cast;  dynamic_cast operator for SPtr More...;  ; class  SPtr_static_cast;  static_cast operator for SPtr More...;  ; class  SPtr_const_cast;  const_cast operator for SPtr More...;  ; class  Tag;  A Tag is a string (internally converted to an integer), attached to objects in order to define subsets to process by specific visitors. More...;  ; class  TagSet;  ; class  vectorData;  ; class  VectorLinks;  . Typedefs; using AspectRef = sptr< Aspect >;  . Enumerations; enum class  ComponentState { ;   Undefined; , Loading; , Valid; , Dirty; , ;   Busy; , Invalid. };  ; enum class  PathType { FILE; , DIRECTORY; , BOTH; };  ; enum class  TypeOfInsertion { AtEnd; , AtBegin; };  Enum proposing two alternatives on where to add a new object in a node. More...;  ; enum class  DataEngineDataType { DataEngineNothing; , DataEngineInput; , DataEngineOutput; };  . Functions; SOFA_CORE_API std::ostream & operator<< (std::ostream &o, const Tag &t);  ; SOFA_CORE_API std::istream & operator>> (std::istream &i, Tag &t);  ; void to_json (nlohmann::json &json, const objectmodel::BaseClass &baseClass);  ; void to_json (nlohmann::json &json, const objectmodel::BaseData *data);  ; void to_json (nlohmann::json &json, const objectmodel::BaseLink *link);  ; void to_json (nlohmann::json &json, const objectmodel::BaseObject::SPtr &object);  ; void intrusive_ptr_add_ref (Aspect *a);  ; void intrusive_ptr_release (Aspect *a);  ; template<typename T > ; std::string GetSofaTypeTemplateName (const std::string prefix="""");",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html:5767,Load,Loading,5767,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,1,['Load'],['Loading']
Performance, of the mesh loaded. . ◆ d_previousTransformation. type::Matrix4 sofa::core::loader::MeshLoader::d_previousTransformation. protected . to be able to call reinit w/o applying several time the same transform . ◆ d_pyramids. Data< type::vector< Pyramid > > sofa::core::loader::MeshLoader::d_pyramids. Pyramids of the mesh loaded. . ◆ d_pyramidsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pyramidsGroups. Groups of Pyramids. . ◆ d_quads. Data< type::vector< Quad > > sofa::core::loader::MeshLoader::d_quads. Quads of the mesh loaded. . ◆ d_quadsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_quadsGroups. Groups of Quads. . ◆ d_rotation. Data< Vec3 > sofa::core::loader::MeshLoader::d_rotation. Rotation of the DOFs. . ◆ d_scale. Data< Vec3 > sofa::core::loader::MeshLoader::d_scale. Scale of the DOFs in 3 dimensions. . ◆ d_tetrahedra. Data< type::vector< Tetrahedron > > sofa::core::loader::MeshLoader::d_tetrahedra. Tetrahedra of the mesh loaded. . ◆ d_tetrahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_tetrahedraGroups. Groups of Tetrahedra. . ◆ d_transformation. Data< type::Matrix4 > sofa::core::loader::MeshLoader::d_transformation. 4x4 Homogeneous matrix to transform the DOFs (when present replace any) . ◆ d_translation. Data< Vec3 > sofa::core::loader::MeshLoader::d_translation. Translation of the DOFs. . ◆ d_triangles. Data< type::vector< Triangle > > sofa::core::loader::MeshLoader::d_triangles. Triangles of the mesh loaded. . ◆ d_trianglesGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_trianglesGroups. Groups of Triangles. . ◆ d_triangulate. Data< bool > sofa::core::loader::MeshLoader::d_triangulate. Divide all polygons into triangles. . Constructor details. ◆ MeshLoader(). sofa::core::loader::MeshLoader::MeshLoader ; (; ). protected . Function details. ◆ addEdge() [1/2]. void sofa::core::loader::MeshLoader::addEdge ; (; type::vector< ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:23672,load,loaded,23672,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loaded']
Performance," overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html:14870,load,loader,14870,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,1,['load'],['loader']
Performance," overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(GIDMeshLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::GIDMeshLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:15759,load,loader,15759,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance," overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshGmshLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshGmshLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:15419,load,loader,15419,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance," overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshOBJLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshOBJLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:16575,load,loader,16575,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['loader']
Performance," overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshOffLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshOffLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:15140,load,loader,15140,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,1,['load'],['loader']
Performance," overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshSTLLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshSTLLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:15402,load,loader,15402,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['load'],['loader']
Performance," overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshTrianLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshTrianLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:15689,load,loader,15689,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['load'],['loader']
Performance," overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshXspLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshXspLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:15105,load,loader,15105,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['load'],['loader']
Performance," p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa::core::loader::MeshLoaderprotected; addPolyline(type::vector< Polyline > &pPolylines, Polyline p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, const Pyramid &p)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, const Tetrahedron &p)sofa::core::loader::MeshLoaderprotected; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, Topology::TetrahedronID p0, Topology::TetrahedronID p1, Topology::TetrahedronID p2, Topology::TetrahedronID p3)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, const Triangle &p)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, Topology::TriangleID p0, Topology::TriangleID p1, Topology::TriangleID p2)sofa::core::loader::MeshLoaderprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::fun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:2750,load,loader,2750,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,12,['load'],['loader']
Performance," pTetrahedra, . const Tetrahedron & ; p . ). protected . ◆ addTetrahedron() [2/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . Topology::TetrahedronID ; p0, . Topology::TetrahedronID ; p1, . Topology::TetrahedronID ; p2, . Topology::TetrahedronID ; p3 . ). protected . ◆ addTriangle() [1/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . const Triangle & ; p . ). protected . ◆ addTriangle() [2/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . Topology::TriangleID ; p0, . Topology::TriangleID ; p1, . Topology::TriangleID ; p2 . ). protected . ◆ applyTransformation(). void sofa::core::loader::MeshLoader::applyTransformation ; (; sofa::type::Matrix4 const & ; T). virtual . Apply Homogeneous transformation to the positions. . ◆ canLoad(). bool sofa::core::loader::MeshLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clearBuffers(). void sofa::core::loader::MeshLoader::clearBuffers ; (; ). finalprotectedvirtual . ◆ copyMeshToData(). void sofa::core::loader::MeshLoader::copyMeshToData ; (; helper::io::Mesh & ; _mesh). protected . Temporary method that will copy all buffers from a io::Mesh into the corresponding Data. Will be removed as soon as work on unifying meshloader is finished. . ◆ getRotation(). virtual Vec3 sofa::core::loader::MeshLoader::getRotation ; (; ); const. inlinevirtual . ◆ getScale(). virtual Vec3 sofa::core::loader::MeshLoader::getScale ; (; ); const. inlinevirtual . ◆ getTransformation(). virtual sofa::type::Matrix4 sofa::core::loader::MeshLoader::getTransformation ; (; ); const. inlinevirtual . ◆ getTranslation(). virtual Vec3 sofa::core::loader::MeshLoader::getTranslation ; (; ); const. inlinevirtual . ◆ init(). void sofa::core::loader::MeshLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:28487,load,loader,28487,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance," position. ; vx,vz,vz3D velocity. ; mass.; elasticproperty. ; fixedboolean indicates that the mass is ""static"". ; surfaceindicates that the mass is on the surface. . Reimplemented from sofa::helper::io::XspLoaderDataHook. ◆ addSpring(). void sofa::component::io::mesh::MeshXspLoadDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlineoverridevirtual . Add a new spring. ; Reimplemented from sofa::helper::io::XspLoaderDataHook. ◆ addVectorSpring(). void sofa::component::io::mesh::MeshXspLoadDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlineoverridevirtual . Add an extended spring. ; Reimplemented from sofa::helper::io::XspLoaderDataHook. ◆ finalizeLoading(). void sofa::component::io::mesh::MeshXspLoadDataHook::finalizeLoading ; (; bool ; isOk). inlineoverridevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented from sofa::helper::io::XspLoaderDataHook. ◆ setNumMasses(). void sofa::component::io::mesh::MeshXspLoadDataHook::setNumMasses ; (; size_t ; ). inlineoverridevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented from sofa::helper::io::XspLoaderDataHook. ◆ setNumSprings(). void sofa::component::io::mesh::MeshXspLoadDataHook::setNumSprings ; (; size_t ; ). inlineoverridevirtual . Called by the XspLoader to specify before loading the number of springs. ; Parameters. nnumber of springs. . Reimplemented from sofa::helper::io::XspLoaderDataHook. sofacomponentiomeshMeshXspLoadDataHook; Generated on Mon Nov 11 2024 02:46:09 f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_load_data_hook.html:3658,load,loading,3658,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_load_data_hook.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_load_data_hook.html,1,['load'],['loading']
Performance," present replace any) . ◆ d_translation. Data< Vec3 > sofa::core::loader::MeshLoader::d_translation. Translation of the DOFs. . ◆ d_triangles. Data< type::vector< Triangle > > sofa::core::loader::MeshLoader::d_triangles. Triangles of the mesh loaded. . ◆ d_trianglesGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_trianglesGroups. Groups of Triangles. . ◆ d_triangulate. Data< bool > sofa::core::loader::MeshLoader::d_triangulate. Divide all polygons into triangles. . Constructor details. ◆ MeshLoader(). sofa::core::loader::MeshLoader::MeshLoader ; (; ). protected . Function details. ◆ addEdge() [1/2]. void sofa::core::loader::MeshLoader::addEdge ; (; type::vector< Edge > & ; pEdges, . const Edge & ; p . ). protected . ◆ addEdge() [2/2]. void sofa::core::loader::MeshLoader::addEdge ; (; type::vector< Edge > & ; pEdges, . Topology::EdgeID ; p0, . Topology::EdgeID ; p1 . ). protected . ◆ addHexahedron() [1/2]. void sofa::core::loader::MeshLoader::addHexahedron ; (; type::vector< Hexahedron > & ; pHexahedra, . const Hexahedron & ; p . ). protected . ◆ addHexahedron() [2/2]. void sofa::core::loader::MeshLoader::addHexahedron ; (; type::vector< Hexahedron > & ; pHexahedra, . Topology::HexahedronID ; p0, . Topology::HexahedronID ; p1, . Topology::HexahedronID ; p2, . Topology::HexahedronID ; p3, . Topology::HexahedronID ; p4, . Topology::HexahedronID ; p5, . Topology::HexahedronID ; p6, . Topology::HexahedronID ; p7 . ). protected . ◆ addPentahedron() [1/2]. void sofa::core::loader::MeshLoader::addPentahedron ; (; type::vector< Pentahedron > & ; pPentahedra, . const Pentahedron & ; p . ). protected . ◆ addPentahedron() [2/2]. void sofa::core::loader::MeshLoader::addPentahedron ; (; type::vector< Pentahedron > & ; pPentahedra, . Topology::ElemID ; p0, . Topology::ElemID ; p1, . Topology::ElemID ; p2, . Topology::ElemID ; p3, . Topology::ElemID ; p4, . Topology::ElemID ; p5 . ). protected . ◆ addPolygon(). void sofa::core::loader::MeshLoader::add",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:24929,load,loader,24929,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance, processes. /simulate-an-embedded-object; ; SOFA - Topic: Simulate an embedded object. /simulate-liquid-environment; ; SOFA - Topic: simulate liquid environment. /simulate-pivot-liaison-using-rigidmapping-and-articulatedsystem; ; SOFA - Topic: Simulate pivot liaison using RigidMapping and ArticulatedSystem. /simulating-blood-vessels-using-centerline-and-beamfemforcefield; ; SOFA - Topic: Simulating Blood Vessels using Centerline and BeamFEMForceField. /simulating-contracting-actuator; . /embed; ; SOFA - Topic: Simulating contracting actuator. SOFA - Topic: Simulating contracting actuator. /simulating-deformation-of-a-simple-set-of-beams-via-beamfemforcefield; ; SOFA - Topic: Simulating deformation of a simple set of beams via BeamFEMForceField. /simulating-elastic-material-in-sofa; ; SOFA - Topic: Simulating Elastic Material in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /simulation-trend; ; SOFA - Topic: #Simulation trend!. /skeletonplugin-error-in-cgal; ; SOFA - Topic: SkeletonPlugin: Error in CGAL. /skeletonplugin-install-cmake; ; SOFA - Topic: [SOLVED] CGALPlugin install CMake. /snake0-vtu-not-found-in-modelorderreduction; ; SOFA - Topic: snake0.vtu not found in ModelOrderReduction. /sofa_python-plugin-in-windows; ; SOFA - Topic: [SOLVED] SOFA_Python Plugin in Windows. /sofa_scenecreat; ; SOFA - Topic: [SOLVED] SOFA_SceneCreat. /sofa-20-06-is-only-partly-linked; ; SOFA - Topic: [SOLVED] ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:387368,load,load,387368,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['load'],['load']
Performance," removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; RigidVec3 typedefsofa::component::engine::transform::QuatToRigidEngine< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(QuatToRigidEngine, sofa::core::DataEngine)sofa::component::engine::transform::QuatToRigidEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine-members.html:11937,load,loader,11937,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine-members.html,1,['load'],['loader']
Performance," removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resetGraph()sofa::gl::component::engine::TextureInterpolation< DataTypes >protected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showIndicesScalesofa::gl::component::engine::TextureInterpolation< DataTypes >protected; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(TextureInterpolation, DataTypes), core::DataEngine)sofa::gl::component::engine::TextureInterpolation< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; standardLinearInterpolation()sofa::gl::component::engine::TextureInterpolation< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; TextureInterpolation()sofa::gl::component::engine::TextureInterpolation< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() fin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html:12601,load,loader,12601,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,1,['load'],['loader']
Performance," removeTag(Tag t)sofa::core::objectmodel::Base; renderFBOToScreen(core::visual::VisualParams *vp)sofa::gl::component::rendering2d::OglViewportprotected; renderToViewport(core::visual::VisualParams *vp)sofa::gl::component::rendering2d::OglViewportprotected; reset()sofa::core::objectmodel::BaseObjectvirtual; RigidCoord typedefsofa::gl::component::rendering2d::OglViewport; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglViewport, core::visual::VisualManager)sofa::gl::component::rendering2d::OglViewport; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html:12137,load,loader,12137,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,1,['load'],['loader']
Performance," reset()sofa::core::objectmodel::BaseObjectvirtual; resortCuthillMckee(sofa::type::vector< int > &inverse_permutation)sofa::component::topology::container::dynamic::EdgeSetTopologyModifiervirtual; SeqEdges typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; SeqQuads typedefsofa::component::topology::container::dynamic::QuadSetTopologyModifier; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(QuadSetTopologyModifier, EdgeSetTopologyModifier)sofa::component::topology::container::dynamic::QuadSetTopologyModifier; sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::SOFA_CLASS(EdgeSetTopologyModifier, PointSetTopologyModifier)sofa::component::topology::container::dynamic::EdgeSetTopologyModifier; sofa::component::topology::container::dynamic::PointSetTopologyModifier::SOFA_CLASS(PointSetTopologyModifier, core::topology::TopologyModifier)sofa::component::topology::container::dynamic::PointSetTopologyModifier; sofa::core::topology::TopologyModifier::SOFA_CLASS(TopologyModifier, BaseTopologyObject)sofa::core::topology::TopologyModifier; sofa::core::topology::BaseTopologyObject::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html:20157,load,loader,20157,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier-members.html,1,['load'],['loader']
Performance," simulation step. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual void updatePosition (SReal dt)=0;  Computation of a new simulation step. More...;  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html:1771,load,loader,1771,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,1,['load'],['loader']
Performance," sofa::core::objectmodel::RenamedData< SReal > minW;  ; sofa::core::objectmodel::RenamedData< SReal > maxF;  ; sofa::core::objectmodel::RenamedData< bool > multi_grid;  ; sofa::core::objectmodel::RenamedData< int > multi_grid_levels;  ; sofa::core::objectmodel::RenamedData< int > merge_method;  ; sofa::core::objectmodel::RenamedData< int > merge_spatial_step;  ; sofa::core::objectmodel::RenamedData< int > merge_local_levels;  ; sofa::core::objectmodel::RenamedData< std::set< int > > constraintGroups;  ; sofa::core::objectmodel::RenamedData< std::map< std::string, sofa::type::vector< SReal > > > f_graph;  ; sofa::core::objectmodel::RenamedData< int > showLevels;  ; sofa::core::objectmodel::RenamedData< SReal > showCellWidth;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > showTranslation;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > showLevelTranslation;  ; Data< bool > d_displayDebug;  Display debug information. More...;  ; Data< bool > d_initial_guess;  activate LCP results history to improve its resolution performances. More...;  ; Data< bool > d_build_lcp;  LCP is not fully built to increase performance in some case. More...;  ; Data< SReal > d_tol;  residual error threshold for termination of the Gauss-Seidel algorithm More...;  ; Data< int > d_maxIt;  maximal number of iterations of the Gauss-Seidel algorithm More...;  ; Data< SReal > d_mu;  Friction coefficient. More...;  ; Data< SReal > d_minW;  If not zero, constraints whose self-compliance (i.e. the corresponding value on the diagonal of W) is smaller than this threshold will be ignored. More...;  ; Data< SReal > d_maxF;  If not zero, constraints whose response force becomes larger than this threshold will be ignored. More...;  ; Data< bool > d_multi_grid;  activate multi_grid resolution (NOT STABLE YET) More...;  ; Data< int > d_multi_grid_levels;  if multi_grid is active: how many levels to create (>=2) More...;  ; Data< int > d_merge_method;  if multi_grid is active: which method to use to",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:1912,perform,performances,1912,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['perform'],['performances']
Performance, sofa::gui::component::AddRecordedCameraButtonSetting Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::AttachBodyButtonSetting Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::ConstraintAttachButtonSetting Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::FixPickedParticleButtonSetting Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::StartNavigationButtonSetting Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::AddRecordedCameraPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::AttachBodyPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::BaseMouseInteractor Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::ComponentMouseInteraction Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::FixParticlePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::FixParticlePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformer Class Reference; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InteractionPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:136516,perform,performer,136516,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['perform'],['performer']
Performance," sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html:641,perform,performer,641,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,4,['perform'],"['performer', 'performersofa']"
Performance," sofa::simulation::SceneLoader; static void addListener (Listener *l);  adding a listener More...;  ; static void removeListener (Listener *l);  removing a listener More...;  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::simulation::SceneLoader; static Listeners s_listeners;  ;  Static Protected Member Functions inherited from sofa::simulation::SceneLoader; static void notifyLoadingSceneBefore (SceneLoader *sceneLoader);  ; static void notifyReloadingSceneBefore (SceneLoader *sceneLoader);  ; static void notifyLoadingSceneAfter (sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader);  ; static void notifyReloadingSceneAfter (sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader);  . Attribute details. ◆ loadSucceed. bool sofa::simulation::SceneLoaderXML::loadSucceed = true. static . Function details. ◆ canLoadFileExtension(). bool sofa::simulation::SceneLoaderXML::canLoadFileExtension ; (; const char * ; extension). overridevirtual . Pre-loading check. ; Implements sofa::simulation::SceneLoader. ◆ canWriteFileExtension(). bool sofa::simulation::SceneLoaderXML::canWriteFileExtension ; (; const char * ; extension). overridevirtual . Pre-saving check. ; Reimplemented from sofa::simulation::SceneLoader. ◆ doLoad(). sofa::simulation::Node::SPtr sofa::simulation::SceneLoaderXML::doLoad ; (; const std::string & ; filename, . const std::vector< std::string > & ; sceneArgs . ). overridevirtual . load the file ; Implements sofa::simulation::SceneLoader. ◆ doLoadFromMemory(). NodeSPtr sofa::simulation::SceneLoaderXML::doLoadFromMemory ; (; const char * ; filename, . const char * ; data . ). load a scene from memory (typically : an xml into a string) . ◆ getExtensionList(). void sofa::simulation::SceneLoaderXML::getExtensionList ; (; ExtensionList * ; list). overridevirtual . get the list of file extensions ; Implements sofa::simulation::SceneLoader. ◆ getFileTypeDesc(). std::string sofa::simulation::SceneLoaderXML::getFileTypeDesc ; (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html:3282,load,loading,3282,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,2,['load'],['loading']
Performance," solve it during GS iterations More...;  ; virtual void computeComplianceInConstraintSpace ();  4.calling addComplianceInConstraintSpace projected in the contact space => getDelassusOperator(_W) = H*C*Ht More...;  ; void computePredictiveForce (int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res);  method for predictive scheme: More...;  ; void gaussSeidelConstraint (int dim, SReal *dfree, SReal **w, SReal *force, SReal *d, std::vector< core::behavior::ConstraintResolution * > &res, SReal *df);  ; virtual ConstraintProblem * getCP ();  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:15421,perform,performing,15421,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,1,['perform'],['performing']
Performance," std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setForcesMapped(bool b)sofa::core::BaseMappingvirtual; setFrom(BaseState *from) overridesofa::core::Mapping< TIn, TOut >virtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setJMatrixBlock(sofa::Index outIdx, sofa::Index inIdx)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >protected; setMassesMapped(bool b)sofa::core::BaseMappingvirtual; setMatricesMapped(bool b)sofa::core::BaseMappingvirtual; setModels(State< In > *from, State< Out > *to)sofa::core::Mapping< TIn, TOut >virtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNonMechanical()sofa::core::BaseMappingvirtual; setPathInputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setPathOutputObject(const std::string &o)sofa::core::Mapping< TIn, TOut >inline; setRepartition(sofa::Size value)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; setRepartition(sofa::type::vector< sofa::Size > values)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTo(BaseState *to) overridesofa::core::Mapping< TIn, TOut >virtual; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::Mapping< TIn, TOut >inlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(Mapping, TIn, TOut), BaseMapping)sofa::core::Mapping< TIn, TOut >; sofa::core::BaseMapping::SOFA_ABSTRACT_CLASS(BaseMapping, objectmodel::BaseObject)sofa::core::BaseMapping; SOFA_ATTRIBUTE_DISABLED(""v23.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html:19606,load,loader,19606,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,1,['load'],['loader']
Performance," std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshGmshLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshGmshLoader; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetrahedron typedefsofa::core::loader::MeshLoader; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::loader::MeshLoader; updateElements()sofa::core::loader::MeshLoadervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::core::loader::MeshLoadervirtual; updateNormals()sofa::core::loader::MeshLoadervirtual; updatePoints()sofa::core::loader::MeshLoadervirtual; Vec3 typedefsofa::core::loader::MeshLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:16570,load,loader,16570,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance," std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FileMessageHandlerComponent, core::objectmodel::BaseObject);  ;  FileMessageHandlerComponent ();  ;  ~FileMessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html:2612,load,loader,2612,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,1,['load'],['loader']
Performance," suivante nombre de sommets liste des coordonnees des sommets ex 1.45 1.25 6.85 nombre de faces liste de toutes les faces ex 1 2 3 0 0 0 les 3 derniers chiffres ne sont pas utilises pour le moment . Public Attributes; sofa::core::objectmodel::RenamedData< bool > p_trian2;  ; sofa::core::objectmodel::RenamedData< type::vector< type::fixed_array< int, 3 > > > neighborTable;  ; sofa::core::objectmodel::RenamedData< type::vector< type::vector< unsigned int > > > edgesOnBorder;  ; sofa::core::objectmodel::RenamedData< type::vector< unsigned int > > trianglesOnBorderList;  ; Data< bool > d_trian2;  Set to true if the mesh is a trian2 format. More...;  ; Data< type::vector< type::fixed_array< int, 3 > > > d_neighborTable;  Table of neighborhood triangle indices for each triangle. More...;  ; Data< type::vector< type::vector< unsigned int > > > d_edgesOnBorder;  List of edges which are on the border of the mesh loaded. More...;  ; Data< type::vector< unsigned int > > d_trianglesOnBorderList;  List of triangle indices which are on the border of the mesh loaded. More...;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html:1617,load,loaded,1617,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,1,['load'],['loaded']
Performance," template<class Real > . sofa::linearalgebra::FullMatrix< Real >::FullMatrix ; (; Index ; nbRow, . Index ; nbCol . ). ◆ FullMatrix() [3/4]. template<class Real > . sofa::linearalgebra::FullMatrix< Real >::FullMatrix ; (; Real * ; p, . Index ; nbRow, . Index ; nbCol . ). ◆ FullMatrix() [4/4]. template<class Real > . sofa::linearalgebra::FullMatrix< Real >::FullMatrix ; (; Real * ; p, . Index ; nbRow, . Index ; nbCol, . Index ; pitch . ). ◆ ~FullMatrix(). template<class Real > . sofa::linearalgebra::FullMatrix< Real >::~FullMatrix. override . Function details. ◆ add() [1/8]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::add ; (; Index ; row, . Index ; col, . double ; v . ). overridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [2/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:17262,perform,performances,17262,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['perform'],['performances']
Performance," that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw(). void sofa::gui::component::performer::BaseMouseInteractor::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getBodyPicked(). BodyPicked sofa::gui::component::performer::BaseMouseInteractor::getBodyPicked ; (; ); const. inline . ◆ getDistanceFromMouse(). SReal sofa::gui::component::performer::BaseMouseInteractor::getDistanceFromMouse ; (; ); const. inline . ◆ getMouseContainer(). virtual core::behavior::BaseMechanicalState* sofa::gui::component::performer::BaseMouseInteractor::getMouseContainer ; (; ). pure virtual . Implemented in sofa::gui::component::performer::MouseInteractor< DataTypes >. ◆ getMouseRayModel(). MouseCollisionModel* sofa::gui::component::performer::BaseMouseInteractor::getMouseRayModel ; (; ). inline . ◆ handleEvent(). void sofa::gui::component::performer::BaseMouseInteractor::handleEvent ; (; core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ isMouseAttached(). bool sofa::gui::component::performer::BaseMouseInteractor::isMouseAttached ; (; ); const. inline . ◆ removeInteractionPerformer(). bool sofa::gui::component::performer::BaseMouseInteractor::removeInteractionPerformer ; (; InteractionPerformer * ; i). ◆ setBodyPicked(). void sofa::gui::component::performer::BaseMouseInteractor::setBodyPicked ; (; BodyPicked ; picked). inline . ◆ setDistanceFromMouse(). void sofa::gui::component::performer::BaseMouseInteractor::setDistanceFromMouse ; (; SReal ; d). inline . ◆ setMouseAttached(). void sofa::gui::component::performer::BaseMouseInteractor::setMouseAttached ; (; bool ; b). inline . ◆ setMouseRayModel(). void sofa::gui::component::performer::BaseMou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html:16021,perform,performer,16021,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,2,['perform'],['performer']
Performance," the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::string textureName;  ; FaceType faceType;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (MeshOBJLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ; virtual std::string type ();  ;  Public Member Functions inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:6319,load,loader,6319,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['load'],['loader']
Performance, the mesh loaded. . ◆ m_highOrderQuadPositions. type::vector< HighOrderQuadPosition > sofa::helper::io::Mesh::m_highOrderQuadPositions. protected . High order quad points of the mesh loaded. . ◆ m_highOrderTrianglePositions. type::vector< HighOrderTrianglePosition > sofa::helper::io::Mesh::m_highOrderTrianglePositions. protected . High order triangle points of the mesh loaded. . ◆ m_pentahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pentahedraGroups. protected . Groups of Pentahedra. . ◆ m_polygons. type::vector< type::vector <sofa::Index> > sofa::helper::io::Mesh::m_polygons. protected . Polygons of the mesh loaded. . ◆ m_polygonsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_polygonsGroups. protected . Groups of Polygons. . ◆ m_pyramidsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_pyramidsGroups. protected . Groups of Pyramids. . ◆ m_quads. sofa::type::vector< Quad > sofa::helper::io::Mesh::m_quads. protected . Quads of the mesh loaded. . ◆ m_quadsGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_quadsGroups. protected . Groups of Quads. . ◆ m_tetrahedra. sofa::type::vector< Tetrahedron > sofa::helper::io::Mesh::m_tetrahedra. protected . Tetrahedra of the mesh loaded. . ◆ m_tetrahedraGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_tetrahedraGroups. protected . Groups of Tetrahedra. . ◆ m_triangles. sofa::type::vector< Triangle > sofa::helper::io::Mesh::m_triangles. protected . Triangles of the mesh loaded. . ◆ m_trianglesGroups. type::vector< PrimitiveGroup > sofa::helper::io::Mesh::m_trianglesGroups. protected . Groups of Triangles. . ◆ m_vertices. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::m_vertices. protected . ◆ material. Material sofa::helper::io::Mesh::material. protected . ◆ materials. std::vector<Material> sofa::helper::io::Mesh::materials. protected . ◆ normals. sofa::type::vector<type::Vec3> sofa::helper::io::Mesh::normals. protected . ◆ texCoords. s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html:6798,load,loaded,6798,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh.html,2,['load'],['loaded']
Performance," the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Friends; class OperationFactory;  . Attribute details. ◆ button. MOUSE_BUTTON sofa::gui::common::Operation::button. protected . ◆ mbsetting. sofa::component::setting::MouseButtonSetting::SPtr sofa::gui::common::Operation::mbsetting. protected . ◆ performer. sofa::gui::component::performer::InteractionPerformer* sofa::gui::common::Operation::performer. ◆ pickHandle. PickHandler* sofa::gui::common::Operation::pickHandle. protected . Constructor details. ◆ Operation(). sofa::gui::common::Operation::Operation ; (; sofa::component::setting::MouseButtonSetting::SPtr ; s = nullptr). inline . ◆ ~Operation(). virtual sofa::gui::common::Operation::~Operation ; (; ). inlinevirtual . Function details. ◆ configure() [1/2]. virtual void sofa::gui::common::Operation::configure ; (; PickHandler * ; picker, . MOUSE_BUTTON ; b . ). inlinevirtual . Reimplemented in sofa::gui::qt::QAddSutureOperation, sofa::gui::qt::QTopologyOperation, and sofa::gui::qt::QInciseOperation. ◆ configure() [2/2]. virtual void sofa::gui::common::Operation::configure ; (; PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; s . ). inlinevirtual . Reimplemented in sofa::gui::qt::QFixOperation, sofa::gui::qt::QStartNavigationOperation, sofa::gui::qt::QAddRecordedCameraOperation, and sofa::gui::qt::QAttachOp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html:1997,perform,performer,1997,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,4,['perform'],['performer']
Performance," the scene if root flags are modified. More...;  ; virtual void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init=true)=delete;  ; virtual void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox)=delete;  ; virtual void draw (sofa::core::visual::VisualParams *vparams, Node *root)=delete;  Render the scene. More...;  ; virtual void exportOBJ (Node *root, const char *filename, bool exportMTL=true)=delete;  Export a scene to an OBJ 3D Scene. More...;  ; virtual void exportXML (Node *root, const char *fileName=nullptr)=delete;  Print all object in the graph in XML format. More...;  ; virtual void exportGraph (Node *root, const char *filename=nullptr)=delete;  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; virtual void dumpState (Node *root, std::ofstream &out)=delete;  Dump the current state in the given stream. More...;  ; virtual NodeSPtr load (const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))=delete;  Load a scene from a file. More...;  ; virtual void unload (NodeSPtr root)=delete;  Unload a scene from a Node. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::simulation::Simulation; static Simulation::SPtr theSimulation { nullptr };  . Constructor details. ◆ DAGSimulation(). sofa::simulation::graph::DAGSimulation::DAGSimulation ; (; ). ◆ ~DAGSimulation(). sofa::simulation::graph::DAGSimulation::~DAGSimulation ; (; ). override . Function details. ◆ createNewGraph(). Node::SPtr sofa::simulation::graph::DAGSimulation::createNewGraph ; (; const std::string & ; name). overridevirtual . create a new graph(or tree) and return its root node. ; Implements sofa::simulation::Simulation. ◆ createNewNode(). Node::SPtr sofa::simulation::graph::DAGSimulation::createNewNode ; (; const std::string & ; name). overridevirtual . creates and returns a new node. ; Implements sofa::simulation::Simulation.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_simulation.html:3109,load,load,3109,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_simulation.html,3,"['Load', 'load']","['Load', 'load']"
Performance," the scene if root flags are modified. More...;  ; virtual void computeBBox (Node *root, SReal *minBBox, SReal *maxBBox, bool init=true)=delete;  ; virtual void computeTotalBBox (Node *root, SReal *minBBox, SReal *maxBBox)=delete;  ; virtual void draw (sofa::core::visual::VisualParams *vparams, Node *root)=delete;  Render the scene. More...;  ; virtual void exportOBJ (Node *root, const char *filename, bool exportMTL=true)=delete;  Export a scene to an OBJ 3D Scene. More...;  ; virtual void exportXML (Node *root, const char *fileName=nullptr)=delete;  Print all object in the graph in XML format. More...;  ; virtual void exportGraph (Node *root, const char *filename=nullptr)=delete;  Print all objects in the graph in the given file (format is given by the filename extension) More...;  ; virtual void dumpState (Node *root, std::ofstream &out)=delete;  Dump the current state in the given stream. More...;  ; virtual NodeSPtr load (const std::string &, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0))=delete;  Load a scene from a file. More...;  ; virtual void unload (NodeSPtr root)=delete;  Unload a scene from a Node. More...;  ; virtual NodeSPtr createNewGraph (const std::string &name)=0;  create a new graph(or tree) and return its root node. More...;  ; virtual NodeSPtr createNewNode (const std::string &name)=0;  creates and returns a new node. More...;  ; virtual bool isDirectedAcyclicGraph ()=0;  Can the simulation handle a directed acyclic graph? More...;  . Attribute details. ◆ theSimulation. Simulation::SPtr sofa::simulation::Simulation::theSimulation { nullptr }. inlinestatic . Constructor details. ◆ Simulation() [1/2]. sofa::simulation::Simulation::Simulation ; (; ). ◆ ~Simulation(). sofa::simulation::Simulation::~Simulation ; (; ). virtual . ◆ Simulation() [2/2]. sofa::simulation::Simulation::Simulation ; (; const Simulation & ; n). delete . Function details. ◆ animate(). virtual void sofa::simulation::Simulation::anim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html:2732,load,load,2732,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,3,"['Load', 'load']","['Load', 'load']"
Performance," to obtain better performances. . ◆ add() [4/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<std::size_t LC, typename T = SReal> . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addB() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . const Block & ; b . ). inline . ◆ addB() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:17953,perform,performances,17953,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['perform'],['performances']
Performance," type::Vec3 > m_rotationCenter;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > m_rotationStartPoint;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > m_rotationLookAt;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > m_rotationAxis;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > m_cameraUp;  ; sofa::core::objectmodel::RenamedData< bool > p_drawRotation;  ; sofa::core::objectmodel::RenamedData< bool > p_drawTranslation;  ; sofa::core::objectmodel::RenamedData< type::vector< type::Vec3 > > m_translationPositions;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Quat > > m_translationOrientations;  ; Data< SReal > d_startTime;  Time when the camera moves will start. More...;  ; Data< SReal > d_endTime;  Time when the camera moves will end (or loop) More...;  ; Data< bool > d_rotationMode;  If true, rotation will be performed. More...;  ; Data< bool > d_translationMode;  If true, translation will be performed. More...;  ; Data< bool > d_navigationMode;  If true, navigation will be performed. More...;  ; Data< SReal > d_rotationSpeed;  rotation Speed More...;  ; Data< type::Vec3 > d_rotationCenter;  Rotation center coordinates. More...;  ; Data< type::Vec3 > d_rotationStartPoint;  Rotation start position coordinates. More...;  ; Data< type::Vec3 > d_rotationLookAt;  Position to be focused during rotation. More...;  ; Data< type::Vec3 > d_rotationAxis;  Rotation axis. More...;  ; Data< type::Vec3 > d_cameraUp;  Camera Up axis. More...;  ; Data< bool > d_drawRotation;  If true, will draw the rotation path. More...;  ; Data< bool > d_drawTranslation;  If true, will draw the translation path. More...;  ; Data< sofa::type::vector< type::Vec3 > > d_translationPositions;  Intermediate camera's positions. More...;  ; Data< sofa::type::vector< Quat > > d_translationOrientations;  Intermediate camera's orientations. More...;  ;  Public Attributes inherited from sofa::component::visual::BaseCamera; sofa::core::objectmodel::RenamedData< type::Vec3 ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html:2264,perform,performed,2264,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,1,['perform'],['performed']
Performance," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; BaseVTKReader * r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html:4071,load,loader,4071,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,1,['load'],['loader']
Performance," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::set< Edge > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:4241,load,loader,4241,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,1,['load'],['loader']
Performance," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::string textu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:5152,load,loader,5152,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['load'],['loader']
Performance," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Matrix4 d_p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:3560,load,loader,3560,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:4229,load,loader,4229,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,2,['load'],['loader']
Performance," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html:4000,load,loader,4000,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,1,['load'],['loader']
Performance," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:17569,load,loader,17569,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,5,['load'],['loader']
Performance," unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  . Constructor details. ◆ STBImage() [1/2]. sofa::helper::io::STBImage::STBImage ; (; ). default . ◆ STBImage() [2/2]. sofa::helper::io::STBImage::STBImage ; (; const std::string & ; filename). inlineexplicit . Function details. ◆ load(). bool sofa::helper::io::STBImage::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::STBImage::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ setSTBCreators(). void sofa::helper::io::STBImage::setSTBCreators ; (; ). static . sofahelperioSTBImage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:2802,load,load,2802,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,4,['load'],['load']
Performance," virtual void readDataFile ();  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void setTime (double time);  ; void processTopologicalChanges ();  ; void processTopologicalChanges (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateTriangleIncisionInformation ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph crea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html:7177,load,loader,7177,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,1,['load'],['loader']
Performance," void sofa::core::loader::MeshLoader::addPosition ; (; type::vector< sofa::type::Vec3 > & ; pPositions, . SReal ; x, . SReal ; y, . SReal ; z . ). protected . ◆ addPyramid() [1/2]. void sofa::core::loader::MeshLoader::addPyramid ; (; type::vector< Pyramid > & ; pPyramids, . const Pyramid & ; p . ). protected . ◆ addPyramid() [2/2]. void sofa::core::loader::MeshLoader::addPyramid ; (; type::vector< Pyramid > & ; pPyramids, . Topology::ElemID ; p0, . Topology::ElemID ; p1, . Topology::ElemID ; p2, . Topology::ElemID ; p3, . Topology::ElemID ; p4 . ). protected . ◆ addQuad() [1/2]. void sofa::core::loader::MeshLoader::addQuad ; (; type::vector< Quad > & ; pQuads, . const Quad & ; p . ). protected . ◆ addQuad() [2/2]. void sofa::core::loader::MeshLoader::addQuad ; (; type::vector< Quad > & ; pQuads, . Topology::QuadID ; p0, . Topology::QuadID ; p1, . Topology::QuadID ; p2, . Topology::QuadID ; p3 . ). protected . ◆ addTetrahedron() [1/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . const Tetrahedron & ; p . ). protected . ◆ addTetrahedron() [2/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . Topology::TetrahedronID ; p0, . Topology::TetrahedronID ; p1, . Topology::TetrahedronID ; p2, . Topology::TetrahedronID ; p3 . ). protected . ◆ addTriangle() [1/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . const Triangle & ; p . ). protected . ◆ addTriangle() [2/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . Topology::TriangleID ; p0, . Topology::TriangleID ; p1, . Topology::TriangleID ; p2 . ). protected . ◆ applyTransformation(). void sofa::core::loader::MeshLoader::applyTransformation ; (; sofa::type::Matrix4 const & ; T). virtual . Apply Homogeneous transformation to the positions. . ◆ canLoad(). bool sofa::core::loader::MeshLoader::canLoad ; (; ). overr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:27409,load,loader,27409,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance," void clear () override;  Reset all values to 0. More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index row, Index col, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:2195,perform,performances,2195,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['perform'],['performances']
Performance," void computeResidual (const core::ExecParams *);  ; virtual void removeConstraintCorrection (BaseConstraintCorrection *s)=0;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; Resolution DOFs vectors API; virtual MultiVecDerivId getLambda () const;  ; virtual MultiVecDerivId getDx () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html:2728,load,loader,2728,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html,1,['load'],['loader']
Performance," void createResponse (objectmodel::BaseContext *group)=0;  ; virtual void removeResponse ()=0;  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html:2200,load,loader,2200,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,1,['load'],['loader']
Performance," void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_flags. template<class DataTypes > . core::visual::DisplayFlags sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_flags. protected . ◆ m_interactionObject. template<class DataTypes > . sofa::core::objectmodel::BaseObject::SPtr sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_interactionObject. protected . ◆ m_mapper. template<class DataTypes > . MouseContactMapper* sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_mapper. protected . Constructor details. ◆ BaseAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::BaseAttachBodyPerformer ; (; BaseMouseInteractor * ; i). explicit . ◆ ~BaseAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::~BaseAttachBodyPerformer. virtual . Function details. ◆ clear(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::clear. virtual . ◆ draw(). template<class DataTypes > . void sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html:2922,perform,performer,2922,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,2,['perform'],['performer']
Performance," void swap (SparseMatrix< T > &m);  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class Real2 > ; void operator= (const SparseMatrix< Real2 > &m);  ; template<class Real2 > ; void operator+= (const SparseMatrix< Real2 > &m);  ; template<class Real2 > ; void operator-= (const SparseMatrix< Real2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator-= (const MatrixExpr< Expr2 > &m);  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:4746,perform,performances,4746,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,['perform'],['performances']
Performance," will copy all buffers from a io::Mesh into the corresponding Data. Will be removed as soon as work on unifying meshloader is finished. . ◆ getRotation(). virtual Vec3 sofa::core::loader::MeshLoader::getRotation ; (; ); const. inlinevirtual . ◆ getScale(). virtual Vec3 sofa::core::loader::MeshLoader::getScale ; (; ); const. inlinevirtual . ◆ getTransformation(). virtual sofa::type::Matrix4 sofa::core::loader::MeshLoader::getTransformation ; (; ); const. inlinevirtual . ◆ getTranslation(). virtual Vec3 sofa::core::loader::MeshLoader::getTranslation ; (; ); const. inlinevirtual . ◆ init(). void sofa::core::loader::MeshLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::core::loader::MeshLoader::load ; (; ). finalvirtual . Implements sofa::core::loader::BaseLoader. ◆ parse(). void sofa::core::loader::MeshLoader::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::core::loader::MeshLoader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setRotation(). void sofa::core::loader::MeshLoader::setRotation ; (; SReal ; rx, . SReal ; ry, . SReal ; rz . ). inline . ◆ setScale(). void sofa::core::loader::MeshLoader::setScale ; (; SReal ; sx, . SReal ; sy, . SReal ; sz . ). inline . ◆ setTransformation(). void sofa::core::loader::MeshLoader::setTransformation ; (; const sofa::type::Matrix4 & ; t). inline . ◆ setTranslation(). void sofa::core::loader::MeshLoader::setTranslation ; (; SReal ; dx, . SReal ; dy, . SReal ; dz . ). inline . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::loader::MeshLoader::SOFA_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:29712,load,loader,29712,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance," you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:1571,load,loaded,1571,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,2,['load'],['loaded']
Performance,"  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  . Attribute details. ◆ fixations. template<class DataTypes > . std::vector< simulation::Node * > sofa::gui::component::performer::FixParticlePerformer< DataTypes >::fixations. protected . ◆ s_mapSupportedModels. template<class DataTypes > . MapTypeFunction* sofa::gui::component::performer::FixParticlePerformer< DataTypes >::s_mapSupportedModels = nullptr. inlinestaticprotected . Constructor details. ◆ FixParticlePerformer(). template<class DataTypes > . sofa::gui::component::performer::FixParticlePerformer< DataTypes >::FixParticlePerformer ; (; BaseMouseInteractor * ; i). Function details. ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::FixParticlePerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::FixParticlePerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getFixationPoints(). template<class DataTypes > . sofa::component::statecontainer::MechanicalObject< DataTypes > * sofa::gui::component::performer::FixParticlePerformer< DataTypes >::getFixationPoints ; (; const BodyPicked & ; b, . type::vector< unsigned int > & ; points, . typename DataTypes::Coord & ; fixPoint . ). protected . ◆ getFixationPointsSphere(). template<class DataTypes > . static void sofa::gui::component::performer::FixParticlePerformer< DataTypes >::getFixationPointsSphere ; (; sofa::core::sptr< sofa::core::CollisionModel > ; model, . const Index ; idx, . type::vector< Index > & ; points, . Coord & ; fixPoint . ). inlinestatic . ◆ getFixationPointsTriangle(). template<class DataTypes > . template<typename TTriangleCollisionModel > . st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html:4035,perform,performer,4035,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html,2,['perform'],['performer']
Performance,"  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ MeshXspLoader(). sofa::component::io::mesh::MeshXspLoader::MeshXspLoader ; (; ). protected . Function details. ◆ doClearBuffers(). void sofa::component::io::mesh::MeshXspLoader::doClearBuffers ; (; ). overrideprotectedvirtual . Implements sofa::core::loader::MeshLoader. ◆ doLoad(). bool sofa::component::io::mesh::MeshXspLoader::doLoad ; (; ). overridevirtual . Inherited from MeshLoader. ; Implements sofa::core::loader::MeshLoader. ◆ SOFA_CLASS(). sofa::component::io::mesh::MeshXspLoader::SOFA_CLASS ; (; MeshXspLoader ; , . sofa::core::loader::MeshLoader ;  . ). sofacomponentiomeshMeshXspLoader; Generated on Mon Nov 11 2024 02:46:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader.html:20148,load,loader,20148,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader.html,4,['load'],['loader']
Performance,"  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Attribute details. ◆ d_createSubelements. Data< bool > sofa::core::loader::MeshLoader::d_createSubelements. Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) . ◆ d_edges. Data< type::vector< Edge > > sofa::core::loader::MeshLoader::d_edges. Edges of the mesh loaded. . ◆ d_edgesGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_edgesGroups. Groups of Edges. . ◆ d_flipNormals. Data< bool > sofa::core::loader::MeshLoader::d_flipNormals. Flip Normals. . ◆ d_hexahedra. Data< type::vector< Hexahedron > > sofa::core::loader::MeshLoader::d_hexahedra. Hexahedra of the mesh loaded. . ◆ d_hexahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_hexahedraGroups. Groups of Hexahedra. . ◆ d_highOrderEdgePositions. Data< type::vector< HighOrderEdgePosition > > sofa::core::loader::MeshLoader::d_highOrderEdgePositions. High order edge points of the mesh loaded. . ◆ d_highOrderHexahedronPositions. Data< type::vector< HighOrderHexahedronPosition > > sofa::core::loader::MeshLoader::d_highOrderHexahedronPositions. High order hexahedron points of the mesh loaded. . ◆ d_highOrderQuadPositions. Data< type::vector< HighOrderQuadPosition > > sofa::core::loader::MeshLoader::d_highOrderQuadPositions. High order quad points of the mesh loaded. . ◆ d_highOrderTetrahedronPosi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:20267,load,loader,20267,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,"  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::set< Edge > uniqueEdges;  edges without redundancy More...;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (GridMeshCreator, sofa::core::loader::MeshLoader);  ; virtual std::string type ();  ; bool canLoad () override;  ; bool doLoad () override;  create the grid More...;  ;  Public M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:5426,load,loader,5426,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,1,['load'],['loader']
Performance,"  Read the value of the element at row i, column j (using 0-based indices) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void resize (Index nbRow, Index nbCol)=0;  Resize the matrix and reset all values to 0. More...;  ; virtual void clear ()=0;  Reset all values to 0. More...;  ; virtual void set (Index i, Index j, double v)=0;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:2293,perform,performances,2293,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['perform'],['performances']
Performance,"  SOFA_CLASS (BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod);  ; void computePermutation (const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseOrderingMethod;  ~BaseOrderingMethod () override;  ; virtual std::string methodName () const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method.html:1856,load,loader,1856,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method.html,1,['load'],['loader']
Performance,"  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (MeshOBJLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ; virtual std::string type ();  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render inte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:7889,load,load,7889,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['load'],['load']
Performance, ◆ initialNbTriangles. unsigned int sofa::gui::component::performer::InciseAlongPathPerformer::initialNbTriangles. protected . ◆ secondBody. BodyPicked sofa::gui::component::performer::InciseAlongPathPerformer::secondBody. protected . ◆ startBody. BodyPicked sofa::gui::component::performer::InciseAlongPathPerformer::startBody. protected . ◆ topologyChangeManager. TopologicalChangeManager sofa::gui::component::performer::InciseAlongPathPerformer::topologyChangeManager. protected . Constructor details. ◆ InciseAlongPathPerformer(). sofa::gui::component::performer::InciseAlongPathPerformer::InciseAlongPathPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~InciseAlongPathPerformer(). sofa::gui::component::performer::InciseAlongPathPerformer::~InciseAlongPathPerformer ; (; ). override . Function details. ◆ draw(). void sofa::gui::component::performer::InciseAlongPathPerformer::draw ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ execute(). void sofa::gui::component::performer::InciseAlongPathPerformer::execute ; (; ). overridevirtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getFirstIncisionBodyPicked(). BodyPicked& sofa::gui::component::performer::InciseAlongPathPerformer::getFirstIncisionBodyPicked ; (; ). inline . ◆ getLastBodyPicked(). BodyPicked& sofa::gui::component::performer::InciseAlongPathPerformer::getLastBodyPicked ; (; ). inline . ◆ PerformCompleteIncision(). void sofa::gui::component::performer::InciseAlongPathPerformer::PerformCompleteIncision ; (; ). protected . Incision will be performed between firstIncisionBody (first point clicked) and firstBody (last point clicked in memory) . ◆ setPerformerFreeze(). void sofa::gui::component::performer::InciseAlongPathPerformer::setPerformerFreeze ; (; ). overridevirtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ start(). void sofa::gui::component::perfo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html:4274,perform,performer,4274,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html,2,['perform'],['performer']
Performance," ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21022,queue,queue,21022,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,1,['queue'],['queue']
Performance,"""). More...;  . Static Public Member Functions; static Handle load (const std::string &filename);  Load a dynamic library. More...;  ; static int unload (Handle handle);  Unload a dynamic library loaded with load(). More...;  ; static void * getSymbolAddress (Handle handle, const std::string &symbol);  Get the address of a symbol. More...;  ; static std::string getLastError ();  Get the message for the most recent error that occurred from load(), unload() or getSymbolAddress(). More...;  . Attribute details. ◆ extension. const std::string sofa::helper::system::DynamicLibrary::extension = ""so"". static . System-specific file extension for a dynamic library (e.g. ""so""). . ◆ prefix. const std::string sofa::helper::system::DynamicLibrary::prefix = ""lib"". static . System-specific file prefix for a dynamic library (e.g. ""lib""). . Function details. ◆ getLastError(). std::string sofa::helper::system::DynamicLibrary::getLastError ; (; ). static . Get the message for the most recent error that occurred from load(), unload() or getSymbolAddress(). ; ReturnsThe error message, or an empty string if no errors have occurred since initialization or since it was last called. . ◆ getSymbolAddress(). void * sofa::helper::system::DynamicLibrary::getSymbolAddress ; (; Handle ; handle, . const std::string & ; symbol . ). static . Get the address of a symbol. ; Parameters. handleThe handle of a library. ; symbolThe symbol to look for. . ReturnsA pointer to the symbol if it was found, or nullptr on error. . ◆ load(). DynamicLibrary::Handle sofa::helper::system::DynamicLibrary::load ; (; const std::string & ; filename). static . Load a dynamic library. ; Parameters. filenameThe library to load. . ReturnsA handle, that must be unloaded with unload(). Use Handle::isValid() to know if the loading was successful. . ◆ unload(). int sofa::helper::system::DynamicLibrary::unload ; (; Handle ; handle). static . Unload a dynamic library loaded with load(). ; Parameters. handleThe handle of a library. .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_dynamic_library.html:1827,load,load,1827,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_dynamic_library.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_dynamic_library.html,2,['load'],['load']
Performance,"&name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::gui::component::performer::MouseInteractor< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::Type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html:1561,perform,performer,1561,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,2,['perform'],['performer']
Performance,"&name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMouseInteractor()sofa::gui::component::performer::BaseMouseInteractorinlineprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:1543,perform,performer,1543,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,2,['perform'],['performer']
Performance,"&pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa::core::loader::MeshLoaderprotected; addPolyline(type::vector< Polyline > &pPolylines, Polyline p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, const Pyramid &p)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:2008,load,loader,2008,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,11,['load'],['loader']
Performance,"& getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; bool readGmsh (std::ifstream &file, const unsigned int gmshFormat);  ; void addInGroup (type::vector< sofa::type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3570,load,loaded,3570,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,2,['load'],['loaded']
Performance,"() [1/2]. void sofa::core::loader::MeshLoader::addPyramid ; (; type::vector< Pyramid > & ; pPyramids, . const Pyramid & ; p . ). protected . ◆ addPyramid() [2/2]. void sofa::core::loader::MeshLoader::addPyramid ; (; type::vector< Pyramid > & ; pPyramids, . Topology::ElemID ; p0, . Topology::ElemID ; p1, . Topology::ElemID ; p2, . Topology::ElemID ; p3, . Topology::ElemID ; p4 . ). protected . ◆ addQuad() [1/2]. void sofa::core::loader::MeshLoader::addQuad ; (; type::vector< Quad > & ; pQuads, . const Quad & ; p . ). protected . ◆ addQuad() [2/2]. void sofa::core::loader::MeshLoader::addQuad ; (; type::vector< Quad > & ; pQuads, . Topology::QuadID ; p0, . Topology::QuadID ; p1, . Topology::QuadID ; p2, . Topology::QuadID ; p3 . ). protected . ◆ addTetrahedron() [1/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . const Tetrahedron & ; p . ). protected . ◆ addTetrahedron() [2/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . Topology::TetrahedronID ; p0, . Topology::TetrahedronID ; p1, . Topology::TetrahedronID ; p2, . Topology::TetrahedronID ; p3 . ). protected . ◆ addTriangle() [1/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . const Triangle & ; p . ). protected . ◆ addTriangle() [2/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . Topology::TriangleID ; p0, . Topology::TriangleID ; p1, . Topology::TriangleID ; p2 . ). protected . ◆ applyTransformation(). void sofa::core::loader::MeshLoader::applyTransformation ; (; sofa::type::Matrix4 const & ; T). virtual . Apply Homogeneous transformation to the positions. . ◆ canLoad(). bool sofa::core::loader::MeshLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clearBuffers(). void sofa::core::loader::MeshLoader::clearBuffers ; (; ). finalprotectedvirtual . ◆ copyM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:27580,load,loader,27580,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,"() [2/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . Topology::TetrahedronID ; p0, . Topology::TetrahedronID ; p1, . Topology::TetrahedronID ; p2, . Topology::TetrahedronID ; p3 . ). protected . ◆ addTriangle() [1/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . const Triangle & ; p . ). protected . ◆ addTriangle() [2/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . Topology::TriangleID ; p0, . Topology::TriangleID ; p1, . Topology::TriangleID ; p2 . ). protected . ◆ applyTransformation(). void sofa::core::loader::MeshLoader::applyTransformation ; (; sofa::type::Matrix4 const & ; T). virtual . Apply Homogeneous transformation to the positions. . ◆ canLoad(). bool sofa::core::loader::MeshLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clearBuffers(). void sofa::core::loader::MeshLoader::clearBuffers ; (; ). finalprotectedvirtual . ◆ copyMeshToData(). void sofa::core::loader::MeshLoader::copyMeshToData ; (; helper::io::Mesh & ; _mesh). protected . Temporary method that will copy all buffers from a io::Mesh into the corresponding Data. Will be removed as soon as work on unifying meshloader is finished. . ◆ getRotation(). virtual Vec3 sofa::core::loader::MeshLoader::getRotation ; (; ); const. inlinevirtual . ◆ getScale(). virtual Vec3 sofa::core::loader::MeshLoader::getScale ; (; ); const. inlinevirtual . ◆ getTransformation(). virtual sofa::type::Matrix4 sofa::core::loader::MeshLoader::getTransformation ; (; ); const. inlinevirtual . ◆ getTranslation(). virtual Vec3 sofa::core::loader::MeshLoader::getTranslation ; (; ); const. inlinevirtual . ◆ init(). void sofa::core::loader::MeshLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:28542,load,loader,28542,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,"(). int sofa::component::io::mesh::VoxelGridLoader::getActiveDataValue ; (; const unsigned int ; idx = 0); const. ◆ getBackgroundValue(). int sofa::component::io::mesh::VoxelGridLoader::getBackgroundValue ; (; const unsigned int ; idx = 0); const. ◆ getData(). unsigned char * sofa::component::io::mesh::VoxelGridLoader::getData ; (; ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getDataSize(). int sofa::component::io::mesh::VoxelGridLoader::getDataSize ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getHexaIndicesInGrid(). type::vector< unsigned int > sofa::component::io::mesh::VoxelGridLoader::getHexaIndicesInGrid ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getResolution(). void sofa::component::io::mesh::VoxelGridLoader::getResolution ; (; Vec3i & ; res); const. ◆ getROI(). VoxelGridLoader::Vec6i sofa::component::io::mesh::VoxelGridLoader::getROI ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getSegmentID(). unsigned char * sofa::component::io::mesh::VoxelGridLoader::getSegmentID ; (; ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getVoxelSize(). type::Vec3 sofa::component::io::mesh::VoxelGridLoader::getVoxelSize ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ init(). void sofa::component::io::mesh::VoxelGridLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::component::io::mesh::VoxelGridLoader::load ; (; ). overridevirtual . Implements sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::component::io::mesh::VoxelGridLoader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setVoxelSize(). void sofa::component::io::mesh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:21233,load,loader,21233,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['load'],['loader']
Performance,();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ damping. double sofa::gui::common::AddSutureOperation::damping. protected . ◆ stiffness. double sofa::gui::common::AddSutureOperation::stiffness. protected . Constructor details. ◆ AddSutureOperation(). sofa::gui::common::AddSutureOperation::AddSutureOperation ; (; ). inline . ◆ ~AddSutureOperation(). sofa::gui::common::AddSutureOperation::~AddSutureOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::AddSutureOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AddSutureOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDamping(). virtual double sofa::gui::common::AddSutureOperation::getDampin,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html:2310,perform,performer,2310,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,4,['perform'],['performer']
Performance,();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AddRecordedCameraButtonSetting::SPtr sofa::gui::common::AddRecordedCameraOperation::setting. protected . Constructor details. ◆ AddRecordedCameraOperation(). sofa::gui::common::AddRecordedCameraOperation::AddRecordedCameraOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::AddRecordedCameraOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AddRecordedCameraOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescription(). static std::string sofa::gui::common::AddRecordedCameraOperation::getDescription ; (; ). inlinestatic . sofaguicommonAddRecordedCameraOperation; Gener,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html:2192,perform,performer,2192,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,4,['perform'],['performer']
Performance,();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::FixPickedParticleButtonSetting::SPtr sofa::gui::common::FixOperation::setting. protected . Constructor details. ◆ FixOperation(). sofa::gui::common::FixOperation::FixOperation ; (; ). inline . ◆ ~FixOperation(). sofa::gui::common::FixOperation::~FixOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::FixOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::FixOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescription(). static std::string sofa::gui::common::FixOperation::getDescription ; (; ). inlinestatic . ◆ getStiffness(). virtual double sofa::gui::common::F,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html:2241,perform,performer,2241,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,4,['perform'],['performer']
Performance,();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::StartNavigationButtonSetting::SPtr sofa::gui::common::StartNavigationOperation::setting. protected . Constructor details. ◆ StartNavigationOperation(). sofa::gui::common::StartNavigationOperation::StartNavigationOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::StartNavigationOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::StartNavigationOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescription(). static std::string sofa::gui::common::StartNavigationOperation::getDescription ; (; ). inlinestatic . sofaguicommonStartNavigationOperation; Generated on Mon Nov 11,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html:2182,perform,performer,2182,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,4,['perform'],['performer']
Performance,"();  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_size. template<class DataTypes > . SReal sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::m_size. protected . ◆ m_stiffness. template<class DataTypes > . SReal sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::m_stiffness. protected . Constructor details. ◆ AttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::AttachBodyPerformer ; (; BaseMouseInteractor * ; i). ◆ ~AttachBodyPerformer(). template<class DataTypes > . virtual sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::~AttachBodyPerformer ; (; ). virtualdefault . Function details. ◆ configure(). template<class DataTypes > . virtual void sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::configure ; (; sofa::component::setting::MouseButtonSetting * ; setting). inlineoverridevirtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ setArrowSize(). template<class DataTypes > . void sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html:2877,perform,performer,2877,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,2,['perform'],['performer']
Performance,"()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:5652,load,loader,5652,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,2,['load'],['loader']
Performance,"()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:5771,load,loader,5771,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,5,['load'],['loader']
Performance,"()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::io::mesh::GIDMeshLoader; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:5753,load,loader,5753,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,"()sofa::core::objectmodel::BaseObjectvirtual; resizeArray(std::size_t n)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >protected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPathObject1(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setPathObject2(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; sofa::SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::PairStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html:17741,load,loader,17741,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,1,['load'],['loader']
Performance,"()sofa::core::objectmodel::BaseObjectvirtual; samePointssofa::component::topology::mapping::SubsetTopologicalMapping; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; SetIndex typedefsofa::component::topology::mapping::SubsetTopologicalMapping; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPathInputObject(const std::string &o)sofa::core::topology::TopologicalMappinginline; setPathOutputObject(const std::string &o)sofa::core::topology::TopologicalMappinginline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTopologies(In *from, Out *to)sofa::core::topology::TopologicalMappingvirtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(TopologicalMapping, objectmodel::BaseObject)sofa::core::topology::TopologicalMapping; SOFA_CLASS(SubsetTopologicalMapping, sofa::core::topology::TopologicalMapping)sofa::component::topology::mapping::SubsetTopologicalMapping; sofa::core::topology::TopologicalMapping::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; SubsetTopologicalMapping()sofa::component::topology::mapping::SubsetTopologicalMappingprotected; tetrahedronD2Ssofa::component::topology::mapping::SubsetTopologicalMapping; tetrahedronS2Dsofa::component::topology::mapping::SubsetTopologicalMapping; toModelsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html:13777,load,loader,13777,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,1,['load'],['loader']
Performance,"(; Index ; nbRow, . Index ; nbCol . ). ◆ FullMatrix() [3/4]. template<class Real > . sofa::linearalgebra::FullMatrix< Real >::FullMatrix ; (; Real * ; p, . Index ; nbRow, . Index ; nbCol . ). ◆ FullMatrix() [4/4]. template<class Real > . sofa::linearalgebra::FullMatrix< Real >::FullMatrix ; (; Real * ; p, . Index ; nbRow, . Index ; nbCol, . Index ; pitch . ). ◆ ~FullMatrix(). template<class Real > . sofa::linearalgebra::FullMatrix< Real >::~FullMatrix. override . Function details. ◆ add() [1/8]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::add ; (; Index ; row, . Index ; col, . double ; v . ). overridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [2/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This fun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:17358,perform,performances,17358,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['perform'],['performances']
Performance,"(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html:9455,load,loader,9455,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,1,['load'],['loader']
Performance,"(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(CollisionGroupManager, CollisionAlgorithm)sofa::core::collision::CollisionGroupManager; sofa::core::collision::CollisionAlgorithm::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedGroupssofa::core::collision::CollisionGroupManagerprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlave",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html:9870,load,loader,9870,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager-members.html,1,['load'],['loader']
Performance,"(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addEdge(type::vector< Edge > &pEdges, const Edge &p)sofa::core::loader::MeshLoaderprotected; addEdge(type::vector< Edge > &pEdges, Topology::EdgeID p0, Topology::EdgeID p1)sofa::core::loader::MeshLoaderprotected; addGroup(const sofa::core::loader::PrimitiveGroup &g)sofa::component::io::mesh::MeshOBJLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, const Hexahedron &p)sofa::core::loader::MeshLoaderprotected; addHexahedron(type::vector< Hexahedron > &pHexahedra, Topology::HexahedronID p0, Topology::HexahedronID p1, Topology::HexahedronID p2, Topology::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa::core::loader::MeshLoaderprotected; addPolyline(type::vector< Polyline > &pPolylines, Polyline p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p)sofa::core::loader::MeshLoaderpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:1351,load,loader,1351,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['loader']
Performance,"(BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void start ()=0;  ; virtual void execute ()=0;  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_freezePerformer. bool sofa::gui::component::performer::InteractionPerformer::m_freezePerformer. ◆ m_interactor. BaseMouseInteractor* sofa::gui::component::performer::InteractionPerformer::m_interactor. Constructor details. ◆ InteractionPerformer(). sofa::gui::component::performer::InteractionPerformer::InteractionPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~InteractionPerformer(). virtual sofa::gui::component::performer::InteractionPerformer::~InteractionPerformer ; (; ). inlinevirtual . Function details. ◆ configure(). virtual void sofa::gui::component::performer::InteractionPerformer::configure ; (; sofa::component::setting::MouseButtonSetting * ; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::AttachBodyPerformer< DataTypes >. ◆ create(). template<class RealObject > . static RealObject* sofa::gui::component::performer::InteractionPerformer::create ; (; RealObject * ; , . BaseMouseInteractor * ; interactor . ). inlinestatic . ◆ draw(). virtual void sofa::gui::component::performer::InteractionPerformer::draw ; (; const core::visual::VisualParams * ; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, sofa::gui::component::performer::FixPa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html:1568,perform,performer,1568,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,2,['perform'],['performer']
Performance,"(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:12684,load,loader,12684,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,1,['load'],['loader']
Performance,"(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; SelectConnectedLabelsROI()sofa::component::engine::select::SelectConnectedLabelsROI< _T >inline; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Inherited, Inherit1)sofa::component::engine::select::SelectConnectedLabelsROI< _T >; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Index, sofa::Index)sofa::component::engine::select::SelectConnectedLabelsROI< _T >; SOFA_CLASS(SOFA_TEMPLATE(SelectConnectedLabelsROI, _T), DataEngine)sofa::component::engine::select::SelectConnectedLabelsROI< _T >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; T typedefsofa::component::engine::select::SelectConnectedLabelsROI< _T >; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html:11815,load,loader,11815,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html,1,['load'],['loader']
Performance,"(core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_mstate1. template<class DataTypes > . sofa::core::behavior::MechanicalState<DataTypes>* sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::m_mstate1. protected . ◆ m_mstate2. template<class DataTypes > . sofa::core::behavior::MechanicalState<DataTypes> * sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::m_mstate2. protected . Constructor details. ◆ ConstraintAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::ConstraintAttachBodyPerformer ; (; BaseMouseInteractor * ; i). ◆ ~ConstraintAttachBodyPerformer(). template<class DataTypes > . virtual sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::~ConstraintAttachBodyPerformer ; (; ). virtualdefault . Function details. ◆ startPartial(). template<class DataTypes > . bool sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::startPartial ; (; const BodyPicked & ; picked). overridevirtual . Implements sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html:2999,perform,performer,2999,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,2,['perform'],['performer']
Performance,"(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ cpt. int sofa::gui::common::InciseOperation::cpt. protected . ◆ finishIncision. bool sofa::gui::common::InciseOperation::finishIncision. protected . ◆ keepPoint. bool sofa::gui::common::InciseOperation::keepPoint. protected . ◆ method. int sofa::gui::common::InciseOperation::method. protected . ◆ snapingBorderValue. int sofa::gui::common::InciseOperation::snapingBorderValue. protected . ◆ snapingValue. int sofa::gui::common::InciseOperation::snapingValue. protected . ◆ startPerformer. sofa::gui::component::performer::InteractionPerformer* sofa::gui::common::InciseOperation::startPerformer. protected . Constructor details. ◆ InciseOperation(). sofa::gui::common::InciseOperation::InciseOperation ; (; ). inline . ◆ ~InciseOperation(). sofa::gui::common::InciseOperation::~InciseOperation ; (; ). override . Function details. ◆ end(). void sofa::gui::common::InciseOperation::end ; (; ). ov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html:2620,perform,performer,2620,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,4,['perform'],['performer']
Performance,"(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ firstClick. bool sofa::gui::common::TopologyOperation::firstClick. protected . ◆ scale. double sofa::gui::common::TopologyOperation::scale. protected . ◆ topologicalOperation. int sofa::gui::common::TopologyOperation::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::common::TopologyOperation::volumicMesh. protected . Constructor details. ◆ TopologyOperation(). sofa::gui::common::TopologyOperation::TopologyOperation ; (; ). inline . ◆ ~TopologyOperation(). sofa::gui::common::TopologyOperation::~TopologyOperation ; (; ). inlineoverride . Function details. ◆ end(). void sofa::gui::common::TopologyOperation::end ; (; ). overridevirtual . Reimplemented from sofa::gui::common::Operation. ◆ endOperation(). void sofa::gui::common::TopologyOperation::endOperation ; (; ). overridevirtual . This function is called after each mouse click. ; Reimplemented from sofa::gui::common::O",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html:2374,perform,performer,2374,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,4,['perform'],['performer']
Performance,"(type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, const Pyramid &p)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, const Tetrahedron &p)sofa::core::loader::MeshLoaderprotected; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, Topology::TetrahedronID p0, Topology::TetrahedronID p1, Topology::TetrahedronID p2, Topology::TetrahedronID p3)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, const Triangle &p)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, Topology::TriangleID p0, Topology::TriangleID p1, Topology::TriangleID p2)sofa::core::loader::MeshLoaderprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:3147,load,loader,3147,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,12,['load'],['loader']
Performance,") between the plane and the Edge . Returnsbool true if there is an intersection, otherwise false . ◆ isPointOnEdge(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr bool sofa::geometry::Edge::isPointOnEdge ; (; const Node & ; p0, . const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Test if a point is on Edge (n0, n1) ; Template Parameters. Nodeiterable container ; Tscalar . Parameters. p0position of the point to test ; n0,n1nodes of the edge . Returnsbool result if point is on Edge. . ◆ length(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::length ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for squaredLength()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsLength of the edge (a T scalar) . ◆ squaredLength(). template<typename Node , typename T = std::decay_t<decltype(*std::begin(std::declval<Node>()))>, typename = std::enable_if_t<std::is_scalar_v<T>>> . static constexpr auto sofa::geometry::Edge::squaredLength ; (; const Node & ; n0, . const Node & ; n1 . ). inlinestaticconstexpr . Compute the squared length (or norm) of an edge. ; RemarksDepending of the type of Node, it will either use a optimized version or a generic one . Optimizations are enabled for sofa::type::Vec ; Template Parameters. Nodeiterable container (or sofa::type::Vec for operator- and norm2()) ; Tscalar . Parameters. n0,n1nodes of the edge . ReturnsSquared length of the edge (a T scalar) . sofageometryEdge; Generated on Mon Nov 11 20",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html:6504,optimiz,optimized,6504,api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1geometry_1_1_edge.html,2,['optimiz'],['optimized']
Performance,") overridesofa::component::visual::Visual3DTextvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(Visual3DText, core::visual::VisualModel)sofa::component::visual::Visual3DText; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html:10786,load,loader,10786,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,1,['load'],['loader']
Performance,"). virtual Vec3 sofa::core::loader::MeshLoader::getTranslation ; (; ); const. inlinevirtual . ◆ init(). void sofa::core::loader::MeshLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::core::loader::MeshLoader::load ; (; ). finalvirtual . Implements sofa::core::loader::BaseLoader. ◆ parse(). void sofa::core::loader::MeshLoader::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::core::loader::MeshLoader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setRotation(). void sofa::core::loader::MeshLoader::setRotation ; (; SReal ; rx, . SReal ; ry, . SReal ; rz . ). inline . ◆ setScale(). void sofa::core::loader::MeshLoader::setScale ; (; SReal ; sx, . SReal ; sy, . SReal ; sz . ). inline . ◆ setTransformation(). void sofa::core::loader::MeshLoader::setTransformation ; (; const sofa::type::Matrix4 & ; t). inline . ◆ setTranslation(). void sofa::core::loader::MeshLoader::setTranslation ; (; SReal ; dx, . SReal ; dy, . SReal ; dz . ). inline . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::loader::MeshLoader::SOFA_ABSTRACT_CLASS ; (; MeshLoader ; , . BaseLoader ;  . ). ◆ updateElements(). void sofa::core::loader::MeshLoader::updateElements ; (; ). virtual . ◆ updateMesh(). void sofa::core::loader::MeshLoader::updateMesh ; (; ). virtual . ◆ updateNormals(). void sofa::core::loader::MeshLoader::updateNormals ; (; ). virtual . ◆ updatePoints(). void sofa::core::loader::MeshLoader::updatePoints ; (; ). virtual . sofacoreloaderMeshLoader; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:30221,load,loader,30221,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,9,['load'],['loader']
Performance,);  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; void setSetting (sofa::component::setting::MouseButtonSetting *s) override;  ; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AttachBodyButtonSetting::SPtr sofa::gui::common::AttachOperation::setting. protected . Constructor details. ◆ AttachOperation(). sofa::gui::common::AttachOperation::AttachOperation ; (; sofa::gui::component::AttachBodyButtonSetting::SPtr ; s = sofa::core::objectmodel::New<sofa::gui::component::AttachBodyButtonSetting>()). inline . ◆ ~AttachOperation(). sofa::gui::common::AttachOperation::~AttachOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::AttachOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AttachOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation.; Reimple,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html:2517,perform,performer,2517,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html,4,['perform'],['performer']
Performance,");  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (bool i);  ; void setFinishIncision (bool i);  ; void setkeepPoint (bool i);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::InciseOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOperations. QGroupBox* sofa::gui::qt::QInciseOperation::advancedOperations. protected . ◆ advancedOptions. QGroupBox* sofa::gui::qt::QInciseOperation::advancedOptions. protected . ◆ finishCut. QCheckBox* sofa::gui::qt::QInciseOperation::finishCut. protected . ◆ finishIncision. bool sofa::gui::qt::QInciseOperation::finishIncision. ◆ incisionMethodChoiceGroup. QGroupBox* sofa::gui::qt:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html:2815,perform,performer,2815,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,4,['perform'],['performer']
Performance,")sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa::core::loader::MeshLoaderprotected; addPolyline(type::vector< Polyline > &pPolylines, Polyline p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, const Pyramid &p)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, const Tetrahedron &p)sofa::core::loader::MeshLoaderprotected; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, Topolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:2235,load,loader,2235,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,11,['load'],['loader']
Performance,")sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:9687,load,loader,9687,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,1,['load'],['loader']
Performance,")sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(ImageLoader, BaseLoader)sofa::core::loader::ImageLoader; sofa::core::loader::BaseLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html:9689,load,loader,9689,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,1,['load'],['loader']
Performance,")sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(SphereLoader, sofa::core::loader::BaseLoader)sofa::component::io::mesh::SphereLoader; sofa::core::loader::BaseLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SphereLoader()sofa::component::io::mesh::SphereLoaderprotected; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:10093,load,loader,10093,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,1,['load'],['loader']
Performance,")sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(VoxelLoader, BaseLoader)sofa::core::loader::VoxelLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3i typedefsofa::core::loader::VoxelLoader; Vec6i typedefsofa::core::loader::VoxelLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VoxelLoader()sofa::core::loader::VoxelLoaderprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:10709,load,loader,10709,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['load'],['loader']
Performance,")sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(VoxelLoader, BaseLoader)sofa::core::loader::VoxelLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3i typedefsofa::core::loader::VoxelLoader; Vec6i typedefsofa::core::loader::VoxelLoader; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; VoxelLoader()sofa::core::loader::VoxelLoaderprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() ove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:10921,load,loader,10921,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['load'],['loader']
Performance,")sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionssofa::component::io::mesh::SphereLoader; d_radiussofa::component::io::mesh::SphereLoader; d_rotationsofa::component::io::mesh::SphereLoader; d_scalesofa::component::io::mesh::SphereLoader; d_translationsofa::component::io::mesh::SphereLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:2527,load,loader,2527,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,1,['load'],['loader']
Performance,")sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:2452,load,loader,2452,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,2,['load'],['loader']
Performance,")sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::GridMeshCreator; d_rotationsofa::core::loader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:5708,load,loader,5708,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,")sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::StringMeshCreator; d_rotationsofa::core::loader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:5714,load,loader,5714,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['load'],['loader']
Performance,")sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:5827,load,loader,5827,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,5,['load'],['loader']
Performance,")sofa::core::objectmodel::BaseObjectvirtual; resetSystem() overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; resizeSystem(Size n)sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >; ResMatrixType typedefsofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSystemLHVector(core::MultiVecDerivId v) overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; setSystemMBKMatrix(const core::MechanicalParams *mparams) overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; setSystemRHVector(core::MultiVecDerivId v) overridesofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >virtual; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; singleThreadAddJMInvJtLocal(Matrix *, ResMatrixType *result, const JMatrixType *J, SReal fact)sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >protected; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE3(MatrixLinearSolver, Matrix, Vector, NoThreadManager), SOFA_TEMPLATE2(BaseMatrixLinearSolver, Matrix, Vector))sofa::component::linea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html:16375,load,loader,16375,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4-members.html,1,['load'],['loader']
Performance,")sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::ConstraintAttachOperationinlineprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::ConstraintAttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setArrowSize(double s)sofa::gui::common::AttachOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s) overridesofa::gui::common::AttachOperationinlineprotectedvirtual; setShowFactorSize(double s)sofa::gui::common::AttachOperationinline; setStiffness(double s)sofa::gui::common::AttachOperationinline; settingsofa::gui::common::AttachOperationprotected; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~AttachOperation() overridesofa::gui::common::AttachOperationinline; ~Operation()sofa::gui::common::Operationinlinevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html:1750,perform,performersofa,1750,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html,2,['perform'],['performersofa']
Performance,)sofa::gui::qt::RealGUIvirtual; fileRecentlyOpened(QAction *action)sofa::gui::qt::RealGUIvirtualslot; fileReload()sofa::gui::qt::RealGUIvirtualslot; fpsLabelsofa::gui::qt::RealGUIprotected; getConfigDirectoryPath()sofa::gui::common::BaseGUIstatic; GetGUIName()sofa::gui::common::BaseGUIinlinestatic; GetProgramName()sofa::gui::common::BaseGUIinlinestatic; getScreenshotDirectoryPath()sofa::gui::common::BaseGUIstatic; getSofaViewer()sofa::gui::qt::RealGUI; getViewer() overridesofa::gui::qt::RealGUIvirtual; gnuplotDirectorysofa::gui::qt::RealGUIprotected; helpAbout()sofa::gui::qt::RealGUIinlinevirtualslot; informationOnPickCallBacksofa::gui::qt::RealGUIprotected; init()sofa::gui::qt::RealGUIprotected; InitApplication(RealGUI *_gui)sofa::gui::qt::RealGUIprotectedstatic; initViewer(common::BaseViewer *_viewer) overridesofa::gui::qt::RealGUIprotectedvirtual; interactionGUI(bool value)sofa::gui::qt::RealGUIvirtualslot; keyPressEvent(QKeyEvent *e) overridesofa::gui::qt::RealGUIprotected; loadSimulation(bool one_step=false)sofa::gui::qt::RealGUIprotected; lockAnimation(bool)sofa::gui::qt::RealGUIvirtualslot; m_animateOBJsofa::gui::qt::RealGUIprotected; m_animationOBJcountersofa::gui::qt::RealGUIprotected; m_clockBeforeLastStepsofa::gui::qt::RealGUIprotected; m_displayComputationTimesofa::gui::qt::RealGUIprotected; m_dumpStatesofa::gui::qt::RealGUIprotected; m_dumpStateStreamsofa::gui::qt::RealGUIprotected; m_dumpVisitorStreamsofa::gui::qt::RealGUIprotected; m_enableInteractionsofa::gui::qt::RealGUIprotected; m_exportGnuplotsofa::gui::qt::RealGUIprotected; m_filelistenersofa::gui::qt::RealGUIprotected; m_fullScreensofa::gui::qt::RealGUIprotected; m_modifiedLogFilessofa::gui::qt::RealGUIprotected; m_viewersofa::gui::qt::RealGUIprotected; mainLoop() overridesofa::gui::qt::RealGUIvirtual; mArgumentParsersofa::gui::common::BaseGUIprotectedstatic; mGuiNamesofa::gui::common::BaseGUIprotectedstatic; mProgramNamesofa::gui::common::BaseGUIprotectedstatic; mSimulationsofa::gui::qt::RealGU,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:3572,load,loadSimulation,3572,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,2,['load'],['loadSimulation']
Performance,"*)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setAlarmDistance(SReal)sofa::core::collision::Intersectioninlinevirtual; setContactDistance(SReal)sofa::core::collision::Intersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; useContinuous() constsofa::core::collision::Intersectioninlinevirtual; useProximity() constsofa::core::collision::Intersectioninlinevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::stri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html:9981,load,loader,9981,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_intersection-members.html,1,['load'],['loader']
Performance,"*)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setAlarmDistance(SReal)sofa::core::collision::Intersectioninlinevirtual; setContactDistance(SReal)sofa::core::collision::Intersectioninlinevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Intersection, objectmodel::BaseObject)sofa::core::collision::Intersection; SOFA_CLASS(DiscreteIntersection, sofa::core::collision::Intersection)sofa::component::collision::detection::intersection::DiscreteIntersection; sofa::core::collision::Intersection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; testIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; testIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, const core::collision::Intersection *currentIn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html:13072,load,loader,13072,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection-members.html,1,['load'],['loader']
Performance,"*)sofa::core::visual::VisualModel; initVisual() finalsofa::core::visual::VisualModelvirtual; insertInNode(core::objectmodel::BaseNode *node) overridesofa::component::visual::VisualModelImplinlinevirtual; internalDraw(const core::visual::VisualParams *, bool)sofa::component::visual::VisualModelImplinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isUsingTopology() constsofa::component::visual::VisualModelImplinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::visual::VisualModelImpl; lastMeshRevsofa::component::visual::VisualModelImpl; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const std::string &filename, const std::string &loader, const std::string &textureName)sofa::component::visual::VisualModelImpl; loadTexture(const std::string &)sofa::component::visual::VisualModelImplinlinevirtual; loadTextures()sofa::component::visual::VisualModelImplinlinevirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_computeTangentssofa::component::visual::VisualModelImpl; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_dirtyQuadssofa::component::visual::VisualModelImplprotected; m_dirtyTrianglessofa::component::visual::VisualModelImplprotected; m_edgessofa::component::visual::VisualModelImpl; m_fixMergedUVSeamssofa::component::visual::VisualModelImpl; m_handleDynamicTopologysofa::component::visual::VisualModelImpl; m_initRestPositionssofa::component::visual::VisualModelImpl; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_keepLinessofa::component::visual::VisualModelImpl; m_oldAttributessofa::core::objectmodel::Base; m_positionssofa::core::vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html:13847,load,loadTextures,13847,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,1,['load'],['loadTextures']
Performance,"*field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ; Data< type::vector< sofa::type::Vec3 > > d_normals;  Normals of the mesh loaded. More...;  ; Data< type::vector< PrimitiveGroup > > d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:15211,load,loaded,15211,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,5,['load'],['loaded']
Performance,"*filename=nullptr);  ; static void SetPixmap (std::string pixmap_filename, QPushButton *b);  ;  Static Public Member Functions inherited from sofa::gui::common::BaseGUI; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions; void init ();  init data member from RealGUI for the viewer initialisation in the GUI More...;  ; void createDisplayFlags (Node::SPtr root);  ; void loadSimulation (bool one_step=false);  ; void eventNewStep ();  ; void eventNewTime ();  ; void keyPressEvent (QKeyEvent *e) override;  ; void startDumpVisitor ();  ; void stopDumpVisitor ();  ; void initViewer (common::BaseViewer *_viewer) override;  init the viewer for the GUI (embedded or not we have to connect some info about viewer in the GUI) More...;  ; virtual int exitApplication (unsigned int _retcode=0);  ; void sleep (float seconds, float init_time);  ;  Protected Member Functions inherited from sofa::gui::common::BaseGUI;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static void CreateApplication (int _argc=0, char **_argv=nullptr);  ; static void InitApplication (RealGUI *_gui);  . Signals; void reload ();  ; void newScene ();  ; void newStep ();  ; void quit ();  . Public Slots; virtual void newRootNode (sofa::simulation::Node *root, const char *path);  ; virtual void activateNode (sofa::simulation::Node *, bool);  ; virtual void setSleepingNode (sofa::simulation::Node *, bool);  ; virtual void lockAn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:5597,load,loadSimulation,5597,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,2,['load'],['loadSimulation']
Performance,", . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory and register into the map; if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for error logging. . ◆ pluginIsLoaded(). bool sofa::helper::system::P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:7303,load,loadPluginByName,7303,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,2,['load'],['loadPluginByName']
Performance,", VecDerivId a=VecDerivId::dx())sofa::core::behavior::BaseMechanicalStateinlinevirtual; resetConstraint(const ConstraintParams *params)=0sofa::core::behavior::BaseMechanicalStatepure virtual; resetForce(const ExecParams *params, VecDerivId f=VecDerivId::force())sofa::core::behavior::BaseMechanicalStateinlinevirtual; resize(Size vsize)=0sofa::core::BaseStatepure virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMechanicalState, BaseState)sofa::core::behavior::BaseMechanicalState; sofa::core::BaseState::SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_BASE_CAST_IMPLEMENTATION(BaseMechanicalState)sofa::core::behavior::BaseMechanicalState; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; vAlloc(const ExecParams *params, VecCoordId v, const core::VecIdProperties &properties={})=0sofa::core::behavior::BaseMechanicalStatepure",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html:14358,load,loader,14358,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state-members.html,1,['load'],['loader']
Performance,", VecDerivId a=VecDerivId::dx())sofa::core::behavior::BaseMechanicalStateinlinevirtual; resetConstraint(const ConstraintParams *params)=0sofa::core::behavior::BaseMechanicalStatepure virtual; resetForce(const ExecParams *params, VecDerivId f=VecDerivId::force())sofa::core::behavior::BaseMechanicalStateinlinevirtual; resize(Size vsize)=0sofa::core::BaseStatepure virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::MechanicalState< TDataTypes >inlinestatic; SOFA_ABSTRACT_CLASS(BaseMechanicalState, BaseState)sofa::core::behavior::BaseMechanicalState; sofa::core::BaseState::SOFA_ABSTRACT_CLASS(BaseState, objectmodel::BaseObject)sofa::core::BaseState; SOFA_BASE_CAST_IMPLEMENTATION(BaseMechanicalState)sofa::core::behavior::BaseMechanicalState; sofa::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sofa::core::State::SOFA_CLASS(SOFA_TEMPLATE(State, TDataTypes), BaseState)sofa::core::State< TDataTypes >; SOFA_CLASS2(SOFA_TEMPLATE(MechanicalState, TDataTypes), BaseMechanicalState, SOFA_TEMPLATE(State, TDataTypes))sofa::core::behavior::MechanicalState< TDataTypes >; SPtr typedefsofa::core::objectmodel::Base; State()sofa::core::State< TDataTypes >protected; storeResetState()sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html:17064,load,loader,17064,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,1,['load'],['loader']
Performance,", const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; initializeTopologyHandler(sofa::core::topology::TopologySubsetIndices &indices, core::topology::BaseMeshTopology *topology, sofa::Index mstateId)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_gnuplotFileEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_potentialEnergysofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; maskInUsesofa::component::solidmechanics::spring::SpringForceField< DataTypes >pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:17321,load,load,17321,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,3,['load'],['load']
Performance,", ivec4;; float, vec2, vec3, vec4;; int[], ivec2[], ivec3[], ivec4[];; float[], vec2[], vec3[], vec4[]; . Public Attributes; Data< DataTypes > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const DataTypes &v);  ; virtual void pushValue ()=0;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html:1899,Load,Loading,1899,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,1,['Load'],['Loading']
Performance,", objectmodel::BaseObject);  ; virtual ShaderElementType getSEType () const =0;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; virtual const core::objectmodel::BaseData * getSEValue () const =0;  ; virtual core::objectmodel::BaseData * getSEValue ()=0;  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html:3091,load,loader,3091,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,2,['load'],['loader']
Performance,"-saving check. . ◆ doLoad(). virtual sofa::simulation::NodeSPtr sofa::simulation::SceneLoader::doLoad ; (; const std::string & ; filename, . const std::vector< std::string > & ; sceneArgs . ). pure virtual . Implemented in sofa::simulation::SceneLoaderXML, and sofa::simulation::SceneLoaderPHP. ◆ getExtensionList(). virtual void sofa::simulation::SceneLoader::getExtensionList ; (; ExtensionList * ; list). pure virtual . get the list of file extensions ; Implemented in sofa::simulation::SceneLoaderXML, and sofa::simulation::SceneLoaderPHP. ◆ getFileTypeDesc(). virtual std::string sofa::simulation::SceneLoader::getFileTypeDesc ; (; ). pure virtual . get the file type description ; Implemented in sofa::simulation::SceneLoaderXML, and sofa::simulation::SceneLoaderPHP. ◆ load(). sofa::simulation::NodeSPtr sofa::simulation::SceneLoader::load ; (; const std::string & ; filename, . bool ; reload = false, . const std::vector< std::string > & ; sceneArgs = std::vector<std::string>(0) . ). load the file . ◆ notifyLoadingSceneAfter(). void sofa::simulation::SceneLoader::notifyLoadingSceneAfter ; (; sofa::simulation::NodeSPtr ; node, . SceneLoader * ; sceneLoader . ). staticprotected . ◆ notifyLoadingSceneBefore(). void sofa::simulation::SceneLoader::notifyLoadingSceneBefore ; (; SceneLoader * ; sceneLoader). staticprotected . ◆ notifyReloadingSceneAfter(). void sofa::simulation::SceneLoader::notifyReloadingSceneAfter ; (; sofa::simulation::NodeSPtr ; node, . SceneLoader * ; sceneLoader . ). staticprotected . ◆ notifyReloadingSceneBefore(). void sofa::simulation::SceneLoader::notifyReloadingSceneBefore ; (; SceneLoader * ; sceneLoader). staticprotected . ◆ removeListener(). void sofa::simulation::SceneLoader::removeListener ; (; Listener * ; l). static . removing a listener . ◆ syntaxForAddingRequiredPlugin(). bool sofa::simulation::SceneLoader::syntaxForAddingRequiredPlugin ; (; const std::string & ; pluginName, . const std::vector< std::string > & ; listComponents, . std::ostre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html:4598,load,load,4598,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,2,['load'],['load']
Performance,". #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:1273,load,loader,1273,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,1,['load'],['loader']
Performance,". #include <InciseAlongPathPerformer.h>. Inheritance diagram for sofa::gui::component::performer::InciseAlongPathPerformer:. [legend]. Protected Attributes; TopologicalChangeManager topologyChangeManager;  ; BodyPicked startBody;  ; BodyPicked firstBody;  ; BodyPicked secondBody;  ; BodyPicked firstIncisionBody;  ; int cpt;  ; bool fullcut;  ; unsigned int initialNbTriangles;  ; unsigned int initialNbPoints;  ;  Protected Attributes inherited from sofa::gui::component::performer::InciseAlongPathPerformerConfiguration; int currentMethod;  ; int snapingBorderValue;  ; int snapingValue;  ; bool finishIncision;  ; bool keepPoint;  . Public Member Functions;  InciseAlongPathPerformer (BaseMouseInteractor *i);  ;  ~InciseAlongPathPerformer () override;  ; void start () override;  ; void execute () override;  ; void draw (const core::visual::VisualParams *vparams) override;  ; BodyPicked & getFirstIncisionBodyPicked ();  ; BodyPicked & getLastBodyPicked ();  ; void setPerformerFreeze () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::InciseAlongPathPerformerConfiguration; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  . Protected Member Functions; void PerformCompleteIncision ();  Incision will be performed between firstIncisionBody (first point clicked) and firstBody (last point clicked in memory) More...;  . Additional Inhe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html:1409,perform,performer,1409,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html,2,['perform'],['performer']
Performance,". ). ◆ getModuleName(). const char * sofa::gui::qt::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::gui::qt::getModuleVersion ; (; ). ◆ getOpenFileName(). QString SOFA_GUI_QT_API sofa::gui::qt::getOpenFileName ; (; QWidget * ; parent, . const QString & ; startWith, . const QString & ; filter, . const char * ; name, . const QString & ; caption, . QString * ; selectedFilter . ). ◆ getPixmap(). QPixmap * sofa::gui::qt::getPixmap ; (; core::objectmodel::Base * ; obj, . bool ; haveInfo, . bool ; haveWarning, . bool ; haveErrors . ). ◆ getSaveFileName(). QString SOFA_GUI_QT_API sofa::gui::qt::getSaveFileName ; (; QWidget * ; parent, . const QString & ; startWith, . const QString & ; filter, . const char * ; name, . const QString & ; caption, . QString * ; selectedFilter . ). ◆ init(). void SOFA_GUI_QT_API sofa::gui::qt::init ; (; ). ◆ initExternalModule(). void sofa::gui::qt::initExternalModule ; (; ). ◆ loadQtConfWithCustomPrefix(). bool sofa::gui::qt::loadQtConfWithCustomPrefix ; (; const std::string & ; qtConfPath, . const std::string & ; prefix . ). ◆ openInExternalEditor(). void sofa::gui::qt::openInExternalEditor ; (; const std::string ; filename, . const int ; fileloc . ). Open a file at given path and line number using an external editor. ; The external editor is defined in a QSettings with the following entries: [General] ExternalEditor=qtcreator ExternalEditorParams=-client ${filename}:${fileno} where ${filename} is expanded with the full path to the file where ${fileno} is expanded with the line number to open at. . ◆ redirectQtMessages(). void sofa::gui::qt::redirectQtMessages ; (; QtMsgType ; type, . const QMessageLogContext & ; context, . const QString & ; msg . ). ◆ removeFileExt(). QString sofa::gui::qt::removeFileExt ; (; const QString & ; s). ◆ setMessageIconFrom(). void sofa::gui::qt::setMessageIconFrom ; (; QTreeWidgetItem * ; item, . Base * ; object . ). ◆ STRUCT_DATA_VAR() [1/58]. template<class T > . sofa::gui::qt::STRUCT_DATA_VAR ; (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html:45470,load,loadQtConfWithCustomPrefix,45470,api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1qt.html,2,['load'],['loadQtConfWithCustomPrefix']
Performance,". . ◆ canLoad(). bool sofa::core::loader::MeshLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clearBuffers(). void sofa::core::loader::MeshLoader::clearBuffers ; (; ). finalprotectedvirtual . ◆ copyMeshToData(). void sofa::core::loader::MeshLoader::copyMeshToData ; (; helper::io::Mesh & ; _mesh). protected . Temporary method that will copy all buffers from a io::Mesh into the corresponding Data. Will be removed as soon as work on unifying meshloader is finished. . ◆ getRotation(). virtual Vec3 sofa::core::loader::MeshLoader::getRotation ; (; ); const. inlinevirtual . ◆ getScale(). virtual Vec3 sofa::core::loader::MeshLoader::getScale ; (; ); const. inlinevirtual . ◆ getTransformation(). virtual sofa::type::Matrix4 sofa::core::loader::MeshLoader::getTransformation ; (; ); const. inlinevirtual . ◆ getTranslation(). virtual Vec3 sofa::core::loader::MeshLoader::getTranslation ; (; ); const. inlinevirtual . ◆ init(). void sofa::core::loader::MeshLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::core::loader::MeshLoader::load ; (; ). finalvirtual . Implements sofa::core::loader::BaseLoader. ◆ parse(). void sofa::core::loader::MeshLoader::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::core::loader::MeshLoader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setRotation(). void sofa::core::loader::MeshLoader::setRotation ; (; SReal ; rx, . SReal ; ry, . SReal ; rz . ). inline . ◆ setScale(). void sofa::core::loader::MeshLoader::setScal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:29358,load,loader,29358,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,". . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::d_graphErrors. Sum of the constraints' errors at each iteration. . ◆ d_graphForces. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::d_graphForces. Graph of each constraint's force at each step of the resolution. . ◆ d_graphViolations. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::d_graphViolations. Graph of each constraint's violation at each step of the resolution. . ◆ d_maxIt. Data<int> sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::d_maxIt. maximal number of iterations of the Gauss-Seidel algorithm . ◆ d_multithreading. Data<bool> sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::d_multithreading. Build compliances concurrently. . ◆ d_newtonIterations. Data<int> sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::d_newtonIterations. Maximum iteration number of Newton (for the NonsmoothNonlinearConjugateGradient solver only) . ◆ d_resolutionMethod. Data< sofa::helper::OptionsGroup > sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::d_resolutionMethod. Method used to solve the constraint problem, among: ""ProjectedGaussSeidel"", ""UnbuiltGaussSeidel"" or ""for NonsmoothNonlinearConjugateGradient"". . ◆ d_reverseAccumulateOrder. Data<bool> sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::d_reverseAccumulateOrder. True to accumulate constraints from nodes in reversed order (can be necessary when using multi-mappings or interaction constraints not following the node hierarchy) . ◆ d_scaleTolerance. Data<bool> sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::d_scaleTolerance. Scale the error tolerance with the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:24392,concurren,concurrently,24392,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['concurren'],['concurrently']
Performance,. /25; ; SOFA - Topic Tag: Linux_ubuntu. /26; ; SOFA - Topic Tag: Linux_ubuntu. /27; ; SOFA - Topic Tag: Linux_ubuntu. /28; ; SOFA - Topic Tag: Linux_ubuntu. /29; ; SOFA - Topic Tag: Linux_ubuntu. /3; ; SOFA - Topic Tag: Linux_ubuntu. /30; ; SOFA - Topic Tag: Linux_ubuntu. /4; ; SOFA - Topic Tag: Linux_ubuntu. /5; ; SOFA - Topic Tag: Linux_ubuntu. /6; ; SOFA - Topic Tag: Linux_ubuntu. /7; ; SOFA - Topic Tag: Linux_ubuntu. /8; ; SOFA - Topic Tag: Linux_ubuntu. /9; ; SOFA - Topic Tag: Linux_ubuntu. SOFA - Topic Tag: Linux_ubuntu. /linux-omni-drivers; . /feed; ; Linux Omni drivers – SOFA. SOFA - Topic Tag: Linux Omni drivers. /linux-soft-robots; . /feed; ; Linux Soft Robots – SOFA. SOFA - Topic Tag: Linux Soft Robots. /linux-ubuntu; . /feed; ; Linux Ubuntu – SOFA. SOFA - Topic Tag: Linux Ubuntu. /liver; . /feed; ; liver – SOFA. SOFA - Topic Tag: liver. /llvm; . /feed; ; LLVM – SOFA. SOFA - Topic Tag: LLVM. /lmconstraint; . /feed; ; LMConstraint – SOFA. SOFA - Topic Tag: LMConstraint. /loader; . /feed; ; loader – SOFA. SOFA - Topic Tag: loader. /local-deformation; . /feed; ; local deformation – SOFA. SOFA - Topic Tag: local deformation. /local-frame; . /feed; ; local frame – SOFA. SOFA - Topic Tag: local frame. /local-mesh-refinement; . /feed; ; local mesh refinement – SOFA. SOFA - Topic Tag: local mesh refinement. /location; . /feed; ; location – SOFA. SOFA - Topic Tag: location. /m_contactsvectorbuffer; . /feed; ; M_ContactsVectorBuffer – SOFA. SOFA - Topic Tag: M_ContactsVectorBuffer. /mac; . /feed; ; Mac – SOFA. SOFA - Topic Tag: Mac. /macos; . /feed; ; MacOS – SOFA. /page; . /2; ; SOFA - Topic Tag: MacOS. /3; ; SOFA - Topic Tag: MacOS. /4; ; SOFA - Topic Tag: MacOS. /5; ; SOFA - Topic Tag: MacOS. SOFA - Topic Tag: MacOS. /mac-os; . /feed; ; mac os – SOFA. SOFA - Topic Tag: mac os. /macos-launch-clang-cgimage-exception; . /feed; ; macOS launch clang cgImage exception – SOFA. SOFA - Topic Tag: macOS launch clang cgImage exception. /macos-qt; . /feed; ; macos qt – SOFA,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:454248,load,loader,454248,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['load'],['loader']
Performance,". Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec4f >; Data< type::Vec4f > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html:13016,Load,Loading,13016,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,1,['Load'],['Loading']
Performance,". More...;  ; Data< unsigned int > indexActiveShader;  Set current active shader. More...;  ; Data< bool > backfaceWriting;  it enables writing to gl_BackColor inside a GLSL vertex shader More...;  ; Data< bool > clampVertexColor;  clamp the vertex color between 0 and 1 More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  . Protected Attributes; std::vector< sofa::gl::GLSLShader * > shaderVector;  OpenGL shader. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data mu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html:2209,Load,Loading,2209,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,1,['Load'],['Loading']
Performance,". More...;  ; Data< unsigned int > indexActiveShader;  Set current active shader. More...;  ; Data< bool > backfaceWriting;  it enables writing to gl_BackColor inside a GLSL vertex shader More...;  ; Data< bool > clampVertexColor;  clamp the vertex color between 0 and 1 More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShader; std::vector< sofa::gl::GLSLShader * > shaderVector;  OpenGL shader. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data insta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:18243,Load,Loading,18243,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,2,['Load'],['Loading']
Performance,". More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (RequiredPlugin, core::objectmodel::BaseObject);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadPlugin ();  load a list of plugins requested in Data More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attrib",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:2365,Load,Loading,2365,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,1,['Load'],['Loading']
Performance,". More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; virtual bool load (const char *filename);  ; void clear ();  ;  Public Member Functions inherited from sofa::component::io::mesh::MeshOffLoader;  SOFA_CLASS (MeshOffLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render inte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:1699,load,load,1699,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['load'],['load']
Performance,". Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::STBImage Class Reference . #include <STBImage.h>. Inheritance diagram for sofa::helper::io::STBImage:. [legend]. Public Member Functions;  STBImage ()=default;  ;  STBImage (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:444,load,load,444,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,2,['load'],['load']
Performance,". Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseAddResourceRepository, sofa::core::objectmodel::BaseObject);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool updateRepositoryPath ();  ; void cleanup () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html:3215,load,loader,3215,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,1,['load'],['loader']
Performance,". inlineprotected . Function details. ◆ addInteractionPerformer(). void sofa::gui::component::performer::BaseMouseInteractor::addInteractionPerformer ; (; InteractionPerformer * ; i). ◆ cleanup(). void sofa::gui::component::performer::BaseMouseInteractor::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw(). void sofa::gui::component::performer::BaseMouseInteractor::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getBodyPicked(). BodyPicked sofa::gui::component::performer::BaseMouseInteractor::getBodyPicked ; (; ); const. inline . ◆ getDistanceFromMouse(). SReal sofa::gui::component::performer::BaseMouseInteractor::getDistanceFromMouse ; (; ); const. inline . ◆ getMouseContainer(). virtual core::behavior::BaseMechanicalState* sofa::gui::component::performer::BaseMouseInteractor::getMouseContainer ; (; ). pure virtual . Implemented in sofa::gui::component::performer::MouseInteractor< DataTypes >. ◆ getMouseRayModel(). MouseCollisionModel* sofa::gui::component::performer::BaseMouseInteractor::getMouseRayModel ; (; ). inline . ◆ handleEvent(). void sofa::gui::component::performer::BaseMouseInteractor::handleEvent ; (; core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ isMouseAttached(). bool sofa::gui::component::performer::BaseMouseInteractor::isMouseAttached ; (; ); const. inline . ◆ removeInteractionPerformer(). bool sofa::gui::component::performer::BaseMouseInteractor::removeInteractionPerformer ; (; InteractionPerformer * ; i). ◆ setBodyPicked(). void sofa::gui::component::performer::BaseMouseInteractor::se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html:15638,perform,performer,15638,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,2,['perform'],['performer']
Performance,". ◆ RootNodeChanged. void sofa::gui::qt::QSofaListView::RootNodeChanged ; (; sofa::simulation::Node * ; newroot, . const char * ; newpath . ). signal . ◆ RunSofaDoubleClicked. void sofa::gui::qt::QSofaListView::RunSofaDoubleClicked ; (; QTreeWidgetItem * ; item, . int ; index . ). protectedslot . ◆ RunSofaRightClicked. void sofa::gui::qt::QSofaListView::RunSofaRightClicked ; (; const QPoint & ; point). protectedslot . ◆ SaveNode. void sofa::gui::qt::QSofaListView::SaveNode ; (; ). protectedslot . ◆ setPropertyWidget(). void sofa::gui::qt::QSofaListView::setPropertyWidget ; (; QDisplayPropertyWidget * ; propertyWid). inline . ◆ setRoot(). void sofa::gui::qt::QSofaListView::setRoot ; (; sofa::simulation::Node * ; root). ◆ transformObject(). void sofa::gui::qt::QSofaListView::transformObject ; (; sofa::simulation::Node * ; node, . double ; dx, . double ; dy, . double ; dz, . double ; rx, . double ; ry, . double ; rz, . double ; scale . ). protecteddelete . ◆ update(). void sofa::gui::qt::QSofaListView::update ; (; ). Updates the view so it is synchronized with the simulation graph. The view can be visually de-synchronized with the simulation graph. This happens when the view is ""frozen"" for performance reason. In that case, use isDirty to get current view state or the dirtynessChanged() signal. To resynchronize the view call the update method. . ◆ Updated. void sofa::gui::qt::QSofaListView::Updated ; (; ). signal . ◆ updateMatchingObjectmodel [1/2]. void sofa::gui::qt::QSofaListView::updateMatchingObjectmodel ; (; QTreeWidgetItem * ; item). protectedslot . ◆ updateMatchingObjectmodel [2/2]. void sofa::gui::qt::QSofaListView::updateMatchingObjectmodel ; (; QTreeWidgetItem * ; item, . int ;  . ). protectedslot . ◆ UpdateOpenedDialogs. void sofa::gui::qt::QSofaListView::UpdateOpenedDialogs ; (; ). slot . ◆ WakeUpNode. void sofa::gui::qt::QSofaListView::WakeUpNode ; (; ). protectedslot . sofaguiqtQSofaListView; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:11719,perform,performance,11719,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,2,['perform'],['performance']
Performance,. ◆ d_highOrderTetrahedronPositions. Data< type::vector< HighOrderTetrahedronPosition > > sofa::core::loader::MeshLoader::d_highOrderTetrahedronPositions. High order tetrahedron points of the mesh loaded. . ◆ d_highOrderTrianglePositions. Data< type::vector< HighOrderTrianglePosition > > sofa::core::loader::MeshLoader::d_highOrderTrianglePositions. High order triangle points of the mesh loaded. . ◆ d_normals. Data< type::vector<sofa::type::Vec3 > > sofa::core::loader::MeshLoader::d_normals. Normals of the mesh loaded. . ◆ d_onlyAttachedPoints. Data< bool > sofa::core::loader::MeshLoader::d_onlyAttachedPoints. Only keep points attached to elements of the mesh. . ◆ d_pentahedra. Data< type::vector< Pentahedron > > sofa::core::loader::MeshLoader::d_pentahedra. Pentahedra of the mesh loaded. . ◆ d_pentahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pentahedraGroups. Groups of Pentahedra. . ◆ d_polygons. Data< type::vector< type::vector<Topology::ElemID> > > sofa::core::loader::MeshLoader::d_polygons. Polygons of the mesh loaded. . ◆ d_polygonsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_polygonsGroups. Groups of Polygons. . ◆ d_polylines. Data< type::vector< Polyline > > sofa::core::loader::MeshLoader::d_polylines. Polylines of the mesh loaded. . ◆ d_positions. Data< type::vector< Vec3 > > sofa::core::loader::MeshLoader::d_positions. Vertices of the mesh loaded. . ◆ d_previousTransformation. type::Matrix4 sofa::core::loader::MeshLoader::d_previousTransformation. protected . to be able to call reinit w/o applying several time the same transform . ◆ d_pyramids. Data< type::vector< Pyramid > > sofa::core::loader::MeshLoader::d_pyramids. Pyramids of the mesh loaded. . ◆ d_pyramidsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pyramidsGroups. Groups of Pyramids. . ◆ d_quads. Data< type::vector< Quad > > sofa::core::loader::MeshLoader::d_quads. Quads of the mesh loaded.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:22247,load,loader,22247,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,"...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:3273,perform,performances,3273,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,4,['perform'],['performances']
Performance,"...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inhe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html:11085,load,loader,11085,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,1,['load'],['loader']
Performance,"...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; virtual std::string getPathName () const;  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory.html:3189,Load,Loading,3189,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer_1_1_id_1_1_id_factory.html,1,['Load'],['Loading']
Performance,"..;  ; std::string getFileMass () const;  ; void loadRigidMass (const std::string &filename);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void initDefaultImpl ();  ; Check and standard initialization functions from mass information; virtual bool checkVertexMass ();  ; virtual void initFromVertexMass ();  ; virtual bool checkTotalMass ();  ; virtual void initFromTotalMass ();  ;  Public Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(Mass, DataTypes), SOFA_TEMPLATE(ForceField, DataTypes), BaseMass);  ; void initGnuplot (const std::string path) override;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; void exportGnuplot (const MechanicalParams *mparams, SReal time) override;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; void addGravityToV (const MechanicalParams *mparams, MultiVecDerivId) override;  perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. More...;  ; SReal getElementMass (sofa::Index) const override;  recover the mass of an element More...;  ; void getElementMass (sofa::Index index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; void addMDx (const MechanicalParams *mparams, MultiVecDerivId fid, SReal factor) override;  f += factor M dx More...;  ; void accFromF (const MechanicalParams *mparams, MultiVecDerivId aid) override;  ; void addDForce (const MechanicalParams *, DataVecDeriv &, const DataVecDeriv &) override;  Mass forces (gravity) often have null derivative. More...;  ; void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getKineticEnergy (const MechanicalParams *mparams) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html:9508,perform,perform,9508,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,1,['perform'],['perform']
Performance,/page; . /15; ; SOFA - Topic: [SOLVED] Deformable object not colliding. /4; ; SOFA - Topic: [SOLVED] Deformable object not colliding. SOFA - Topic: [SOLVED] Deformable object not colliding. /deformable-objects; . /feed; ; [SOLVED] Deformable objects. – SOFA. /page; . /16; ; SOFA - Topic: [SOLVED] Deformable objects. /5; ; SOFA - Topic: [SOLVED] Deformable objects. SOFA - Topic: [SOLVED] Deformable objects. /deformablerigid-object-surface-attachment; ; SOFA - Topic: Deformable/rigid object surface attachment. /deformed-mesh; ; SOFA - Topic: deformed mesh. /deforming-object-when-more-than-a-certain-force-is-applied; ; SOFA - Topic: Deforming object when more than a certain force is applied. /deform-the-mesh-data; ; SOFA - Topic: [SOLVED] deform the mesh data. /deleting-springs-via-sofapython3; ; SOFA - Topic: [SOLVED] Deleting Springs via SofaPython3. /dependency-error-when-loading-softrobots-dll; . /feed; ; Dependency error when loading SoftRobots.dll – SOFA. SOFA - Topic: Dependency error when loading SoftRobots.dll. /deprecated-frame-plugin; . /feed; ; [SOLVED] Deprecated Frame plugin ? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. /2; ; SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. /depth-of-field; ; SOFA - Topic: Depth Of Field. /detailed-document; ; SOFA - Topic: detailed document. /determine-visibility-of-objects-in-the-scene; ; SOFA - Topic: Determine Visibility of Objects in the Scene. /determining-if-the-include-file-pthread-h-exists-failed; ; SOFA - Topic: [SOLVED] Determining if the include file pthread.h exists failed. /develope-a-new-fem-plugin; . /feed; ; [SOLVED] Develop a new FEM plugin – SOFA. /page; . /14; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. /4; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. SOFA - Topic: [SOLVED] Develop a new FEM plugin. /difference-between-master-and-stable-versions; ; SOFA - Topic: [SOLVED] difference between master and stable ve,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:287141,load,loading,287141,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['load'],['loading']
Performance,"147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Functions |; Variables . sofa::component::linearsolver Namespace Reference . Namespaces;  direct;  ;  iterative;  ;  ordering;  ;  preconditioner;  . Classes; class  MultExpr;  ; class  GraphScatteredMatrix;  ; class  GraphScatteredVector;  ; class  MatrixInvertData;  ; class  BaseMatrixLinearSolver;  ; class  NoThreadManager;  Empty class used for default solver implementation without multi-threading support. More...;  ; class  MatrixLinearSolverInternalData;  ; class  MatrixLinearSolver;  ; class  MatrixLinearSolver< Matrix, Vector, NoThreadManager >;  . Functions; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  ; template<typename Derived , typename OtherDerived > ; const Eigen::SparseDenseProductReturnType_MT< Derived, OtherDerived >::Type mul_EigenSparseDenseMatrix_MT (const Eigen::SparseMatrixBase< Derived > &lhs, const Eigen::MatrixBase< OtherDerived > &rhs, unsigned nbThreads=OMP_DEFAULT_NUM_THREADS_EIGEN_SPARSE_DENSE_PRODUCT);  Eigen::Sparse * Dense Matrices multiplication (openmp multi-threaded version) More...;  . Variables; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API MatrixLinearSolver< GraphScatteredMatrix, GraphScatteredVector, NoThreadManager >;  ; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API MatrixLinearSolver< FullMatrix< SReal >, FullVector< SReal >, NoThreadManager >;  ; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API MatrixLinearSolver< SparseMatrix< SReal >, FullVector< SReal >, NoThreadManager >;  ; template class SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API MatrixLinearSolver< CompressedRowSparseMatrix< SReal >, FullVector< SReal >, NoThreadManager >;  ; template class SOFA_COMPONENT_LINEARSOLVER",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver.html:1411,multi-thread,multi-threaded,1411,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver.html,2,['multi-thread'],['multi-threaded']
Performance,"1};  . Protected Attributes; type::vector< sofa::type::Vec3 > m_savedPositions;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SphereLoader, sofa::core::loader::BaseLoader);  ; bool load () override;  ; void applyTransform ();  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; virtual bool canLoad ();  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html:2761,load,loader,2761,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html,3,['load'],"['load', 'loader']"
Performance,"2 (GLint variable, GLsizei count, const float *value);  ; void SetFloatVector3 (GLint variable, GLsizei count, const float *value);  ; void SetFloatVector4 (GLint variable, GLsizei count, const float *value);  . void SetMatrix2 (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);  ; void SetMatrix3 (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);  ; void SetMatrix4 (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);  ; void SetMatrix2x3 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix3x2 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix2x4 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix4x2 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix3x4 (GLint, GLsizei, GLboolean, const GLfloat *);  ; void SetMatrix4x3 (GLint, GLsizei, GLboolean, const GLfloat *);  . void TurnOn ();  ; void TurnOff ();  . Static Public Member Functions; static bool InitGLSL ();  This is used to load all of the extensions and checks compatibility. More...;  ; static GLhandleARB GetActiveShaderProgram ();  ; static void SetActiveShaderProgram (GLhandleARB s);  . Protected Member Functions; bool CompileShader (GLint target, const ShaderContents &shaderContent, const std::string &header);  This function compiles a shader and check the log. More...;  . Attribute details. ◆ header. std::string sofa::gl::GLSLShader::header. protected . ◆ m_filelistener. std::shared_ptr<sofa::helper::system::FileEventListener> sofa::gl::GLSLShader::m_filelistener. protected . ◆ m_hProgramObject. GLhandleARB sofa::gl::GLSLShader::m_hProgramObject. protected . This handle stores our program information which encompasses our shader. . ◆ m_hShaderContents. std::map<GLint, ShaderContents> sofa::gl::GLSLShader::m_hShaderContents. protected . ◆ m_hShaders. std::map<GLint, GLhandleARB> sofa::gl::GLSLShader::m_hShaders. protected . Constructor details. ◆ GLSLShader(). sofa::gl::GLSLShader::GLSLShad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:4693,load,load,4693,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,2,['load'],['load']
Performance,"24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_size. template<class DataTypes > . SReal sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::m_size. protected . ◆ m_stiffness. template<class DataTypes > . SReal sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::m_stiffness. protected . Constructor details. ◆ AttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::AttachBodyPerformer ; (; BaseMouseInteractor * ; i). ◆ ~AttachBodyPerformer(). template<class DataTypes > . virtual sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::~AttachBodyPerformer ; (; ). virtualdefault . Function details. ◆ configure(). template<class DataTypes > . virtual void sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::configure ; (; sofa::component::setting::MouseButtonSetting * ; setting). inlineoverridevirtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ setArrowSize(). template<class DataTypes > . void sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::setArrowSize ; (; float ; s). inline . ◆ setStiffness(). template<class DataTypes > . void sofa::gui::component::performer::AttachBodyPerfor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html:3014,perform,performer,3014,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,2,['perform'],['performer']
Performance,"4.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_mstate1. template<class DataTypes > . sofa::core::behavior::MechanicalState<DataTypes>* sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::m_mstate1. protected . ◆ m_mstate2. template<class DataTypes > . sofa::core::behavior::MechanicalState<DataTypes> * sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::m_mstate2. protected . Constructor details. ◆ ConstraintAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::ConstraintAttachBodyPerformer ; (; BaseMouseInteractor * ; i). ◆ ~ConstraintAttachBodyPerformer(). template<class DataTypes > . virtual sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::~ConstraintAttachBodyPerformer ; (; ). virtualdefault . Function details. ◆ startPartial(). template<class DataTypes > . bool sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >::startPartial ; (; const BodyPicked & ; picked). overridevirtual . Implements sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >. sofaguicomponentperformerConstraintAttachBodyPerformer; Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html:3192,perform,performer,3192,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,10,['perform'],['performer']
Performance,6; ; SOFA - Topic Tag: Linux_ubuntu. /27; ; SOFA - Topic Tag: Linux_ubuntu. /28; ; SOFA - Topic Tag: Linux_ubuntu. /29; ; SOFA - Topic Tag: Linux_ubuntu. /3; ; SOFA - Topic Tag: Linux_ubuntu. /30; ; SOFA - Topic Tag: Linux_ubuntu. /4; ; SOFA - Topic Tag: Linux_ubuntu. /5; ; SOFA - Topic Tag: Linux_ubuntu. /6; ; SOFA - Topic Tag: Linux_ubuntu. /7; ; SOFA - Topic Tag: Linux_ubuntu. /8; ; SOFA - Topic Tag: Linux_ubuntu. /9; ; SOFA - Topic Tag: Linux_ubuntu. SOFA - Topic Tag: Linux_ubuntu. /linux-omni-drivers; . /feed; ; Linux Omni drivers – SOFA. SOFA - Topic Tag: Linux Omni drivers. /linux-soft-robots; . /feed; ; Linux Soft Robots – SOFA. SOFA - Topic Tag: Linux Soft Robots. /linux-ubuntu; . /feed; ; Linux Ubuntu – SOFA. SOFA - Topic Tag: Linux Ubuntu. /liver; . /feed; ; liver – SOFA. SOFA - Topic Tag: liver. /llvm; . /feed; ; LLVM – SOFA. SOFA - Topic Tag: LLVM. /lmconstraint; . /feed; ; LMConstraint – SOFA. SOFA - Topic Tag: LMConstraint. /loader; . /feed; ; loader – SOFA. SOFA - Topic Tag: loader. /local-deformation; . /feed; ; local deformation – SOFA. SOFA - Topic Tag: local deformation. /local-frame; . /feed; ; local frame – SOFA. SOFA - Topic Tag: local frame. /local-mesh-refinement; . /feed; ; local mesh refinement – SOFA. SOFA - Topic Tag: local mesh refinement. /location; . /feed; ; location – SOFA. SOFA - Topic Tag: location. /m_contactsvectorbuffer; . /feed; ; M_ContactsVectorBuffer – SOFA. SOFA - Topic Tag: M_ContactsVectorBuffer. /mac; . /feed; ; Mac – SOFA. SOFA - Topic Tag: Mac. /macos; . /feed; ; MacOS – SOFA. /page; . /2; ; SOFA - Topic Tag: MacOS. /3; ; SOFA - Topic Tag: MacOS. /4; ; SOFA - Topic Tag: MacOS. /5; ; SOFA - Topic Tag: MacOS. SOFA - Topic Tag: MacOS. /mac-os; . /feed; ; mac os – SOFA. SOFA - Topic Tag: mac os. /macos-launch-clang-cgimage-exception; . /feed; ; macOS launch clang cgImage exception – SOFA. SOFA - Topic Tag: macOS launch clang cgImage exception. /macos-qt; . /feed; ; macos qt – SOFA. SOFA - Topic Tag: macos qt. /make-error;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:454300,load,loader,454300,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['load'],['loader']
Performance,"7. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference . #include <RemovePrimitivePerformer.h>. Inheritance diagram for sofa::gui::component::performer::RemovePrimitivePerformerConfiguration:. [legend]; Detailed Description; Class to configure primitive removal. Several parameters:; topologicalOperation: if 0, other parameters aren't use. 0 = ""remove on element"" 1 = ""remove a zone of elements""; volumicMesh: false = surfacique mesh true = volumique mesh; selectorScale: size of zone . Protected Attributes; int topologicalOperation;  ; bool volumicMesh;  ; double selectorScale;  . Public Member Functions;  RemovePrimitivePerformerConfiguration ();  ; void setTopologicalOperation (int m);  ; void setVolumicMesh (bool v);  ; void setScale (double s);  . Attribute details. ◆ selectorScale. double sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::selectorScale. protected . ◆ topologicalOperation. int sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::volumicMesh. protected . Constructor details. ◆ RemovePrimitivePerformerConfiguration(). sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::RemovePrimitivePerformerConfiguration ; (; ). inline . Function details. ◆ setScale(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setScale ; (; double ; s). inline . ◆ setTopologicalOperation(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setTopologicalOperation ; (; int ; m). inline . ◆ setVolumicMesh(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setVolumicMesh ; (; bool ; v). inline . sofaguicomponentperformerRemovePrimitivePerformerConfiguration",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html:1104,perform,performer,1104,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html,2,['perform'],['performer']
Performance,: Member List; SOFA API: sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::BaseMouseInteractor Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::ComponentMouseInteraction Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::FixParticlePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::FixParticlePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformer Class Reference; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InteractionPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::StartNavigationPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::SuturePointPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TInteractionPerformer< DataTypes > ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:137232,perform,performer,137232,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['perform'],['performer']
Performance,: Member List; SOFA API: sofa::gui::component::performer::FixParticlePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::FixParticlePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformer Class Reference; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InteractionPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::StartNavigationPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::SuturePointPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TInteractionPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TopologicalChangeManager Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::AboutSOFADialog Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::BrowserHistory Class Reference; SOFA API: sofa::gui::qt::BrowserHistoryEntry Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::qt::CaptureOptionsWidget Class Reference; SOFA API: ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:137708,perform,performer,137708,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['perform'],['performer']
Performance,: sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InteractionPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::StartNavigationPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::SuturePointPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TInteractionPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TopologicalChangeManager Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::AboutSOFADialog Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::BrowserHistory Class Reference; SOFA API: sofa::gui::qt::BrowserHistoryEntry Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::qt::CaptureOptionsWidget Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::ChartsWidget Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::ClickableTextEdit Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::ColourPickingRenderCallBack Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::DataFileNameWidget Class Reference; SOFA API: Member List; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:138059,perform,performer,138059,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['perform'],['performer']
Performance,":. [legend]. Public Member Functions; bool readFile (const char *filename) override;  ;  Public Member Functions inherited from sofa::component::io::mesh::basevtkreader::BaseVTKReader; BaseVTKDataIO * newVTKDataIO (const string &typestr);  ; BaseVTKDataIO * newVTKDataIO (const string &typestr, int num);  ;  BaseVTKReader ();  ; bool readVTK (const char *filename);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html:1218,load,loader,1218,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html,2,['load'],['loader']
Performance,"::Base; GIDMeshLoader()sofa::component::io::mesh::GIDMeshLoaderprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; HEXAHEDRA enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; Hexahedron typedefsofa::component::io::mesh::GIDMeshLoader; HighOrderEdgePosition typedefsofa::core::loader::MeshLoader; HighOrderHexahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderQuadPosition typedefsofa::core::loader::MeshLoader; HighOrderTetrahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderTrianglePosition typedefsofa::core::loader::MeshLoader; init() overridesofa::core::loader::MeshLoadervirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:11349,load,loader,11349,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,"::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; performerssofa::gui::component::performer::BaseMouseInteractorprotected; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::BehaviorModelvirtual; removeInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setBodyPicked(BodyPicked picked)sofa::gui::component::performer::BaseMouseInteractorinline; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDistanceFromMouse(SReal d)sofa::gui::component::performer::BaseMouseInteractorinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMouseAttached(bool b)sofa::gui::component::performer::BaseMouseInteractorinline; setMouseRayModel(MouseCollisionModel *model)sofa::gui::component::performer::BaseMouseInteractorinline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMouseInteractor, core::BehaviorModel)sofa::gui::component::performer::BaseMouseInteractor;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:10200,perform,performer,10200,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,4,['perform'],['performer']
Performance,"::Base; setDirection(Coord dir)sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; setDminAndDmax(const Real _dmin, const Real _dmax)sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; SetIndex typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; SetIndexArray typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FixedPlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; sofa::core::be",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html:16124,load,loader,16124,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,1,['load'],['loader']
Performance,"::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(StringMeshCreator, sofa::core::loader::MeshLoader)sofa::component::io::mesh::StringMeshCreator; sofa::core::loader::MeshLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; StringMeshCreator()sofa::component::io::mesh::StringMeshCreatorprotected; Tetrahedron typedefsofa::core::loader::MeshLoader; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::core::loader::MeshLoader; type()sofa::component::io::mesh::StringMeshCreatorinlinevirtual; updateElements()sofa::core::loader::MeshLoadervirtual; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateMesh()sofa::core::loader::MeshLoadervirtual; updateNormals()sofa::core::loader::MeshLoadervirtual; updatePoints()sofa::core::loader::MeshLoadervirtual; Vec3 typedefsofa::core::loader::MeshLoader; VecData typedefsofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:16049,load,loader,16049,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['load'],['loader']
Performance,"::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(VectorSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::PairInteractionForceField, DataTypes));  ; bool load (const char *filename);  ; core::behavior::MechanicalState< DataTypes > * getObject1 ();  ; core::behavior::MechanicalState< DataTypes > * getObject2 ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void createDefaultSprings ();  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; Real g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:4851,load,load,4851,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['load'],['load']
Performance,"::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; insertQuad(unsigned a, unsigned b, unsigned c, unsigned d)sofa::component::io::mesh::GridMeshCreatorprotected; insertTriangle(unsigned a, unsigned b, unsigned c)sofa::component::io::mesh::GridMeshCreatorprotected; insertUniqueEdge(unsigned a, unsigned b)sofa::component::io::mesh::GridMeshCreatorprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &att",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:12937,load,load,12937,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['load']
Performance,"::BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(const Real ratio)sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(const Real modulus)sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >inline; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TriangularTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::beh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html:16425,load,loader,16425,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,1,['load'],['loader']
Performance,::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDistanceFromMouse() constsofa::gui::component::performer::BaseMouseInteractorinline; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getMouseContainer()=0sofa::gui::component::performer::BaseMouseInteractorpure virtual; getMouseRayModel()sofa::gui::component::performer::BaseMouseInteractorinline; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(core::objectmodel::Event *e) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotect,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html:5203,perform,performer,5203,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor-members.html,2,['perform'],['performer']
Performance,"::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, and sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >. ◆ add() [5/7]. void sofa::linearalgebra::BaseMatrix::add ; (; Index ; row, . Index ; col, . const type::Mat6x6d & ; _M . ). virtual . Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [6/7]. void sofa::linearalgebra::BaseMatrix::add ; (; Index ; row, . Index ; col, . const type::Mat6x6f & ; _M . ). virtual . Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [7/7]. virtual void sofa::linearalgebra::BaseMatrix::add ; (; Index ; row, . Index ; col, . double ; v . ). pure virtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implemented in sofa::linearalgebra::RotationMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::core::behavior::ApplyConstraintCompat, sofa::core::behavior::AddToMatrixCompatMatrix< c >, sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:18357,perform,performances,18357,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['perform'],['performances']
Performance,"::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, const Tetrahedron &p)sofa::core::loader::MeshLoaderprotected; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, Topology::TetrahedronID p0, Topology::TetrahedronID p1, Topology::TetrahedronID p2, Topology::TetrahedronID p3)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, const Triangle &p)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, Topology::TriangleID p0, Topology::TriangleID p1, Topology::TriangleID p2)sofa::core::loader::MeshLoaderprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::GridMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:3630,load,loader,3630,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,"::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, const Tetrahedron &p)sofa::core::loader::MeshLoaderprotected; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, Topology::TetrahedronID p0, Topology::TetrahedronID p1, Topology::TetrahedronID p2, Topology::TetrahedronID p3)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, const Triangle &p)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, Topology::TriangleID p0, Topology::TriangleID p1, Topology::TriangleID p2)sofa::core::loader::MeshLoaderprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::StringMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:3634,load,loader,3634,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['load'],['loader']
Performance,"::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, const Tetrahedron &p)sofa::core::loader::MeshLoaderprotected; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, Topology::TetrahedronID p0, Topology::TetrahedronID p1, Topology::TetrahedronID p2, Topology::TetrahedronID p3)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, const Triangle &p)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, Topology::TriangleID p0, Topology::TriangleID p1, Topology::TriangleID p2)sofa::core::loader::MeshLoaderprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; CIRCLE en",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:3626,load,loader,3626,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,"::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, const Tetrahedron &p)sofa::core::loader::MeshLoaderprotected; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, Topology::TetrahedronID p0, Topology::TetrahedronID p1, Topology::TetrahedronID p2, Topology::TetrahedronID p3)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, const Triangle &p)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, Topology::TriangleID p0, Topology::TriangleID p1, Topology::TriangleID p2)sofa::core::loader::MeshLoaderprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTrac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:3767,load,loader,3767,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,9,['load'],['loader']
Performance,"::ElemID ; p0, . Topology::ElemID ; p1, . Topology::ElemID ; p2, . Topology::ElemID ; p3, . Topology::ElemID ; p4 . ). protected . ◆ addQuad() [1/2]. void sofa::core::loader::MeshLoader::addQuad ; (; type::vector< Quad > & ; pQuads, . const Quad & ; p . ). protected . ◆ addQuad() [2/2]. void sofa::core::loader::MeshLoader::addQuad ; (; type::vector< Quad > & ; pQuads, . Topology::QuadID ; p0, . Topology::QuadID ; p1, . Topology::QuadID ; p2, . Topology::QuadID ; p3 . ). protected . ◆ addTetrahedron() [1/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . const Tetrahedron & ; p . ). protected . ◆ addTetrahedron() [2/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . Topology::TetrahedronID ; p0, . Topology::TetrahedronID ; p1, . Topology::TetrahedronID ; p2, . Topology::TetrahedronID ; p3 . ). protected . ◆ addTriangle() [1/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . const Triangle & ; p . ). protected . ◆ addTriangle() [2/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . Topology::TriangleID ; p0, . Topology::TriangleID ; p1, . Topology::TriangleID ; p2 . ). protected . ◆ applyTransformation(). void sofa::core::loader::MeshLoader::applyTransformation ; (; sofa::type::Matrix4 const & ; T). virtual . Apply Homogeneous transformation to the positions. . ◆ canLoad(). bool sofa::core::loader::MeshLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clearBuffers(). void sofa::core::loader::MeshLoader::clearBuffers ; (; ). finalprotectedvirtual . ◆ copyMeshToData(). void sofa::core::loader::MeshLoader::copyMeshToData ; (; helper::io::Mesh & ; _mesh). protected . Temporary method that will copy all buffers from a io::Mesh into the corresponding Data. Will be removed as soon as work on unifying meshloader is finished",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:27849,load,loader,27849,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,"::FixParticlePerformer ; (; BaseMouseInteractor * ; i). Function details. ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::FixParticlePerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::FixParticlePerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getFixationPoints(). template<class DataTypes > . sofa::component::statecontainer::MechanicalObject< DataTypes > * sofa::gui::component::performer::FixParticlePerformer< DataTypes >::getFixationPoints ; (; const BodyPicked & ; b, . type::vector< unsigned int > & ; points, . typename DataTypes::Coord & ; fixPoint . ). protected . ◆ getFixationPointsSphere(). template<class DataTypes > . static void sofa::gui::component::performer::FixParticlePerformer< DataTypes >::getFixationPointsSphere ; (; sofa::core::sptr< sofa::core::CollisionModel > ; model, . const Index ; idx, . type::vector< Index > & ; points, . Coord & ; fixPoint . ). inlinestatic . ◆ getFixationPointsTriangle(). template<class DataTypes > . template<typename TTriangleCollisionModel > . static void sofa::gui::component::performer::FixParticlePerformer< DataTypes >::getFixationPointsTriangle ; (; sofa::core::sptr< sofa::core::CollisionModel > ; model, . const Index ; idx, . type::vector< Index > & ; points, . Coord & ; fixPoint . ). inlinestatic . ◆ getMapInstance(). template<class DataTypes > . static MapTypeFunction* sofa::gui::component::performer::FixParticlePerformer< DataTypes >::getMapInstance ; (; ). inlinestatic . ◆ RegisterSupportedModel(). template<class DataTypes > . template<typename TCollisionModel > . static int sofa::gui::component::performer::FixParticlePerformer< DataTypes >::RegisterSupportedModel ; (; GetFixationPointsOnModelFunction ; func). inlinestatic . ◆ start(). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html:4693,perform,performer,4693,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer.html,2,['perform'],['performer']
Performance,"::HexahedronID p3, Topology::HexahedronID p4, Topology::HexahedronID p5, Topology::HexahedronID p6, Topology::HexahedronID p7)sofa::core::loader::MeshLoaderprotected; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa::core::loader::MeshLoaderprotected; addPolyline(type::vector< Polyline > &pPolylines, Polyline p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, const Pyramid &p)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:2110,load,loader,2110,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,11,['load'],['loader']
Performance,"::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3759,load,load,3759,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,2,['load'],['load']
Performance,::MeshLoader Class Referenceabstract . #include <MeshLoader.h>. Inheritance diagram for sofa::core::loader::MeshLoader:. [legend]. Public Attributes; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ; Data< type::vector< sofa::type::Vec3 > > d_normals;  Normals of the mesh loaded. More...;  ; Data< type::vector< PrimitiveGroup > > d_edgesGroups;  Groups of Edges. More...;  ; Data< type::vector< PrimitiveGroup > > d_trianglesGroups;  Groups of Triangles. More...;  ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:1330,load,loaded,1330,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loaded']
Performance,"::MeshLoader::MeshLoader ; (; ). protected . Function details. ◆ addEdge() [1/2]. void sofa::core::loader::MeshLoader::addEdge ; (; type::vector< Edge > & ; pEdges, . const Edge & ; p . ). protected . ◆ addEdge() [2/2]. void sofa::core::loader::MeshLoader::addEdge ; (; type::vector< Edge > & ; pEdges, . Topology::EdgeID ; p0, . Topology::EdgeID ; p1 . ). protected . ◆ addHexahedron() [1/2]. void sofa::core::loader::MeshLoader::addHexahedron ; (; type::vector< Hexahedron > & ; pHexahedra, . const Hexahedron & ; p . ). protected . ◆ addHexahedron() [2/2]. void sofa::core::loader::MeshLoader::addHexahedron ; (; type::vector< Hexahedron > & ; pHexahedra, . Topology::HexahedronID ; p0, . Topology::HexahedronID ; p1, . Topology::HexahedronID ; p2, . Topology::HexahedronID ; p3, . Topology::HexahedronID ; p4, . Topology::HexahedronID ; p5, . Topology::HexahedronID ; p6, . Topology::HexahedronID ; p7 . ). protected . ◆ addPentahedron() [1/2]. void sofa::core::loader::MeshLoader::addPentahedron ; (; type::vector< Pentahedron > & ; pPentahedra, . const Pentahedron & ; p . ). protected . ◆ addPentahedron() [2/2]. void sofa::core::loader::MeshLoader::addPentahedron ; (; type::vector< Pentahedron > & ; pPentahedra, . Topology::ElemID ; p0, . Topology::ElemID ; p1, . Topology::ElemID ; p2, . Topology::ElemID ; p3, . Topology::ElemID ; p4, . Topology::ElemID ; p5 . ). protected . ◆ addPolygon(). void sofa::core::loader::MeshLoader::addPolygon ; (; type::vector< type::vector< Topology::ElemID > > & ; pPolygons, . const type::vector< Topology::ElemID > & ; p . ). protected . ◆ addPolyline(). void sofa::core::loader::MeshLoader::addPolyline ; (; type::vector< Polyline > & ; pPolylines, . Polyline ; p . ). protected . ◆ addPosition() [1/2]. void sofa::core::loader::MeshLoader::addPosition ; (; type::vector< sofa::type::Vec3 > & ; pPositions, . const sofa::type::Vec3 & ; p . ). protected . ◆ addPosition() [2/2]. void sofa::core::loader::MeshLoader::addPosition ; (; type::vector< sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:25484,load,loader,25484,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::GridMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglePatternsofa::component::io::mesh::GridMeshCreator; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GridMeshCreatorprotectedvirtual; doLoad() overridesofa::component::io::mesh::GridMeshCreatorvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::cor,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:6606,load,loader,6606,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::StringMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::StringMeshCreatorprotectedvirtual; doLoad() overridesofa::component::io::mesh::StringMeshCreatorvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Ba,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:6612,load,loader,6612,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['load'],['loader']
Performance,::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; detectFileType(const char *filename)sofa::component::io::mesh::MeshVTKLoaderprotected; doClearBuffers() overridesofa::component::io::mesh::MeshVTKLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshVTKLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; edgesDatasofa::component::io::mesh::MeshVTKLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:6584,load,loader,6584,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GIDMeshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::GIDMeshLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::io::mesh::GIDMeshLoader; ElementType enum namesofa::component::io::mesh::GIDMeshLoaderprotected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:6707,load,loader,6707,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshGmshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshGmshLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmod,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:6725,load,loader,6725,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance,::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOffLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshOffLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:6584,load,loader,6584,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,2,['load'],['loader']
Performance,::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshXspLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshXspLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:6584,load,loader,6584,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['load'],['loader']
Performance,"::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html:6564,load,loader,6564,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,1,['load'],['loader']
Performance,"::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; detectFileType(const char *filename)sofa::component::io::mesh::MeshVTKLoaderprotected; doClearBuffers() overridesofa::component::io::mesh::MeshVTKLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshVTKLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; edgesDatasofa::component::io::mesh::MeshVTKLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *lin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:6807,load,loader,6807,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,"::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GIDMeshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::GIDMeshLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::io::mesh::GIDMeshLoader; ElementType enum namesofa::component::io::mesh::GIDMeshLoaderprotected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:6930,load,loader,6930,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,"::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshGmshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshGmshLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:6948,load,loader,6948,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance,"::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOffLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshOffLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:6807,load,loader,6807,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,2,['load'],['loader']
Performance,"::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshXspLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshXspLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:6807,load,loader,6807,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['load'],['loader']
Performance,"::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html:6787,load,loader,6787,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,1,['load'],['loader']
Performance,"::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; PRISM enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; Ptr typedefsofa::core::objectmodel::Base; PYRAMID enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::component::io::mesh::GIDMeshLoader; QUADRILATERAL enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; readGID(std::ifstream &file)sofa::component::io::mesh::GIDMeshLoaderprotected; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:14783,load,loader,14783,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,"::MeshSTLLoader:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > _forceBinary;  ; sofa::core::objectmodel::RenamedData< unsigned int > _headerSize;  ; Data< unsigned int > d_headerSize;  Size of the header binary file (just before the number of facet). More...;  ; Data< bool > d_forceBinary;  Force reading in binary mode. Even in first keyword of the file is solid. More...;  ; Data< bool > d_mergePositionUsingMap;  Since positions are duplicated in a STL, they have to be merged. Using a map to do so will temporarily duplicate memory but should be more efficient. Disable it if memory is really an issue. More...;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:1415,load,loaded,1415,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,1,['load'],['loaded']
Performance,"::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::GridMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglePatternsofa::component::io::mesh::GridMeshCreator; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoade",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:6141,load,loader,6141,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,"::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::StringMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::Stri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:6147,load,loader,6147,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['load'],['loader']
Performance,"::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; detectFileType(const char *filename)sofa::component::io::mesh::MeshVTKLoaderprotected; doClearBuffers() overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:6119,load,loader,6119,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,"::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GIDMeshLoaderprotectedvirtual; doLoad() overridesofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:6242,load,loader,6242,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,"::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshGmshLoaderprotectedvirtual; doLoad() overridesofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:6260,load,loader,6260,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance,"::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOffLoaderprotectedvirtual; doLoad() overridesofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:6119,load,loader,6119,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,2,['load'],['loader']
Performance,"::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshXspLoaderprotectedvirtual; doLoad() overridesofa::componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:6119,load,loader,6119,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['load'],['loader']
Performance,"::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html:6099,load,loader,6099,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,1,['load'],['loader']
Performance,"::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint getIboEdges ();  ; GLuint getIboTriangles ();  ; GLuint getIboQuads ();  ; const std::vector< sofa::gl::Texture * > & getTextures () const;  ; void createVertexBuffer ();  ; void createEdgesIndicesBuffer ();  ; void createTrianglesIndicesBuffer ();  ; void createQuadsIndicesBuffer ();  ; void initVertexBuffer ();  ; void initEdgesIndicesBuffer ();  ; void initTrianglesIndicesBuffer ();  ; void initQuadsIndicesBuffer ();  ; void updateVertexBuffer ();  ; void updateEdgesIndicesBuffer ();  ; void updateTrianglesIndicesBuffer ();  ; void updateQuadsIndicesBuffer ();  ;  Public Member Functions inherited from sofa::component::visual::VisualModelImpl;  SOFA_CLASS2 (VisualModelImpl, core::visual::VisualModel, sofa::core::visual::VisualState< defaulttype::Vec3Types >);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; bool hasOpaque ();  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ; void drawShadow (const core::visual::VisualParams *vparams) override;  Display shadow-casting surfaces. More...;  ; bool load (const std::string &filename, const std::string &loader, const std::string &textureName);",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:11897,load,loadTexture,11897,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,4,['load'],"['loadTexture', 'loadTextures']"
Performance,"::PluginManager::loadPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory and register into the map; if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for erro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:7241,load,loadPluginByName,7241,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,2,['load'],['loadPluginByName']
Performance,"::QuadID ; p0, . Topology::QuadID ; p1, . Topology::QuadID ; p2, . Topology::QuadID ; p3 . ). protected . ◆ addTetrahedron() [1/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . const Tetrahedron & ; p . ). protected . ◆ addTetrahedron() [2/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . Topology::TetrahedronID ; p0, . Topology::TetrahedronID ; p1, . Topology::TetrahedronID ; p2, . Topology::TetrahedronID ; p3 . ). protected . ◆ addTriangle() [1/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . const Triangle & ; p . ). protected . ◆ addTriangle() [2/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . Topology::TriangleID ; p0, . Topology::TriangleID ; p1, . Topology::TriangleID ; p2 . ). protected . ◆ applyTransformation(). void sofa::core::loader::MeshLoader::applyTransformation ; (; sofa::type::Matrix4 const & ; T). virtual . Apply Homogeneous transformation to the positions. . ◆ canLoad(). bool sofa::core::loader::MeshLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clearBuffers(). void sofa::core::loader::MeshLoader::clearBuffers ; (; ). finalprotectedvirtual . ◆ copyMeshToData(). void sofa::core::loader::MeshLoader::copyMeshToData ; (; helper::io::Mesh & ; _mesh). protected . Temporary method that will copy all buffers from a io::Mesh into the corresponding Data. Will be removed as soon as work on unifying meshloader is finished. . ◆ getRotation(). virtual Vec3 sofa::core::loader::MeshLoader::getRotation ; (; ); const. inlinevirtual . ◆ getScale(). virtual Vec3 sofa::core::loader::MeshLoader::getScale ; (; ); const. inlinevirtual . ◆ getTransformation(). virtual sofa::type::Matrix4 sofa::core::loader::MeshLoader::getTransformation ; (; ); const. inlinevirtual . ◆ getTranslation(). virtual Vec3 sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:28230,load,loader,28230,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,"::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_forceBinarysofa::component::io::mesh::MeshSTLLoader; d_headerSizesofa::component::io::mesh::MeshSTLLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_mergePositionUsingMapsofa::component::io::mesh::MeshSTLLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:5645,load,loader,5645,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['load'],['loader']
Performance,"::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:5560,load,loader,5560,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,7,['load'],['loader']
Performance,"::behavior::ForceField< DataTypes >. ◆ addGravityToV() [1/2]. template<class DataTypes > . void sofa::core::behavior::Mass< DataTypes >::addGravityToV ; (; const MechanicalParams * ; , . DataVecDeriv & ;  . ). virtual . Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >, sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >, sofa::component::mass::UniformMass< DataTypes >, sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >, sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >, and sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >. ◆ addGravityToV() [2/2]. template<class DataTypes > . void sofa::core::behavior::Mass< DataTypes >::addGravityToV ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; vid . ). overridevirtual . perform v += dt*g operation. Used if mass wants to added G separately from the other forces to v. ; Implements sofa::core::behavior::BaseMass. ◆ addKToMatrix(). template<class DataTypes > . void sofa::core::behavior::Mass< DataTypes >::addKToMatrix ; (; sofa::linearalgebra::BaseMatrix * ; matrix, . SReal ; kFact, . unsigned int & ; offset . ). inlineoverridevirtual . Internal addKToMatrix Overloaded function, usually called from the generic addKToMatrix version. This addKToMatrix version directly gives access to the matrix to fill, the stiffness factor and the offset used to identify where the force field must add its contributions in the matrix. Parameters. matrixthe global stiffness matrix in which the force field adds its contribution. The matrix is global, i.e. different objects can add their contribution into the same large matrix. Each object adds its contribution to a different section of the matrix. That is why, an offset is used to identify where in the matrix the force field must start add",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:24537,perform,perform,24537,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,1,['perform'],['perform']
Performance,::component::io::mesh::MeshSTLLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_mergePositionUsingMapsofa::component::io::mesh::MeshSTLLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataL,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:6733,load,loader,6733,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['load'],['loader']
Performance,::component::performer::MouseInteractor< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::StartNavigationPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::SuturePointPerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::SuturePointPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TComponentMouseInteraction< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TInteractionPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::TopologicalChangeManager Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::AboutSOFADialog Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::BrowserHistory Class Reference; SOFA API: sofa::gui::qt::BrowserHistoryEntry Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::qt::CaptureOptionsWidget Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::ChartsWidget Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::ClickableTextEdit Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::ColourPickingRenderCallBack Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::DataFileNameWidget Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::DataWidget Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::DisplayFlagWidget Class Reference; SOFA API: Member List; SOFA API: sofa::gui::qt::DisplayFlagsDataWidget Class Reference; SOFA API: Member List; SOFA API: so,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:138318,perform,performer,138318,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['perform'],['performer']
Performance,"::component::rendering3d::SlicedVolumetricModelvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SlicedVolumetricModel()sofa::gl::component::rendering3d::SlicedVolumetricModelprotected; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(SlicedVolumetricModel, core::visual::VisualModel)sofa::gl::component::rendering3d::SlicedVolumetricModel; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; texture_datasofa::gl::component::rendering3d::SlicedVolumetricModelprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html:12694,load,loader,12694,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,1,['load'],['loader']
Performance,"::component::shader::PostProcessManagerinlinevirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(PostProcessManager, core::visual::VisualModel)sofa::gl::component::shader::PostProcessManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finals",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html:11095,load,loader,11095,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,2,['load'],['loader']
Performance,"::contact::BaseRayContactinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDetectionOutputs(DetectionOutputVector *outputs)=0sofa::core::collision::Contactpure virtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setKeepAlive(bool)sofa::core::collision::Contactinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Contact, objectmodel::BaseObject)sofa::core::collision::Contact; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html:10581,load,loader,10581,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,1,['load'],['loader']
Performance,"::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; simulation::Node * m_node { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html:1844,Load,Loading,1844,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,1,['Load'],['Loading']
Performance,"::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:4929,Load,Loading,4929,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,1,['Load'],['Loading']
Performance,"::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMethod(int val)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(Real val)sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_ATTRIBUTE_DISABLED("""", ""v24.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html:19930,load,loader,19930,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,1,['load'],['loader']
Performance,"::core::collision::Contactpure virtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDetectionOutputs(DetectionOutputVector *outputs)=0sofa::core::collision::Contactpure virtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setKeepAlive(bool)sofa::core::collision::Contactinlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Contact, objectmodel::BaseObject)sofa::core::collision::Contact; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html:9935,load,loader,9935,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact-members.html,1,['load'],['loader']
Performance,"::core::loader::BaseLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:8972,load,loader,8972,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,1,['load'],['loader']
Performance,"::core::loader::BaseLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(ImageLoader, BaseLoader)sofa::core::loader::ImageLoader; sofa::core::loader::BaseLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html:8974,load,loader,8974,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader-members.html,1,['load'],['loader']
Performance,"::core::loader::BaseLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(SphereLoader, sofa::core::loader::BaseLoader)sofa::component::io::mesh::SphereLoader; sofa::core::loader::BaseLoader::SOFA_CLASS(BaseObject, Base)sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:9378,load,loader,9378,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,1,['load'],['loader']
Performance,"::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::GridMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglePatternsofa::component::io::mesh::GridMeshCreator; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GridMeshCreatorprotectedvirtual; doLoad() overridesofa::component::io::mesh::GridMeshCreatorvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:7034,load,loader,7034,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,"::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trian2sofa::component::io::mesh::MeshTrianLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_trianglesOnBorderListsofa::component::io::mesh::MeshTrianLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshTrianLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshTrianLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; edgesOnBordersofa::component::io::mesh::MeshTrianLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:7230,load,loader,7230,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['load'],['loader']
Performance,"::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshTrianLoader()sofa::component::io::mesh::MeshTrianLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; neighborTablesofa::component::io::mesh::MeshTrianLoader; notMuted() constsofa::core::objectmodel::Baseinline; p_trian2sofa::component::io::mesh::MeshTrianLoader; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; readTrian(const char *filename)sofa::component::io::mesh::MeshTrianLoaderprotected; readTrian2(const char *filename)sofa::component::io::mesh::MeshTrianLoaderprotected; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:14366,load,loader,14366,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['load'],['loader']
Performance,"::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransform()sofa::component::io::mesh::SphereLoader; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:1388,load,loader,1388,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,1,['load'],['loader']
Performance,"::core::objectmodel::Base; removeElements()sofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >protected; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(SOFA_TEMPLATE(TopologyBoundingTrasher, DataTypes), core::objectmodel::BaseObject)sofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; tetraModifiersofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >protected; TopologyBoundingTrasher()sofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >protected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; triangleModifiersofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >protected; updateInternal()sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html:10878,load,loader,10878,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher-members.html,1,['load'],['loader']
Performance,"::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; resize(int n)=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; swap()=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; write(ofstream &f, int n, int groups, int binary)=0sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIOpure virtual; writeDatas(std::map< std::string, std::string * > &s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html:10106,load,loader,10106,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o-members.html,1,['load'],['loader']
Performance,"::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; RigidToQuatEngine()sofa::component::engine::transform::RigidToQuatEngine< DataTypes >protected; RigidVec3 typedefsofa::component::engine::transform::RigidToQuatEngine< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(RigidToQuatEngine, sofa::core::DataEngine)sofa::component::engine::transform::RigidToQuatEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel::DDGNode; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; Vec3 typedefsofa::component::engine::t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine-members.html:11937,load,loader,11937,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine-members.html,1,['load'],['loader']
Performance,"::core::objectmodel::Base; setLinesDamping(Real val)sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >inline; setLinesStiffness(Real val)sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPathObject1(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setPathObject2(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setQuadsDamping(Real val)sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >inline; setQuadsStiffness(Real val)sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setStiffness(Real val)sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >inline; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; sofa::SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::PairStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:22739,load,loader,22739,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,1,['load'],['loader']
Performance,"::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DiagonalMass, DataTypes, GeometricalTypes), SOFA_TEMPLATE(core::behavior::Mass, DataTypes));  ; bool load (const char *filename);  ; void clear ();  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; void doUpdateInternal () override;  Implementation of the internal update. More...;  ; sofa::geometry::ElementType getMassTopologyType () const;  ; Real getMassDensity () const;  ; template<typename T = GeometricalTypes, typename std::enable_if_t< T::spatial_dimensions > = 3, int > ; SReal getTotalMass () const;  ; std::size_t getMassCount ();  ; void printMass ();  Print key mass information (totalMass, vertexMass and massDensity) More...;  ; void addMass (const MassType &mass);  ; void resize (int vsize);  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:5878,load,load,5878,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['load'],['load']
Performance,"::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::gui::component::performer::BaseMouseInteractorvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::gui::component::performer::MouseInteractor< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; distanceFromMousesofa::gui::component::performer::BaseMouseInteractorprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::BaseMouseInteractorvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; getBodyPicked() constsofa::gui::component::performer::BaseMouseInteractorinline; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html:3091,perform,performer,3091,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,2,['perform'],['performer']
Performance,"::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::io::mesh::GIDMeshLoader; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:5704,load,loader,5704,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,"::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html:11164,load,loader,11164,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,1,['load'],['loader']
Performance,"::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseInteractionForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >inlinestatic; sofa::SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; PairStateAccessor< TDataTypes1, TDataTypes2 >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, TDataTypes1, TDataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE2(MixedInteractionForceField, TDataTypes1, TDataTypes2), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html:14794,load,loader,14794,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,1,['load'],['loader']
Performance,"::core::topology::BaseMeshTopology; SeqQuads typedefsofa::core::topology::BaseMeshTopology; SeqTetrahedra typedefsofa::core::topology::BaseMeshTopology; SeqTriangles typedefsofa::core::topology::BaseMeshTopology; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; SetIndex typedefsofa::core::topology::Topology; SetIndices typedefsofa::core::topology::Topology; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNbPoints(Size)sofa::core::topology::Topologyinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMeshTopology, core::topology::Topology)sofa::core::topology::BaseMeshTopology; SOFA_CLASS(Topology, core::objectmodel::BaseObject)sofa::core::topology::Topology; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopology; Tetrahedron typedefsofa::core::topology::Topology; TetrahedronID typedefsofa::core::topology::Topology; TetraID typedefsofa::core::topology::Topology; Topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:19925,load,loader,19925,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,1,['load'],['loader']
Performance,"::core::topology::BaseMeshTopology; SeqQuads typedefsofa::core::topology::BaseMeshTopology; SeqTetrahedra typedefsofa::core::topology::BaseMeshTopology; SeqTriangles typedefsofa::core::topology::BaseMeshTopology; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; SetIndex typedefsofa::core::topology::Topology; SetIndices typedefsofa::core::topology::Topology; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNbPoints(Size)sofa::core::topology::Topologyinlinevirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMeshTopology, core::topology::Topology)sofa::core::topology::BaseMeshTopology; sofa::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopologyObject; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sofa::core::topology::BaseMeshTopology::SOFA_CLASS(Topology, core::objectmodel::BaseObject)sofa::core::topology::Topology; SOFA_CLASS2(TopologyContainer, BaseTopologyObject, BaseMeshTopology)sofa::core::topology::TopologyContainer; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html:21531,load,loader,21531,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,1,['load'],['loader']
Performance,"::d_loadedPlugins. List of the plugins that are have been loaded. . ◆ d_pluginName. sofa::core::objectmodel::Data<type::vector<std::string> > sofa::simulation::RequiredPlugin::d_pluginName. plugin name (or several names if you need to load different plugins or a plugin with several alternate names) . ◆ d_requireAll. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireAll. Display an error message if any plugin names failed to be loaded. . ◆ d_requireOne. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireOne. Display an error message if no plugin names were successfully loaded. . ◆ d_stopAfterFirstNameFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstNameFound. Stop after the first plugin name that is loaded successfully. . ◆ d_stopAfterFirstSuffixFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstSuffixFound. For each plugin name, stop after the first suffix that is loaded successfully. . ◆ d_suffixMap. sofa::core::objectmodel::Data<type::vector<type::fixed_array<std::string,2> > > sofa::simulation::RequiredPlugin::d_suffixMap. standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix . Constructor details. ◆ RequiredPlugin(). sofa::simulation::RequiredPlugin::RequiredPlugin ; (; ). protected . ◆ ~RequiredPlugin(). sofa::simulation::RequiredPlugin::~RequiredPlugin ; (; ). overrideprotecteddefault . Function details. ◆ loadPlugin(). bool sofa::simulation::RequiredPlugin::loadPlugin ; (; ). load a list of plugins requested in Data . ◆ parse(). void sofa::simulation::RequiredPlugin::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:15215,load,loaded,15215,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,2,['load'],['loaded']
Performance,"::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; RIGHT enum valuesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; SeqEdges typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; SeqTriangles typedefsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showEdgeIndicessofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >protected; showTriangleIndicessofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >protected; SnapAlongPath(sofa::type::vector< sofa::geometry::ElementType > &intersected_topoElements, sofa::type::vector< ElemID > &intersected_indices, sofa::type::vector< Vec3 > &intersected_barycoefs, sofa::type::vector< sofa::type::vector< Real > > &points2Snap, Real epsilonSnapPath)sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; SnapBorderPath(PointID pa, Coord &a, PointID pb, Coord &b, sofa::type::vector< sofa::geometry::ElementType > &intersected_topoElements, sofa::type::vector< ElemID > &intersected_indices, sofa::type::vecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html:27624,load,loader,27624,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms-members.html,1,['load'],['loader']
Performance,"::getInstance ; (; ). static . ◆ getPlugin(). Plugin * sofa::helper::system::PluginManager::getPlugin ; (; const std::string & ; plugin, . const std::string & ; = getDefaultSuffix(), . bool ; = true . ). ◆ getPluginByName(). Plugin * sofa::helper::system::PluginManager::getPluginByName ; (; const std::string & ; pluginName). ◆ getPluginMap(). PluginMap& sofa::helper::system::PluginManager::getPluginMap ; (; ). inline . ◆ GetPluginNameFromPath(). std::string sofa::helper::system::PluginManager::GetPluginNameFromPath ; (; const std::string & ; pluginPath). static . ◆ init() [1/2]. void sofa::helper::system::PluginManager::init ; (; void ; ). ◆ init() [2/2]. void sofa::helper::system::PluginManager::init ; (; const std::string & ; pluginPath). ◆ isPluginLoaded(). std::pair< std::string, bool > sofa::helper::system::PluginManager::isPluginLoaded ; (; const std::string & ; plugin). Determine if a plugin name or plugin path is known from the plugin manager (i.e. has been loaded by the plugin manager) with the found path. Parameters. pluginA path to a plugin or a plugin name . ReturnsA pair consisting of the found plugin path (or the plugin path that was last tried) and a bool value set to true if the plugin has been found in the plugin registration map . ◆ isPluginUnloaded(). bool sofa::helper::system::PluginManager::isPluginUnloaded ; (; const std::string & ; pluginName); const. ◆ loadPlugin(). auto sofa::helper::system::PluginManager::loadPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory and register into the map; if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:5791,load,loaded,5791,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,2,['load'],['loaded']
Performance,::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() constsofa::gui::common::TopologyOperationinlinevirtual; getTopologicalOperation() constsofa::gui::common::TopologyOperationinlinevirtual; getVolumicMesh() constsofa::gui::common::TopologyOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; scalesofa::gui::common::TopologyOperationprotected; setScale(double s)sofa::gui::common::TopologyOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setTopologicalOperation(int m)sofa::gui::common::TopologyOperationinline; setVolumicMesh(bool v)sofa::gui::common::TopologyOperationinline; start() overridesofa::gui::common::TopologyOperationvirtual; topologicalOperationsofa::gui::common::TopologyOperationprotected; TopologyOperation()sofa::gui::common::TopologyOperationinline; volumicMeshsofa::gui::common::TopologyOperationprotected; wait()sofa::gui::common::Operationinlinevirtual; ~Operation()sofa::gui::common::Operationinlinevirtual; ~TopologyOperation() overridesofa::gui::common::TopologyOperationinline.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html:1612,perform,performersofa,1612,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html,2,['perform'],['performersofa']
Performance,"::ifstream &file)sofa::component::io::mesh::MeshSTLLoaderprotected; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(MeshLoader, BaseLoader)sofa::core::loader::MeshLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(MeshSTLLoader, sofa::core::loader::MeshLoader)sofa::component::io::mesh::MeshSTLLoader; sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:15326,load,loader,15326,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['load'],['loader']
Performance,"::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addPentahedron(type::vector< Pentahedron > &pPentahedra, const Pentahedron &p)sofa::core::loader::MeshLoaderprotected; addPentahedron(type::vector< Pentahedron > &pPentahedra, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4, Topology::ElemID p5)sofa::core::loader::MeshLoaderprotected; addPolygon(type::vector< type::vector< Topology::ElemID > > &pPolygons, const type::vector< Topology::ElemID > &p)sofa::core::loader::MeshLoaderprotected; addPolyline(type::vector< Polyline > &pPolylines, Polyline p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, const sofa::type::Vec3 &p)sofa::core::loader::MeshLoaderprotected; addPosition(type::vector< sofa::type::Vec3 > &pPositions, SReal x, SReal y, SReal z)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, const Pyramid &p)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, const Tetrahedron &p)sofa::core::loader::MeshLoaderprotected; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, Topology::TetrahedronID p0, Topology::TetrahedronID p1, Topology::TetrahedronID p2, Topology::TetrahedronID p3)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, const Triangle &p)sofa::core::load",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:2465,load,loader,2465,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,12,['load'],['loader']
Performance,"::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >virtual; setConstraintDForce(SReal *df, int begin, int end, bool update) overridesofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMState(MechanicalState< DataTypes > *_mstate)sofa::core::behavior::ConstraintCorrection< TDataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(ConstraintCorrection, TDataTypes), BaseConstraintCorrection)sofa::core::behavior::ConstraintCorrection< TDataTypes >; sofa::core::behavior::BaseConstraintCorrection::SOFA_ABSTRACT_CLASS(BaseConstraintCorrection, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintCorrection; SOFA_CLASS(SOFA_TEMPLATE(LinearSolverConstraintCorrection, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ConstraintCorrection, TDataTypes))sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >; sofa::core::behavior::ConstraintCorrection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html:17197,load,loader,17197,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction-members.html,1,['load'],['loader']
Performance,"::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >protected; setConstraintDForce(SReal *df, int begin, int end, bool update) overridesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMState(MechanicalState< DataTypes > *_mstate)sofa::core::behavior::ConstraintCorrection< TDataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(ConstraintCorrection, TDataTypes), BaseConstraintCorrection)sofa::core::behavior::ConstraintCorrection< TDataTypes >; sofa::core::behavior::BaseConstraintCorrection::SOFA_ABSTRACT_CLASS(BaseConstraintCorrection, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintCorrection; SOFA_CLASS(SOFA_TEMPLATE(PrecomputedConstraintCorrection, TDataTypes), SOFA_TEMPLATE(core::behavior::ConstraintCorrection, TDataTypes))sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >; sofa::core::behavior::ConstraintCorrection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html:22839,load,loader,22839,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,1,['load'],['loader']
Performance,::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::GridMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglePatternsofa::component::io::mesh::GridMeshCreator; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GridMeshCreatorprotectedvirtual; doLoad() overridesofa::component::io::mesh::GridMeshCreatorvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::obj,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:6423,load,loader,6423,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::StringMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::StringMeshCreatorprotectedvirtual; doLoad() overridesofa::component::io::mesh::StringMeshCreatorvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::co,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:6429,load,loader,6429,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['load'],['loader']
Performance,::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; detectFileType(const char *filename)sofa::component::io::mesh::MeshVTKLoaderprotected; doClearBuffers() overridesofa::component::io::mesh::MeshVTKLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshVTKLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:6401,load,loader,6401,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GIDMeshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::GIDMeshLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::io::mesh::GIDMeshLoader; ElementType enum namesofa::compo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:6524,load,loader,6524,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshGmshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshGmshLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_l,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:6542,load,loader,6542,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance,::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOffLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshOffLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_lis,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:6401,load,loader,6401,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,2,['load'],['loader']
Performance,::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshXspLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshXspLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_lis,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:6401,load,loader,6401,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['load'],['loader']
Performance,::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html:6381,load,loader,6381,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,1,['load'],['loader']
Performance,"::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; GridMeshCreator()sofa::component::io::mesh::GridMeshCreatorprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; Hexahedron typedefsofa::core::loader::MeshLoader; HighOrderEdgePosition typedefsofa::core::loader::MeshLoader; HighOrderHexahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderQuadPosition typedefsofa::core::loader::MeshLoader; HighOrderTetrahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderTrianglePosition typedefsofa::core::loader::MeshLoader; init() overridesofa::core::loader::MeshLoadervirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:11210,load,loader,11210,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,"::loader::MeshLoaderprotected; MeshVTKLoader()sofa::component::io::mesh::MeshVTKLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; NONE enum valuesofa::component::io::mesh::MeshVTKLoaderprotected; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; pointsDatasofa::component::io::mesh::MeshVTKLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; quadsDatasofa::component::io::mesh::MeshVTKLoader; readersofa::component::io::mesh::MeshVTKLoaderprotected; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInputsData()sofa::component::io::mesh::MeshVTKLoaderprotected; setInputsMesh()sofa::component::io::mesh::MeshVTKLoaderprotected; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:14370,load,loader,14370,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,"::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:18459,cache,cacheData,18459,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,1,['cache'],['cacheData']
Performance,"::mesh::VoxelGridLoader::getBackgroundValue ; (; const unsigned int ; idx = 0); const. ◆ getData(). unsigned char * sofa::component::io::mesh::VoxelGridLoader::getData ; (; ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getDataSize(). int sofa::component::io::mesh::VoxelGridLoader::getDataSize ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getHexaIndicesInGrid(). type::vector< unsigned int > sofa::component::io::mesh::VoxelGridLoader::getHexaIndicesInGrid ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getResolution(). void sofa::component::io::mesh::VoxelGridLoader::getResolution ; (; Vec3i & ; res); const. ◆ getROI(). VoxelGridLoader::Vec6i sofa::component::io::mesh::VoxelGridLoader::getROI ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getSegmentID(). unsigned char * sofa::component::io::mesh::VoxelGridLoader::getSegmentID ; (; ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getVoxelSize(). type::Vec3 sofa::component::io::mesh::VoxelGridLoader::getVoxelSize ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ init(). void sofa::component::io::mesh::VoxelGridLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::component::io::mesh::VoxelGridLoader::load ; (; ). overridevirtual . Implements sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::component::io::mesh::VoxelGridLoader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setVoxelSize(). void sofa::component::io::mesh::VoxelGridLoader::setVoxelSize ; (; const type::Vec3 ; vSize). ◆ SOFA_CLASS(). sofa::component::io::mesh::VoxelGridLoader::SOFA_CLASS ; (; VoxelGridLoader ; , .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:21394,load,loader,21394,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['load'],['loader']
Performance,"::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshTrianLoader()sofa::component::io::mesh::MeshTrianLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; neighborTablesofa::component::io::mesh::MeshTrianLoader; notMuted() constsofa::core::objectmodel::Baseinline; p_trian2sofa::component::io::mesh::MeshTrianLoader; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; readTrian(const char *filename)sofa::component::io::mesh::MeshTrianLoaderprotected; readTrian2(const char *filename)sofa::component::io::mesh::MeshTrianLoaderprotected; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:14182,load,loader,14182,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['load'],['loader']
Performance,"::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshVTKLoader()sofa::component::io::mesh::MeshVTKLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; NONE enum valuesofa::component::io::mesh::MeshVTKLoaderprotected; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; pointsDatasofa::component::io::mesh::MeshVTKLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; quadsDatasofa::component::io::mesh::MeshVTKLoader; readersofa::component::io::mesh::MeshVTKLoaderprotected; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::lo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:14137,load,loader,14137,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,"::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; normalizeGroup(type::vector< sofa::core::loader::PrimitiveGroup > &group)sofa::component::io::mesh::MeshGmshLoaderprotected; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; readGmsh(std::ifstream &file, const unsigned int gmshFormat)sofa::component::io::mesh::MeshGmshLoaderprotected; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:13412,load,loader,13412,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance,"::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; RestShapeSpringsForceField()sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >protected; s_defaultActiveDirectionssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >protectedstatic; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(RestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; ForceField< DataTypes >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html:16900,load,loader,16900,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,1,['load'],['loader']
Performance,"::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LEGACY enum valuesofa::component::io::mesh::MeshVTKLoaderprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshVTKLoader()sofa::component::io::mesh::MeshVTKLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; NONE enum valuesofa::component::io::mesh::MeshVTKLoaderprotected; notMuted() constsofa::core::objectmodel::Baseinline; parse(s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:12674,load,load,12674,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['load']
Performance,"::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LINEAR enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &att",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:12837,load,load,12837,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['load']
Performance,"::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; Hexahedron typedefsofa::core::loader::MeshLoader; HighOrderEdgePosition typedefsofa::core::loader::MeshLoader; HighOrderHexahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderQuadPosition typedefsofa::core::loader::MeshLoader; HighOrderTetrahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderTrianglePosition typedefsofa::core::loader::MeshLoader; init() overridesofa::core::loader::MeshLoadervirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:11028,load,loader,11028,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,8,['load'],['loader']
Performance,"::performer::RemovePrimitivePerformer< DataTypes >protected; RemovePrimitivePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; RemovePrimitivePerformerConfiguration()sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; selectedElemsofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; selectorScalesofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; setScale(double s)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; setTopologicalOperation(int m)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; setVolumicMesh(bool v)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; surfaceOnVolumesofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; TInteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inline; topologicalOperationsofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; volumeOnSurfacesofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; volumicMeshsofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual; ~RemovePrimitivePerformer()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >inline. Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html:2903,perform,performer,2903,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,18,['perform'],['performer']
Performance,"::setting::MouseButtonSetting *setting) overridesofa::gui::component::performer::AttachBodyPerformer< DataTypes >inlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_sizesofa::gui::component::performer::AttachBodyPerformer< DataTypes >protected; m_stiffnesssofa::gui::component::performer::AttachBodyPerformer< DataTypes >protected; MouseContactMapper typedefsofa::gui::component::performer::AttachBodyPerformer< DataTypes >; MouseContainer typedefsofa::gui::component::performer::AttachBodyPerformer< DataTypes >; MouseForceField typedefsofa::gui::component::performer::AttachBodyPerformer< DataTypes >; setArrowSize(float s)sofa::gui::component::performer::AttachBodyPerformer< DataTypes >inline; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; setStiffness(SReal s)sofa::gui::component::performer::AttachBodyPerformer< DataTypes >inline; S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html:1662,perform,performer,1662,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,2,['perform'],['performer']
Performance,"::shader::OrderIndependentTransparencyManagervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OrderIndependentTransparencyManager, core::visual::VisualManager)sofa::gl::component::shader::OrderIndependentTransparencyManager; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html:11669,load,loader,11669,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,2,['load'],['loader']
Performance,"::solidmechanics::spring::SpringForceField< DataTypes >inline; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDrawMode(int m)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >inline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPathObject1(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setPathObject2(const std::string &path)sofa::core::behavior::PairInteractionForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; sofa::SOFA_ABSTRACT_CLASS(BaseInteractionForceField, BaseForceField)sofa::core::behavior::BaseInteractionForceField; sofa::core::behavior::BaseForceField::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::PairStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SOFA_ABSTRACT_CLASS2(SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes))sofa::core::behavior:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html:20362,load,loader,20362,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,3,['load'],['loader']
Performance,"::string &=getDefaultSuffix(), bool=true)sofa::helper::system::PluginManager; getPluginByName(const std::string &pluginName)sofa::helper::system::PluginManager; getPluginMap()sofa::helper::system::PluginManagerinline; GetPluginNameFromPath(const std::string &pluginPath)sofa::helper::system::PluginManagerstatic; init()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin)sofa::helper::system::PluginManager; PluginIterator typedefsofa::helper::system::PluginManager; PluginLoadStatus enum namesofa::helper::system::PluginManager; PluginMap typedefsofa::helper::system::PluginManager; readFromIniFile(const std::string &path)sofa::helper::system::PluginManager; readFromIniFile(const std::string &path, type::vector< std::string > &listLoadedPlugins)sofa::helper::system::PluginManager; registerPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; removeOnPluginCleanupCallbacks(const std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:2137,load,loadPluginByPath,2137,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,2,['load'],['loadPluginByPath']
Performance,"::string &header);  This builds a header before any shader contents. More...;  ; void AddDefineMacro (const std::string &name, const std::string &value);  ; void SetShaderFileName (GLint target, const std::string &fileName);  This function loads and returns a text file for our shaders. More...;  ; void SetShaderFromString (GLint target, const std::string &shaderContent);  ; void SetVertexShaderFileName (const std::string &fileName);  ; void SetVertexShaderFromString (const std::string &string);  ; void SetFragmentShaderFileName (const std::string &fileName);  ; void SetFragmentShaderFromString (const std::string &string);  ; std::string GetShaderStageName (GLint target);  ; std::string LoadTextFile (const std::string &strFile);  This loads our text file for each shader and returns it in a string. More...;  ; void InitShaders ();  This function loads a vertex and fragment shader file. More...;  ; void forceReloadShaderFromFile (const std::string &filename);  ; void InitShaders (const std::string &strVertex, const std::string &strFragment);  This loads a vertex and fragment shader. More...;  ; GLint GetVariable (std::string strVariable);  This returns an ID for a variable in our shader. More...;  ; GLint GetAttributeVariable (std::string strVariable);  This returns an ID for an attribute variable in our shader. More...;  ; void Release ();  This releases our memory for our shader. More...;  . bool IsReady () const;  ; GLhandleARB GetProgram () const;  ; std::string GetShaderFileName (GLint type) const;  ; std::string GetShaderString (GLint type) const;  ; std::string GetHeader () const;  ; bool IsSet (GLint type) const;  ; GLhandleARB GetShaderID (GLint type) const;  ; std::string GetVertexShaderFileName () const;  ; GLhandleARB GetVertexShaderID () const;  ; std::string GetFragmentShaderFileName () const;  ; GLhandleARB GetFragmentShaderID () const;  . void SetInt (GLint variable, int newValue);  ; void SetFloat (GLint variable, float newValue);  . void SetInt2 (GLin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:1994,load,loads,1994,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,2,['load'],['loads']
Performance,"::system::PluginManager::addOnPluginCleanupCallbacks ; (; const std::string & ; key, . std::function< void()> ; callback . ). ◆ addOnPluginLoadedCallback(). void sofa::helper::system::PluginManager::addOnPluginLoadedCallback ; (; const std::string & ; key, . std::function< void(const std::string &, const Plugin &)> ; callback . ). ◆ checkDuplicatedPlugin(). bool sofa::helper::system::PluginManager::checkDuplicatedPlugin ; (; const Plugin & ; plugin, . const std::string & ; pluginPath . ). ◆ cleanup(). void sofa::helper::system::PluginManager::cleanup ; (; ). ◆ findPlugin(). std::string sofa::helper::system::PluginManager::findPlugin ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . int ; maxRecursiveDepth = 3 . ). ◆ getDefaultSuffix(). std::string sofa::helper::system::PluginManager::getDefaultSuffix ; (; ). static . Get the default suffix applied to plugin names to find the actual lib to load Returns ""_d"" in debug configuration and an empty string otherwise . Get the default suffix applied to plugin names to find the actual lib to load (depends on platform, version, debug/release build) . ◆ getEntryFromPlugin(). template<typename Entry > . bool sofa::helper::system::PluginManager::getEntryFromPlugin ; (; const Plugin * ; plugin, . Entry & ; entry . ). inline . ◆ getInstance(). PluginManager & sofa::helper::system::PluginManager::getInstance ; (; ). static . ◆ getPlugin(). Plugin * sofa::helper::system::PluginManager::getPlugin ; (; const std::string & ; plugin, . const std::string & ; = getDefaultSuffix(), . bool ; = true . ). ◆ getPluginByName(). Plugin * sofa::helper::system::PluginManager::getPluginByName ; (; const std::string & ; pluginName). ◆ getPluginMap(). PluginMap& sofa::helper::system::PluginManager::getPluginMap ; (; ). inline . ◆ GetPluginNameFromPath(). std::string sofa::helper::system::PluginManager::GetPluginNameFromPath ; (; const std::string & ; plu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:4363,load,load,4363,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,2,['load'],['load']
Performance,"::type::vector< PrimitiveGroup > & getPyramidsGroups () const;  ; const sofa::type::vector< HighOrderEdgePosition > & getHighOrderEdgePositions () const;  ; const sofa::type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3254,load,loaded,3254,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,2,['load'],['loaded']
Performance,"::visual::VisualParams * ; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, sofa::gui::component::performer::FixParticlePerformer< DataTypes >, and sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >. ◆ execute(). virtual void sofa::gui::component::performer::InteractionPerformer::execute ; (; ). pure virtual . Implemented in sofa::gui::component::performer::StartNavigationPerformer, sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::AddRecordedCameraPerformer, sofa::gui::component::performer::SuturePointPerformer< DataTypes >, sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, sofa::gui::component::performer::FixParticlePerformer< DataTypes >, and sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >. ◆ handleEvent(). virtual void sofa::gui::component::performer::InteractionPerformer::handleEvent ; (; core::objectmodel::Event * ; ). inlinevirtual . ◆ setPerformerFreeze(). virtual void sofa::gui::component::performer::InteractionPerformer::setPerformerFreeze ; (; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::InciseAlongPathPerformer. ◆ SOFA_ATTRIBUTE_DISABLED__NAMING() [1/2]. sofa::gui::component::performer::InteractionPerformer::SOFA_ATTRIBUTE_DISABLED__NAMING ; (; ""v24.06"" ; , . ""v24.06"" ; , . freezePerformer ; , . m_freezePerformer ;  . ). ◆ SOFA_ATTRIBUTE_DISABLED__NAMING() [2/2]. sofa::gui::component::performer::InteractionPerformer::SOFA_ATTRIBUTE_DISABLED__NAMING ; (; ""v24.06"" ; , . ""v24.06"" ; , . interactor ; , . m_interactor ;  . ). ◆ start(). virtual void sofa::gui::component::performer::InteractionPerformer::start ; (; ). pure virtual . Implemented in sofa::gui::component::performer::StartNavigationPerformer, sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::AddRecordedCameraPerform",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html:3346,perform,performer,3346,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,2,['perform'],['performer']
Performance,":AttachOperation; sofa::gui::component::AttachBodyButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Public Member Functions inherited from sofa::gui::common::AttachOperation;  AttachOperation (sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >());  ;  ~AttachOperation () override;  ; void setStiffness (double s);  ; double getStiffness () const;  ; void setArrowSize (double s);  ; double getArrowSize () const;  ; void setShowFactorSize (double s);  ; double getShowFactorSize () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Function details. ◆ defaultPerformerType(). virtual std::string sofa::gui::common::ConstraintAttachOperation::defaultPerformerType ; (; ). inlineprotectedvirtual . Reimplemented from sofa::gui::common::AttachOperation. ◆ getDescription(). static std::string sofa::gui::common::ConstraintAttachOperation::getDescription ; (; ). inlinestatic . sofaguicommonConstraintAttachOperation; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html:2717,perform,performer,2717,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation.html,2,['perform'],['performer']
Performance,":Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::GridMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglePatternsofa::component::io::mesh::GridMeshCreator; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:6191,load,loader,6191,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,":Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::StringMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::StringMeshCreatorprotectedvirtual; doLoad() overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:6197,load,loader,6197,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['load'],['loader']
Performance,":Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; detectFileType(const char *filename)sofa::component::io::mesh::MeshVTKLoaderprotected; doClearBuffers() overridesofa::component::io::mesh::MeshVTKLoaderprotectedvir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:6169,load,loader,6169,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,":Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GIDMeshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::GIDMeshLoadervirtual; doUpdateInterna",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:6292,load,loader,6292,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,":Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshGmshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshGmshLoadervirtual; doUpdateInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:6310,load,loader,6310,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance,":Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOffLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshOffLoadervirtual; doUpdateInterna",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:6169,load,loader,6169,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,2,['load'],['loader']
Performance,":Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshXspLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshXspLoadervirtual; doUpdateInterna",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:6169,load,loader,6169,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['load'],['loader']
Performance,":Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html:6149,load,loader,6149,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,1,['load'],['loader']
Performance,":Base; setEdgeTopologyToDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; SetIndex typedefsofa::core::topology::Topology; SetIndices typedefsofa::core::topology::Topology; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNbPoints(Size n) overridesofa::component::topology::container::dynamic::PointSetTopologyContainervirtual; setPointTopologyToDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; setQuadTopologyToDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMeshTopology, core::topology::Topology)sofa::core::topology::BaseMeshTopology; SOFA_CLASS(QuadSetTopologyContainer, EdgeSetTopologyContainer)sofa::component::topology::container::dynamic::QuadSetTopologyContainer; sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::SOFA_CLASS(EdgeSetTopologyContainer, PointSetTopologyContainer)sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::component::topology::container::dynamic::PointSetTopologyContainer::SOFA_CLASS(PointSetTopologyContainer, core::topology::TopologyContainer)sofa::component::topology::container::dynamic::PointSetTopologyContainer; sofa::core::topology::TopologyContainer::SOFA_CLASS(BaseTopologyObject, core::objectmodel::BaseObject)sofa::core::topology::BaseTopolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:32366,load,loader,32366,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['load'],['loader']
Performance,":BaseContext. ◆ getTopology(). core::topology::Topology * sofa::simulation::Node::getTopology ; (; ); const. overridevirtual . Topology. ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getTreeNode(). Node * sofa::simulation::Node::getTreeNode ; (; const std::string & ; name); const. Get a descendant node given its name. . ◆ getTreeObject() [1/2]. template<class Object > . Object* sofa::simulation::Node::getTreeObject ; (; ). inline . ◆ getTreeObject() [2/2]. template<class Object > . void sofa::simulation::Node::getTreeObject ; (; Object *& ; result). inline . Return an object of this node and sub-nodes deriving from a given class, or nullptr if not found. Note that only the first object is returned. . ◆ getTreeObjects() [1/4]. template<class Object = sofa::core::objectmodel::BaseObject> . std::vector<Object*> sofa::simulation::Node::getTreeObjects ; (; ). inline . List all objects of this node and sub-nodes deriving from a given class This function is return a std::vector by copy but should be compatible with Return Value Optimization so the copy should be removed by the compiler. Eg: for( BaseObject* o : node->getTreeObjects() ) { ... } for( VisualModel* v : node->getTreeObjects<VisualModel>() ) { ... } . ◆ getTreeObjects() [2/4]. template<class Container > . Container& sofa::simulation::Node::getTreeObjects ; (; Container & ; result). inline . List all objects of this node and sub-nodes deriving from a given class. . ◆ getTreeObjects() [3/4]. template<class Object , class Container > . void sofa::simulation::Node::getTreeObjects ; (; Container * ; list). inline . List all objects of this node and sub-nodes deriving from a given class. . ◆ getTreeObjects() [4/4]. template<class Container > . Container* sofa::simulation::Node::getTreeObjects ; (; Container * ; result). inline . List all objects of this node and sub-nodes deriving from a given class. . ◆ getVisualLoop(). core::visual::VisualLoop * sofa::simulation::Node::getVisualLoop ; (; ); const. over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:45910,Optimiz,Optimization,45910,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['Optimiz'],['Optimization']
Performance,":BaseNode *node) overridesofa::core::behavior::BaseForceFieldvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPoissonRatio(const Real ratio)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setYoungModulus(const Real modulus)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >inline; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(TetrahedralTensorMassForceField, DataTypes), SOFA_TEMPLATE(core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:16797,load,loader,16797,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['load'],['loader']
Performance,":BaseVTKReader; inputCellssofa::component::io::mesh::basevtkreader::BaseVTKReader; inputCellTypessofa::component::io::mesh::basevtkreader::BaseVTKReader; inputNormalssofa::component::io::mesh::basevtkreader::BaseVTKReader; inputPointDataVectorsofa::component::io::mesh::basevtkreader::BaseVTKReader; inputPointssofa::component::io::mesh::basevtkreader::BaseVTKReader; inputPolygonssofa::component::io::mesh::basevtkreader::BaseVTKReader; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isLittleEndiansofa::component::io::mesh::basevtkreader::BaseVTKReader; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; loadDataArray(tinyxml2::XMLElement *dataArrayElement, int size, string type)sofa::component::io::mesh::XMLVTKReaderprotected; loadDataArray(tinyxml2::XMLElement *dataArrayElement, int size)sofa::component::io::mesh::XMLVTKReaderprotected; loadDataArray(tinyxml2::XMLElement *dataArrayElement)sofa::component::io::mesh::XMLVTKReaderprotected; loadImageData(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadPolydata(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadRectilinearGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadStructuredGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadStructuredPoints(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadUnstructuredGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html:7774,load,loadDataArray,7774,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,1,['load'],['loadDataArray']
Performance,":Baseinline; isEnabledsofa::gl::component::rendering3d::OglModelprotected; isUseEdges()sofa::gl::component::rendering3d::OglModelinline; isUseQuads()sofa::gl::component::rendering3d::OglModelinline; isUseTriangles()sofa::gl::component::rendering3d::OglModelinline; isUsingTopology() constsofa::component::visual::VisualModelImplinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::visual::VisualModelImpl; lastMeshRevsofa::component::visual::VisualModelImpl; lineSmoothsofa::gl::component::rendering3d::OglModelprotected; lineWidthsofa::gl::component::rendering3d::OglModelprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; LinkVisualModel typedefsofa::gl::component::rendering3d::MergeVisualModels; load(const std::string &filename, const std::string &loader, const std::string &textureName)sofa::component::visual::VisualModelImpl; loadTexture(const std::string &filename) overridesofa::gl::component::rendering3d::OglModelvirtual; loadTextures() overridesofa::gl::component::rendering3d::OglModelvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_computeTangentssofa::component::visual::VisualModelImpl; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_dirtyQuadssofa::component::visual::VisualModelImplprotected; m_dirtyTrianglessofa::component::visual::VisualModelImplprotected; m_edgessofa::component::visual::VisualModelImpl; m_fixMergedUVSeamssofa::component::visual::VisualModelImpl; m_handleDynamicTopologysofa::component::visual::VisualModelImpl; m_initRestPositionssofa::component::visual::VisualModelImpl; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_keepLinessofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html:16725,load,loadTexture,16725,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models-members.html,1,['load'],['loadTexture']
Performance,":EdgePressureForceField< DataTypes >protected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDminAndDmax(const SReal _dmin, const SReal _dmax)sofa::component::mechanicalload::EdgePressureForceField< DataTypes >; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNormal(const Coord n)sofa::component::mechanicalload::EdgePressureForceField< DataTypes >inline; setPressure(Deriv _pressure)sofa::component::mechanicalload::EdgePressureForceField< DataTypes >inline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(EdgePressureForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::EdgePressureForceField< DataTypes >; ForceField< DataTypes >::SOFA_CLASS(Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html:16888,load,loader,16888,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field-members.html,1,['load'],['loader']
Performance,":ElemID > & ; p . ). protected . ◆ addPolyline(). void sofa::core::loader::MeshLoader::addPolyline ; (; type::vector< Polyline > & ; pPolylines, . Polyline ; p . ). protected . ◆ addPosition() [1/2]. void sofa::core::loader::MeshLoader::addPosition ; (; type::vector< sofa::type::Vec3 > & ; pPositions, . const sofa::type::Vec3 & ; p . ). protected . ◆ addPosition() [2/2]. void sofa::core::loader::MeshLoader::addPosition ; (; type::vector< sofa::type::Vec3 > & ; pPositions, . SReal ; x, . SReal ; y, . SReal ; z . ). protected . ◆ addPyramid() [1/2]. void sofa::core::loader::MeshLoader::addPyramid ; (; type::vector< Pyramid > & ; pPyramids, . const Pyramid & ; p . ). protected . ◆ addPyramid() [2/2]. void sofa::core::loader::MeshLoader::addPyramid ; (; type::vector< Pyramid > & ; pPyramids, . Topology::ElemID ; p0, . Topology::ElemID ; p1, . Topology::ElemID ; p2, . Topology::ElemID ; p3, . Topology::ElemID ; p4 . ). protected . ◆ addQuad() [1/2]. void sofa::core::loader::MeshLoader::addQuad ; (; type::vector< Quad > & ; pQuads, . const Quad & ; p . ). protected . ◆ addQuad() [2/2]. void sofa::core::loader::MeshLoader::addQuad ; (; type::vector< Quad > & ; pQuads, . Topology::QuadID ; p0, . Topology::QuadID ; p1, . Topology::QuadID ; p2, . Topology::QuadID ; p3 . ). protected . ◆ addTetrahedron() [1/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . const Tetrahedron & ; p . ). protected . ◆ addTetrahedron() [2/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . Topology::TetrahedronID ; p0, . Topology::TetrahedronID ; p1, . Topology::TetrahedronID ; p2, . Topology::TetrahedronID ; p3 . ). protected . ◆ addTriangle() [1/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . const Triangle & ; p . ). protected . ◆ addTriangle() [2/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:27046,load,loader,27046,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,":FullMatrix< Real >::add ; (; Index ; row, . Index ; col, . double ; v . ). overridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [2/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2].",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:17908,perform,performances,17908,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['perform'],['performances']
Performance,":GIDMeshLoaderprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::io::mesh::GIDMeshLoader; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:5661,load,loader,5661,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,":InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_mstate1sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >protected; m_mstate2sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >protected; MouseContactMapper typedefsofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >; MouseContainer typedefsofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; startPartial(const BodyPicked &picked) overridesofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >virtual; TInteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inline; VecCoord typedefsofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >; ~BaseAttachBodyPerformer()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; ~ConstraintAttachBodyPerformer()=defaultsofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >virtual; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual. Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html:2540,perform,performer,2540,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,18,['perform'],['performer']
Performance,:MeshLoader; d_handleSeamssofa::component::io::mesh::MeshOBJLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_loadMaterialsofa::component::io::mesh::MeshOBJLoader; d_materialsofa::component::io::mesh::MeshOBJLoader; d_materialssofa::component::io::mesh::MeshOBJLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_normalsIndexListsofa::component::io::mesh::MeshOBJLoader; d_normalsListsofa::component::io::mesh::MeshOBJLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_positionsListsofa::component::io::mesh::MeshOBJLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_subsets_indicessofa::component::io::mesh::MeshOBJLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_texCoordssofa::component::io::mesh::MeshOBJLoader; d_texCoordsListsofa::component::io::mesh::MeshOBJLoader; d_texIndexListsofa::component::io::mesh::MeshOBJLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupss,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:6762,load,loader,6762,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['loader']
Performance,":MeshOBJLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; NBFACETYPE enum valuesofa::component::io::mesh::MeshOBJLoader; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; QUAD enum valuesofa::component::io::mesh::MeshOBJLoader; Quad typedefsofa::core::loader::MeshLoader; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; readMTL(const char *filename, type::vector< sofa::type::Material > &d_materials)sofa::component::io::mesh::MeshOBJLoaderprotected; readOBJ(std::ifstream &file, const char *filename)sofa::component::io::mesh::MeshOBJLoaderprotected; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:15303,load,loader,15303,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['loader']
Performance,":Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::FixOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::FixOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Attribute details. ◆ stiffnessWidget. DataWidget* sofa::gui::qt::QFixOperation::stiffnessWidget. protected . Constructor details. ◆ QFixOperation(). sofa::gui::qt::QFixOperation::QFixOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QFixOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQFixOperation; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html:2150,perform,performer,2150,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_fix_operation.html,6,['perform'],['performer']
Performance,":SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ distanceFromMouse. SReal sofa::gui::component::performer::BaseMouseInteractor::distanceFromMouse. protected . ◆ isAttached. bool sofa::gui::component::performer::BaseMouseInteractor::isAttached. protected . ◆ lastPicked. BodyPicked sofa::gui::component::performer::BaseMouseInteractor::lastPicked. protected . ◆ mouseCollision. MouseCollisionModel* sofa::gui::component::performer::BaseMouseInteractor::mouseCollision. protected . ◆ performers. VecPerformer sofa::gui::component::performer::BaseMouseInteractor::performers. protected . Constructor details. ◆ BaseMouseInteractor(). sofa::gui::component::performer::BaseMouseInteractor::BaseMouseInteractor ; (; ). inlineprotected . Function details. ◆ addInteractionPerformer(). void sofa::gui::component::performer::BaseMouseInteractor::addInteractionPerformer ; (; InteractionPerformer * ; i). ◆ cleanup(). void sofa::gui::component::performer::BaseMouseInteractor::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw(). void sofa::gui::component::performer::BaseMouseInteractor::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getBodyPicked(). BodyPicked sofa::gui::component::performer::BaseMouseInteractor::getBodyPicked ; (; ); const. inline . ◆ getDistanceFromMouse(). SReal s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html:14599,perform,performer,14599,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,2,['perform'],['performer']
Performance,":SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Attribute details. ◆ _forceBinary. sofa::core::objectmodel::RenamedData<bool> sofa::component::io::mesh::MeshSTLLoader::_forceBinary. ◆ _headerSize. sofa::core::objectmodel::RenamedData<unsigned int> sofa::component::io::mesh::MeshSTLLoader::_headerSize. ◆ d_forceBinary. Data<bool> sofa::component::io::mesh::MeshSTLLoader::d_forceBinary. Force reading in binary mode. Even in first keyword of the file is solid. . ◆ d_headerSize. Data<unsigned int> sofa::component::io::mesh::MeshSTLLoader::d_headerSize. Size of the header binary file (just before the number of facet). . ◆ d_mergePositionUsingMap. Data<bool> sofa::component::io::mesh::MeshSTLLoader::d_mergePositionUsingMap. Since positions are duplicated in a STL, they have to be merged. Using a map to do so will temporarily duplicate memory but should be more efficient. Disable it if memory is really an issue. . Constructor details. ◆ MeshSTLLoader(). sofa::component::io::mesh::MeshSTLLoader::MeshSTLLoader ; (; ). protected . Function details. ◆ readBinarySTL(). bool sofa::component::io::mesh::MeshSTLLoader::readBinarySTL ; (; const char * ; filename). protected . ◆ readSTL(). bool sofa::component::io::mesh::MeshSTLLoader::readSTL ; (; std::ifstream & ; file). protected . ◆ SOFA_CLASS(). sofa::component::io::mesh::MeshSTLLoader::SOFA_CLASS ; (; MeshSTLLoader ; , . sofa::core::loader::MeshLoader ;  . ). sofacomponentiomeshMeshSTLLoader; Generated on Mon Nov 11 2024 02:46:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:22232,load,loader,22232,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,1,['load'],['loader']
Performance,":Simulation::exportOBJ ; (; Node * ; root, . const char * ; filename, . bool ; exportMTL = true . ). virtualdelete . Export a scene to an OBJ 3D Scene. . ◆ exportXML(). virtual void sofa::simulation::Simulation::exportXML ; (; Node * ; root, . const char * ; fileName = nullptr . ). virtualdelete . Print all object in the graph in XML format. . ◆ init(). virtual void sofa::simulation::Simulation::init ; (; Node * ; root). virtualdelete . Initialize the objects. . ◆ initNode(). virtual void sofa::simulation::Simulation::initNode ; (; Node * ; node). virtualdelete . Init a node without changing the context of the simulation. . ◆ initTextures(). virtual void sofa::simulation::Simulation::initTextures ; (; Node * ; root). virtualdelete . Initialize the textures. . ◆ isDirectedAcyclicGraph(). virtual bool sofa::simulation::Simulation::isDirectedAcyclicGraph ; (; ). pure virtual . Can the simulation handle a directed acyclic graph? ; Implemented in sofa::simulation::graph::DAGSimulation. ◆ load(). virtual NodeSPtr sofa::simulation::Simulation::load ; (; const std::string & ; , . bool ; reload = false, . const std::vector< std::string > & ; sceneArgs = std::vector< std::string >(0) . ). virtualdelete . Load a scene from a file. . ◆ operator=(). Simulation& sofa::simulation::Simulation::operator= ; (; const Simulation & ; n). delete . ◆ print(). virtual void sofa::simulation::Simulation::print ; (; Node * ; root). virtualdelete . Print all object in the graph. . ◆ reset(). virtual void sofa::simulation::Simulation::reset ; (; Node * ; root). virtualdelete . Reset to initial state. . ◆ unload(). virtual void sofa::simulation::Simulation::unload ; (; NodeSPtr ; root). virtualdelete . Unload a scene from a Node. . ◆ updateContext(). virtual void sofa::simulation::Simulation::updateContext ; (; Node * ; root). virtualdelete . Update contexts. Required before drawing the scene if root flags are modified. . ◆ updateVisual(). virtual void sofa::simulation::Simulation::updateVisual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html:6823,load,load,6823,api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_simulation.html,2,['load'],['load']
Performance,":TopologicalChangeManager::incisionCollisionModel ; (; sofa::core::CollisionModel * ; model1, . Index ; idx1, . const sofa::type::Vec3 & ; firstPoint, . sofa::core::CollisionModel * ; model2, . Index ; idx2, . const sofa::type::Vec3 & ; secondPoint, . int ; snapingValue = 0, . int ; snapingBorderValue = 0 . ). Handles Cutting for general model collision (activated only for a triangular topology for the moment).; Given two collision model, perform an incision between two points. See alsoincisionTriangleSetTopology; Parameters. model1- first collision model. ; idx1- first element index. ; firstPoint- first picked point coordinates. ; model2- second collision model. ; idx2- second element index. ; secondPoint- second picked point coordinates. ; snapingValue- threshold distance from point to incision path where point has to be snap on incision path. ; snapingBorderValue- threshold distance from point to mesh border where incision is considered to reach the border.. Returnsbool - true if incision has been performed. . ◆ removeItemsFromCollisionModel() [1/3]. Index sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel ; (; sofa::core::CollisionElementIterator ; elem2); const. Handles Removing of topological element (from any type of topology) . ◆ removeItemsFromCollisionModel() [2/3]. Index sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel ; (; sofa::core::CollisionModel * ; model, . const Index & ; index . ); const. ◆ removeItemsFromCollisionModel() [3/3]. Index sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel ; (; sofa::core::CollisionModel * ; model, . const type::vector< Index > & ; indices . ); const. ◆ setIncisionFirstCut(). void sofa::gui::component::performer::TopologicalChangeManager::setIncisionFirstCut ; (; bool ; isFirstCut). Sets incision starting parameter - incision is just started or already in course; Parameters. isFirstCut- true if the next in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager.html:3910,perform,performed,3910,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager.html,2,['perform'],['performed']
Performance,":behavior::BaseController);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html:2208,load,loader,2208,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,2,['load'],['loader']
Performance,":component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ visitExternalChildren(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren ; (; cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21401,queue,queue,21401,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,1,['queue'],['queue']
Performance,":component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; MouseContactMapper typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; MouseContainer typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; startPartial(const BodyPicked &picked)=0sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >pure virtual; TInteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inline; VecCoord typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; ~BaseAttachBodyPerformer()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual. Generated on Mon Nov 11 2024 03:19:20 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html:2196,perform,performer,2196,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html,16,['perform'],['performer']
Performance,":component::performer::InteractionPerformer * performer;  . Protected Attributes; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  . Public Member Functions;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Friends; class OperationFactory;  . Attribute details. ◆ button. MOUSE_BUTTON sofa::gui::common::Operation::button. protected . ◆ mbsetting. sofa::component::setting::MouseButtonSetting::SPtr sofa::gui::common::Operation::mbsetting. protected . ◆ performer. sofa::gui::component::performer::InteractionPerformer* sofa::gui::common::Operation::performer. ◆ pickHandle. PickHandler* sofa::gui::common::Operation::pickHandle. protected . Constructor details. ◆ Operation(). sofa::gui::common::Operation::Operation ; (; sofa::component::setting::MouseButtonSetting::SPtr ; s = nullptr). inline . ◆ ~Operation(). virtual sofa::gui::common::Operation::~Operation ; (; ). inlinevirtual . Function details. ◆ configure() [1/2]. virtua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html:1415,perform,performer,1415,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_operation.html,4,['perform'],['performer']
Performance,":constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; SetIndex typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; SetIndexArray typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; showMovementsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; SingleStateAccessor(MechanicalState< TDataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< TDataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SingleStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(LinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::Projective",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html:17880,load,loader,17880,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,1,['load'],['loader']
Performance,":constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; SetIndex typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; SetIndexArray typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SingleStateAccessor(MechanicalState< TDataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< TDataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SingleStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(LinearVelocityProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:16152,load,loader,16152,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['load'],['loader']
Performance,":core::behavior::BaseLinearSolver:. [legend]; Detailed Description; Abstract base class (as type identifier) for linear system solvers without any API. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseLinearSolver, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_linear_solver.html:1298,load,loader,1298,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_linear_solver.html,1,['load'],['loader']
Performance,":core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; readOFF(std::ifstream &file, const char *filename)sofa::component::io::mesh::MeshOffLoaderprotected; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setTransformation(const sofa::type::Matrix4 &t)sofa::core::loader::MeshLoaderinline; setTranslation(SReal dx, SReal dy, SReal dz)sofa::core::loader::MeshLoaderinline; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:14691,load,loader,14691,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,1,['load'],['loader']
Performance,:core::loader::MeshLoader; d_loadMaterialsofa::component::io::mesh::MeshOBJLoader; d_materialsofa::component::io::mesh::MeshOBJLoader; d_materialssofa::component::io::mesh::MeshOBJLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_normalsIndexListsofa::component::io::mesh::MeshOBJLoader; d_normalsListsofa::component::io::mesh::MeshOBJLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_positionsListsofa::component::io::mesh::MeshOBJLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_subsets_indicessofa::component::io::mesh::MeshOBJLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_texCoordssofa::component::io::mesh::MeshOBJLoader; d_texCoordsListsofa::component::io::mesh::MeshOBJLoader; d_texIndexListsofa::component::io::mesh::MeshOBJLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; d_vertNormIdxsofa::component::io::mesh::MeshOBJLoader; d_vertPosIdxsofa::component::io::mesh::MeshOBJLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOBJLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshOBJLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:7192,load,loader,7192,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['loader']
Performance,":core::loader::MeshLoader; d_mergePositionUsingMapsofa::component::io::mesh::MeshSTLLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:7133,load,loader,7133,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['load'],['loader']
Performance,":core::loader::MeshLoaderprotected; MeshTrianLoader()sofa::component::io::mesh::MeshTrianLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; neighborTablesofa::component::io::mesh::MeshTrianLoader; notMuted() constsofa::core::objectmodel::Baseinline; p_trian2sofa::component::io::mesh::MeshTrianLoader; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; readTrian(const char *filename)sofa::component::io::mesh::MeshTrianLoaderprotected; readTrian2(const char *filename)sofa::component::io::mesh::MeshTrianLoaderprotected; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html:14410,load,loader,14410,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader-members.html,1,['load'],['loader']
Performance,":core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshXspLoader()sofa::component::io::mesh::MeshXspLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:14065,load,loader,14065,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['load'],['loader']
Performance,":core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; readOFF(std::ifstream &file, const char *filename)sofa::component::io::mesh::MeshOffLoaderprotected; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SReal ry, SReal rz)sofa::core::loader::MeshLoaderinline; setScale(SReal sx, SReal sy, SReal sz)sofa::core::loader::MeshLoaderinline; se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:14164,load,loader,14164,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,1,['load'],['loader']
Performance,":core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseLoader() overridesofa::core::loader::BaseLoaderprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html:9790,load,loader,9790,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader-members.html,2,['load'],['loader']
Performance,":core::objectmodel::BaseObject; getTransformation() constsofa::core::loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; handleEvent(sofa::core::objectmodel::Event *event) overridesofa::component::io::mesh::OffSequenceLoadervirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; Hexahedron typedefsofa::core::loader::MeshLoader; HighOrderEdgePosition typedefsofa::core::loader::MeshLoader; HighOrderHexahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderQuadPosition typedefsofa::core::loader::MeshLoader; HighOrderTetrahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderTrianglePosition typedefsofa::core::loader::MeshLoader; init() overridesofa::component::io::mesh::OffSequenceLoadervirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html:10994,load,loader,10994,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,1,['load'],['loader']
Performance,":core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMaterialFacessofa::component::io::mesh::MeshOBJLoader; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_faceListsofa::component::io::mesh::MeshOBJLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_handleSeamssofa::component::io::mesh::MeshOBJLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_loadMaterialsofa::component::io::mesh::MeshOBJLoader; d_materialsofa::component::io::mesh::MeshOBJLoader; d_materialssofa::component::io::mesh::MeshOBJLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_normalsIndexListsofa::component::io::mesh::MeshOBJLoader; d_normalsListsofa::component::io::mesh:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:5574,load,loader,5574,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['loader']
Performance,":core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; roisofa::component::io::mesh::VoxelGridLoader; segmentationsofa::component::io::mesh::VoxelGridLoaderprotected; segmentationHeaderSizesofa::component::io::mesh::VoxelGridLoader; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setVoxelSize(const type::Vec3 vSize)sofa::component::io::mesh::VoxelGridLoader; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; skipToEOL(FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; SOFA_ABSTRACT_CLASS(VoxelLoader, BaseLoader)sofa::core::loader::VoxelLoader; sofa::core::loader::BaseLoader::SOFA_ABSTRACT_CLASS(BaseLoader, objectmodel::BaseObject)sofa::core::loader::BaseLoader; SOFA_CLASS(VoxelGridLoader, VoxelLoader)sofa::component::io::mesh::VoxelGridLoader; sofa::core::loader::VoxelLoader::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html:12303,load,loader,12303,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,1,['load'],['loader']
Performance,":core::objectmodel::BaseObjectvirtual; resetContactForce() overridesofa::component::constraint::lagrangian::correction::GenericConstraintCorrectionvirtual; resetForUnbuiltResolution(SReal *, std::list< unsigned int > &)sofa::core::behavior::BaseConstraintCorrectionvirtual; setConstraintDForce(SReal *, int, int, bool)sofa::core::behavior::BaseConstraintCorrectionvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseConstraintCorrection, objectmodel::BaseObject)sofa::core::behavior::BaseConstraintCorrection; SOFA_CLASS(GenericConstraintCorrection, core::behavior::BaseConstraintCorrection)sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection; sofa::core::behavior::BaseConstraintCorrection::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html:13411,load,loader,13411,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction-members.html,1,['load'],['loader']
Performance,":core::topology::BaseMeshTopology; SeqUV typedefsofa::component::topology::container::constant::MeshTopology; seqUVssofa::component::topology::container::constant::MeshTopology; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; SetIndex typedefsofa::core::topology::Topology; SetIndices typedefsofa::core::topology::Topology; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setNbPoints(Size n) overridesofa::component::topology::container::constant::MeshTopologyvirtual; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMeshTopology, core::topology::Topology)sofa::core::topology::BaseMeshTopology; SOFA_CLASS(MeshTopology, core::topology::BaseMeshTopology)sofa::component::topology::container::constant::MeshTopology; sofa::core::topology::BaseMeshTopology::SOFA_CLASS(Topology, core::objectmodel::BaseObject)sofa::core::topology::Topology; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; Tetra typedefsofa::core::topology::Topology; TetrahedraAroundEdge typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundTriangle typedefsofa::core::topology::BaseMeshTopology; TetrahedraAroundVertex typedefsofa::core::topology::BaseMeshTopol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html:31431,load,loader,31431,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology-members.html,1,['load'],['loader']
Performance,":core::topology::BaseMeshTopologystatic; InvalidHexahedronsofa::core::topology::Topologystatic; InvalidIDsofa::core::topology::Topologystatic; InvalidPentahedronsofa::core::topology::Topologystatic; InvalidPyramidsofa::core::topology::Topologystatic; InvalidQuadsofa::core::topology::Topologystatic; InvalidQuadsInHexahedronsofa::core::topology::BaseMeshTopologystatic; InvalidSetsofa::core::topology::Topologyinlinestatic; InvalidTetrahedronsofa::core::topology::Topologystatic; InvalidTrianglesofa::core::topology::Topologystatic; InvalidTrianglesInTetrahedronsofa::core::topology::BaseMeshTopologystatic; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; Line typedefsofa::core::topology::BaseMeshTopology; LineID typedefsofa::core::topology::BaseMeshTopology; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load(const char *filename)sofa::core::topology::BaseMeshTopologyvirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html:16424,load,load,16424,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology-members.html,1,['load'],['load']
Performance,:d_highOrderTrianglePositions. High order triangle points of the mesh loaded. . ◆ d_normals. Data< type::vector<sofa::type::Vec3 > > sofa::core::loader::MeshLoader::d_normals. Normals of the mesh loaded. . ◆ d_onlyAttachedPoints. Data< bool > sofa::core::loader::MeshLoader::d_onlyAttachedPoints. Only keep points attached to elements of the mesh. . ◆ d_pentahedra. Data< type::vector< Pentahedron > > sofa::core::loader::MeshLoader::d_pentahedra. Pentahedra of the mesh loaded. . ◆ d_pentahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pentahedraGroups. Groups of Pentahedra. . ◆ d_polygons. Data< type::vector< type::vector<Topology::ElemID> > > sofa::core::loader::MeshLoader::d_polygons. Polygons of the mesh loaded. . ◆ d_polygonsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_polygonsGroups. Groups of Polygons. . ◆ d_polylines. Data< type::vector< Polyline > > sofa::core::loader::MeshLoader::d_polylines. Polylines of the mesh loaded. . ◆ d_positions. Data< type::vector< Vec3 > > sofa::core::loader::MeshLoader::d_positions. Vertices of the mesh loaded. . ◆ d_previousTransformation. type::Matrix4 sofa::core::loader::MeshLoader::d_previousTransformation. protected . to be able to call reinit w/o applying several time the same transform . ◆ d_pyramids. Data< type::vector< Pyramid > > sofa::core::loader::MeshLoader::d_pyramids. Pyramids of the mesh loaded. . ◆ d_pyramidsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pyramidsGroups. Groups of Pyramids. . ◆ d_quads. Data< type::vector< Quad > > sofa::core::loader::MeshLoader::d_quads. Quads of the mesh loaded. . ◆ d_quadsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_quadsGroups. Groups of Quads. . ◆ d_rotation. Data< Vec3 > sofa::core::loader::MeshLoader::d_rotation. Rotation of the DOFs. . ◆ d_scale. Data< Vec3 > sofa::core::loader::MeshLoader::d_scale. Scale of the DOFs in 3 dimensions.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:22556,load,loaded,22556,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loaded']
Performance,":d_rotation. protected . Apply a local rotation on the frames. If 0 a x-axis rotation is applied. If 1 a y-axis rotation is applied, If 2 a z-axis rotation is applied. . ◆ d_rotationAngle. template<class DataTypes > . Data<double> sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_rotationAngle. protected . Angle rotation. . ◆ d_texCoords. template<class DataTypes > . Data< type::vector<sofa::type::Vec2> > sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_texCoords. protected . TexCoords of the mesh loaded. . ◆ d_useNormals. template<class DataTypes > . Data<bool> sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_useNormals. protected . Use normals to compute the orientations; if disabled the direction of the x axisof a vertice is the one from this vertice to the next one. . ◆ d_vertices. template<class DataTypes > . Data< type::vector<CPos> > sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_vertices. protected . Vertices of the mesh loaded. . ◆ EPSILON. template<class DataTypes > . const Vertex2Frame< DataTypes >::Real sofa::component::engine::transform::Vertex2Frame< DataTypes >::EPSILON = std::numeric_limits<Vertex2Frame<DataTypes>::Real>::epsilon(). staticprotected . ◆ m_mstate. template<class DataTypes > . sofa::core::behavior::MechanicalState<DataTypes>::SPtr sofa::component::engine::transform::Vertex2Frame< DataTypes >::m_mstate. protected . Constructor details. ◆ Vertex2Frame(). template<class DataTypes > . sofa::component::engine::transform::Vertex2Frame< DataTypes >::Vertex2Frame. protected . ◆ ~Vertex2Frame(). template<class DataTypes > . sofa::component::engine::transform::Vertex2Frame< DataTypes >::~Vertex2Frame ; (; ). inlineoverrideprotected . Function details. ◆ computeOrientation(). template<class DataTypes > . type::Quat< SReal > sofa::component::engine::transform::Vertex2Frame< DataTypes >::computeOrientation ; (; const CPos & ; xAxis, . const CPos & ; yAxis, . const CPos & ; zAxis . ). pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html:19002,load,loaded,19002,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,1,['load'],['loaded']
Performance,:gui::component::AttachBodyButtonSetting Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::ConstraintAttachButtonSetting Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::FixPickedParticleButtonSetting Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::StartNavigationButtonSetting Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::AddRecordedCameraPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::AttachBodyPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::BaseMouseInteractor Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::ComponentMouseInteraction Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::FixParticlePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::FixParticlePerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformer Class Reference; SOFA API: sofa::gui::component::performer::InciseAlongPathPerformerConfiguration Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::gui::component::performer::InteractionPerformer Class Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::MouseInteractor< DataTypes > Class Template Reference; SOFA API: Member List; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes > Class Template Reference; SOFA API: sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:136625,perform,performer,136625,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['perform'],['performer']
Performance,":gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; RemovePrimitivePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; RemovePrimitivePerformerConfiguration()sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; selectedElemsofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; selectorScalesofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; setScale(double s)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; setTopologicalOperation(int m)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; setVolumicMesh(bool v)sofa::gui::component::performer::RemovePrimitivePerformerConfigurationinline; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer)sofa::gui::component::performer::InteractionPerformer; start()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; surfaceOnVolumesofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; TInteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inline; topologicalOperationsofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; volumeOnSurfacesofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; volumicMeshsofa::gui::component::performer::RemovePrimitivePerformerConfigurationprotected; ~InteractionPerformer()sofa::gui::component::performer::InteractionPerformerinlinevirtual; ~RemovePrimitivePerformer()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >inline. Generated on Mon Nov 11 2024 03:20:05 for SOFA ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html:2761,perform,performer,2761,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,2,['perform'],['performer']
Performance,":helper::system::FileEventListener > m_filelistener;  . Public Member Functions;  GLSLShader ();  ;  ~GLSLShader ();  ; void AddHeader (const std::string &header);  This builds a header before any shader contents. More...;  ; void AddDefineMacro (const std::string &name, const std::string &value);  ; void SetShaderFileName (GLint target, const std::string &fileName);  This function loads and returns a text file for our shaders. More...;  ; void SetShaderFromString (GLint target, const std::string &shaderContent);  ; void SetVertexShaderFileName (const std::string &fileName);  ; void SetVertexShaderFromString (const std::string &string);  ; void SetFragmentShaderFileName (const std::string &fileName);  ; void SetFragmentShaderFromString (const std::string &string);  ; std::string GetShaderStageName (GLint target);  ; std::string LoadTextFile (const std::string &strFile);  This loads our text file for each shader and returns it in a string. More...;  ; void InitShaders ();  This function loads a vertex and fragment shader file. More...;  ; void forceReloadShaderFromFile (const std::string &filename);  ; void InitShaders (const std::string &strVertex, const std::string &strFragment);  This loads a vertex and fragment shader. More...;  ; GLint GetVariable (std::string strVariable);  This returns an ID for a variable in our shader. More...;  ; GLint GetAttributeVariable (std::string strVariable);  This returns an ID for an attribute variable in our shader. More...;  ; void Release ();  This releases our memory for our shader. More...;  . bool IsReady () const;  ; GLhandleARB GetProgram () const;  ; std::string GetShaderFileName (GLint type) const;  ; std::string GetShaderString (GLint type) const;  ; std::string GetHeader () const;  ; bool IsSet (GLint type) const;  ; GLhandleARB GetShaderID (GLint type) const;  ; std::string GetVertexShaderFileName () const;  ; GLhandleARB GetVertexShaderID () const;  ; std::string GetFragmentShaderFileName () const;  ; GLhandleARB GetFr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:1789,load,loads,1789,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,2,['load'],['loads']
Performance,":io::mesh::VoxelGridLoader::roi. ◆ segmentation. helper::io::Image* sofa::component::io::mesh::VoxelGridLoader::segmentation. protected . ◆ segmentationHeaderSize. sofa::core::objectmodel::RenamedData< int > sofa::component::io::mesh::VoxelGridLoader::segmentationHeaderSize. ◆ voxelSize. sofa::core::objectmodel::RenamedData< type::Vec3 > sofa::component::io::mesh::VoxelGridLoader::voxelSize. Constructor details. ◆ VoxelGridLoader(). sofa::component::io::mesh::VoxelGridLoader::VoxelGridLoader ; (; ). protected . ◆ ~VoxelGridLoader(). sofa::component::io::mesh::VoxelGridLoader::~VoxelGridLoader ; (; ). overrideprotected . Function details. ◆ addActiveDataValue(). void sofa::component::io::mesh::VoxelGridLoader::addActiveDataValue ; (; const int ; value). ◆ addBackgroundValue(). void sofa::component::io::mesh::VoxelGridLoader::addBackgroundValue ; (; const int ; value). ◆ canLoad(). bool sofa::component::io::mesh::VoxelGridLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clear(). void sofa::component::io::mesh::VoxelGridLoader::clear ; (; ). virtual . ◆ createSegmentation3DTexture(). void sofa::component::io::mesh::VoxelGridLoader::createSegmentation3DTexture ; (; unsigned char ** ; textureData, . int & ; width, . int & ; height, . int & ; depth . ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getActiveDataValue(). int sofa::component::io::mesh::VoxelGridLoader::getActiveDataValue ; (; const unsigned int ; idx = 0); const. ◆ getBackgroundValue(). int sofa::component::io::mesh::VoxelGridLoader::getBackgroundValue ; (; const unsigned int ; idx = 0); const. ◆ getData(). unsigned char * sofa::component::io::mesh::VoxelGridLoader::getData ; (; ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getDataSize(). int sofa::component::io::mesh::VoxelGridLoader::getDataSize ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getHexaIndicesInGrid(). type::vector< unsigned int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:19842,load,loader,19842,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['load'],['loader']
Performance,":io::mesh::basevtkreader::BaseVTKReader; inputNormalssofa::component::io::mesh::basevtkreader::BaseVTKReader; inputPointDataVectorsofa::component::io::mesh::basevtkreader::BaseVTKReader; inputPointssofa::component::io::mesh::basevtkreader::BaseVTKReader; inputPolygonssofa::component::io::mesh::basevtkreader::BaseVTKReader; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isLittleEndiansofa::component::io::mesh::basevtkreader::BaseVTKReader; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; loadDataArray(tinyxml2::XMLElement *dataArrayElement, int size, string type)sofa::component::io::mesh::XMLVTKReaderprotected; loadDataArray(tinyxml2::XMLElement *dataArrayElement, int size)sofa::component::io::mesh::XMLVTKReaderprotected; loadDataArray(tinyxml2::XMLElement *dataArrayElement)sofa::component::io::mesh::XMLVTKReaderprotected; loadImageData(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadPolydata(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadRectilinearGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadStructuredGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadStructuredPoints(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadUnstructuredGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html:7887,load,loadDataArray,7887,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,1,['load'],['loadDataArray']
Performance,":linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::SparseMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addMulTranspose() [1/4]. template<typename T > . template<class Real2 > . void sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; FullVector< Real2 > & ; res, . const FullVector< Real2 > & ; v . ); const. inline . ◆ addMulTranspose() [2/",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:19407,perform,performances,19407,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,['perform'],['performances']
Performance,":linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::lin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:18183,perform,performances,18183,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,2,['perform'],['performances']
Performance,":linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [4/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [5/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [6/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [7/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [8/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:18672,perform,performances,18672,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['perform'],['performances']
Performance,:loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; detectFileType(const char *filename)sofa::component::io::mesh::MeshVTKLoaderprotected; doClearBuffers() overridesofa::component::io::mesh::MeshVTKLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshVTKLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; edgesDatasofa::component::io::mesh::MeshVTKLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_t,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:6626,load,loader,6626,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,:loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GIDMeshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::GIDMeshLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::io::mesh::GIDMeshLoader; ElementType enum namesofa::component::io::mesh::GIDMeshLoaderprotected; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::st,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:6749,load,loader,6749,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,":loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshGmshLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshGmshLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:6767,load,loader,6767,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance,":loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOffLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshOffLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html:6626,load,loader,6626,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_off_loader-members.html,2,['load'],['loader']
Performance,":loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::MeshXspLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshXspLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html:6626,load,loader,6626,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader-members.html,1,['load'],['loader']
Performance,":loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html:6606,load,loader,6606,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader-members.html,1,['load'],['loader']
Performance,:loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::GridMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglePatternsofa::component::io::mesh::GridMeshCreator; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GridMeshCreatorprotectedvirtual; doLoad() overridesofa::component::io::mesh::GridMeshCreatorvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) const,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:6704,load,loader,6704,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,":loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_resolutionsofa::component::io::mesh::GridMeshCreator; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglePatternsofa::component::io::mesh::GridMeshCreator; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; doClearBuffers() overridesofa::component::io::mesh::GridMeshCreatorprotectedvirtual; doLoad() overridesofa::component::io::mesh::GridMeshCreatorvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:6885,load,loader,6885,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['load'],['loader']
Performance,":loader::MeshLoaderinlinevirtual; getTranslation() constsofa::core::loader::MeshLoaderinlinevirtual; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; Hexahedron typedefsofa::core::loader::MeshLoader; hexasDatasofa::component::io::mesh::MeshVTKLoader; HighOrderEdgePosition typedefsofa::core::loader::MeshLoader; HighOrderHexahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderQuadPosition typedefsofa::core::loader::MeshLoader; HighOrderTetrahedronPosition typedefsofa::core::loader::MeshLoader; HighOrderTrianglePosition typedefsofa::core::loader::MeshLoader; init() overridesofa::core::loader::MeshLoadervirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:11139,load,loader,11139,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,":loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, const Pyramid &p)sofa::core::loader::MeshLoaderprotected; addPyramid(type::vector< Pyramid > &pPyramids, Topology::ElemID p0, Topology::ElemID p1, Topology::ElemID p2, Topology::ElemID p3, Topology::ElemID p4)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, const Quad &p)sofa::core::loader::MeshLoaderprotected; addQuad(type::vector< Quad > &pQuads, Topology::QuadID p0, Topology::QuadID p1, Topology::QuadID p2, Topology::QuadID p3)sofa::core::loader::MeshLoaderprotected; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, const Tetrahedron &p)sofa::core::loader::MeshLoaderprotected; addTetrahedron(type::vector< Tetrahedron > &pTetrahedra, Topology::TetrahedronID p0, Topology::TetrahedronID p1, Topology::TetrahedronID p2, Topology::TetrahedronID p3)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, const Triangle &p)sofa::core::loader::MeshLoaderprotected; addTriangle(type::vector< Triangle > &pTriangles, Topology::TriangleID p0, Topology::TriangleID p1, Topology::TriangleID p2)sofa::core::loader::MeshLoaderprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:3356,load,loader,3356,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,12,['load'],['loader']
Performance,:mesh::MeshVTKLoader:. [legend]; Detailed Description; Format doc: http://www.vtk.org/VTK/img/file-formats.pdf http://www.cacr.caltech.edu/~slombey/asci/vtk/vtk_formats.simple.html . Public Attributes; core::objectmodel::BaseData * pointsData;  ; core::objectmodel::BaseData * edgesData;  ; core::objectmodel::BaseData * trianglesData;  ; core::objectmodel::BaseData * quadsData;  ; core::objectmodel::BaseData * tetrasData;  ; core::objectmodel::BaseData * hexasData;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron point,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html:1445,load,loaded,1445,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,1,['load'],['loaded']
Performance,":mesh::StringMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_prev",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html:5395,load,loader,5395,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAddResourceRepository, sofa::core::objectmodel::BaseObject)sofa::component::sceneutility::BaseAddResourceRepository; SOFA_CLASS(AddDataRepository, BaseAddResourceRepository)sofa::component::sceneutility::AddDataRepository; sofa::component::sceneutility::BaseAddResourceRepository::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateRepositoryPath()sofa::component::sceneutility::BaseAddResourceRepository; VecData typedefsofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html:9523,load,loader,9523,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAddResourceRepository, sofa::core::objectmodel::BaseObject)sofa::component::sceneutility::BaseAddResourceRepository; SOFA_CLASS(AddPluginRepository, BaseAddResourceRepository)sofa::component::sceneutility::AddPluginRepository; sofa::component::sceneutility::BaseAddResourceRepository::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateRepositoryPath()sofa::component::sceneutility::BaseAddResourceRepository; VecData typedefsofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html:9529,load,loader,9529,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAddResourceRepository, sofa::core::objectmodel::BaseObject)sofa::component::sceneutility::BaseAddResourceRepository; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateRepositoryPath()sofa::component::sceneutility::BaseAddResourceRepository; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository-members.html:9439,load,loader,9439,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseController, core::objectmodel::BaseObject)sofa::core::behavior::BaseController; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller-members.html:9076,load,loader,9076,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseController, core::objectmodel::BaseObject)sofa::core::behavior::BaseController; SOFA_CLASS(Controller, core::behavior::BaseController)sofa::component::controller::Controller; sofa::core::behavior::BaseController::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::str",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html:10134,load,loader,10134,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixAccumulatorComponent, objectmodel::BaseObject)sofa::core::BaseMatrixAccumulatorComponent< c >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html:9418,load,loader,9418,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseMatrixLinearSystem, core::objectmodel::BaseObject)sofa::core::behavior::BaseMatrixLinearSystem; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html:9836,load,loader,9836,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(ContactListener, core::objectmodel::BaseObject)sofa::component::collision::response::contact::ContactListener; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" """,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html:10297,load,loader,10297,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor)sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html:10412,load,loader,10412,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor-members.html:9242,load,loader,9242,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; SOFA_CLASS(PlasticMaterial, BaseMaterial)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial::SOFA_CLASS(BaseMaterial, core::objectmodel::BaseObject)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html:10629,load,loader,10629,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(AMDOrderingMethod, BaseEigenOrderingMethod< Eigen::AMDOrdering< int >>)sofa::component::linearsolver::ordering::AMDOrderingMethod; BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >::SOFA_CLASS(BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod)sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >; sofa::core::behavior::BaseOrderingMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html:9577,load,loader,9577,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod)sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< EigenOrderingMethodType >; sofa::core::behavior::BaseOrderingMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html:9622,load,loader,9622,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseMaterial, core::objectmodel::BaseObject)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html:9696,load,loader,9696,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html:9467,load,loader,9467,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method-members.html,4,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BruteForceDetection, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::BruteForceDetection; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:9378,load,loader,9378,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(COLAMDOrderingMethod, BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int >>)sofa::component::linearsolver::ordering::COLAMDOrderingMethod; BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >::SOFA_CLASS(BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod)sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >; sofa::core::behavior::BaseOrderingMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html:9589,load,loader,9589,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(DirectSAP, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::DirectSAP; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:9318,load,loader,9318,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(FileMessageHandlerComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::FileMessageHandlerComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html:9534,load,loader,9534,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(InfoComponent, BaseObject)sofa::component::sceneutility::infocomponent::InfoComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1infocomponent_1_1_info_component-members.html:9204,load,loader,9204,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1infocomponent_1_1_info_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1infocomponent_1_1_info_component-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(InputEventReader, core::objectmodel::BaseObject)sofa::component::playback::InputEventReader; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &sep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html:9220,load,loader,9220,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(MakeAliasComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::makealiascomponent::MakeAliasComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html:9555,load,loader,9555,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(MakeDataAliasComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html:9702,load,loader,9702,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(MessageHandlerComponent, core::objectmodel::BaseObject)sofa::component::sceneutility::MessageHandlerComponent; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html:9429,load,loader,9429,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(NaturalOrderingMethod, core::behavior::BaseOrderingMethod)sofa::component::linearsolver::ordering::NaturalOrderingMethod; sofa::core::behavior::BaseOrderingMethod::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::os",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html:9558,load,loader,9558,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor-members.html:9537,load,loader,9537,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseInteractionProjectiveConstraintSet, BaseProjectiveConstraintSet)sofa::core::behavior::BaseInteractionProjectiveConstraintSet; sofa::core::behavior::BaseProjectiveConstraintSet::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; sofa::StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; sofa::core::behavior::StateAcc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html:11438,load,loader,11438,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StateAccessor()sofa::core::behavior::StateAccessorinlineprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html:10941,load,loader,10941,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(DirectionProjectiveConstraint, DataTypes), SOFA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html:16622,load,loader,16622,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(LineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html:16476,load,loader,16476,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PlaneProjectiveConstraint, DataTypes), SOFA_TEMPLAT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html:16516,load,loader,16516,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SOFA_CLASS2(SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes))sofa::core::beha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html:13392,load,loader,13392,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(FixedRotationProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes))sofa::component::constraint::projective::FixedRotationProjectiveConstraint<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html:14955,load,loader,14955,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SingleStateAccessor(MechanicalState< TDataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< TDataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; SingleStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< TDataTypes >; SOFA_CLASS(SOFA_TEMPLATE(OscillatorProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes))sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html:15001,load,loader,15001,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,1,['load'],['loader']
Performance,":objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setGroup(int g)sofa::core::behavior::BaseProjectiveConstraintSetinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; sofa::SOFA_ABSTRACT_CLASS(BaseInteractionProjectiveConstraintSet, BaseProjectiveConstraintSet)sofa::core::behavior::BaseInteractionProjectiveConstraintSet; sofa::core::behavior::BaseProjectiveConstraintSet::SOFA_ABSTRACT_CLASS(BaseProjectiveConstraintSet, objectmodel::BaseObject)sofa::core::behavior::BaseProjectiveConstraintSet; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; PairStateAccessor< TDataTypes >::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes), StateAccessor)sofa::core::behavior::PairStateAccessor< TDataTypes >; SOFA_CLASS(BaseObject, B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html:14692,load,loader,14692,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set-members.html,1,['load'],['loader']
Performance,:objectmodel::BaseData * tetrasData;  ; core::objectmodel::BaseData * hexasData;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ; Data< type::vector< sofa::type::Vec3 > > d_normals;  Normals of the mesh loaded. More...;  ; Data< type::vector< PrimitiveGroup > > d_edgesGroups;  Groups of Edges. More...;  ; Data< type::vector< PrimitiveGroup > > d_trianglesGroups;  Groups of Triangles. More...;  ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html:1841,load,loaded,1841,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,1,['load'],['loaded']
Performance,":objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; normalizeGroup(type::vector< sofa::core::loader::PrimitiveGroup > &group)sofa::component::io::mesh::MeshGmshLoaderprotected; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; readGmsh(std::ifstream &file, const unsigned int gmshFormat)sofa::component::io::mesh::MeshGmshLoaderprotected; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:13969,load,loader,13969,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance,":objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; normalizeGroup(type::vector< sofa::core::loader::PrimitiveGroup > &group)sofa::component::io::mesh::MeshGmshLoaderprotected; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; readGmsh(std::ifstream &file, const unsigned int gmshFormat)sofa::component::io::mesh::MeshGmshLoaderprotected; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:14064,load,loader,14064,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,1,['load'],['loader']
Performance,":setting::MouseButtonSetting *button) override;  ;  Public Member Functions inherited from sofa::gui::qt::QMouseOperation; DataWidget * createWidgetFromData (sofa::core::objectmodel::BaseData *data);  ;  Public Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation;  AddRecordedCameraOperation ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::AddRecordedCameraOperation; sofa::gui::component::AddRecordedCameraButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::AddRecordedCameraOperation; virtual std::string defa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html:1485,perform,performer,1485,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_recorded_camera_operation.html,2,['perform'],['performer']
Performance,":type::PrimitiveGroup > &group, int tag, std::size_t eid);  ; void normalizeGroup (type::vector< sofa::type::PrimitiveGroup > &group);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; type::vector< PrimitiveGroup > m_hexahedraGroups;  Groups of Hexahedra. More...;  ; type::vector< PrimitiveGroup > m_pentahedraGroups;  Groups of Pentahedra. More...;  ; type::vector< PrimitiveGroup > m_pyramidsGroups;  Groups of Pyramids. More...;  ; sofa::type::vector< type::Vec3 > texCoords;  ; sofa::type::vector< type::Vec3 > normals;  ; so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:3942,load,loaded,3942,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,2,['load'],['loaded']
Performance,":type::vector< HighOrderTrianglePosition > & getHighOrderTrianglePositions () const;  ; const sofa::type::vector< HighOrderQuadPosition > & getHighOrderQuadPositions () const;  ; const Material & getMaterial () const;  ; const std::vector< Material > & getMaterials ();  ; const std::vector< PrimitiveGroup > & getGroups ();  ; std::string & getTextureName ();  . Protected Member Functions; void readOBJ (std::istream &file, const std::string &filename);  ; void readMTL (const char *filename);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::io::Mesh; std::string loaderType;  ;  Protected Attributes inherited from sofa::helper::io::Mesh; sofa::type::vector< type::Vec3 > m_vertices;  ; sofa::type::vector< Edge > m_edges;  Edges of the mesh loaded. More...;  ; sofa::type::vector< Triangle > m_triangles;  Triangles of the mesh loaded. More...;  ; sofa::type::vector< Quad > m_quads;  Quads of the mesh loaded. More...;  ; type::vector< type::vector< sofa::Index > > m_polygons;  Polygons of the mesh loaded. More...;  ; type::vector< HighOrderEdgePosition > m_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; type::vector< HighOrderTrianglePosition > m_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; type::vector< HighOrderQuadPosition > m_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; sofa::type::vector< Tetrahedron > m_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; sofa::type::vector< Hexahedron > m_hexahedra;  Hexahedra of the mesh loaded. More...;  ; type::vector< PrimitiveGroup > m_edgesGroups;  Groups of Edges. More...;  ; type::vector< PrimitiveGroup > m_trianglesGroups;  Groups of Triangles. More...;  ; type::vector< PrimitiveGroup > m_quadsGroups;  Groups of Quads. More...;  ; type::vector< PrimitiveGroup > m_polygonsGroups;  Groups of Polygons. More...;  ; type::vector< PrimitiveGroup > m_tetrahedraGroups;  Groups of Tetrahedr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:3427,load,loaded,3427,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,2,['load'],['loaded']
Performance,"; ""AddRecordedCamera"" ; ). ◆ AttachBodyPerformerRigid3dClass. helper::Creator<InteractionPerformer::InteractionPerformerFactory, AttachBodyPerformer<defaulttype::Rigid3Types> > sofa::gui::component::performer::AttachBodyPerformerRigid3dClass(""AttachBody"", true) ; (; ""AttachBody"" ; , . true ;  . ). ◆ AttachBodyPerformerVec2dClass. helper::Creator<InteractionPerformer::InteractionPerformerFactory, AttachBodyPerformer<defaulttype::Vec2Types> > sofa::gui::component::performer::AttachBodyPerformerVec2dClass(""AttachBody"", true) ; (; ""AttachBody"" ; , . true ;  . ). ◆ AttachBodyPerformerVec3dClass. helper::Creator<InteractionPerformer::InteractionPerformerFactory, AttachBodyPerformer<defaulttype::Vec3Types> > sofa::gui::component::performer::AttachBodyPerformerVec3dClass(""AttachBody"", true) ; (; ""AttachBody"" ; , . true ;  . ). ◆ ComponentMouseInteractionRigid3Class. helper::Creator<ComponentMouseInteraction::ComponentMouseInteractionFactory, TComponentMouseInteraction<defaulttype::Rigid3Types> > sofa::gui::component::performer::ComponentMouseInteractionRigid3Class(""MouseSpringRigid3"", true) ; (; ""MouseSpringRigid3"" ; , . true ;  . ). ◆ ComponentMouseInteractionVec2Class. helper::Creator<ComponentMouseInteraction::ComponentMouseInteractionFactory, TComponentMouseInteraction<defaulttype::Vec2Types> > sofa::gui::component::performer::ComponentMouseInteractionVec2Class(""MouseSpringVec2"", true) ; (; ""MouseSpringVec2"" ; , . true ;  . ). ◆ ComponentMouseInteractionVec3Class. helper::Creator<ComponentMouseInteraction::ComponentMouseInteractionFactory, TComponentMouseInteraction<defaulttype::Vec3Types> > sofa::gui::component::performer::ComponentMouseInteractionVec3Class(""MouseSpringVec3"", true) ; (; ""MouseSpringVec3"" ; , . true ;  . ). ◆ ConstraintAttachBodyPerformerRigidClass. helper::Creator<InteractionPerformer::InteractionPerformerFactory, ConstraintAttachBodyPerformer<defaulttype::RigidTypes> > sofa::gui::component::performer::ConstraintAttachBodyPerformerRigidClass(""Constrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component_1_1performer.html:5870,perform,performer,5870,api/master/sofa/html/namespacesofa_1_1gui_1_1component_1_1performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component_1_1performer.html,2,['perform'],['performer']
Performance,"; (; ). inline . ◆ ~BlockDiagonalMatrix(). template<std::size_t LC, typename T = SReal> . sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::~BlockDiagonalMatrix ; (; ). inlineoverride . Function details. ◆ add() [1/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [2/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<std::size_t LC, typename T = SReal> . void sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:16857,perform,performances,16857,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['perform'],['performances']
Performance,"; (; ). ◆ initFromTopology(). void sofa::component::visual::VisualModelImpl::initFromTopology ; (; ). ◆ initPositionFromVertices(). void sofa::component::visual::VisualModelImpl::initPositionFromVertices ; (; ). ◆ insertInNode(). bool sofa::component::visual::VisualModelImpl::insertInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ internalDraw(). virtual void sofa::component::visual::VisualModelImpl::internalDraw ; (; const core::visual::VisualParams * ; , . bool ;  . ). inlinevirtual . Rendering method. ; Reimplemented in sofa::gl::component::rendering3d::OglModel. ◆ isUsingTopology(). bool sofa::component::visual::VisualModelImpl::isUsingTopology ; (; ); const. inline . ◆ load(). bool sofa::component::visual::VisualModelImpl::load ; (; const std::string & ; filename, . const std::string & ; loader, . const std::string & ; textureName . ). ◆ loadTexture(). virtual bool sofa::component::visual::VisualModelImpl::loadTexture ; (; const std::string & ; ). inlinevirtual . Reimplemented in sofa::gl::component::rendering3d::OglModel. ◆ loadTextures(). virtual bool sofa::component::visual::VisualModelImpl::loadTextures ; (; ). inlinevirtual . Reimplemented in sofa::gl::component::rendering3d::OglModel. ◆ parse(). void sofa::component::visual::VisualModelImpl::parse ; (; core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base.; Reimplemented in sofa::gl::component::rendering3d::MergeVisualModels, and sofa::gl::component::rendering3d::OglModel. ◆ removeInNode(). bool sofa::component::visual::VisualModelImpl::removeInNode ; (; core::objectmodel::BaseNod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:45762,load,load,45762,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['load'],['load']
Performance,"; (; sofa::core::CollisionElementIterator ; elem, . sofa::type::Vec3 & ; pos, . bool ; firstInput, . int ; snapingValue = 0, . int ; snapingBorderValue = 0 . ). Handles Cutting (activated only for a triangular topology); Only one model is given. This function perform incision between input point and stocked information. If it is the first point of the incision, these information are stocked. i.e element index and picked point coordinates.; See alsoincisionTriangleSetTopology; Parameters. elem- iterator to collision model. ; pos- picked point coordinates. ; firstInput- bool, if yes this is the first incision point. ; snapingValue- threshold distance from point to incision path where point has to be snap on incision path. ; snapingBorderValue- threshold distance from point to mesh border where incision is considered to reach the border.. Returnsbool - true if incision has been performed. . ◆ incisionCollisionModel() [2/2]. bool sofa::gui::component::performer::TopologicalChangeManager::incisionCollisionModel ; (; sofa::core::CollisionModel * ; model1, . Index ; idx1, . const sofa::type::Vec3 & ; firstPoint, . sofa::core::CollisionModel * ; model2, . Index ; idx2, . const sofa::type::Vec3 & ; secondPoint, . int ; snapingValue = 0, . int ; snapingBorderValue = 0 . ). Handles Cutting for general model collision (activated only for a triangular topology for the moment).; Given two collision model, perform an incision between two points. See alsoincisionTriangleSetTopology; Parameters. model1- first collision model. ; idx1- first element index. ; firstPoint- first picked point coordinates. ; model2- second collision model. ; idx2- second element index. ; secondPoint- second picked point coordinates. ; snapingValue- threshold distance from point to incision path where point has to be snap on incision path. ; snapingBorderValue- threshold distance from point to mesh border where incision is considered to reach the border.. Returnsbool - true if incision has been performed. . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager.html:2884,perform,performer,2884,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_topological_change_manager.html,2,['perform'],['performer']
Performance,"; CIRCLE enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::io::mesh::GIDMeshLoader; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::MeshLoader; d_highOrderTetrahedronPositionssofa::core::loader::MeshLoader; d_highOrderTrianglePositionssofa::core::loader::MeshLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:5616,load,loader,5616,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,"; Data< type::vector< sofa::type::Vec3 > > d_normalsList;  Normals definition. More...;  ; Data< type::vector< sofa::type::Vec2 > > d_texCoords;  Texture coordinates of all faces, to be used as the parent data of a VisualModel texcoords data. More...;  ; Data< bool > d_computeMaterialFaces;  True to activate export of Data instances containing list of face indices for each material. More...;  ; type::vector< Data< type::vector< unsigned int > > * > d_subsets_indices;  ; Data< type::vector< int > > d_vertPosIdx;  ; Data< type::vector< int > > d_vertNormIdx;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:2415,load,loaded,2415,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['load'],['loaded']
Performance,"; MapLink typedefsofa::core::objectmodel::Base; mouseCollisionsofa::gui::component::performer::BaseMouseInteractorprotected; MouseCollisionModel typedefsofa::gui::component::performer::BaseMouseInteractor; MouseContainer typedefsofa::gui::component::performer::MouseInteractor< DataTypes >; mouseInSofasofa::gui::component::performer::MouseInteractor< DataTypes >protected; MouseInteractor()sofa::gui::component::performer::MouseInteractor< DataTypes >inline; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; performerssofa::gui::component::performer::BaseMouseInteractorprotected; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::BehaviorModelvirtual; removeInteractionPerformer(InteractionPerformer *i)sofa::gui::component::performer::BaseMouseInteractor; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setBodyPicked(BodyPicked picked)sofa::gui::component::performer::BaseMouseInteractorinline; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDistanceFromMouse(SReal d)sofa::gui::component::performer::BaseMouseInteractorinline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciation",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html:9745,perform,performer,9745,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor-members.html,2,['perform'],['performer']
Performance,"; SOFA API: Member List; SOFA API: sofa::core::collision::ElementIntersector Class Reference; SOFA API: Member List; SOFA API: sofa::core::collision::Intersection Class Reference; SOFA API: Member List; SOFA API: sofa::core::collision::IntersectorCreator< TIntersectionClass, TIntersectorClass > Class Template Reference; SOFA API: Member List; SOFA API: sofa::core::collision::IntersectorFactory< TIntersectionClass > Class Template Reference; SOFA API: Member List; SOFA API: sofa::core::collision::IntersectorMap Class Reference; SOFA API: Member List; SOFA API: sofa::core::collision::MemberElementIntersector< Elem1, Elem2, T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::core::collision::NarrowPhaseDetection Class Reference; SOFA API: Member List; SOFA API: sofa::core::collision::Pipeline Class Reference; SOFA API: Member List; SOFA API: sofa::core::collision::TDetectionOutputVector< CM1, CM2 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::core::loader::BaseLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::loader::ImageLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::loader::MeshLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::loader::SceneLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::loader::VoxelLoader Class Reference; SOFA API: Member List; SOFA API: sofa::core::matrixaccumulator::no_check_policy Class Reference; SOFA API: sofa::core::objectmodel::AbstractDataLink Class Reference; SOFA API: Member List; SOFA API: sofa::core::objectmodel::Aspect Class Reference; SOFA API: sofa::core::objectmodel::AspectBuffer Class Reference; SOFA API: Member List; SOFA API: sofa::core::objectmodel::AspectPool Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::core::objectmodel::Base Class Reference; SOFA API: sofa::core::objectmodel::BaseClass Class Reference; SOFA API: sofa::core::objectmodel::BaseClassNameHelper Class Reference; SOFA ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:105607,load,loader,105607,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['load'],['loader']
Performance,"; SeqPositions typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; SeqQuads typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; SeqTriangles typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDirtyOutputs()sofa::core::objectmodel::DDGNodevirtual; setDirtyValue()sofa::core::objectmodel::DDGNodevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(DataEngine, core::objectmodel::BaseObject)sofa::core::DataEngine; SOFA_CLASS(SOFA_TEMPLATE(MeshClosingEngine, DataTypes), Inherited)sofa::component::engine::generate::MeshClosingEngine< DataTypes >; sofa::core::DataEngine::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; Triangle typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; trianglessofa::component::engine::generate::MeshClosingEngine< DataTypes >; update() finalsofa::core::DataEnginevirtual; updateAllInputsIfDirty()sofa::core::DataTrackerDDGNode; updateIfDirty() constsofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html:12669,load,loader,12669,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,1,['load'],['loader']
Performance,"; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QAddSutureOperationinlinevirtual; sofa::gui::common::AddSutureOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddSutureOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; dampingsofa::gui::qt::QAddSutureOperationprotected; defaultPerformerType() overridesofa::gui::common::AddSutureOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDamping() const overridesofa::gui::qt::QAddSutureOperationvirtual; getDescription()sofa::gui::common::AddSutureOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() const overridesofa::gui::qt::QAddSutureOperationvirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QAddSutureOperation()sofa::gui::qt::QAddSutureOperation; setDamping(double f)sofa::gui::common::AddSutureOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double f)sofa::gui::common::AddSutureOperationinline; start()sofa::gui::common::Operationvirtual; stiffnesssofa::gui::qt::QAddSutureOperationprotected; wait()sofa::gui::common::Operationinlinevirtual; ~AddSutureOperation() overridesofa::gui::common::AddSutureOperationinline; ~Operation()sofa::gui::common::Operationinlinevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html:1668,perform,performersofa,1668,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html,2,['perform'],['performersofa']
Performance,"; class  OperationCreator;  ; class  TOperationCreator;  ; class  OperationFactory;  ; class  RegisterOperation;  ; class  CallBackPicker;  ; class  CallBackRender;  ; class  PickHandler;  ; class  BaseViewerArgument;  ; class  ViewerQtArgument;  . Enumerations; enum  { BTLEFT_MODE = 101; , BTRIGHT_MODE = 102; , BTMIDDLE_MODE = 103; };  ; enum  MOUSE_BUTTON { LEFT; , MIDDLE; , RIGHT; , NONE; };  ; enum  MOUSE_STATUS { PRESSED; , RELEASED; , ACTIVATED; , DEACTIVATED; };  . Functions; void decodeCollisionElement (const RGBAColor &colour, BodyPicked &body);  ; void decodePosition (BodyPicked &body, const RGBAColor &colour, const TriangleCollisionModel< sofa::defaulttype::Vec3Types > *model, const unsigned int index);  ; void decodePosition (BodyPicked &body, const RGBAColor &colour, const SphereCollisionModel< sofa::defaulttype::Vec3Types > *model, const unsigned int index);  ; void decodeCollisionElement (const sofa::type::Vec4f &colour, sofa::gui::component::performer::BodyPicked &body)=delete;  ; void decodePosition (sofa::gui::component::performer::BodyPicked &body, const sofa::type::Vec4f &colour, const sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types > *model, const unsigned int index)=delete;  ; void decodePosition (sofa::gui::component::performer::BodyPicked &body, const sofa::type::Vec4f &colour, const sofa::component::collision::geometry::SphereCollisionModel< sofa::defaulttype::Vec3Types > *model, const unsigned int index)=delete;  ; void init ();  . Variables; FileRepository GuiDataRepository (""GUI_DATA_PATH"", { Utils::getSofaPathTo(""share/sofa/gui/qt"") }, { { Utils::getSofaPathTo(""etc/Sofa.Gui.Qt.ini"").c_str(), {""RESOURCES_DIR""} } });  . Enumeration Type Documentation. ◆ anonymous enum. anonymous enum. EnumeratorBTLEFT_MODE ; BTRIGHT_MODE ; BTMIDDLE_MODE . ◆ MOUSE_BUTTON. enum sofa::gui::common::MOUSE_BUTTON. EnumeratorLEFT ; MIDDLE ; RIGHT ; NONE . ◆ MOUSE_STATUS. enum sofa::gui::common::MOUSE_STATUS. EnumeratorPR",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1common.html:1680,perform,performer,1680,api/master/sofa/html/namespacesofa_1_1gui_1_1common.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1common.html,6,['perform'],['performer']
Performance,; d_materialsofa::component::io::mesh::MeshOBJLoader; d_materialssofa::component::io::mesh::MeshOBJLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::core::loader::MeshLoader; d_normalsIndexListsofa::component::io::mesh::MeshOBJLoader; d_normalsListsofa::component::io::mesh::MeshOBJLoader; d_onlyAttachedPointssofa::core::loader::MeshLoader; d_pentahedrasofa::core::loader::MeshLoader; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_positionsListsofa::component::io::mesh::MeshOBJLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_subsets_indicessofa::component::io::mesh::MeshOBJLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_texCoordssofa::component::io::mesh::MeshOBJLoader; d_texCoordsListsofa::component::io::mesh::MeshOBJLoader; d_texIndexListsofa::component::io::mesh::MeshOBJLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; d_vertNormIdxsofa::component::io::mesh::MeshOBJLoader; d_vertPosIdxsofa::component::io::mesh::MeshOBJLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOBJLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshOBJLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:7273,load,loader,7273,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['loader']
Performance,; d_pentahedraGroupssofa::core::loader::MeshLoader; d_polygonssofa::core::loader::MeshLoader; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_positionsListsofa::component::io::mesh::MeshOBJLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_subsets_indicessofa::component::io::mesh::MeshOBJLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_texCoordssofa::component::io::mesh::MeshOBJLoader; d_texCoordsListsofa::component::io::mesh::MeshOBJLoader; d_texIndexListsofa::component::io::mesh::MeshOBJLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; d_vertNormIdxsofa::component::io::mesh::MeshOBJLoader; d_vertPosIdxsofa::component::io::mesh::MeshOBJLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOBJLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshOBJLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; EDGE enum valuesofa::component::io::mesh::MeshOBJLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; faceTypesofa::component::io::mesh::MeshOBJLoaderprotected; FaceType enum namesofa::component::io::mesh::MeshOBJLoader; findData(const std::string &name) constsofa::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:7685,load,loader,7685,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['loader']
Performance,"; d_polygonsGroupssofa::core::loader::MeshLoader; d_polylinessofa::core::loader::MeshLoader; d_positionssofa::core::loader::MeshLoader; d_positionsListsofa::component::io::mesh::MeshOBJLoader; d_previousTransformationsofa::core::loader::MeshLoaderprotected; d_pyramidssofa::core::loader::MeshLoader; d_pyramidsGroupssofa::core::loader::MeshLoader; d_quadssofa::core::loader::MeshLoader; d_quadsGroupssofa::core::loader::MeshLoader; d_rotationsofa::core::loader::MeshLoader; d_scalesofa::core::loader::MeshLoader; d_subsets_indicessofa::component::io::mesh::MeshOBJLoader; d_tetrahedrasofa::core::loader::MeshLoader; d_tetrahedraGroupssofa::core::loader::MeshLoader; d_texCoordssofa::component::io::mesh::MeshOBJLoader; d_texCoordsListsofa::component::io::mesh::MeshOBJLoader; d_texIndexListsofa::component::io::mesh::MeshOBJLoader; d_transformationsofa::core::loader::MeshLoader; d_translationsofa::core::loader::MeshLoader; d_trianglessofa::core::loader::MeshLoader; d_trianglesGroupssofa::core::loader::MeshLoader; d_triangulatesofa::core::loader::MeshLoader; d_vertNormIdxsofa::component::io::mesh::MeshOBJLoader; d_vertPosIdxsofa::component::io::mesh::MeshOBJLoader; doClearBuffers() overridesofa::component::io::mesh::MeshOBJLoaderprotectedvirtual; doLoad() overridesofa::component::io::mesh::MeshOBJLoadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::loader::MeshLoader; EDGE enum valuesofa::component::io::mesh::MeshOBJLoader; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; faceTypesofa::component::io::mesh::MeshOBJLoaderprotected; FaceType enum namesofa::component::io::mesh::MeshOBJLoader; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html:7777,load,loader,7777,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader-members.html,1,['load'],['loader']
Performance,"; getSegmentID()=0sofa::core::loader::VoxelLoaderpure virtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; getVoxelSize() const =0sofa::core::loader::VoxelLoaderpure virtual; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; hexahedrasofa::core::loader::VoxelLoader; Hexahedron typedefsofa::core::loader::VoxelLoader; init()sofa::core::objectmodel::BaseObjectvirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html:6620,load,loader,6620,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader-members.html,1,['load'],['loader']
Performance,"; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LEGACY enum valuesofa::component::io::mesh::MeshVTKLoaderprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MeshVTKLoader()sofa::component::io::mesh::MeshVTKLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; NONE enum valuesofa::component::io::mesh::MeshVTKLoaderprotected; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:12698,load,loader,12698,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,"; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LINEAR enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; load() finalsofa::core::loader::MeshLoadervirtual; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MeshLoader()sofa::core::loader::MeshLoaderprotected; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:12861,load,loader,12861,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['load'],['loader']
Performance,"; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; loadDataArray(tinyxml2::XMLElement *dataArrayElement, int size, string type)sofa::component::io::mesh::XMLVTKReaderprotected; loadDataArray(tinyxml2::XMLElement *dataArrayElement, int size)sofa::component::io::mesh::XMLVTKReaderprotected; loadDataArray(tinyxml2::XMLElement *dataArrayElement)sofa::component::io::mesh::XMLVTKReaderprotected; loadImageData(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadPolydata(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadRectilinearGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadStructuredGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadStructuredPoints(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; loadUnstructuredGrid(tinyxml2::XMLHandle datasetFormatHandle)sofa::component::io::mesh::XMLVTKReaderprotected; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; newVTKDataIO(const string &typestr)sofa::component::io::mesh::basevtkreader::BaseVTKReader; newVTKDataIO(const string &typestr, int num)sofa::component::io::mesh::basevtkreader::BaseVTKReader; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html:8527,load,loadUnstructuredGrid,8527,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader-members.html,1,['load'],['loadUnstructuredGrid']
Performance,"; notMuted() constsofa::core::objectmodel::Baseinline; parse(sofa::core::objectmodel::BaseObjectDescription *arg) overridesofa::core::loader::MeshLoadervirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Pentahedron typedefsofa::core::loader::MeshLoader; PointID typedefsofa::core::loader::MeshLoader; pointsDatasofa::component::io::mesh::MeshVTKLoader; Polyline typedefsofa::core::loader::MeshLoader; Ptr typedefsofa::core::objectmodel::Base; Pyramid typedefsofa::core::loader::MeshLoader; Quad typedefsofa::core::loader::MeshLoader; quadsDatasofa::component::io::mesh::MeshVTKLoader; readersofa::component::io::mesh::MeshVTKLoaderprotected; readLine(char *buf, int size, FILE *f)sofa::core::loader::BaseLoaderprotectedstatic; reinit() overridesofa::core::loader::MeshLoadervirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setFilename(std::string f)sofa::core::loader::BaseLoader; setInputsData()sofa::component::io::mesh::MeshVTKLoaderprotected; setInputsMesh()sofa::component::io::mesh::MeshVTKLoaderprotected; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setRotation(SReal rx, SRe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html:14612,load,loader,14612,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader-members.html,1,['load'],['loader']
Performance,"; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(OglRenderingSRGB, core::visual::VisualManager)sofa::gl::component::shader::OglRenderingSRGB; sofa::core::visual::VisualManager::SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html:10696,load,loader,10696,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,2,['load'],['loader']
Performance,"; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualManagervirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(VisualManager, VisualModel)sofa::core::visual::VisualManager; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)sofa::core::visual::VisualModel; updateVisual() finalsofa::core::visual::VisualModelvirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html:10610,load,loader,10610,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,1,['load'],['loader']
Performance,"; removeFirstElements()sofa::component::visual::TrailRenderer< DataTypes >protected; removeInNode(objectmodel::BaseNode *node) overridesofa::core::visual::VisualModelvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::component::visual::TrailRenderer< DataTypes >virtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(VisualModel, objectmodel::BaseObject)sofa::core::visual::VisualModel; SOFA_CLASS(TrailRenderer, core::visual::VisualModel)sofa::component::visual::TrailRenderer< DataTypes >; sofa::core::visual::VisualModel::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeParticlePositions()sofa::component::visual::TrailRenderer< DataTypes >protected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; TrailRenderer()sofa::component::visual::TrailRenderer< DataTypes >protected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; updateVisual(const VisualParams *)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html:11076,load,loader,11076,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,1,['load'],['loader']
Performance,"; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDetectionOutputs(OutputVector *outputs) overridesofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >virtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setKeepAlive(bool val) overridesofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >inlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Contact, objectmodel::BaseObject)sofa::core::collision::Contact; SOFA_CLASS(SOFA_TEMPLATE2(StickContactConstraint, TCollisionModel1, TCollisionModel2), core::collision::Contact)sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >; sofa::core::collision::Contact::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; StickContactConstraint()sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >protected; StickContactConstraint(CollisionModel1 *model1, CollisionModel2 *model2, Intersection *intersectionMethod)sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html:13748,load,loader,13748,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint-members.html,1,['load'],['loader']
Performance,"; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_size. template<class DataTypes > . SReal sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::m_size. protected . ◆ m_stiffness. template<class DataTypes > . SReal sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::m_stiffness. protected . Constructor details. ◆ AttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::AttachBodyPerformer ; (; BaseMouseInteractor * ; i). ◆ ~AttachBodyPerformer(). template<class DataTypes > . virtual sofa::gui::component::performer::AttachBodyPerformer< DataTypes >::~AttachBodyPerformer ; (; ). virtualdefault . Function details. ◆ confi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html:2256,perform,performer,2256,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,6,['perform'],['performer']
Performance,"; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void invert ();  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:2946,perform,performances,2946,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['perform'],['performances']
Performance,";  ; Data< type::Vec2i > d_resolution;  Number of vertices in each direction. More...;  ; Data< int > d_trianglePattern;  0: no triangles, 1: alternate triangles, 2: upward triangles, 3: downward triangles More...;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ; Data< type::vector< sofa::type::Vec3 > > d_normals;  Normals of the mesh loaded. More...;  ; Data< type::vector< PrimitiveGroup > > d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:1883,load,loaded,1883,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,1,['load'],['loaded']
Performance,;  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ cpt. int sofa::gui::common::InciseOperation::cpt. protected . ◆ finishIncision. bool sofa::gui::common::InciseOperation::finishIncision. protected . ◆ keepPoint. bool sofa::gui::common::InciseOperation::keepPoint. protected . ◆ method. int sofa::gui::common::InciseOperation::method. protected . ◆ snapingBorderValue. int sofa::gui::common::InciseOperation::snapingBorderValue. protected . ◆ snapingValue. int sofa::gui::common::InciseOperation::snapingValue. protected . ◆ startPerformer. sofa::gui::component::performer::InteractionPerformer* sofa::gui::common::InciseOperation::startPerformer. protected . Constructor details. ◆ InciseOperation(). sofa::gui::common::InciseOperation::InciseOperation ; (; ). inline . ◆ ~InciseOperation(). sofa::gui::common::InciseOperation::~InciseOperation ; (; ). override . Function details. ◆ end(). void sofa::gui::common::InciseOperation::end ; (; ). overridevirtual . Reimplemented from sofa::gui::common::Operation. ◆ endOperation(). void sofa::gui::common::InciseOperation::endOperation ; (; ). overridevirtual . This function is called after each mouse click. ; Reimplemented from sofa::gui::common::Operation. ◆ execution(). void sofa::gui::common::InciseOperation::execution ; (; ). overridevirtual . This function is called each time the mouse is clicked. ; Reimplemented from sofa::gui::common::Operation. ◆ getCompleteIncision(). virtual bool sofa::gui::common::InciseOperation::getCompleteIncision ; (; ). inlinevirtual . Reimplemented in sofa::gui::qt::QInciseOperation. ◆ getDescription(),MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html:3201,perform,performer,3201,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,2,['perform'],['performer']
Performance,";  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions; bool loadUnstructuredGrid (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadPolydata (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadRectilinearGrid (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadStructuredGrid (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadStructuredPoints (tinyxml2::XMLHandle datasetFormatHandle);  ; bool loadImageData (tinyxml2::XMLHandle datasetFormatHandle);  ; BaseVTKDataIO * loadDataArray (tinyxml2::XMLElement *dataArrayElement, int size, string type);  ; BaseVTKDataIO * loadDataArray (tinyxml2::XMLElement *dataArrayElement, int size);  ; BaseVTKDataIO * loadDataArray (tinyxml2::XMLElement *dataArrayElement);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html:9183,load,loadUnstructuredGrid,9183,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,9,['load'],"['loadDataArray', 'loadImageData', 'loadPolydata', 'loadRectilinearGrid', 'loadStructuredGrid', 'loadStructuredPoints', 'loadUnstructuredGrid']"
Performance,";  ; sofa::core::objectmodel::RenamedData< bool > multi_grid;  ; sofa::core::objectmodel::RenamedData< int > multi_grid_levels;  ; sofa::core::objectmodel::RenamedData< int > merge_method;  ; sofa::core::objectmodel::RenamedData< int > merge_spatial_step;  ; sofa::core::objectmodel::RenamedData< int > merge_local_levels;  ; sofa::core::objectmodel::RenamedData< std::set< int > > constraintGroups;  ; sofa::core::objectmodel::RenamedData< std::map< std::string, sofa::type::vector< SReal > > > f_graph;  ; sofa::core::objectmodel::RenamedData< int > showLevels;  ; sofa::core::objectmodel::RenamedData< SReal > showCellWidth;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > showTranslation;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > showLevelTranslation;  ; Data< bool > d_displayDebug;  Display debug information. More...;  ; Data< bool > d_initial_guess;  activate LCP results history to improve its resolution performances. More...;  ; Data< bool > d_build_lcp;  LCP is not fully built to increase performance in some case. More...;  ; Data< SReal > d_tol;  residual error threshold for termination of the Gauss-Seidel algorithm More...;  ; Data< int > d_maxIt;  maximal number of iterations of the Gauss-Seidel algorithm More...;  ; Data< SReal > d_mu;  Friction coefficient. More...;  ; Data< SReal > d_minW;  If not zero, constraints whose self-compliance (i.e. the corresponding value on the diagonal of W) is smaller than this threshold will be ignored. More...;  ; Data< SReal > d_maxF;  If not zero, constraints whose response force becomes larger than this threshold will be ignored. More...;  ; Data< bool > d_multi_grid;  activate multi_grid resolution (NOT STABLE YET) More...;  ; Data< int > d_multi_grid_levels;  if multi_grid is active: how many levels to create (>=2) More...;  ; Data< int > d_merge_method;  if multi_grid is active: which method to use to merge constraints (0 = compliance-based, 1 = spatial coordinates) More...;  ; Data< int > d_merge_spatial",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:2000,perform,performance,2000,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['perform'],['performance']
Performance,";  ; static bool readLine (char *buf, int size, FILE *f);  . Attribute details. ◆ d_createSubelements. Data< bool > sofa::core::loader::MeshLoader::d_createSubelements. Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) . ◆ d_edges. Data< type::vector< Edge > > sofa::core::loader::MeshLoader::d_edges. Edges of the mesh loaded. . ◆ d_edgesGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_edgesGroups. Groups of Edges. . ◆ d_flipNormals. Data< bool > sofa::core::loader::MeshLoader::d_flipNormals. Flip Normals. . ◆ d_hexahedra. Data< type::vector< Hexahedron > > sofa::core::loader::MeshLoader::d_hexahedra. Hexahedra of the mesh loaded. . ◆ d_hexahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_hexahedraGroups. Groups of Hexahedra. . ◆ d_highOrderEdgePositions. Data< type::vector< HighOrderEdgePosition > > sofa::core::loader::MeshLoader::d_highOrderEdgePositions. High order edge points of the mesh loaded. . ◆ d_highOrderHexahedronPositions. Data< type::vector< HighOrderHexahedronPosition > > sofa::core::loader::MeshLoader::d_highOrderHexahedronPositions. High order hexahedron points of the mesh loaded. . ◆ d_highOrderQuadPositions. Data< type::vector< HighOrderQuadPosition > > sofa::core::loader::MeshLoader::d_highOrderQuadPositions. High order quad points of the mesh loaded. . ◆ d_highOrderTetrahedronPositions. Data< type::vector< HighOrderTetrahedronPosition > > sofa::core::loader::MeshLoader::d_highOrderTetrahedronPositions. High order tetrahedron points of the mesh loaded. . ◆ d_highOrderTrianglePositions. Data< type::vector< HighOrderTrianglePosition > > sofa::core::loader::MeshLoader::d_highOrderTrianglePositions. High order triangle points of the mesh loaded. . ◆ d_normals. Data< type::vector<sofa::type::Vec3 > > sofa::core::loader::MeshLoader::d_normals. Normals of the mesh loaded. . ◆ d_onlyAttachedPoints. Data< bool > sofa::core::loader::MeshLoader::d_onl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:20842,load,loaded,20842,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loaded']
Performance,";  ; virtual void start ()=0;  ; virtual void execute ()=0;  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_freezePerformer. bool sofa::gui::component::performer::InteractionPerformer::m_freezePerformer. ◆ m_interactor. BaseMouseInteractor* sofa::gui::component::performer::InteractionPerformer::m_interactor. Constructor details. ◆ InteractionPerformer(). sofa::gui::component::performer::InteractionPerformer::InteractionPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~InteractionPerformer(). virtual sofa::gui::component::performer::InteractionPerformer::~InteractionPerformer ; (; ). inlinevirtual . Function details. ◆ configure(). virtual void sofa::gui::component::performer::InteractionPerformer::configure ; (; sofa::component::setting::MouseButtonSetting * ; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::AttachBodyPerformer< DataTypes >. ◆ create(). template<class RealObject > . static RealObject* sofa::gui::component::performer::InteractionPerformer::create ; (; RealObject * ; , . BaseMouseInteractor * ; interactor . ). inlinestatic . ◆ draw(). virtual void sofa::gui::component::performer::InteractionPerformer::draw ; (; const core::visual::VisualParams * ; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, sofa::gui::component::performer::FixParticlePerformer< DataTypes >, and sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >. ◆ execute(). virtual void sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html:1721,perform,performer,1721,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,2,['perform'],['performer']
Performance,";  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadState ();  ; void processReadState (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void reinit ();  Update method called when variables used in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html:4213,load,loader,4213,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,1,['load'],['loader']
Performance,";  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeStress (type::Vec3 &, type::Vec3 &, unsigned int &);  ; virtual void computeDStress (type::Vec3 &, type::Vec3 &);  ; virtual void computeStress (unsigned int)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html:1491,load,loader,1491,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,1,['load'],['loader']
Performance,;  Add a scene loader. More...;  ; SceneLoaderList * getEntries ();  Get the list of loaders. More...;  ; std::vector< std::string > extensions ();  . Static Public Member Functions; static SceneLoaderFactory * getInstance ();  Get the ObjectFactory singleton instance. More...;  . Attribute details. ◆ registry. SceneLoaderList sofa::simulation::SceneLoaderFactory::registry. protected . Main class registry. . Constructor details. ◆ ~SceneLoaderFactory(). sofa::simulation::SceneLoaderFactory::~SceneLoaderFactory ; (; ). Function details. ◆ addEntry(). SceneLoader * sofa::simulation::SceneLoaderFactory::addEntry ; (; SceneLoader * ; loader). Add a scene loader. . ◆ extensions(). std::vector< std::string > sofa::simulation::SceneLoaderFactory::extensions ; (; ). Get the list of supported extension. It returns a vector of string but it is RVO optimized so the overhead is reduced. . ◆ getEntries(). SceneLoaderList* sofa::simulation::SceneLoaderFactory::getEntries ; (; ). inline . Get the list of loaders. . ◆ getEntryFileExtension(). SceneLoader * sofa::simulation::SceneLoaderFactory::getEntryFileExtension ; (; std::string ; extension). Get an entry given a file extension. . ◆ getEntryFileName(). SceneLoader * sofa::simulation::SceneLoaderFactory::getEntryFileName ; (; std::string ; filename). Get an entry given a file name. ; Get an entry given a file extension. . ◆ getExporterEntryFileExtension(). SceneLoader * sofa::simulation::SceneLoaderFactory::getExporterEntryFileExtension ; (; std::string ; extension). Get an exporter entry given a file extension. . ◆ getExporterEntryFileName(). SceneLoader * sofa::simulation::SceneLoaderFactory::getExporterEntryFileName ; (; std::string ; filename). Get an exporter entry given a file name. . ◆ getInstance(). SceneLoaderFactory * sofa::simulation::SceneLoaderFactory::getInstance ; (; ). static . Get the ObjectFactory singleton instance. . sofasimulationSceneLoaderFactory; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 .,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory.html:1976,load,loaders,1976,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_factory.html,2,['load'],['loaders']
Performance,";  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph crea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:5032,load,loader,5032,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,1,['load'],['loader']
Performance,";  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ GIDMeshLoader(). sofa::component::io::mesh::GIDMeshLoader::GIDMeshLoader ; (; ). protected . ◆ ~GIDMeshLoader(). sofa::component::io::mesh::GIDMeshLoader::~GIDMeshLoader ; (; ). overrideprotected . Function details. ◆ doClearBuffers(). void sofa::component::io::mesh::GIDMeshLoader::doClearBuffers ; (; ). overrideprotectedvirtual . Implements sofa::core::loader::MeshLoader. ◆ doLoad(). bool sofa::component::io::mesh::GIDMeshLoader::doLoad ; (; ). overridevirtual . Implements sofa::core::loader::MeshLoader. ◆ readGID(). bool sofa::component::io::mesh::GIDMeshLoader::readGID ; (; std::ifstream & ; file). protected . ◆ SOFA_CLASS(). sofa::component::io::mesh::GIDMeshLoader::SOFA_CLASS ; (; GIDMeshLoader ; , . sofa::core::loader::MeshLoader ;  . ). Enum details. ◆ ElementType. enum sofa::component::io::mesh::GIDMeshLoader::ElementType. protected . EnumeratorLINEAR ; TRIANGLE ; QUADRILATERAL ; TETRAHEDRA ; HEXAHEDRA ; PRISM ; PYRAMID ; SPHERE ; CIRCLE . sofacomponentiomeshGIDMeshLoader; Generated on Mon Nov 11 2024 02:46:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:20673,load,loader,20673,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,3,['load'],['loader']
Performance,;  List of triangle indices which are on the border of the mesh loaded. More...;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ; Data< type::vector< sofa::type::Vec3 > > d_normals;  Normals of the mesh loaded. More...;  ; Data< type::vector< PrimitiveGroup > > d_edgesGroups;  Groups of Edges. More...;  ; Data< type::vector< PrimitiveGroup > > d_trianglesGroups;  Groups of Triangles. More...;  ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html:2606,load,loaded,2606,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,1,['load'],['loaded']
Performance,";  Resize the matrix and reset all values to 0. More...;  ; virtual void set (Index i, Index j, double v)=0;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:15148,perform,performances,15148,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['perform'],['performances']
Performance,"< DataTypes >inline; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDrawColor(const sofa::type::RGBAColor &newvalue)sofa::component::mechanicalload::PlaneForceField< DataTypes >inline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMState(core::behavior::MechanicalState< DataTypes > *mstate)sofa::component::mechanicalload::PlaneForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setPlane(const Deriv &normal, Real d)sofa::component::mechanicalload::PlaneForceField< DataTypes >; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setStiffness(Real stiff)sofa::component::mechanicalload::PlaneForceField< DataTypes >inline; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(PlaneForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html:15602,load,loader,15602,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html,1,['load'],['loader']
Performance,"< Hexahedron > & ; pHexahedra, . const Hexahedron & ; p . ). protected . ◆ addHexahedron() [2/2]. void sofa::core::loader::MeshLoader::addHexahedron ; (; type::vector< Hexahedron > & ; pHexahedra, . Topology::HexahedronID ; p0, . Topology::HexahedronID ; p1, . Topology::HexahedronID ; p2, . Topology::HexahedronID ; p3, . Topology::HexahedronID ; p4, . Topology::HexahedronID ; p5, . Topology::HexahedronID ; p6, . Topology::HexahedronID ; p7 . ). protected . ◆ addPentahedron() [1/2]. void sofa::core::loader::MeshLoader::addPentahedron ; (; type::vector< Pentahedron > & ; pPentahedra, . const Pentahedron & ; p . ). protected . ◆ addPentahedron() [2/2]. void sofa::core::loader::MeshLoader::addPentahedron ; (; type::vector< Pentahedron > & ; pPentahedra, . Topology::ElemID ; p0, . Topology::ElemID ; p1, . Topology::ElemID ; p2, . Topology::ElemID ; p3, . Topology::ElemID ; p4, . Topology::ElemID ; p5 . ). protected . ◆ addPolygon(). void sofa::core::loader::MeshLoader::addPolygon ; (; type::vector< type::vector< Topology::ElemID > > & ; pPolygons, . const type::vector< Topology::ElemID > & ; p . ). protected . ◆ addPolyline(). void sofa::core::loader::MeshLoader::addPolyline ; (; type::vector< Polyline > & ; pPolylines, . Polyline ; p . ). protected . ◆ addPosition() [1/2]. void sofa::core::loader::MeshLoader::addPosition ; (; type::vector< sofa::type::Vec3 > & ; pPositions, . const sofa::type::Vec3 & ; p . ). protected . ◆ addPosition() [2/2]. void sofa::core::loader::MeshLoader::addPosition ; (; type::vector< sofa::type::Vec3 > & ; pPositions, . SReal ; x, . SReal ; y, . SReal ; z . ). protected . ◆ addPyramid() [1/2]. void sofa::core::loader::MeshLoader::addPyramid ; (; type::vector< Pyramid > & ; pPyramids, . const Pyramid & ; p . ). protected . ◆ addPyramid() [2/2]. void sofa::core::loader::MeshLoader::addPyramid ; (; type::vector< Pyramid > & ; pPyramids, . Topology::ElemID ; p0, . Topology::ElemID ; p1, . Topology::ElemID ; p2, . Topology::ElemID ; p3, . Topology::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:25939,load,loader,25939,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,"< T >::SparseMatrix ; (; ). inline . ◆ SparseMatrix() [2/2]. template<typename T > . sofa::linearalgebra::SparseMatrix< T >::SparseMatrix ; (; Index ; nbRow, . Index ; nbCol . ). inline . Function details. ◆ add() [1/8]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [2/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:18857,perform,performances,18857,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,['perform'],['performances']
Performance,"< bool > _forceBinary;  ; sofa::core::objectmodel::RenamedData< unsigned int > _headerSize;  ; Data< unsigned int > d_headerSize;  Size of the header binary file (just before the number of facet). More...;  ; Data< bool > d_forceBinary;  Force reading in binary mode. Even in first keyword of the file is solid. More...;  ; Data< bool > d_mergePositionUsingMap;  Since positions are duplicated in a STL, they have to be merged. Using a map to do so will temporarily duplicate memory but should be more efficient. Disable it if memory is really an issue. More...;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:1492,load,loaded,1492,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,1,['load'],['loaded']
Performance,< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions;  High order tetrahedron points of the mesh loaded. More...;  ; Data< type::vector< HighOrderHexahedronPosition > > d_highOrderHexahedronPositions;  High order hexahedron points of the mesh loaded. More...;  ; Data< type::vector< Pyramid > > d_pyramids;  Pyramids of the mesh loaded. More...;  ; Data< type::vector< sofa::type::Vec3 > > d_normals;  Normals of the mesh loaded. More...;  ; Data< type::vector< PrimitiveGroup > > d_edgesGroups;  Groups of Edges. More...;  ; Data< type::vector< PrimitiveGroup > > d_trianglesGroups;  Groups of Triangles. More...;  ; Data< type::vector< PrimitiveGroup > > d_quadsGroups;  Groups of Quads. More...;  ; Data< type::vector< PrimitiveGroup > > d_polygonsGroups;  Groups of Polygons. More...;  ; Data< type::vector< PrimitiveGroup > > d_tetrahedraGroups;  Groups of Tetrahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_hexahedraGroups;  Groups of Hexahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Dat,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:2671,load,loaded,2671,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,12,['load'],['loaded']
Performance,< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pentahedraGroups. Groups of Pentahedra. . ◆ d_polygons. Data< type::vector< type::vector<Topology::ElemID> > > sofa::core::loader::MeshLoader::d_polygons. Polygons of the mesh loaded. . ◆ d_polygonsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_polygonsGroups. Groups of Polygons. . ◆ d_polylines. Data< type::vector< Polyline > > sofa::core::loader::MeshLoader::d_polylines. Polylines of the mesh loaded. . ◆ d_positions. Data< type::vector< Vec3 > > sofa::core::loader::MeshLoader::d_positions. Vertices of the mesh loaded. . ◆ d_previousTransformation. type::Matrix4 sofa::core::loader::MeshLoader::d_previousTransformation. protected . to be able to call reinit w/o applying several time the same transform . ◆ d_pyramids. Data< type::vector< Pyramid > > sofa::core::loader::MeshLoader::d_pyramids. Pyramids of the mesh loaded. . ◆ d_pyramidsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_pyramidsGroups. Groups of Pyramids. . ◆ d_quads. Data< type::vector< Quad > > sofa::core::loader::MeshLoader::d_quads. Quads of the mesh loaded. . ◆ d_quadsGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_quadsGroups. Groups of Quads. . ◆ d_rotation. Data< Vec3 > sofa::core::loader::MeshLoader::d_rotation. Rotation of the DOFs. . ◆ d_scale. Data< Vec3 > sofa::core::loader::MeshLoader::d_scale. Scale of the DOFs in 3 dimensions. . ◆ d_tetrahedra. Data< type::vector< Tetrahedron > > sofa::core::loader::MeshLoader::d_tetrahedra. Tetrahedra of the mesh loaded. . ◆ d_tetrahedraGroups. Data< type::vector< PrimitiveGroup > > sofa::core::loader::MeshLoader::d_tetrahedraGroups. Groups of Tetrahedra. . ◆ d_transformation. Data< type::Matrix4 > sofa::core::loader::MeshLoader::d_transformation. 4x4 Homogeneous matrix to transform the DOFs (when present replace any) . ◆ d_translation. Data< Vec3 > sofa::core::loader::MeshLoader::d_transla,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:23063,load,loader,23063,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['load'],['loader']
Performance,"<typename T > . sofa::linearalgebra::DiagonalMatrix< T >::DiagonalMatrix ; (; Index ; nbRow, . Index ;  . ). inline . ◆ DiagonalMatrix() [3/3]. template<typename T > . sofa::linearalgebra::DiagonalMatrix< T >::DiagonalMatrix ; (; Real * ; p, . Index ; , . Index ;  . ). inline . ◆ ~DiagonalMatrix(). template<typename T > . sofa::linearalgebra::DiagonalMatrix< T >::~DiagonalMatrix ; (; ). inlineoverride . Function details. ◆ add() [1/9]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::add ; (; Index ; i, . double ; v . ). inline . ◆ add() [2/9]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [3/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [4/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [5/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [6/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [7/9]. template<typename T > . void so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:17751,perform,performances,17751,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['perform'],['performances']
Performance,"= SReal> . sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::~BlockDiagonalMatrix ; (; ). inlineoverride . Function details. ◆ add() [1/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ add() [2/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2d matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2d matrix this function may be overload to obtain better performances. . ◆ add() [3/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 2x2f matrix. This function may be overload to obtain better performances. ; Adding values from a 2x2f matrix this function may be overload to obtain better performances. . ◆ add() [4/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3d matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This functio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:16953,perform,performances,16953,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,2,['perform'],['performances']
Performance,"=> World Center. . ◆ d_rotationAxis. Data<type::Vec3> sofa::component::visual::RecordedCamera::d_rotationAxis. Rotation axis. . ◆ d_rotationCenter. Data<type::Vec3> sofa::component::visual::RecordedCamera::d_rotationCenter. Rotation center coordinates. . ◆ d_rotationLookAt. Data<type::Vec3> sofa::component::visual::RecordedCamera::d_rotationLookAt. Position to be focused during rotation. . ◆ d_rotationMode. Data<bool> sofa::component::visual::RecordedCamera::d_rotationMode. If true, rotation will be performed. . ◆ d_rotationSpeed. Data<SReal> sofa::component::visual::RecordedCamera::d_rotationSpeed. rotation Speed . ◆ d_rotationStartPoint. Data<type::Vec3> sofa::component::visual::RecordedCamera::d_rotationStartPoint. Rotation start position coordinates. . ◆ d_startTime. Data<SReal> sofa::component::visual::RecordedCamera::d_startTime. Time when the camera moves will start. . ◆ d_translationMode. Data<bool> sofa::component::visual::RecordedCamera::d_translationMode. If true, translation will be performed. . ◆ d_translationOrientations. Data<sofa::type::vector<Quat> > sofa::component::visual::RecordedCamera::d_translationOrientations. Intermediate camera's orientations. . ◆ d_translationPositions. Data<sofa::type::vector<type::Vec3> > sofa::component::visual::RecordedCamera::d_translationPositions. Intermediate camera's positions. . ◆ d_zoomSpeed. Data<double> sofa::component::visual::RecordedCamera::d_zoomSpeed. Zoom Speed. . ◆ firstIterationforNavigation. bool sofa::component::visual::RecordedCamera::firstIterationforNavigation. protected . ◆ firstIterationforRotation. bool sofa::component::visual::RecordedCamera::firstIterationforRotation. protected . ◆ firstIterationforTranslation. bool sofa::component::visual::RecordedCamera::firstIterationforTranslation. protected . ◆ m_angleStep. double sofa::component::visual::RecordedCamera::m_angleStep. protected . ◆ m_cameraUp. sofa::core::objectmodel::RenamedData<type::Vec3> sofa::component::visual::RecordedCamera::m_came",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html:24165,perform,performed,24165,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,1,['perform'],['performed']
Performance,"> . Data<sofa::type::vector<Vec3> > sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >::d_transverseAnisotropyDirectionArray. Vector for transverse anisotropy. . ◆ d_transverseAnisotropyRatio. template<class DataTypes > . Data<Real> sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >::d_transverseAnisotropyRatio. Ratio for anisotropic diffusion. . ◆ edgeDiffusionCoefficient. template<class DataTypes > . sofa::type::vector<Real> sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >::edgeDiffusionCoefficient. protected . Vector saving the edge diffusion coefficients. . ◆ l_topology. template<class DataTypes > . SingleLink<TetrahedronDiffusionFEMForceField<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >::l_topology. Link to be set to the topology container in the component graph. . ◆ loadedDiffusivity. template<class DataTypes > . bool sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >::loadedDiffusivity. Boolean if the diffusion coefficients have loaded from file. . ◆ m_topology. template<class DataTypes > . sofa::core::topology::BaseMeshTopology::SPtr sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >::m_topology. protected . Pointer to topology. . ◆ mechanicalObject. template<class DataTypes > . MechObject::SPtr sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >::mechanicalObject. protected . Pointer to mechanical mechanicalObject. . ◆ nbEdges. template<class DataTypes > . sofa::Size sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >::nbEdges. protected . Saving the number of edges. . Constructor details. ◆ TetrahedronDiffusionFEMForceField(). template<class DataTypes > . sofa::component::diffusion::TetrahedronDiffusionFEMForceField< DataTypes >::TetrahedronDiffusionFEMForceF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field.html:23147,load,loadedDiffusivity,23147,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field.html,1,['load'],['loadedDiffusivity']
Performance,"> > d_normalsIndexList;  List of normals of elements of the mesh loaded. More...;  ; Data< type::vector< sofa::type::Vec3 > > d_normalsList;  Normals definition. More...;  ; Data< type::vector< sofa::type::Vec2 > > d_texCoords;  Texture coordinates of all faces, to be used as the parent data of a VisualModel texcoords data. More...;  ; Data< bool > d_computeMaterialFaces;  True to activate export of Data instances containing list of face indices for each material. More...;  ; type::vector< Data< type::vector< unsigned int > > * > d_subsets_indices;  ; Data< type::vector< int > > d_vertPosIdx;  ; Data< type::vector< int > > d_vertNormIdx;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra;  Hexahedra of the mesh loaded. More...;  ; Data< type::vector< Pentahedron > > d_pentahedra;  Pentahedra of the mesh loaded. More...;  ; Data< type::vector< HighOrderTetrahedronPosition > > d_highOrderTetrahedronPositions",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:2338,load,loaded,2338,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['load'],['loaded']
Performance,"> sofa::gui::qt::GraphVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::GraphVisitor::visitorsTimeTotal. protected . ◆ window. WindowVisitor* sofa::gui::qt::GraphVisitor::window. protected . Constructor details. ◆ GraphVisitor(). sofa::gui::qt::GraphVisitor::GraphVisitor ; (; WindowVisitor * ; w). inline . Function details. ◆ addComment(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addComment ; (; QTreeWidgetItem * ; element, . QTreeWidgetItem * ; elementAbove, . std::string ; comment . ). ◆ addInformation(). void sofa::gui::qt::GraphVisitor::addInformation ; (; QTreeWidgetItem * ; element, . std::string ; name, . std::string ; info . ). ◆ addNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::addNode ; (; QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove, . std::string ; info . ). ◆ addTime(). void sofa::gui::qt::GraphVisitor::addTime ; (; QTreeWidgetItem * ; element, . std::string ; info . ). ◆ clear(). void sofa::gui::qt::GraphVisitor::clear ; (; ). inline . ◆ getTime(). double sofa::gui::qt::GraphVisitor::getTime ; (; const tinyxml2::XMLAttribute * ; attribute); const. inline . ◆ getTotalTime(). double sofa::gui::qt::GraphVisitor::getTotalTime ; (; tinyxml2::XMLNode * ; node); const. ◆ load(). bool sofa::gui::qt::GraphVisitor::load ; (; std::string & ; file). ◆ openAttribute(). void sofa::gui::qt::GraphVisitor::openAttribute ; (; tinyxml2::XMLElement * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ openNode(). QTreeWidgetItem * sofa::gui::qt::GraphVisitor::openNode ; (; tinyxml2::XMLNode * ; node, . QTreeWidgetItem * ; parent, . QTreeWidgetItem * ; elementAbove . ). protected . ◆ openTime(). void sofa::gui::qt::GraphVisitor::openTime ; (; tinyxml2::XMLNode * ; element, . QTreeWidgetItem * ; item . ). protected . ◆ setGraph(). void sofa::gui::qt::GraphVisitor::setGraph ; (; QTreeWidget * ; g). inline . sofaguiqtGraphVisitor; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html:4037,load,load,4037,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,4,['load'],['load']
Performance,">::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add a new spring. ; Reimplemented in sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addVectorSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addVectorSpring ; (; size_t ; m1, . size_t ; m2, . SReal ; ks, . SReal ; kd, . SReal ; initpos, . SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Add an extended spring. ; Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook, and sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Loader. ◆ finalizeLoading(). virtual void sofa::helper::io::XspLoaderDataHook::finalizeLoading ; (; bool ; isOk). inlinevirtual . Called by the XspLoader when the loading is done. ; This method is called by the XspLoader when the loading is done. Overriding this method allows client-code to implement post-loading checking. Parameters. isOkis set to false this means that the loading code detected a problem and that the loaded information are invalid and should be removed from the container. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setGravity(). virtual void sofa::helper::io::XspLoaderDataHook::setGravity ; (; SReal ; , . SReal ; , . SReal ;  . ). inlinevirtual . Called by the XspLoader to specify the directional gravity. ; Parameters. gx,gy,gzthe three component of the gravity. . ◆ setNumMasses(). virtual void sofa::helper::io::XspLoaderDataHook::setNumMasses ; (; size_t ; ). inlinevirtual . Called by the XspLoader to specify before loading the number of masses. ; Parameters. nnumber of massses. . Reimplemented in sofa::component::io::mesh::MeshXspLoadDataHook. ◆ setNumSprings(). virtual void sofa::helper::io::XspLoaderDataHook::setNumSprings ; (; size_t ; ). inlinevi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:3584,load,loading,3584,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,2,['load'],['loading']
Performance,">::getSystemMatrixInv ; (; ). inline . ◆ hasUpdatedMatrix(). template<class TDataTypes > . bool sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >::hasUpdatedMatrix ; (; ). inlineoverride . ◆ init(). template<class TDataTypes > . void sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >::init ; (; void ; ). override . ◆ invert(). template<class TDataTypes > . void sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >::invert ; (; TMatrix & ; M). override . ◆ loadMatrix(). template<class TDataTypes > . void sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >::loadMatrix ; (; TMatrix & ; M). ◆ loadMatrixWithCholeskyDecomposition(). template<class TDataTypes > . void sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >::loadMatrixWithCholeskyDecomposition ; (; TMatrix & ; M). protected . ◆ loadMatrixWithSolver(). template<class TDataTypes > . void sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >::loadMatrixWithSolver. protected . ◆ rotateConstraints(). template<class TDataTypes > . void sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >::rotateConstraints. protected . ◆ setSystemMBKMatrix(). template<class TDataTypes > . void sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >::setSystemMBKMatrix ; (; const core::MechanicalParams * ; mparams). override . ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(PrecomputedWarpPreconditioner< TDataTypes >, TDataTypes) ; , . SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, TMatrix, TVector) ;  . ). ◆ solve(). template<class TDataTypes > . void sofa::component::linearsolver::preconditioner:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_warp_preconditioner.html:14950,load,loadMatrixWithSolver,14950,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_warp_preconditioner.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_warp_preconditioner.html,1,['load'],['loadMatrixWithSolver']
Performance,">; class sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; Class to perform removing of topological elements (either one element or a an area) and handling topological mapping . Protected Attributes; BodyPicked picked;  picked structure from mouseInteractor. More...;  ; bool firstClick;  bool: true if first click (when removing zone, first clic show zone, second delete it). More...;  ; bool surfaceOnVolume;  bool: true if a surface zone is going to be removed on a volumique mesh. More...;  ; bool volumeOnSurface;  bool: true if a volumique zone is going to be removed at the surface of a volumique mesh. More...;  ; VecIds selectedElem;  vector of element Id concerned by the operation More...;  ;  Protected Attributes inherited from sofa::gui::component::performer::RemovePrimitivePerformerConfiguration; int topologicalOperation;  ; bool volumicMesh;  ; double selectorScale;  . Public Member Functions;  RemovePrimitivePerformer (BaseMouseInteractor *i);  ;  ~RemovePrimitivePerformer ();  ; void start ();  Functions called by TopologicalOperation performer. More...;  ; void execute ();  ; void end ();  ; void draw (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::RemovePrimitivePerformerConfigurat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html:1658,perform,performer,1658,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer.html,2,['perform'],['performer']
Performance,">protected; setAxis(const Coord n)sofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >inline; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setDminAndDmax(const SReal _dmin, const SReal _dmax)sofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >inline; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setMoment(Real x)sofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >inline; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr)sofa::core::behavior::ForceField< DataTypes >inlinestatic; SingleStateAccessor(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::SingleStateAccessor< DataTypes >inlineexplicitprotected; sofa::SOFA_ABSTRACT_CLASS(BaseForceField, StateAccessor)sofa::core::behavior::BaseForceField; sofa::core::behavior::StateAccessor::SOFA_ABSTRACT_CLASS(StateAccessor, objectmodel::BaseObject)sofa::core::behavior::StateAccessor; sofa::core::behavior::SingleStateAccessor::SOFA_ABSTRACT_CLASS(SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor)sofa::core::behavior::SingleStateAccessor< DataTypes >; SOFA_CLASS(SOFA_TEMPLATE(OscillatingTorsionPressureForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes))sofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >; ForceField<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html:17926,load,loader,17926,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field-members.html,1,['load'],['loader']
Performance,"> visualLoop;  ; NodeSingle< sofa::core::topology::Topology > topology;  ; NodeSingle< sofa::core::topology::BaseMeshTopology > meshTopology;  ; NodeSingle< sofa::core::BaseState > state;  ; NodeSingle< sofa::core::behavior::BaseMechanicalState > mechanicalState;  ; NodeSingle< sofa::core::BaseMapping > mechanicalMapping;  ; NodeSingle< sofa::core::behavior::BaseMass > mass;  ; NodeSingle< sofa::core::collision::Pipeline > collisionPipeline;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::objectmodel::Context; Data< bool > is_activated;  To Activate a node. More...;  ; Data< Vec3 > worldGravity_;  Gravity in the world coordinate system. More...;  ; Data< SReal > dt_;  Time step. More...;  ; Data< SReal > time_;  Current time. More...;  ; Data< bool > animate_;  Animate the Simulation(applied at initialization only) More...;  ; Data< bool > d_isSleeping;  The node is sleeping, and thus ignored by visitors. More...;  ; Data< bool > d_canChangeSleepingState;  The node can change its sleeping state. More...;  . Attribute details. ◆ _descendancy. std::set<DAGNode*> sofa::simulation::graph::DAGNode::_descendancy. protected . all child nodes (unordered) . ◆ _precomputed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:31275,Load,Loading,31275,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['Load'],['Loading']
Performance,"> visualLoop;  ; NodeSingle< sofa::core::topology::Topology > topology;  ; NodeSingle< sofa::core::topology::BaseMeshTopology > meshTopology;  ; NodeSingle< sofa::core::BaseState > state;  ; NodeSingle< sofa::core::behavior::BaseMechanicalState > mechanicalState;  ; NodeSingle< sofa::core::BaseMapping > mechanicalMapping;  ; NodeSingle< sofa::core::behavior::BaseMass > mass;  ; NodeSingle< sofa::core::collision::Pipeline > collisionPipeline;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::objectmodel::Context; Data< bool > is_activated;  To Activate a node. More...;  ; Data< Vec3 > worldGravity_;  Gravity in the world coordinate system. More...;  ; Data< SReal > dt_;  Time step. More...;  ; Data< SReal > time_;  Current time. More...;  ; Data< bool > animate_;  Animate the Simulation(applied at initialization only) More...;  ; Data< bool > d_isSleeping;  The node is sleeping, and thus ignored by visitors. More...;  ; Data< bool > d_canChangeSleepingState;  The node can change its sleeping state. More...;  . Protected Attributes; bool debug_;  ; bool initialized;  ; std::stack< Visitor * > actionStack;  ; BaseContext * _context;  ; type::vector< MutationListener *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:3161,Load,Loading,3161,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['Load'],['Loading']
Performance,A - Topic: Controlling cable by SofaPython3 from python interpreter. /specify-different-stiffness-in-a-mesh; . /feed; ; [SOLVED] specify different stiffness in a mesh – SOFA. /page; . /16; ; SOFA - Topic: [SOLVED] specify different stiffness in a mesh. /5; ; SOFA - Topic: [SOLVED] specify different stiffness in a mesh. SOFA - Topic: [SOLVED] specify different stiffness in a mesh. /specifying-an-animation; ; SOFA - Topic: [SOLVED] specifying an animation. /specifying-indices-of-a-vtk-mesh; ; SOFA - Topic: [SOLVED] Specifying indices of a VTK mesh. /sph-capabilities-in-sofa; ; SOFA - Topic: [SOLVED] SPH capabilities in SOFA. /springs-not-working; ; SOFA - Topic: [SOLVED] Springs not working. /start_in_batch_mode; ; SOFA - Topic: [SOLVED] start_in_batch_mode. /starting-using-softrobot-plugin-with-sofa; ; SOFA - Topic: Starting Using SoftRobot Plugin with SOFA. /statistics-on-advancedtimer; ; SOFA - Topic: [SOLVED] Statistics on AdvancedTimer. /stay-tuned-about-latest-devs-in-sofa; ; SOFA - Topic: Stay tuned about latest devs in SOFA!. /steady-state-alarm; . /feed; ; [SOLVED] steady state alarm! – SOFA. SOFA - Topic: [SOLVED] steady state alarm!. /stick-two-collision-model; ; SOFA - Topic: [SOLVED] Stick two collision Model. /stiffness-change-when-refining-mesh; ; SOFA - Topic: [SOLVED] Stiffness change when refining mesh. /stiffspringforcefield-with-rigid3d; ; SOFA - Topic: [SOLVED] StiffSpringForceField with Rigid3d. /still-license-issues-with-sofa-plugins; ; SOFA - Topic: [SOLVED] Still license issues with SOFA plugins. /stlib-error; . /feed; ; STlib Error – SOFA. SOFA - Topic: STlib Error. /stlib-issue; ; SOFA - Topic: [SOLVED] STLIB issue. /stlib-out-of-tree; ; SOFA - Topic: STLIB Out of Tree. /stop-animation-function-in-sofa; ; SOFA - Topic: Stop Animation function in sofa. /strain-visualization-in-a-color-map; ; SOFA - Topic: Strain Visualization in a Color Map. /submapping-error-point-not-found; ; SOFA - Topic: SubMapping Error Point Not Found. /subset-mapping-c,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:401250,tune,tuned-about-latest-devs-in-sofa,401250,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['tune'],"['tuned', 'tuned-about-latest-devs-in-sofa']"
Performance,A - Topic: [SOLVED] Linking GeomagicDevice.position with MechanicalObject3d.position in cpp. /linking-issues-with-plugin-when-loading-it; ; SOFA - Topic: Linking issues with plugin when loading it. /link-problems; ; SOFA - Topic: [SOLVED] [Solved] Link problems. /link-sofa-as-an-external-dependency-in-a-c-project; ; SOFA - Topic: Link SOFA as an external dependency in a c++ project. /list-of-all-available-fields-for-vtkexporter; ; SOFA - Topic: List of all available fields for VTKExporter?. /liver-fem-implementation; ; SOFA - Topic: Liver FEM implementation. /lmconstraints-with-flexible-simulation; ; SOFA - Topic: [SOLVED] LMConstraints with Flexible simulation. /load-a-python-scene-from-a-c-unit-test; ; SOFA - Topic: [SOLVED] Load a Python scene from a C++ unit test. /loading-off-files; ; SOFA - Topic: [SOLVED] Loading OFF files. /loading-sofas-dlls-for-python3-8-on-windows; ; SOFA - Topic: [SOLVED] Loading SOFA’s dlls for Python3.8+ on Windows. /load-model-built-by-solidworks; ; SOFA - Topic: load model built by solidworks. /load-msh-and-vtk-file-in-xml-and-read-with-sofa; . /feed; ; [SOLVED] Load msh and vtk file in XML and read with sofa – SOFA. SOFA - Topic: [SOLVED] Load msh and vtk file in XML and read with sofa. /local-pivot-points-for-obj-files; ; SOFA - Topic: local pivot points for .obj files. /looking-for-anatomy-transfer-code; ; SOFA - Topic: [SOLVED] Looking for Anatomy Transfer code. /looking-for-an-example-on-cutting-a-3d-volumetric-mesh; ; SOFA - Topic: Looking for an example on cutting a 3D volumetric mesh. /looking-for-sofa-xml-reference; ; SOFA - Topic: Looking for SOFA XML Reference. /lots-of-glew-errors-while-building-sofa; ; SOFA - Topic: [SOLVED] Lots of glew errors while building Sofa. /lowering-contraint-response-without-affecting-fall-speed; ; SOFA - Topic: [SOLVED] Lowering contraint response without affecting fall speed. /m_contactsvectorbuffer-not-valid-sometimes; ; SOFA - Topic: [SOLVED] “m_ContactsVectorBuffer” not valid sometimes. /ma,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:342332,load,load-model-built-by-solidworks,342332,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['load'],"['load', 'load-model-built-by-solidworks']"
Performance,"A_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::SuturePointPerformerConfiguration; void setStiffness (double f);  ; void setDamping (double f);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ addedSprings. template<class DataTypes > . sofa::type::vector<Spring> sofa::gui::component::performer::SuturePointPerformer< DataTypes >::addedSprings. protected . ◆ first. template<class DataTypes > . bool sofa::gui::component::performer::SuturePointPerformer< DataTypes >::first. protected . ◆ firstPicked. template<class DataTypes > . BodyPicked sofa::gui::component::performer::SuturePointPerformer< DataTypes >::firstPicked. protected . ◆ fixedIndex. template<class DataTypes > . unsigned int sofa::gui::component::performer::SuturePointPerformer< DataTypes >::fixedIndex. protected . ◆ FixObject. template<class DataTypes > . FixObjectType* sofa::gui::component::performer::SuturePointPerformer< DataTypes >::FixObject. protected . ◆ SpringObject. template<class DataTypes > . SpringObjectType* sofa::gui::component::performer::SuturePointPerformer< DataTypes >::SpringObject. protected . Constructor details. ◆ SuturePointPerformer(). template<class DataTypes > . sofa::gui::component::performer::SuturePointPerformer< DataTypes >::SuturePointPerformer ; (; BaseMouseInteractor * ; i). ◆ ~S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html:2638,perform,performer,2638,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_suture_point_performer.html,2,['perform'],['performer']
Performance,"AlongPathPerformerinline; getLastBodyPicked()sofa::gui::component::performer::InciseAlongPathPerformerinline; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InciseAlongPathPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InciseAlongPathPerformerinline; Index typedefsofa::gui::component::performer::InciseAlongPathPerformer; initialNbPointssofa::gui::component::performer::InciseAlongPathPerformerprotected; initialNbTrianglessofa::gui::component::performer::InciseAlongPathPerformerprotected; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; keepPointsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; PerformCompleteIncision()sofa::gui::component::performer::InciseAlongPathPerformerprotected; secondBodysofa::gui::component::performer::InciseAlongPathPerformerprotected; setCompleteIncision(bool m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setIncisionMethod(int m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setKeepPoint(bool m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setPerformerFreeze() overridesofa::gui::component::performer::InciseAlongPathPerformervirtual; setSnapingBorderValue(int m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; setSnapingValue(int m)sofa::gui::component::performer::InciseAlongPathPerformerConfigurationinline; snapingBorderValuesofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; snapingValuesofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html:2362,perform,performer,2362,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html,21,"['Perform', 'perform']","['PerformCompleteIncision', 'performer']"
Performance,"Attributes |; Public Member Functions |; List of all members . sofa::gui::component::performer::RemovePrimitivePerformerConfiguration Class Reference . #include <RemovePrimitivePerformer.h>. Inheritance diagram for sofa::gui::component::performer::RemovePrimitivePerformerConfiguration:. [legend]; Detailed Description; Class to configure primitive removal. Several parameters:; topologicalOperation: if 0, other parameters aren't use. 0 = ""remove on element"" 1 = ""remove a zone of elements""; volumicMesh: false = surfacique mesh true = volumique mesh; selectorScale: size of zone . Protected Attributes; int topologicalOperation;  ; bool volumicMesh;  ; double selectorScale;  . Public Member Functions;  RemovePrimitivePerformerConfiguration ();  ; void setTopologicalOperation (int m);  ; void setVolumicMesh (bool v);  ; void setScale (double s);  . Attribute details. ◆ selectorScale. double sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::selectorScale. protected . ◆ topologicalOperation. int sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::volumicMesh. protected . Constructor details. ◆ RemovePrimitivePerformerConfiguration(). sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::RemovePrimitivePerformerConfiguration ; (; ). inline . Function details. ◆ setScale(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setScale ; (; double ; s). inline . ◆ setTopologicalOperation(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setTopologicalOperation ; (; int ; m). inline . ◆ setVolumicMesh(). void sofa::gui::component::performer::RemovePrimitivePerformerConfiguration::setVolumicMesh ; (; bool ; v). inline . sofaguicomponentperformerRemovePrimitivePerformerConfiguration; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html:1231,perform,performer,1231,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer_configuration.html,12,['perform'],['performer']
