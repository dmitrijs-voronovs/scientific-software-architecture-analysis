quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Int_tfExitStatusQuery exit status ((Int_t)TVirtualProofPlayer::EExitStatus or -1);; THashListfInfoMsgslist of info messages; TIterfIter!iterator in messages; TListfMsgslist of error messages; Long_tfResMaxMstMax resident memory used by the master; Long_tfResMemMaxMax resident memory used by the worker; Long_tfVirtMaxMstMax virtual memory used by the master; Long_tfVirtMemMaxMax virtual memory used by the worker. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStatus. Function documentation; TStatus(); Default constructor. void Add(const char* mesg); Add an error message. void AddInfo(const char* mesg); Add an info message. Int_t Merge(TCollection* list); PROOF Merge() function. void Print(Option_t* option = """") const; Standard print function. void Reset(); Reset the iterator on the messages. const char * NextMesg(); Return the next message or 0. void SetMemValues(Long_t vmem = -1, Long_t rmem = -1, Bool_t master = kFALSE); Set max memory values. void Streamer(TBuffer& ); Stream an object of class TStatus. TStatus(). virtual ~TStatus(); { }. Bool_t IsOk() const; { return TestBit(kNotOk) ? kFALSE : kTRUE; }. Int_t GetExitStatus() const; { return fExitStatus; }. Long_t GetResMemMax(Bool_t master = kFALSE) const; { return ((master) ? fResMaxMst : fResMemMax); }. Long_t GetVirtMemMax(Bool_t master = kFALSE) const; { return ((master) ? fVirtMaxMst : fVirtMemMax); }. void SetExitStatus(Int_t est); { fExitStatus = est; }. » Author: Maarten Ballintijn 12/03/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStatus.html:7630,Test,TestBit,7630,root/html602/TStatus.html,https://root.cern,https://root.cern/root/html602/TStatus.html,1,['Test'],['TestBit']
Testability,"ans, Color_t cidx = -1, UChar_t transp = 0); virtual voidTGLScene::UpdatePhysioLogical(TObject* logid, Double_t* trans, UChar_t* col); virtual voidTGLScene::UpdatePhysioLogical(TObject* logid, Double_t* trans, Color_t cidx, UChar_t transp); virtual voidTGLScene::UpdateSceneInfo(TGLRnrCtx& rnrCtx); virtual voidTObject::UseCurrentStyle(); static TVirtualViewer3D*TVirtualViewer3D::Viewer3D(TVirtualPad* pad = 0, Option_t* type = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGLLogicalShape*AttemptDirectRenderer(TObject* id); RootCsg::TBaseMesh*BuildComposite(); TGLLogicalShape*CreateNewLogical(const TBuffer3D& buffer) const; TGLPhysicalShape*CreateNewPhysical(UInt_t physicalID, const TBuffer3D& buffer, const TGLLogicalShape& logical) const; virtual voidTGLScene::DestroyPhysicalInternal(TGLScene::PhysicalShapeMapIt_t pit); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTGLScene::ReleaseGLCtxIdentity(); Int_tValidateObjectBuffer(const TBuffer3D& buffer, Bool_t includeRaw) const. private:. TGLScenePad(const TGLScenePad&); TGLScenePad&operator=(const TGLScenePad&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum TGLLockable::ELock { kUnlocked; kDrawLock; kSelectLock; kModifyLock; };. protected:. Int_tfAcceptedPhysicals; Bool_tTGLSceneBase::fAutoDestruct; TGLBoundingBoxTGLSceneBase::fBoundingBoxbounding box for scene (axis aligned) - lazy update - use BoundingBox() to access; Bool_tTGLSceneBase::fBoundingBoxValidbounding box valid?; UInt_tfCS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLScenePad.html:10260,log,logical,10260,root/html528/TGLScenePad.html,https://root.cern,https://root.cern/root/html528/TGLScenePad.html,1,['log'],['logical']
Testability,"ansMatrix(const TGeoMatrix& mat); voidSetTransparency(Char_t tr)MENU ; voidSetTriangle(Int_t i, Int_t v0, Int_t v1, Int_t v2); voidSetTriangleColor(Int_t i, UChar_t r, UChar_t g, UChar_t b, UChar_t a = 255); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidSetVertex(Int_t i, Float_t x, Float_t y, Float_t z); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector& insp) const; virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; TEveTriangleSet(Int_t nv, Int_t nt, Bool_t norms = kFALSE, Bool_t cols = kFALSE); Int_t*Triangle(Int_t i); UChar_t*TriangleColor(Int_t i); Float_t*TriangleNormal(Int_t i); virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); Float_t*Vertex(Int_t i); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTriangleSet.html:16189,Test,TestBit,16189,root/html602/TEveTriangleSet.html,https://root.cern,https://root.cern/root/html602/TEveTriangleSet.html,2,['Test'],['TestBit']
Testability,"ansform back to ; from ; , using; the result from the Principal Component Analysis.; . Testing the parameterization; . The class also provides functionality for testing the, over the; training sample, found parameterization; (TMultiDimFit::Fit). This is done by passing; the class a test sample of tuples of the form ; , where ; are the independent; variables, the known, dependent quantity, and is; the square error in ; (TMultiDimFit::AddTestRow).; ; The parameterization is then evaluated at every ; in the; test sample, and; . is evaluated. The relative error over the test sample; . should not be to low or high compared to from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representive of; the problem. A large difference in the reduced over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced.; ; It's possible to use Minuit; [4] to further improve the fit, using the test sample.; . Christian Holm; November 2000, NBI; . Bibliography; 1. Philip R. Bevington and D. Keith Robinson.; Data Reduction and Error Analysis for the Physical Sciences.; McGraw-Hill, 2 edition, 1992.; 2. René Brun et al.; Mudifi.; Long writeup DD/75-23, CERN, 1980.; 3. Gene H. Golub and Charles F. van Loan.; Matrix Computations.; John Hopkins Univeristy Press, Baltimore, 3 edition, 1996.; 4. F. James.; Minuit.; Long writeup D506, CERN, 1998.; 5. H. Wind.; Function parameterization.; In Proceedings of the 1972 CERN Computing and Data Processing; School, volume 72-21 of Yellow report. CERN, 1972.; 6. H. Wind.; 1. principal component analysis, 2. pattern recognition for track; finding, 3. interpolation and functional representation.; Yellow report EP/81-12, CERN, 1981.; . */. Function Members (Methods); public:. TMultiDimFit(); TMultiDimFit(const TMultiDimFit&); TMultiDimFit(Int_t dimension, TMultiDimFit::EMDFPolyType type = kMonomials, Option_t* opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMultiDimFit.html:12779,test,test,12779,root/html534/TMultiDimFit.html,https://root.cern,https://root.cern/root/html534/TMultiDimFit.html,1,['test'],['test']
Testability,"ansform back to ; from ; , using; the result from the Principal Component Analysis.; . Testing the parameterization; . The class also provides functionality for testing the, over the; training sample, found parameterization; (TMultiDimFit::Fit). This is done by passing; the class a test sample of tuples of the form ; , where ; are the independent; variables, the known, dependent quantity, and is; the square error in ; (TMultiDimFit::AddTestRow).; ; The parameterization is then evaluated at every ; in the; test sample, and; . is evaluated. The relative error over the test sample; . should not be to low or high compared to from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representive of; the problem. A large difference in the reduced over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced.; ; It's possible to use Minuit; [4] to further improve the fit, using the test sample.; . Christian Holm; November 2000, NBI; . Bibliography; 1. Philip R. Bevington and D. Keith Robinson.; Data Reduction and Error Analysis for the Physical Sciences.; McGraw-Hill, 2 edition, 1992.; 2. René Brun et al.; Mudifi.; Long writeup DD/75-23, CERN, 1980.; 3. Gene H. Golub and Charles F. van Loan.; Matrix Computations.; John Hopkins Univeristy Press, Baltimore, 3 edition, 1996.; 4. F. James.; Minuit.; Long writeup D506, CERN, 1998.; 5. H. Wind.; Function parameterization.; In Proceedings of the 1972 CERN Computing and Data Processing; School, volume 72-21 of Yellow report. CERN, 1972.; 6. H. Wind.; 1. principal component analysis, 2. pattern recognition for track; finding, 3. interpolation and functional representation.; Yellow report EP/81-12, CERN, 1981.; . */. Function Members (Methods); public:. virtual~TMultiDimFit(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddRow(const Double_t* x, Double_t D, Double_t E =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMultiDimFit.html:12779,test,test,12779,root/html602/TMultiDimFit.html,https://root.cern,https://root.cern/root/html602/TMultiDimFit.html,2,['test'],['test']
Testability,"ansformBase::Spectators(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). private:. vector<TMatrixDSym*>*CalcCovarianceMatrices(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events, Int_t maxCls); voidCalcSQRMats(const vector<TMVA::Event*,allocator<TMVA::Event*> >&, Int_t maxCls). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<TMatrixD*>fDecorrMatrices! Decorrelation matrix [class0/class1/.../all classes]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableDecorrTransform( DataSetInfo& dsi ); constructor. ~VariableDecorrTransform(); destructor. void Initialize(); initialisation. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); calculate the decorrelation matrix and the normalization. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; apply ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__VariableDecorrTransform.html:8999,log,logger,8999,root/html530/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html530/TMVA__VariableDecorrTransform.html,2,['log'],['logger']
Testability,"anslateZ; kTranslateAll; kScaleX; kScaleY; kScaleZ; kScaleAll; kRotateX; kRotateY; kRotateZ; kRotateAll; kManipAll; };. private:. TGLBoundingBoxfBoundingBox! bounding box of the physical (transformed); Float_tfColor[17]! GL color array; TGLPShapeRef*fFirstPSRef! pointer to first reference; UInt_tfID! unique physical ID within containing scene; Bool_tfInvertedWind! face winding TODO: can get directly from fTransform?; Bool_tfIsScaleForRnr! cache ; const TGLLogicalShape*fLogicalShape! the associated logical shape; TGLPhysicalShape::EManipfManip! permitted manipulation bitflags - see EManip; Bool_tfModified! has been modified - retain across scene rebuilds; TGLPhysicalShape*fNextPhysical! pointer to next replica; UChar_tfSelected! selected state; TGLMatrixfTransform! transform (placement) of physical instance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLPhysicalShape(UInt_t ID, const TGLLogicalShape& logicalShape, const TGLMatrix& transform, Bool_t invertedWind, const Float_t* rgba); Construct a physical shape using arguments:; ID - unique drawable id.; logicalShape - bound logical shape; transform - transform for placement of logical drawing; invertedWind - use inverted face polygon winding?; rgba - basic four component (RGBA) diffuse color. TGLPhysicalShape(UInt_t ID, const TGLLogicalShape& logicalShape, const double* transform, Bool_t invertedWind, const Float_t* rgba); Construct a physical shape using arguments:; id - unique drawable id.; logicalShape - bound logical shape; transform - 16 Double_t component transform for placement of logical drawing; invertedWind - use inverted face polygon winding?; rgba - basic four component (RGBA) diffuse color. ~TGLPhysicalShape(); Destroy the physical shape. void AddReference(TGLPShapeRef* ref); Add reference ref. void RemoveReference(TGLPShapeRef* ref); Remove reference ref. void Modified(); Call this after modifying the physical so that the information; can be propagated to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLPhysicalShape.html:4489,log,logicalShape,4489,root/html534/TGLPhysicalShape.html,https://root.cern,https://root.cern/root/html534/TGLPhysicalShape.html,1,['log'],['logicalShape']
Testability,"ant (Fisher or Mahalanobis approach); TMVA::MethodHMatrix H-Matrix method, a simple comparison of chi-squared estimators for signal and background; TMVA::MethodKNN k Nearest Neighbour classifier; TMVA::MethodLD Linear discriminant analysis; TMVA::MethodLikelihood Likelihood analysis (""non-parametric approach""); TMVA::MethodMLP Multi-layer perceptron implemented specifically for TMVA; TMVA::MethodPDEFoam Multi-dimensional probability density estimator using TFoam (PDE-Foam); TMVA::MethodPDERS Multi-dimensional probability density estimator range search (PDERS) method; TMVA::MethodRuleFit Friedman's RuleFit method; TMVA::MethodSVM Support Vector Machine; TMVA::MethodTMlpANN Implementation of interface for TMultiLayerPerceptron; TMVA::MinuitFitter Fitter using a Genetic Algorithm; TMVA::MinuitWrapper Wrapper around TMinuit; TMVA::MisClassificationError Implementation of the MisClassificationError as separation criterion; TMVA::MsgLogger Ostringstream derivative to redirect and format logging output; TMVA::Node Node for the BinarySearch or Decision Trees; TMVA::OptimizeConfigParameters Interface to different separation critiera used in training algorithms; TMVA::PDEFoam Tree of PDEFoamCells; TMVA::PDEFoamCell Single cell of FOAM; TMVA::PDEFoamDecisionTree Decision tree like PDEFoam; TMVA::PDEFoamDecisionTreeDensity Class for decision tree like PDEFoam density; TMVA::PDEFoamDensityBase PDEFoam event density interface; TMVA::PDEFoamDiscriminant Tree of PDEFoamCells; TMVA::PDEFoamDiscriminantDensity Class for Discriminant density; TMVA::PDEFoamEvent Tree of PDEFoamCells; TMVA::PDEFoamEventDensity Class for Event density; TMVA::PDEFoamKernelBase PDEFoam kernel interface; TMVA::PDEFoamKernelGauss Gaussian PDEFoam kernel estimator; TMVA::PDEFoamKernelLinN next neighbor PDEFoam kernel estimator; TMVA::PDEFoamKernelTrivial trivial PDEFoam kernel estimator; TMVA::PDEFoamMultiTarget Tree of PDEFoamCells; TMVA::PDEFoamTarget Tree of PDEFoamCells; TMVA::PDEFoamTargetDensity Class f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassIndex.html:103077,log,logging,103077,root/html602/ClassIndex.html,https://root.cern,https://root.cern/root/html602/ClassIndex.html,2,['log'],['logging']
Testability,antFuncMathCore.cxx;  RandomFunctions.cxx;  RichardsonDerivator.cxx;  RootFinder.cxx;  SparseData.cxx;  SpecFuncCephes.cxx;  SpecFuncCephes.h;  SpecFuncCephesInv.cxx;  SpecFuncMathCore.cxx;  TComplex.cxx;  TDataPointN.cxx;  TKDTree.cxx;  TKDTreeBinning.cxx;  TMath.cxx;  TRandom.cxx;  TRandom1.cxx;  TRandom2.cxx;  TRandom3.cxx;  triangle.c;  triangle.h;  TStatistic.cxx;  UnBinData.cxx;  ► test;  ► fit;  GaussFunction.h;  MinimizerTypes.h;  SparseDataComparer.cxx;  SparseFit3.cxx;  SparseFit4.cxx;  testFit.cxx;  testFitPerf.cxx;  testGraphFit.cxx;  testMinim.cxx;  testRooFit.cxx;  WrapperRooPdf.h;  binarySearchTime.cxx;  kDTreeTest.cxx;  newKDTreeTest.cxx;  stdsort.cxx;  stressGoFTest.cxx;  stressTF1.cxx;  stressTMath.cxx;  testAnalyticalIntegrals.cxx;  testBinarySearch.cxx;  testDistSampler.cxx;  testIntegration.cxx;  testIntegrationMultiDim.cxx;  testkdTreeBinning.cxx;  testMathRandom.cxx;  testRootFinder.cxx;  testSampleQuantiles.cxx;  testSortOrder.cxx;  testSpecFuncBeta.cxx;  testSpecFuncBetaI.cxx;  testSpecFuncErf.cxx;  testSpecFuncGamma.cxx;  testSpecFuncSiCi.cxx;  testTMath.cxx;  testTStatistic.cxx;  ► v7;  ► inc;  ► ROOT;  TFit.h;  ► mathmore;  ► inc;  ► Math;  ChebyshevApprox.h;  Derivator.h;  DistFuncMathMore.h;  GSLFunctionAdapter.h;  GSLIntegrator.h;  GSLMCIntegrator.h;  GSLMinimizer.h;  GSLMinimizer1D.h;  GSLMultiRootFinder.h;  GSLNLSMinimizer.h;  GSLQuasiRandom.h;  GSLRandom.h;  GSLRandomFunctions.h;  GSLRndmEngines.h;  GSLRootFinder.h;  GSLRootFinderDeriv.h;  GSLRootHelper.h;  GSLSimAnMinimizer.h;  GSLSimAnnealing.h;  IntegrationTypes.h;  InterpolationTypes.h;  Interpolator.h;  KelvinFunctions.h;  LinkDef.h;  LinkDef_Func.h;  LinkDef_RootFinding.h;  MCIntegrationTypes.h;  MCParameters.h;  MultiNumGradFunction.h;  MultiRootFinder.h;  ParamFunction.h;  PdfFuncMathMore.h;  Polynomial.h;  QuantFuncMathMore.h;  QuasiRandom.h;  RootFinderAlgorithms.h;  SpecFuncMathMore.h;  Vavilov.h;  VavilovAccurate.h;  VavilovAccurateCdf.h;  VavilovAccuratePdf.h;  VavilovA,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:46379,test,testSpecFuncBetaI,46379,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['test'],['testSpecFuncBetaI']
Testability,"antRWLock< MutexT, RecurseCountsT >; Definition at line 279 of file TReentrantRWLock.hxx. Public Types; using State = TVirtualRWMutex::State;  ; using StateDelta = TVirtualRWMutex::StateDelta;  . Public Member Functions;  TReentrantRWLock ();  Regular constructor. ;  ; void Apply (std::unique_ptr< StateDelta > &&delta);  Re-apply a delta. ;  ; std::unique_ptr< State > GetStateBefore ();  Get the lock state before the most recent write lock was taken. ;  ; TVirtualRWMutex::Hint_t * ReadLock ();  Acquire the lock in read mode. ;  ; void ReadUnLock (TVirtualRWMutex::Hint_t *);  Release the lock in read mode. ;  ; std::unique_ptr< StateDelta > Rewind (const State &earlierState);  Rewind to an earlier mutex state, returning the delta. ;  ; TVirtualRWMutex::Hint_t * WriteLock ();  Acquire the lock in write mode. ;  ; void WriteUnLock (TVirtualRWMutex::Hint_t *);  Release the lock in write mode. ;  . Private Member Functions; void AssertReadCountLocIsFromCurrentThread (const size_t *presumedLocalReadersCount);  Assert that presumedLocalReadersCount really matches the local read count. ;  . Private Attributes; std::condition_variable_any fCond;  ! RWlock internal condition variable ;  ; MutexT fMutex;  ! RWlock internal mutex ;  ; std::atomic< int > fReaderReservation;  ! A reader wants access ;  ; std::atomic< int > fReaders;  ! Number of readers ;  ; RecurseCountsT fRecurseCounts;  ! Trackers for re-entry in the lock by the same thread. ;  ; std::atomic< bool > fWriter;  ! Is there a writer? ;  ; std::atomic< int > fWriterReservation;  ! A writer wants access ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/thread/src/TReentrantRWLock.hxx>; Member Typedef Documentation. ◆ State. template<typename MutexT = ROOT::TSpinMutex, typename RecurseCountsT = Internal::RecurseCounts> . using ROOT::TReentrantRWLock< MutexT, RecurseCountsT >::State = TVirtualRWMutex::State. Definition at line 299 of file TReentrantRWLock.hxx. ◆ StateDelta.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TReentrantRWLock.html:1433,Assert,AssertReadCountLocIsFromCurrentThread,1433,doc/master/classROOT_1_1TReentrantRWLock.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TReentrantRWLock.html,2,['Assert'],"['Assert', 'AssertReadCountLocIsFromCurrentThread']"
Testability,"antRWLock< MutexT, RecurseCountsT >; Definition at line 279 of file TReentrantRWLock.hxx. Public Types; using State = TVirtualRWMutex::State;  ; using StateDelta = TVirtualRWMutex::StateDelta;  . Public Member Functions;  TReentrantRWLock ();  Regular constructor. ;  ; void Apply (std::unique_ptr< StateDelta > &&delta);  Re-apply a delta. ;  ; std::unique_ptr< State > GetStateBefore ();  Get the lock state before the most recent write lock was taken. ;  ; TVirtualRWMutex::Hint_t * ReadLock ();  Acquire the lock in read mode. ;  ; void ReadUnLock (TVirtualRWMutex::Hint_t *);  Release the lock in read mode. ;  ; std::unique_ptr< StateDelta > Rewind (const State &earlierState);  Rewind to an earlier mutex state, returning the delta. ;  ; TVirtualRWMutex::Hint_t * WriteLock ();  Acquire the lock in write mode. ;  ; void WriteUnLock (TVirtualRWMutex::Hint_t *);  Release the lock in write mode. ;  . Private Member Functions; void AssertReadCountLocIsFromCurrentThread (const size_t *presumedLocalReadersCount);  Assert that presumedLocalReadersCount really matches the local read count. ;  . Private Attributes; std::condition_variable_any fCond;  ! RWlock internal condition variable ;  ; MutexT fMutex;  ! RWlock internal mutex ;  ; std::atomic< int > fReaderReservation;  ! A reader wants access ;  ; std::atomic< int > fReaders;  ! Number of readers ;  ; RecurseCountsT fRecurseCounts;  ! Trackers for re-entry in the lock by the same thread. ;  ; std::atomic< bool > fWriter;  ! Is there a writer? ;  ; std::atomic< int > fWriterReservation;  ! A writer wants access ;  . #include </home/sftnight/build/workspace/root-makedoc-v632/rootspi/rdoc/src/v6-32-00-patches/core/thread/src/TReentrantRWLock.hxx>; Member Typedef Documentation. ◆ State. template<typename MutexT = ROOT::TSpinMutex, typename RecurseCountsT = Internal::RecurseCounts> . using ROOT::TReentrantRWLock< MutexT, RecurseCountsT >::State = TVirtualRWMutex::State. Definition at line 299 of file TReentrantRWLock.hxx. ◆ Sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TReentrantRWLock.html:1432,Assert,AssertReadCountLocIsFromCurrentThread,1432,doc/v632/classROOT_1_1TReentrantRWLock.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TReentrantRWLock.html,2,['Assert'],"['Assert', 'AssertReadCountLocIsFromCurrentThread']"
Testability,"anumeric labels. ;  ;  motorcycle.C;   Macro to test scatterplot smoothers: ksmooth, lowess, supsmu as described in: ;  ;  multigraph.C;   Create and Draw a TMultiGraph. ;  ;  multigraphpalettecolor.C;   Palette coloring for multi-graphs is activated thanks to the options PFC (Palette Fill Color), PLC (Palette Line Color) and AMC (Palette Marker Color). ;  ;  multipalette.C;   Draw color plots using different color palettes. ;  ;  scatter.C;   Draw a scatter plot. ;  ;  seism.C;   Strip chart example. ;  ;  splines_test.C;   Examples of use of the spline classes. ;  ;  surfaces.C;   Draw 2-Dim functions. ;  ;  timeonaxis.C;   This macro illustrates the use of the time mode on the axis with different time intervals and time formats. ;  ;  timeonaxis2.C;   Define the time offset as 2003, January 1st. ;  ;  timeonaxis3.C;   This example compares what the system time function gmtime and localtime give with what gives TGaxis. ;  ;  timeSeriesFromCSV.C;   This macro illustrates the use of the time axis on a TGraph with data read from a text file containing the SWAN usage statistics during July 2017. ;  ;  timeSeriesFromCSV.py;   This macro illustrates the use of the time axis on a TGraph with data read from a text file containing the SWAN usage statistics during July 2017. ;  ;  timeSeriesFromCSV_TDF.C;   This macro illustrates the use of the time axis on a TGraph with data read from a text file containing the SWAN usage statistics during July 2017. ;  ;  waves.C;   Hint: Spherical waves ;  ;  zdemo.C;   This macro is an example of graphs in log scales with annotations. ;  ;  zones.C;   Example of script showing how to divide a canvas into adjacent subpads + axis labels on the top and right side of the pads. ;  ;  zones.py;   Example of script showing how to divide a canvas into adjacent subpads + axis labels on the top and right side of the pads. ;  . tutorialsgraphs. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_21ec31480a793facd4ea3dd8f2d42294.html:3701,log,log,3701,doc/master/dir_21ec31480a793facd4ea3dd8f2d42294.html,https://root.cern,https://root.cern/doc/master/dir_21ec31480a793facd4ea3dd8f2d42294.html,1,['log'],['log']
Testability,"anvas to client. Int_t BrowseDirectory(const char* dirname); Browse directory and send back its content to client. Int_t BrowseFile(const char* fname); Browse root file and send back its content;; if fname is null, send the full list of files. Int_t BrowseKey(const char* keyname); Read key object and send it back to client. void Terminate(Int_t status); Terminate the proof server. void HandleCheckFile(TMessage* mess); Handle file checking request. void ErrorHandler(Int_t level, Bool_t abort, const char* location, const char* msg); The error handler function. It prints the message on stderr and; if abort is set it aborts the application. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* err = 0); Parse a command line received from the client, making sure that the files; needed for the execution, if any, are available. The line is either a C++; statement or an interpreter command starting with a ""."".; Return the return value of the command casted to a long. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. Int_t GetProtocol() const; { return fProtocol; }. Int_t GetPort() const; { return fUrl.GetPort(); }. const char * GetUser() const; { return fUrl.GetUser(); }. const char * GetHost() const; { return fUrl.GetHost(); }. TSocket * GetSocket() const; { return fSocket; }. void Interrupt(); { fInterrupt = kTRUE; }. Bool_t IsValid() const; { return fIsValid; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-03-10 17:21; This page has been automatically generated. For comments or suggest",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TApplicationServer.html:15891,log,logon,15891,root/html534/TApplicationServer.html,https://root.cern,https://root.cern/root/html534/TApplicationServer.html,1,['log'],['logon']
Testability,"anvas to client. Int_t BrowseDirectory(const char* dirname); Browse directory and send back its content to client. Int_t BrowseFile(const char* fname); Browse root file and send back its content;; if fname is null, send the full list of files. Int_t BrowseKey(const char* keyname); Read key object and send it back to client. void Terminate(Int_t status); Terminate the proof server. void HandleCheckFile(TMessage* mess); Handle file checking request. void ErrorHandler(Int_t level, Bool_t abort, const char* location, const char* msg); The error handler function. It prints the message on stderr and; if abort is set it aborts the application. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* err = 0); Parse a command line received from the client, making sure that the files; needed for the execution, if any, are available. The line is either a C++; statement or an interpreter command starting with a ""."".; Return the return value of the command casted to a long. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. Int_t GetProtocol() const; { return fProtocol; }. Int_t GetPort() const; { return fUrl.GetPort(); }. const char * GetUser() const; { return fUrl.GetUser(); }. const char * GetHost() const; { return fUrl.GetHost(); }. TSocket * GetSocket() const; { return fSocket; }. void Interrupt(); { fInterrupt = kTRUE; }. Bool_t IsValid() const; { return fIsValid; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TApplicationServer.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2009-12-07 13:50; This page has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplicationServer.html:15562,log,logon,15562,root/html526/TApplicationServer.html,https://root.cern,https://root.cern/root/html526/TApplicationServer.html,1,['log'],['logon']
Testability,"anvas to client. Int_t BrowseDirectory(const char* dirname); Browse directory and send back its content to client. Int_t BrowseFile(const char* fname); Browse root file and send back its content;; if fname is null, send the full list of files. Int_t BrowseKey(const char* keyname); Read key object and send it back to client. void Terminate(Int_t status); Terminate the proof server. void HandleCheckFile(TMessage* mess); Handle file checking request. void ErrorHandler(Int_t level, Bool_t abort, const char* location, const char* msg); The error handler function. It prints the message on stderr and; if abort is set it aborts the application. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* err = 0); Parse a command line received from the client, making sure that the files; needed for the execution, if any, are available. The line is either a C++; statement or an interpreter command starting with a ""."".; Return the return value of the command casted to a long. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. Int_t GetProtocol() const; { return fProtocol; }. Int_t GetPort() const; { return fUrl.GetPort(); }. const char * GetUser() const; { return fUrl.GetUser(); }. const char * GetHost() const; { return fUrl.GetHost(); }. TSocket * GetSocket() const; { return fSocket; }. void Interrupt(); { fInterrupt = kTRUE; }. Bool_t IsValid() const; { return fIsValid; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TApplicationServer.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2010-10-06 16:19; This page has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TApplicationServer.html:15721,log,logon,15721,root/html528/TApplicationServer.html,https://root.cern,https://root.cern/root/html528/TApplicationServer.html,1,['log'],['logon']
Testability,"anvas to client. Int_t BrowseDirectory(const char* dirname); Browse directory and send back its content to client. Int_t BrowseFile(const char* fname); Browse root file and send back its content;; if fname is null, send the full list of files. Int_t BrowseKey(const char* keyname); Read key object and send it back to client. void Terminate(Int_t status); Terminate the proof server. void HandleCheckFile(TMessage* mess); Handle file checking request. void ErrorHandler(Int_t level, Bool_t abort, const char* location, const char* msg); The error handler function. It prints the message on stderr and; if abort is set it aborts the application. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* err = 0); Parse a command line received from the client, making sure that the files; needed for the execution, if any, are available. The line is either a C++; statement or an interpreter command starting with a ""."".; Return the return value of the command casted to a long. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. Int_t GetProtocol() const; { return fProtocol; }. Int_t GetPort() const; { return fUrl.GetPort(); }. const char * GetUser() const; { return fUrl.GetUser(); }. const char * GetHost() const; { return fUrl.GetHost(); }. TSocket * GetSocket() const; { return fSocket; }. void Interrupt(); { fInterrupt = kTRUE; }. Bool_t IsValid() const; { return fIsValid; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TApplicationServer.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2011-07-04 15:24; This page has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TApplicationServer.html:15872,log,logon,15872,root/html530/TApplicationServer.html,https://root.cern,https://root.cern/root/html530/TApplicationServer.html,1,['log'],['logon']
Testability,"anvas to client. Int_t BrowseDirectory(const char* dirname); Browse directory and send back its content to client. Int_t BrowseFile(const char* fname); Browse root file and send back its content;; if fname is null, send the full list of files. Int_t BrowseKey(const char* keyname); Read key object and send it back to client. void Terminate(Int_t status); Terminate the proof server. void HandleCheckFile(TMessage* mess); Handle file checking request. void ErrorHandler(Int_t level, Bool_t abort, const char* location, const char* msg); The error handler function. It prints the message on stderr and; if abort is set it aborts the application. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* err = 0); Parse a command line received from the client, making sure that the files; needed for the execution, if any, are available. The line is either a C++; statement or an interpreter command starting with a ""."".; Return the return value of the command casted to a long. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. Int_t GetProtocol() const; { return fProtocol; }. Int_t GetPort() const; { return fUrl.GetPort(); }. const char * GetUser() const; { return fUrl.GetUser(); }. const char * GetHost() const; { return fUrl.GetHost(); }. TSocket * GetSocket() const; { return fSocket; }. void Interrupt(); { fInterrupt = kTRUE; }. Bool_t IsValid() const; { return fIsValid; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TApplicationServer.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2011-11-03 20:10; This page has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TApplicationServer.html:15872,log,logon,15872,root/html532/TApplicationServer.html,https://root.cern,https://root.cern/root/html532/TApplicationServer.html,1,['log'],['logon']
Testability,"anvas to client. Int_t BrowseDirectory(const char* dirname); Browse directory and send back its content to client. Int_t BrowseFile(const char* fname); Browse root file and send back its content;; if fname is null, send the full list of files. Int_t BrowseKey(const char* keyname); Read key object and send it back to client. void Terminate(Int_t status); Terminate the proof server. void HandleCheckFile(TMessage* mess); Handle file checking request. void ErrorHandler(Int_t level, Bool_t abort, const char* location, const char* msg); The error handler function. It prints the message on stderr and; if abort is set it aborts the application. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* err = 0); Parse a command line received from the client, making sure that the files; needed for the execution, if any, are available. The line is either a C++; statement or an interpreter command starting with a ""."".; Return the return value of the command casted to a long. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. TApplicationServer(Int_t* argc, char** argv, FILE* flog, const char* logfile). Int_t GetProtocol() const; { return fProtocol; }. Int_t GetPort() const; { return fUrl.GetPort(); }. const char * GetUser() const; { return fUrl.GetUser(); }. const char * GetHost() const; { return fUrl.GetHost(); }. TSocket * GetSocket() const; { return fSocket; }. void Interrupt(); { fInterrupt = kTRUE; }. Bool_t IsValid() const; { return fIsValid; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TApplicationServer.html:16657,log,logon,16657,root/html602/TApplicationServer.html,https://root.cern,https://root.cern/root/html602/TApplicationServer.html,2,['log'],['logon']
Testability,"anvas::GetUIDstd::string GetUID() constReturn unique identifier for the canvas Used in iPython display.Definition RCanvas.cxx:199; ROOT::Experimental::RCanvas::CreateJSONstd::string CreateJSON()Provide JSON which can be used for offline display.Definition RCanvas.cxx:211; ROOT::Experimental::RCanvas::Createstatic std::shared_ptr< RCanvas > Create(const std::string &title)Create new canvas instance.Definition RCanvas.cxx:89; ROOT::Experimental::RCanvas::ClearOnClosevoid ClearOnClose(const std::shared_ptr< void > &handle)Set handle which will be cleared when connection is closed.Definition RCanvas.cxx:239; ROOT::Experimental::RCanvas::Updatevoid Update(bool async=false, CanvasCallback_t callback=nullptr)update drawingDefinition RCanvas.cxx:78; ROOT::Experimental::RCanvas::Hidevoid Hide()Hide all canvas displays.Definition RCanvas.cxx:171; ROOT::Experimental::RChangeAttrRequest::Processstd::unique_ptr< RDrawableReply > Process() overrideApply attributes changes to the drawable Return mask with actions which were really applied.Definition RCanvas.cxx:327; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TString::HashUInt_t Hash(ECaseCompare cmp=kExact) constReturn hash value.Definition TString.cxx:677; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; int; nconst Int_t nDefinition legend1.C:16; ROOT::Experimental::Internal::RIOSharedVector_tstd::vector< RIOSharedBase * > RIOSharedVector_tDefinition RDrawable.hxx:52; ROOT::Experimental::CanvasCallback_tstd::function< void(bool)> CanvasCallback_tDefinition RVirtualCanvasPainter.hxx:22; ROOT::Experimental::GPadLogRLogChannel & GPadLog()Log channel for GPad diagnostics.Definition RAttrBase.cxx:17. graf2dgpadv7srcRCanvas.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RCanvas_8cxx_source.html:17117,Log,Log,17117,doc/master/RCanvas_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RCanvas_8cxx_source.html,1,['Log'],['Log']
Testability,"ap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TObject*Key() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetValue(TObject* val); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); TObject*Value() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPair.html:4495,Test,TestBit,4495,root/html528/TPair.html,https://root.cern,https://root.cern/root/html528/TPair.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ap. ;  ; virtual void SetOwnerKeyValue (Bool_t ownkeys=kTRUE, Bool_t ownvals=kTRUE);  Set ownership for keys and values. ;  ; virtual void SetOwnerValue (Bool_t enable=kTRUE);  Set whether this map is the owner (enable==true) of its values. ;  ; void Streamer (TBuffer &) override;  Stream all key/value pairs in the map to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const override;  Write all objects in this map. ;  ; Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) override;  Write all objects in this map. ;  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMap.html:5131,Assert,AssertClass,5131,doc/master/classTMap.html,https://root.cern,https://root.cern/doc/master/classTMap.html,1,['Assert'],['AssertClass']
Testability,"aphErrors; TGraphPolar : example; TMultiGraph : example, exclusion; TGraph2D : example; TEfficiency : docu; TLatex : example; TMathText : example; TCanvas : example; TPad : example; TRatioPlot : example; TLegend : example; TTree : single-branch draw; TPolyLine : dflt; TGaxis : dflt; TEllipse : dflt; TArrow : dflt; TPolyMarker3D: dflt. More examples of supported classes can be found on: https://root.cern/js/latest/examples.htm; There are special JSROOT draw options which only can be used with for TCanvas or TPad objects:. logx - enable log10 scale for X axis; logy - enable log10 scale for Y axis; logz - enable log10 scale for Z axis; log - enable log10 scale for X,Y,Z axes; log2x - enable log2 scale for X axis; log2y - enable log2 scale for Y axis; log2z - enable log2 scale for Z axis; log2 - enable log2 scale for X,Y,Z axes; gridx - enable grid for X axis; gridy - enable grid for X axis; grid - enable grid for X and Y axes; tickx - enable ticks for X axis; ticky - enable ticks for X axis; tick - enable ticks for X and Y axes; rx - reverse X axis; ry - reverse Y axis; rotate - rotate frame; fixframe - disable interactive moving of the frame; nozoomx - disable zooming on X axis; nozoomy - disable zooming on Y axis; cpXY - create palette XY for the canvas like cp50; nopalette - ignore palette stored with TCanvas; nocolors - ignore colors list stored with TCanvas; lcolors - use only locally colors list stored with TCanvas; nomargins - clear frame margins. 1.4 Superimposing draw objects; In the URL string one could use “+” sign to specify objects superposition:. item=hpx+hprof. With similar syntax one could specify individual draw options for superimposed objects. item=hpx+hprof&opt=logy+hist. Here “logy” option will be used for “hpx1” item and “hist” option for “hprof;1” item.; While draw option can include “+” sign itself, for superposition one could specify arrays of items and draw options like:. item=[hpx;1,hprof;1]&opt=[logy,hist]. 1.5 TTree draw; JSROOT provides pos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html:6900,log,logx,6900,root/htmldoc/guides/JSROOT/JSROOT.html,https://root.cern,https://root.cern/root/htmldoc/guides/JSROOT/JSROOT.html,4,['log'],"['log', 'logx', 'logy', 'logz']"
Testability,"apped over to the std::any result.; 421/// The default value is `""_anyresult""`.; 422/// \return bool Returns `true` if the command was successfully executed,; 423/// otherwise returns `false`.; 424 ; 425Bool_t TPython::Exec(const char *cmd, std::any *result, std::string const &resultName); 426{; 427 // setup; 428 if (!Initialize()); 429 return kFALSE;; 430 ; 431 PyGILRAII gilRaii;; 432 ; 433 std::stringstream command;; 434 // Add the actual command; 435 command << cmd;; 436 // Swap the std::any with the one in the C++ world if required; 437 if (result) {; 438 command << ""; ROOT.Internal.SwapWithObjAtAddr['std::any']("" << resultName << "", ""; 439 << reinterpret_cast<std::intptr_t>(result) << "")"";; 440 }; 441 ; 442 // execute the command; 443 PyObject *pyObjectResult =; 444 PyRun_String(const_cast<char *>(command.str().c_str()), Py_file_input, gMainDict, gMainDict);; 445 ; 446 // test for error; 447 if (pyObjectResult) {; 448 Py_DECREF(pyObjectResult);; 449 return kTRUE;; 450 }; 451 ; 452 PyErr_Print();; 453 return kFALSE;; 454}; 455 ; 456////////////////////////////////////////////////////////////////////////////////; 457/// Evaluate a python expression (e.g. ""ROOT.TBrowser()"").; 458///; 459/// Caution: do not hold on to the return value: either store it in a builtin; 460/// type (implicit casting will work), or in a pointer to a ROOT object (explicit; 461/// casting to a void* is required).; 462///; 463/// \deprecated Use TPython::Exec() with an std::any output parameter instead.; 464 ; 465const TPyReturn TPython::Eval(const char *expr); 466{; 467 // setup; 468 if (!Initialize()); 469 return TPyReturn();; 470 ; 471 PyGILRAII gilRaii;; 472 ; 473 // evaluate the expression; 474 PyObject *result = PyRun_String(const_cast<char *>(expr), Py_eval_input, gMainDict, gMainDict);; 475 ; 476 // report errors as appropriate; return void; 477 if (!result) {; 478 PyErr_Print();; 479 return TPyReturn();; 480 }; 481 ; 482 // results that require no conversion; 483 if (result == Py_No",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPython_8cxx_source.html:15066,test,test,15066,doc/master/TPython_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPython_8cxx_source.html,1,['test'],['test']
Testability,"apper&); TMVA::CCTreeWrapperCCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex); Double_tCheckEvent(const TMVA::Event& e, Bool_t useYesNoLeaf = false); TMVA::CCTreeWrapper::CCTreeNode*GetRoot(); voidInitTree(TMVA::CCTreeWrapper::CCTreeNode* t); TMVA::CCTreeWrapper&operator=(const TMVA::CCTreeWrapper&); voidPruneNode(TMVA::CCTreeWrapper::CCTreeNode* t); Double_tTestTreeQuality(const TMVA::CCTreeWrapper::EventList* validationSample); Double_tTestTreeQuality(const TMVA::DataSet* validationSample). Data Members; private:. TMVA::DecisionTree*fDTParent! pointer to underlying DecisionTree; TMVA::SeparationBase*fQualityIndex! pointer to the used quality index calculator; TMVA::CCTreeWrapper::CCTreeNode*fRoot! the root node of the (wrapped) decision Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex); constructor. ~CCTreeWrapper(); destructor. void InitTree(TMVA::CCTreeWrapper::CCTreeNode* t); initialize the node t and all its descendants. void PruneNode(TMVA::CCTreeWrapper::CCTreeNode* t); remove the branch rooted at node t. Double_t TestTreeQuality( const EventList* validationSample ); return the misclassification rate of a pruned tree for a validation event sample; using an EventList. Double_t TestTreeQuality( const DataSet* validationSample ); return the misclassification rate of a pruned tree for a validation event sample; using the DataSet. Double_t CheckEvent(const TMVA::Event& e, Bool_t useYesNoLeaf = false); return the decision tree output for an event. CCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex). CCTreeNode* GetRoot(); return the root node for this tree. { return fRoot; }. » Last changed: Mon Jul 4 15:33:59 2011 » Last generated: 2011-07-04 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__CCTreeWrapper.html:1583,Test,TestTreeQuality,1583,root/html530/TMVA__CCTreeWrapper.html,https://root.cern,https://root.cern/root/html530/TMVA__CCTreeWrapper.html,2,['Test'],['TestTreeQuality']
Testability,"apper&); TMVA::CCTreeWrapperCCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex); Double_tCheckEvent(const TMVA::Event& e, Bool_t useYesNoLeaf = false); TMVA::CCTreeWrapper::CCTreeNode*GetRoot(); voidInitTree(TMVA::CCTreeWrapper::CCTreeNode* t); TMVA::CCTreeWrapper&operator=(const TMVA::CCTreeWrapper&); voidPruneNode(TMVA::CCTreeWrapper::CCTreeNode* t); Double_tTestTreeQuality(const TMVA::CCTreeWrapper::EventList* validationSample); Double_tTestTreeQuality(const TMVA::DataSet* validationSample). Data Members; private:. TMVA::DecisionTree*fDTParent! pointer to underlying DecisionTree; TMVA::SeparationBase*fQualityIndex! pointer to the used quality index calculator; TMVA::CCTreeWrapper::CCTreeNode*fRoot! the root node of the (wrapped) decision Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex); constructor. ~CCTreeWrapper(); destructor. void InitTree(TMVA::CCTreeWrapper::CCTreeNode* t); initialize the node t and all its descendants. void PruneNode(TMVA::CCTreeWrapper::CCTreeNode* t); remove the branch rooted at node t. Double_t TestTreeQuality( const EventList* validationSample ); return the misclassification rate of a pruned tree for a validation event sample; using an EventList. Double_t TestTreeQuality( const DataSet* validationSample ); return the misclassification rate of a pruned tree for a validation event sample; using the DataSet. Double_t CheckEvent(const TMVA::Event& e, Bool_t useYesNoLeaf = false); return the decision tree output for an event. CCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex). CCTreeNode* GetRoot(); return the root node for this tree. { return fRoot; }. » Last changed: Thu Nov 3 20:19:24 2011 » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__CCTreeWrapper.html:1583,Test,TestTreeQuality,1583,root/html532/TMVA__CCTreeWrapper.html,https://root.cern,https://root.cern/root/html532/TMVA__CCTreeWrapper.html,2,['Test'],['TestTreeQuality']
Testability,"apper&); TMVA::CCTreeWrapperCCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex); Double_tCheckEvent(const TMVA::Event& e, Bool_t useYesNoLeaf = false); TMVA::CCTreeWrapper::CCTreeNode*GetRoot(); voidInitTree(TMVA::CCTreeWrapper::CCTreeNode* t); TMVA::CCTreeWrapper&operator=(const TMVA::CCTreeWrapper&); voidPruneNode(TMVA::CCTreeWrapper::CCTreeNode* t); Double_tTestTreeQuality(const TMVA::CCTreeWrapper::EventList* validationSample); Double_tTestTreeQuality(const TMVA::DataSet* validationSample). Data Members; private:. TMVA::DecisionTree*fDTParent! pointer to underlying DecisionTree; TMVA::SeparationBase*fQualityIndex! pointer to the used quality index calculator; TMVA::CCTreeWrapper::CCTreeNode*fRoot! the root node of the (wrapped) decision Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex); constructor. ~CCTreeWrapper(); destructor. void InitTree(TMVA::CCTreeWrapper::CCTreeNode* t); initialize the node t and all its descendants. void PruneNode(TMVA::CCTreeWrapper::CCTreeNode* t); remove the branch rooted at node t. Double_t TestTreeQuality( const EventList* validationSample ); return the misclassification rate of a pruned tree for a validation event sample; using an EventList. Double_t TestTreeQuality( const DataSet* validationSample ); return the misclassification rate of a pruned tree for a validation event sample; using the DataSet. Double_t CheckEvent(const TMVA::Event& e, Bool_t useYesNoLeaf = false); return the decision tree output for an event. CCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex). CCTreeNode* GetRoot(); return the root node for this tree. { return fRoot; }. » Last changed: Tue Sep 8 17:04:41 2015 » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__CCTreeWrapper.html:1583,Test,TestTreeQuality,1583,root/html534/TMVA__CCTreeWrapper.html,https://root.cern,https://root.cern/root/html534/TMVA__CCTreeWrapper.html,2,['Test'],['TestTreeQuality']
Testability,"apper&); TMVA::CCTreeWrapperCCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex); Double_tCheckEvent(const TMVA::Event& e, Bool_t useYesNoLeaf = false); TMVA::CCTreeWrapper::CCTreeNode*GetRoot(); voidInitTree(TMVA::CCTreeWrapper::CCTreeNode* t); TMVA::CCTreeWrapper&operator=(const TMVA::CCTreeWrapper&); voidPruneNode(TMVA::CCTreeWrapper::CCTreeNode* t); Double_tTestTreeQuality(const TMVA::CCTreeWrapper::EventList* validationSample); Double_tTestTreeQuality(const TMVA::DataSet* validationSample). Data Members; private:. TMVA::DecisionTree*fDTParent! pointer to underlying DecisionTree; TMVA::SeparationBase*fQualityIndex! pointer to the used quality index calculator; TMVA::CCTreeWrapper::CCTreeNode*fRoot! the root node of the (wrapped) decision Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex); constructor. ~CCTreeWrapper(); destructor. void InitTree(TMVA::CCTreeWrapper::CCTreeNode* t); initialize the node t and all its descendants. void PruneNode(TMVA::CCTreeWrapper::CCTreeNode* t); remove the branch rooted at node t. Double_t TestTreeQuality( const EventList* validationSample ); return the misclassification rate of a pruned tree for a validation event sample; using an EventList. Double_t TestTreeQuality( const DataSet* validationSample ); return the misclassification rate of a pruned tree for a validation event sample; using the DataSet. Double_t CheckEvent(const TMVA::Event& e, Bool_t useYesNoLeaf = false); return the decision tree output for an event. CCTreeWrapper(TMVA::DecisionTree* T, TMVA::SeparationBase* qualityIndex). CCTreeNode* GetRoot(); return the root node for this tree. { return fRoot; }. » Last changed: Tue Sep 8 17:45:50 2015 » Last generated: 2015-09-08 17:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__CCTreeWrapper.html:1591,Test,TestTreeQuality,1591,root/html604/TMVA__CCTreeWrapper.html,https://root.cern,https://root.cern/root/html604/TMVA__CCTreeWrapper.html,2,['Test'],['TestTreeQuality']
Testability,"applications. private:. TStringfDefaultPromptdefault prompt: ""root [%d] ""; TFileHandler*fInputHandlerterminal input handler; Bool_tfInterruptif true macro execution will be stopped; Int_tfNcmdcommand history number; charfPrompt[64]interpreter prompt. Class Charts. Inheritance Chart:. TObject. TQObject. ←; TApplication. ←; TRint. Function documentation; TRint(const char* appClassName, int* argc, char** argv, void* options = 0, int numOptions = 0, Bool_t noLogo = kFALSE); Create an application environment. The TRint environment provides an; interface to the WM manager functionality and eventloop via inheritance; of TApplication and in addition provides interactive access to; the CINT C++ interpreter via the command line. ~TRint(); Destructor. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. void Run(Bool_t retrn = kFALSE); Main application eventloop. First process files given on the command; line and then go into the main application event loop, unless the -q; command line option was specfied in which case the program terminates.; When retrun is true this method returns even when -q was specified. When QuitOpt is true and retrn is false, terminate the application with; an error code equal to either the ProcessLine error (if any) or the; return value of the command casted to a long. void PrintLogo(Bool_t lite = kFALSE); Print the ROOT logo on standard output. char * GetPrompt(); Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"". const char * SetPrompt(const char* newPrompt); Set a new default prompt. It returns the previous prompt.; The prompt may contain a %d which will",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRint.html:13979,log,logon,13979,root/html602/TRint.html,https://root.cern,https://root.cern/root/html602/TRint.html,1,['log'],['logon']
Testability,"aps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooCFunction4Binding<double,double,double,double,double>&operator=(const RooCFunction4Binding<double,double,double,double,double>&); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction4Binding_double_double_double_double_double_.html:20108,test,testArg,20108,root/html602/RooCFunction4Binding_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction4Binding_double_double_double_double_double_.html,2,['test'],['testArg']
Testability,apsed time for evaluation of 1000 events: 0.00684 sec ; TFHandler_PDEFoam : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 3.3352 1.1893 [ 0.00020069 5.0000 ]; : var2: 2.4860 1.4342 [ 0.00071490 5.0000 ]; : fvalue: 163.91 83.651 [ 1.6186 394.84 ]; : -----------------------------------------------------------; : Evaluate regression method: KNN; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.0954 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 1000 events: 0.0134 sec ; TFHandler_KNN : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 3.3352 1.1893 [ 0.00020069 5.0000 ]; : var2: 2.4860 1.4342 [ 0.00071490 5.0000 ]; : fvalue: 163.91 83.651 [ 1.6186 394.84 ]; : -----------------------------------------------------------; : Evaluate regression method: LD; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.00655 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 1000 events: 0.00224 sec ; TFHandler_LD : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 3.3352 1.1893 [ 0.00020069 5.0000 ]; : var2: 2.4860 1.4342 [ 0.00071490 5.0000 ]; : fvalue: 163.91 83.651 [ 1.6186 394.84 ]; : -----------------------------------------------------------; : Evaluate regression method: DNN_CPU; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.23 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 1000 events: 0.0277 sec ; TFHandler_DNN_CPU : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: -0.027271 1.0264 [ -3.3694 5.7307 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:130312,Test,TestRegression,130312,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,2,"['Test', 'test']","['TestRegression', 'testing']"
Testability,"apsize); virtual voidShowMembers(TMemberInspector& insp); virtual voidSkipObjectAny(); virtual voidSkipVersion(const TClass* cl = 0); void*SqlReadAny(Long64_t keyid, Long64_t objid, TClass** cl, void* obj = 0); TSQLStructure*SqlWriteAny(const void* obj, const TClass* cl, Long64_t objid); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidStreamObject(TObject* obj); virtual voidStreamObject(void* obj, const type_info& typeinfo, const TClass* onFileClass = 0); virtual voidStreamObject(void* obj, const char* className, const TClass* onFileClass = 0); virtual voidStreamObject(void* obj, const TClass* cl, const TClass* onFileClass = 0); virtual voidStreamObject(void* obj, TMemberStreamer* streamer, const TClass* cl, Int_t n = 0, const TClass* onFileClass = 0); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTBufferFile::TagStreamerInfo(TVirtualStreamerInfo* info); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual voidWriteArray(const Bool_t* b, Int_t n); virtual voidWriteArray(const Char_t* c, Int_t n); virtual voidWriteArray(const UChar_t* c, Int_t n); virtual voidWriteArray(const Short_t* h, Int_t n); virtual voidWriteArray(const UShort_t* h, Int_t n); virtual voidWriteArray(const Int_t* i, Int_t n); virtual voidWriteArray(const UInt_t* i, Int_t n); virtual voidWriteArray(const Long_t* l, Int_t n); virtual voidWriteArray(const ULong_t* l, Int_t n); virtual voidWriteArray(const Long64_t* l, Int_t n); virtual voidWriteArray(const ULong64_t* l, Int_t n); virtual voidWriteArray(const Float_t* f, Int_t n); virtual voidWriteArray(const Double_t* d, Int_t n); virtual voidWriteArrayDouble32(const Double_t* d, Int_t n, TStreamerElement* ele = 0); virtual voidWriteArrayFloat16(const Float_t* f, Int_t n, TStreamerElement* ele = 0); virtual voidWriteBool(Bool_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBufferSQL2.html:13508,Test,TestBits,13508,root/html530/TBufferSQL2.html,https://root.cern,https://root.cern/root/html530/TBufferSQL2.html,2,['Test'],['TestBits']
Testability,"ar * GetName() const overrideReturns name of object.Definition TNamed.h:47; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TNamed::Classstatic TClass * Class(); TNamed::SetNamevirtual void SetName(const char *name)Set the name of the TNamed.Definition TNamed.cxx:140; TObjLinkWrapper around a TObject so it can be stored in a TList.Definition TList.h:123; TObjLink::SetObjectvoid SetObject(TObject *obj)Definition TList.h:147; TObjLink::PrevTObjLink * Prev()Definition TList.h:152; TObjLink::GetObjectTObject * GetObject() constDefinition TList.h:145; TObjOptLinkDefinition TList.h:166; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::DistancetoPrimitivevirtual Int_t DistancetoPrimitive(Int_t px, Int_t py)Computes distance from point (px,py) to the object.Definition TObject.cxx:271; TObject::GetNamevirtual const char * GetName() constReturns name of object.Definition TObject.cxx:444; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::Streamervirtual void Streamer(TBuffer &)Stream an object of class TObject.Definition TObject.cxx:894; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::UseCurrentStylevirtual void UseCurrentStyle()Set current style settings in this object This function is called when either TCanvas::UseCurrentStyl...Definition TObject.cxx:807; TObject::GetDrawOptionvirtual Option_t * GetDrawOption() constGet option used by the graphics system to draw this object.Definition TObject.cxx:428; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::FindObjectvirtual TObject * FindObject(const char *name) constMust be redefined in derived classes.Definition TObject.cxx:408; TObject::Deletevirtual void Delete(Option_t *option="""")Delete this object.Definition TObject.cxx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:285164,Test,TestBit,285164,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['Test'],['TestBit']
Testability,"ar * GetSessionDir() const; { return fSessionDir; }. const char * GetPackageDir() const; { return fPackageDir; }. const char * GetDataDir() const; { return fDataDir; }. Int_t GetProtocol() const; { return fProtocol; }. const char * GetOrdinal() const; { return fOrdinal; }. Int_t GetGroupId() const; { return fGroupId; }. Int_t GetGroupSize() const; { return fGroupSize; }. Int_t GetLogLevel() const; { return fLogLevel; }. TSocket * GetSocket() const; { return fSocket; }. Float_t GetRealTime() const; { return fRealTime; }. Float_t GetCpuTime() const; { return fCpuTime; }. Int_t GetQuerySeqNum() const; { return fQuerySeqNum; }. Int_t GetTotSessions() const; { return fTotSessions; }. Int_t GetActSessions() const; { return fActSessions; }. Float_t GetEffSessions() const; { return fEffSessions; }. TList * GetEnabledPackages() const; { return fEnabledPackages; }. Int_t GetInflateFactor() const; { return fInflateFactor; }. Long64_t GetMsgSizeHWM() const; { return fMsgSizeHWM; }. const char * GetPrefix() const; { return fPrefix; }. TProofLockPath * GetCacheLock(); { return fCacheLock; }. EQueryAction GetWorkers(TList* workers, Int_t& prioritychange, Bool_t resume = kFALSE). void HandleTermination(); { Terminate(0); }. void Interrupt(); { fInterrupt = kTRUE; }. Bool_t IsEndMaster() const; { return fEndMaster; }. Bool_t IsMaster() const; { return fMasterServ; }. Bool_t IsTopMaster() const; { return fOrdinal == ""0""; }. void ReleaseWorker(const char* ); { }. void DisableTimeout(); Disable / Enable read timeout. { }. void EnableTimeout(); { }. void LogToMaster(Bool_t on = kTRUE); Log control. { fSendLogToMaster = on; }. » Author: Fons Rademakers 16/02/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id: TProofServ.h 36592 2010-11-11 10:43:17Z ganis $ » Last generated: 2010-12-10 14:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofServ.html:32939,Log,LogToMaster,32939,root/html528/TProofServ.html,https://root.cern,https://root.cern/root/html528/TProofServ.html,2,['Log'],"['Log', 'LogToMaster']"
Testability,"ar *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; xminfloat xminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1::Smoothvirtual void Smooth(Int_t ntimes=1, Option_t *option="""")Smooth bin contents of this histogram.Definition TH1.cxx:6879; TH1::AddDirectorystatic void AddDirectory(Bool_t add=kTRUE)Sets the flag controlling the automatic add of histograms in memory.Definition TH1.cxx:1294; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH1::SetNamevoid SetName(const char *name) overrideChange the name of this histogram.Definition TH1.cxx:8960; TH1::AndersonDarlingTestvirtual Double_t AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constStatistical test of compatibility in shape between this histogram and h2, using the Anderson-Darling ...Definition TH1.cxx:8062; TH1::Chi2Testvirtual Double_t Chi2Test(const TH1 *h2, Option_t *option=""UU"", Double_t *res=nullptr) consttest for comparing weighted and unweighted histograms.Definition TH1.cxx:2008; TH1::KolmogorovTestvirtual Double_t KolmogorovTest(const TH1 *h2, Option_t *option="""") constStatistical test of compatibility in shape between this histogram and h2, using Kolmogorov test.Definition TH1.cxx:8178; c1return c1Definition legend1.C:41; h1TH1F * h1Definition legend1.C:5; AuthorRene Brun ; Definition in file testSmooth.C. tutorialshisttestSmooth.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/testSmooth_8C.html:3108,test,test,3108,doc/master/testSmooth_8C.html,https://root.cern,https://root.cern/doc/master/testSmooth_8C.html,4,['test'],"['test', 'testSmooth']"
Testability,"ar *newname) const override;  ; RooAbsTestStatistic * create (const char *name, const char *title, RooAbsReal &pdf, RooAbsData &dhist, const RooArgSet &projDeps, RooAbsTestStatistic::Configuration const &cfg) override;  ; double defaultErrorLevel () const override;  ;  Public Member Functions inherited from RooAbsOptTestStatistic;  RooAbsOptTestStatistic (const char *name, const char *title, RooAbsReal &real, RooAbsData &data, const RooArgSet &projDeps, RooAbsTestStatistic::Configuration const &cfg);  Create a test statistic, and optimise its calculation. ;  ;  RooAbsOptTestStatistic (const RooAbsOptTestStatistic &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsOptTestStatistic () override;  Destructor. ;  ; const char * cacheUniqueSuffix () const override;  Returns a suffix string that is unique for RooAbsOptTestStatistic instances that don't share the same cloned input data object. ;  ; double combinedValue (RooAbsReal **gofArray, Int_t nVal) const override;  Method to combined test statistic results calculated into partitions into the global result. ;  ; RooAbsData & data ();  ; const RooAbsData & data () const;  ; RooAbsReal & function ();  ; const RooAbsReal & function () const;  ; bool isDerived () const override;  Does value or shape of this arg depend on any other arg? ;  ; bool isSealed () const;  ; void seal (const char *notice="""");  ; const char * sealNotice () const;  ;  Public Member Functions inherited from RooAbsTestStatistic;  RooAbsTestStatistic (const char *name, const char *title, RooAbsReal &real, RooAbsData &data, const RooArgSet &projDeps, Configuration const &cfg);  Create a test statistic from the given function and the data. ;  ;  RooAbsTestStatistic (const RooAbsTestStatistic &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsTestStatistic () override;  Destructor. ;  ; void constOptimizeTestStatistic (ConstOpCode opcode, bool doAlsoTrackingOpt=true) override;  Forward constant term optimization management ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:5489,test,test,5489,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['test'],['test']
Testability,"ar * ; cb1, . const char * ; ce1, . const char * ; cb2, . const char * ; ce2 . ). protected . Set the boundary conditions at double/triple knots. ; Definition at line 1478 of file TSpline.cxx. ◆ SetPoint(). void TSpline5::SetPoint ; (; Int_t ; i, . Double_t ; x, . Double_t ; y . ). virtual . Set point number i. ; Definition at line 1806 of file TSpline.cxx. ◆ SetPointCoeff(). void TSpline5::SetPointCoeff ; (; Int_t ; i, . Double_t ; b, . Double_t ; c, . Double_t ; d, . Double_t ; e, . Double_t ; f . ). virtual . Set point coefficient number i. ; Definition at line 1817 of file TSpline.cxx. ◆ Streamer(). void TSpline5::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TSpline5. ; Reimplemented from TSpline.; Definition at line 2488 of file TSpline.cxx. ◆ StreamerNVirtual(). void TSpline5::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 296 of file TSpline.h. ◆ Test(). void TSpline5::Test ; (; ). static . Test method for TSpline5. ; n number of data points.; m 2*m-1 is order of spline.; m = 3 always for quintic spline.; nn,nm1,mm,; mm1,i,k,; j,jj temporary integer variables.; z,p temporary double precision variables.; x[n] the sequence of knots.; y[n] the prescribed function values at the knots.; a[200][6] two dimensional array whose columns are; the computed spline coefficients; diff[5] maximum values of differences of values and; derivatives to right and left of knots.; com[5] maximum values of coefficients.; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; pointsOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t pointsDefinition TGWin32VirtualXProxy.cxx:148; mTMarker mDefinition textangle.C:8; test of TSpline5 with non equid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline5.html:31368,Test,Test,31368,doc/master/classTSpline5.html,https://root.cern,https://root.cern/doc/master/classTSpline5.html,1,['Test'],['Test']
Testability,"ar * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 34 of file RooConstraintSum.h. ◆ compileForNormSet(). std::unique_ptr< RooAbsArg > RooConstraintSum::compileForNormSet ; (; RooArgSet const & ; normSet, . RooFit::Detail::CompileContext & ; ctx . ); const. overridevirtual . Reimplemented from RooAbsArg.; Definition at line 98 of file RooConstraintSum.cxx. ◆ DeclFileName(). static const char * RooConstraintSum::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 57 of file RooConstraintSum.h. ◆ doEval(). void RooConstraintSum::doEval ; (; RooFit::EvalContext & ; ctx); const. overridevirtual . Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented from RooAbsReal.; Definition at line 87 of file RooConstraintSum.cxx. ◆ evaluate(). double RooConstraintSum::evaluate ; (; ); const. overrideprotectedvirtual . Return sum of -log of constraint p.d.f.s. ; Implements RooAbsReal.; Definition at line 71 of file RooConstraintSum.cxx. ◆ IsA(). TClass * RooConstraintSum::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsReal.; Definition at line 57 of file RooConstraintSum.h. ◆ list(). const RooArgList & RooConstraintSum::list ; (; ). inline . Definition at line 36 of file RooConstraintSum.h. ◆ setData() [1/2]. bool RooConstraintSum::setData ; (; RooAbsData & ; data, . bool ; cloneData = true . ). inlineoverridevirtual . Replace the variables in this RooConstraintSum with the global observables in the dataset if they match by name. ; This function will do nothing if this RooConstraintSum is configured to not use the global observables stored in datasets. ; Reimplemented from RooAbsReal.; Definition at line 40 of file RooConstraintSum.h. ◆ setData() [2/2]. bool RooConstraintSum::setData ; (; RooAbsData const & ; data, . bool ; cloneData = true . ). Replace t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:62924,log,log,62924,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['log'],['log']
Testability,"ar ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h offsetDefinition TGWin32VirtualXProxy.cxx:245; namechar name[80]Definition TGX11.cxx:110; ROOT::Experimental::Detail::RLogBuilderBuilds a diagnostic entry, emitted by the static RLogManager upon destruction of this builder,...Definition RLogger.hxx:213; ROOT::Experimental::Detail::RLogBuilder::RLogBuilderRLogBuilder(ELogLevel level, RLogChannel &channel)Definition RLogger.hxx:218; ROOT::Experimental::Detail::RLogBuilder::RLogBuilderRLogBuilder(ELogLevel level, RLogChannel &channel, const std::string &filename, int line, const std::string &funcname)Definition RLogger.hxx:219; ROOT::Experimental::Detail::RLogBuilder::fEntryRLogEntry fEntryThe log entry to be built.Definition RLogger.hxx:215; ROOT::Experimental::Detail::RLogBuilder::~RLogBuilder~RLogBuilder()Emit the log entry through the static log manager.Definition RLogger.hxx:226; ROOT::Experimental::RLogChannelA log configuration for a channel, e.g.Definition RLogger.hxx:101; ROOT::Experimental::RLogChannel::RLogChannelRLogChannel(const std::string &name)Construct a log channel given its name, which is part of the diagnostics.Definition RLogger.hxx:116; ROOT::Experimental::RLogChannel::fVerbosityELogLevel fVerbosityVerbosity of this channel. By default, use the global verbosity.Definition RLogger.hxx:106; ROOT::Experimental::RLogChannel::RLogChannelRLogChannel()=defaultConstruct an anonymous channel.; ROOT::Experimental::RLogChannel::GetEffectiveVerbosityELogLevel GetEffectiveVerbosity(const RLogManager &mgr) constDefinition RLogger.hxx:313; ROOT::Experimental::RLogChannel::fNamestd::string fNameName as shown in diagnostics.Definition RLogger.hxx:103; ROOT::Experimental::RLogChannel::GetVerbosityELogLevel GetVerbosity() constDefinition RLogger.hxx:123; ROOT::Experimental::RLogChannel::SetVerbosityELogLevel SetVerbosity(ELogLevel verbosity)Definition RLogger.hxx:118; ROOT::Experimental::RLog",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RLogger_8hxx_source.html:16336,log,log,16336,doc/master/RLogger_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RLogger_8hxx_source.html,1,['log'],['log']
Testability,"ar Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t typeDefinition TGWin32VirtualXProxy.cxx:249; TObject.h; TMVA::MsgLoggerostringstream derivative to redirect and format outputDefinition MsgLogger.h:57; TMVA::MsgLogger::SetMinTypevoid SetMinType(EMsgType minType)Definition MsgLogger.h:70; TMVA::MsgLogger::fgMaxSourceSizestatic const UInt_t fgMaxSourceSizemaximum length of source nameDefinition MsgLogger.h:113; TMVA::MsgLogger::fgPrefixstatic const std::string fgPrefixthe prefix of the source nameDefinition MsgLogger.h:110; TMVA::MsgLogger::~MsgLogger~MsgLogger()destructorDefinition MsgLogger.cxx:121; TMVA::MsgLogger::SetSourcevoid SetSource(const std::string &source)Definition MsgLogger.h:68; TMVA::MsgLogger::operator=MsgLogger & operator=(const MsgLogger &parent)assignment operatorDefinition MsgLogger.cxx:128; TMVA::MsgLogger::GetPrintedSourcestd::string GetPrintedSource() constthe full logger prefixDefinition MsgLogger.cxx:173; TMVA::MsgLogger::fStrSourcestd::string fStrSourcealternative string sourceDefinition MsgLogger.h:109; TMVA::MsgLogger::fgOutputSupressedstatic std::atomic< Bool_t > fgOutputSupresseddisable the output globally (used by generic booster)Definition MsgLogger.h:114; TMVA::MsgLogger::fgColorMapstatic std::atomic< const std::map< EMsgType, std::string > * > fgColorMapmatches output types with terminal colorsDefinition MsgLogger.h:118; TMVA::MsgLogger::operator<<MsgLogger & operator<<(MsgLogger &(*_f)(MsgLogger &))Definition MsgLogger.h:124; TMVA::MsgLogger::GetMaxSourceSizestatic UInt_t GetMaxSourceSize()returns the maximum source sizeDefinition MsgLogger.cxx:165; TMVA::MsgLogger::InhibitOutputstatic void InhibitOutput()Definition MsgLogger.cxx:67; TMVA::MsgLogger::fObjSourceconst TObject * fObjSourcethe source TObject (used for name)Definition MsgLogger.h:108; TMVA::MsgLogger::fgSuffixstatic const std::string fgSuffixsuffi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MsgLogger_8h_source.html:7100,log,logger,7100,doc/master/MsgLogger_8h_source.html,https://root.cern,https://root.cern/doc/master/MsgLogger_8h_source.html,1,['log'],['logger']
Testability,"ar in the case of a general linear function; 197 * built with TFormula using ++; as EvalPar is not vectorized, in order to generalize DoParameterDerivative with; 198 * a general type T, we use this auxiliar class to branch the code in compile time with the double; 199 * specialization (that can call EvalPar) and the general implementation (that throws an error in the case of; 200 * general linear function).; 201 */; 202 template <class T>; 203 struct GeneralLinearFunctionDerivation {; 204 static T DoParameterDerivative(const WrappedMultiTF1Templ<T> *, const T *, unsigned int); 205 {; 206 Error(""DoParameterDerivative"", ""The vectorized implementation of DoParameterDerivative does not support""; 207 ""general linear functions built in TFormula with ++"");; 208 ; 209 return TMath::SignalingNaN();; 210 }; 211 };; 212 ; 213 template <>; 214 struct GeneralLinearFunctionDerivation<double> {; 215 static double; 216 DoParameterDerivative(const WrappedMultiTF1Templ<double> *wrappedFunc, const double *x, unsigned int ipar); 217 {; 218 const TFormula *df = dynamic_cast<const TFormula *>(wrappedFunc->GetFunction()->GetLinearPart(ipar));; 219 assert(df != nullptr);; 220 return (const_cast<TFormula *>(df))->EvalPar(x); // derivatives should not depend on parameters since; 221 // function is linear; 222 }; 223 };; 224 ; 225 // implementations for WrappedMultiTF1Templ<T>; 226 template<class T>; 227 WrappedMultiTF1Templ<T>::WrappedMultiTF1Templ(TF1 &f, unsigned int dim) :; 228 fLinear(false),; 229 fPolynomial(false),; 230 fOwnFunc(false),; 231 fFunc(&f),; 232 fDim(dim); 233 //fParams(f.GetParameters(),f.GetParameters()+f.GetNpar()); 234 {; 235 // constructor of WrappedMultiTF1Templ<T>; 236 // pass a dimension if dimension specified in TF1 does not correspond to real dimension; 237 // for example in case of multi-dimensional TF1 objects defined as TF1 (i.e. for functions with dims > 3 ); 238 if (fDim == 0) fDim = fFunc->GetNdim();; 239 ; 240 // check that in case function is linear the lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/WrappedMultiTF1_8h_source.html:7786,assert,assert,7786,doc/master/WrappedMultiTF1_8h_source.html,https://root.cern,https://root.cern/doc/master/WrappedMultiTF1_8h_source.html,1,['assert'],['assert']
Testability,"ar to the ones used in the raster graphics community. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Double_t &advalue) const;  Same function as above but returning also the test statistic value. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Option_t *option="""") const;  Statistical test of compatibility in shape between this histogram and h2, using the Anderson-Darling 2 sample test. ;  ; void Browse (TBrowser *b) override;  Browse the Histogram object. ;  ; virtual Bool_t CanExtendAllAxes () const;  Returns true if all axes are extendable. ;  ; virtual Double_t Chi2Test (const TH1 *h2, Option_t *option=""UU"", Double_t *res=nullptr) const;  \( \chi^{2} \) test for comparing weighted and unweighted histograms. ;  ; virtual Double_t Chi2TestX (const TH1 *h2, Double_t &chi2, Int_t &ndf, Int_t &igood, Option_t *option=""UU"", Double_t *res=nullptr) const;  The computation routine of the Chisquare test. ;  ; virtual Double_t Chisquare (TF1 *f1, Option_t *option="""") const;  Compute and return the chisquare of this histogram with respect to a function The chisquare is computed by weighting each histogram point by the bin error By default the full range of the histogram is used. ;  ; virtual void ClearUnderflowAndOverflow ();  Remove all the content from the underflow and overflow bins, without changing the number of entries After calling this method, every undeflow and overflow bins will have content 0.0 The Sumw2 is also cleared, since there is no more content in the bins. ;  ; TObject * Clone (const char *newname="""") const override;  Make a complete copy of the underlying object. ;  ; virtual Double_t ComputeIntegral (Bool_t onlyPositive=false);  Compute integral (normalized cumulative sum of bins) w/o under/overflows The result is stored in fIntegral and used by the GetRandom functions. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:21139,test,test,21139,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['test'],['test']
Testability,"ar to the ones used in the raster graphics community. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Double_t &advalue) const;  Same function as above but returning also the test statistic value. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Option_t *option="""") const;  Statistical test of compatibility in shape between this histogram and h2, using the Anderson-Darling 2 sample test. ;  ; void Browse (TBrowser *b) override;  Browse the Histogram object. ;  ; virtual Bool_t CanExtendAllAxes () const;  Returns true if all axes are extendable. ;  ; virtual Double_t Chi2Test (const TH1 *h2, Option_t *option=""UU"", Double_t *res=nullptr) const;  \( \chi^{2} \) test for comparing weighted and unweighted histograms. ;  ; virtual Double_t Chi2TestX (const TH1 *h2, Double_t &chi2, Int_t &ndf, Int_t &igood, Option_t *option=""UU"", Double_t *res=nullptr) const;  The computation routine of the Chisquare test. ;  ; virtual Double_t Chisquare (TF1 *f1, Option_t *option="""") const;  Compute and return the chisquare of this histogram with respect to a function The chisquare is computed by weighting each histogram point by the bin error By default the full range of the histogram is used. ;  ; virtual void ClearUnderflowAndOverflow ();  Remove all the content from the underflow and overflow bins, without changing the number of entries After calling this method, every undeflow and overflow bins will have content 0.0 The Sumw2 is also cleared, since there is no more content in the bins. ;  ; virtual void DirectoryAutoAdd (TDirectory *);  Perform the automatic addition of the histogram to the given directory. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a line. ;  ; virtual Bool_t Divide (const TH1 *h1);  Divide this histogram by h1. ;  ; virtual Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:20530,test,test,20530,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,2,['test'],['test']
Testability,"ar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooPoisson(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _mean, Bool_t noRounding = kFALSE); Constructor. RooPoisson(const RooPoisson& other, const char* name = 0); Copy constructor. Double_t evaluate() const; Implementation in terms of the TMath Poisson function. Double_t getLogVal(const RooArgSet* set = 0) const; calculate and return the negative log-likelihood of the Poisson. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Advertise internal generator in x. void generateEvent(Int_t code); Implement internal generator using TRandom::Poisson. RooPoisson(); { _noRounding = kFALSE ; TRACE_CREATE }. TObject* clone(const char* newname) const; { return new RooPoisson(*this,newname); }. virtual ~RooPoisson(); { TRACE_DESTROY }. void setNoRounding(bool flag = kTRUE); {_noRounding = flag;}. void protectNegativeMean(bool flag = kTRUE); {_protectNegative = flag;}. Double_t evaluate() const. » Last changed: Tue Mar 10 17:18:26 2015 » Last generated: 2015-03-10 17:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooPoisson.html:43529,log,log-likelihood,43529,root/html534/RooPoisson.html,https://root.cern,https://root.cern/root/html534/RooPoisson.html,1,['log'],['log-likelihood']
Testability,"ar(); voidSetModelRules(); voidSetMsgType(TMVA::EMsgType t); voidSetRuleMinDist(Double_t d); voidSetTrainingEvents(const vector<const TMVA::Event*>& el); voidSetVisHistsUseImp(Bool_t f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidUseCoefficientsVisHists(); voidUseImportanceVisHists(). private:. voidCopy(const TMVA::RuleFit& other); TMVA::MsgLogger&Log() const; TMVA::RuleFitRuleFit(const TMVA::RuleFit& other). Data Members; private:. vector<Double_t>fEventWeightsoriginal weights of the events - follows fTrainingEvents; vector<const TMVA::DecisionTree*>fForestthe input forest of decision trees; TMVA::MsgLogger*fLoggermessage logger; const TMVA::MethodBase*fMethodBasepointer the method base which initialized this RuleFit instance; const TMVA::MethodRuleFit*fMethodRuleFitpointer the method which initialized this RuleFit instance; Double_tfNEveEffTrainreweighted number of events = sum(wi); UInt_tfNTreeSamplenumber of events in sub sample = frac*neve; TMVA::RuleEnsemblefRuleEnsemblethe ensemble of rules; TMVA::RuleFitParamsfRuleFitParamsfit rule parameters; vector<const TMVA::Event*>fTrainingEventsall training events; vector<const TMVA::Event*>fTrainingEventsRndmidem, but randomly shuffled; Bool_tfVisHistsUseImpif true, use importance as weight; else coef in vis hists; static const Int_trandSEEDset to 1 for debugging purposes or to zero for random seeds. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RuleFit( const MethodBase *rfbase ); constructor. RuleFit(); default constructor. ~RuleFit(); destructor. void InitNEveEff(); init effective number of events (using event weights). void InitPtrs(const TMVA::MethodBase* rfbase); initialize pointers. void Initialize(const TMVA::MethodBase* rfbase); initialize the parameters of the RuleFit method and make rules. void SetMethodBase(const TMVA::MethodBase* rfbase); set MethodBase. void Copy(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__RuleFit.html:2976,log,logger,2976,root/html534/TMVA__RuleFit.html,https://root.cern,https://root.cern/root/html534/TMVA__RuleFit.html,1,['log'],['logger']
Testability,"ar();; 717 fDataErrorPtr = nullptr;; 718 }; 719 else; 720 {; 721 assert(false);; 722 }; 723 }; 724 ; 725 void BinData::InitBinEdge(); 726 {; 727 fBinEdge.resize( fDim );; 728 ; 729 for( unsigned int i=0; i<fDim; i++ ); 730 {; 731 fBinEdge[i].reserve(fMaxPoints + FitData::VectorPadding(fMaxPoints));; 732 }; 733 ; 734 if ( fpTmpBinEdgeVector ); 735 {; 736 delete[] fpTmpBinEdgeVector;; 737 fpTmpBinEdgeVector = nullptr;; 738 }; 739 ; 740 fpTmpBinEdgeVector = new double[ fDim ];; 741 }; 742 ; 743 void BinData::UnWrap( ); 744 {; 745 assert( fWrapped );; 746 assert( kValueError == fErrorType || kCoordError == fErrorType ||; 747 kAsymError == fErrorType || kNoError == fErrorType );; 748 assert( fDataError.empty() || &fDataError.front() == fDataErrorPtr );; 749 assert( fDataErrorHigh.empty() || &fDataErrorHigh.front() == fDataErrorHighPtr );; 750 assert( fDataErrorLow.empty() || &fDataErrorLow.front() == fDataErrorLowPtr );; 751 assert( fDataErrorLow.empty() == fDataErrorHigh.empty() );; 752 ; 753 assert( fData.empty() );; 754 assert( fDataPtr );; 755 ; 756 unsigned vectorPadding = FitData::VectorPadding(fNPoints);; 757 fData.resize(fNPoints + vectorPadding);; 758 std::copy( fDataPtr, fDataPtr + fNPoints, fData.begin() );; 759 fDataPtr = fData.empty() ? nullptr : &fData.front();; 760 ; 761 for ( unsigned int i=0; i < fDim; i++ ); 762 {; 763 assert( fCoordErrorsPtr[i] );; 764 assert( fCoordErrors.empty() || &fCoordErrors[i].front() == fCoordErrorsPtr[i] );; 765 }; 766 ; 767 if( kValueError == fErrorType || kCoordError == fErrorType ); 768 {; 769 assert( fDataError.empty() );; 770 assert( fDataErrorPtr );; 771 ; 772 fDataError.resize(fNPoints + vectorPadding);; 773 std::copy(fDataErrorPtr, fDataErrorPtr + fNPoints + vectorPadding, fDataError.begin());; 774 fDataErrorPtr = fDataError.empty() ? nullptr : &fDataError.front();; 775 }; 776 ; 777 if ( kValueError == fErrorType ); 778 {; 779 for ( unsigned int i=0; i < fNPoints; i++ ); 780 {; 781 fDataError[i] = 1.0 / fDataError[i];;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:22981,assert,assert,22981,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,1,['assert'],['assert']
Testability,"ar* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooLinkedList&operator=(const RooLinkedList& other); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(const char* opt) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Bool_tRemove(TObject* arg); Bool_tReplace(const TObject* oldArg, const TObject* newArg); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidsetHashTableSize(Int_t size); voidSetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); voidSort(Bool_t ascend = kTRUE); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voiduseNptr(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooLinkedList.html:5183,Test,TestBit,5183,root/html534/RooLinkedList.html,https://root.cern,https://root.cern/root/html534/RooLinkedList.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRootSnifferStoreXml&operator=(const TRootSnifferStoreXml&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetField(Int_t lvl, const char* field, const char* value, Bool_t); static voidTObject::SetObjectStat(Bool_t stat); voidTRootSnifferStore::SetResult(void* _res, TClass* _rescl, TDataMember* _resmemb, Int_t _res_chld, Int_t restr = 0); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSnifferStoreXml.html:5144,Test,TestBit,5144,root/html534/TRootSnifferStoreXml.html,https://root.cern,https://root.cern/root/html534/TRootSnifferStoreXml.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSQLColumnInfo&operator=(const TSQLColumnInfo&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLColumnInfo.html:6399,Test,TestBit,6399,root/html534/TSQLColumnInfo.html,https://root.cern,https://root.cern/root/html534/TSQLColumnInfo.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; voidPrintVoxelLimits(const Double_t* point) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetInvalid(Bool_t flag = kTRUE); voidSetNeedRebuild(Bool_t flag = kTRUE); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidSortCrossedVoxels(const Double_t* point, const Double_t* dir, TGeoStateInfo& td); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidVoxelize(Option_t* option = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoVoxelFinder.html:5201,Test,TestBit,5201,root/html534/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html534/TGeoVoxelFinder.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetCall(TObject* obj, const char* method, const char* args = """", Int_t selfobjposition = 0); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetSelf(Bool_t self); virtual voidSetTitle(const char* title); virtual voidSetToggle(Bool_t toggle = kTRUE); virtual voidSetType(Int_t type); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TClassMenuItem.html:5597,Test,TestBit,5597,root/html534/TClassMenuItem.html,https://root.cern,https://root.cern/root/html534/TClassMenuItem.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TParameter<int>&operator=(const TParameter<int>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t*) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMergeMode(char mergemode = '+'); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVal(const int& val); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TParameter<int>(); TParameter<int>(const TParameter<int>&); TParameter<int>(const char* name, const int& val); TParameter<int>(const char* name, const int& val, char mergemode); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParameter_int_.html:4406,Test,TestBit,4406,root/html602/TParameter_int_.html,https://root.cern,https://root.cern/root/html602/TParameter_int_.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. ~TProofLite(); Destructor. Int_t GetNumberOfWorkers(const char* url = 0); Static method to determine the number of workers giving priority to users request.; Otherwise use the system information, if available, or just start; the minimal number, i.e. 2 . Int_t SetupWorkers(Int_t opt = 0, TList* wrks = 0); Start up PROOF workers. void NotifyStartUp(const char* action, Int_t done, Int_t tot); Notify setting-up operation message. Int_t SetProofServEnv(const char* ord); Create environment files for worker 'ord'. void ResolveKeywords(TString& s, const char* logfile); Resolve some keywords in 's'; <logfileroot>, <user>, <rootsys>. Int_t CreateSandbox(); Create the sandbox for this session. void Print(Option_t* option = """") const; Print status of PROOF-Lite cluster. TProofQueryResult * MakeQueryResult(Long64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); Create a TProofQueryResult instance for this query. void SetQueryRunning(TProofQueryResult* pq); Set query in running state. Long64_t DrawSelect(TDSet* dset, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Execute the specified drawing action on a data set (TDSet).; Event- or Entry-lists should be set in the data set object using; TDSet::SetEntryList.; Returns -1 in case of error or number of selected events otherwise. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-list",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofLite.html:26679,log,logfile,26679,root/html528/TProofLite.html,https://root.cern,https://root.cern/root/html528/TProofLite.html,6,['log'],"['logfile', 'logfileroot']"
Testability,"ar* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoBBox::SetBoxDimensions(Double_t dx, Double_t dy, Double_t dz, Double_t* origin = 0); voidTGeoBBox::SetBoxPoints(Double_t* points) const; virtual voidSetDimensions(Double_t* param); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoShape::SetId(Int_t id); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPoints(Double_t* points) const; virtual voidSetPoints(Float_t* points) const; voidTGeoShape::SetRuntime(Bool_t flag = kTRUE); virtual voidTGeoBBox::SetSegsAndPols(TBuffer3D& buffer) const; voidTGeoShape::SetShapeBit(UInt_t f); voidTGeoShape::SetShapeBit(UInt_t f, Bool_t set); virtual voidTNamed::SetTitle(const char* title = """")MENU ; static voidTGeoShape::SetTransform(TGeoMatrix* matrix); virtual voidTObject::SetUniqueID(UInt_t uid); Int_tTGeoShape::ShapeDistancetoPrimitive(Int_t numpoints, Int_t px, Int_t py) const; virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidSizeof3D() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTGeoShape::TestShapeBit(UInt_t f) const; Int_tTGeoShape::TestShapeBits(UInt_t f) const; static Double_tTGeoShape::Tolerance(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPara.html:9485,Test,TestBit,9485,root/html528/TGeoPara.html,https://root.cern,https://root.cern/root/html528/TGeoPara.html,12,['Test'],"['TestBit', 'TestBits', 'TestShapeBit', 'TestShapeBits']"
Testability,"ar* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetConditionalObservables(const RooArgSet& set); virtual voidSetConstraintParameters(const RooArgSet& set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetGlobalObservables(const RooArgSet& set); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetNuisanceParameters(const RooArgSet& set); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetObservables(const RooArgSet& set); virtual voidSetParameters(const RooArgSet& set); virtual voidSetParametersOfInterest(const RooArgSet& set); virtual voidSetPdf(const RooAbsPdf& pdf); virtual voidSetPdf(const char* name); virtual voidSetPriorPdf(const RooAbsPdf& pdf); virtual voidSetPriorPdf(const char* name); virtual voidSetProtoData(RooAbsData& data); virtual voidSetProtoData(const char* name); virtual voidSetSnapshot(const RooArgSet& set); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetWorkspace(RooWorkspace& ws); virtual voidSetWS(RooWorkspace& ws); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__ModelConfig.html:6085,Test,TestBit,6085,root/html528/RooStats__ModelConfig.html,https://root.cern,https://root.cern/root/html528/RooStats__ModelConfig.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* line, Bool_t sync = kFALSE, Int_t* error = 0); Bool_tTApplication::QuitOpt() const; virtual voidTApplication::Raise(); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTApplication::RemoveIdleTimer(); voidTObject::ResetBit(UInt_t f); Bool_tTApplication::ReturnFromRun() const; virtual voidTApplication::ReturnPressed(char* text)SIGNAL ; virtual voidTApplication::Run(Bool_t retrn = kFALSE); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCustomized(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTApplication::SetEchoMode(Bool_t mode); virtual voidTApplication::SetIdleTimer(UInt_t idleTimeInSec, const char* command); static voidTObject::SetObjectStat(Bool_t stat); voidTApplication::SetReturnFromRun(Bool_t ret); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTApplication::Show(); virtual voidShowMembers(TMemberInspector&); virtual voidTApplication::StartIdleing(); virtual voidTApplication::StopIdleing(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual Int_tTApplication::TabCompletionHook(char* buf, int* pLoc, ostream& out); virtual voidTApplication::Terminate(Int_t status = 0)SIGNAL ; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; const char*TApplication::WorkingDirectory() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQApplication.html:9880,Test,TestBit,9880,root/html534/TQApplication.html,https://root.cern,https://root.cern/root/html534/TQApplication.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* method) const; RooMoment*RooAbsReal::mean(RooRealVar& obs); RooMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); Int_tRooAbsPdf::minDimNormValueCaching() const; virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual voidnormLeafServerList(RooArgSet& list) const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooResolutionModel.html:22561,test,testArg,22561,root/html528/RooResolutionModel.html,https://root.cern,https://root.cern/root/html528/RooResolutionModel.html,1,['test'],['testArg']
Testability,"ar* method) const; RooMoment*RooAbsReal::mean(RooRealVar& obs); RooMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); Int_tRooAbsPdf::minDimNormValueCaching() const; virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual voidnormLeafServerList(RooArgSet& list) const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooResolutionModel.html:22897,test,testArg,22897,root/html530/RooResolutionModel.html,https://root.cern,https://root.cern/root/html530/RooResolutionModel.html,1,['test'],['testArg']
Testability,"ar* method) const; static char*Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TClassTable&operator=(const TClassTable&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; static voidPrintTable(); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); static voidRemove(const char* cname); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TClassTable(const TClassTable&); static voidTerminate(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassTable.html:5313,Test,TestBit,5313,root/html602/TClassTable.html,https://root.cern,https://root.cern/root/html602/TClassTable.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::UniformProposal&operator=(const RooStats::UniformProposal&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPropose(RooArgSet& xPrime, RooArgSet& x); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; RooStats::UniformProposalUniformProposal(); RooStats::UniformProposalUniformProposal(const RooStats::UniformProposal&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__UniformProposal.html:4946,Test,TestBit,4946,root/html528/RooStats__UniformProposal.html,https://root.cern,https://root.cern/root/html528/RooStats__UniformProposal.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpResidual&operator=(const TQpResidual& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidProject_r3(Double_t rmin, Double_t rmax); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSet_r3_xz_alpha(TQpVar* vars, Double_t alpha); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); Bool_tValidNonZeroPattern(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQpResidual.html:5080,Test,TestBit,5080,root/html530/TQpResidual.html,https://root.cern,https://root.cern/root/html530/TQpResidual.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); memstat::TMemStatMng&operator=(const memstat::TMemStatMng&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBufferSize(Int_t buffersize); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMaxCalls(Int_t maxcalls); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetUseGNUBuiltinBacktrace(Bool_t newVal); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; memstat::TMemStatMngTMemStatMng(const memstat::TMemStatMng&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/memstat__TMemStatMng.html:4490,Test,TestBit,4490,root/html534/memstat__TMemStatMng.html,https://root.cern,https://root.cern/root/html534/memstat__TMemStatMng.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRemoveRootProxy(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDragPixmap(Pixmap_t pic, Pixmap_t mask, Int_t hot_x, Int_t hot_y); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMainFrame(TGFrame* main); static voidTObject::SetObjectStat(Bool_t stat); Bool_tSetRootProxy(); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); Bool_tStartDrag(TGFrame* src, Int_t x_root, Int_t y_root, Window_t grabWin = kNone); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGDNDManager.html:5505,Test,TestBit,5505,root/html534/TGDNDManager.html,https://root.cern,https://root.cern/root/html534/TGDNDManager.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidRegisterMatrix(TGeoMatrix* matrix); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); TGeoVolume*Volume(const char* name, const char* shape, Int_t nmed, Float_t* upar, Int_t npar = 0); TGeoVolume*Volume(const char* name, const char* shape, Int_t nmed, Double_t* upar, Int_t npar = 0); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoBuilder.html:8675,Test,TestBit,8675,root/html534/TGeoBuilder.html,https://root.cern,https://root.cern/root/html534/TGeoBuilder.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGButton::SetOn(Bool_t on = kTRUE, Bool_t emit = kFALSE); virtual voidSetPicture(const TGPicture* new_pic); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTGButton::SetState(EButtonState state, Bool_t emit = kFALSE); virtual voidTGButton::SetStyle(UInt_t newstyle); virtual voidTGButton::SetStyle(const char* style); virtual voidTGButton::SetToolTipText(const char* text, Long_t delayms = 400)MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGButton::SetUserData(void* userData); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGPictureButton(const TGWindow* p, const TGPicture* pic, Int_t id = -1, GContext_t norm = GetDefaultGC()(), UInt_t option = kRaisedFrame | kDoubleBorder); TGPictureButton(const TGWindow* p = 0, const char* pic = 0, Int_t id = -1, GContext_t norm = GetDefaultGC()(), UInt_t option = kRaisedFrame | kDoubleBorder); TGPictureButton(const TGWindow* p, const TGPicture* pic, const char* cmd, Int_t id = -1, GContext_t norm = GetDefaultGC()(), UInt_t option = kRaisedFrame | kDoubleBorder); virtual voidTGButton::Toggle(Bool_t emit = kFALSE); virtual voidTGButton::Toggled(Bool_t on)SIGNAL ; virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); Bool_tTGWidget::WantFocus() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; Int_tTGWidget::WidgetId() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGPictureButton.html:16973,Test,TestBit,16973,root/html602/TGPictureButton.html,https://root.cern,https://root.cern/root/html602/TGPictureButton.html,2,['Test'],['TestBit']
Testability,"ar* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual Bool_tSetProcess(const char* flagName, Int_t flagValue); virtual voidSetRandom(TRandom* random); virtual voidSetRootGeometry(); virtual voidSetSkinSurface(const char* name, const char* volName, const char* opSurfaceName); virtual voidSetStack(TVirtualMCStack* stack); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetUserDecay(Int_t pdg); virtual voidSetUserParameters(Bool_t isUserParameters); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual Int_tStepProcesses(TArrayI& proc) const; virtual voidStopEvent(); virtual voidStopRun(); virtual voidStopTrack(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Double_tTrackCharge() const; virtual Double_tTrackLength() const; virtual Double_tTrackMass() const; virtual voidTrackMomentum(TLorentzVector& momentum) const; virtual voidTrackMomentum(Double_t& px, Double_t& py, Double_t& pz, Double_t& etot) const; virtual Int_tTrackPid() const; virtual voidTrackPosition(TLorentzVector& position) const; virtual voidTrackPosition(Double_t& x, Double_t& y, Double_t& z) const; virtual Double_tTrackStep() const; virtual Double_tTrackTime() const; virtual voidTObject::UseCurrentStyle(); virtual Int_tVolDaughterCopyNo(const char* volName, Int_t i) const; virtual const char*VolDaughterName(const char* volName, Int_t i) const; virtual Int_tVolId(const char* volName) const; virtual Int_tVolId2Mate(Int_t id) const; virtual const char*VolName(Int_t id) const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualMC.html:13004,Test,TestBit,13004,root/html534/TVirtualMC.html,https://root.cern,https://root.cern/root/html534/TVirtualMC.html,1,['Test'],['TestBit']
Testability,"ar* name, Bool_t value) const; RooAbsCollection*RooAbsCollection::selectByName(const char* nameList, Bool_t verbose = kFALSE) const; RooAbsCollection*RooAbsCollection::selectCommon(const RooAbsCollection& refColl) const; voidRooAbsCollection::setAttribAll(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); Bool_tRooArgSet::setCatIndex(const char* name, Int_t newVal = 0, Bool_t verbose = kFALSE); Bool_tRooArgSet::setCatLabel(const char* name, const char* newVal = """", Bool_t verbose = kFALSE); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsCollection::setHashTableSize(Int_t i); voidRooAbsCollection::setName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); Bool_tRooArgSet::setRealValue(const char* name, Double_t newVal = 0, Bool_t verbose = kFALSE); Bool_tRooArgSet::setStringValue(const char* name, const char* newVal = """", Bool_t verbose = kFALSE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); RooAbsCollection*RooAbsCollection::snapshot(Bool_t deepCopy = kTRUE) const; Bool_tRooAbsCollection::snapshot(RooAbsCollection& output, Bool_t deepCopy = kTRUE) const; voidRooAbsCollection::sort(Bool_t ascend = kTRUE); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidRooArgSet::writeToFile(const char* fileName) const; virtual voidRooArgSet::writeToStream(ostream& os, Bool_t compact, const char* section = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSetProxy.html:10450,Test,TestBit,10450,root/html528/RooSetProxy.html,https://root.cern,https://root.cern/root/html528/RooSetProxy.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* name, Int_t coldef = 1, Int_t stydef = 1001); virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidSetAddress(void* add); virtual voidSetAutoDelete(Bool_t autodel = kTRUE); virtual voidSetBasketSize(Int_t buffsize); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBufferAddress(TBuffer* entryBuffer); virtual voidSetCompressionLevel(Int_t level = 1); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEntries(Long64_t entries); virtual voidSetEntryOffsetLen(Int_t len, Bool_t updateSubBranches = kFALSE); virtual voidSetFile(TFile* file = 0); virtual voidSetFile(const char* filename); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidSetFirstEntry(Long64_t entry); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetObject(void* objadd); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOffset(Int_t offset = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(TTree* tree); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUpdateAddress(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranch.html:8153,Test,TestBit,8153,root/html526/TBranch.html,https://root.cern,https://root.cern/root/html526/TBranch.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* newname = 0); RooAbsDataStore(const char* name, const char* title, const RooArgSet& vars); RooAbsDataStore(const RooAbsDataStore& other, const RooArgSet& vars, const char* newname = 0); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidsetArgStatus(const RooArgSet& set, Bool_t active); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidsetDirtyProp(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidsetExternalWeightArray(Double_t*, Double_t*, Double_t*, Double_t*); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual Double_tsumEntries() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual const TTree*tree() const; virtual voidTObject::UseCurrentStyle(); virtual Bool_tvalid() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Double_tweight() const; virtual Double_tweight(Int_t index) const; virtual Double_tweightError(RooAbsData::ErrorType etype = RooAbsData::Poisson) const; virtual voidweightError(Double_t& lo, Double_t& hi, RooAbsData::ErrorType etype = RooAbsData::Poisson) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsDataStore.html:7618,Test,TestBit,7618,root/html602/RooAbsDataStore.html,https://root.cern,https://root.cern/root/html602/RooAbsDataStore.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ar* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; RooAbsReal&nll(); virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html:18563,test,testArg,18563,root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__RooBarlowBeestonLL.html,1,['test'],['testArg']
Testability,"ar* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; RooAbsReal&nll(); virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::HistFactory::RooBarlowBeestonLL&operator=(const RooStats::HistFactory::RooBarlowBeestonLL&); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__RooBarlowBeestonLL.html:18558,test,testArg,18558,root/html602/RooStats__HistFactory__RooBarlowBeestonLL.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__RooBarlowBeestonLL.html,2,['test'],['testArg']
Testability,"ar* outfile, Bool_t verbose = kTRUE); Set the output file; Return 0 on success, -1 on error. void CloseOutFile(); Close output file. Int_t RunCPU(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1, Int_t step = -1); Perform the CPU run; Return 0 on success, -1 on error. Int_t RunCPUx(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1); Perform the CPU run scanning over the number of workers per node; Return 0 on success, -1 on error. void DrawCPU(const char* outfile, const char* opt = ""std:""); Draw the CPU speedup plot.; opt = 'std:' draw standard evt/s plot; 'stdx:' draw standard evt/s plot, 1 worker per node; 'norm:' draw normalized plot; 'normx:' draw normalized plot, 1 worker per node. Int_t RunDataSet(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1, Int_t step = 1); Perform a test using dataset 'dset'; Return 0 on success, -1 on error; Open the file for the results. Int_t RunDataSetx(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1); Perform a test using dataset 'dset' scanning over the number of workers; per node.; Return 0 on success, -1 on error; Open the file for the results. void DrawDataSet(const char* outfile, const char* opt = ""std:"", const char* type = ""mbs""); Draw the CPU speedup plot.; opt = 'std:' Standard scaling plot; 'norm:' Normalized scaling plot; 'stdx:' Standard scaling plot, 1 worker per node; 'normx:' Normalized scaling plot, 1 worker per node; type = 'mbs' MB/s scaling plots (default); 'evts' Event/s scaling plots. Int_t ReleaseCache(const char* dset); Release memory cache for dataset 'dset'; Return 0 on success, -1 on error. Int_t RemoveDataSet(const char* dset); Physically remove the dataset 'dset', i.e. remove the dataset and the files; it describes; Return 0 on success, -1 on error. Int_t MakeDataSet(const char* dset = 0, Long64_t nevt = -1, const char* fnroot = ""event"", Bool_t regenerate = kFALSE); Create the largest dataset for the run.; Defaults for; dataset name, filename root; are;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofBench.html:9164,test,test,9164,root/html532/TProofBench.html,https://root.cern,https://root.cern/root/html532/TProofBench.html,1,['test'],['test']
Testability,"ar* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Bool_toperator!=(Int_t index); Bool_toperator!=(const char* label); Bool_toperator!=(const RooAbsArg& other); TNamed&TNamed::operator=(const TNamed& rhs); Bool_toperator==(Int_t index) const; Bool_toperator==(const char* label) const; virtual Bool_toperator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidRooAbsArg::Print(Option_t* options = 0) const; virtual voidRooAbsArg::printAddress(ostream& os) const; virtual voidRooAbsArg::printArgs(ostream& os) const; virtual voidRooAbsArg::printClassName(ostream& os) const; voidRooAbsArg::printCompactTree(const char* indent = """", const char* fileName = 0, const char* namePat = 0, RooAbsArg* client = 0); voidRooAbsArg::printCompactTree(ostream& os, const char* indent = """", const char* namePat = 0, RooAbsArg* client = 0); virtual voidRooAbsArg::printCompactTreeHook(ostream& os, const char* ind = """"); voidRooAbsArg::printComponentTree(const char* indent = """", const char* namePat = 0, Int_t nLevel = 999); voidRooAbsArg::printDirty(Bool_t depth = kTRUE) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidRooAbsArg::printMetaArgs(ostream&) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsCategory.html:10688,test,testArg,10688,root/html530/RooAbsCategory.html,https://root.cern,https://root.cern/root/html530/RooAbsCategory.html,3,['test'],['testArg']
Testability,"ar* s1, const TString& s2); TString&TString::ReplaceAll(const char* s1, const char* s2); TString&TString::ReplaceAll(const char* s1, Ssiz_t ls1, const char* s2, Ssiz_t ls2); voidTString::Resize(Ssiz_t n); static Ssiz_tTString::ResizeIncrement(Ssiz_t ri = 16); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTString::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TSubStringTString::Strip(TString::EStripType s = kTrailing, char c = ' ') const; TSubStringTString::SubString(const char* pat, Ssiz_t start = 0, TString::ECaseCompare cmp = kExact) const; TObjArray*TString::Tokenize(const TString& delim) const; Bool_tTString::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); virtual const char*what() const; static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. enum TString::[unnamed] { kAlignment; };; enum TString::EStripType { kLeading; kTrailing; kBoth; };; enum TString::ECaseCompare { kExact; kIgnoreCase; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveException(const std::string& s); Constructor. TEveException(); {}. TEveException(const TString& s); {}. TEveException(const char* s); {}. TEveException(const std::string& s). virtual ~TEveException(); {}. const char* what() const; { return Data(); }. TEvePadHolder& operator=(const TEveException& ). » Last changed: root/eve:$Id: TEveUtil.h 36373 2010-10-19 17:43:35Z matevz $ » Last generated: 2011-07-04 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveException.html:7270,Assert,AssertElement,7270,root/html530/TEveException.html,https://root.cern,https://root.cern/root/html530/TEveException.html,1,['Assert'],['AssertElement']
Testability,"ar* s1, const TString& s2); TString&TString::ReplaceAll(const char* s1, const char* s2); TString&TString::ReplaceAll(const char* s1, Ssiz_t ls1, const char* s2, Ssiz_t ls2); voidTString::Resize(Ssiz_t n); static Ssiz_tTString::ResizeIncrement(Ssiz_t ri = 16); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTString::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TSubStringTString::Strip(TString::EStripType s = kTrailing, char c = ' ') const; TSubStringTString::SubString(const char* pat, Ssiz_t start = 0, TString::ECaseCompare cmp = kExact) const; TObjArray*TString::Tokenize(const TString& delim) const; Bool_tTString::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); virtual const char*what() const; static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. enum TString::[unnamed] { kAlignment; };; enum TString::EStripType { kLeading; kTrailing; kBoth; };; enum TString::ECaseCompare { kExact; kIgnoreCase; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveException(const std::string& s); Constructor. TEveException(); {}. TEveException(const TString& s); {}. TEveException(const char* s); {}. TEveException(const std::string& s). virtual ~TEveException(); {}. const char* what() const; { return Data(); }. TEvePadHolder& operator=(const TEveException& ). » Last changed: root/eve:$Id: TEveUtil.h 36373 2010-10-19 17:43:35Z matevz $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveException.html:7270,Assert,AssertElement,7270,root/html532/TEveException.html,https://root.cern,https://root.cern/root/html532/TEveException.html,1,['Assert'],['AssertElement']
Testability,"ar*& buffer); virtual voidTKey::ReadFile(); voidTKey::ReadKeyBuffer(char*& buffer); virtual TObject*TKey::ReadObj(); virtual void*TKey::ReadObjectAny(const TClass* expectedClass); virtual TObject*TKey::ReadObjWithBuffer(char* bufferRead); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBranch(TBranch* branch); virtual voidTKey::SetBuffer(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTKey::SetMotherDir(TDirectory* dir); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidSetNevBufSize(Int_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTKey::SetParent(const TObject* parent); virtual voidSetReadMode(); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetWriteMode(); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTKey::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidUpdate(Int_t newlast); virtual voidUpdate(Int_t newlast, Int_t skipped); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Int_tWriteBuffer(); virtual Int_tTKey::WriteFile(Int_t cycle = 1, TFile* f = 0).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBasket.html:6238,Test,TestBit,6238,root/html526/TBasket.html,https://root.cern,https://root.cern/root/html526/TBasket.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar*) strchr(name, '.');; 6088 Int_t nch = strlen(name);; 6089 bool dotlast = false;; 6090 if (nch && (name[nch-1] == '.')) {; 6091 dotlast = true;; 6092 }; 6093 ; 6094 // Loop on all public data members of the class and its base classes and create branches for each one.; 6095 TObjArray* blist = this->GetListOfBranches();; 6096 TIter next(sinfo->GetElements());; 6097 TStreamerElement* element = nullptr;; 6098 TString bname;; 6099 for (Int_t id = 0; (element = (TStreamerElement*) next()); ++id) {; 6100 if (element->IsA() == TStreamerArtificial::Class()) {; 6101 continue;; 6102 }; 6103 if (element->TestBit(TStreamerElement::kRepeat)) {; 6104 continue;; 6105 }; 6106 if (element->TestBit(TStreamerElement::kCache) && !element->TestBit(TStreamerElement::kWrite)) {; 6107 continue;; 6108 }; 6109 char* pointer = (char*) (objptr + element->GetOffset());; 6110 // FIXME: This is not good enough, an STL container can be; 6111 // a base, and the test will fail.; 6112 // See TBranchElement::InitializeOffsets() for the; 6113 // correct test.; 6114 bool isBase = (element->IsA() == TStreamerBase::Class());; 6115 if (isBase) {; 6116 TClass* clbase = element->GetClassPointer();; 6117 if ((clbase == TObject::Class()) && cl->CanIgnoreTObjectStreamer()) {; 6118 // Note: TStreamerInfo::Compile() leaves this element; 6119 // out of the optimized info, although it does; 6120 // exists in the non-compiled and non-optimized info.; 6121 // FIXME: The test that TStreamerInfo::Compile() uses; 6122 // is element->GetType() < 0, so that is what; 6123 // we should do as well.; 6124 continue;; 6125 }; 6126 if (clbase->GetListOfRealData()->GetSize() == 0) {; 6127 // Do not create a branch for empty bases.; 6128 continue;; 6129 }; 6130 }; 6131 if (dot) {; 6132 if (dotlast) {; 6133 bname.Form(""%s%s"", name, element->GetFullName());; 6134 } else {; 6135 // FIXME: We are in the case where we have a top-level; 6136 // branch name that was created by the branch; 6137 // constructor which takes a folder as inp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:228684,test,test,228684,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['test'],['test']
Testability,"ar, Double_t value); Fix the value of a parameter; The specified value will be used in a fit operation. TF1 * GetCurrent(); Static function returning the current function being processed. TH1 * GetHistogram() const; Return a pointer to the histogram used to vusualize the function. Double_t GetMaximum(Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.0E-10, Int_t maxiter = 100, Bool_t logx = false) const; Return the maximum value of the function; Method:; First, the grid search is used to bracket the maximum; with the step size = (xmax-xmin)/fNpx.; This way, the step size can be controlled via the SetNpx() function.; If the function is unimodal or if its extrema are far apart, setting; the fNpx to a small value speeds the algorithm up many times.; Then, Brent's method is applied on the bracketed interval; epsilon (default = 1.E-10) controls the relative accuracy (if |x| > 1 ); and absolute (if |x| < 1) and maxiter (default = 100) controls the maximum number; of iteration of the Brent algorithm; If the flag logx is set the grid search is done in log step size; This is done automatically if the log scale is set in the current Pad. NOTE: see also TF1::GetMaximumX and TF1::GetX. Double_t GetMaximumX(Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.0E-10, Int_t maxiter = 100, Bool_t logx = false) const; Return the X value corresponding to the maximum value of the function; Method:; First, the grid search is used to bracket the maximum; with the step size = (xmax-xmin)/fNpx.; This way, the step size can be controlled via the SetNpx() function.; If the function is unimodal or if its extrema are far apart, setting; the fNpx to a small value speeds the algorithm up many times.; Then, Brent's method is applied on the bracketed interval; epsilon (default = 1.E-10) controls the relative accuracy (if |x| > 1 ); and absolute (if |x| < 1) and maxiter (default = 100) controls the maximum number; of iteration of the Brent algorithm; If the flag logx is set the grid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TF1.html:42892,log,logx,42892,root/html602/TF1.html,https://root.cern,https://root.cern/root/html602/TF1.html,6,['log'],"['log', 'logx']"
Testability,"ar/amax;; 565 Double_t d = amax * Sqrt(1.+foofrac*foofrac+barfrac*barfrac);; 566 ; 567 v[0] /= d;; 568 v[1] /= d;; 569 v[2] /= d;; 570 return d;; 571}; 572 ; 573////////////////////////////////////////////////////////////////////////////////; 574/// Computes the Poisson distribution function for (x,par).; 575/// The Poisson PDF is implemented by means of Euler's Gamma-function; 576/// (for the factorial), so for any x integer argument it is the correct Poisson distribution.; 577/// BUT for non-integer x values, it IS NOT equal to the Poisson distribution !; 578///; 579/// Begin_Macro; 580/// {; 581/// TCanvas *c1 = new TCanvas(""c1"", ""c1"", 700, 500);; 582/// TF1 *poisson = new TF1(""poisson"", ""TMath::Poisson(x, 5)"", 0, 15);; 583/// poisson->Draw(""L"");; 584/// }; 585/// End_Macro; 586 ; 587Double_t TMath::Poisson(Double_t x, Double_t par); 588{; 589 if (par < 0); 590 return TMath::QuietNaN();; 591 if (x < 0); 592 return 0;; 593 else if (x == 0.0 ); 594 return Exp(-par);; 595 else; 596 {; 597 return Exp( x * log(par) - LnGamma(x + 1.) - par);; 598 }; 599}; 600 ; 601////////////////////////////////////////////////////////////////////////////////; 602/// Computes the Discrete Poisson distribution function for (x,par).; 603/// This is a discrete and a non-smooth function.; 604/// This function is equivalent to ROOT::Math::poisson_pdf; 605///; 606/// Begin_Macro; 607/// {; 608/// TCanvas *c1 = new TCanvas(""c1"", ""c1"", 700, 500);; 609/// TF1 *poissoni = new TF1(""poissoni"", ""TMath::PoissonI(x, 5)"", 0, 15);; 610/// poissoni->SetNpx(1000);; 611/// poissoni->Draw(""L"");; 612/// }; 613/// End_Macro; 614 ; 615Double_t TMath::PoissonI(Double_t x, Double_t par); 616{; 617 Int_t ix = Int_t(x);; 618 return Poisson(ix,par);; 619}; 620 ; 621////////////////////////////////////////////////////////////////////////////////; 622/// Computation of the probability for a certain Chi-squared (chi2); 623/// and number of degrees of freedom (ndf).; 624///; 625/// Calculations are based on the incom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:18786,log,log,18786,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['log'],['log']
Testability,"ar1 : 2.504e-01; : 3 : var2 : 2.430e-01; : 4 : var3 : 1.949e-01; : --------------------------------------; MLP : Ranking result (top variable is best ranked); : -----------------------------; : Rank : Variable : Importance; : -----------------------------; : 1 : var4 : 6.076e+01; : 2 : var2 : 4.824e+01; : 3 : var1 : 2.116e+01; : 4 : var3 : 1.692e+01; : -----------------------------; PDEFoam : Ranking result (top variable is best ranked); : --------------------------------------; : Rank : Variable : Variable Importance; : --------------------------------------; : 1 : var4 : 2.991e-01; : 2 : var1 : 2.930e-01; : 3 : var3 : 2.365e-01; : 4 : var2 : 1.714e-01; : --------------------------------------; : No variable ranking supplied by classifier: DL_CPU; TH1.Print Name = TrainingHistory_DL_CPU_trainingError, Entries= 0, Total sum= 7.41943; TH1.Print Name = TrainingHistory_DL_CPU_valError, Entries= 0, Total sum= 7.13905; Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: ␛[0;36mdataset/weights/TMVAMulticlass_BDTG.weights.xml␛[0m; : Reading weight file: ␛[0;36mdataset/weights/TMVAMulticlass_MLP.weights.xml␛[0m; MLP : Building Network. ; : Initializing weights; : Reading weight file: ␛[0;36mdataset/weights/TMVAMulticlass_PDEFoam.weights.xml␛[0m; : Read foams from file: ␛[0;36mdataset/weights/TMVAMulticlass_PDEFoam.weights_foams.root␛[0m; : Reading weight file: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.weights.xml␛[0m; Factory : ␛[1mTest all methods␛[0m; Factory : Test method: BDTG for Multiclass classification performance; : ; : Dataset[dataset] : Create results for testing; : Dataset[dataset] : Multiclass evaluation of BDTG on testing sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 1.01 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; Factory : Test method: MLP for Multiclass classification performance; : ; : Dataset[dataset] : Create resu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:18807,test,testing,18807,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['test'],['testing']
Testability,ar1: 3.3352 1.1893 [ 0.00020069 5.0000 ]; : var2: 2.4860 1.4342 [ 0.00071490 5.0000 ]; : fvalue: 163.91 83.651 [ 1.6186 394.84 ]; : -----------------------------------------------------------; : Evaluate regression method: KNN; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.0954 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 1000 events: 0.0134 sec ; TFHandler_KNN : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 3.3352 1.1893 [ 0.00020069 5.0000 ]; : var2: 2.4860 1.4342 [ 0.00071490 5.0000 ]; : fvalue: 163.91 83.651 [ 1.6186 394.84 ]; : -----------------------------------------------------------; : Evaluate regression method: LD; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.00655 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 1000 events: 0.00224 sec ; TFHandler_LD : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 3.3352 1.1893 [ 0.00020069 5.0000 ]; : var2: 2.4860 1.4342 [ 0.00071490 5.0000 ]; : fvalue: 163.91 83.651 [ 1.6186 394.84 ]; : -----------------------------------------------------------; : Evaluate regression method: DNN_CPU; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 9000 events: 0.23 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 1000 events: 0.0277 sec ; TFHandler_DNN_CPU : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: -0.027271 1.0264 [ -3.3694 5.7307 ]; : var2: 0.0028453 0.98623 [ -5.7307 5.7307 ]; : fvalue: 163.91 83.651 [ 1.6186 394.84 ]; : -----------------------------------------------------------; TFHandler_DNN_CPU ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:130439,Test,TestRegression,130439,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['TestRegression']
Testability,"ar> >& out, Option_t* option = """"); virtual Int_tTSocket::Select(Int_t interest = kRead, Long_t timeout = -1); virtual Int_tTServerSocket::Send(const TMessage&); virtual Int_tTServerSocket::Send(Int_t); virtual Int_tTServerSocket::Send(Int_t, Int_t); virtual Int_tTServerSocket::Send(const char*, Int_t = kMESS_STRING); virtual Int_tTServerSocket::SendObject(const TObject*, Int_t = kMESS_OBJECT); virtual Int_tTServerSocket::SendRaw(const void*, Int_t, ESendRecvOptions = kDefault); static voidTServerSocket::SetAcceptOptions(UChar_t Opt); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTSocket::SetCompressionLevel(Int_t level = 1); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual Int_tTSocket::SetOption(ESockOptions opt, Int_t val); voidTSocket::SetRemoteProtocol(Int_t rproto); voidTSocket::SetSecContext(TSecContext* ctx); voidTSocket::SetService(const char* service); voidTSocket::SetServType(Int_t st); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidTSocket::SetUrl(const char* url); static voidTServerSocket::ShowAcceptOptions(); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTSocket::Touch(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPServerSocket.html:7535,Test,TestBit,7535,root/html528/TPServerSocket.html,https://root.cern,https://root.cern/root/html528/TPServerSocket.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ar> >& out, Option_t* option = """"); virtual voidSetAddress(void* addr); virtual voidTBranch::SetAutoDelete(Bool_t autodel = kTRUE); virtual voidTBranch::SetBasketSize(Int_t buffsize); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTBranch::SetBufferAddress(TBuffer* entryBuffer); virtual voidTBranch::SetCompressionLevel(Int_t level = 1); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTBranch::SetEntries(Long64_t entries); virtual voidTBranch::SetEntryOffsetLen(Int_t len, Bool_t updateSubBranches = kFALSE); virtual voidTBranch::SetFile(TFile* file = 0); virtual voidTBranch::SetFile(const char* filename); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTBranch::SetFirstEntry(Long64_t entry); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTBranch::SetObject(void* objadd); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTBranch::SetOffset(Int_t offset = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTBranch::SetTree(TTree* tree); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTBranch::UpdateAddress(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranchSTL.html:8652,Test,TestBit,8652,root/html526/TBranchSTL.html,https://root.cern,https://root.cern/root/html526/TBranchSTL.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"arHisto(Bool_t h)TOGGLE GETTER ; voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBoxPlot(Bool_t box)TOGGLE GETTER ; voidSetCurrentLimits(Double_t min, Double_t max)MENU ; voidSetCurrentMax(Double_t max); voidSetCurrentMin(Double_t min); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); voidSetHistogramBinning(Int_t n = 100)MENU ; voidSetHistogramHeight(Double_t h = 0)MENU ; voidSetHistogramLineWidth(Int_t lw = 2)MENU ; voidSetInitMax(Double_t max); voidSetInitMin(Double_t min); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); voidSetLiveRangesUpdate(Bool_t on); voidSetLogScale(Bool_t log)TOGGLE GETTER ; virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetTitle(const char*); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetValues(Long64_t length, Double_t* val); voidSetX(Double_t x, Bool_t gl); voidSetY(Double_t y, Bool_t gl); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidUnzoom()MENU ; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParallelCoordVar.html:7874,Test,TestBit,7874,root/html530/TParallelCoordVar.html,https://root.cern,https://root.cern/root/html530/TParallelCoordVar.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"arNo)TMinuitvirtual; ResetBit(UInt_t f)TObjectinline; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetErrorDef(Double_t up)TMinuitvirtual; SetFCN(void(*fcn)(Int_t &, Double_t *, Double_t &f, Double_t *, Int_t))TMinuitvirtual; SetGraphicsMode(Bool_t mode=kTRUE)TMinuitinlinevirtual; SetMaxIterations(Int_t maxiter=500)TMinuitinlinevirtual; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetObjectFit(TObject *obj)TMinuitinlinevirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetPrintLevel(Int_t printLevel=0)TMinuitvirtual; SetTitle(const char *title="""")TNamedvirtual; SetUniqueID(UInt_t uid)TObjectvirtual; Sizeof() constTNamedvirtual; Streamer(TBuffer &) overrideTMinuitvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TMinuitinline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TMinuit(const TMinuit &m)TMinuitprivate; TMinuit()TMinuit; TMinuit(Int_t maxpar)TMinuit; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; UseCurrentStyle()TObjectvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~TMinuit() overrideTMinuit; ~TNamed()TNamedvirtual; ~TObject()TObjectvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit-members.html:11682,Test,TestBit,11682,doc/master/classTMinuit-members.html,https://root.cern,https://root.cern/doc/master/classTMinuit-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"arNumber(const char* name) const; virtual Double_tTF1::GetProb() const; virtual Int_tTF1::GetQuantiles(Int_t nprobSum, Double_t* q, const Double_t* probSum); virtual Double_tTF1::GetRandom(); virtual Double_tTF1::GetRandom(Double_t xmin, Double_t xmax); virtual voidTF1::GetRange(Double_t& xmin, Double_t& xmax) const; virtual voidTF1::GetRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; virtual voidTF1::GetRange(Double_t& xmin, Double_t& ymin, Double_t& zmin, Double_t& xmax, Double_t& ymax, Double_t& zmax) const; virtual Double_tTF1::GetSave(const Double_t* x); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tTF1::GetVariable(const TString& name); virtual Double_tTF1::GetX(Double_t y, Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.0E-10, Int_t maxiter = 100, Bool_t logx = false) const; TAxis*TF1::GetXaxis() const; virtual Double_tTF1::GetXmax() const; virtual Double_tTF1::GetXmin() const; virtual Double_tGetXY() const; TAxis*TF1::GetYaxis() const; TAxis*TF1::GetZaxis() const; virtual Double_tTF1::GradientPar(Int_t ipar, const Double_t* x, Double_t eps = 0.01); virtual voidTF1::GradientPar(const Double_t* x, Double_t* grad, Double_t eps = 0.01); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTF1::InitArgs(const Double_t* x, const Double_t* params); static voidTF1::InitStandardFunctions(); virtual voidTObject::Inspect() constMENU ; virtual Double_tTF1::Integral(Double_t a, Double_t b, Double_t epsrel = 9.9999999999999998E-13); virtual Double_tTF1::IntegralError(Double_t a, Double_t b, const Double_t* params = 0, const Double_t* covmat = 0, Double_t epsilon = 0.01); virtual Double_tTF1::IntegralError(Int_t n, const Double_t* a, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TF12.html:6595,log,logx,6595,root/html604/TF12.html,https://root.cern,https://root.cern/root/html604/TF12.html,1,['log'],['logx']
Testability,"arShapeDirty() const; voidclearValueAndShapeDirty() const; voidclearValueDirty() const; TIterator*clientIterator() const; virtual TObject*clone(const char* newname = 0) const; virtual TObject*Clone(const char* newname = 0) const; virtual RooAbsArg*cloneTree(const char* newname = 0) const; virtual Int_tCompare(const TObject* other) const; virtual voidconstOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tcrc32(const char* data); static UInt_tcrc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsArg*createFundamental(const char* newname = 0) const; virtual Int_tdefaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tdependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tdependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tdependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tdependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsArg.html:3468,test,testArg,3468,root/html534/RooAbsArg.html,https://root.cern,https://root.cern/root/html534/RooAbsArg.html,3,['test'],['testArg']
Testability,"arTransform=Norm"" );; ; // Boosted Decision Trees; if (Use[""BDT""]); factory->BookMethod( dataloader, TMVA::Types::kBDT, ""BDT"",; ""!H:!V:NTrees=100:MinNodeSize=1.0%:BoostType=AdaBoostR2:SeparationType=RegressionVariance:nCuts=20:PruneMethod=CostComplexity:PruneStrength=30"" );; ; if (Use[""BDTG""]); factory->BookMethod( dataloader, TMVA::Types::kBDT, ""BDTG"",; ""!H:!V:NTrees=2000::BoostType=Grad:Shrinkage=0.1:UseBaggedBoost:BaggedSampleFraction=0.5:nCuts=20:MaxDepth=3:MaxDepth=4"" );; // --------------------------------------------------------------------------------------------------; ; // Now you can tell the factory to train, test, and evaluate the MVAs; ; // Train MVAs using the set of training events; factory->TrainAllMethods();; ; // Evaluate all MVAs using the set of test events; factory->TestAllMethods();; ; // Evaluate and compare performance of all configured MVAs; factory->EvaluateAllMethods();; ; // --------------------------------------------------------------; ; // Save the output; outputFile->Close();; ; std::cout << ""==> Wrote root file: "" << outputFile->GetName() << std::endl;; std::cout << ""==> TMVARegression is done!"" << std::endl;; ; delete factory;; delete dataloader;; ; // Launch the GUI for the root macros; if (!gROOT->IsBatch()) TMVA::TMVARegGui( outfileName );; }; ; int main( int argc, char** argv ); {; // Select methods (don't look at this code - not of interest); TString methodList;; for (int i=1; i<argc; i++) {; TString regMethod(argv[i]);; if(regMethod==""-b"" || regMethod==""--batch"") continue;; if (!methodList.IsNull()) methodList += TString("","");; methodList += regMethod;; }; TMVARegression(methodList);; return 0;; }; DataLoader.h; mainint main()Definition Prototype.cxx:12; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Double_tdouble Double_tDefinition RtypesCore.h:59; TChain.h; TFile.h; inputOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:145778,test,test,145778,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,3,"['Test', 'test']","['TestAllMethods', 'test']"
Testability,"aram(Int_t mapsize); voidTBuffer::SetReAllocFunc(ReAllocCharFun_t reallocfunc = 0); virtual voidTBufferFile::SetStreamerElementNumber(Int_t); virtual voidTObject::SetUniqueID(UInt_t uid); voidTBuffer::SetWriteMode(); virtual voidTBufferFile::SetWriteParam(Int_t mapsize); virtual voidShowMembers(TMemberInspector& insp); virtual voidTBufferFile::SkipObjectAny(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTBufferFile::StreamObject(TObject* obj); virtual voidTBufferFile::StreamObject(void* obj, const type_info& typeinfo, const TClass* onFileClass = 0); virtual voidTBufferFile::StreamObject(void* obj, const char* className, const TClass* onFileClass = 0); virtual voidTBufferFile::StreamObject(void* obj, const TClass* cl, const TClass* onFileClass = 0); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTBufferFile::TagStreamerInfo(TVirtualStreamerInfo* info); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual voidTBufferFile::WriteArray(const Bool_t* b, Int_t n); virtual voidTBufferFile::WriteArray(const Char_t* c, Int_t n); virtual voidTBufferFile::WriteArray(const UChar_t* c, Int_t n); virtual voidTBufferFile::WriteArray(const Short_t* h, Int_t n); virtual voidTBufferFile::WriteArray(const UShort_t* h, Int_t n); virtual voidTBufferFile::WriteArray(const Int_t* i, Int_t n); virtual voidTBufferFile::WriteArray(const UInt_t* i, Int_t n); virtual voidTBufferFile::WriteArray(const Long_t* l, Int_t n); virtual voidTBufferFile::WriteArray(const ULong_t* l, Int_t n); virtual voidTBufferFile::WriteArray(const Long64_t* l, Int_t n); virtual voidTBufferFile::WriteArray(const ULong64_t* ll, Int_t n); virtual voidTBufferFile::WriteArray(const Float_t* f, Int_t n); virtual voidTBufferFile::WriteArray(const Double_t* d, Int_t n); virtual voidTBufferFile::WriteA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBufferSQL.html:12535,Test,TestBits,12535,root/html528/TBufferSQL.html,https://root.cern,https://root.cern/root/html528/TBufferSQL.html,1,['Test'],['TestBits']
Testability,"arameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; virtual void ShowCache (Bool_t all=kFALSE);  List contents of file cache. ;  ; virtual void ShowData ();  List contents of the data directory in the sandbox. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; virtual void ShowDataSetCache (const char *dataset=0);  Display the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; virtual void ShowDataSets (const char *uri="""", const char *optStr="""");  Shows datasets in locations that match the uri. ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:19380,sandbox,sandbox,19380,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,3,['sandbox'],['sandbox']
Testability,"arameter (not to fit).; �� Bool_t���; fFixTy;������������������������ //logical value of t parameter for 1D ridges in; y direction, which allows to fix the parameter (not to fit).; �� Bool_t���; fFixSx;������������������������ //logical value of s parameter for 1D ridges in; x direction, which allows to fix the parameter (not to fit).; �� Bool_t���; fFixSy;������������������������ //logical value of s parameter for 1D ridges in; y direction, which allows to fix the parameter (not to fit).; �� Bool_t��� fFixBx;�� ����������������������//logical; value of b parameter for 1D ridges in x direction, which allows to fix the; parameter (not to fit).; �� Bool_t���; fFixBy;������������������������ //logical value of b parameter for 1D ridges in; y direction, which allows to fix the parameter (not to fit).; �� Bool_t���; fFixA0;������������������������ //logical value of a0 parameter, which allows; to fix the parameter (not to fit).; �� Bool_t���; fFixAx;������������������������ //logical value of ax parameter, which allows; to fix the parameter (not to fit).; �� Bool_t���; fFixAy;������������������������ //logical value of ay parameter, which allows; to fix the parameter (not to fit).; �; References:; [1] Phillps G.W., Marlow K.W.,; NIM 137 (1976) 525.; [2] I. A. Slavic: Nonlinear; least-squares fitting without matrix inversion applied to complex Gaussian; spectra analysis. NIM 134 (1976) 285-289.; [3] T. Awaya: A new method for; curve fitting to the data with low statistics not using chi-square method. NIM; 165 (1979) 317-323.; [4] T. Hauschild, M. Jentschel:; Comparison of maximum likelihood estimation and chi-square statistics applied; to counting experiments. NIM A 457 (2001) 384-401.; �[5]� M. Morh�č,� J.; Kliman,� M. Jandel,� Ľ. Krupa, V. Matou�ek: Study of fitting algorithms; applied to simultaneous analysis of large number of peaks in -ray spectra. Applied Spectroscopy, Vol. 57, No. 7, pp. 753-760, 2003; �; Example �� script FitAwmi2.c:. Fig. 1 Original two-dimensiona",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrum2Fit.html:50562,log,logical,50562,root/html528/TSpectrum2Fit.html,https://root.cern,https://root.cern/root/html528/TSpectrum2Fit.html,6,['log'],['logical']
Testability,"arameter constraint terms, only apply constraints to given subset of parameters; ExternalConstraints(const RooArgSet& ) -- Include given external constraints to likelihood; GlobalObservables(const RooArgSet&) -- Define the set of normalization observables to be used for the constraint terms.; If none are specified the constrained parameters are used; GlobalObservablesTag(const char* tagName) -- Define the set of normalization observables to be used for the constraint terms by a string attribute; associated with pdf observables that match the given tagName; Verbose(Bool_t flag) -- Constrols RooFit informational messages in likelihood construction; CloneData(Bool flag) -- Use clone of dataset in NLL (default is true); Offset(Bool_t) -- Offset likelihood by initial value (so that starting value of FCN in minuit is zero). This; can improve numeric stability in simultaneously fits with components with large likelihood values. RooAbsReal* createNLL(RooAbsData& data, const RooLinkedList& cmdList); Construct representation of -log(L) of PDFwith given dataset. If dataset is unbinned, an unbinned likelihood is constructed. If the dataset; is binned, a binned likelihood is constructed. See RooAbsPdf::createNLL(RooAbsData& data, RooCmdArg arg1, RooCmdArg arg2, RooCmdArg arg3, RooCmdArg arg4,; RooCmdArg arg5, RooCmdArg arg6, RooCmdArg arg7, RooCmdArg arg8). for documentation of options. RooFitResult* fitTo(RooAbsData& data, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); Fit PDF to given dataset. If dataset is unbinned, an unbinned maximum likelihood is performed. If the dataset; is binned, a binned maximum likelihood is performed. By default the fit is executed through the MINUIT; comman",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsPdf.html:54996,log,log,54996,root/html602/RooAbsPdf.html,https://root.cern,https://root.cern/root/html602/RooAbsPdf.html,2,['log'],['log']
Testability,"arameter for the point in; parameter-space that is the most likely.; How do we do if there are points that are equi-probable?; use approximate posterior; t.b.d use real function to find the mode. void ComputeIntervalUsingRooFit(double c1, double c2) const; internal function compute the interval using RooFit. void ComputeIntervalFromCdf(double c1, double c2) const; internal function compute the interval using Cdf integration. void ApproximatePosterior() const; approximate posterior in nbins using a TF1; scan the poi values and evaluate the posterior at each point; and save the result in a cloned TF1; For each point the posterior is evaluated by integrating the nuisance; parameters. void ComputeIntervalFromApproxPosterior(double c1, double c2) const; compute the interval using the approximate posterior function. void ComputeShortestInterval() const; compute the shortest interval. BayesianCalculator(); constructor. void SetData(RooAbsData& data). void SetTestSize(Double_t size); set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval). void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). { SetTestSize(1.-cl); }. Double_t Size() const; Get the size of the test (eg. rate of Type I error). { return fSize; }. Double_t ConfidenceLevel() const; Get the Confidence level for the test. { return 1.-fSize; }. void SetLeftSideTailFraction(Double_t leftSideFraction); set the fraction of probability content on the left tail; Central limits use 0.5 (default case); for upper limits it is 0 and 1 for lower limit; For shortest intervals a negative value (i.e. -1) must be given. {fLeftSideFraction = leftSideFraction;}. void SetShortestInterval(); set the Bayesian calculator to compute the shorest interval (default is central interval); to switch off SetLeftSideTailFraction to the rght value. { fLeftSideFraction = -1; }. void SetBrfPrecision(double precision); set the precision of the Root",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__BayesianCalculator.html:15903,test,test,15903,root/html530/RooStats__BayesianCalculator.html,https://root.cern,https://root.cern/root/html530/RooStats__BayesianCalculator.html,2,['test'],['test']
Testability,"arameter with limits; 6851 mndxdi(fX[ipar-1], ipar-1, dxdi);; 6852 if (dxdi == 0) dxdi = 1;; 6853 fDirin[ipar-1] = alpha*2*fWerr[ipar-1] / dxdi;; 6854 if (TMath::Abs(fDirin[ipar-1]) > 6.2831859999999997) {; 6855 fDirin[ipar-1] = 6.2831859999999997;; 6856 }; 6857 }; 6858 fSEEKxmid[ipar-1] = fX[ipar-1];; 6859 fSEEKxbest[ipar-1] = fX[ipar-1];; 6860 }; 6861// search loop; 6862 for (istep = 1; istep <= mxstep; ++istep) {; 6863 if (ifail >= mxfail) break;; 6864 for (ipar = 1; ipar <= fNpar; ++ipar) {; 6865 mnrn15(rnum1, iseed);; 6866 mnrn15(rnum2, iseed);; 6867 fX[ipar-1] = fSEEKxmid[ipar-1] + (rnum1 + rnum2 - 1)*.5*fDirin[ipar-1];; 6868 }; 6869 mninex(fX);; 6870 Eval(nparx, fGin, ftry, fU, 4); ++fNfcn;; 6871 if (ftry < flast) {; 6872 if (ftry < fAmin) {; 6873 fCstatu = ""IMPROVEMENT"";; 6874 fAmin = ftry;; 6875 for (ib = 1; ib <= fNpar; ++ib) { fSEEKxbest[ib-1] = fX[ib-1]; }; 6876 ifail = 0;; 6877 if (fISW[4] >= 2) mnprin(2, fAmin);; 6878 }; 6879 goto L300;; 6880 } else {; 6881 ++ifail;; 6882// Metropolis algorithm; 6883 bar = (fAmin - ftry) / fUp;; 6884 mnrn15(rnum, iseed);; 6885 if (bar < TMath::Log(rnum)) continue;; 6886 }; 6887// Accept new point, move there; 6888L300:; 6889 for (j = 1; j <= fNpar; ++j) { fSEEKxmid[j-1] = fX[j-1]; }; 6890 flast = ftry;; 6891 }; 6892// end search loop; 6893 if (fISW[4] > 1) {; 6894 Printf("" MNSEEK: %5d SUCCESSIVE UNSUCCESSFUL TRIALS."",ifail);; 6895 }; 6896 for (ib = 1; ib <= fNpar; ++ib) { fX[ib-1] = fSEEKxbest[ib-1]; }; 6897 mninex(fX);; 6898 if (fISW[4] >= 1) mnprin(2, fAmin);; 6899 if (fISW[4] == 0) mnprin(0, fAmin);; 6900}; 6901 ; 6902////////////////////////////////////////////////////////////////////////////////; 6903/// Interprets the commands that start with SET and SHOW; 6904///; 6905/// Called from MNEXCM; 6906/// file characteristics for SET INPUT; 6907/// 'SET ' or 'SHOW', 'ON ' or 'OFF', 'SUPPRESSED' or 'REPORTED '; 6908/// explanation of print level numbers -1:3 and strategies 0:2; 6909/// identification of debug options; 6",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:223178,Log,Log,223178,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['Log'],['Log']
Testability,"arameters Example: gStyle->SetOptFit(1011); print fit probability, parameter names/values and errors.; When ""v""=1 is specified, only the non-fixed parameters are shown.; When ""v""=2 all parameters are shown. Notes:. never call SetOptFit(000111); but SetOptFit(111), 000111 will be taken as an octal number !!; gStyle->SetOptFit(1) is a shortcut allowing to set the most common case and is equivalent to gStyle->SetOptFit(111); At ROOT startup the option fit is set to 0. So, to see the fit parameters on all plot resulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyle.h. ◆ SetOptLogz(). void TStyle::SetOptLogz ; (; Int_t ; logz = 1). inline . Definition at line 331 of file TStyle.h. ◆ SetOptStat() [1/2]. void TStyle::SetOptStat ; (; Int_t ; mode = 1). The type of information printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = ksiourmen; k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. Example: gStyle->SetOptStat(11); print only name of histogram and number of entries. gStyle->SetOptStat(1101); displays the name of histogram, mean value and RMS.; Notes:. never call SetOptStat(000111); but SetOptStat(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle.html:82587,log,logz,82587,doc/master/classTStyle.html,https://root.cern,https://root.cern/doc/master/classTStyle.html,1,['log'],['logz']
Testability,"arameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. When ""v"" = 1 is specified, only the non-fixed parameters are; shown.; When ""v"" = 2 all parameters are shown. Note: gStyle->SetOptFit(1) means ""default value"", so it is equivalent; to gStyle->SetOptFit(111); Statistics box editing; The following example show how to remove and add a line in a statistics box. Picture; Source. TCanvas *statsEditing() {; // This example shows:; // - how to remove a stat element from the stat box; // - how to add a new one; //n cte and plot a test histogram with stats; TCanvas *se = new TCanvas;; TH1F *h = new TH1F(""h"",""test"",100,-3,3);; h->FillRandom(""gaus"",3000);; gStyle->SetOptStat();; h->Draw();; se->Update();. TPaveStats *ps = (TPaveStats*)se->GetPrimitive(""stats"");; ps->SetName(""mystats"");; TList *list = ps->GetListOfLines();. ; TText *tconst = ps->GetLineWith(""RMS"");; list->Remove(tconst);. ; ""="" is a control character; TLatex *myt = new TLatex(0,0,""Test = 10"");; myt ->SetTextFont(42);; myt ->SetTextSize(0.04);; myt ->SetTextColor(kRed);; list->Add(myt);. ; h->SetStats(0);. se->Modified();; return se;; } . Function Members (Methods); public:. TPaveStats(); TPaveStats(const TPaveStats&); TPaveStats(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Option_t* option = ""br""); virtual~TPaveStats(); voidTObject::AbstractMethod(const char* method) const; virtual TBox*AddBox(Double_t, Double_t, Double_t, Double_t); virtual TLine*AddLine(Double_t, Double_t, Double_t, Double_t); virtual TText*TPaveText::AddText(const char* label); virtual TText*TPaveText::AddText(Double_t x1, Double_t y1, const char* label); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTPaveText::Clear(Option_t* option = """")MENU ; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPaveStats.html:5605,Test,Test,5605,root/html534/TPaveStats.html,https://root.cern,https://root.cern/root/html534/TPaveStats.html,1,['Test'],['Test']
Testability,"arameters; p is function value. ikode = 1 - print values, errors and limits; ikode = 2 - print values, errors and steps; ikode = 3 - print values, errors, steps and derivatives; ikode = 4 - print only values and errors. void ReleaseParameter(Int_t ipar); Releases parameter number ipar. void SetData(Double_t* , Int_t , Int_t ); Sets pointer to data array provided by user.; Necessary if SetFCN is not called. numpoints: number of experimental points; vecsize: size of data point vector + 2; (for N-dimensional fit vecsize=N+2); exdata: data array with following format. exdata[0] = ExpValue_0 - experimental data value number 0; exdata[1] = ExpSigma_0 - error of value number 0; exdata[2] = X_0[0]; exdata[3] = X_0[1]. exdata[vecsize-1] = X_0[vecsize-3]; exdata[vecsize] = ExpValue_1; exdata[vecsize+1] = ExpSigma_1; exdata[vecsize+2] = X_1[0]. exdata[vecsize*(numpoints-1)] = ExpValue_(numpoints-1). exdata[vecsize*numpoints-1] = X_(numpoints-1)[vecsize-3]. void SetFitMethod(const char* name); ret fit method (chisquare or loglikelihood). Int_t SetParameter(Int_t ipar, const char* parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh); Sets for prameter number ipar initial parameter value,; name parname, initial error verr and limits vlow and vhigh; If vlow = vhigh but not equil to zero, parameter will be fixed.; If vlow = vhigh = 0, parameter is released and its limits are discarded. Int_t SGZ(); Evaluates objective function ( chi-square ), gradients and; Z-matrix using data provided by user via TFumili::SetData. void FitChisquare(Int_t& npar, Double_t* gin, Double_t& f, Double_t* u, Int_t flag); Minimization function for H1s using a Chisquare method; Default method (function evaluated at center of bin); for each point the cache contains the following info; -1D : bc,e,xc (bin content, error, x of center of bin); -2D : bc,e,xc,yc; -3D : bc,e,xc,yc,zc. void FitChisquareI(Int_t& npar, Double_t* gin, Double_t& f, Double_t* u, Int_t flag); Minimization function for H",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFumili.html:22105,log,loglikelihood,22105,root/html528/TFumili.html,https://root.cern,https://root.cern/root/html528/TFumili.html,6,['log'],['loglikelihood']
Testability,"aramsOfInterest); virtual RooAbsPdf*RooAbsPdf::createProjection(const RooArgSet& iset); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsReal::createRunningIntegral(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); RooAbsReal*RooAbsPdf::createScanCdf(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); RooAbsReal*RooAbsReal::createScanRI(const RooArgSet& iset, const RooArgSet& nset, Int_t numScanBins, Int_t intOrder); virtual Double_tRooAbsReal::defaultErrorLevel() const; static RooNumGenConfig*RooAbsPdf::defaultGeneratorConfig(); static RooNumIntConfig*RooAbsReal::defaultIntegratorConfig(); virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; RooDerivative*RooAbsReal::derivative(RooRealVar& obs, Int_t order = 1, Double_t eps = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAddModel.html:9581,test,testArg,9581,root/html528/RooAddModel.html,https://root.cern,https://root.cern/root/html528/RooAddModel.html,690,['test'],['testArg']
Testability,"arams[1] = sigma for a Gaussian) ;  ; std::vector< std::vector< Double_t > > fSamples;  The input data. ;  ; Bool_t fTestSampleFromH0;  . #include <Math/GoFTest.h>; Member Enumeration Documentation. ◆ EDistribution. enum ROOT::Math::GoFTest::EDistribution. H0 distributions for using only with 1-sample tests. ; One should provide the distribution parameters otherwise the default values will be used . EnumeratorkUndefined ; kUserDefined Default value for non templated 1-sample test. Set with SetDistribution. . kGaussian For internal use only within the class's template constructor. . kLogNormal Gaussian distribution with default mean=0, sigma=1. . kExponential Lognormal distribution with default meanlog=0, sigmalog=1. ; Exponential distribution with default rate=1 . Definition at line 70 of file GoFTest.h. ◆ ETestType. enum ROOT::Math::GoFTest::ETestType. Goodness of Fit test types for using with the class's unary functions as a shorthand for the in-built methods. . EnumeratorkAD ; kAD2s Anderson-Darling Test. Default value. . kKS Anderson-Darling 2-Samples Test. . kKS2s Kolmogorov-Smirnov Test. ; Kolmogorov-Smirnov 2-Samples Test . Definition at line 85 of file GoFTest.h. ◆ EUserDistribution. enum ROOT::Math::GoFTest::EUserDistribution. User input distribution option. . EnumeratorkCDF ; kPDF Input distribution is a CDF : cumulative distribution function. ; Input distribution is a PDF (Default value) . Definition at line 79 of file GoFTest.h. Constructor & Destructor Documentation. ◆ GoFTest() [1/6]. ROOT::Math::GoFTest::GoFTest ; (; size_t ; sample1Size, . const Double_t * ; sample1, . size_t ; sample2Size, . const Double_t * ; sample2 . ). Constructor for 2-samples tests. ; Definition at line 134 of file GoFTest.cxx. ◆ GoFTest() [2/6]. ROOT::Math::GoFTest::GoFTest ; (; size_t ; sampleSize, . const Double_t * ; sample, . EDistribution ; dist = kUndefined, . const std::vector< double > & ; distParams = {} . ). Constructor for 1-sample tests with a specified distributio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GoFTest.html:8735,Test,Test,8735,doc/master/classROOT_1_1Math_1_1GoFTest.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GoFTest.html,1,['Test'],['Test']
Testability,"arationBase * ; qualityIndex . ). constructor ; Definition at line 104 of file CCTreeWrapper.cxx. ◆ ~CCTreeWrapper(). TMVA::CCTreeWrapper::~CCTreeWrapper ; (; ). destructor ; Definition at line 116 of file CCTreeWrapper.cxx. Member Function Documentation. ◆ CheckEvent(). Double_t TMVA::CCTreeWrapper::CheckEvent ; (; const TMVA::Event & ; e, . Bool_t ; useYesNoLeaf = false . ). return the decision tree output for an event ; Definition at line 226 of file CCTreeWrapper.cxx. ◆ GetRoot(). CCTreeNode * TMVA::CCTreeWrapper::GetRoot ; (; ). inline . Definition at line 148 of file CCTreeWrapper.h. ◆ InitTree(). void TMVA::CCTreeWrapper::InitTree ; (; CCTreeNode * ; t). initialize the node t and all its descendants ; Definition at line 123 of file CCTreeWrapper.cxx. ◆ PruneNode(). void TMVA::CCTreeWrapper::PruneNode ; (; CCTreeNode * ; t). remove the branch rooted at node t ; Definition at line 160 of file CCTreeWrapper.cxx. ◆ TestTreeQuality() [1/2]. Double_t TMVA::CCTreeWrapper::TestTreeQuality ; (; const DataSet * ; validationSample). return the misclassification rate of a pruned tree for a validation event sample using the DataSet ; Definition at line 203 of file CCTreeWrapper.cxx. ◆ TestTreeQuality() [2/2]. Double_t TMVA::CCTreeWrapper::TestTreeQuality ; (; const EventList * ; validationSample). return the misclassification rate of a pruned tree for a validation event sample using an EventList ; Definition at line 183 of file CCTreeWrapper.cxx. Member Data Documentation. ◆ fDTParent. DecisionTree* TMVA::CCTreeWrapper::fDTParent. private . ! pointer to underlying DecisionTree ; Definition at line 151 of file CCTreeWrapper.h. ◆ fQualityIndex. SeparationBase* TMVA::CCTreeWrapper::fQualityIndex. private . ! pointer to the used quality index calculator ; Definition at line 150 of file CCTreeWrapper.h. ◆ fRoot. CCTreeNode* TMVA::CCTreeWrapper::fRoot. private . ! the root node of the (wrapped) decision Tree ; Definition at line 152 of file CCTreeWrapper.h. Libraries for TMVA::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CCTreeWrapper.html:2751,Test,TestTreeQuality,2751,doc/master/classTMVA_1_1CCTreeWrapper.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CCTreeWrapper.html,1,['Test'],['TestTreeQuality']
Testability,"arch is used to bracket the maximum with the step size = (xmax-xmin)/fNpx. This way, the step size can be controlled via the SetNpx() function. If the function is unimodal or if its extrema are far apart, setting the fNpx to a small value speeds the algorithm up many times. Then, Brent's method is applied on the bracketed interval epsilon (default = 1.E-10) controls the relative accuracy (if |x| > 1 ) and absolute (if |x| < 1) and maxiter (default = 100) controls the maximum number of iteration of the Brent algorithm If the flag logx is set the grid search is done in log step size This is done automatically if the log scale is set in the current Pad; NOTE: see also TF1::GetX ; Definition at line 1655 of file TF1.cxx. ◆ GetMethodCall(). TMethodCall * TF1::GetMethodCall ; (; ); const. inline . Definition at line 522 of file TF1.h. ◆ GetMinimum(). Double_t TF1::GetMinimum ; (; Double_t ; xmin = 0, . Double_t ; xmax = 0, . Double_t ; epsilon = 1.E-10, . Int_t ; maxiter = 100, . Bool_t ; logx = false . ); const. virtual . Returns the minimum value of the function on the (xmin, xmax) interval. ; Method: First, the grid search is used to bracket the maximum with the step size = (xmax-xmin)/fNpx. This way, the step size can be controlled via the SetNpx() function. If the function is unimodal or if its extrema are far apart, setting the fNpx to a small value speeds the algorithm up many times. Then, Brent's method is applied on the bracketed interval epsilon (default = 1.E-10) controls the relative accuracy (if |x| > 1 ) and absolute (if |x| < 1) and maxiter (default = 100) controls the maximum number of iteration of the Brent algorithm If the flag logx is set the grid search is done in log step size This is done automatically if the log scale is set in the current Pad; NOTE: see also TF1::GetMaximumX and TF1::GetX ; Reimplemented in TF2.; Definition at line 1696 of file TF1.cxx. ◆ GetMinimumStored(). virtual Double_t TF1::GetMinimumStored ; (; ); const. inlinevirtual . Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:76907,log,logx,76907,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,1,['log'],['logx']
Testability,"archive request for the qry-th query in fQueries. ; Definition at line 6057 of file TProof.cxx. ◆ AskForOutput(). void TProof::AskForOutput ; (; TSlave * ; sl). private . Master asks for output from worker sl. ; Definition at line 4334 of file TProof.cxx. ◆ AskParallel(). void TProof::AskParallel ; (; ). private . Ask the for the number of parallel slaves. ; Definition at line 2077 of file TProof.cxx. ◆ AskStatistics(). void TProof::AskStatistics ; (; ). private . Ask the for the statistics of the slaves. ; Definition at line 2022 of file TProof.cxx. ◆ AssertDataSet(). Int_t TProof::AssertDataSet ; (; TDSet * ; dset, . TList * ; input, . TDataSetManager * ; mgr, . TString & ; emsg . ). staticprotected . Make sure that dataset is in the form to be processed. ; This may mean retrieving the relevant info from the dataset manager or from the attached input list. Returns 0 on success, -1 on error ; Definition at line 12014 of file TProof.cxx. ◆ AssertMacroPath(). void TProof::AssertMacroPath ; (; const char * ; macro). staticprotected . Make sure that the directory path contained by macro is in the macro path. ; Definition at line 8599 of file TProof.cxx. ◆ AssertPath(). Int_t TProof::AssertPath ; (; const char * ; path, . Bool_t ; writable . ). protected . Make sure that 'path' exists; if 'writable' is kTRUE, make also sure that the path is writable. ; Definition at line 1269 of file TProof.cxx. ◆ Broadcast() [1/6]. Int_t TProof::Broadcast ; (; const char * ; str, . Int_t ; kind, . TList * ; slaves . ). private . Broadcast a character string buffer to all slaves in the specified list. ; Use kind to set the TMessage what field. Returns the number of slaves the message was sent to. Returns -1 in case of error. ; Definition at line 2518 of file TProof.cxx. ◆ Broadcast() [2/6]. Int_t TProof::Broadcast ; (; const char * ; str, . Int_t ; kind = kMESS_STRING, . ESlaves ; list = kActive . ). private . Broadcast a character string buffer to all slaves in the specified list (eithe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:66223,Assert,AssertMacroPath,66223,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['Assert'],['AssertMacroPath']
Testability,"archy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::KDEKernel. class TMVA::KDEKernel. Function Members (Methods); public:. virtual~KDEKernel(); static TClass*Class(); Float_tGetBinKernelIntegral(Float_t lowr, Float_t highr, Float_t mean, Int_t binnum); const char*GetName() const; virtual TClass*IsA() const; TMVA::KDEKernelKDEKernel(const TMVA::KDEKernel&); TMVA::KDEKernelKDEKernel(TMVA::KDEKernel::EKernelIter kiter = kNonadaptiveKDE, const TH1* hist = 0, Float_t lower_edge = 0., Float_t upper_edge = 1., TMVA::KDEKernel::EKernelBorder kborder = kNoTreatment, Float_t FineFactor = 1.); TMVA::KDEKernel&operator=(const TMVA::KDEKernel&); voidSetKernelType(TMVA::KDEKernel::EKernelType ktype = kGauss); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. TMVA::MsgLogger&Log() const. Data Members; public:. static TMVA::KDEKernel::EKernelIterkAdaptiveKDE; static TMVA::KDEKernel::EKernelTypekGauss; static TMVA::KDEKernel::EKernelBorderkKernelRenorm; static TMVA::KDEKernel::EKernelBorderkNoTreatment; static TMVA::KDEKernel::EKernelIterkNonadaptiveKDE; static TMVA::KDEKernel::EKernelTypekNone; static TMVA::KDEKernel::EKernelBorderkSampleMirror. private:. Float_tfFineFactorfine tuning factor for Adaptive KDE: factor to multiply the ""width"" of the Kernel function; TH1F*fFirstIterHisthistogram to be filled in the hidden iteration; Bool_tfHiddenIterationDefines if whats currently running is the; TH1F*fHistcopy of input histogram; TMVA::KDEKernel::EKernelIterfIteriteration number; TMVA::KDEKernel::EKernelBorderfKDEborderThe method to take care about ""border"" effects; TF1*fKernel_integthe integral of the Kernel function; TMVA::MsgLogger*fLoggermessage logger; Float_tfLowerEdgethe lower edge of the PDF; Float_tfSigmaWidth of the Kernel function; TH1F*fSigmaHist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__KDEKernel.html:1074,Log,Log,1074,root/html602/TMVA__KDEKernel.html,https://root.cern,https://root.cern/root/html602/TMVA__KDEKernel.html,1,['Log'],['Log']
Testability,"are assumed to represent; 112 the rotation axis vector and the 4-th the rotation angle.; 113 The angle is assumed to be in the range (-pi,pi].; 114 The axis vector is automatically normalized to be a unit vector; 115 */; 116 template<class IT>; 117 void SetComponents(IT begin, IT end) {; 118 IT a = begin; IT b = ++begin; IT c = ++begin;; 119 fAxis.SetCoordinates(*a,*b,*c);; 120 fAngle = *(++begin);; 121 (void)end;; 122 assert (++begin==end);; 123 // re-normalize the vector; 124 double tot = fAxis.R();; 125 if (tot > 0) fAxis /= tot;; 126 }; 127 ; 128 /**; 129 Get the axis and then the angle into data specified by an iterator begin; 130 and another to the end of the desired data (4 past start).; 131 */; 132 template<class IT>; 133 void GetComponents(IT begin, IT end) const {; 134 IT a = begin; IT b = ++begin; IT c = ++begin;; 135 fAxis.GetCoordinates(*a,*b,*c);; 136 *(++begin) = fAngle;; 137 (void)end;; 138 assert (++begin==end);; 139 }; 140 ; 141 /**; 142 Get the axis and then the angle into data specified by an iterator begin; 143 */; 144 template<class IT>; 145 void GetComponents(IT begin) const {; 146 double ax,ay,az = 0;; 147 fAxis.GetCoordinates(ax,ay,az);; 148 *begin++ = ax;; 149 *begin++ = ay;; 150 *begin++ = az;; 151 *begin = fAngle;; 152 }; 153 ; 154 /**; 155 Set components from a non-zero vector (x,y,z) and an angle.; 156 Precondition: the Vector needs to implement x(), y(), z(), and unit(); 157 */; 158 template<class AnyVector>; 159 void SetComponents(const AnyVector & v, Scalar angle) {; 160 fAxis=v.unit();; 161 fAngle=angle;; 162 }; 163 ; 164 /**; 165 Set components into a non-zero vector (x,y,z) and an angle.; 166 The vector is intended to be a cartesian displacement vector; 167 but any vector class assignable from one will work.; 168 */; 169 template<class AnyVector>; 170 void GetComponents(AnyVector & axis, Scalar & angle) const {; 171 axis = fAxis;; 172 angle = fAngle;; 173 }; 174 ; 175 /**; 176 access to rotation axis; 177 */; 178 AxisVector Axis() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2AxisAngle_8h_source.html:4576,assert,assert,4576,doc/master/GenVector_2AxisAngle_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2AxisAngle_8h_source.html,1,['assert'],['assert']
Testability,"are supported. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual void gradient (double *) const;  ; virtual bool hasGradient () const;  ; virtual bool isBinnedDistribution (const RooArgSet &) const;  Tests if the distribution is binned. Unless overridden by derived classes, this always returns false. ;  ; bool isIdentical (const RooAbsArg &other, bool assumeSameType=false) const override;  ; virtual bool isOffsetting () const;  ; bool isSelectedComp () const;  If true, the current pdf is a selected component (for use in plotting) ;  ; void logEvalError (const char *message, const char *serverValueString=nullptr) const;  Log evaluation error message. ;  ; RooAbsMoment * mean (RooRealVar &obs);  ; RooAbsMoment * mean (RooRealVar &obs, const RooArgSet &nset);  ; virtual Int_t minTrialSamples (const RooArgSet &) const;  ; RooAbsMoment * moment (RooRealVar &obs, const RooArgSet &normObs, Int_t order, bool central, bool takeRoot, bool intNormObs);  Return function representing moment of p.d.f (normalized w.r.t given observables) of given order. ;  ; RooAbsMoment * moment (RooRealVar &obs, Int_t order, bool central, bool takeRoot);  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFFTConvPdf.html:33909,Test,Tests,33909,doc/master/classRooFFTConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooFFTConvPdf.html,1,['Test'],['Tests']
Testability,"are tbb::task_arena without forward declaring tbb::interface7 ;  . Functions; static Bool_t AlmostEqual (Double_t a, Double_t b, Double_t epsilon=0.00000001);  Test if two double are almost equal. ;  ; static Bool_t AlmostInteger (Double_t a, Double_t epsilon=0.00000001);  Test if a double is almost an integer. ;  ; void H1InitExpo ();  Compute Initial values of parameters for an exponential. ;  ; void H1InitGaus ();  Compute Initial values of parameters for a gaussian. ;  ; void H1InitPolynom ();  Compute Initial values of parameters for a polynom. ;  ; void H1LeastSquareFit (Int_t n, Int_t m, Double_t *a);  Least squares lpolynomial fitting without weights. ;  ; void H1LeastSquareLinearFit (Int_t ndata, Double_t &a0, Double_t &a1, Int_t &ifail);  Least square linear fit without weights. ;  ; void H1LeastSquareSeqnd (Int_t n, Double_t *a, Int_t idim, Int_t &ifail, Int_t k, Double_t *b);  Extracted from CERN Program library routine DSEQN. ;  ; static bool IsEquidistantBinning (const TAxis &axis);  Test if the binning is equidistant. ;  ; TH1C operator* (const TH1C &h1, const TH1C &h2);  Operator *. ;  ; TH1D operator* (const TH1D &h1, const TH1D &h2);  Operator *. ;  ; TH1F operator* (const TH1F &h1, const TH1F &h2);  Operator *. ;  ; TH1I operator* (const TH1I &h1, const TH1I &h2);  Operator *. ;  ; TH1L operator* (const TH1L &h1, const TH1L &h2);  Operator *. ;  ; TH1S operator* (const TH1S &h1, const TH1S &h2);  Operator *. ;  ; TH1C operator* (Double_t c1, const TH1C &h1);  Operator *. ;  ; TH1D operator* (Double_t c1, const TH1D &h1);  Operator *. ;  ; TH1F operator* (Double_t c1, const TH1F &h1);  Operator *. ;  ; TH1I operator* (Double_t c1, const TH1I &h1);  Operator *. ;  ; TH1L operator* (Double_t c1, const TH1L &h1);  Operator *. ;  ; TH1S operator* (Double_t c1, const TH1S &h1);  Operator *. ;  ; TH1C operator+ (const TH1C &h1, const TH1C &h2);  Operator +. ;  ; TH1D operator+ (const TH1D &h1, const TH1D &h2);  Operator +. ;  ; TH1F operator+ (const TH1F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx.html:2430,Test,Test,2430,doc/master/TH1_8cxx.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx.html,1,['Test'],['Test']
Testability,"are the most ""burned"" volumes during transportation from geometry point of view. Another plot of the timing per volume vs. number of daughters is produced. ; Definition at line 3811 of file TGeoManager.cxx. ◆ CheckOverlaps(). void TGeoManager::CheckOverlaps ; (; Double_t ; ovlp = 0.1, . Option_t * ; option = """" . ). Check all geometry for illegal overlaps within a limit OVLP. ; Definition at line 3869 of file TGeoManager.cxx. ◆ CheckPath(). Bool_t TGeoManager::CheckPath ; (; const char * ; path); const. Check if a geometry path is valid without changing the state of the current navigator. ; Definition at line 1715 of file TGeoManager.cxx. ◆ CheckPoint(). void TGeoManager::CheckPoint ; (; Double_t ; x = 0, . Double_t ; y = 0, . Double_t ; z = 0, . Option_t * ; option = """", . Double_t ; safety = 0. . ). Classify a given point. See TGeoChecker::CheckPoint(). ; Definition at line 3770 of file TGeoManager.cxx. ◆ CheckShape(). void TGeoManager::CheckShape ; (; TGeoShape * ; shape, . Int_t ; testNo, . Int_t ; nsamples, . Option_t * ; option . ). Test for shape navigation methods. ; Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate directions randomly in cos(theta). Compute DistFromInside and move the point with bigger distance. Compute DistFromOutside back from new point. Plot d-(d1+d2) . Definition at line 3783 of file TGeoManager.cxx. ◆ Class(). static TClass * TGeoManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 605 of file TGeoManager.h. ◆ CleanGarbage(). void TGeoManager::CleanGarbage ; (; ). Clean temporary volumes and shapes from garbage collection. ; Definition at line 1627 of file TGeoManager.cxx. ◆ ClearAttributes(). void TGeoManager::ClearAtt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManager.html:76629,test,testNo,76629,doc/master/classTGeoManager.html,https://root.cern,https://root.cern/doc/master/classTGeoManager.html,1,['test'],['testNo']
Testability,"areCompatibilityOptions ; (; ). privatevirtual . options that are used ONLY for the READER to ensure backward compatibility ; Reimplemented from TMVA::MethodBase.; Definition at line 251 of file MethodSVM.cxx. ◆ DeclareOptions(). void TMVA::MethodSVM::DeclareOptions ; (; ). privatevirtual . declare options available for this method ; Implements TMVA::MethodBase.; Definition at line 220 of file MethodSVM.cxx. ◆ DeclFileName(). static const char * TMVA::MethodSVM::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 165 of file MethodSVM.h. ◆ GetHelpMessage(). void TMVA::MethodSVM::GetHelpMessage ; (; ); const. protectedvirtual . get help message text ; typical length of text line: ""|--------------------------------------------------------------|"" ; Implements TMVA::IMethod.; Definition at line 715 of file MethodSVM.cxx. ◆ getLoss(). Double_t TMVA::MethodSVM::getLoss ; (; TString ; lossFunction). private . getLoss Calculates loss for testing dataset. ; The loss function can be specified when booking the method, otherwise defaults to hinge loss. Currently not used however is accesible if required. ; Definition at line 1163 of file MethodSVM.cxx. ◆ GetMGamma(). void TMVA::MethodSVM::GetMGamma ; (; const std::vector< float > & ; gammas). Produces GammaList string for multigaussian kernel to be written to xml file. ; Definition at line 1032 of file MethodSVM.cxx. ◆ GetMvaValue(). Double_t TMVA::MethodSVM::GetMvaValue ; (; Double_t * ; err = nullptr, . Double_t * ; errUpper = nullptr . ). virtual . returns MVA value for given event ; Implements TMVA::MethodBase.; Definition at line 577 of file MethodSVM.cxx. ◆ GetRegressionValues(). const std::vector< Float_t > & TMVA::MethodSVM::GetRegressionValues ; (; ). virtual . Reimplemented from TMVA::MethodBase.; Definition at line 602 of file MethodSVM.cxx. ◆ GetTuningOptions(). std::map< TString, std::vector< Double_t > > TMVA::MethodSVM::GetTuningOptions ; (; ). GetTuni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodSVM.html:32660,test,testing,32660,doc/master/classTMVA_1_1MethodSVM.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodSVM.html,1,['test'],['testing']
Testability,"aredProperties > && ; prop). protected . Install the shared property into the member _sharedProp. ; If a property with same name already exists, discard the incoming one, and share the existing. nullptr and properties equal to the RooRealVar::_nullProp will not be installed. ; Definition at line 1294 of file RooRealVar.cxx. ◆ IsA(). TClass * RooRealVar::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsRealLValue.; Definition at line 173 of file RooRealVar.h. ◆ isDerived(). bool RooRealVar::isDerived ; (; ); const. inlineoverridevirtual . Does value or shape of this arg depend on any other arg? ; Reimplemented from RooAbsArg.; Definition at line 109 of file RooRealVar.h. ◆ isFundamental(). bool RooRealVar::isFundamental ; (; ); const. inlineoverridevirtual . Is this object a fundamental type that can be added to a dataset? Fundamental-type subclasses override this method to return true. ; Note that this test is subtlely different from the dynamic isDerived() test, e.g. a constant is not derived but is also not fundamental. ; Reimplemented from RooAbsArg.; Definition at line 106 of file RooRealVar.h. ◆ operator=(). RooAbsArg & RooAbsRealLValue::operator= ; (; double ; newValue). virtual . Assignment operator from a double. ; Reimplemented from RooAbsRealLValue.; Definition at line 46 of file RooAbsRealLValue.cxx. ◆ printExtras(). void RooRealVar::printExtras ; (; std::ostream & ; os); const. overridevirtual . Print extras of variable: (asymmetric) error, constant flag, limits and binning. ; Reimplemented from RooPrintable.; Definition at line 780 of file RooRealVar.cxx. ◆ printMultiline(). void RooRealVar::printMultiline ; (; std::ostream & ; os, . Int_t ; contents, . bool ; verbose = false, . TString ; indent = """" . ); const. overridevirtual . Detailed printing interface. ; Reimplemented from RooAbsRealLValue.; Definition at line 832 of file RooRealVar.cxx. ◆ printScientific(). void RooRealVar::printScienti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:83710,test,test,83710,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,2,['test'],['test']
Testability,"ared_ptr< IModelFunction > & ; func, . int ; weight = 0, . bool ; extended = false, . const ::ROOT::EExecutionPolicy & ; executionPolicy = ::ROOT::EExecutionPolicy::kSequential . ). inline . Constructor from unbin data set and model function (pdf) ; Definition at line 57 of file LogLikelihoodFCN.h. ◆ LogLikelihoodFCN() [2/3]. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::LogLikelihoodFCN ; (; const UnBinData & ; data, . const IModelFunction & ; func, . int ; weight = 0, . bool ; extended = false, . const ::ROOT::EExecutionPolicy & ; executionPolicy = ::ROOT::EExecutionPolicy::kSequential . ). inline . Constructor from unbin data set and model function (pdf) for object managed by users. ; Definition at line 69 of file LogLikelihoodFCN.h. ◆ ~LogLikelihoodFCN(). template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . virtual ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::~LogLikelihoodFCN ; (; ). inlinevirtual . Destructor (no operations) ; Definition at line 81 of file LogLikelihoodFCN.h. ◆ LogLikelihoodFCN() [3/3]. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::LogLikelihoodFCN ; (; const LogLikelihoodFCN< DerivFunType, ModelFunType > & ; f). inline . Copy constructor. ; Definition at line 86 of file LogLikelihoodFCN.h. Member Function Documentation. ◆ Clone(). template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . virtual BaseFunction * ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::Clone ; (; ); const. inlinevirtual . clone the function (need to return Base for Windows) ; Definition at line 112 of file LogLikelihoodFCN.h. ◆ DataElement(). template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . virtual double ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html:9115,Log,LogLikelihoodFCN,9115,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,2,['Log'],['LogLikelihoodFCN']
Testability,"arencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Float_t PolygonSurfaceXY (const Polygon_t &poly) const;  Calculate XY surface of a polygon. ;  ; void SetDepthLocal (Float_t d) override;  Set depth (z-coordinate) of the projected points. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  . Protected Attributes; Int_t fNPnts;  ; TEveVector * fPnts;  ; vpPolygon_t fPols;  ; vpPolygon_t fPolsBP;  ; vpPolygon_t fPolsBS;  ;  Protected Attributes inherited from TEveShape; Bool_t fDrawFrame;  ; Color_t fFillColor;  ; Bool_t fHighlightFrame;  ; Color_t fLineColor;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePolygonSetProjected.html:34833,Assert,AssertBBoxExtents,34833,doc/master/classTEvePolygonSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEvePolygonSetProjected.html,1,['Assert'],['AssertBBoxExtents']
Testability,"arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; const RooCatType*lookupType(Int_t index, Bool_t printError = kFALSE) const; const RooCatType*lookupType(const char* label, Bool_t printError = kFALSE) const; const RooCatType*lookupType(const RooCatType& type, Bool_t printError = kFALSE) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Int_tnumTypes(const char* = 0) const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Bool_toperator!=(Int_t index); Bool_toperator!=(const char* label); Bool_toperator!=(const RooAbsArg& other); TNamed&TNamed::operator=(const TNamed& rhs); Bool_toperator==(Int_t index) const; Bool_toperator==(const char* label) const; virtual Bool_toperator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsCategory.html:10420,test,testArg,10420,root/html534/RooAbsCategory.html,https://root.cern,https://root.cern/root/html534/RooAbsCategory.html,1,['test'],['testArg']
Testability,"arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; const RooCatType*lookupType(Int_t index, Bool_t printError = kFALSE) const; const RooCatType*lookupType(const char* label, Bool_t printError = kFALSE) const; const RooCatType*lookupType(const RooCatType& type, Bool_t printError = kFALSE) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Int_tnumTypes(const char* = 0) const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Bool_toperator!=(Int_t index); Bool_toperator!=(const char* label); Bool_toperator!=(const RooAbsArg& other); RooAbsCategory&operator=(const RooAbsCategory&); Bool_toperator==(Int_t index) const; Bool_toperator==(const char* label) const; virtual Bool_toperator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& proc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsCategory.html:10415,test,testArg,10415,root/html602/RooAbsCategory.html,https://root.cern,https://root.cern/root/html602/RooAbsCategory.html,2,['test'],['testArg']
Testability,"arg6={});  Add a message logging stream for message with given RooFit::MsgLevel or higher. ;  ; void clearErrorCount ();  ; Int_t & debugCode ();  ; RooWorkspace * debugWorkspace ();  ; void deleteStream (Int_t id);  Delete stream with given unique ID code. ;  ; Int_t errorCount () const;  ; StreamConfig & getStream (Int_t id);  ; bool getStreamStatus (Int_t id) const;  Get activation status of stream with given unique ID. ;  ; RooFit::MsgLevel globalKillBelow () const;  ; TClass * IsA () const override;  ; template<class T > ; bool isActive (T self, RooFit::MsgTopic topic, RooFit::MsgLevel level);  Check if logging is active for given object/topic/RooFit::MsgLevel combination. ;  ; std::ostream & log (const RooAbsArg *self, RooFit::MsgLevel level, RooFit::MsgTopic facility, bool forceSkipPrefix=false);  Log error message associated with RooAbsArg object self at given level and topic. ;  ; std::ostream & log (const TObject *self, RooFit::MsgLevel level, RooFit::MsgTopic facility, bool forceSkipPrefix=false);  Log error message associated with TObject object self at given level and topic. ;  ; std::ostream & log (std::nullptr_t, RooFit::MsgLevel level, RooFit::MsgTopic facility, bool forceSkipPrefix=false);  ; Int_t numStreams () const;  ; void Print (Option_t *options=nullptr) const override;  Print configuration of message service. ;  ; void reset ();  ; void restoreState ();  Restore last saved state of message service. ;  ; void saveState ();  Save current state of message service. ;  ; void setGlobalKillBelow (RooFit::MsgLevel level);  ; void setSilentMode (bool flag);  ; void setStreamStatus (Int_t id, bool active);  (De)Activate stream with given unique ID ;  ; void showPid (bool flag);  ; bool silentMode () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMsgService.html:3692,log,log,3692,doc/master/classRooMsgService.html,https://root.cern,https://root.cern/doc/master/classRooMsgService.html,2,"['Log', 'log']","['Log', 'log']"
Testability,"arg8 = RooCmdArg::none()); virtual RooPlot*RooAbsData::statOn(RooPlot* frame, const char* what, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.14999999999999999, Double_t xmax = 0.65000000000000002, Double_t ymax = 0.84999999999999998, const char* cutSpec = 0, const char* cutRange = 0, const RooCmdArg* formatCmd = 0); RooAbsDataStore*RooAbsData::store(); const RooAbsDataStore*RooAbsData::store() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual Double_tRooAbsData::sumEntries() const; virtual Double_tRooAbsData::sumEntries(const char* cutSpec, const char* cutRange = 0) const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual Roo1DTable*RooAbsData::table(const RooArgSet& catSet, const char* cuts = """", const char* opts = """") const; virtual Roo1DTable*RooAbsData::table(const RooAbsCategory& cat, const char* cuts = """", const char* opts = """") const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const TTree*RooAbsData::tree() const; virtual voidTObject::UseCurrentStyle(); virtual Bool_tRooAbsData::valid() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Double_tRooAbsData::weight() const; virtual Double_tRooAbsData::weightError(RooAbsData::ErrorType etype = Poisson) const; virtual voidRooAbsData::weightError(Double_t& lo, Double_t& hi, RooAbsData::ErrorType etype = Poisson) const; virtual Double_tRooAbsData::weightSquared() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. Bool_tRooAbsData::allClientsCached(RooAbsArg*, const RooArgSet&); virtual voidRooAbsData::attachCache(const RooAbsArg* newOwner, const RooArgSet& cachedVars); virtual voidRooAbsData::cacheArgs(const RooAbsArg* owner, RooArgSet& varSet, const RooArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooTreeData.html:12213,Test,TestBit,12213,root/html602/RooTreeData.html,https://root.cern,https://root.cern/root/html602/RooTreeData.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"arget&fFitterTargetthe fitter target; Double_tfLastResultremembers the last obtained result (for internal use); TMVA::MsgLogger*fLoggermessage logger; Bool_tfMakeCopiesif true, the population will make copies of the first individuals; Bool_tfMirrornew values for mutation are mirror-mapped if outside of constraints; TMVA::GeneticPopulationfPopulationcontains and controls the ""individual""; Int_tfPopulationSizethe size of the population; const vector<TMVA::Interval*>&fRangesparameter ranges; Double_tfSpreadregulates the spread of the value change at mutation (sigma); deque<Int_t>fSuccessListto adjust the stepSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticAlgorithm(TMVA::IFitterTarget& target, Int_t populationSize, const vector<TMVA::Interval*>& ranges, UInt_t seed = 0); Constructor; Parameters:; int populationSize : defines the number of ""Individuals"" which are created and tested; within one Generation (Iteration of the Evolution); std::vector<TMVA::Interval*> ranges : Interval holds the information of an interval, where the GetMin; gets the low and GetMax gets the high constraint of the variable; the size of ""ranges"" is the number of coefficients which are optimised; Purpose:; Creates a random population with individuals of the size ranges.size(). ~GeneticAlgorithm(); destructor; deletes fLogger. void Init(); calls evolution, but if it is not the first time.; If it's the first time, the random population created by the; constructor is still not evaluated, .. therefore we wait for the; second time init is called. Double_t NewFitness(Double_t oldValue, Double_t newValue); if the ""fitnessFunction"" is called multiple times for one set of; factors (because i.e. each event of a TTree has to be assessed with; each set of Factors proposed by the Genetic Algorithm) the value; of the current calculation has to be added(? or else) to the value; obtained up to now.; example: some chi-square is calculated for every event,; a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__GeneticAlgorithm.html:2596,test,tested,2596,root/html602/TMVA__GeneticAlgorithm.html,https://root.cern,https://root.cern/root/html602/TMVA__GeneticAlgorithm.html,2,['test'],['tested']
Testability,"arget(Bool_t onoff); virtual voidTGFrame::SetDragType(Int_t type); virtual voidTGFrame::SetDrawOption(Option_t* = """"); virtual voidTGFrame::SetDropType(Int_t type); static voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); voidUpdateName(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGuiBldNameFrame.html:14315,Test,TestBit,14315,root/html528/TGuiBldNameFrame.html,https://root.cern,https://root.cern/root/html528/TGuiBldNameFrame.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"arget; 113 ; 114Bool_t TMVA::MethodDNN::HasAnalysisType(Types::EAnalysisType type,; 115 UInt_t numberClasses,; 116 UInt_t /*numberTargets*/ ); 117{; 118 if (type == Types::kClassification && numberClasses == 2 ) return kTRUE;; 119 if (type == Types::kMulticlass ) return kTRUE;; 120 if (type == Types::kRegression ) return kTRUE;; 121 ; 122 return kFALSE;; 123}; 124 ; 125////////////////////////////////////////////////////////////////////////////////; 126/// default initializations; 127 ; 128void TMVA::MethodDNN::Init() {; 129 Log() << kWARNING; 130 << ""MethodDNN is deprecated and it will be removed in future ROOT version. ""; 131 ""Please use MethodDL ( TMVA::kDL)""; 132 << Endl;; 133 ; 134}; 135 ; 136////////////////////////////////////////////////////////////////////////////////; 137/// Options to be set in the option string:; 138///; 139/// - LearningRate <float> DNN learning rate parameter.; 140/// - DecayRate <float> Decay rate for learning parameter.; 141/// - TestRate <int> Period of validation set error computation.; 142/// - BatchSize <int> Number of event per batch.; 143///; 144/// - ValidationSize <string> How many events to use for validation. ""0.2""; 145/// or ""20%"" indicates that a fifth of the; 146/// training data should be used. ""100""; 147/// indicates that 100 events should be used.; 148 ; 149void TMVA::MethodDNN::DeclareOptions(); 150{; 151 ; 152 DeclareOptionRef(fLayoutString=""SOFTSIGN|(N+100)*2,LINEAR"",; 153 ""Layout"",; 154 ""Layout of the network."");; 155 ; 156 DeclareOptionRef(fValidationSize = ""20%"", ""ValidationSize"",; 157 ""Part of the training data to use for ""; 158 ""validation. Specify as 0.2 or 20% to use a ""; 159 ""fifth of the data set as validation set. ""; 160 ""Specify as 100 to use exactly 100 events. ""; 161 ""(Default: 20%)"");; 162 ; 163 DeclareOptionRef(fErrorStrategy=""CROSSENTROPY"",; 164 ""ErrorStrategy"",; 165 ""Loss function: Mean squared error (regression)""; 166 "" or cross entropy (binary classification)."");; 167 AddPreDefVal(TString(""CROSSEN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:4816,Test,TestRate,4816,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['Test'],['TestRate']
Testability,"argument; use format:; //; // mylinux~> root -l TMVAClassification.C\‍(\""myMethod1,myMethod2,myMethod3\""\‍); ; //---------------------------------------------------------------; // This loads the library; TMVA::Tools::Instance();; ; // Default MVA methods to be trained + tested; std::map<std::string,int> Use;; ; // Cut optimisation; Use[""Cuts""] = 1;; Use[""CutsD""] = 1;; Use[""CutsPCA""] = 0;; Use[""CutsGA""] = 0;; Use[""CutsSA""] = 0;; //; // 1-dimensional likelihood (""naive Bayes estimator""); Use[""Likelihood""] = 1;; Use[""LikelihoodD""] = 0; // the ""D"" extension indicates decorrelated input variables (see option strings); Use[""LikelihoodPCA""] = 1; // the ""PCA"" extension indicates PCA-transformed input variables (see option strings); Use[""LikelihoodKDE""] = 0;; Use[""LikelihoodMIX""] = 0;; //; // Mutidimensional likelihood and Nearest-Neighbour methods; Use[""PDERS""] = 1;; Use[""PDERSD""] = 0;; Use[""PDERSPCA""] = 0;; Use[""PDEFoam""] = 1;; Use[""PDEFoamBoost""] = 0; // uses generalised MVA method boosting; Use[""KNN""] = 1; // k-nearest neighbour method; //; // Linear Discriminant Analysis; Use[""LD""] = 1; // Linear Discriminant identical to Fisher; Use[""Fisher""] = 0;; Use[""FisherG""] = 0;; Use[""BoostedFisher""] = 0; // uses generalised MVA method boosting; Use[""HMatrix""] = 0;; //; // Function Discriminant analysis; Use[""FDA_GA""] = 1; // minimisation of user-defined function using Genetics Algorithm; Use[""FDA_SA""] = 0;; Use[""FDA_MC""] = 0;; Use[""FDA_MT""] = 0;; Use[""FDA_GAMT""] = 0;; Use[""FDA_MCMT""] = 0;; //; // Neural Networks (all are feed-forward Multilayer Perceptrons); Use[""MLP""] = 0; // Recommended ANN; Use[""MLPBFGS""] = 0; // Recommended ANN with optional training method; Use[""MLPBNN""] = 1; // Recommended ANN with BFGS training method and bayesian regulator; Use[""CFMlpANN""] = 0; // Depreciated ANN from ALEPH; Use[""TMlpANN""] = 0; // ROOT's own ANN; #ifdef R__HAS_TMVAGPU; Use[""DNN_GPU""] = 1; // CUDA-accelerated DNN training.; #else; Use[""DNN_GPU""] = 0;; #endif; ; #ifdef R__HAS_TMVACPU; Use[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:81531,test,tested,81531,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['test'],['tested']
Testability,"arguments:; id - unique drawable id.; logicalShape - bound logical shape; transform - 16 Double_t component transform for placement of logical drawing; invertedWind - use inverted face polygon winding?; rgba - basic four component (RGBA) diffuse color. ~TGLPhysicalShape(); Destroy the physical shape. void AddReference(TGLPShapeRef* ref); Add reference ref. void RemoveReference(TGLPShapeRef* ref); Remove reference ref. void Modified(); Call this after modifying the physical so that the information; can be propagated to the object referencing it. void UpdateBoundingBox(); Update our internal bounding box (in global frame). void InitColor(const Float_t* rgba); Initialise the colors, using basic RGBA diffuse material color supplied. void SetColor(const Float_t* rgba); Set full color attributes - see OpenGL material documentation; for full description.; 0->3 diffuse, 4->7 ambient, 8->11 specular, 12->15 emission, 16 shininess. void SetColorOnFamily(const Float_t* rgba); Set full color attributes to all physicals sharing the same; logical with this object. void SetDiffuseColor(const Float_t rgba[4]); Set color from ROOT color index and transparency [0,100]. void SetDiffuseColor(const UChar_t rgba[4]); Set color from RGBA quadruplet. void SetDiffuseColor(Color_t ci, UChar_t transparency); Set color from standard ROOT representation, that is color index; + transparency in range [0, 100]. void SetupGLColors(TGLRnrCtx& rnrCtx, const Float_t* color = 0) const; Setup colors - avoid setting things not required; for current draw flags. void Draw(TGLRnrCtx& rnrCtx) const; Draw physical shape, using LOD flags, potential from display list cache. void CalculateShapeLOD(TGLRnrCtx& rnrCtx, Float_t& pixSize, Short_t& shapeLOD) const; Calculate shape-lod, suitible for use under; projection defined by 'rnrCtx', taking account of which local; axes of the shape support LOD adjustment, and the global; 'sceneFlags' passed. Returned shapeLOD component is from 0 (kLODPixel - lowest; quality) to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLPhysicalShape.html:5996,log,logical,5996,root/html528/TGLPhysicalShape.html,https://root.cern,https://root.cern/root/html528/TGLPhysicalShape.html,4,['log'],['logical']
Testability,"ari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TIconBoxThumb(). TIconBoxThumb::TIconBoxThumb ; (; const char * ; name, . const TGPicture * ; spic, . const TGPicture * ; pic . ). inline . Definition at line 244 of file TRootBrowserLite.cxx. Member Function Documentation. ◆ GetName(). const char * TIconBoxThumb::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 250 of file TRootBrowserLite.cxx. ◆ Hash(). ULong_t TIconBoxThumb::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TIconBoxThumb::HashULong_t Hash() const overrideReturn hash value for this object.Definition TRootBrowserLite.cxx:249; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIconBoxThumb.html:10738,Test,TestBit,10738,doc/master/classTIconBoxThumb.html,https://root.cern,https://root.cern/doc/master/classTIconBoxThumb.html,1,['Test'],['TestBit']
Testability,"ariable(). RooRealVar * RooFactoryWSTool::createVariable ; (; const char * ; name, . double ; xmin, . double ; xmax . ). Low-level factory interface for creating a RooRealVar with a given range and initial value. ; Definition at line 126 of file RooFactoryWSTool.cxx. ◆ DeclFileName(). static const char * RooFactoryWSTool::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 199 of file RooFactoryWSTool.h. ◆ errorCount(). Int_t RooFactoryWSTool::errorCount ; (; ). inlineprotected . Definition at line 193 of file RooFactoryWSTool.h. ◆ hooks(). std::map< std::string, RooFactoryWSTool::IFace * > & RooFactoryWSTool::hooks ; (; ). staticprotected . Definition at line 1900 of file RooFactoryWSTool.cxx. ◆ IsA(). TClass * RooFactoryWSTool::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 199 of file RooFactoryWSTool.h. ◆ logError(). void RooFactoryWSTool::logError ; (; ). inline . Definition at line 153 of file RooFactoryWSTool.h. ◆ of(). RooFactoryWSTool * RooFactoryWSTool::of ; (; ). staticprotected . Definition at line 2195 of file RooFactoryWSTool.cxx. ◆ process(). RooAbsArg * RooFactoryWSTool::process ; (; const char * ; expr). Create a RooFit object from the given expression. . Creating variables . x[-10,10] Create variable x with given range and put it in workspace . x[3,-10,10] Create variable x with given range and initial value and put it in workspace . x[3] Create variable x with given constant value . <numeric literal> Numeric literal expressions (0.5, -3 etc..) are converted to a RooConst(<numeric literal>) wherever a RooAbsReal or RooAbsArg argument is expected . Creating categories . c[lep,kao,nt1,nt2] Create category c with given state names . tag[B0=1,B0bar=-1] Create category tag with given state names and index assignments . Creating functions and pdfs . MyPdf::g(x,m,s) Create pdf or function of type MyPdf with na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFactoryWSTool.html:32308,log,logError,32308,doc/master/classRooFactoryWSTool.html,https://root.cern,https://root.cern/doc/master/classRooFactoryWSTool.html,1,['log'],['logError']
Testability,"ariable(xvar,0,i);; 950 // fClingVariables.push_back(0);; 951 // }; 952 ; 953 for (auto con : defconsts) {; 954 fConsts[con.first] = con.second;; 955 }; 956 if (fVectorized) {; 957 FillVecFunctionsShurtCuts();; 958 } else {; 959 for (auto fun : funShortcuts) {; 960 fFunctionsShortcuts[fun.first] = fun.second;; 961 }; 962 }; 963}; 964 ; 965////////////////////////////////////////////////////////////////////////////////; 966/// Fill the shortcuts for vectorized functions; 967/// We will replace for example sin with vecCore::Mat::Sin; 968///; 969 ; 970void TFormula::FillVecFunctionsShurtCuts() {; 971#ifdef R__HAS_VECCORE; 972 const pair<TString,TString> vecFunShortcuts[] =; 973 { {""sin"",""vecCore::math::Sin"" },; 974 {""cos"",""vecCore::math::Cos"" }, {""exp"",""vecCore::math::Exp""}, {""log"",""vecCore::math::Log""}, {""log10"",""vecCore::math::Log10""},; 975 {""tan"",""vecCore::math::Tan""},; 976 //{""sinh"",""vecCore::math::Sinh""}, {""cosh"",""vecCore::math::Cosh""},{""tanh"",""vecCore::math::Tanh""},; 977 {""asin"",""vecCore::math::ASin""},; 978 {""acos"",""TMath::Pi()/2-vecCore::math::ASin""},; 979 {""atan"",""vecCore::math::ATan""},; 980 {""atan2"",""vecCore::math::ATan2""}, {""sqrt"",""vecCore::math::Sqrt""},; 981 {""ceil"",""vecCore::math::Ceil""}, {""floor"",""vecCore::math::Floor""}, {""pow"",""vecCore::math::Pow""},; 982 {""cbrt"",""vecCore::math::Cbrt""},{""abs"",""vecCore::math::Abs""},; 983 {""min"",""vecCore::math::Min""},{""max"",""vecCore::math::Max""},{""sign"",""vecCore::math::Sign"" }; 984 //{""sq"",""TMath::Sq""}, {""binomial"",""TMath::Binomial""} // this last two functions will not work in vectorized mode; 985 };; 986 // replace in the data member maps fFunctionsShortcuts; 987 for (auto fun : vecFunShortcuts) {; 988 fFunctionsShortcuts[fun.first] = fun.second;; 989 }; 990#endif; 991 // do nothing in case Veccore is not enabled; 992}; 993 ; 994 ; 995////////////////////////////////////////////////////////////////////////////////; 996/// Handling polN; 997/// If before 'pol' exist any name, this name will be treated as variable used in pol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:35403,log,log,35403,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,2,"['Log', 'log']","['Log', 'log']"
Testability,ariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  efficienciesMulticlass.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  ► src;  annconvergencetest.cxx;  BDT.cxx;  BDT_Reg.cxx;  BDTControlPlots.cxx;  BoostControlPlots.cxx;  compareanapp.cxx;  correlations.cxx;  correlationscatters.cxx;  correlationscattersMultiClass.cxx;  correlationsMultiClass.cxx;  CorrGui.cxx;  CorrGuiMultiClass.cxx;  deviations.cxx;  efficiencies.cxx;  efficienciesMulticlass.cxx,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:93120,Test,TestMinimizationCuda,93120,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['Test'],['TestMinimizationCuda']
Testability,ariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  LinkDef.h;  ► src;  annconvergencetest.cxx;  BDT.cxx;  BDT_Reg.cxx;  BDTControlPlots.cxx;  BoostControlPlots.cxx;  compareanapp.cxx;  correlations.cxx;  correlationscatters.cxx;  correlationscattersMultiClass.cxx;  correlationsMultiClass.cxx;  CorrGui.cxx;  CorrGuiMultiClass.cxx;  deviations.cxx;  efficiencies.cxx;  likelihoodrefs.cxx;  MovieMaker.cxx;  mva,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:94917,Test,TestMinimizationCuda,94917,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['Test'],['TestMinimizationCuda']
Testability,"ariableInfo(iv).GetLabel());; 1766 for (Int_t jm = 0; jm < nmeth; jm++) {; 1767 varmvaMatS(iv, jm) = (*corrMatS)(nmeth + iv, jm);; 1768 varmvaMatB(iv, jm) = (*corrMatB)(nmeth + iv, jm);; 1769 }; 1770 }; 1771 ; 1772 if (nmeth > 1) {; 1773 Log() << kINFO << Endl;; 1774 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1775 << ""Inter-MVA correlation matrix (signal):"" << Endl;; 1776 gTools().FormattedOutput(mvaMatS, *theVars, Log());; 1777 Log() << kINFO << Endl;; 1778 ; 1779 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1780 << ""Inter-MVA correlation matrix (background):"" << Endl;; 1781 gTools().FormattedOutput(mvaMatB, *theVars, Log());; 1782 Log() << kINFO << Endl;; 1783 }; 1784 ; 1785 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1786 << ""Correlations between input variables and MVA response (signal):"" << Endl;; 1787 gTools().FormattedOutput(varmvaMatS, theInputVars, *theVars, Log());; 1788 Log() << kINFO << Endl;; 1789 ; 1790 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1791 << ""Correlations between input variables and MVA response (background):"" << Endl;; 1792 gTools().FormattedOutput(varmvaMatB, theInputVars, *theVars, Log());; 1793 Log() << kINFO << Endl;; 1794 } else; 1795 Log() << kWARNING << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1796 << ""<TestAllMethods> cannot compute correlation matrices"" << Endl;; 1797 ; 1798 // print overlap matrices; 1799 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1800 << ""The following \""overlap\"" matrices contain the fraction of events for which "" << Endl;; 1801 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1802 << ""the MVAs 'i' and 'j' have returned conform answers about \""signal-likeness\"""" << Endl;; 1803 Log() << kINFO << Form(""Dataset[%s] : "", method->fDataSetInfo.GetName()); 1804 << ""An event is signal-like, if its MVA output exceeds the following v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:73793,Log,Log,73793,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,3,['Log'],['Log']
Testability,"ariables() const; voidTObject::MakeZombie(); voidTMVA::VariableTransformBase::SetCreated(Bool_t c = kTRUE); voidTMVA::VariableTransformBase::SetName(const TString& c); voidTMVA::VariableTransformBase::SetNVariables(UInt_t i); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). private:. voidCalculatePrincipalComponents(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); vector<Float_t>X2P(const vector<Float_t>&, Int_t cls) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<TMatrixD*>fEigenVectorseigenvectors; vector<TVectorD*>fMeanValuesmean values. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariablePCATransform( DataSetInfo& dsi ); constructor. ~VariablePCATransform(); destructor. void Initialize(); initialization of the transformation.; Has to be called in the preparation and not in the constructor,; since the number of classes it not known at construction, but; only after the creation of the DataSet which might be later. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); calculate the principal components using the ROOT class TPrincipal; and the normalization. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; apply the principal component an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__VariablePCATransform.html:7778,log,logger,7778,root/html528/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html528/TMVA__VariablePCATransform.html,1,['log'],['logger']
Testability,"aries. Function documentation; UnionBuilderImpl(const char* nam, size_t size, const type_info& ti, unsigned int modifiers = 0, Reflex::TYPE typ = UNION); constructor . virtual ~UnionBuilderImpl(); destructor . void AddItem(const char* nam, const Reflex::Type& typ). * AddItem will add one union item; * @param Name the Name of the union item; * @param At the At of the union item. void AddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); AddDataMember will add the information about one data; * MemberAt of the union; *; * @param Name of the data MemberAt; * @param At of the data MemberAt; * @param Offset of the data MemberAt; * @param modifiers the modifiers of the data MemberAt. AddFunctionMember will add the information about one; * function MemberAt of the union; *; * @param Name of the function MemberAt; * @param At of the function MemberAt; * @param stubFP Stub function pointer for the function; * @param stubCxt Stub user context for the stub function; * @param params parameter names and default values (semi-colon separated); * @param modifiers the modifiers of the function MemberAt. void AddProperty(const char* key, const char* value). * AddProperty will add a PropertyNth to the PropertyNth stack; * which will be emtpied with the next build of a union; * or union item; * @param key the PropertyNth key; * @param value the value of the PropertyNth; * @return a reference to the building class. Type ToType(); SetSizeOf will set the SizeOf property for this union.; * It currently ignores all actual content.; * @size Size of the union. * ToType will return the currently produced Type (class); * @return the type currently being built. void EnableCallback(const bool enable = true). * EnableCallback Enable or disable the callback call in the destructor; * @param enable true to enable callback call, false to disable callback call. template <class T> UnionBuilder& AddDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/Reflex__UnionBuilderImpl.html:2311,stub,stubFP,2311,root/html526/Reflex__UnionBuilderImpl.html,https://root.cern,https://root.cern/root/html526/Reflex__UnionBuilderImpl.html,25,"['Stub', 'stub']","['Stub', 'stub', 'stubCxt', 'stubFP']"
Testability,"arity vector-matrix product ;  SMatrix Storage Representation;  Matrix and Vector classesClasses representing Matrices and Vectors of arbitrary type and dimension ;  Unuran;  VecOps;  ▼Monte CarloThe Monte Carlo related packages ;  EGParticle Data Group interface ;  Pythia6The Pythia6 interface ;  Pythia8The Pythia8 interface ;  VMCVirtual Monte Carlo ;  ▼PROOFClasses defining the Parallel ROOT Facility, PROOF, a framework for parallel analysis of ROOT TTrees ;  PROOF kernel LibrariesThe PROOF kernel libraries (libProof, libProofPlayer, libProofDraw) contain the classes defining the kernel of the PROOF facility, i.e ;  PROOF benchmark utilitiesSet of utilities to benchmark a PROOF facility ;  XProofD client LibraryThe XProofD client library, libProofx, contain the classes providing the client to interact with the XRootD-based xproofd daemon ;  TMVAThe Multi Variate Analysis package ;  RooFitRooFit toolkit classes ;  RooFitCoreCore RooFit classes ;  RooStatsRooStats toolkit classes ;  DataFrameROOT's RDataFrame allows to analyse data stored in TTrees with a high level interface ;  Tree LibraryTo store large quantities of same-class objects, ROOT provides the TTree and TNtuple classes ;  ▼TutorialsA collection of macros helping to learn ROOT by example ;  Tutorials specific to Mac/CocoaVarious examples showing graphics done with the Mac graphics system Cocoa. These examples run only on Mac/Os ;  Containers tutorialsExamples showing the ""containers' classes"" usage. ;  Data Frame tutorialsThese examples show the functionalities of the RDataFrame class ;  Event display tutorialsExamples showing the ""Event display classes"" usage. ;  Fast Fourier Transforms tutorialsExample showing the Fast Fourier Transforms interface in ROOT ;  Fit TutorialsThese tutorials illustrate the main fitting features. Their names are related to the aspect which is treated in the code ;  FITS files interface tutorialsExamples showing the FITS file interface ;  FOAM tutorialsExamples showing how to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/modules.html:8352,benchmark,benchmark,8352,doc/v614/modules.html,https://root.cern,https://root.cern/doc/v614/modules.html,2,['benchmark'],['benchmark']
Testability,"arker3D&operator=(TProofDrawPolyMarker3D&&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Bool_tTProofDraw::Process(Long64_t); virtual Bool_tTSelector::ProcessCut(Long64_t); virtual voidTSelector::ProcessFill(Long64_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTSelector::ResetAbort(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTSelector::SetInputList(TList* input); virtual voidTSelector::SetObject(TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTSelector::SetOption(const char* option); virtual voidTSelector::SetStatus(Long64_t status); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidSlaveBegin(TTree*); virtual voidTProofDraw::SlaveTerminate(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTerminate(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TProofDrawPolyMarker3D(); TProofDrawPolyMarker3D(TProofDrawPolyMarker3D&&); TProofDrawPolyMarker3D(const TProofDrawPolyMarker3D&); virtual voidTObject::UseCurrentStyle(); virtual intTProofDraw::Version() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawPolyMarker3D.html:5439,Test,TestBit,5439,root/html602/TProofDrawPolyMarker3D.html,https://root.cern,https://root.cern/root/html602/TProofDrawPolyMarker3D.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"arkerColorAlpha(Color_t mcolor, Float_t malpha)TAttMarkervirtual; SetMarkerSize(Size_t msize=1)TAttMarkerinlinevirtual; SetMarkerStyle(Style_t mstyle=1)TAttMarkerinlinevirtual; SetMaxMarkerSize(Double_t max)TScatterinline; SetMinMarkerSize(Double_t min)TScatterinline; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetTitle(const char *title="""")TNamedvirtual; SetUniqueID(UInt_t uid)TObjectvirtual; Sizeof() constTNamedvirtual; Streamer(TBuffer &) overrideTScattervirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TScatterinline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TAttFill()TAttFill; TAttFill(Color_t fcolor, Style_t fstyle)TAttFill; TAttLine()TAttLine; TAttLine(Color_t lcolor, Style_t lstyle, Width_t lwidth)TAttLine; TAttMarker()TAttMarker; TAttMarker(Color_t color, Style_t style, Size_t msize)TAttMarker; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; TScatter()TScatter; TScatter(Int_t n)TScatter; TScatter(Int_t n, const Double_t *x, const Double_t *y, const Double_t *col=nullptr, const Double_t *size=nullptr)TScatter; UseCurrentStyle()TObjectvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~TAttFill()TAttFillvirtual; ~TAttLine()TAttLinevirtual; ~TAttMarker()TAttMarkervirtual; ~TNamed()TNamedvirtual; ~TObject()TObjectvirtual; ~TScatter() overrideTScatter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:25 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTScatter-members.html:8432,Test,TestBit,8432,doc/master/classTScatter-members.html,https://root.cern,https://root.cern/doc/master/classTScatter-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"arling2SamplesTest(const Char_t* option = ""p"") const; voidAndersonDarling2SamplesTest(Double_t& pvalue, Double_t& testStat) const; static voidAndersonDarling2SamplesTest(const ROOT::Fit::BinData& data1, const ROOT::Fit::BinData& data2, Double_t& pvalue, Double_t& testStat); Double_tAndersonDarlingTest(const Char_t* option = ""p"") const; voidAndersonDarlingTest(Double_t& pvalue, Double_t& testStat) const; ROOT::Math::GoFTestGoFTest(UInt_t sampleSize, const Double_t* sample, ROOT::Math::GoFTest::EDistribution dist = kUndefined); ROOT::Math::GoFTestGoFTest(UInt_t sample1Size, const Double_t* sample1, UInt_t sample2Size, const Double_t* sample2); ROOT::Math::GoFTestGoFTest(UInt_t sampleSize, const Double_t* sample, const ROOT::Math::IGenFunction& dist, ROOT::Math::GoFTest::EUserDistribution userDist = kPDF, Double_t xmin = 1, Double_t xmax = 0); Double_tKolmogorovSmirnov2SamplesTest(const Char_t* option = ""p"") const; voidKolmogorovSmirnov2SamplesTest(Double_t& pvalue, Double_t& testStat) const; Double_tKolmogorovSmirnovTest(const Char_t* option = ""p"") const; voidKolmogorovSmirnovTest(Double_t& pvalue, Double_t& testStat) const; Double_toperator()(ROOT::Math::GoFTest::ETestType test = kAD, const Char_t* option = ""p"") const; voidoperator()(ROOT::Math::GoFTest::ETestType test, Double_t& pvalue, Double_t& testStat) const; static Double_tPValueADKSamples(UInt_t nsamples, Double_t A2); voidSetDistribution(ROOT::Math::GoFTest::EDistribution dist); voidSetUserCDF(const ROOT::Math::IGenFunction& cdf, Double_t xmin = 1, Double_t xmax = 0); voidSetUserDistribution(const ROOT::Math::IGenFunction& dist, ROOT::Math::GoFTest::EUserDistribution userDist = kPDF, Double_t xmin = 1, Double_t xmax = 0); voidSetUserDistribution<const ROOT::Math::IBaseFunctionOneDim>(ROOT::Math::const IBaseFunctionOneDim& dist, ROOT::Math::GoFTest::EUserDistribution userDist = kPDF, Double_t xmin = 1, Double_t xmax = 0); voidSetUserPDF(const ROOT::Math::IGenFunction& pdf, Double_t xmin = 1, Double_t xmax = 0).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GoFTest.html:1479,test,testStat,1479,root/html602/ROOT__Math__GoFTest.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GoFTest.html,8,['test'],"['test', 'testStat']"
Testability,"armax) const; virtual const char*GetParName(Int_t ipar) const; virtual Int_tGetParNumber(const char* name) const; virtual Double_tGetProb() const; virtual Int_tGetQuantiles(Int_t nprobSum, Double_t* q, const Double_t* probSum); virtual Double_tGetRandom(); virtual Double_tGetRandom(Double_t xmin, Double_t xmax); virtual voidGetRange(Double_t& xmin, Double_t& xmax) const; virtual voidGetRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; virtual voidGetRange(Double_t& xmin, Double_t& ymin, Double_t& zmin, Double_t& xmax, Double_t& ymax, Double_t& zmax) const; virtual Double_tGetSave(const Double_t* x); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetVariable(const TString& name); virtual Double_tGetX(Double_t y, Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.0E-10, Int_t maxiter = 100, Bool_t logx = false) const; TAxis*GetXaxis() const; virtual Double_tGetXmax() const; virtual Double_tGetXmin() const; TAxis*GetYaxis() const; TAxis*GetZaxis() const; virtual Double_tGradientPar(Int_t ipar, const Double_t* x, Double_t eps = 0.01); virtual voidGradientPar(const Double_t* x, Double_t* grad, Double_t eps = 0.01); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitArgs(const Double_t* x, const Double_t* params); static voidInitStandardFunctions(); virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Double_t a, Double_t b, Double_t epsrel = 9.9999999999999998E-13); virtual Double_tIntegralError(Double_t a, Double_t b, const Double_t* params = 0, const Double_t* covmat = 0, Double_t epsilon = 0.01); virtual Double_tIntegralError(Int_t n, const Double_t* a, const Double_t* b, const Double_t* params = 0, const Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TF1.html:11099,log,logx,11099,root/html604/TF1.html,https://root.cern,https://root.cern/root/html604/TF1.html,1,['log'],['logx']
Testability,"array); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); voidTGMainFrame::SetMWMHints(UInt_t value, UInt_t funcs, UInt_t input); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGMainFrame::SetWindowName(const char* name = 0); voidTGMainFrame::SetWMPosition(Int_t x, Int_t y); voidTGMainFrame::SetWMSize(UInt_t w, UInt_t h); voidTGMainFrame::SetWMSizeHints(UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc); voidTGMainFrame::SetWMState(EInitialState state); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TASPaletteEditor(const TASPaletteEditor&); TASPaletteEditor(TAttImage* attImage, UInt_t w, UInt_t h); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); voidUpdateRange(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TASPaletteEditor.html:15916,Test,TestBit,15916,root/html602/TASPaletteEditor.html,https://root.cern,https://root.cern/root/html602/TASPaletteEditor.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ars_time0[0] from array expression vars_time0 of size 30; : Using variable vars_time1[0] from array expression vars_time1 of size 30; : Using variable vars_time2[0] from array expression vars_time2 of size 30; : Using variable vars_time3[0] from array expression vars_time3 of size 30; : Using variable vars_time4[0] from array expression vars_time4 of size 30; : Using variable vars_time5[0] from array expression vars_time5 of size 30; : Using variable vars_time6[0] from array expression vars_time6 of size 30; : Using variable vars_time7[0] from array expression vars_time7 of size 30; : Using variable vars_time8[0] from array expression vars_time8 of size 30; : Using variable vars_time9[0] from array expression vars_time9 of size 30; DataSetFactory : [dataset] : Number of events in input trees; : ; : ; : Number of training and testing events; : ---------------------------------------------------------------------------; : Signal -- training events : 1600; : Signal -- testing events : 400; : Signal -- training and testing events: 2000; : Background -- training events : 1600; : Background -- testing events : 400; : Background -- training and testing events: 2000; : ; Factory : ␛[1mTrain all methods␛[0m; Factory : Train method: TMVA_LSTM for Classification; : ; : Start of deep neural network training on CPU using MT, nthreads = 4; : ; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 10, 1, 30 ) Batch size = 100 Loss function = C; Layer 0 LSTM Layer: (NInput = 30, NState = 10, NTime = 10 ) Output = ( 100 , 10 , 10 ); Layer 1 RESHAPE Layer Input = ( 1 , 10 , 10 ) Output = ( 1 , 100 , 100 ) ; Layer 2 DENSE Layer: ( Input = 100 , Width = 64 ) Output = ( 1 , 100 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 2560 events for training and 640 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:14213,test,testing,14213,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,8,['test'],['testing']
Testability,arseData.cxx;  SpecFuncCephes.cxx;  SpecFuncCephes.h;  SpecFuncCephesInv.cxx;  SpecFuncMathCore.cxx;  TComplex.cxx;  TDataPointN.cxx;  TKDTree.cxx;  TKDTreeBinning.cxx;  TMath.cxx;  TRandom.cxx;  TRandom1.cxx;  TRandom2.cxx;  TRandom3.cxx;  triangle.c;  triangle.h;  TStatistic.cxx;  UnBinData.cxx;  ► test;  ► fit;  GaussFunction.h;  MinimizerTypes.h;  SparseDataComparer.cxx;  SparseFit3.cxx;  SparseFit4.cxx;  testFit.cxx;  testFitPerf.cxx;  testGraphFit.cxx;  testMinim.cxx;  testRooFit.cxx;  WrapperRooPdf.h;  binarySearchTime.cxx;  kDTreeTest.cxx;  newKDTreeTest.cxx;  stdsort.cxx;  stressGoFTest.cxx;  stressTF1.cxx;  stressTMath.cxx;  testAnalyticalIntegrals.cxx;  testBinarySearch.cxx;  testDistSampler.cxx;  testIntegration.cxx;  testIntegrationMultiDim.cxx;  testkdTreeBinning.cxx;  testMathRandom.cxx;  testRootFinder.cxx;  testSampleQuantiles.cxx;  testSortOrder.cxx;  testSpecFuncBeta.cxx;  testSpecFuncBetaI.cxx;  testSpecFuncErf.cxx;  testSpecFuncGamma.cxx;  testSpecFuncSiCi.cxx;  testTMath.cxx;  testTStatistic.cxx;  ► v7;  ► inc;  ► ROOT;  TFit.h;  ► mathmore;  ► inc;  ► Math;  ChebyshevApprox.h;  Derivator.h;  DistFuncMathMore.h;  GSLFunctionAdapter.h;  GSLIntegrator.h;  GSLMCIntegrator.h;  GSLMinimizer.h;  GSLMinimizer1D.h;  GSLMultiRootFinder.h;  GSLNLSMinimizer.h;  GSLQuasiRandom.h;  GSLRandom.h;  GSLRandomFunctions.h;  GSLRndmEngines.h;  GSLRootFinder.h;  GSLRootFinderDeriv.h;  GSLRootHelper.h;  GSLSimAnMinimizer.h;  GSLSimAnnealing.h;  IntegrationTypes.h;  InterpolationTypes.h;  Interpolator.h;  KelvinFunctions.h;  LinkDef.h;  LinkDef_Func.h;  LinkDef_RootFinding.h;  MCIntegrationTypes.h;  MCParameters.h;  MultiNumGradFunction.h;  MultiRootFinder.h;  ParamFunction.h;  PdfFuncMathMore.h;  Polynomial.h;  QuantFuncMathMore.h;  QuasiRandom.h;  RootFinderAlgorithms.h;  SpecFuncMathMore.h;  Vavilov.h;  VavilovAccurate.h;  VavilovAccurateCdf.h;  VavilovAccuratePdf.h;  VavilovAccurateQuantile.h;  VavilovFast.h;  ► src;  cblas.cxx;  ChebyshevApprox.cxx;  complex_qua,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:46472,test,testTMath,46472,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['test'],['testTMath']
Testability,"arySearchTree&); virtual voidTMVA::BinaryTree::Print(ostream& os) const; virtual voidTMVA::BinaryTree::Read(istream& istr, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); virtual voidTMVA::BinaryTree::ReadXML(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); Float_tRMS(UInt_t var); Float_tRMS(TMVA::Types::ESBType sb, UInt_t var); TMVA::BinarySearchTreeNode*Search(TMVA::Event* event) const; Double_tSearchVolume(TMVA::Volume*, vector<const TMVA::BinarySearchTreeNode*>* events = 0); Int_tSearchVolumeWithMaxLimit(TMVA::Volume*, vector<const TMVA::BinarySearchTreeNode*>* events = 0, Int_t = -1); voidSetNormalize(Bool_t norm); voidSetPeriode(Int_t p); voidTMVA::BinaryTree::SetRoot(TMVA::Node* r); voidTMVA::BinaryTree::SetTotalTreeDepth(Int_t depth); voidTMVA::BinaryTree::SetTotalTreeDepth(TMVA::Node* n = NULL); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. voidTMVA::BinaryTree::DeleteNode(TMVA::Node*); TMVA::MsgLogger&TMVA::BinaryTree::Log() const. private:. voidDestroyNode(TMVA::BinarySearchTreeNode*); voidInsert(const TMVA::Event*, TMVA::Node*); Bool_tInVolume(const vector<Float_t>&, TMVA::Volume*) const; voidNormalizeTree(vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator, vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator, UInt_t); TMVA::BinarySearchTreeNode*Search(TMVA::Event*, TMVA::Node*) const; Double_tSearchVolume(TMVA::Node*, TMVA::Volume*, Int_t, vector<const TMVA::BinarySearchTreeNode*>* events). Data Members; protected:. UInt_tTMVA::BinaryTree::fDepthmaximal depth in tree reached; UInt_tTMVA::BinaryTree::fNNodestotal number of nodes in the tree (counted); TMVA::Node*TMVA::BinaryTree::fRootthe root node of the tree; static TMVA::MsgLogger*TMVA::BinaryTree::fgLoggermessage logger, static to save resources . private:. Bool_tfCanNormalizethe tree can be normalised; UInt_tfCurrentDepthint",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__BinarySearchTree.html:2888,Log,Log,2888,root/html528/TMVA__BinarySearchTree.html,https://root.cern,https://root.cern/root/html528/TMVA__BinarySearchTree.html,3,['Log'],['Log']
Testability,"aryTree(); TMVA::BinaryTreeBinaryTree(const TMVA::BinaryTree&); static TClass*Class(); virtual const char*ClassName() const; UInt_tCountNodes(TMVA::Node* n = __null); virtual TMVA::Node*CreateNode(UInt_t size = 0) const; virtual TMVA::BinaryTree*CreateTree() const; TMVA::Node*GetLeftDaughter(TMVA::Node* n); UInt_tGetNNodes() const; TMVA::Node*GetRightDaughter(TMVA::Node* n); virtual TMVA::Node*GetRoot() const; UInt_tGetTotalTreeDepth() const; virtual TClass*IsA() const; TMVA::BinaryTree&operator=(const TMVA::BinaryTree&); virtual voidPrint(ostream& os) const; virtual voidRead(istream& istr, UInt_t tmva_Version_Code = 262656); virtual voidReadXML(void* node, UInt_t tmva_Version_Code = 262656); voidSetRoot(TMVA::Node* r); voidSetTotalTreeDepth(Int_t depth); voidSetTotalTreeDepth(TMVA::Node* n = __null); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidDeleteNode(TMVA::Node*); TMVA::MsgLogger&Log() const. Data Members; protected:. UInt_tfDepthmaximal depth in tree reached; UInt_tfNNodestotal number of nodes in the tree (counted); TMVA::Node*fRootthe root node of the tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinaryTree(const TMVA::BinaryTree& ); constructor for a yet ""empty"" tree. Needs to be filled afterwards. ~BinaryTree( void ); destructor (deletes the nodes and ""events"" if owned by the tree. void DeleteNode(TMVA::Node* ); protected, recursive, function used by the class destructor and when Pruning. TMVA::Node* GetLeftDaughter(TMVA::Node* n); get left daughter node current node ""n"". TMVA::Node* GetRightDaughter(TMVA::Node* n); get right daughter node current node ""n"". UInt_t CountNodes(TMVA::Node* n = __null); return the number of nodes in the tree. (make a new count --> takes time). void Print(ostream& os) const; recursively print the tree. void* AddXMLTo(void* parent) const; add attributes to XML. v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__BinaryTree.html:1614,Log,Log,1614,root/html602/TMVA__BinaryTree.html,https://root.cern,https://root.cern/root/html602/TMVA__BinaryTree.html,1,['Log'],['Log']
Testability,"aryTree(); TMVA::BinaryTreeBinaryTree(const TMVA::BinaryTree&); static TClass*Class(); virtual const char*ClassName() const; UInt_tCountNodes(TMVA::Node* n = __null); virtual TMVA::Node*CreateNode(UInt_t size = 0) const; virtual TMVA::BinaryTree*CreateTree() const; TMVA::Node*GetLeftDaughter(TMVA::Node* n); UInt_tGetNNodes() const; TMVA::Node*GetRightDaughter(TMVA::Node* n); virtual TMVA::Node*GetRoot() const; UInt_tGetTotalTreeDepth() const; virtual TClass*IsA() const; TMVA::BinaryTree&operator=(const TMVA::BinaryTree&); virtual voidPrint(ostream& os) const; virtual voidRead(istream& istr, UInt_t tmva_Version_Code = 262657); virtual voidReadXML(void* node, UInt_t tmva_Version_Code = 262657); voidSetRoot(TMVA::Node* r); voidSetTotalTreeDepth(Int_t depth); voidSetTotalTreeDepth(TMVA::Node* n = __null); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidDeleteNode(TMVA::Node*); TMVA::MsgLogger&Log() const. Data Members; protected:. UInt_tfDepthmaximal depth in tree reached; UInt_tfNNodestotal number of nodes in the tree (counted); TMVA::Node*fRootthe root node of the tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinaryTree(const TMVA::BinaryTree& ); constructor for a yet ""empty"" tree. Needs to be filled afterwards. ~BinaryTree( void ); destructor (deletes the nodes and ""events"" if owned by the tree. void DeleteNode(TMVA::Node* ); protected, recursive, function used by the class destructor and when Pruning. TMVA::Node* GetLeftDaughter(TMVA::Node* n); get left daughter node current node ""n"". TMVA::Node* GetRightDaughter(TMVA::Node* n); get right daughter node current node ""n"". UInt_t CountNodes(TMVA::Node* n = __null); return the number of nodes in the tree. (make a new count --> takes time). void Print(ostream& os) const; recursively print the tree. void* AddXMLTo(void* parent) const; add attributes to XML. v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__BinaryTree.html:1622,Log,Log,1622,root/html604/TMVA__BinaryTree.html,https://root.cern,https://root.cern/root/html604/TMVA__BinaryTree.html,1,['Log'],['Log']
Testability,"aryTree::SetTotalTreeDepth(TMVA::Node* n = NULL); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. voidTMVA::BinaryTree::DeleteNode(TMVA::Node*); TMVA::MsgLogger&TMVA::BinaryTree::Log() const. private:. voidDestroyNode(TMVA::BinarySearchTreeNode*); voidInsert(const TMVA::Event*, TMVA::Node*); Bool_tInVolume(const vector<Float_t>&, TMVA::Volume*) const; voidNormalizeTree(vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator, vector<pair<double,const TMVA::Event*>,allocator<pair<double,const TMVA::Event*> > >::iterator, UInt_t); TMVA::BinarySearchTreeNode*Search(TMVA::Event*, TMVA::Node*) const; Double_tSearchVolume(TMVA::Node*, TMVA::Volume*, Int_t, vector<const TMVA::BinarySearchTreeNode*>* events). Data Members; protected:. UInt_tTMVA::BinaryTree::fDepthmaximal depth in tree reached; UInt_tTMVA::BinaryTree::fNNodestotal number of nodes in the tree (counted); TMVA::Node*TMVA::BinaryTree::fRootthe root node of the tree; static TMVA::MsgLogger*TMVA::BinaryTree::fgLoggermessage logger, static to save resources . private:. Bool_tfCanNormalizethe tree can be normalised; UInt_tfCurrentDepthinternal variable, counting the depth of the tree during insertion ; vector<Float_t>fMax[2]RMS for signal and background for each variable; vector<Float_t>fMeans[2]mean for signal and background for each variable; vector<Float_t>fMin[2]RMS for signal and background for each variable; Double_tfNEventsW[2]Number of events per class, taking into account event weights; vector<std::pair<Double_t,const TMVA::Event*> >fNormalizeTreeTable; UInt_tfPeriodperiode (number of event variables); vector<Float_t>fRMS[2]RMS for signal and background for each variable; Bool_tfStatisticsIsValidflag if last stat calculation is still valid, set to false if new node is insert; vector<Double_t>fSum[2]Sum for signal and background for each variable; Double_tfSumOfWeightsTotal number of events",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__BinarySearchTree.html:3739,log,logger,3739,root/html528/TMVA__BinarySearchTree.html,https://root.cern,https://root.cern/root/html528/TMVA__BinarySearchTree.html,3,['log'],['logger']
Testability,"as integers. ixMin is included, ixMax outside.; 603 const unsigned int ixMin = integrandMin;; 604 const unsigned int ixMax = std::min(integrandMax + 1, (double)std::numeric_limits<unsigned int>::max());; 605 ; 606 // Sum from 0 to just before the bin outside of the range.; 607 if (ixMin == 0) {; 608 return ROOT::Math::inc_gamma_c(ixMax, mu);; 609 } else {; 610 // If necessary, subtract from 0 to the beginning of the range; 611 if (ixMin <= mu) {; 612 return ROOT::Math::inc_gamma_c(ixMax, mu) - ROOT::Math::inc_gamma_c(ixMin, mu);; 613 } else {; 614 // Avoid catastrophic cancellation in the high tails:; 615 return ROOT::Math::inc_gamma(ixMin, mu) - ROOT::Math::inc_gamma(ixMax, mu);; 616 }; 617 }; 618 }; 619 ; 620 // the integral with respect to the mean is the integral of a gamma distribution; 621 // negative ix does not need protection (gamma returns 0.0); 622 const double ix = 1 + x;; 623 ; 624 return ROOT::Math::inc_gamma(ix, integrandMax) - ROOT::Math::inc_gamma(ix, integrandMin);; 625}; 626 ; 627inline double logNormalIntegral(double xMin, double xMax, double m0, double k); 628{; 629 const double root2 = std::sqrt(2.);; 630 ; 631 double ln_k = std::abs(std::log(k));; 632 double ret =; 633 0.5 * (TMath::Erf(std::log(xMax / m0) / (root2 * ln_k)) - TMath::Erf(std::log(xMin / m0) / (root2 * ln_k)));; 634 ; 635 return ret;; 636}; 637 ; 638inline double logNormalIntegralStandard(double xMin, double xMax, double mu, double sigma); 639{; 640 const double root2 = std::sqrt(2.);; 641 ; 642 double ln_k = std::abs(sigma);; 643 double ret =; 644 0.5 * (TMath::Erf((std::log(xMax) - mu) / (root2 * ln_k)) - TMath::Erf((std::log(xMin) - mu) / (root2 * ln_k)));; 645 ; 646 return ret;; 647}; 648 ; 649inline double cbShapeIntegral(double mMin, double mMax, double m0, double sigma, double alpha, double n); 650{; 651 const double sqrtPiOver2 = 1.2533141373;; 652 const double sqrt2 = 1.4142135624;; 653 ; 654 double result = 0.0;; 655 bool useLog = false;; 656 ; 657 if (std::abs(n - 1.0)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MathFuncs_8h_source.html:20903,log,logNormalIntegral,20903,doc/master/MathFuncs_8h_source.html,https://root.cern,https://root.cern/doc/master/MathFuncs_8h_source.html,1,['log'],['logNormalIntegral']
Testability,"as not been implemented yet. ""; 237 ""Please use Architecture=CPU or Architecture=CPU for the ""; 238 ""time being. See the TMVA Users' Guide for instructions ""; 239 ""if you encounter problems.""; 240 << Endl;; 241 // use instead GPU; 242 Log() << kINFO << ""We will try using the GPU-CUDA architecture if available"" << Endl;; 243 fArchitectureString = ""GPU"";; 244 }; 245 ; 246 // the architecture can now be set at runtime as an option; 247 ; 248 ; 249 if (fArchitectureString == ""GPU"" || fArchitectureString == ""CUDNN"") {; 250#ifdef R__HAS_TMVAGPU; 251 Log() << kINFO << ""Will now use the GPU architecture !"" << Endl;; 252#else // case TMVA does not support GPU; 253 Log() << kERROR << ""CUDA backend not enabled. Please make sure ""; 254 ""you have CUDA installed and it was successfully ""; 255 ""detected by CMAKE by using -Dtmva-gpu=On ""; 256 << Endl;; 257 fArchitectureString = ""CPU"";; 258 Log() << kINFO << ""Will now use instead the CPU architecture !"" << Endl;; 259#endif; 260 }; 261 ; 262 if (fArchitectureString == ""CPU"") {; 263#ifdef R__HAS_TMVACPU // TMVA has CPU BLAS and IMT support; 264 Log() << kINFO << ""Will now use the CPU architecture with BLAS and IMT support !"" << Endl;; 265#else // TMVA has no CPU BLAS or IMT support; 266 Log() << kINFO << ""Multi-core CPU backend not enabled. For better performances, make sure ""; 267 ""you have a BLAS implementation and it was successfully ""; 268 ""detected by CMake as well that the imt CMake flag is set.""; 269 << Endl;; 270 Log() << kINFO << ""Will use anyway the CPU architecture but with slower performance"" << Endl;; 271#endif; 272 }; 273 ; 274 // Input Layout; 275 ParseInputLayout();; 276 ParseBatchLayout();; 277 ; 278 // Loss function and output.; 279 fOutputFunction = EOutputFunction::kSigmoid;; 280 if (fAnalysisType == Types::kClassification) {; 281 if (fErrorStrategy == ""SUMOFSQUARES"") {; 282 fLossFunction = ELossFunction::kMeanSquaredError;; 283 }; 284 if (fErrorStrategy == ""CROSSENTROPY"") {; 285 fLossFunction = ELossFunction::kCros",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:9517,Log,Log,9517,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,3,['Log'],['Log']
Testability,"as::SetTitle(const char* title = """"); virtual voidTPad::SetToolTipText(const char* text, Long_t delayms = 1000); virtual voidTAttPad::SetTopMargin(Float_t topmargin); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTPad::SetVertical(Bool_t vert = kTRUE); virtual voidTPad::SetView(TView* view = 0); virtual voidTPad::SetViewer3D(TVirtualViewer3D* viewer3d); voidTCanvas::SetWindowPosition(Int_t x, Int_t y); voidTCanvas::SetWindowSize(UInt_t ww, UInt_t wh); virtual voidTAttPad::SetXfile(Float_t xfile); virtual voidTAttPad::SetXstat(Float_t xstat); virtual voidTAttPad::SetYfile(Float_t yfile); virtual voidTAttPad::SetYstat(Float_t ystat); voidTCanvas::Show(); virtual voidShowMembers(TMemberInspector& insp); virtual voidTCanvas::Size(Float_t xsizeuser = 0, Float_t ysizeuser = 0); virtual voidTPad::StartEditing()SIGNAL ; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTCanvas::ToggleAutoExec(); virtual voidTCanvas::ToggleEditor(); virtual voidTCanvas::ToggleEventStatus(); virtual voidTCanvas::ToggleToolBar(); virtual voidTCanvas::ToggleToolTips(); virtual voidTCanvas::Update(); virtual voidTCanvas::UseCurrentStyle()MENU ; Bool_tTCanvas::UseGL() const; virtual Int_tTPad::UtoAbsPixel(Double_t u) const; virtual Int_tTPad::UtoPixel(Double_t u) const; virtual Int_tTPad::VtoAbsPixel(Double_t v) const; virtual Int_tTPad::VtoPixel(Double_t v) const; virtual TObject*TPad::WaitPrimitive(const char* pname = """", const char* emode = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidx3d(Option_t* option = """"); virtual Int_tTPad::XtoAbsPixel(Double_t x) const; virtual Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDialogCanvas.html:24217,Test,TestBit,24217,root/html528/TDialogCanvas.html,https://root.cern,https://root.cern/root/html528/TDialogCanvas.html,6,['Test'],['TestBit']
Testability,"asConverged (double testError);  has this training converged already? ;  ; double learningRate () const;  get the learning rate ;  ; size_t maxConvergenceCount () const;  returns the max convergence count so far ;  ; size_t minError () const;  returns the smallest error so far ;  ; MinimizerType minimizerType () const;  which minimizer shall be used (e.g. SGD) ;  ; double momentum () const;  get the momentum (e.g. for SGD) ;  ; void pads (int numPads);  preparation for monitoring ;  ; void plot (std::string histoName, std::string options, int pad, EColor color);  for monitoring ;  ; EnumRegularization regularization () const;  some regularization of the DNN is turned on? ;  ; int repetitions () const;  how many steps have to be gone until the batch is changed ;  ; template<typename Iterator > ; void setDropOut (Iterator begin, Iterator end, size_t _dropRepetitions);  set the drop-out configuration (layer-wise) ;  ; void setMonitoring (std::shared_ptr< Monitoring > ptrMonitoring);  prepared for monitoring ;  ; virtual void setProgressLimits (double minProgress=0, double maxProgress=100);  ; virtual void startTestCycle ();  callback for monitoring and loggging ;  ; virtual void startTrainCycle ();  ; virtual void startTraining ();  ; virtual void testIteration ();  callback for monitoring and loggging ;  ; size_t testRepetitions () const;  how often is the test data tested ;  ; virtual void testSample (double, double, double, double);  virtual function to be used for monitoring (callback) ;  ; bool useMultithreading () const;  is multithreading turned on? ;  . Public Attributes; size_t count_dE;  ; size_t count_E;  ; size_t count_mb_dE;  ; size_t count_mb_E;  ; double fLearningRate;  ; MinimizerType fMinimizerType;  ; double fMomentum;  ; int fRepetitions;  ; size_t m_batchSize;  mini-batch size ;  ; size_t m_convergenceCount;  ; size_t m_convergenceSteps;  number of steps without improvement to consider the DNN to have converged ;  ; std::vector< double > m_dropOut;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Settings.html:3355,log,loggging,3355,doc/master/classTMVA_1_1DNN_1_1Settings.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Settings.html,7,"['log', 'test']","['loggging', 'test', 'testIteration', 'testRepetitions', 'testSample', 'tested']"
Testability,asGradients); return m_itGradientBegin; } ///< returns const iterator to the begin of the gradients; 605 const_iterator_type weightsBegin () const { assert (m_hasWeights); return m_itConstWeightBegin; } ///< returns const iterator to the begin of the weights for this layer; 606 ; 607 std::shared_ptr<std::function<double(double)>> activationFunction () const { return m_activationFunction; }; 608 std::shared_ptr<std::function<double(double)>> inverseActivationFunction () const { return m_inverseActivationFunction; }; 609 ; 610 /*! \brief set the drop-out info for this layer; 611 *; 612 */; 613 template <typename Iterator>; 614 void setDropOut (Iterator itDrop) { m_itDropOut = itDrop; m_hasDropOut = true; }; 615 ; 616 /*! \brief clear the drop-out-data for this layer; 617 *; 618 *; 619 */; 620 void clearDropOut () { m_hasDropOut = false; }; 621 ; 622 bool hasDropOut () const { return m_hasDropOut; } ///< has this layer drop-out turned on?; 623 const_dropout_iterator dropOut () const { assert (m_hasDropOut); return m_itDropOut; } ///< return the begin of the drop-out information; 624 ; 625 size_t size () const { return m_size; } ///< return the size of the layer; 626 ; 627 private:; 628 ; 629 /*! \brief compute the probabilities from the node values; 630 *; 631 *; 632 */; 633 container_type computeProbabilities () const;; 634 ; 635 private:; 636 ; 637 size_t m_size; ////< layer size; 638 ; 639 const_iterator_type m_itInputBegin; ///< iterator to the first of the nodes in the input node vector; 640 const_iterator_type m_itInputEnd; ///< iterator to the end of the nodes in the input node vector; 641 ; 642 std::vector<double> m_deltas; ///< stores the deltas for the DNN training; 643 std::vector<double> m_valueGradients; ///< stores the gradients of the values (nodes); 644 std::vector<double> m_values; ///< stores the values of the nodes in this layer; 645 const_dropout_iterator m_itDropOut; ///< iterator to a container indicating if the corresponding node is to be dropped;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:21395,assert,assert,21395,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,1,['assert'],['assert']
Testability,"asOfVers, const char *removedFromVers) constTObject; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""")TObjectvirtual; Pop()TObjectvirtual; Print(Option_t *option="""") constTObjectvirtual; Read(const char *name)TObjectvirtual; ReadBuffer(char *&buffer)TFreevirtual; RecursiveRemove(TObject *obj)TObjectvirtual; ResetBit(UInt_t f)TObjectinline; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetFirst(Long64_t first)TFreeinline; SetLast(Long64_t last)TFreeinline; SetObjectStat(Bool_t stat)TObjectstatic; SetUniqueID(UInt_t uid)TObjectvirtual; Sizeof() constTFree; Streamer(TBuffer &) overrideTFreevirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TFreeinline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TFree()TFree; TFree(TList *lfree, Long64_t first, Long64_t last)TFree; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; UseCurrentStyle()TObjectvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~TFree() overrideTFree; ~TObject()TObjectvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:54 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFree-members.html:5009,Test,TestBit,5009,doc/master/classTFree-members.html,https://root.cern,https://root.cern/doc/master/classTFree-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"asOfVers, const char* removedFromVers) const; static TArchiveFile*Open(const char* url, TFile* file); virtual Int_tOpenArchive(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual Int_tSetCurrentMember(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Int_tSetMember(const char* member); virtual Int_tSetMember(Int_t idx); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TArchiveFile(); TArchiveFile(const char* archive, const char* member, TFile* file); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TArchiveFile.html:4972,Test,TestBit,4972,root/html602/TArchiveFile.html,https://root.cern,https://root.cern/root/html602/TArchiveFile.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGuiBldAction.html:6987,Test,TestBit,6987,root/html534/TGuiBldAction.html,https://root.cern,https://root.cern/root/html534/TGuiBldAction.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSQLClassInfo&operator=(const TSQLClassInfo&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetClassTableName(const char* name); voidSetColumns(TObjArray* columns); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidSetRawExist(Bool_t on); voidSetRawTableName(const char* name); voidSetTableStatus(TObjArray* columns = 0, Bool_t israwtable = kFALSE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLClassInfo.html:5216,Test,TestBit,5216,root/html534/TSQLClassInfo.html,https://root.cern,https://root.cern/root/html534/TSQLClassInfo.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPosixThread&operator=(const TPosixThread&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Int_tRun(TThread* th); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Long_tSelfId(); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual Int_tSetCancelAsynchronous(); virtual Int_tSetCancelDeferred(); virtual Int_tSetCancelOff(); virtual Int_tSetCancelOn(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TPosixThread(); TPosixThread(const TPosixThread&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPosixThread.html:4792,Test,TestBit,4792,root/html602/TPosixThread.html,https://root.cern,https://root.cern/root/html602/TPosixThread.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ase kUndefined:; 261 default:; 262 break;; 263 }; 264 fCDF.reset(cdf);; 265 }; 266 ; 267 void GoFTest::SetDistributionFunction(const IGenFunction& f, Bool_t isPDF, Double_t xmin, Double_t xmax) {; 268 if (fDist > kUserDefined) {; 269 MATH_WARN_MSG(""SetDistributionFunction"",""Distribution type is changed to user defined"");; 270 }; 271 fDist = kUserDefined;; 272 // function will be cloned inside the wrapper PDFIntegral of CDFWrapper classes; 273 if (isPDF); 274 fCDF = std::make_unique<PDFIntegral>(f, xmin, xmax );; 275 else; 276 fCDF = std::make_unique<CDFWrapper>(f, xmin, xmax );; 277 }; 278 ; 279 void GoFTest::Instantiate(const Double_t* sample, size_t sampleSize) {; 280 // initialization function for the template constructors; 281 Bool_t badSampleArg = sample == nullptr || sampleSize == 0;; 282 if (badSampleArg) {; 283 std::string msg = ""'sample"";; 284 msg += !sampleSize ? ""Size' cannot be zero"" : ""' cannot be zero-length"";; 285 MATH_ERROR_MSG(""GoFTest"", msg.c_str());; 286 assert(!badSampleArg);; 287 }; 288 fCDF.reset((IGenFunction*)nullptr);; 289 fDist = kUserDefined;; 290 fSamples = std::vector<std::vector<Double_t> >(1);; 291 fTestSampleFromH0 = kTRUE;; 292 SetSamples(std::vector<const Double_t*>(1, sample), std::vector<size_t>(1, sampleSize));; 293 }; 294 ; 295 Double_t GoFTest::GaussianCDF(Double_t x) const {; 296 return ROOT::Math::normal_cdf(x, fParams[1], fParams[0]);; 297 }; 298 ; 299 Double_t GoFTest::ExponentialCDF(Double_t x) const {; 300 return ROOT::Math::exponential_cdf(x, fParams[0]);; 301 }; 302 ; 303 void GoFTest::LogSample() {; 304 transform(fSamples[0].begin(), fSamples[0].end(), fSamples[0].begin(),; 305 std::function<Double_t(Double_t)>(TMath::Log));; 306 }; 307 ; 308/* ; 309 Taken from (1); 310*/ ; 311 Double_t GoFTest::GetSigmaN(const std::vector<size_t> & ns, size_t N) {; 312 // compute moments of AD distribution (from Scholz-Stephen paper, paragraph 3); 313 ; 314 Double_t sigmaN = 0.0, h = 0.0, H = 0.0, g = 0.0, a, b, c, d, k = ns.size();; 3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GoFTest_8cxx_source.html:9663,assert,assert,9663,doc/master/GoFTest_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GoFTest_8cxx_source.html,1,['assert'],['assert']
Testability,"ase make sure ""; 1091 ""you have CUDA installed and it was successfully ""; 1092 ""detected by CMAKE."" << Endl;; 1093#endif // DNNCUDA; 1094}; 1095 ; 1096////////////////////////////////////////////////////////////////////////////////; 1097 ; 1098void TMVA::MethodDNN::TrainCpu(); 1099{; 1100 ; 1101#ifdef DNNCPU // Included only if DNNCPU flag is set.; 1102 Log() << kINFO << ""Start of neural network training on CPU."" << Endl << Endl;; 1103 ; 1104 size_t nValidationSamples = GetNumValidationSamples();; 1105 size_t nTrainingSamples = GetEventCollection(Types::kTraining).size() - nValidationSamples;; 1106 size_t nTestSamples = nValidationSamples;; 1107 ; 1108 Log() << kDEBUG << ""Using "" << nValidationSamples << "" validation samples."" << Endl;; 1109 Log() << kDEBUG << ""Using "" << nTestSamples << "" training samples."" << Endl;; 1110 ; 1111 fNet.Initialize(fWeightInitialization);; 1112 ; 1113 size_t trainingPhase = 1;; 1114 for (TTrainingSettings & settings : fTrainingSettings) {; 1115 ; 1116 if (fInteractive){; 1117 fInteractive->ClearGraphs();; 1118 }; 1119 ; 1120 Log() << ""Training phase "" << trainingPhase << "" of ""; 1121 << fTrainingSettings.size() << "":"" << Endl;; 1122 trainingPhase++;; 1123 ; 1124 TNet<TCpu<>> net(settings.batchSize, fNet);; 1125 net.SetWeightDecay(settings.weightDecay);; 1126 net.SetRegularization(settings.regularization);; 1127 // Need to convert dropoutprobabilities to conventions used; 1128 // by backend implementation.; 1129 std::vector<Double_t> dropoutVector(settings.dropoutProbabilities);; 1130 for (auto & p : dropoutVector) {; 1131 p = 1.0 - p;; 1132 }; 1133 net.SetDropoutProbabilities(dropoutVector);; 1134 net.InitializeGradients();; 1135 auto testNet = net.CreateClone(settings.batchSize);; 1136 ; 1137 using DataLoader_t = TDataLoader<TMVAInput_t, TCpu<>>;; 1138 ; 1139 // Split training data into training and validation set; 1140 const std::vector<Event *> &allData = GetEventCollection(Types::kTraining);; 1141 const std::vector<Event *> trainin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:40132,Log,Log,40132,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['Log'],['Log']
Testability,"ase of low bin statistics,; 4016/// because they could return a biased result.; 4017///; 4018/// \anchor HFitNLL; 4019/// ### Likelihood Fits; 4020///; 4021/// When using option ""L"" a likelihood fit is used instead of the default chi-square fit.; 4022/// The likelihood is built assuming a Poisson probability density function for each bin.; 4023/// The negative log-likelihood to be minimized is; 4024///; 4025/// \f[; 4026/// NLL = - \sum_{i}{ \log {\mathrm P} ( y(i) | f(x(i) | p ) ) }; 4027/// \f]; 4028/// where `P(y|f)` is the Poisson distribution of observing a count `y(i)` in the bin when the expected count is `f(x(i)|p)`.; 4029/// The exact likelihood used is the Poisson likelihood described in this paper:; 4030/// S. Baker and R. D. Cousins, “Clarification of the use of chi-square and likelihood functions in fits to histograms,”; 4031/// Nucl. Instrum. Meth. 221 (1984) 437.; 4032///; 4033/// \f[; 4034/// NLL = \sum_{i}{( f(x(i) | p ) + y(i)\log(y(i)/ f(x(i) | p )) - y(i)) }; 4035/// \f]; 4036/// By using this formulation, `2*NLL` can be interpreted as the chi-square resulting from the fit.; 4037///; 4038/// This method should be always used when the bin content represents counts (i.e. errors are sqrt(N) ).; 4039/// The likelihood method has the advantage of treating correctly bins with low statistics. In case of high; 4040/// statistics/bin the distribution of the bin content becomes a normal distribution and the likelihood and the chi2 fit; 4041/// give the same result.; 4042///; 4043/// The likelihood method, although a bit slower, it is therefore the recommended method,; 4044/// when the histogram represent counts (Poisson statistics), where the chi-square methods may; 4045/// give incorrect results, especially in case of low statistics.; 4046/// In case of a weighted histogram, it is possible to perform also a likelihood fit by using the; 4047/// option ""WL"". Note a weighted histogram is a histogram which has been filled with weights and it; 4048/// has the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:164178,log,log,164178,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['log'],['log']
Testability,"ase* data); virtual TQpVar*MakeVariables(const TQpDataBase* data); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpProbSparse&operator=(const TQpProbSparse& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidSeparateVars(TVectorD& x_in, TVectorD& y_in, TVectorD& z_in, TVectorD& vars_in); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQpProbSparse.html:5049,Test,TestBit,5049,root/html528/TQpProbSparse.html,https://root.cern,https://root.cern/root/html528/TQpProbSparse.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ase*>(this->BookMVA( Types::Instance().GetMethodType(methodType),; 379 weightfile ) );; 380 if( method && method->GetMethodType() == Types::kCategory ){; 381 MethodCategory *methCat = (dynamic_cast<MethodCategory*>(method));; 382 if( !methCat ); 383 Log() << kFATAL << ""Method with type kCategory cannot be casted to MethodCategory. /Reader"" << Endl;; 384 methCat->fDataSetManager = fDataSetManager;; 385 }; 386 ; 387 return fMethodMap[methodTag] = method;; 388}; 389 ; 390////////////////////////////////////////////////////////////////////////////////; 391/// books MVA method from weightfile; 392 ; 393TMVA::IMethod* TMVA::Reader::BookMVA( TMVA::Types::EMVA methodType, const TString& weightfile ); 394{; 395 IMethod *im =; 396 ClassifierFactory::Instance().Create(Types::Instance().GetMethodName(methodType).Data(), DataInfo(), weightfile);; 397 ; 398 MethodBase *method = (dynamic_cast<MethodBase*>(im));; 399 ; 400 if (method==0) return im;; 401 ; 402 if( method->GetMethodType() == Types::kCategory ){; 403 MethodCategory *methCat = (dynamic_cast<MethodCategory*>(method));; 404 if( !methCat ); 405 Log() << kERROR << ""Method with type kCategory cannot be casted to MethodCategory. /Reader"" << Endl;; 406 methCat->fDataSetManager = fDataSetManager;; 407 }; 408 ; 409 method->SetupMethod();; 410 ; 411 // when reading older weight files, they could include options; 412 // that are not supported any longer; 413 method->DeclareCompatibilityOptions();; 414 ; 415 // read weight file; 416 method->ReadStateFromFile();; 417 ; 418 // check for unused options; 419 method->CheckSetup();; 420 ; 421 Log() << kINFO << ""Booked classifier \"""" << method->GetMethodName(); 422 << ""\"" of type: \"""" << method->GetMethodTypeName() << ""\"""" << Endl;; 423 ; 424 return method;; 425}; 426 ; 427////////////////////////////////////////////////////////////////////////////////; 428 ; 429TMVA::IMethod* TMVA::Reader::BookMVA( TMVA::Types::EMVA methodType, const char* xmlstr ); 430{; 431 // books MVA method from we",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:15036,Log,Log,15036,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['Log'],['Log']
Testability,"ase, a=b, the algorithm advances each array by one index in an; attempt to move through the equality. However, this is incorrect when one or; the other of a or b (or both) have a repeated value, call it x. For the KS; statistic to be computed properly, rdiff needs to be calculated after all of; the a and b at x have been tallied (this is due to the definition of the; empirical distribution function; another way to convince yourself that the; old CERNLIB method is wrong is that it implies that the function defined as the; difference between a and b is multi-valued at x -- besides being ugly, this; would invalidate Kolmogorov's theorem). The solution is to just add while-loops into the equality-case handling to; perform the tally:. } else {; double x = a[ia-1];; while(a[ia-1] == x && ia <= na) {; rdiff -= sa;; ia++;; }; while(b[ib-1] == x && ib <= nb) {; rdiff += sb;; ib++;; }; if (ia > na) {ok = kTRUE; break;}; if (ib > nb) {ok = kTRUE; break;}; }. NOTE1; A good description of the Kolmogorov test can be seen at:; http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm. Double_t Voigt(Double_t x, Double_t sigma, Double_t lg, Int_t R = 4); Computation of Voigt function (normalised).; Voigt is a convolution of; gauss(xx) = 1/(sqrt(2*pi)*sigma) * exp(xx*xx/(2*sigma*sigma); and; lorentz(xx) = (1/pi) * (lg/2) / (xx*xx + lg*lg/4); functions. The Voigt function is known to be the real part of Faddeeva function also; called complex error function [2]. The algoritm was developed by J. Humlicek [1].; This code is based on fortran code presented by R. J. Wells [2].; Translated and adapted by Miha D. Puc. To calculate the Faddeeva function with relative error less than 10^(-r).; r can be set by the the user subject to the constraints 2 <= r <= 5. [1] J. Humlicek, JQSRT, 21, 437 (1982).; [2] R.J. Wells ""Rapid Approximation to the Voigt/Faddeeva Function and its; Derivatives"" JQSRT 62 (1999), pp 29-48.; http://www-atm.physics.ox.ac.uk/user/wells/voigt.html. Bool_t RootsCubi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMath.html:20423,test,test,20423,root/html528/TMath.html,https://root.cern,https://root.cern/root/html528/TMath.html,2,['test'],['test']
Testability,"ase, a=b, the algorithm advances each array by one index in an; attempt to move through the equality. However, this is incorrect when one or; the other of a or b (or both) have a repeated value, call it x. For the KS; statistic to be computed properly, rdiff needs to be calculated after all of; the a and b at x have been tallied (this is due to the definition of the; empirical distribution function; another way to convince yourself that the; old CERNLIB method is wrong is that it implies that the function defined as the; difference between a and b is multi-valued at x -- besides being ugly, this; would invalidate Kolmogorov's theorem). The solution is to just add while-loops into the equality-case handling to; perform the tally:. } else {; double x = a[ia-1];; while(a[ia-1] == x && ia <= na) {; rdiff -= sa;; ia++;; }; while(b[ib-1] == x && ib <= nb) {; rdiff += sb;; ib++;; }; if (ia > na) {ok = kTRUE; break;}; if (ib > nb) {ok = kTRUE; break;}; }. NOTE1; A good description of the Kolmogorov test can be seen at:; http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm. Double_t Voigt(Double_t x, Double_t sigma, Double_t lg, Int_t r = 4); Computation of Voigt function (normalised).; Voigt is a convolution of; gauss(xx) = 1/(sqrt(2*pi)*sigma) * exp(xx*xx/(2*sigma*sigma); and; lorentz(xx) = (1/pi) * (lg/2) / (xx*xx + lg*lg/4); functions. The Voigt function is known to be the real part of Faddeeva function also; called complex error function [2]. The algoritm was developed by J. Humlicek [1].; This code is based on fortran code presented by R. J. Wells [2].; Translated and adapted by Miha D. Puc. To calculate the Faddeeva function with relative error less than 10^(-r).; r can be set by the the user subject to the constraints 2 <= r <= 5. [1] J. Humlicek, JQSRT, 21, 437 (1982).; [2] R.J. Wells ""Rapid Approximation to the Voigt/Faddeeva Function and its; Derivatives"" JQSRT 62 (1999), pp 29-48.; http://www-atm.physics.ox.ac.uk/user/wells/voigt.html. Bool_t RootsCubi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMath.html:20523,test,test,20523,root/html532/TMath.html,https://root.cern,https://root.cern/root/html532/TMath.html,4,['test'],['test']
Testability,"ase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidGetLDCoeff(); voidGetSum(); voidGetSumVal(); virtual voidInit(); voidInitMatrices(); voidPrintCoefficients(). Data Members; public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TMVA::MethodBase::EWeightFileTypeTMVA::MethodBase::kROOT; static TObject::(anonymous)TObject::kSingleKey; static TMVA::MethodBase::EWeightFileTypeTMVA::MethodBase::kTEXT; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodLD.html:15290,test,testing,15290,root/html602/TMVA__MethodLD.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodLD.html,2,['test'],['testing']
Testability,"aseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; virtual voidWriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const; voidWriteWeightsToStream(TFile& rf) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodLikelihood.html:14253,Test,TestClassification,14253,root/html534/TMVA__MethodLikelihood.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodLikelihood.html,3,['Test'],"['TestClassification', 'TestMulticlass', 'TestRegression']"
Testability,"ased on the asymptotic formulae for the profile likelihood ratio ;  CBayesianCalculatorBayesianCalculator is a concrete implementation of IntervalCalculator, providing the computation of a credible interval using a Bayesian method ;  CBernsteinCorrectionBernsteinCorrection is a utility in RooStats to augment a nominal PDF with a polynomial correction term ;  CCombinedCalculatorCombinedCalculator is an interface class for a tools which can produce both RooStats HypoTestResults and ConfIntervals ;  CConfidenceBeltConfidenceBelt is a concrete implementation of the ConfInterval interface ;  CConfIntervalConfInterval is an interface class for a generic interval in the RooStats framework ;  CDebuggingSampler;  CDebuggingTestStat;  CDetailedOutputAggregator;  CFeldmanCousins(like the Feldman-Cousins technique) is essentially a specific configuration of the more general NeymanConstruction ;  CFrequentistCalculatorHypothesis Test Calculator using a full frequentist procedure for sampling the test statistic distribution ;  CHeavisideRepresents the Heaviside function ;  CHLFactoryHLFactory is an High Level model Factory allows you to describe your models in a configuration file (datacards) acting as an interface with the RooFactoryWSTool ;  CHybridCalculatorThis class implements the Hypothesis test calculation using an hybrid (frequentist/bayesian) procedure ;  CHybridCalculatorOriginalHybridCalculatorOriginal class ;  CHybridPlotThis class provides the plots for the result of a study performed with the HybridCalculatorOriginal class ;  CHybridResult;  CHypoTestCalculatorHypoTestCalculator is an interface class for a tools which produce RooStats HypoTestResults ;  CHypoTestCalculatorGenericCommon base class for the Hypothesis Test Calculators ;  CHypoTestInverterHypoTestInverter class for performing an hypothesis test inversion by scanning the hypothesis test results of an HypoTestCalculator for various values of the parameter of interest ;  CHypoTestInverterOriginalThis class ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:4322,test,test,4322,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,2,['test'],['test']
Testability,"aset. TestStatistic* GetTestStatistic() const; { return fTestStat; }. Double_t ConfidenceLevel() const; { return 1. - fSize; }. void Initialize(RooAbsArg& , RooArgSet& , RooArgSet& ); { return fNToys; }. void SetNToys(const Int_t ntoy); { fNToys = ntoy; }. void SetNEventsPerToy(const Int_t nevents); Forces n events even for extended PDFs. Set NEvents=0 to; use the Poisson distributed events from the extended PDF. void SetParametersForTestStat(const RooArgSet& nullpoi); specify the values of parameters used when evaluating test statistic. void SetPdf(RooAbsPdf& pdf); Set the Pdf, add to the the workspace if not already there. { fPdf = &pdf; ClearCache(); }. void SetPriorNuisance(RooAbsPdf* pdf); How to randomize the prior. Set to NULL to deactivate randomization. { fPriorNuisance = pdf; }. void SetNuisanceParameters(const RooArgSet& np); specify the nuisance parameters (eg. the rest of the parameters). { fNuisancePars = &np; }. void SetObservables(const RooArgSet& o); specify the observables in the dataset (needed to evaluate the test statistic). { fObservables = &o; }. void SetGlobalObservables(const RooArgSet& o); specify the conditional observables. { fGlobalObservables = &o; }. void SetTestSize(Double_t size); set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval). { fSize = size; }. void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). { fSize = 1. - cl; }. void SetTestStatistic(RooStats::TestStatistic* testStatistic); Set the TestStatistic (want the argument to be a function of the data & parameter points. { fTestStat = testStatistic; }. void SetExpectedNuisancePar(Bool_t i = kTRUE); { fExpectedNuisancePar = i; }. void SetAsimovNuisancePar(Bool_t i = kTRUE); { fExpectedNuisancePar = i; }. void SetGenerateBinned(bool binned = true); control to use bin data generation (=> see RooFit::AllBinned() option). { fGenerateBinned = binned; }. void SetGenerateBinnedTag(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__ToyMCSampler.html:8522,test,test,8522,root/html532/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html532/RooStats__ToyMCSampler.html,1,['test'],['test']
Testability,aset[Category_Likelihood_1_dsi] : Background -- efficiency : 0.5134; : Dataset[Category_Likelihood_1_dsi] : you have opted for scaling the number of requested training/testing events; : to be scaled by the preselection efficiency; : ( 0 * 0.5123 preselection efficiency); : Dataset[Category_Likelihood_1_dsi] : you have opted for scaling the number of requested training/testing events; : to be scaled by the preselection efficiency; : ( 0 * 0.5134 preselection efficiency); : Number of training and testing events; : ---------------------------------------------------------------------------; : Signal -- training events : 2561; : Signal -- testing events : 2561; : Signal -- training and testing events: 5122; : Dataset[Category_Likelihood_1_dsi] : Signal -- due to the preselection a scaling factor has been applied to the numbers of requested events: 0.5123; : Background -- training events : 2567; : Background -- testing events : 2567; : Background -- training and testing events: 5134; : Dataset[Category_Likelihood_1_dsi] : Background -- due to the preselection a scaling factor has been applied to the numbers of requested events: 0.5134; : ; <HEADER> DataSetInfo : Correlation matrix (Signal):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 -0.017 +0.004 +0.001; : var2: -0.017 +1.000 -0.019 -0.003; : var3: +0.004 -0.019 +1.000 -0.012; : var4: +0.001 -0.003 -0.012 +1.000; : ----------------------------------------; <HEADER> DataSetInfo : Correlation matrix (Background):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 -0.019 -0.022 +0.003; : var2: -0.019 +1.000 -0.018 +0.004; : var3: -0.022 -0.018 +1.000 +0.004; : var4: +0.003 +0.004 +0.004 +1.000; : ----------------------------------------; <HEADER> DataSetFactory : [Category_Likelihood_1_dsi] : ; : ; : Train method: Category_Likelihood_1 for Classification; : Filling reference histograms; : Building PDF out of reference histograms; : Elapsed time for train,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:14761,test,testing,14761,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,2,['test'],['testing']
Testability,aset[Category_Likelihood_2_dsi] : Background -- efficiency : 0.4866; : Dataset[Category_Likelihood_2_dsi] : you have opted for scaling the number of requested training/testing events; : to be scaled by the preselection efficiency; : ( 0 * 0.4877 preselection efficiency); : Dataset[Category_Likelihood_2_dsi] : you have opted for scaling the number of requested training/testing events; : to be scaled by the preselection efficiency; : ( 0 * 0.4866 preselection efficiency); : Number of training and testing events; : ---------------------------------------------------------------------------; : Signal -- training events : 2438; : Signal -- testing events : 2438; : Signal -- training and testing events: 4876; : Dataset[Category_Likelihood_2_dsi] : Signal -- due to the preselection a scaling factor has been applied to the numbers of requested events: 0.4877; : Background -- training events : 2433; : Background -- testing events : 2433; : Background -- training and testing events: 4866; : Dataset[Category_Likelihood_2_dsi] : Background -- due to the preselection a scaling factor has been applied to the numbers of requested events: 0.4866; : ; <HEADER> DataSetInfo : Correlation matrix (Signal):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 -0.005 +0.002 -0.039; : var2: -0.005 +1.000 +0.011 -0.004; : var3: +0.002 +0.011 +1.000 -0.021; : var4: -0.039 -0.004 -0.021 +1.000; : ----------------------------------------; <HEADER> DataSetInfo : Correlation matrix (Background):; : ----------------------------------------; : var1 var2 var3 var4; : var1: +1.000 -0.007 +0.009 +0.008; : var2: -0.007 +1.000 -0.020 +0.013; : var3: +0.009 -0.020 +1.000 +0.007; : var4: +0.008 +0.013 +0.007 +1.000; : ----------------------------------------; <HEADER> DataSetFactory : [Category_Likelihood_2_dsi] : ; : ; : Train method: Category_Likelihood_2 for Classification; : Filling reference histograms; : Building PDF out of reference histograms; : Elapsed time for train,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:17928,test,testing,17928,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,2,['test'],['testing']
Testability,"asicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NCalls() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NDim() const; virtual unsigned intNFitPoints() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NPoints() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::ResetNCalls(); virtual ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::Type_tType() const; virtual voidROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::UpdateNCalls() const; voidUseSumOfWeightSquare(). private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const; virtual doubleDoEval(const double* x) const; ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>&); ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>&operator=(const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>&). Data Members; public:. enum ROOT::Math::BasicFitMethodFunction::Type_t { kUndefined; kLeastSquare; kLogLikelihood; };. private:. const ROOT::Fit::UnBinData&fData; const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction&fFunc; vector<double>fGradfor derivatives; boolfIsExtendedflag for indicating if likelihood is extended; unsigned intfNEffPointsnumber of effective points used in the fit ; intfWeightflag to indicate if needs to evaluate using weight or weight squared (default weight = 0). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function (need to return Base for Windows). { return new LogLikelihoodFCN(fData,fFunc,fWeight,fIsExtended); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html:2716,Log,LogLikelihoodFCN,2716,root/html532/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,5,['Log'],['LogLikelihoodFCN']
Testability,"asic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBoostedMethodName(TString methodName); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBoost.html:11385,test,testTime,11385,root/html528/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBoost.html,1,['test'],['testTime']
Testability,"asic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetHiddenLayer(TString hiddenlayer = """"); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodTMlpANN.html:10995,test,testTime,10995,root/html528/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodTMlpANN.html,1,['test'],['testTime']
Testability,"ask. If the lx vector size is not the same as inputVars,; resize it and fill it with 1; NOTE: Always set all to 1; if (fRFLx.size() != m_inputVars->size()) {. Bool_t WriteProgram(); write command to rf_go.exe. Bool_t WriteRealVarImp(); write the minimum importance to be considered. Bool_t WriteRfOut(); written by rf_go.exe; write rulefit output (rfout). Bool_t WriteRfStatus(); written by rf_go.exe; write rulefit status. Bool_t WriteRuleFitMod(); written by rf_go.exe (NOTE:Format unknown!). Bool_t WriteRuleFitSum(); written by rf_go.exe (NOTE: format unknown!). Bool_t WriteTrain(); write training data, columnwise. Bool_t WriteTest(); Write test data. Bool_t WriteVarNames(); write variable names, ascii. Bool_t WriteVarImp(); written by rf_go.exe. Bool_t WriteYhat(); written by rf_go.exe. Bool_t ReadYhat(); read the score. Bool_t ReadVarImp(); read variable importance. Bool_t ReadModelSum(); read model from rulefit.sum. Int_t RunRuleFit(); execute rf_go.exe. void TrainRuleFit(). void TestRuleFit(). void VarImp(). TString GetRFName(TString name). Bool_t OpenRFile(TString name, ofstream& f). Bool_t OpenRFile(TString name, ifstream& f). Bool_t WriteInt(ofstream& f, const Int_t* v, Int_t n = 1). Bool_t WriteFloat(ofstream& f, const Float_t* v, Int_t n = 1). Int_t ReadInt(ifstream& f, Int_t* v, Int_t n = 1) const. Int_t ReadFloat(ifstream& f, Float_t* v, Int_t n = 1) const. RuleFitAPI(const TMVA::MethodRuleFit* rfbase, TMVA::RuleFit* rulefit, TMVA::EMsgType minType). const TString GetRFWorkDir() const; Get working directory. { return fRFWorkDir; }. void SetRFTrain(); set rf_go.exe running mode. { fRFProgram = kRfTrain; }. void SetRFPredict(); { fRFProgram = kRfPredict; }. void SetRFVarimp(); { fRFProgram = kRfVarimp; }. Bool_t ReadIntParms(). Bool_t ReadRealParms(). Bool_t ReadLx(). Bool_t ReadProgram(). Bool_t ReadRealVarImp(). Bool_t ReadRfOut(). Bool_t ReadRfStatus(). Bool_t ReadRuleFitMod(). Bool_t ReadRuleFitSum(). Bool_t ReadTrainX(). Bool_t ReadTrainY(). Bool_t ReadT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__RuleFitAPI.html:4903,Test,TestRuleFit,4903,root/html528/TMVA__RuleFitAPI.html,https://root.cern,https://root.cern/root/html528/TMVA__RuleFitAPI.html,6,['Test'],['TestRuleFit']
Testability,"asksPerWorkerHint. See the relevant entries in our reference guide for more information.; The name of the sub-branches of a split collection no longer have 2 consecutive dots if the top level branche name has a trailing dot. The name of the collection’s index leaf also no longer include the dot. For example for “t.” the names where “t._” and “t..fValue” and are now “t_” and “t.fValue”. RDataFrame; New features. Introduce ROOT::RDF::RunGraphs, which allows to compute the results of multiple RDataFrames (or better, multiple independent computation graphs) concurrently while sharing the same thread pool. The computation may be more efficient than running the RDataFrames sequentially if an analysis consists of several computation graphs that individually do not fully utilize the available resources. See e.g. this tutorial for an example usage.; RDataFrame now supports reading friend TTrees with a TTreeIndex, aka “indexed friends”. More details at ROOT-9559.; Experimental logging capabilities have been added to RDataFrame. To activate logging, define the following variable before creating the RDataFrame object: auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel.kInfo);.; With ROOT-10023 fixed, RDataFrame can now read and write certain branches containing unsplit objects, i.e. TBranchObjects. More information is available at ROOT-10022.; CSV files can now be opened and processed from remote HTTP(S) locations; RDataFrame results produced by the same action in different computation graphs can now be merged thanks to the new interface provided by ROOT::Detail::RDF::RMergeableValue, introduced in #5552. A feature originally requested with ROOT-9869, it helps streamline RDataFrame workflows in a distributed environment. Currently only a subset of RDataFrame actions have their corresponding mergeable class, but in the future it will be possible to extend it to any action through the creation of a new RMerge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:7368,log,logging,7368,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['log'],['logging']
Testability,"ass * TMVA::LogInterval::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::LogInterval::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::LogInterval::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 106 of file LogInterval.h. ◆ DeclFileName(). static const char * TMVA::LogInterval::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 106 of file LogInterval.h. ◆ GetElement(). Double_t TMVA::LogInterval::GetElement ; (; Int_t ; bin); const. virtual . calculates the value of the ""number"" bin in a discrete interval. ; Parameters:; Double_t position . Reimplemented from TMVA::Interval.; Definition at line 113 of file LogInterval.cxx. ◆ GetMax(). virtual Double_t TMVA::LogInterval::GetMax ; (; ); const. inlinevirtual . Reimplemented from TMVA::Interval.; Definition at line 93 of file LogInterval.h. ◆ GetMean(). Double_t TMVA::LogInterval::GetMean ; (; ); const. virtual . Reimplemented from TMVA::Interval.; Definition at line 158 of file LogInterval.cxx. ◆ GetMin(). virtual Double_t TMVA::LogInterval::GetMin ; (; ); const. inlinevirtual . Reimplemented from TMVA::Interval.; Definition at line 92 of file LogInterval.h. ◆ GetNbins(). virtual Int_t TMVA::LogInterval::GetNbins ; (; ); const. inlinevirtual . Reimplemented from TMVA::Interval.; Definition at line 95 of file LogInterval.h. ◆ GetRndm(). Double_t TMVA::LogInterval::GetRndm ; (; TRandom3 & ; rnd); const. virtual . get uniformly distributed number within interval ; Reimplemented from TMVA::Interval.; Definition at line 144 of file LogInterval.cxx. ◆ GetStepSize(). Double_t TMVA::LogInterval::GetStepSize ; (; Int_t ; iBin = 0); const. virtual . returns the step size between the numbers of a ""discrete LogInterval"" ; Reimplemented from TMVA::Interval.; Definition at line 129 of file LogInterval.cxx. ◆ G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1LogInterval.html:4946,Log,LogInterval,4946,doc/master/classTMVA_1_1LogInterval.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1LogInterval.html,1,['Log'],['LogInterval']
Testability,"ass Element> inline TVectorT<Element> &TVectorT<Element> Use(Int_t n, float* data); { return Use(0,n-1,data); }. template<class Element> inline const TVectorT<Element> &TVectorT<Element> Use(Int_t n, const float* data) const; { return Use(0,n-1,data); }. template<class Element> inline TVectorT<Element> &TVectorT<Element> Use(TVectorT<float>& v). template<class Element> inline const TVectorT<Element> &TVectorT<Element> Use(const TVectorT<float>& v) const. template<class Element> inline TVectorT<Element> TVectorT<Element> GetSub(Int_t row_lwb, Int_t row_upb, Option_t* option = ""S"") const. template<class Element> inline const Element &TVectorT<Element> operator()(Int_t ind) const; Access a vector element. template<class Element> inline Element &TVectorT<Element> operator()(Int_t ind); Access a vector element. Int_t GetLwb() const; { return fRowLwb; }. Int_t GetUpb() const; { return fNrows+fRowLwb-1; }. Int_t GetNrows() const; { return fNrows; }. Int_t GetNoElements() const; { return fNrows; }. Element * GetMatrixArray(); { return fElements; }. const Element * GetMatrixArray() const; { return fElements; }. void Invalidate(); { SetBit(kStatus); }. void MakeValid(); { ResetBit(kStatus); }. Bool_t IsValid() const; { return !TestBit(kStatus); }. Bool_t IsOwner() const; { return fIsOwner; }. void SetElements(const float* elements). TVectorT<Element> & Shift(Int_t row_shift); { fRowLwb += row_shift; return *this; }. TVectorT<Element> & ResizeTo(Int_t lwb, Int_t upb). TVectorT<Element> & ResizeTo(Int_t n); { return ResizeTo(0,n-1); }. TVectorT<Element> & Use(Int_t lwb, Int_t upb, float* data). const Element & operator[](Int_t index) const; { return (*this)(index); }. Element & operator[](Int_t index); { return (*this)(index); }. void Clear(Option_t* = """"). » Last changed: root/matrix:$Id$ » Last generated: 2015-03-15 16:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVectorT_float_.html:17887,Test,TestBit,17887,root/html534/TVectorT_float_.html,https://root.cern,https://root.cern/root/html534/TVectorT_float_.html,1,['Test'],['TestBit']
Testability,"ass Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::Tools. class TMVA::Tools. Function Members (Methods); public:. ~Tools(); voidAddAttr(void* node, const char* attrname, const char* value); void*AddChild(void* parent, const char* childname, const char* content = 0, bool isRootNode = false); Bool_tAddComment(void* node, const char* comment); Bool_tAddRawLine(void* node, const char* raw); vector<TMatrixDSym*>*CalcCovarianceMatrices(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events, Int_t maxCls, TMVA::VariableTransformBase* transformBase = 0); vector<TMatrixDSym*>*CalcCovarianceMatrices(const vector<const TMVA::Event*,allocator<const TMVA::Event*> >& events, Int_t maxCls, TMVA::VariableTransformBase* transformBase = 0); Bool_tCheckForSilentOption(const TString&) const; Bool_tCheckForVerboseOption(const TString&) const; Bool_tCheckSplines(const TH1*, const TSpline*); const TString&Color(const TString&); voidComputeStat(const vector<TMVA::Event*>&, vector<Float_t>*, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Int_t signalClass, Bool_t norm = kFALSE); Double_tComputeVariance(Double_t sumx2, Double_t sumx, Int_t nx); Bool_tContainsRegularExpression(const TString& s); static voidDestroyInstance(); voidFormattedOutput(const TMatrixD&, const vector<TString>&, TMVA::MsgLogger& logger); voidFormattedOutput(const TMatrixD&, const vector<TString>& vert, const vector<TString>& horiz, TMVA::MsgLogger& logger); voidFormattedOutput(const vector<Double_t>&, const vector<TString>&, const TString titleVars, const TString titleValues, TMVA::MsgLogger& logger, TString format = ""%+1.3f""); void*GetChild(void* parent, const char* childname = 0); const char*GetContent(void* node); const TMatrixD*GetCorrelationMatrix(const TMatrixD* covMat); Double_tGetCorrelationRatio(const TH2F&); TH1*GetCumulativeDist(TH1* h); Int_tGetIndexMax",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Tools.html:1513,log,logger,1513,root/html534/TMVA__Tools.html,https://root.cern,https://root.cern/root/html534/TMVA__Tools.html,3,['log'],['logger']
Testability,"ass Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOSTATS; » RooStats::RatioOfProfiledLikelihoodsTestStat. class RooStats::RatioOfProfiledLikelihoodsTestStat: public RooStats::TestStatistic. TestStatistic that returns the ratio of profiled likelihoods. Function Members (Methods); public:. virtual~RatioOfProfiledLikelihoodsTestStat(); static TClass*Class(); virtual Double_tEvaluate(RooAbsData& data, RooArgSet& nullParamsOfInterest); virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::TestStatistic&RooStats::TestStatistic::operator=(const RooStats::TestStatistic&); Double_tProfiledLikelihood(RooAbsData& data, RooArgSet& poi, RooAbsPdf& pdf); virtual boolRooStats::TestStatistic::PValueIsRightTail() const; RooStats::RatioOfProfiledLikelihoodsTestStatRatioOfProfiledLikelihoodsTestStat(); RooStats::RatioOfProfiledLikelihoodsTestStatRatioOfProfiledLikelihoodsTestStat(const RooStats::RatioOfProfiledLikelihoodsTestStat&); RooStats::RatioOfProfiledLikelihoodsTestStatRatioOfProfiledLikelihoodsTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf, const RooArgSet* altPOI = 0); static voidSetAlwaysReuseNLL(Bool_t flag); voidSetMinimizer(const char* minimizer); voidSetPrintLevel(Int_t printLevel); voidSetReuseNLL(Bool_t flag); voidSetStrategy(Int_t strategy); voidSetSubtractMLE(bool subtract); voidSetTolerance(Double_t tol); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; private:. RooArgSet*fAltPOI; RooStats::ProfileLikelihoodTestStatfAltProfile; RooStats::ProfileLikelihoodTestStatfNullProfile; Bool_tfSubtractMLE; static Bool_tfgAlwaysReuseNll. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RatioOfProfiledLikelihoodsTestStat(); Proof constructor. Don't use. RatioOfProfiledLikelihoodsTestStat(RooAbsPdf& nullPdf, RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__RatioOfProfiledLikelihoodsTestStat.html:715,Test,TestStatistic,715,root/html532/RooStats__RatioOfProfiledLikelihoodsTestStat.html,https://root.cern,https://root.cern/root/html532/RooStats__RatioOfProfiledLikelihoodsTestStat.html,4,['Test'],['TestStatistic']
Testability,ass charts. ROOT; » TMVA; » TMVA::TActivationChooser. class TMVA::TActivationChooser. TActivationChooser. Class for easily choosing activation functions. Function Members (Methods); public:. virtual~TActivationChooser(); static TClass*Class(); TMVA::TActivation*CreateActivation(TMVA::TActivationChooser::EActivationType type) const; TMVA::TActivation*CreateActivation(const TString& type) const; vector<TString>*GetAllActivationNames() const; virtual TClass*IsA() const; TMVA::TActivationChooser&operator=(const TMVA::TActivationChooser&); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TMVA::TActivationChooserTActivationChooser(); TMVA::TActivationChooserTActivationChooser(const TMVA::TActivationChooser&). private:. TMVA::MsgLogger&Log() const. Data Members; public:. enum EActivationType { kLinear; kSigmoid; kTanh; kRadial; };. private:. TStringfLINEARactivation function name; TMVA::MsgLogger*fLogger! message logger; TStringfRADIALactivation function name; TStringfSIGMOIDactivation function name; TStringfTANHactivation function name. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TActivationChooser(); defaut constructor. ~TActivationChooser(); destructor. CreateActivation(EActivationType type); instantiate the correct activation object according to the; type choosen (given as the enumeration type). CreateActivation(const TString& type) const; instantiate the correct activation object according to the; type choosen (given by a TString). GetAllActivationNames() const; retuns the names of all know activation functions. TActivationChooser(). » Author: Matt Jachowski » Copyright (c) 2005: *; » Last changed: root/tmva $Id: TActivationChooser.h 29195 2009-06-24 10:39:49Z brun $ » Last generated: 2010-11-26 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__TActivationChooser.html:1211,log,logger,1211,root/html528/TMVA__TActivationChooser.html,https://root.cern,https://root.cern/root/html528/TMVA__TActivationChooser.html,1,['log'],['logger']
Testability,"ass declaration ; Definition at line 82 of file ResultsRegression.h. ◆ DeviationAsAFunctionOf(). TH2F * TMVA::ResultsRegression::DeviationAsAFunctionOf ; (; UInt_t ; varNum, . UInt_t ; tgtNum . ). Definition at line 115 of file ResultsRegression.cxx. ◆ GetAnalysisType(). Types::EAnalysisType TMVA::ResultsRegression::GetAnalysisType ; (; ). inlineoverridevirtual . Reimplemented from TMVA::Results.; Definition at line 74 of file ResultsRegression.h. ◆ GetSize(). Long64_t TMVA::ResultsRegression::GetSize ; (; ); const. inline . Definition at line 66 of file ResultsRegression.h. ◆ GetValueVector(). std::vector< std::vector< Float_t > > * TMVA::ResultsRegression::GetValueVector ; (; ). inline . Definition at line 68 of file ResultsRegression.h. ◆ IsA(). TClass * TMVA::ResultsRegression::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::Results.; Definition at line 82 of file ResultsRegression.h. ◆ Log(). MsgLogger & TMVA::ResultsRegression::Log ; (; ); const. inlineprivate . Definition at line 79 of file ResultsRegression.h. ◆ operator[](). const std::vector< Float_t > & TMVA::ResultsRegression::operator[] ; (; Int_t ; ievt); const. inlineoverridevirtual . Implements TMVA::Results.; Definition at line 67 of file ResultsRegression.h. ◆ QuadraticDeviation(). TH1F * TMVA::ResultsRegression::QuadraticDeviation ; (; UInt_t ; tgtNum, . Bool_t ; truncate = false, . Double_t ; truncvalue = 0. . ). Definition at line 75 of file ResultsRegression.cxx. ◆ Resize(). void TMVA::ResultsRegression::Resize ; (; Int_t ; entries). inline . Definition at line 60 of file ResultsRegression.h. ◆ SetValue(). void TMVA::ResultsRegression::SetValue ; (; std::vector< Float_t > & ; value, . Int_t ; ievt . ). Definition at line 67 of file ResultsRegression.cxx. ◆ Streamer(). void TMVA::ResultsRegression::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TMVA::Results. ◆ StreamerNVirtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1ResultsRegression.html:14534,Log,Log,14534,doc/master/classTMVA_1_1ResultsRegression.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1ResultsRegression.html,1,['Log'],['Log']
Testability,"ass description; function members; data members; class charts. ROOT; » MATH; » UNURAN; » TUnuranMultiContDist. class TUnuranMultiContDist: public TUnuranBaseDist. TUnuranMultiContDist class describing multi dimensional continuous distributions.; It is used by TUnuran to generate a set of random numbers according to this distribution via; TUnuran::Sample(double *).; The class can be constructed from a multi-dimensional function (TF1 pointer, which can be actually also a; TF2 or a TF3).; It provides a method to set the domain of the distribution ( SetDomain ) which will correspond to the range; of the generated random numbers. By default the domain is [(-inf,-inf,...)(+inf,+inf,...)], indipendently of the; range set in the TF1 class used to construct the distribution. The derivatives of the pdf which are used by some UNURAN methods are estimated numerically in the; Derivative() method. Some extra information (like distribution mode) can be set using SetMode.; Some methods require instead of the pdf the log of the pdf.; This can also be controlled by setting a flag when constructing this class. Function Members (Methods); public:. TUnuranMultiContDist(const TUnuranMultiContDist&); TUnuranMultiContDist(const ROOT::Math::IMultiGenFunction& pdf, bool isLogPdf = false); TUnuranMultiContDist(TF1* func = 0, unsigned int dim = 0, bool isLogPdf = false); virtual~TUnuranMultiContDist(); static TClass*Class(); virtual TUnuranMultiContDist*Clone() const; doubleDerivative(const double* x, int icoord) const; const double*GetLowerDomain() const; const double*GetMode() const; const double*GetUpperDomain() const; voidGradient(const double* x, double* grad) const; virtual TClass*IsA() const; boolIsLogPdf() const; unsigned intNDim() const; TUnuranMultiContDist&operator=(const TUnuranMultiContDist& rhs); doublePdf(const double* x) const; voidSetDomain(const double* xmin, const double* xmax); voidSetMode(const double* x); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUnuranMultiContDist.html:1158,log,log,1158,root/html528/TUnuranMultiContDist.html,https://root.cern,https://root.cern/root/html528/TUnuranMultiContDist.html,3,['log'],['log']
Testability,"ass description; function members; data members; class charts. ROOT; » MATH; » UNURAN; » TUnuranMultiContDist. class TUnuranMultiContDist: public TUnuranBaseDist. TUnuranMultiContDist class describing multi dimensional continuous distributions.; It is used by TUnuran to generate a set of random numbers according to this distribution via; TUnuran::Sample(double *).; The class can be constructed from a multi-dimensional function (TF1 pointer, which can be actually also a; TF2 or a TF3).; It provides a method to set the domain of the distribution ( SetDomain ) which will correspond to the range; of the generated random numbers. By default the domain is [(-inf,-inf,...)(+inf,+inf,...)], indipendently of the; range set in the TF1 class used to construct the distribution. The derivatives of the pdf which are used by some UNURAN methods are estimated numerically in the; Derivative() method. Some extra information (like distribution mode) can be set using SetMode.; Some methods require instead of the pdf the log of the pdf.; This can also be controlled by setting a flag when constructing this class. Function Members (Methods); public:. TUnuranMultiContDist(const TUnuranMultiContDist&); TUnuranMultiContDist(const ROOT::Math::IMultiGenFunction& pdf, bool isLogPdf = false); TUnuranMultiContDist(TF1* func = 0, unsigned int dim = 0, bool isLogPdf = false); virtual~TUnuranMultiContDist(); static TClass*Class(); virtual TUnuranMultiContDist*Clone() const; doubleDerivative(const double* x, int icoord) const; const double*GetLowerDomain() const; const double*GetMode() const; const double*GetUpperDomain() const; voidGradient(const double* x, double* grad) const; virtual TClass*IsA() const; boolIsLogPdf() const; unsigned intNDim() const; TUnuranMultiContDist&operator=(const TUnuranMultiContDist& rhs); doublePdf(const double* x) const; voidSetDomain(const double* xmin, const double* xmax); voidSetMode(const double* x); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnuranMultiContDist.html:1160,log,log,1160,root/html534/TUnuranMultiContDist.html,https://root.cern,https://root.cern/root/html534/TUnuranMultiContDist.html,1,['log'],['log']
Testability,"ass for all named ROOT classes.Definition TNamed.h:29; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TNamed::fNameTString fNameDefinition TNamed.h:32; TObjArrayAn array of TObjects.Definition TObjArray.h:31; TObjArray::AddAtvoid AddAt(TObject *obj, Int_t idx) overrideAdd object at position ids.Definition TObjArray.cxx:254; TObjArray::AddAtAndExpandvirtual void AddAtAndExpand(TObject *obj, Int_t idx)Add object at position idx.Definition TObjArray.cxx:235; TObjArray::Deletevoid Delete(Option_t *option="""") overrideRemove all objects from the array AND delete all heap based objects.Definition TObjArray.cxx:356; TObjArray::AtTObject * At(Int_t idx) const overrideDefinition TObjArray.h:164; TObjArray::UncheckedAtTObject * UncheckedAt(Int_t i) constDefinition TObjArray.h:84; TObjArray::RemoveAtTObject * RemoveAt(Int_t idx) overrideRemove object at index idx.Definition TObjArray.cxx:694; TObjArray::Addvoid Add(TObject *obj) overrideDefinition TObjArray.h:68; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::Infovirtual void Info(const char *method, const char *msgfmt,...) constIssue info message.Definition TObject.cxx:967; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TVirtualGeoPainterAbstract class for geometry painters.Definition TVirtualGeoPainter.h:32; bool; double; int. geomgeomsrcTGeoPhysicalNode.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPhysicalNode_8cxx_source.html:34460,Test,TestBit,34460,doc/master/TGeoPhysicalNode_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPhysicalNode_8cxx_source.html,1,['Test'],['TestBit']
Testability,"ass for implementing GSL multi-root finders not using derivatives. ; Definition at line 155 of file GSLMultiRootSolver.h. Public Member Functions;  GSLMultiRootSolver (const gsl_multiroot_fsolver_type *type, int n);  Constructor from type and simension of system (number of functions) ;  ;  GSLMultiRootSolver (const GSLMultiRootSolver &)=delete;  ;  GSLMultiRootSolver (GSLMultiRootSolver &&)=delete;  ;  ~GSLMultiRootSolver () override;  Destructor (no operations) ;  ; void CreateSolver (const gsl_multiroot_fsolver_type *type, unsigned int n);  ; gsl_vector * GetDx () const override;  return function steps ;  ; gsl_vector * GetF () const override;  return function values ;  ; gsl_vector * GetRoot () const override;  solution values at the current iteration ;  ; int Iterate () override;  perform an iteration ;  ; const std::string & Name () const override;  return name ;  ; GSLMultiRootSolver & operator= (const GSLMultiRootSolver &rhs)=delete;  ; GSLMultiRootSolver & operator= (GSLMultiRootSolver &&rhs)=delete;  ; int SetSolver (const std::vector< ROOT::Math::IMultiGenFunction * > &funcVec, const double *x) override;  set the solver parameters ;  ;  Public Member Functions inherited from ROOT::Math::GSLMultiRootBaseSolver; virtual ~GSLMultiRootBaseSolver ();  virtual Destructor ;  ; const double * Dx () const;  return function steps ;  ; const double * FVal () const;  return function values ;  ; bool InitSolver (const std::vector< ROOT::Math::IMultiGenFunction * > &funcVec, const double *x);  init the solver with function list and initial values ;  ; int TestDelta (double absTol, double relTol) const;  test using abs and relative tolerance |dx| < absTol + relTol*|x| for every component ;  ; int TestResidual (double absTol) const;  test using abs tolerance Sum |f|_i < absTol ;  ; const double * X () const;  solution values at the current iteration ;  . Private Attributes; GSLMultiRootFunctionWrapper fFunctions;  ; std::string fName;  ; gsl_multiroot_fsolver * fSolver;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootSolver.html:1978,Test,TestDelta,1978,doc/master/classROOT_1_1Math_1_1GSLMultiRootSolver.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootSolver.html,4,"['Test', 'test']","['TestDelta', 'TestResidual', 'test']"
Testability,"ass the enumeration type defining the algorithm must be defined in the namespace ROOT::Math::IntegrationOneDim (to distinguish from the multi-dimensional case) and the rule enumeration (or its corresponding integer) can be passed in the constructor of the ROOT::Math::IntegratorOneDIm.; 13.8.3 Multi-dimensional Integration; The multi-dimensional integration algorithm should be applied to functions with dimension larger than one. Adaptive multi-dimensional integration works for low function dimension, while MC integration can be applied to higher dimensions.; 13.8.3.1 Using ROOT::Math::IntegratorMultiDim; Here is a code example on how to use the ROOT::Math::IntegratorOneDim class (note that the class is defined in the header file Math/Integrator.h). In this example we create different instance of the class using some of the available algorithms in ROOT.; #include ""Math/IntegratorMultiDim.h""; #include ""Math/Functor.h"". double f2(const double * x) {; return x[0] + x[1];; }. int testIntegrationMultiDim() {. const double RESULT = 1.0;; const double ERRORLIMIT = 1E-3;; int status = 0;. ROOT::Math::Functor wf(&f2,2);; double a[2] = {0,0};; double b[2] = {1,1};. ROOT::Math::IntegratorMultiDim ig(ROOT::Math::IntegrationMultiDim::kADAPTIVE);; ig.SetFunction(wf);; double val = ig.Integral(a,b);; std::cout << ""integral result is "" << val << std::endl;; status += std::fabs(val-RESULT) > ERRORLIMIT;. ROOT::Math::IntegratorMultiDim ig2(ROOT::Math::IntegrationMultiDim::kVEGAS);; ig2.SetFunction(wf);; val = ig2.Integral(a,b);; std::cout << ""integral result is "" << val << std::endl;; status += std::fabs(val-RESULT) > ERRORLIMIT;. ROOT::Math::IntegratorMultiDim ig3(wf,ROOT::Math::IntegrationMultiDim::kPLAIN);; val = ig3.Integral(a,b);; std::cout << ""integral result is "" << val << std::endl;; status += std::fabs(val-RESULT) > ERRORLIMIT;. ROOT::Math::IntegratorMultiDim ig4(wf,ROOT::Math::IntegrationMultiDim::kMISER);; val = ig4.Integral(a,b);; std::cout << ""integral result is "" << val <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:709917,test,testIntegrationMultiDim,709917,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['test'],['testIntegrationMultiDim']
Testability,"ass(); virtual Double_tConfidenceLevel() const; voidCreateConfBelt(bool flag = true); RooStats::ConfidenceBelt*GetConfidenceBelt(); virtual RooStats::PointSetInterval*GetInterval() const; RooStats::TestStatSampler*GetTestStatSampler(); virtual TClass*IsA() const; RooStats::NeymanConstructionNeymanConstruction(const RooStats::NeymanConstruction&); RooStats::NeymanConstructionNeymanConstruction(RooAbsData& data, RooStats::ModelConfig& model); RooStats::IntervalCalculator&RooStats::IntervalCalculator::operator=(const RooStats::IntervalCalculator&); voidSaveBeltToFile(bool flag = true); virtual voidSetConfidenceLevel(Double_t cl); virtual voidSetData(RooAbsData& data); voidSetLeftSideTailFraction(Double_t leftSideFraction = 0.); virtual voidSetModel(const RooStats::ModelConfig& model); virtual voidSetNuisanceParameters(const RooArgSet&); voidSetParameterPointsToTest(RooAbsData& pointsToTest); virtual voidSetParameters(const RooArgSet&); virtual voidSetPdf(RooAbsPdf&); virtual voidSetTestSize(Double_t size); voidSetTestStatSampler(RooStats::TestStatSampler& sampler); virtual voidShowMembers(TMemberInspector& insp); virtual Double_tSize() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidUseAdaptiveSampling(bool flag = true). Data Members; private:. boolfAdaptiveSamplingcontrols use of adaptive sampling algorithm; Double_tfAdditionalNToysFactorgive user ability to ask for more toys; RooStats::ConfidenceBelt*fConfBelt; boolfCreateBeltcontrols use if ConfidenceBelt should be saved to a TFile; RooAbsData&fDatadata set ; Double_tfLeftSideFraction; RooStats::ModelConfig&fModel; RooAbsData*fPointsToTest; boolfSaveBeltToFilecontrols use if ConfidenceBelt should be saved to a TFile; Double_tfSizesize of the test (eg. specified rate of Type I error); RooStats::TestStatSampler*fTestStatSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; NeymanConstruction(RooAbsData& data, RooStats::ModelConfig& model); de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__NeymanConstruction.html:3562,Test,TestStatSampler,3562,root/html528/RooStats__NeymanConstruction.html,https://root.cern,https://root.cern/root/html528/RooStats__NeymanConstruction.html,3,['Test'],['TestStatSampler']
Testability,"ass*Class(); virtual Double_tConfidenceLevel() const; virtual RooArgList*EvaluateAllTestStatistics(RooAbsData& data, const RooArgSet& poi); virtual Double_tEvaluateTestStatistic(RooAbsData& data, RooArgSet& nullPOI); virtual Double_tEvaluateTestStatistic(RooAbsData& data, RooArgSet& nullPOI, int i); virtual voidGenerateGlobalObservables(RooAbsPdf& pdf) const; virtual RooAbsData*GenerateToyData(RooArgSet& paramPoint) const; virtual RooAbsData*GenerateToyData(RooArgSet& paramPoint, RooAbsPdf& pdf) const; virtual RooAbsData*GenerateToyData(RooArgSet& paramPoint, double& weight) const; virtual RooAbsData*GenerateToyData(RooArgSet& paramPoint, double& weight, RooAbsPdf& pdf) const; virtual Int_tGetNToys(); stringGetSamplingDistName(); virtual RooStats::SamplingDistribution*GetSamplingDistribution(RooArgSet& paramPoint); virtual RooDataSet*GetSamplingDistributions(RooArgSet& paramPoint); virtual RooDataSet*GetSamplingDistributionsSingleWorker(RooArgSet& paramPoint); virtual RooStats::TestStatistic*GetTestStatistic() const; virtual RooStats::TestStatistic*GetTestStatistic(unsigned int i) const; virtual voidInitialize(RooAbsArg&, RooArgSet&, RooArgSet&); virtual TClass*IsA() const; RooStats::TestStatSampler&RooStats::TestStatSampler::operator=(const RooStats::TestStatSampler&); static voidSetAlwaysUseMultiGen(Bool_t flag); virtual voidSetAsimovNuisancePar(Bool_t i = kTRUE); virtual voidSetConfidenceLevel(Double_t cl); virtual voidSetExpectedNuisancePar(Bool_t i = kTRUE); voidSetGenerateAutoBinned(Bool_t autoBinned = kTRUE); voidSetGenerateBinned(bool binned = true); voidSetGenerateBinnedTag(const char* binnedTag = """"); virtual voidSetGlobalObservables(const RooArgSet& o); voidSetMaxToys(Double_t t); virtual voidSetNEventsPerToy(const Int_t nevents); virtual voidSetNToys(const Int_t ntoy); virtual voidSetNuisanceParameters(const RooArgSet& np); virtual voidSetObservables(const RooArgSet& o); virtual voidSetParametersForTestStat(const RooArgSet& nullpoi); virtual voidSetPdf(R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__ToyMCSampler.html:1652,Test,TestStatistic,1652,root/html534/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html534/RooStats__ToyMCSampler.html,1,['Test'],['TestStatistic']
Testability,"ass*Class(); virtual Double_tConfidenceLevel() const; virtual RooArgList*EvaluateAllTestStatistics(RooAbsData& data, const RooArgSet& poi); virtual Double_tEvaluateTestStatistic(RooAbsData& data, RooArgSet& nullPOI); virtual Double_tEvaluateTestStatistic(RooAbsData& data, RooArgSet& nullPOI, int i); virtual voidGenerateGlobalObservables(RooAbsPdf& pdf) const; virtual RooAbsData*GenerateToyData(RooArgSet& paramPoint) const; virtual RooAbsData*GenerateToyData(RooArgSet& paramPoint, RooAbsPdf& pdf) const; virtual RooAbsData*GenerateToyData(RooArgSet& paramPoint, double& weight) const; virtual RooAbsData*GenerateToyData(RooArgSet& paramPoint, double& weight, RooAbsPdf& pdf) const; virtual Int_tGetNToys(); stringGetSamplingDistName(); virtual RooStats::SamplingDistribution*GetSamplingDistribution(RooArgSet& paramPoint); virtual RooDataSet*GetSamplingDistributions(RooArgSet& paramPoint); virtual RooDataSet*GetSamplingDistributionsSingleWorker(RooArgSet& paramPoint); virtual RooStats::TestStatistic*GetTestStatistic() const; virtual RooStats::TestStatistic*GetTestStatistic(unsigned int i) const; virtual voidInitialize(RooAbsArg&, RooArgSet&, RooArgSet&); virtual TClass*IsA() const; RooStats::ToyMCSampler&operator=(const RooStats::ToyMCSampler&); static voidSetAlwaysUseMultiGen(Bool_t flag); virtual voidSetAsimovNuisancePar(Bool_t i = kTRUE); virtual voidSetConfidenceLevel(Double_t cl); virtual voidSetExpectedNuisancePar(Bool_t i = kTRUE); voidSetGenerateAutoBinned(Bool_t autoBinned = kTRUE); voidSetGenerateBinned(bool binned = true); voidSetGenerateBinnedTag(const char* binnedTag = """"); virtual voidSetGlobalObservables(const RooArgSet& o); voidSetMaxToys(Double_t t); virtual voidSetNEventsPerToy(const Int_t nevents); virtual voidSetNToys(const Int_t ntoy); virtual voidSetNuisanceParameters(const RooArgSet& np); virtual voidSetObservables(const RooArgSet& o); virtual voidSetParametersForTestStat(const RooArgSet& nullpoi); virtual voidSetPdf(RooAbsPdf& pdf); virtual voidSetPr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ToyMCSampler.html:1654,Test,TestStatistic,1654,root/html602/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html602/RooStats__ToyMCSampler.html,2,['Test'],['TestStatistic']
Testability,"ass, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; TString GetJobAd ();  Get job Ad. ;  ; Bool_t StartSlaves (Bool_t) override;  Setup Condor workers using dynamic information. ;  ;  Protected Member Functions inherited from TProof;  TProof ();  Protected constructor to be used by classes deriving from TProof (they have to call Init themselves and override StartSlaves appropriately). ;  ; Int_t AddWorkers (TList *wrks);  Works on the master node only. ;  ; Int_t AssertPath (const char *path, Bool_t writable);  Make sure that 'path' exists; if 'writable' is kTRUE, make also sure that the path is writable. ;  ; Int_t Collect (ESlaves list=kActive, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; Int_t Collect (TList *slaves, Long_t timeout=-1, Int_t endtype=-1, Bool_t deactonfail=kFALSE);  Collect responses from the slave servers. ;  ; TSlave * CreateSlave (const char *url, const char *ord, Int_t perf, const char *image, const char *workdir);  Create a new TSlave of type TSlave::kSlave. ;  ; TSlave * CreateSubmaster (const char *url, const char *ord, const char *image, const char *msd, Int_t nwk=1);  Create a new TSlave of type TSlave::kMaster. ;  ; TList * GetEnabledPackages () const;  ; TList * GetListOfActiveSlaves () const;  ; TVirtualProofPlayer * GetPlayer () const;  ; TPluginHandler * GetProgressDialog () const;  ; Int_t GetSandbox (TString &sb, Bool_t assert=kFALSE, const char *rc=0);  Set the sandbox path from ' Proof.Sandbox' or the alte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofCondor.html:35394,Assert,AssertPath,35394,doc/master/classTProofCondor.html,https://root.cern,https://root.cern/doc/master/classTProofCondor.html,1,['Assert'],['AssertPath']
Testability,"assA, classB, ..."" << Endl;; 1600 Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << ""... (note that N_j is the sum of TRAINING events"" << Endl;; 1601 Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << "" ..... Testing events are not renormalised nor included in the renormalisation factor!)"" << Endl;; 1602 ; 1603 // normalize to size of first class; 1604 UInt_t referenceClass = 0;; 1605 for (UInt_t cls = 0, clsEnd = dsi.GetNClasses(); cls < clsEnd; ++cls ) {; 1606 renormFactor.at(cls) = Float_t(trainingSizePerClass.at(referenceClass))/; 1607 (trainingSumWeightsPerClass.at(cls));; 1608 }; 1609 }; 1610 else {; 1611 Log() << kFATAL << Form(""Dataset[%s] : "",dsi.GetName())<< ""<PrepareForTrainingAndTesting> Unknown NormMode: "" << normMode << Endl;; 1612 }; 1613 ; 1614 // ---------------------------------; 1615 // now apply the normalization factors; 1616 Int_t maxL = dsi.GetClassNameMaxLength();; 1617 for (UInt_t cls = 0, clsEnd = dsi.GetNClasses(); cls<clsEnd; ++cls) {; 1618 Log() << kDEBUG //<< Form(""Dataset[%s] : "",dsi.GetName()); 1619 << ""--> Rescale "" << setiosflags(ios::left) << std::setw(maxL); 1620 << dsi.GetClassInfo(cls)->GetName() << "" event weights by factor: "" << renormFactor.at(cls) << Endl;; 1621 for (EventVector::iterator it = tmpEventVector[Types::kTraining].at(cls).begin(),; 1622 itEnd = tmpEventVector[Types::kTraining].at(cls).end(); it != itEnd; ++it){; 1623 (*it)->SetWeight ((*it)->GetWeight() * renormFactor.at(cls));; 1624 }; 1625 ; 1626 }; 1627 ; 1628 ; 1629 // print out the result; 1630 // (same code as before --> this can be done nicer ); 1631 //; 1632 ; 1633 Log() << kINFO //<< Form(""Dataset[%s] : "",dsi.GetName()); 1634 << ""Number of training and testing events"" << Endl;; 1635 Log() << kDEBUG << ""\tafter rescaling:"" << Endl;; 1636 Log() << kINFO //<< Form(""Dataset[%s] : "",dsi.GetName()); 1637 << ""---------------------------------------------------------------------------"" << Endl;; 1638 ; 1639 trainingSumSignalWeights = 0;; 1640 train",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:75225,Log,Log,75225,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['Log'],['Log']
Testability,"assBuilderImpl. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CINT; » REFLEX; » Reflex::ClassBuilderImpl. class Reflex::ClassBuilderImpl. Register an on demand builder with this class. Function Members (Methods); public:. virtual~ClassBuilderImpl(); voidAddBase(const Reflex::Type& bas, Reflex::OffsetFunction offsFP, unsigned int modifiers = 0); voidAddDataMember(const char* nam, const Reflex::Type& typ, size_t offs, unsigned int modifiers = 0); voidAddEnum(const char* nam, const char* values, const type_info* ti, unsigned int modifiers = 0); voidAddFunctionMember(const char* nam, const Reflex::Type& typ, Reflex::StubFunction stubFP, void* stubCtx = 0, const char* params = 0, unsigned int modifiers = 0); voidAddOnDemandDataMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddOnDemandFunctionMemberBuilder(Reflex::OnDemandBuilderForScope* odb); voidAddProperty(const char* key, Reflex::Any value); voidAddProperty(const char* key, const char* value); voidAddProperty(const char* key, const Reflex::Literal& value); voidAddTypedef(const Reflex::Type& typ, const char* def); Reflex::ClassBuilderImplClassBuilderImpl(Reflex::Class* cl); Reflex::ClassBuilderImplClassBuilderImpl(const Reflex::ClassBuilderImpl&); Reflex::ClassBuilderImplClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ = CLASS); Reflex::ClassBuilderImpl&operator=(const Reflex::ClassBuilderImpl&); voidSetSizeOf(size_t size); Reflex::TypeToType(). protected:. voidEnableCallback(bool enable = true). Data Members; private:. boolfCallbackEnabled; Reflex::Class*fClass; Reflex::MemberfLastMember; boolfNewClass. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ClassBuilderImpl(const char* nam, const type_info& ti, size_t size, unsigned int modifiers = 0, Reflex::TYPE typ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/Reflex__ClassBuilderImpl.html:777,Stub,StubFunction,777,root/html530/Reflex__ClassBuilderImpl.html,https://root.cern,https://root.cern/root/html530/Reflex__ClassBuilderImpl.html,9,"['Stub', 'stub']","['StubFunction', 'stubCtx', 'stubFP']"
Testability,"assDef_StreamerNVirtual_b). inline . Definition at line 81 of file MetropolisHastings.h. Member Data Documentation. ◆ fChainParams. RooArgSet RooStats::MetropolisHastings::fChainParams. protected . RooRealVars that are stored in the chain. ; Definition at line 70 of file MetropolisHastings.h. ◆ fFunction. RooAbsReal* RooStats::MetropolisHastings::fFunction = nullptr. protected . function that will generate likelihood values ; Definition at line 68 of file MetropolisHastings.h. ◆ fNumBurnInSteps. Int_t RooStats::MetropolisHastings::fNumBurnInSteps = 0. protected . number of iterations to discard as burn-in, starting from the first ; Definition at line 73 of file MetropolisHastings.h. ◆ fNumIters. Int_t RooStats::MetropolisHastings::fNumIters = 0. protected . number of iterations to run metropolis algorithm ; Definition at line 72 of file MetropolisHastings.h. ◆ fParameters. RooArgSet RooStats::MetropolisHastings::fParameters. protected . RooRealVars that define all parameter space. ; Definition at line 69 of file MetropolisHastings.h. ◆ fPropFunc. ProposalFunction* RooStats::MetropolisHastings::fPropFunc = nullptr. protected . Proposal function for MCMC integration. ; Definition at line 71 of file MetropolisHastings.h. ◆ fSign. enum FunctionSign RooStats::MetropolisHastings::fSign = kSignUnset. protected . whether the likelihood is negative (like NLL) or positive ; Definition at line 74 of file MetropolisHastings.h. ◆ fType. enum FunctionType RooStats::MetropolisHastings::fType = kTypeUnset. protected . whether the likelihood is on a regular, log, (or other) scale ; Definition at line 75 of file MetropolisHastings.h. Libraries for RooStats::MetropolisHastings:. [legend]; The documentation for this class was generated from the following files:; roofit/roostats/inc/RooStats/MetropolisHastings.h; roofit/roostats/src/MetropolisHastings.cxx. RooStatsMetropolisHastings. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:55 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MetropolisHastings.html:19750,log,log,19750,doc/master/classRooStats_1_1MetropolisHastings.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MetropolisHastings.html,1,['log'],['log']
Testability,"assMember(""kShowEventStatus"", ""Bool_t"");; 2412 b << TestBit(kShowEventStatus); //please remove in ROOT version 6; 2413 b.ClassMember(""kAutoExec"", ""Bool_t"");; 2414 b << TestBit(kAutoExec); //please remove in ROOT version 6; 2415 b.ClassMember(""kMenuBar"", ""Bool_t"");; 2416 b << TestBit(kMenuBar); //please remove in ROOT version 6; 2417 b.ClassEnd(TCanvas::IsA());; 2418 b.SetByteCount(R__c, kTRUE);; 2419 }; 2420}; 2421 ; 2422////////////////////////////////////////////////////////////////////////////////; 2423/// Toggle pad auto execution of list of TExecs.; 2424 ; 2425void TCanvas::ToggleAutoExec(); 2426{; 2427 Bool_t autoExec = TestBit(kAutoExec);; 2428 SetBit(kAutoExec,!autoExec);; 2429}; 2430 ; 2431////////////////////////////////////////////////////////////////////////////////; 2432/// Toggle event statusbar.; 2433 ; 2434void TCanvas::ToggleEventStatus(); 2435{; 2436 Bool_t showEventStatus = !TestBit(kShowEventStatus);; 2437 SetBit(kShowEventStatus,showEventStatus);; 2438 ; 2439 if (fCanvasImp) fCanvasImp->ShowStatusBar(showEventStatus);; 2440}; 2441 ; 2442////////////////////////////////////////////////////////////////////////////////; 2443/// Toggle toolbar.; 2444 ; 2445void TCanvas::ToggleToolBar(); 2446{; 2447 Bool_t showToolBar = !TestBit(kShowToolBar);; 2448 SetBit(kShowToolBar,showToolBar);; 2449 ; 2450 if (fCanvasImp) fCanvasImp->ShowToolBar(showToolBar);; 2451}; 2452 ; 2453////////////////////////////////////////////////////////////////////////////////; 2454/// Toggle editor.; 2455 ; 2456void TCanvas::ToggleEditor(); 2457{; 2458 Bool_t showEditor = !TestBit(kShowEditor);; 2459 SetBit(kShowEditor,showEditor);; 2460 ; 2461 if (fCanvasImp) fCanvasImp->ShowEditor(showEditor);; 2462}; 2463 ; 2464////////////////////////////////////////////////////////////////////////////////; 2465/// Toggle tooltip display.; 2466 ; 2467void TCanvas::ToggleToolTips(); 2468{; 2469 Bool_t showToolTips = !TestBit(kShowToolTips);; 2470 SetBit(kShowToolTips, showToolTips);; 2471 ; 24",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8cxx_source.html:79120,Test,TestBit,79120,doc/master/TCanvas_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCanvas_8cxx_source.html,1,['Test'],['TestBit']
Testability,"assName(ostream& os) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidRooPrintable::printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; virtual voidprintName(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidprintTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidRooPrintable::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidsetVerbose(Bool_t verbose = kTRUE); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsNumGenerator.html:6243,Test,TestBit,6243,root/html526/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html526/RooAbsNumGenerator.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"assVersion()==0)) {; 920 // We must match on the same checksum, an existing TStreamerInfo; 921 // for one of the 'unversioned' class layout (i.e. version was 1).; 922 fClassVersion = i;; 923 break;; 924 }; 925 info = 0;; 926 }; 927 if (info==0) {; 928 // Find an empty slot.; 929 ninfos = array->GetEntriesFast() - 1;; 930 Int_t slot = 1; // Start of Class version 1.; 931 while ((slot < ninfos) && (array->UncheckedAt(slot) != 0)) {; 932 ++slot;; 933 }; 934 fClassVersion = slot;; 935 }; 936 }; 937 ; 938 // NOTE: Should we check if the already existing info is the same as; 939 // the current one? Yes; 940 // In case a class (eg Event.h) has a TClonesArray of Tracks, it could be; 941 // that the old info does not have the class name (Track) in the data; 942 // member title. Set old title to new title; 943 if (info) {; 944 // We found an existing TStreamerInfo for our ClassVersion; 945 Bool_t match = kTRUE;; 946 Bool_t done = kFALSE;; 947 Bool_t oldIsNonVersioned = kFALSE;; 948 if (fClassVersion!=0 && !fClass->TestBit(TClass::kWarned) && (fClassVersion == info->GetClassVersion()) && (fCheckSum != info->GetCheckSum())) {; 949 // The TStreamerInfo's checksum is different from the checksum for the compile class.; 950 ; 951 match = kFALSE;; 952 oldIsNonVersioned = (info->fOnFileClassVersion==1 && info->fClassVersion != 1) || isStdPair;; 953 ; 954 if (fClass->IsLoaded() && (fClassVersion == fClass->GetClassVersion()) && fClass->HasDataMemberInfo()) {; 955 // In the case where the read-in TStreamerInfo does not; 956 // match in the 'current' in memory TStreamerInfo for; 957 // a non foreign class (we can not get here if this is; 958 // a foreign class so we do not need to test it),; 959 // we need to add this one more test since the CINT behaviour; 960 // with enums changed over time, so verify the checksum ignoring; 961 // members of type enum. We also used to not count the //[xyz] comment; 962 // in the checksum, so test for that too.; 963 if ( (fCheckSum == fClass->GetCheckSu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:34547,Test,TestBit,34547,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['Test'],['TestBit']
Testability,"ass_PDEFoam.weights_foams.root; : Booked classifier ""PDEFoam"" of type: ""PDEFoam""; --- TMVAMulticlassApp : Using input file: ./files/tmva_multiclass_example.root; --- Select signal sample; : Rebuilding Dataset Default; --- End of event loop: Real time 0:00:00, CP time 0.660; --- Created root file: ""TMVMulticlassApp.root"" containing the MVA output histograms; ==> TMVAMulticlassApp is done!; ; ; ; #include <cstdlib>; #include <iostream>; #include <map>; #include <string>; #include <vector>; ; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include ""TSystem.h""; #include ""TROOT.h""; #include ""TStopwatch.h""; #include ""TH1F.h""; ; #include ""TMVA/Tools.h""; #include ""TMVA/Reader.h""; ; using namespace TMVA;; ; void TMVAMulticlassApplication( TString myMethodList = """" ); {; ; TMVA::Tools::Instance();; ; //---------------------------------------------------------------; // Default MVA methods to be trained + tested; std::map<std::string,int> Use;; Use[""MLP""] = 1;; Use[""BDTG""] = 1;; Use[""DL_CPU""] = 1;; Use[""DL_GPU""] = 1;; Use[""FDA_GA""] = 1;; Use[""PDEFoam""] = 1;; //---------------------------------------------------------------; ; std::cout << std::endl;; std::cout << ""==> Start TMVAMulticlassApp"" << std::endl;; if (myMethodList != """") {; for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) it->second = 0;; ; std::vector<TString> mlist = gTools().SplitString( myMethodList, ',' );; for (UInt_t i=0; i<mlist.size(); i++) {; std::string regMethod(mlist[i]);; ; if (Use.find(regMethod) == Use.end()) {; std::cout << ""Method \"""" << regMethod << ""\"" not known in TMVA under this name. Choose among the following:"" << std::endl;; for (std::map<std::string,int>::iterator it = Use.begin(); it != Use.end(); it++) std::cout << it->first << "" "" << std::endl;; std::cout << std::endl;; return;; }; Use[regMethod] = 1;; }; }; ; ; // create the Reader object; TMVA::Reader *reader = new TMVA::Reader( ""!Color:!Silent"" );; ; // create a set of variables and decla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlassApplication_8C.html:2731,test,tested,2731,doc/master/TMVAMulticlassApplication_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlassApplication_8C.html,1,['test'],['tested']
Testability,"assert( fDataErrorHigh.empty() && fDataErrorLow.empty() );; 279 assert( fDataError.empty() || &fDataError.front() == fDataErrorPtr );; 280 ; 281 double eval = fDataErrorPtr[ ipoint ];; 282 ; 283 if (fWrapped); 284 return eval;; 285 else; 286 return (eval != 0.0) ? 1.0/eval : 0.0;; 287 }; 288 ; 289 if ( fErrorType == kAsymError ); 290 { // return 1/2(el + eh); 291 assert( !fDataErrorPtr && fDataErrorHighPtr && fDataErrorLowPtr );; 292 assert( fDataError.empty() );; 293 assert( fDataErrorHigh.empty() || &fDataErrorHigh.front() == fDataErrorHighPtr );; 294 assert( fDataErrorLow.empty() || &fDataErrorLow.front() == fDataErrorLowPtr );; 295 assert( fDataErrorLow.empty() == fDataErrorHigh.empty() );; 296 ; 297 double eh = fDataErrorHighPtr[ ipoint ];; 298 double el = fDataErrorLowPtr[ ipoint ];; 299 ; 300 return (el+eh) / 2.0;; 301 }; 302 ; 303 assert( fErrorType == kCoordError );; 304 return fDataErrorPtr[ ipoint ];; 305 }; 306 ; 307 void GetAsymError( unsigned int ipoint, double& lowError, double& highError ) const; 308 {; 309 assert( fErrorType == kAsymError );; 310 assert( !fDataErrorPtr && fDataErrorHighPtr && fDataErrorLowPtr );; 311 assert( fDataError.empty() );; 312 assert( fDataErrorHigh.empty() || &fDataErrorHigh.front() == fDataErrorHighPtr );; 313 assert( fDataErrorLow.empty() || &fDataErrorLow.front() == fDataErrorLowPtr );; 314 assert( fDataErrorLow.empty() == fDataErrorHigh.empty() );; 315 ; 316 lowError = fDataErrorLowPtr[ ipoint ];; 317 highError = fDataErrorHighPtr[ ipoint ];; 318 }; 319 ; 320 /**; 321 Return the inverse of error on the value for the given fit point; 322 useful when error in the coordinates are not stored and then this is used directly this as the weight in; 323 the least square function; 324 */; 325 double InvError( unsigned int ipoint ) const; 326 {; 327 assert( ipoint < fMaxPoints );; 328 assert( kValueError == fErrorType || kCoordError == fErrorType ||; 329 kAsymError == fErrorType || kNoError == fErrorType );; 330 ; 331 if ( fErrorTy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:10420,assert,assert,10420,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,4,['assert'],['assert']
Testability,"assification Class Reference. . Definition at line 162 of file Classification.h. Public Member Functions;  Classification (DataLoader *loader, TFile *file, TString options);  Contructor to create a two class classifier. ;  ;  Classification (DataLoader *loader, TString options);  Contructor to create a two class classifier without output file. ;  ;  ~Classification ();  ; virtual void Evaluate ();  Method to perform Train/Test over all ml method booked. ;  ; MethodBase * GetMethod (TString methodname, TString methodtitle);  Return a TMVA::MethodBase object. ;  ; std::vector< ClassificationResult > & GetResults ();  Return the vector of TMVA::Experimental::ClassificationResult objects. ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Test ();  Perform test evaluation in all booked methods. ;  ; virtual void TestMethod (TString methodname, TString methodtitle);  Lets perform test an specific ml method. ;  ; virtual void TestMethod (Types::EMVA method, TString methodtitle);  Lets perform test an specific ml method given the method type in enum TMVA::Types::EMVA. ;  ; virtual void Train ();  Method to train all booked ml methods. ;  ; virtual void TrainMethod (TString methodname, TString methodtitle);  Lets train an specific ml method. ;  ; virtual void TrainMethod (Types::EMVA method, TString methodtitle);  Lets train an specific ml method given the method type in enum TMVA::Types::EMVA. ;  ;  Public Member Functions inherited from TMVA::Envelope;  ~Envelope ();  Default destructor. ;  ; virtual void BookMethod (TString methodname, TString methodtitle, TString options="""");  Method to book the machine learning method to perform the algorithm. ;  ; virtual void BookMethod (Types::EMVA method, TString methodtitle, TString options="""");  Method to book the machine learning method to perform the algorithm. ;  ; DataLoader * GetDataLo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Experimental_1_1Classification.html:1283,Test,TestMethod,1283,doc/master/classTMVA_1_1Experimental_1_1Classification.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Experimental_1_1Classification.html,2,"['Test', 'test']","['TestMethod', 'test']"
Testability,"assification::MergeFiles ; (; ). protected . Definition at line 1130 of file Classification.cxx. ◆ Streamer(). virtual void TMVA::Experimental::Classification::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TMVA::Envelope. ◆ StreamerNVirtual(). void TMVA::Experimental::Classification::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 202 of file Classification.h. ◆ Test(). void TMVA::Experimental::Classification::Test ; (; ). virtual . Perform test evaluation in all booked methods. ; Definition at line 513 of file Classification.cxx. ◆ TestMethod() [1/2]. void TMVA::Experimental::Classification::TestMethod ; (; TString ; methodname, . TString ; methodtitle . ). virtual . Lets perform test an specific ml method. ; Parameters. methodnamename of the method. ; methodtitlemethod title. . Definition at line 526 of file Classification.cxx. ◆ TestMethod() [2/2]. void TMVA::Experimental::Classification::TestMethod ; (; Types::EMVA ; method, . TString ; methodtitle . ). virtual . Lets perform test an specific ml method given the method type in enum TMVA::Types::EMVA. ; Parameters. methodTMVA::Types::EMVA type. ; methodtitlemethod title. . Definition at line 935 of file Classification.cxx. ◆ Train(). void TMVA::Experimental::Classification::Train ; (; ). virtual . Method to train all booked ml methods. ; Definition at line 324 of file Classification.cxx. ◆ TrainMethod() [1/2]. void TMVA::Experimental::Classification::TrainMethod ; (; TString ; methodname, . TString ; methodtitle . ). virtual . Lets train an specific ml method. ; Parameters. methodnamename of the method. ; methodtitlemethod title. . Definition at line 337 of file Classification.cxx. ◆ TrainMethod() [2/2]. void TMVA::Experimental::Classification::TrainMethod ; (; Types::EMVA ; method, . TString ; methodtitle . ). virtual . Lets train an specific ml method given the method type in enum TMVA::Types::EMVA. ; Parameters. met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Experimental_1_1Classification.html:26825,Test,TestMethod,26825,doc/master/classTMVA_1_1Experimental_1_1Classification.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Experimental_1_1Classification.html,1,['Test'],['TestMethod']
Testability,"assive grab on a certain mouse button. ; That is, when a certain mouse button is hit while certain modifier's (Shift, Control, Meta, Alt) are active then the mouse will be grabbed for window id. When grab is false, ungrab the mouse button for this button and modifier. ; Reimplemented from TVirtualX.; Definition at line 2644 of file TGCocoa.mm. ◆ GrabKey(). void TGCocoa::GrabKey ; (; Window_t ; id, . Int_t ; keycode, . UInt_t ; modifier, . Bool_t ; grab = kTRUE . ). overridevirtual . Establishes a passive grab on the keyboard. ; In the future, the keyboard is actively grabbed, the last-keyboard-grab time is set to the time at which the key was pressed (as transmitted in the KeyPress event), and the KeyPress event is reported if all of the following conditions are true:. the keyboard is not grabbed and the specified key (which can itself be a modifier key) is logically pressed when the specified modifier keys are logically down, and no other modifier keys are logically down;; either the grab window ""id"" is an ancestor of (or is) the focus window, or ""id"" is a descendant of the focus window and contains the pointer;; a passive grab on the same key combination does not exist on any ancestor of grab_window. Parameters. [in]idwindow id ; [in]keycodespecifies the KeyCode or AnyKey ; [in]modifierspecifies the set of keymasks or AnyModifier; the mask is the bitwise inclusive OR of the valid keymask bits ; [in]graba switch between grab/ungrab key grab = kTRUE grab the key and modifier grab = kFALSE ungrab the key and modifier . Reimplemented from TVirtualX.; Definition at line 2715 of file TGCocoa.mm. ◆ GrabPointer(). void TGCocoa::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). overridevirtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented from TV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:91174,log,logically,91174,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,3,['log'],['logically']
Testability,"associated with pdf observables that match the given tagName. . Verbose(bool flag) Controls RooFit informational messages in likelihood construction . CloneData(bool flag) Use clone of dataset in NLL (default is true). WarningDeprecated option that is ignored. It is up to the implementation of the NLL creation method if the data is cloned or not. . Offset(std::string const& mode) Likelihood offsetting mode. Can be either: . Mode Description . none - default No offsetting. . initial Offset likelihood by initial value (so that starting value of FCN in minuit is zero). This can improve numeric stability in simultaneous fits with components with large likelihood values. . bin Offset likelihood bin-by-bin with a template histogram model based on the obersved data. This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum, which can drastically improve numeric stability. Furthermore, \(2\cdot \text{NLL}\) defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests. . IntegrateBins(double precision) In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre. This can reduce the bias observed when fitting functions with high curvature to binned data.; precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning. Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator has to be manipulated directly.; precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; precision < 0: Deactivate. See alsoRooBinSamplingPdf . ModularL(bool flag) Enable or disable modular likelihoods, which will become the default in a future release. This does not change any user-fa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:94903,test,tests,94903,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['test'],['tests']
Testability,"aster. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TBenchmark Class ReferenceCore ROOT classes » Base ROOT classes. ; This class is a ROOT utility to help benchmarking applications. ; Definition at line 29 of file TBenchmark.h. Public Member Functions;  TBenchmark ();  Benchmark default constructor. ;  ; virtual ~TBenchmark ();  Benchmark destructor. ;  ; Int_t GetBench (const char *name) const;  Returns index of Benchmark name. ;  ; Float_t GetCpuTime (const char *name);  Returns Cpu time used by Benchmark name. ;  ; Float_t GetRealTime (const char *name);  Returns Realtime used by Benchmark name. ;  ; TClass * IsA () const override;  ; void Print (Option_t *name="""") const override;  Prints parameters of Benchmark name. ;  ; virtual void Reset ();  Reset all Benchmarks. ;  ; virtual void Show (const char *name);  Stops Benchmark name and Prints results. ;  ; virtual void Start (const char *name);  Starts Benchmark with the specified name. ;  ; virtual void Stop (const char *name);  Terminates Benchmark with specified name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Summary (Float_t &rt, Float_t &cp);  Prints a summary of all benchmarks. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBenchmark.html:1058,Benchmark,Benchmark,1058,doc/master/classTBenchmark.html,https://root.cern,https://root.cern/doc/master/classTBenchmark.html,1,['Benchmark'],['Benchmark']
Testability,"aster/namespaceTMath.html ; Definition at line 896 of file GoFTest.cxx. ◆ KolmogorovSmirnovTest() [1/2]. Double_t ROOT::Math::GoFTest::KolmogorovSmirnovTest ; (; const Char_t * ; option = ""p""); const. Kolmogorov-Smirnov 1-Sample Test. ; Returns default p-value; option ""t"" returns the test statistic value ""Dn"". ; Definition at line 945 of file GoFTest.cxx. ◆ KolmogorovSmirnovTest() [2/2]. void ROOT::Math::GoFTest::KolmogorovSmirnovTest ; (; Double_t & ; pvalue, . Double_t & ; testStat . ); const. Kolmogorov-Smirnov 1-Sample Test. ; The Kolmogorov-Smirnov 1-Sample Test algorithm for a specific distribution is described at http://www.itl.nist.gov/div898/software/dataplot/refman1/auxillar/kstest.htm and described and taken from (4) Press W. H., Teukolsky S.A., Vetterling W.T., Flannery B.P. (2007), Numerical Recipes - The Art of Scientific Computing (Third Edition), Cambridge University Press ; Definition at line 921 of file GoFTest.cxx. ◆ LogNormalCDF(). Double_t ROOT::Math::GoFTest::LogNormalCDF ; (; Double_t ; x); const. private . ◆ LogSample(). void ROOT::Math::GoFTest::LogSample ; (; ). private . Applies the logarithm to the sample when the specified distribution to test is LogNormal. ; Definition at line 303 of file GoFTest.cxx. ◆ operator()() [1/2]. void ROOT::Math::GoFTest::operator() ; (; ETestType ; test, . Double_t & ; pvalue, . Double_t & ; testStat . ); const. The class's unary functions performing the gif test according to the ETestType provided. ; Definition at line 208 of file GoFTest.cxx. ◆ operator()() [2/2]. Double_t ROOT::Math::GoFTest::operator() ; (; ETestType ; test = kAD, . const Char_t * ; option = ""p"" . ); const. Returns default Anderson Darling 1-Sample Test and default p-value; option ""t"" returns the test statistic value specific to the test type. ; Definition at line 225 of file GoFTest.cxx. ◆ operator=(). GoFTest ROOT::Math::GoFTest::operator= ; (; GoFTest & ; gof). private . Disallowed assign operator. . ◆ PValueAD1Sample(). Double_t ROOT:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GoFTest.html:15931,Log,LogNormalCDF,15931,doc/master/classROOT_1_1Math_1_1GoFTest.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GoFTest.html,1,['Log'],['LogNormalCDF']
Testability,"aster; 'm' Top master creating a submaster; 's' Master creating a slave; The buffer 'logbuf' is a null terminated string to be sent over at; login. TXSocket(const TXSocket& ); TXSocket copy ctor. TXSocket& operator=(const TXSocket& ); TXSocket assignment operator. ~TXSocket(); Destructor. void SetLocation(const char* loc = """"); Set location string. void SetSessionID(Int_t id); Set session ID to 'id'. If id < 0, disable also the asynchronous handler. void DisconnectSession(Int_t id, Option_t* opt = """"); Disconnect a session. Use opt= ""S"" or ""s"" to; shutdown remote session.; Default is opt = """". void Close(Option_t* opt = """"); Close connection. Available options are (case insensitive); 'P' force closing of the underlying physical connection; 'S' shutdown remote session, is any; A session ID can be given using #...# signature, e.g. ""#1#"".; Default is opt = """". UnsolRespProcResult ProcessUnsolicitedMsg(XrdClientUnsolMsgSender* s, XrdClientMessage* msg); We are here if an unsolicited response comes from a logical conn; The response comes in the form of an XrdClientMessage *, that must NOT be; destroyed after processing. It is destroyed by the first sender.; Remember that we are in a separate thread, since unsolicited; responses are asynchronous by nature. void PostMsg(Int_t type, const char* msg = 0); Post a message of type 'type' into the read messages queue.; If 'msg' is defined it is also added as TString.; This is used, for example, with kPROOF_FATAL to force the main thread; to mark this socket as bad, avoiding race condition when a worker; dies while in processing state. Bool_t IsServProofd(); Return kTRUE if the remote server is a 'proofd'. Int_t GetInterrupt(Bool_t& forward); Get latest interrupt level and reset it; if the interrupt has to be; propagated to lower stages forward will be kTRUE after the call. Int_t Flush(); Flush the asynchronous queue.; Typically called when a kHardInterrupt is received.; Returns number of bytes in flushed buffers. Bool_t Create(Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSocket.html:15057,log,logical,15057,root/html602/TXSocket.html,https://root.cern,https://root.cern/root/html602/TXSocket.html,2,['log'],['logical']
Testability,"astic minimisation (look at the constructor for the complete description of learning methods and parameters) ;  ; void SetEta (Double_t eta);  Sets Eta - used in stochastic minimisation (look at the constructor for the complete description of learning methods and parameters) ;  ; void SetEtaDecay (Double_t ed);  Sets EtaDecay - Eta *= EtaDecay at each epoch (look at the constructor for the complete description of learning methods and parameters) ;  ; void SetEventWeight (const char *);  Set the event weight. ;  ; void SetLearningMethod (TMultiLayerPerceptron::ELearningMethod method);  Sets the learning method. ;  ; void SetReset (Int_t reset);  Sets number of epochs between two resets of the search direction to the steepest descent. ;  ; void SetTau (Double_t tau);  Sets Tau - used in line search (look at the constructor for the complete description of learning methods and parameters) ;  ; void SetTestDataSet (const char *test);  Sets the Test dataset. ;  ; void SetTestDataSet (TEventList *test);  Sets the Test dataset. ;  ; void SetTrainingDataSet (const char *train);  Sets the Training dataset. ;  ; void SetTrainingDataSet (TEventList *train);  Sets the Training dataset. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Train (Int_t nEpoch, Option_t *option=""text"", Double_t minE=0);  Train the network. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:14524,test,test,14524,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,2,"['Test', 'test']","['Test', 'test']"
Testability,"at 0; expo(3) is a substitute for exp([3]+[4]*x); pol3(5) is a substitute for par[5]+par[6]*x+par[7]*x**2+par[8]*x**3; (here Pol3 stands for Polynomial of degree 3). TMath functions can be part of the expression, eg:; - TMath::Landau(x)*sin(x); - TMath::Erf(x). Comparisons operators are also supported (&&, ||, ==, <=, >=, !); Examples:; sin(x*(x<0.5 || x>1)); If the result of a comparison is TRUE, the result is 1, otherwise 0. Already predefined names can be given. For example, if the formula; TFormula old(sin(x*(x<0.5 || x>1))) one can assign a name to the formula. By default; the name of the object = title = formula itself.; old.SetName(""old"").; then, old can be reused in a new expression.; TFormula new(""x*old"") is equivalent to:; TFormula new(""x*sin(x*(x<0.5 || x>1))""). Up to 4 dimensions are supported (indicated by x, y, z, t); An expression may have 0 parameters or a list of parameters; indicated by the sequence [par_number]. A graph showing the logic to compile and analyze a formula; is shown in TFormula::Compile and TFormula::Analyze.; Once a formula has been compiled, it can be evaluated for a given; set of parameters. see graph in TFormula::EvalPar. This class is the base class for the function classes TF1,TF2 and TF3.; It is also used by the ntuple selection mechanism TNtupleFormula. In version 7 of TFormula, the usage of fOper has been changed; to improve the performance of TFormula::EvalPar.; Conceptually, fOper was changed from a simple array of Int_t; to an array of composite values.; For example a 'ylandau(5)' operation used to be encoded as 4105;; it is now encoded as (klandau >> kTFOperShit) + 5; Any class inheriting from TFormula and using directly fOper (which; is now a private data member), needs to be updated to take this; in consideration. The member functions recommended to set and; access fOper are: SetAction, GetAction, GetActionParam; For more performant access to the information, see the implementation; TFormula::EvalPar. CHANGING DEFAULT S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFormula.html:1732,log,logic,1732,root/html534/TFormula.html,https://root.cern,https://root.cern/root/html534/TFormula.html,3,['log'],['logic']
Testability,"at holds configuration information specifying how a model should be used in the context of various RooStats tools ;  CNeymanConstructionNeymanConstruction is a concrete implementation of the NeymanConstruction interface that, as the name suggests, performs a NeymanConstruction ;  CNuisanceParametersSamplerHelper class for ToyMCSampler ;  CNumberCountingPdfFactory;  CNumEventsTestStatNumEventsTestStat is a simple implementation of the TestStatistic interface used for simple number counting ;  CPdfProposalPdfProposal is a concrete implementation of the ProposalFunction interface ;  CPointSetIntervalPointSetInterval is a concrete implementation of the ConfInterval interface ;  CProfileInspector;  CProfileLikelihoodCalculatorProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator (the interface class for a tools which can produce both RooStats HypoTestResults and ConfIntervals) ;  CProfileLikelihoodTestStatProfileLikelihoodTestStat is an implementation of the TestStatistic interface that calculates the profile likelihood ratio at a particular parameter point given a dataset ;  CProofConfigHolds configuration options for proof and proof-lite ;  CProposalFunctionProposalFunction is an interface for all proposal functions that would be used with a Markov Chain Monte Carlo algorithm ;  CProposalHelper;  CRatioOfProfiledLikelihoodsTestStatTestStatistic that returns the ratio of profiled likelihoods ;  CSamplingDistPlotThis class provides simple and straightforward utilities to plot SamplingDistribution objects ;  CSamplingDistributionThis class simply holds a sampling distribution of some test statistic ;  CSamplingSummary;  CSamplingSummaryLookup;  CSequentialProposalClass implementing a proposal function that samples the parameter space by moving only in one coordinate (choosen randomly) at each step ;  CSimpleInterval;  CSimpleLikelihoodRatioTestStatTestStatistic class that returns -log(L[null] / L[alt]) where L is the likelihood ;  CSPlotThis class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:8165,Test,TestStatistic,8165,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,2,['Test'],['TestStatistic']
Testability,"at line 107 of file RooFitResult.h. ◆ globalCorr() [1/3]. const RooArgList * RooFitResult::globalCorr ; (; ). Return the list of all global correlations. ; Definition at line 454 of file RooFitResult.cxx. ◆ globalCorr() [2/3]. double RooFitResult::globalCorr ; (; const char * ; parname). Return the global correlation of the named parameter. ; Definition at line 430 of file RooFitResult.cxx. ◆ globalCorr() [3/3]. double RooFitResult::globalCorr ; (; const RooAbsArg & ; par). inline . Definition at line 137 of file RooFitResult.h. ◆ IsA(). TClass * RooFitResult::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 203 of file RooFitResult.h. ◆ isIdentical(). bool RooFitResult::isIdentical ; (; const RooFitResult & ; other, . double ; tol = 1e-6, . double ; tolCorr = 1e-4, . bool ; verbose = true . ); const. Return true if this fit result is identical to other within tolerances. ; Parameters. [in]otherFit result to test against. ; [in]tolRelative tolerance for parameters and NLL. ; [in]tolCorrabsolute tolerance for correlation coefficients. ; [in]verboseIf this function will log to the standard output when comparisons fail. As the relative tolerance for the parameter errors, the default value of 1e-3 will be used. ; Definition at line 863 of file RooFitResult.cxx. ◆ isIdenticalNoCov(). bool RooFitResult::isIdenticalNoCov ; (; const RooFitResult & ; other, . double ; tol = 1e-6, . double ; tolErr = 1e-3, . bool ; verbose = true . ); const. Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix. ; Parameters. [in]otherFit result to test against. ; [in]tolRelative tolerance for parameters and NLL. ; [in]tolErrRelative tolerance for parameter errors. ; [in]verboseIf this function will log to the standard output when comparisons fail. . Definition at line 801 of file RooFitResult.cxx. ◆ lastMinuitFit(). RooFitResult * RooFitResult::lastMinuitFit ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFitResult.html:29730,test,test,29730,doc/master/classRooFitResult.html,https://root.cern,https://root.cern/doc/master/classRooFitResult.html,1,['test'],['test']
Testability,"at line 1220 of file TString.cxx. ◆ Align(). static Ssiz_t TString::Align ; (; Ssiz_t ; s). inlinestaticprotected . Definition at line 233 of file TString.h. ◆ Append() [1/5]. TString & TString::Append ; (; char ; c, . Ssiz_t ; rep = 1 . ). Append character c rep times to string. ; WarningIf length+rep exceeds MaxSize(), then Fatal() is raised and only MaxSize()-length elements are added ; Definition at line 397 of file TString.cxx. ◆ Append() [2/5]. TString & TString::Append ; (; const char * ; cs). inline . Definition at line 572 of file TString.h. ◆ Append() [3/5]. TString & TString::Append ; (; const char * ; cs, . Ssiz_t ; n . ). inline . Definition at line 575 of file TString.h. ◆ Append() [4/5]. TString & TString::Append ; (; const TString & ; s). inline . Definition at line 578 of file TString.h. ◆ Append() [5/5]. TString & TString::Append ; (; const TString & ; s, . Ssiz_t ; n . ). inline . Definition at line 581 of file TString.h. ◆ AssertElement(). void TString::AssertElement ; (; Ssiz_t ; nc); const. protected . Check to make sure a string index is in range. ; Definition at line 1208 of file TString.cxx. ◆ Atof(). Double_t TString::Atof ; (; ); const. Return floating-point value contained in string. ; Examples of valid strings are: 64320; 64 320; 6 4 3 2 0; 6.4320 6,4320; 6.43e20 6.43E20 6,43e20; 6.43e-20 6.43E-20 6,43e-20; e#define e(i)Definition RSha256.hxx:103. Definition at line 2054 of file TString.cxx. ◆ Atoi(). Int_t TString::Atoi ; (; ); const. Return integer value of string. ; Valid strings include only digits and whitespace (see IsDigit()), i.e. ""123456"", ""123 456"" and ""1 2 3 4 56"" are all valid integer strings whose Atoi() value is 123456. ; Definition at line 1988 of file TString.cxx. ◆ Atoll(). Long64_t TString::Atoll ; (; ); const. Return long long value of string. ; Valid strings include only digits and whitespace (see IsDigit()), i.e. ""123456"", ""123 456"" and ""1 2 3 4 56"" are all valid integer strings whose Atoll() value is 123456. ; Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTString.html:22591,Assert,AssertElement,22591,doc/master/classTString.html,https://root.cern,https://root.cern/doc/master/classTString.html,2,['Assert'],['AssertElement']
Testability,"at line 321 of file TClingUtils.h. Enumeration Type Documentation. ◆ DataMemberInfo__ValidArrayIndex_error_code. enum ROOT::TMetaUtils::DataMemberInfo__ValidArrayIndex_error_code. EnumeratorVALID ; NOT_INT ; NOT_DEF ; IS_PRIVATE ; UNKNOWN . Definition at line 118 of file TClingUtils.h. ◆ EIOCtorCategory. enum class ROOT::TMetaUtils::EIOCtorCategory : short. strong . EnumeratorkAbsent ; kDefault ; kIOPtrType ; kIORefType . Definition at line 359 of file TClingUtils.h. Function Documentation. ◆ AddDefaultParameters(). clang::QualType ROOT::TMetaUtils::AddDefaultParameters ; (; clang::QualType ; instanceType, . const cling::Interpreter & ; interpreter, . const TNormalizedCtxt & ; normCtxt . ). Add any unspecified template parameters to the class template instance, mentioned anywhere in the type. ; Note: this does not strip any typedef but could be merged with cling::utils::Transform::GetPartiallyDesugaredType if we can safely replace TClassEdit::IsStd with a test on the declaring scope and if we can resolve the fact that the added parameter do not take into account possible use/dependences on Double32_t and if we decide that adding the default is the right long term solution or not. Whether it is or not depend on the I/O on whether the default template argument might change or not and whether they (should) affect the on disk layout (for STL containers, we do know they do not). ; Definition at line 2852 of file TClingUtils.cxx. ◆ BeginsWith(). bool ROOT::TMetaUtils::BeginsWith ; (; const std::string & ; theString, . const std::string & ; theSubstring . ). Definition at line 5088 of file TClingUtils.cxx. ◆ CheckConstructor(). ROOT::TMetaUtils::EIOCtorCategory ROOT::TMetaUtils::CheckConstructor ; (; const clang::CXXRecordDecl * ; cl, . const RConstructorType & ; ioctortype, . const cling::Interpreter & ; interp . ). Check if class has constructor of provided type - either default or with single argument. ; Definition at line 1079 of file TClingUtils.cxx. ◆ CheckDefaultCons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1TMetaUtils.html:19941,test,test,19941,doc/v632/namespaceROOT_1_1TMetaUtils.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1TMetaUtils.html,1,['test'],['test']
Testability,"at line 344 of file TClingUtils.h. Enumeration Type Documentation. ◆ DataMemberInfo__ValidArrayIndex_error_code. enum ROOT::TMetaUtils::DataMemberInfo__ValidArrayIndex_error_code. EnumeratorVALID ; NOT_INT ; NOT_DEF ; IS_PRIVATE ; UNKNOWN . Definition at line 118 of file TClingUtils.h. ◆ EIOCtorCategory. enum class ROOT::TMetaUtils::EIOCtorCategory : short. strong . EnumeratorkAbsent ; kDefault ; kIOPtrType ; kIORefType . Definition at line 382 of file TClingUtils.h. Function Documentation. ◆ AddDefaultParameters(). clang::QualType ROOT::TMetaUtils::AddDefaultParameters ; (; clang::QualType ; instanceType, . const cling::Interpreter & ; interpreter, . const TNormalizedCtxt & ; normCtxt . ). Add any unspecified template parameters to the class template instance, mentioned anywhere in the type. ; Note: this does not strip any typedef but could be merged with cling::utils::Transform::GetPartiallyDesugaredType if we can safely replace TClassEdit::IsStd with a test on the declaring scope and if we can resolve the fact that the added parameter do not take into account possible use/dependences on Double32_t and if we decide that adding the default is the right long term solution or not. Whether it is or not depend on the I/O on whether the default template argument might change or not and whether they (should) affect the on disk layout (for STL containers, we do know they do not). ; Definition at line 2892 of file TClingUtils.cxx. ◆ BeginsWith(). bool ROOT::TMetaUtils::BeginsWith ; (; const std::string & ; theString, . const std::string & ; theSubstring . ). Definition at line 5135 of file TClingUtils.cxx. ◆ CheckConstructor(). ROOT::TMetaUtils::EIOCtorCategory ROOT::TMetaUtils::CheckConstructor ; (; const clang::CXXRecordDecl * ; cl, . const RConstructorType & ; ioctortype, . const cling::Interpreter & ; interp . ). Check if class has constructor of provided type - either default or with single argument. ; Definition at line 1119 of file TClingUtils.cxx. ◆ CheckDefaultCons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1TMetaUtils.html:19937,test,test,19937,doc/master/namespaceROOT_1_1TMetaUtils.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1TMetaUtils.html,1,['test'],['test']
Testability,"at line 365 of file DataSetInfo.cxx. ◆ SetCut(). void TMVA::DataSetInfo::SetCut ; (; const TCut & ; cut, . const TString & ; className . ). set the cut for the classes ; Definition at line 373 of file DataSetInfo.cxx. ◆ SetDataSetManager(). void TMVA::DataSetInfo::SetDataSetManager ; (; DataSetManager * ; dsm). inlineprivate . Definition at line 198 of file DataSetInfo.h. ◆ SetMsgType(). void TMVA::DataSetInfo::SetMsgType ; (; EMsgType ; t); const. Definition at line 106 of file DataSetInfo.cxx. ◆ SetNormalization(). void TMVA::DataSetInfo::SetNormalization ; (; const TString & ; norm). inline . Definition at line 132 of file DataSetInfo.h. ◆ SetRootDir(). void TMVA::DataSetInfo::SetRootDir ; (; TDirectory * ; d). inline . Definition at line 189 of file DataSetInfo.h. ◆ SetSplitOptions(). void TMVA::DataSetInfo::SetSplitOptions ; (; const TString & ; so). inline . Definition at line 185 of file DataSetInfo.h. ◆ SetTestingSumBackgrWeights(). void TMVA::DataSetInfo::SetTestingSumBackgrWeights ; (; Double_t ; testingSumBackgrWeights). inline . Definition at line 139 of file DataSetInfo.h. ◆ SetTestingSumSignalWeights(). void TMVA::DataSetInfo::SetTestingSumSignalWeights ; (; Double_t ; testingSumSignalWeights). inline . Definition at line 138 of file DataSetInfo.h. ◆ SetTrainingSumBackgrWeights(). void TMVA::DataSetInfo::SetTrainingSumBackgrWeights ; (; Double_t ; trainingSumBackgrWeights). inline . Definition at line 137 of file DataSetInfo.h. ◆ SetTrainingSumSignalWeights(). void TMVA::DataSetInfo::SetTrainingSumSignalWeights ; (; Double_t ; trainingSumSignalWeights). inline . Definition at line 134 of file DataSetInfo.h. ◆ SetWeightExpression(). void TMVA::DataSetInfo::SetWeightExpression ; (; const TString & ; exp, . const TString & ; className = """" . ). set the weight expressions for the classes if class name is specified, set only for this class if class name is unknown, register new class with this name ; Definition at line 346 of file DataSetInfo.cxx. ◆ Streamer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html:29502,test,testingSumBackgrWeights,29502,doc/master/classTMVA_1_1DataSetInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html,1,['test'],['testingSumBackgrWeights']
Testability,"at sigma, double threshold,; bool backgroundRemove,int deconIterations,; bool markov,; int averWindow); ��;  ; This; function searches for peaks in source spectrum. It is based on deconvolution; method. First the background is removed (if desired), then Markov smoothed; spectrum is calculated (if desired), then the response function is generated; according to given sigma and deconvolution is carried out. The order of peaks; is arranged according to their heights in the spectrum after background; elimination. The highest peak is the first in the list. On success it returns; number of found peaks.;  ; Parameters:; ������� source-pointer to the matrix of source; spectrum����������������� ; ������� dest-resulting spectrum after deconvolution; ������� ssizex, ssizey-lengths of the source and; destination spectra��������������� ; ������� sigma-sigma of searched peaks; threshold- threshold; value in % for selected peaks, peaks with amplitude less than; threshold*highest_peak/100 are ignored; backgroundRemove- background_remove-logical variable, true if the removal of; background before deconvolution is desired� ; deconIterations-number of iterations in; deconvolution operation; markov-logical variable, if it is true,; first the source spectrum is replaced by new spectrum calculated using Markov; chains method ; averWindow-width of; averaging smoothing window ;  ; References:; [1]; M.A. Mariscotti: A method for identification of peaks in the presence of; background and its application to spectrum analysis. NIM 50 (1967), 309-320.; [2]; �M. Morh�č, J. Kliman, V.; Matou�ek, M. Veselsk�, I. Turzo.:Identification; of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); 108-125.; [3]; Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376; (1996), 451. . Examples of peak searching; method;  ; SearchHighRes function provides users with the possibility; to vary the input parameters and with the access to the output deconvolved data; in the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrum2.html:37617,log,logical,37617,root/html528/TSpectrum2.html,https://root.cern,https://root.cern/root/html528/TSpectrum2.html,8,['log'],['logical']
Testability,"at the effective (weighted) number of events in each class equals the respective "" << Endl;; 1573 Log() << kDEBUG //<< Form(""Dataset[%s] : "",dsi.GetName()); 1574 << "" number of events (entries) that you demanded in PrepareTrainingAndTestTree(\""\"",\""nTrain_Signal=.. )"" << Endl;; 1575 Log() << kDEBUG //<< Form(""Dataset[%s] : "",dsi.GetName()); 1576 << "" ... i.e. such that Sum[i=1..N_j]{w_i} = N_j, j=0,1,2..."" << Endl;; 1577 Log() << kDEBUG //<< Form(""Dataset[%s] : "",dsi.GetName()); 1578 << "" ... (note that N_j is the sum of TRAINING events (nTrain_j...with j=Signal,Background.."" << Endl;; 1579 Log() << kDEBUG //<< Form(""Dataset[%s] : "",dsi.GetName()); 1580 << "" ..... Testing events are not renormalised nor included in the renormalisation factor! )""<< Endl;; 1581 ; 1582 for( UInt_t cls = 0, clsEnd = dsi.GetNClasses(); cls < clsEnd; ++cls ){; 1583 // renormFactor.at(cls) = ( (trainingSizePerClass.at(cls) + testingSizePerClass.at(cls))/; 1584 // (trainingSumWeightsPerClass.at(cls) + testingSumWeightsPerClass.at(cls)) );; 1585 //changed by Helge 27.5.2013; 1586 renormFactor.at(cls) = ((Float_t)trainingSizePerClass.at(cls) )/; 1587 (trainingSumWeightsPerClass.at(cls)) ;; 1588 }; 1589 }; 1590 else if (normMode == ""EQUALNUMEVENTS"") {; 1591 //changed by Helge 27.5.2013 What on earth was done here before? I still remember the idea behind this which apparently was; 1592 //NOT understood by the 'programmer' :) .. the idea was to have SAME amount of effective TRAINING data for signal and background.; 1593 //done here was something like having each data source normalized to its number of entries and this even for training+testing together.; 1594 // what should this have been good for ???; 1595 ; 1596 Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << ""Weight renormalisation mode: \""EqualNumEvents\"": renormalises all event classes ..."" << Endl;; 1597 Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << "" such that the effective (weighted) number of events in each class i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:72939,test,testingSumWeightsPerClass,72939,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['test'],['testingSumWeightsPerClass']
Testability,"at the variance of the values of the nodes is preserved for each layer. \n \; 1552 - XAVIERUNIFORM \n \; 1553 The same as XAVIER, but with uniformly distributed weights instead of gaussian weights \n \; 1554 - LAYERSIZE \n \; 1555 Random values scaled by the layer size \n \; 1556 \n \; 1557 \""TrainingStrategy\"" \n \; 1558 - example: \""LearningRate=1e-1,Momentum=0.3,ConvergenceSteps=50,BatchSize=30,TestRepetitions=7,WeightDecay=0.0,Renormalize=L2,DropConfig=0.0,DropRepetitions=5|LearningRate=1e-4,Momentum=0.3,ConvergenceSteps=50,BatchSize=20,TestRepetitions=7,WeightDecay=0.001,Renormalize=L2,DropFraction=0.0,DropRepetitions=5\"" \n \; 1559 - explanation: two stacked training settings separated by \""|\"" \n \; 1560 . first training setting: \""LearningRate=1e-1,Momentum=0.3,ConvergenceSteps=50,BatchSize=30,TestRepetitions=7,WeightDecay=0.0,Renormalize=L2,DropConfig=0.0,DropRepetitions=5\"" \n \; 1561 . second training setting : \""LearningRate=1e-4,Momentum=0.3,ConvergenceSteps=50,BatchSize=20,TestRepetitions=7,WeightDecay=0.001,Renormalize=L2,DropFractions=0.0,DropRepetitions=5\"" \n \; 1562 . LearningRate : \n \; 1563 - recommended for classification: 0.1 initially, 1e-4 later \n \; 1564 - recommended for regression: 1e-4 and less \n \; 1565 . Momentum : \n \; 1566 preserve a fraction of the momentum for the next training batch [fraction = 0.0 - 1.0] \n \; 1567 . Repetitions : \n \; 1568 train \""Repetitions\"" repetitions with the same minibatch before switching to the next one \n \; 1569 . ConvergenceSteps : \n \; 1570 Assume that convergence is reached after \""ConvergenceSteps\"" cycles where no improvement \n \; 1571 of the error on the test samples has been found. (Mind that only at each \""TestRepetitions\"" \n \; 1572 cycle the test samples are evaluated and thus the convergence is checked) \n \; 1573 . BatchSize \n \; 1574 Size of the mini-batches. \n \; 1575 . TestRepetitions \n \; 1576 Perform testing the neural net on the test samples each \""TestRepetitions\"" cycle \",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:58380,Test,TestRepetitions,58380,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['Test'],['TestRepetitions']
Testability,"at(). virtual void TGNumberEntry::SetFormat ; (; EStyle ; style, . EAttribute ; attr = TGNumberFormat::kNEAAnyNumber . ). inlinevirtual . Definition at line 216 of file TGNumberEntry.h. ◆ SetHexNumber(). virtual void TGNumberEntry::SetHexNumber ; (; ULong_t ; val, . Bool_t ; emit = kTRUE . ). inlinevirtual . Definition at line 189 of file TGNumberEntry.h. ◆ SetIntNumber(). virtual void TGNumberEntry::SetIntNumber ; (; Long_t ; val, . Bool_t ; emit = kTRUE . ). inlinevirtual . Definition at line 180 of file TGNumberEntry.h. ◆ SetLimits(). virtual void TGNumberEntry::SetLimits ; (; ELimit ; limits = TGNumberFormat::kNELNoLimits, . Double_t ; min = 0, . Double_t ; max = 1 . ). inlinevirtual . Definition at line 219 of file TGNumberEntry.h. ◆ SetLimitValues(). void TGNumberEntry::SetLimitValues ; (; Double_t ; min = 0, . Double_t ; max = 1 . ). inline . Definition at line 250 of file TGNumberEntry.h. ◆ SetLogStep(). void TGNumberEntry::SetLogStep ; (; Bool_t ; on = kTRUE). virtual . Set log steps. ; Definition at line 2074 of file TGNumberEntry.cxx. ◆ SetNumAttr(). void TGNumberEntry::SetNumAttr ; (; EAttribute ; attr = kNEAAnyNumber). inline . Definition at line 246 of file TGNumberEntry.h. ◆ SetNumber(). virtual void TGNumberEntry::SetNumber ; (; Double_t ; val, . Bool_t ; emit = kTRUE . ). inlinevirtual . Definition at line 177 of file TGNumberEntry.h. ◆ SetNumLimits(). void TGNumberEntry::SetNumLimits ; (; ELimit ; limits = kNELNoLimits). inline . Definition at line 248 of file TGNumberEntry.h. ◆ SetNumStyle(). void TGNumberEntry::SetNumStyle ; (; EStyle ; style). inline . Definition at line 244 of file TGNumberEntry.h. ◆ SetState(). void TGNumberEntry::SetState ; (; Bool_t ; enable = kTRUE). virtual . Set the active state. ; Definition at line 2084 of file TGNumberEntry.cxx. ◆ SetText(). virtual void TGNumberEntry::SetText ; (; const char * ; text, . Bool_t ; emit = kTRUE . ). inlinevirtual . Definition at line 192 of file TGNumberEntry.h. ◆ SetTime(). virtual void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntry.html:45429,log,log,45429,doc/master/classTGNumberEntry.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntry.html,1,['log'],['log']
Testability,"at(Bool_t stat); virtual voidTGraph::SetPoint(Int_t i, Double_t x, Double_t y); virtual voidSetPointError(Double_t exl, Double_t exh, Double_t eyl, Double_t eyh)MENU ; virtual voidSetPointError(Int_t i, Double_t exl, Double_t exh, Double_t eyl, Double_t eyh); virtual voidSetPointEXhigh(Int_t i, Double_t exh); virtual voidSetPointEXlow(Int_t i, Double_t exl); virtual voidSetPointEYhigh(Int_t i, Double_t eyh); virtual voidSetPointEYlow(Int_t i, Double_t eyl); virtual voidTGraph::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidTGraph::Sort(Bool_t(*)(const TGraph*,Int_t,Int_t) greater = &TGraph::CompareX, Bool_t ascending = kTRUE, Int_t low = 0, Int_t high = -1111); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGraphAsymmErrors(); TGraphAsymmErrors(Int_t n); TGraphAsymmErrors(const TGraphAsymmErrors& gr); TGraphAsymmErrors(const TH1* h); TGraphAsymmErrors(const TH1* pass, const TH1* total, Option_t* option = """"); TGraphAsymmErrors(const TVectorF& vx, const TVectorF& vy, const TVectorF& vexl, const TVectorF& vexh, const TVectorF& veyl, const TVectorF& veyh); TGraphAsymmErrors(const TVectorD& vx, const TVectorD& vy, const TVectorD& vexl, const TVectorD& vexh, const TVectorD& veyl, const TVectorD& veyh); TGraphAsymmErrors(Int_t n, const Float_t* x, const Float_t* y, const Float_t* exl = 0, const Float_t* exh = 0, const Float_t* eyl = 0, const Float_t* eyh = 0); TGraphAsymmErrors(Int_t n, const Double_t* x, const Double_t* y, const Double_t* exl = 0, const Double_t* exh = 0, const Double_t* eyl = 0, const Double_t* eyh = 0); virtual voidTGraph::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphAsymmErrors.html:12238,Test,TestBit,12238,root/html602/TGraphAsymmErrors.html,https://root.cern,https://root.cern/root/html602/TGraphAsymmErrors.html,2,['Test'],['TestBit']
Testability,"at); virtual voidTFormula::SetParameter(const char* name, Double_t parvalue); virtual voidTFormula::SetParameter(Int_t ipar, Double_t parvalue); virtual voidTFormula::SetParameters(const Double_t* params); virtual voidTFormula::SetParameters(Double_t p0, Double_t p1, Double_t p2 = 0, Double_t p3 = 0, Double_t p4 = 0, Double_t p5 = 0, Double_t p6 = 0, Double_t p7 = 0, Double_t p8 = 0, Double_t p9 = 0, Double_t p10 = 0)MENU ; virtual voidTF1::SetParent(TObject* p = 0); virtual voidTF1::SetParError(Int_t ipar, Double_t error); virtual voidTF1::SetParErrors(const Double_t* errors); virtual voidTF1::SetParLimits(Int_t ipar, Double_t parmin, Double_t parmax); virtual voidTFormula::SetParName(Int_t ipar, const char* name); virtual voidTFormula::SetParNames(const char* name0 = ""p0"", const char* name1 = ""p1"", const char* name2 = ""p2"", const char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10"")MENU ; virtual voidTF1::SetRange(Double_t xmin, Double_t xmax)MENU ; virtual voidTF1::SetRange(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax); virtual voidTF1::SetRange(Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax); virtual voidTF1::SetSavedPoint(Int_t point, Double_t value); virtual voidTF1::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetXY(Double_t xy)MENU ; virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTF1::Update(); virtual voidTObject::UseCurrentStyle(); virtual Double_tTF1::Variance(Double_t a, Double_t b, const Double_t* params = 0, Double_t epsilon = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF12.html:14582,Test,TestBit,14582,root/html528/TF12.html,https://root.cern,https://root.cern/root/html528/TF12.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"at); voidSetOwnObject(Bool_t o); voidTEveElement::SetPickable(Bool_t p); voidTEveElement::SetPickableRecursively(Bool_t p); virtual Bool_tTEveElement::SetRnrChildren(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector&); virtual Bool_tTEveElement::SingleRnrState() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveElementObjectPtr.html:14285,Test,TestBit,14285,root/html534/TEveElementObjectPtr.html,https://root.cern,https://root.cern/root/html534/TEveElementObjectPtr.html,3,['Test'],"['TestBit', 'TestBits', 'TestCSCBits']"
Testability,"at); voidTMVA::Configurable::SetOptions(const TString& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::Configurable::GetReferenceFile() const; TMVA::MsgLogger&TMVA::FitterBase::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTMVA::FitterBase::fClassNameremove TMVA:: from TObject name; TMVA::IFitterTarget&TMVA::FitterBase::fFitterTargetpointer to target of fitting procedure; TMVA::MsgLogger*TMVA::FitterBase::fLoggermessage logger; TMVA::MinuitWrapper*fMinWrapholds a wrapper around TMinuit; Int_tTMVA::FitterBase::fNparsnumber of parameters; const vector<TMVA::Interval*>TMVA::FitterBase::fRangesallowed intervals. private:. Bool_tfBatchbatch mode; Int_tfErrorL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MinuitFitter.html:6186,Log,Log,6186,root/html528/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html528/TMVA__MinuitFitter.html,3,['Log'],['Log']
Testability,"at=nullptr, Option_t *option="""");  Add a TGeoNode to the list of nodes. ;  ; void AddNodeOffset (TGeoVolume *vol, Int_t copy_no, Double_t offset=0, Option_t *option="""");  Add a division node to the list of nodes. ;  ; virtual void AddNodeOverlap (TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""");  Add a TGeoNode to the list of nodes. ;  ; void Browse (TBrowser *b) override;  How to browse a volume. ;  ; Double_t Capacity () const;  Computes the capacity of this [cm^3] as the capacity of its shape. ;  ; virtual void cd (Int_t inode) const;  Actualize matrix of node indexed <inode> ;  ; void CheckGeometry (Int_t nrays=1, Double_t startx=0, Double_t starty=0, Double_t startz=0) const;  Shoot nrays with random directions from starting point (startx, starty, startz) in the reference frame of this volume. ;  ; void CheckOverlaps (Double_t ovlp=0.1, Option_t *option="""") const;  Overlap checking tool. ;  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Tests for checking the shape navigation algorithms. See TGeoShape::CheckShape() ;  ; void CheckShapes ();  check for negative parameters in shapes. ;  ; void CleanAll ();  Clean data of the volume. ;  ; void ClearNodes ();  ; void ClearShape ();  Clear the shape of this volume from the list held by the current manager. ;  ; virtual void ClearThreadData () const;  ; void CloneNodesAndConnect (TGeoVolume *newmother) const;  Clone the array of nodes. ;  ; virtual TGeoVolume * CloneVolume () const;  Clone this volume. ;  ; Bool_t Contains (const Double_t *point) const;  ; Int_t CountNodes (Int_t nlevels=1000, Int_t option=0);  Count total number of subnodes starting from this volume, nlevels down. ;  ; virtual void CreateThreadData (Int_t nthreads);  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  compute the closest distance of approach from point px,py to this volume ;  ; virtual TGeoVolume * Divide (const char *divname, Int_t iaxis, Int_t ndiv, Double_t start,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolume.html:14690,test,testNo,14690,doc/master/classTGeoVolume.html,https://root.cern,https://root.cern/doc/master/classTGeoVolume.html,2,"['Test', 'test']","['Tests', 'testNo']"
Testability,"at>& another); TMatrixTSparse<float>&SetSparseIndexAB(const TMatrixTSparse<float>& a, const TMatrixTSparse<float>& b); TMatrixTSparse<float>&SetSparseIndexAB(const TMatrixT<float>& a, const TMatrixTSparse<float>& b); TMatrixTSparse<float>&SetSparseIndexAB(const TMatrixTSparse<float>& a, const TMatrixT<float>& b); virtual TMatrixTBase<float>&SetSub(Int_t row_lwb, Int_t col_lwb, const TMatrixTBase<float>& source); floatTMatrixTBase<float>::SetTol(float newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual TMatrixTBase<float>&TMatrixTBase<float>::Shift(Int_t row_shift, Int_t col_shift); virtual voidShowMembers(TMemberInspector& insp); virtual TMatrixTBase<float>&TMatrixTBase<float>::Sqr(); virtual TMatrixTBase<float>&TMatrixTBase<float>::Sqrt(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual floatTMatrixTBase<float>::Sum() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TMatrixTSparse<float>&T(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TMatrixTSparse<float>&Transpose(const TMatrixTSparse<float>& source); virtual TMatrixTBase<float>&UnitMatrix(); TMatrixTSparse<float>&Use(TMatrixTSparse<float>& a); const TMatrixTSparse<float>&Use(const TMatrixTSparse<float>& a) const; TMatrixTSparse<float>&Use(Int_t nrows, Int_t ncols, Int_t nr_nonzeros, Int_t* pRowIndex, Int_t* pColIndex, float* pData); const TMatrixTSparse<float>&Use(Int_t nrows, Int_t ncols, Int_t nr_nonzeros, const Int_t* pRowIndex, const Int_t* pColIndex, const float* pData) const; TMatrixTSparse<float>&Use(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros, Int_t* pRowIndex, Int_t* pColIndex, float* pData); const TMatrixTSparse<float>&Use(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros, const Int_t* pRowIndex, const Int_t* pColIndex, const float* pData) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMatrixTSparse_float_.html:12516,Test,TestBit,12516,root/html528/TMatrixTSparse_float_.html,https://root.cern,https://root.cern/root/html528/TMatrixTSparse_float_.html,3,['Test'],['TestBit']
Testability,"atSampler (eg. ToyMC or FFT, includes choice of TestStatistic). {fTestStatSampler = &sampler;}. void SetLeftSideTailFraction(Double_t leftSideFraction = 0.); fLeftSideTailFraction*fSize defines lower edge of acceptance region.; Unified limits use 0, central limits use 0.5,; for upper/lower limits it is 0/1 depends on sign of test statistic w.r.t. parameter. {fLeftSideFraction = leftSideFraction;}. void SetParameterPointsToTest(RooAbsData& pointsToTest); User-defined set of points to test. Double_t Size() const; This class can make regularly spaced scans based on range stored in RooRealVars.; Choose number of steps for a rastor scan (common for each dimension); void SetNumSteps(Int_t);; This class can make regularly spaced scans based on range stored in RooRealVars.; Choose number of steps for a rastor scan (specific for each dimension); void SetNumSteps(std::map<RooAbsArg, Int_t>); Get the size of the test (eg. rate of Type I error). {return fSize;}. Double_t ConfidenceLevel() const; Get the Confidence level for the test. {return 1.-fSize;}. void SetModel(const RooStats::ModelConfig& model); Set ModelConfig. {fModel = model;}. void SetData(RooAbsData& data); Set the DataSet. { fData = data; }. void SetPdf(RooAbsPdf& ); Set the Pdf, add to the the workspace if not already there. void SetParameters(const RooArgSet& ); specify the parameters of interest in the interval. void SetNuisanceParameters(const RooArgSet& ); specify the nuisance parameters (eg. the rest of the parameters). void SetTestSize(Double_t size); set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval). {fSize = size;}. void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). {fSize = 1.-cl;}. ConfidenceBelt* GetConfidenceBelt(); get confidence belt. {return fConfBelt;}. void UseAdaptiveSampling(bool flag = true); adaptive sampling algorithm to speed up interval caculation. {fAdaptiveSampling=flag;}. void A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__NeymanConstruction.html:6113,test,test,6113,root/html534/RooStats__NeymanConstruction.html,https://root.cern,https://root.cern/root/html534/RooStats__NeymanConstruction.html,3,['test'],['test']
Testability,"at_t GetTitleYSize() const; {return GetTitleSize(""Y"");}. Float_t GetTitleX() const; {return fTitleX;}. Float_t GetTitleY() const; {return fTitleY;}. Float_t GetTitleW() const; {return fTitleW;}. Float_t GetTitleH() const; {return fTitleH;}. const char * GetHeaderPS() const; {return fHeaderPS.Data();}. const char * GetTitlePS() const; {return fTitlePS.Data();}. Float_t GetLineScalePS() const; {return fLineScalePS;}. Bool_t IsReading() const; {return fIsReading;}. void SetFitFormat(const char* format = ""5.4g""); {fFitFormat = format;}. void SetHatchesLineWidth(Int_t l); {fHatchesLineWidth = l;}. void SetHatchesSpacing(Double_t h); {fHatchesSpacing = TMath::Max(0.1,h);}. void SetLineScalePS(Float_t scale = 3); {fLineScalePS=scale;}. void SetLegoInnerR(Float_t rad = 0.5); {fLegoInnerR = rad;}. void SetScreenFactor(Float_t factor = 1); {fScreenFactor = factor;}. void SetOptFile(Int_t file = 1); {fOptFile = file;}. void SetOptLogx(Int_t logx = 1); {fOptLogx = logx;}. void SetOptLogy(Int_t logy = 1); {fOptLogy = logy;}. void SetOptLogz(Int_t logz = 1); {fOptLogz = logz;}. void SetOptTitle(Int_t tit = 1); {fOptTitle = tit;}. void SetBarOffset(Float_t baroff = 0.5); {fBarOffset = baroff;}. void SetBarWidth(Float_t barwidth = 0.5); {fBarWidth = barwidth;}. void SetDateX(Float_t x = 0.01); {fDateX = x;}. void SetDateY(Float_t y = 0.01); {fDateY = y;}. void SetErrorX(Float_t errorx = 0.5); {fErrorX = errorx;}. void SetCanvasPreferGL(Bool_t prefer = kTRUE); {fCanvasPreferGL=prefer;}. void SetDrawBorder(Int_t drawborder = 1); {fDrawBorder = drawborder;}. void SetCanvasColor(Color_t color = 19); {fCanvasColor = color;}. void SetCanvasBorderSize(Width_t size = 1); {fCanvasBorderSize = size;}. void SetCanvasBorderMode(Int_t mode = 1); {fCanvasBorderMode = mode;}. void SetCanvasDefH(Int_t h = 500); {fCanvasDefH = h;}. void SetCanvasDefW(Int_t w = 700); {fCanvasDefW = w;}. void SetCanvasDefX(Int_t topx = 10); {fCanvasDefX = topx;}. void SetCanvasDefY(Int_t topy = 10); {fCanvasDefY = top",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStyle.html:43521,log,logy,43521,root/html528/TStyle.html,https://root.cern,https://root.cern/root/html528/TStyle.html,12,['log'],['logy']
Testability,"at_t offset = 1, Option_t* axis = ""X""); virtual voidTH1::SetTitleSize(Float_t size = 0.02, Option_t* axis = ""X""); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTH1::SetXTitle(const char* title); virtual voidTH1::SetYTitle(const char* title); virtual voidTH1::SetZTitle(const char* title); virtual TH1*TH2::ShowBackground(Int_t niter = 20, Option_t* option = ""same""); virtual voidShowMembers(TMemberInspector&); virtual Int_tTH2::ShowPeaks(Double_t sigma = 2, Option_t* option = """", Double_t threshold = 0.05)MENU ; virtual Int_tTNamed::Sizeof() const; virtual voidTH2::Smooth(Int_t ntimes = 1, Option_t* option = """")MENU ; static voidTH1::SmoothArray(Int_t NN, Double_t* XX, Int_t ntimes = 1); static voidTH1::StatOverflows(Bool_t flag = kTRUE); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSumw2(Bool_t flag = kTRUE); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; static TH1*TH1::TransformHisto(TVirtualFFT* fft, TH1* h_output, Option_t* option); virtual voidTH1::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; static voidTArray::WriteArray(TBuffer& b, const TArray* a). protected:. Bool_tTArray::BoundsOk(const char* where, Int_t at) const; virtual Int_tBufferFill(Double_t, Double_t); virtual Int_tBufferFill(Double_t, Double_t, Double_t); virtual Int_tBufferFill(Double_t x, Double_t y, Double_t z, Double_t w); static boolTH1::CheckAxisLimits(const TAxis* a1, const TAxis* a2); static boolTH1::CheckBinLabels(const TAxis* a1, const TAxis* a2); static boolTH1::CheckBinLimits(const TAxis* a1, const TAxis* a2); static boolTH1::CheckConsistency(const TH1* h1, const TH1* h2); static bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProfile2D.html:23363,Test,TestBit,23363,root/html534/TProfile2D.html,https://root.cern,https://root.cern/root/html534/TProfile2D.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ata Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Long64_tfFromstarting offset of the current content; TProofLog*fLoggerparent TProofLog; TMacro*fMacrocontainer for the log lines; TStringfRolerole (master-submaster-worker); Long64_tfSizebest knowledge of the log file size; Long64_tfToend offset of the current content; static Long64_tfgMaxTransferSize. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofLogElem(const char* ord, const char* url, TProofLog* logger); Constructor. ~TProofLogElem(); Destructor. Long64_t GetMaxTransferSize(); Get max transfer size. void SetMaxTransferSize(Long64_t maxsz); Set max transfer size. Int_t Retrieve(TProofLog::ERetrieveOpt opt = TProofLog::kTrailing, const char* pattern = 0); Retrieve the content of the associated file. The approximate number; of lines to be retrieved is given by 'lines', with the convention that; 0 means 'all', a positive number means the first 'lines' and a negative; number means the last '-lines'. Default is -1000.; If opt == TProofLog::kGrep only the lines containing 'pattern' are; retrieved (remote grep functionality); to filter out a pattern 'pat' use; pattern = ""-v pat"".; Return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofLogElem.html:6564,log,log,6564,root/html602/TProofLogElem.html,https://root.cern,https://root.cern/root/html602/TProofLogElem.html,4,['log'],['log']
Testability,"ata& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, bool nominalAsimov = false); constructor for asymptotic calculator from Data set and ModelConfig. bool Initialize() const; Initialize the calculator; The initialization will perform a global fit of the model to the data; and build an Asimov data set.; It will then also fit the model to the Asimov data set to find the likelihood value; of the Asimov data set; nominalAsimov is an option for using Asimov data set obtained using nominal nuisance parameter values; By default the nuisance parameters are fitted to the data; NOTE: If a fit has been done before, one for speeding up could set all the initial prameters; to the fit value and in addition set the null snapshot to the best fit. Double_t EvaluateNLL(RooAbsPdf& pdf, RooAbsData& data, const RooArgSet* condObs, const RooArgSet* poiSet = 0). HypoTestResult* GetHypoTest() const; It performs an hypothesis tests using the likelihood function; and computes the p values for the null and the alternate using the asymptotic; formulae for the profile likelihood ratio.; See G. Cowan, K. Cranmer, E. Gross and O. Vitells.; Asymptotic formulae for likelihood- based tests of new physics. Eur. Phys. J., C71:1–19, 2011.; The formulae are valid only for one POI. If more than one POI exists consider as POI only the; first one. double GetExpectedPValues(double pnull, double palt, double nsigma, bool usecls, bool oneSided = true); function given the null and the alt p value - return the expected one given the N - sigma value. void FillBins(const RooAbsPdf& pdf, const RooArgList& obs, RooAbsData& data, int& index, double& binVolume, int& ibin); fill bins by looping recursivly on observables. bool SetObsToExpected(RooProdPdf& prod, const RooArgSet& obs); iterate a Prod pdf to find all the Poisson or Gaussian part to set the observed value to expected one. bool SetObsToExpected(RooAbsPdf& pdf, const RooArgSet& obs); set observed value to the expected on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__AsymptoticCalculator.html:6718,test,tests,6718,root/html604/RooStats__AsymptoticCalculator.html,https://root.cern,https://root.cern/root/html604/RooStats__AsymptoticCalculator.html,1,['test'],['tests']
Testability,"ata());; 3346 ; 3347 //dynamically link the generated shared lib; 3348 if (opt.Contains(""++"")) {; 3349 res = !gSystem->Load(path);; 3350 if (res) printf(""Shared lib %s has been dynamically linked\n"",path.Data());; 3351 }; 3352 }; 3353 ; 3354 delete list;; 3355 filelist->Delete();; 3356 delete filelist;; 3357}; 3358 ; 3359////////////////////////////////////////////////////////////////////////////////; 3360/// Create makefile at 'filemake' for PAR package 'pack'.; 3361///; 3362/// Called by MakeProject when option 'par' is given.; 3363/// Return 0 on success, -1 on error.; 3364 ; 3365Int_t TFile::MakeProjectParMake(const char *pack, const char *filemake); 3366{; 3367 // Output file path must be defined; 3368 if (!filemake || (filemake && strlen(filemake) <= 0)) {; 3369 Error(""MakeProjectParMake"", ""path for output file undefined!"");; 3370 return -1;; 3371 }; 3372 ; 3373 // Package name must be defined; 3374 if (!pack || (pack && strlen(pack) <= 0)) {; 3375 Error(""MakeProjectParMake"", ""package name undefined!"");; 3376 return -1;; 3377 }; 3378 ; 3379#ifdef R__WINGCC; 3380 FILE *fmk = fopen(filemake, ""wb"");; 3381#else; 3382 FILE *fmk = fopen(filemake, ""w"");; 3383#endif; 3384 if (!fmk) {; 3385 Error(""MakeProjectParMake"", ""cannot create file '%s' (errno: %d)"", filemake, TSystem::GetErrno());; 3386 return -1;; 3387 }; 3388 ; 3389 // Fill the file now; 3390 fprintf(fmk, ""# Makefile for the ROOT test programs.\n"");; 3391 fprintf(fmk, ""# This Makefile shows how to compile and link applications\n"");; 3392 fprintf(fmk, ""# using the ROOT libraries on all supported platforms.\n"");; 3393 fprintf(fmk, ""#\n"");; 3394 fprintf(fmk, ""# Copyright (c) 2000 Rene Brun and Fons Rademakers\n"");; 3395 fprintf(fmk, ""#\n"");; 3396 fprintf(fmk, ""# Author: this makefile has been automatically generated via TFile::MakeProject\n"");; 3397 fprintf(fmk, ""\n"");; 3398 fprintf(fmk, ""include Makefile.arch\n"");; 3399 fprintf(fmk, ""\n"");; 3400 fprintf(fmk, ""#----------------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:122121,test,test,122121,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['test'],['test']
Testability,"ata* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooExtendedBinding&operator=(const RooExtendedBinding&); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooExtendedBinding.html:19368,test,testArg,19368,root/html602/RooExtendedBinding.html,https://root.cern,https://root.cern/root/html602/RooExtendedBinding.html,2,['test'],['testArg']
Testability,"ata*GenerateToyData(RooArgSet& paramPoint, double& weight) const; virtual RooAbsData*GenerateToyData(vector<double>& weights, vector<double>& nullNLLs, vector<double>& impNLLs) const; virtual RooAbsData*GenerateToyData(RooArgSet& paramPoint, double& weight, vector<double>& impNLLs, double& nullNLL) const; virtual Int_tRooStats::ToyMCSampler::GetNToys(); stringRooStats::ToyMCSampler::GetSamplingDistName(); virtual RooStats::SamplingDistribution*RooStats::ToyMCSampler::GetSamplingDistribution(RooArgSet& paramPoint); virtual RooDataSet*RooStats::ToyMCSampler::GetSamplingDistributions(RooArgSet& paramPoint); virtual RooDataSet*GetSamplingDistributionsSingleWorker(RooArgSet& paramPoint); virtual RooStats::TestStatistic*RooStats::ToyMCSampler::GetTestStatistic() const; virtual RooStats::TestStatistic*RooStats::ToyMCSampler::GetTestStatistic(unsigned int i) const; virtual voidRooStats::ToyMCSampler::Initialize(RooAbsArg&, RooArgSet&, RooArgSet&); virtual TClass*IsA() const; RooStats::TestStatSampler&RooStats::TestStatSampler::operator=(const RooStats::TestStatSampler&); static voidRooStats::ToyMCSampler::SetAlwaysUseMultiGen(Bool_t flag); voidSetApplyVeto(bool b = true); virtual voidRooStats::ToyMCSampler::SetAsimovNuisancePar(Bool_t i = kTRUE); virtual voidSetConditionalObservables(const RooArgSet& set); virtual voidRooStats::ToyMCSampler::SetConfidenceLevel(Double_t cl); voidSetDensityToGenerateFromByIndex(unsigned int i, bool fromNull = false); voidSetEqualNumToysPerDensity(); virtual voidRooStats::ToyMCSampler::SetExpectedNuisancePar(Bool_t i = kTRUE); voidSetExpIncreasingNumToysPerDensity(); voidRooStats::ToyMCSampler::SetGenerateAutoBinned(Bool_t autoBinned = kTRUE); voidRooStats::ToyMCSampler::SetGenerateBinned(bool binned = true); voidRooStats::ToyMCSampler::SetGenerateBinnedTag(const char* binnedTag = """"); virtual voidRooStats::ToyMCSampler::SetGlobalObservables(const RooArgSet& o); voidRooStats::ToyMCSampler::SetMaxToys(Double_t t); virtual voidRooStats::ToyMCSam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__ToyMCImportanceSampler.html:2744,Test,TestStatSampler,2744,root/html534/RooStats__ToyMCImportanceSampler.html,https://root.cern,https://root.cern/root/html534/RooStats__ToyMCImportanceSampler.html,1,['Test'],['TestStatSampler']
Testability,"ata, using this parameterisation, do; Test wether the observation \(\mathbf{x}\) within the domain of the parameterization, using the result from the Principal Component Analysis.; Determine \(\mathbf{P}^\prime\) as before.; Determine \(\mathbf{x}^\prime\) as before.; Use the result of the fit to determine \(\mathbf{Q}^\prime\).; Transform back to \(\mathbf{P}\) from \(\mathbf{Q}^\prime\), using the result from the Principal Component Analysis. Testing the parameterization; The class also provides functionality for testing the, over the training sample, found parameterization (TMultiDimFit::Fit). This is done by passing the class a test sample of \( M_t\) tuples of the form \((\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\), where \(\mathbf{x}_{t,j}\) are the independent variables, \( D_{t,j}\) the known, dependent quantity, and \( E_{t,j}\) is the square error in \( D_{t,j}\) (TMultiDimFit::AddTestRow).; The parameterization is then evaluated at every \(\mathbf{x}_t\) in the test sample, and ; \[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \]. is evaluated. The relative error over the test sample ; \[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \]. should not be to low or high compared to \( R\) from the training sample. Also, multiple correlation coefficient from both samples should be fairly close, otherwise one of the samples is not representative of the problem. A large difference in the reduced \( \chi^2\) over the two samples indicate an over fit, and the maximum number of terms in the parameterisation should be reduced.; It's possible to use 4 to further improve the fit, using the test sample.; Christian Holm. Bibliography. Philip R. Bevington and D. Keith Robinson. Data Reduction and Error Analysis for the Physical Sciences. McGraw-Hill, 2 edition, 1992.; R. Brun et al. Long writeup DD/75-23, CERN, 1980.; Gene H. Golub and Charles F. van Loan. Matrix Computations. John Hopkins University Press, Baltimore, 3 edition, 1996",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:16348,test,test,16348,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['test'],['test']
Testability,"ata;  ; std::shared_ptr< IModelFunction > fFunc;  . #include <Fit/LogLikelihoodFCN.h>. Inheritance diagram for ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseFCN. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef BasicFCN<DerivFunType,ModelFunType,UnBinData> ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::BaseFCN. Definition at line 45 of file LogLikelihoodFCN.h. ◆ BaseFunction. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef BaseObjFunction::BaseFunction ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::BaseFunction. Definition at line 48 of file LogLikelihoodFCN.h. ◆ BaseObjFunction. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef ::ROOT::Math::BasicFitMethodFunction<DerivFunType> ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::BaseObjFunction. Definition at line 47 of file LogLikelihoodFCN.h. ◆ IModelFunction. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef ::ROOT::Math::IParamMultiFunctionTempl<T> ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::IModelFunction. Definition at line 50 of file LogLikelihoodFCN.h. ◆ T. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef ModelFunType::BackendType ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::T. Definition at line 44 of file LogLikelihoodFCN.h. ◆ Type_t. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef BaseObjFunction::Type_t ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::Type_t. Definition at line 51 of file LogLikelihoodFCN.h. Constructor & Destructor Documentation. ◆ LogLikelihoodFCN() [1/3]. template<class DerivFunType , class ModelFunType = RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html:6970,Log,LogLikelihoodFCN,6970,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,1,['Log'],['LogLikelihoodFCN']
Testability,"ataBase* data); virtual TQpVar*MakeVariables(const TQpDataBase* data); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpProbBase&operator=(const TQpProbBase& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidSeparateVars(TVectorD& x_in, TVectorD& y_in, TVectorD& z_in, TVectorD& vars_in); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQpProbBase.html:5064,Test,TestBit,5064,root/html528/TQpProbBase.html,https://root.cern,https://root.cern/root/html528/TQpProbBase.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ataBase* data); virtual TQpVar*MakeVariables(const TQpDataBase* data); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpProbDens&operator=(const TQpProbDens& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidSeparateVars(TVectorD& x_in, TVectorD& y_in, TVectorD& z_in, TVectorD& vars_in); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQpProbDens.html:5237,Test,TestBit,5237,root/html528/TQpProbDens.html,https://root.cern,https://root.cern/root/html528/TQpProbDens.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ataBase* prob, TQpResidual* resid, TQpVar* step); Default starting point. void SteveStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Starting point algoritm according to Stephen Wright. void DumbStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Alternative starting point heuristic: sets the ""complementary"" variables to a large; positive value (based on the norm of the problem data) and the remaining variables; to zero . Double_t FinalStepLength(TQpVar* iterate, TQpVar* step); Implements a version of Mehrotra starting point heuristic,; modified to ensure identical steps in the primal and dual variables. void DoMonitor(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level); Monitor progress / convergence aat each interior-point iteration. Int_t DoStatus(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Int_t i, Double_t mu, Int_t level); Tests for termination. Unless the user supplies a specific termination; routine, this method calls another method defaultStatus, which returns; a code indicating the current convergence status. Int_t DefStatus(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Int_t i, Double_t mu, Int_t level); Default status method. TQpSolverBase & operator=(const TQpSolverBase& source); Assignment operator. Int_t Solve(TQpDataBase* prob, TQpVar* iterate, TQpResidual* resids); alternative starting point heuristic: sets the; ""complementary"" variables to a large positive value; (based on the norm of the problem data) and the; remaining variables to zero. void DefMonitor(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level); perform monitor operation at each interior-point iteration. TQpLinSolverBase * GetLinearSystem(); default method for checking status. May be replaced; by ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQpSolverBase.html:9024,Test,Tests,9024,root/html528/TQpSolverBase.html,https://root.cern,https://root.cern/root/html528/TQpSolverBase.html,6,['Test'],['Tests']
Testability,"ataInputHandler.h. ◆ ReadInputTree(). TTree * TMVA::DataInputHandler::ReadInputTree ; (; const TString & ; dataFile). private . create trees from these ascii files ; Definition at line 152 of file DataInputHandler.cxx. ◆ Sbegin(). std::vector< TreeInfo >::const_iterator TMVA::DataInputHandler::Sbegin ; (; ); const. inline . Definition at line 113 of file DataInputHandler.h. ◆ Send(). std::vector< TreeInfo >::const_iterator TMVA::DataInputHandler::Send ; (; ); const. inline . Definition at line 114 of file DataInputHandler.h. ◆ SignalTreeInfo(). const TreeInfo & TMVA::DataInputHandler::SignalTreeInfo ; (; Int_t ; i); const. inline . Definition at line 108 of file DataInputHandler.h. ◆ Streamer(). virtual void TMVA::DataInputHandler::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TMVA::DataInputHandler::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 134 of file DataInputHandler.h. Member Data Documentation. ◆ fExplicitTrainTest. std::map< std::string, Bool_t > TMVA::DataInputHandler::fExplicitTrainTest. private . if set to true the user has specified training and testing data explicitly ; Definition at line 130 of file DataInputHandler.h. ◆ fInputTrees. std::map< TString, std::vector<TreeInfo> > TMVA::DataInputHandler::fInputTrees. mutableprivate . list of input trees per class (classname is given as first parameter in the map) ; Definition at line 129 of file DataInputHandler.h. ◆ fLogger. MsgLogger* TMVA::DataInputHandler::fLogger. mutableprivate . ! message logger ; Definition at line 131 of file DataInputHandler.h. Libraries for TMVA::DataInputHandler:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/DataInputHandler.h; tmva/tmva/src/DataInputHandler.cxx. TMVADataInputHandler. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataInputHandler.html:20423,test,testing,20423,doc/master/classTMVA_1_1DataInputHandler.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataInputHandler.html,2,"['log', 'test']","['logger', 'testing']"
Testability,"ataMember* entity, const char* comment = 0); virtual voidTDocOutput::ReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); virtual voidTDocOutput::ReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); virtual Bool_tTDocOutput::ReferenceIsRelative(const char* reference) const; virtual const char*TDocOutput::ReplaceSpecialChars(char c); voidTDocOutput::ReplaceSpecialChars(TString& text); voidTDocOutput::ReplaceSpecialChars(ostream& out, const char* string); voidTDocOutput::ReplaceSpecialChars(TString& text, Ssiz_t& pos); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTDocOutput::WriteHtmlFooter(ostream& out, const char* dir = """", const char* lastUpdate = """", const char* author = """", const char* copyright = """"); virtual voidTDocOutput::WriteHtmlHeader(ostream& out, const char* title, const char* dir = """", TClass* cls = 0); voidTDocOutput::WriteLineNumbers(ostream& out, Long_t nLines, const TString& infileBase) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TClassDocOutput.html:6896,Test,TestBit,6896,root/html534/TClassDocOutput.html,https://root.cern,https://root.cern/root/html534/TClassDocOutput.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ataPreparation.py File ReferenceTutorials » TMVA tutorials. Detailed Description; This tutorial illustrates how to prepare ROOT datasets to be nicely readable by most machine learning methods. ; This requires filtering the initial complex datasets and writing the data in a flat format.; ; import ROOT; ; ; def filter_events(df):; """"""; Reduce initial dataset to only events which shall be used for training; """"""; return df.Filter(""nElectron>=2 && nMuon>=2"", ""At least two electrons and two muons""); ; ; def define_variables(df):; """"""; Define the variables which shall be used for training; """"""; return df.Define(""Muon_pt_1"", ""Muon_pt[0]"")\; .Define(""Muon_pt_2"", ""Muon_pt[1]"")\; .Define(""Electron_pt_1"", ""Electron_pt[0]"")\; .Define(""Electron_pt_2"", ""Electron_pt[1]""); ; ; variables = [""Muon_pt_1"", ""Muon_pt_2"", ""Electron_pt_1"", ""Electron_pt_2""]; ; ; if __name__ == ""__main__"":; for filename, label in [[""SMHiggsToZZTo4L.root"", ""signal""], [""ZZTo2e2mu.root"", ""background""]]:; print("">>> Extract the training and testing events for {} from the {} dataset."".format(; label, filename)); ; # Load dataset, filter the required events and define the training variables; filepath = ""root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod/"" + filename; df = ROOT.RDataFrame(""Events"", filepath); df = filter_events(df); df = define_variables(df); ; # Book cutflow report; report = df.Report(); ; # Split dataset by event number for training and testing; columns = ROOT.std.vector[""string""](variables); df.Filter(""event % 2 == 0"", ""Select events with even event number for training"")\; .Snapshot(""Events"", ""train_"" + label + "".root"", columns); df.Filter(""event % 2 == 1"", ""Select events with odd event number for training"")\; .Snapshot(""Events"", ""test_"" + label + "".root"", columns); ; # Print cutflow report; report.Print(); formatOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva100__DataPreparation_8py.html:1178,test,testing,1178,doc/master/tmva100__DataPreparation_8py.html,https://root.cern,https://root.cern/doc/master/tmva100__DataPreparation_8py.html,1,['test'],['testing']
Testability,"ataSet*operator()(const Char_t* path); virtual TDataSet*operator*() const; TDataSetIter&operator=(const TDataSetIter&); virtual TDataSet*operator[](const Char_t* path); virtual voidTObject::Paint(Option_t* option = """"); virtual TStringPath(); virtual TStringPath(const Char_t* path); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual TDataSet*Pwd(Option_t* opt = """") const; virtual TDataSet*Rd(const Char_t* dirname, Option_t* option = """"); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidReset(TDataSet* l = 0, Int_t depth = 0); voidTObject::ResetBit(UInt_t f); virtual TDataSet*Rmdir(TDataSet* dataset, Option_t* option = """"); virtual TDataSet*Rmdir(const Char_t* dirname, Option_t* option = """"); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual TDataSet*Shunt(TDataSet* set); virtual TDataSet*Shunt(TDataSet* set, const Char_t* path); virtual TDataSet*Shunt(TDataSet* set, TDataSet* dataset); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetIter.html:7220,Test,TestBit,7220,root/html528/TDataSetIter.html,https://root.cern,https://root.cern/root/html528/TDataSetIter.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ataSetInfo &dsi, const TString &weightFile);  ; virtual ~PyMethodBase ();  ; virtual const Ranking * CreateRanking ()=0;  ; virtual void DeclareOptions ()=0;  ; PyObject * Eval (TString code);  Evaluate Python code. ;  ; virtual Double_t GetMvaValue (Double_t *errLower=nullptr, Double_t *errUpper=nullptr)=0;  ; Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets)=0;  ; virtual void Init ()=0;  ; virtual TClass * IsA () const;  ; virtual void ProcessOptions ()=0;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Train ()=0;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; virtual void DeclareCompatibilityOptions ();  options that are used ONLY for the READER to ensure backward compatibility they are hence without any effect (the reader is only reading the training options that HAD been used at the training of the .xml weight file at hand ;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PyMethodBase.html:1625,Test,Testing,1625,doc/master/classTMVA_1_1PyMethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PyMethodBase.html,1,['Test'],['Testing']
Testability,"ataloader, TMVA::Types::kBDT, ""BDT"",; 305 ""!H:!V:NTrees=100:MinNodeSize=1.0%:BoostType=AdaBoostR2:SeparationType=RegressionVariance:nCuts=20:PruneMethod=CostComplexity:PruneStrength=30"" );; 306 ; 307 if (Use[""BDTG""]); 308 factory->BookMethod( dataloader, TMVA::Types::kBDT, ""BDTG"",; 309 ""!H:!V:NTrees=2000::BoostType=Grad:Shrinkage=0.1:UseBaggedBoost:BaggedSampleFraction=0.5:nCuts=20:MaxDepth=3:MaxDepth=4"" );; 310 // --------------------------------------------------------------------------------------------------; 311 ; 312 // Now you can tell the factory to train, test, and evaluate the MVAs; 313 ; 314 // Train MVAs using the set of training events; 315 factory->TrainAllMethods();; 316 ; 317 // Evaluate all MVAs using the set of test events; 318 factory->TestAllMethods();; 319 ; 320 // Evaluate and compare performance of all configured MVAs; 321 factory->EvaluateAllMethods();; 322 ; 323 // --------------------------------------------------------------; 324 ; 325 // Save the output; 326 outputFile->Close();; 327 ; 328 std::cout << ""==> Wrote root file: "" << outputFile->GetName() << std::endl;; 329 std::cout << ""==> TMVARegression is done!"" << std::endl;; 330 ; 331 delete factory;; 332 delete dataloader;; 333 ; 334 // Launch the GUI for the root macros; 335 if (!gROOT->IsBatch()) TMVA::TMVARegGui( outfileName );; 336}; 337 ; 338int main( int argc, char** argv ); 339{; 340 // Select methods (don't look at this code - not of interest); 341 TString methodList;; 342 for (int i=1; i<argc; i++) {; 343 TString regMethod(argv[i]);; 344 if(regMethod==""-b"" || regMethod==""--batch"") continue;; 345 if (!methodList.IsNull()) methodList += TString("","");; 346 methodList += regMethod;; 347 }; 348 TMVARegression(methodList);; 349 return 0;; 350}; DataLoader.h; mainint main()Definition Prototype.cxx:12; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Double_tdouble Double_tDefinition RtypesCore.h:59; TChain.h; TFile.h; inputOption_t Option_t TPoint TPoint const char GetTextMagnitude",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C_source.html:13633,test,test,13633,doc/master/TMVARegression_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C_source.html,3,"['Test', 'test']","['TestAllMethods', 'test']"
Testability,"ataset] : Evaluation of TMVA_DNN_CPU on testing sample (400 events); : Elapsed time for evaluation of 400 events: 0.023 sec ; Factory : Test method: TMVA_CNN_CPU for Classification performance; : ; : Evaluate deep neural network on CPU using batches with size = 400; : ; TMVA_CNN_CPU : [dataset] : Evaluation of TMVA_CNN_CPU on testing sample (400 events); : Elapsed time for evaluation of 400 events: 0.149 sec ; Factory : Test method: PyKeras for Classification performance; : ; : Setting up tf.keras; : Using TensorFlow version 2; : Use Keras version from TensorFlow : tf.keras; : Applying GPU option: gpu_options.allow_growth=True; : Disabled TF eager execution when evaluating model ; : Loading Keras Model ; : Loaded model from file: trained_model_cnn.h5; PyKeras : [dataset] : Evaluation of PyKeras on testing sample (400 events); : Elapsed time for evaluation of 400 events: 0.175 sec ; Factory : Test method: PyTorch for Classification performance; : ; : Setup PyTorch Model for training; : Executing user initialization code from /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master.build/tutorials/tmva/PyTorch_Generate_CNN_Model.py; RecursiveScriptModule(; original_name=Sequential; (0): RecursiveScriptModule(original_name=Reshape); (1): RecursiveScriptModule(original_name=Conv2d); (2): RecursiveScriptModule(original_name=ReLU); (3): RecursiveScriptModule(original_name=BatchNorm2d); (4): RecursiveScriptModule(original_name=Conv2d); (5): RecursiveScriptModule(original_name=ReLU); (6): RecursiveScriptModule(original_name=MaxPool2d); (7): RecursiveScriptModule(original_name=Flatten); (8): RecursiveScriptModule(original_name=Linear); (9): RecursiveScriptModule(original_name=ReLU); (10): RecursiveScriptModule(original_name=Linear); (11): RecursiveScriptModule(original_name=Sigmoid); ); [1, 4] train loss: 1.164; [1, 8] train loss: 0.756; [1, 12] train loss: 0.696; [1] val loss: 0.693; [2, 4] train loss: 0.692; [2, 8] train loss: 0.690; [2, 12] train loss: 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:39092,Test,Test,39092,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['Test'],['Test']
Testability,"atches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRandom3 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Random number generator class based on M. ; Matsumoto and T. Nishimura, Mersenne Twister: A 623-diminsionally equidistributed uniform pseudorandom number generator ACM Transactions on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3–30.; For more information see the Mersenne Twister homepage [http://www.math.keio.ac.jp/~matumoto/emt.html]; Advantage:. large period 2**19937 -1; relatively fast (slightly slower than TRandom2 but much faster than TRandom1). Drawback:; a relative large internal state of 624 integers; generate only 32 random bits; not passing all the random generator tests. It fails some tests in TestU01 (see [http://simul.iro.umontreal.ca/testu01/tu01.html]). An altenativly excellent generator passing all tests of TestU01, having 61 random bits and fast as Mersenne and Twister is MIXMAX (TRandomMixMax). ; Definition at line 27 of file TRandom3.h. Public Member Functions;  TRandom3 (UInt_t seed=4357);  Default constructor If seed is 0, the seed is automatically computed via a TUUID object. ;  ;  ~TRandom3 () override;  Default destructor. ;  ; UInt_t GetSeed () const override;  Return one element of the generator state used to generate the random numbers. ;  ; virtual const UInt_t * GetState () const;  ; TClass * IsA () const override;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; Double_t Rndm () override;  Machine independent random number generator. ;  ; virtual Double_t Rndm (Int_t);  ; void RndmArray (Int_t n, Double_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void RndmArray (Int_t n, Float_t *array) override;  Return an array of n random numbers uniformly distributed in ]0,1]. ;  ; void SetSeed (ULong_t seed=0) override;  S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom3.html:1082,test,tests,1082,doc/master/classTRandom3.html,https://root.cern,https://root.cern/doc/master/classTRandom3.html,1,['test'],['tests']
Testability,"ate . Apply the preselection cuts before even bothering about any Decision Trees in the GetMVA . ; . --> -1 for background +1 for Signal ; Definition at line 3132 of file MethodBDT.cxx. ◆ Bagging(). Double_t TMVA::MethodBDT::Bagging ; (; ). private . Call it boot-strapping, re-sampling or whatever you like, in the end it is nothing else but applying ""random"" poisson weights to each event. ; Definition at line 2139 of file MethodBDT.cxx. ◆ Boost(). Double_t TMVA::MethodBDT::Boost ; (; std::vector< const TMVA::Event * > & ; eventSample, . DecisionTree * ; dt, . UInt_t ; cls = 0 . ). Apply the boosting algorithm (the algorithm is selecte via the ""option"" given in the constructor. ; The return value is the boosting weight. ; Definition at line 1717 of file MethodBDT.cxx. ◆ BoostMonitor(). void TMVA::MethodBDT::BoostMonitor ; (; Int_t ; iTree). private . Fills the ROCIntegral vs Itree from the testSample for the monitoring plots during the training . ; . but using the testing events ; Definition at line 1751 of file MethodBDT.cxx. ◆ Class(). static TClass * TMVA::MethodBDT::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::MethodBDT::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::MethodBDT::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 305 of file MethodBDT.h. ◆ CreateRanking(). const TMVA::Ranking * TMVA::MethodBDT::CreateRanking ; (; ). virtual . Compute ranking of input variables. ; Implements TMVA::MethodBase.; Definition at line 2682 of file MethodBDT.cxx. ◆ DeclareCompatibilityOptions(). void TMVA::MethodBDT::DeclareCompatibilityOptions ; (; ). protectedvirtual . Options that are used ONLY for the READER to ensure backward compatibility. ; Reimplemented from TMVA::MethodBase.; Definition at line 454 of file MethodBDT.cxx. ◆ DeclareOptions(). void TMVA::MethodBDT::DeclareOptions ; (; ). virtual . Define t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html:45030,test,testing,45030,doc/master/classTMVA_1_1MethodBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html,1,['test'],['testing']
Testability,"ate . linear term importance ; Definition at line 349 of file RuleEnsemble.h. ◆ fLinNorm. std::vector< Double_t > TMVA::RuleEnsemble::fLinNorm. private . norm of ditto, see after eq 26 in ref 2 ; Definition at line 346 of file RuleEnsemble.h. ◆ fLinPDFB. std::vector< TH1F* > TMVA::RuleEnsemble::fLinPDFB. private . pdfs for each variable, background ; Definition at line 347 of file RuleEnsemble.h. ◆ fLinPDFS. std::vector< TH1F* > TMVA::RuleEnsemble::fLinPDFS. private . pdfs for each variable, signal ; Definition at line 348 of file RuleEnsemble.h. ◆ fLinQuantile. Double_t TMVA::RuleEnsemble::fLinQuantile. private . quantile cut to remove outliers ; Definition at line 339 of file RuleEnsemble.h. ◆ fLinTermOK. std::vector< Char_t > TMVA::RuleEnsemble::fLinTermOK. private . flags linear terms with sufficient strong importance <– stores boolean ; Definition at line 342 of file RuleEnsemble.h. ◆ fLogger. MsgLogger* TMVA::RuleEnsemble::fLogger. mutableprivate . ! message logger ; Definition at line 381 of file RuleEnsemble.h. ◆ fNRulesGenerated. UInt_t TMVA::RuleEnsemble::fNRulesGenerated. private . number of rules generated, before cleanup ; Definition at line 366 of file RuleEnsemble.h. ◆ fOffset. Double_t TMVA::RuleEnsemble::fOffset. private . offset in discriminator function ; Definition at line 340 of file RuleEnsemble.h. ◆ fRuleFit. const RuleFit* TMVA::RuleEnsemble::fRuleFit. private . pointer to rule fit object ; Definition at line 379 of file RuleEnsemble.h. ◆ fRuleFSig. Double_t TMVA::RuleEnsemble::fRuleFSig. private . N(sig)/N(sig)+N(bkg) ; Definition at line 361 of file RuleEnsemble.h. ◆ fRuleMap. std::vector< std::vector<UInt_t> > TMVA::RuleEnsemble::fRuleMap. private . map of rule responses ; Definition at line 374 of file RuleEnsemble.h. ◆ fRuleMapEvents. const std::vector<const TMVA::Event *>* TMVA::RuleEnsemble::fRuleMapEvents. private . pointer to vector of events used ; Definition at line 377 of file RuleEnsemble.h. ◆ fRuleMapInd0. UInt_t TMVA::RuleEnsem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html:35603,log,logger,35603,doc/master/classTMVA_1_1RuleEnsemble.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html,1,['log'],['logger']
Testability,"ate all used libraries d3.js, three.js, MathJax.js, openui5; change to Promise based interface for all async methods, remove call-back arguments; change scripts names, core scripts name now JSRoot.core.js; unify function/methods naming conventions, many changes in method names; provide central code loader via JSROOT.require, supporting 4 different loading engines; many nice features and many bug fixes; see JSROOT v6 release notes. Class Reference Guide; One can now select a class’s documentation for a specific version. If a class does not exist in a given version, that version is grayed out, see for instance the documentation for ROOT::Experimental::RNTupleReader.; Build, Configuration and Testing Infrastructure. a new cmake variable, CMAKE_INSTALL_PYTHONDIR, has been added: it allows customization of the installation directory of ROOT’s python modules; the developer build option asserts is introduced to enable/disable asserts via the NDEBUG C/CXX flag. Asserts are always enabled for CMAKE_BUILD_TYPE=Debug and dev=ON. The previous behavior of the builds set via the CMAKE_BUILD_TYPE variable has not changed.; CMAKE_CXX_STANDARD, i.e. the C++ standard ROOT is built with, now defaults to the compiler default (or C++11 if the compiler default is older than that) rather than always defaulting to C++11. In turn this means that v6.24 is the first ROOT release for which ROOT’s pre-compiled binaries are not compiled with C++11 but with the default standard in use by the default system compiler. On Ubuntu 20.04, for example, the v6.24 pre-compiled binaries are now compiled with C++14 rather than C++11 as it happened for previous ROOT versions. Also see ROOT-10692. The following builtins have been updated:. VecCore 0.7.0; LZ4 1.9.3; openui5; Xrootd 4.12.8; Zstd 1.4.8. PyROOT. Deprecate TTree.AsMatrix in this release and mark for removal in v6.26. Please use instead RDataFrame.AsNumpy. Bugs and Issues fixed in this release. [ROOT-9790] - [DF] Lazy jitting of Cache and Snapshot;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:29594,Assert,Asserts,29594,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['Assert'],['Asserts']
Testability,"ate arguments in buffer. When buffer is full, empty the buffer; fBuffer[0] = number of entries in buffer; fBuffer[1] = w of first entry; fBuffer[2] = x of first entry. bool CheckBinLimits(const TAxis* a1, const TAxis* a2). bool CheckAxisLimits(const TAxis* a1, const TAxis* a2); Check that the axis limits of the histograms are the same; if a first and last bin is passed the axis is compared between the given range. bool CheckEqualAxes(const TAxis* a1, const TAxis* a2); Check that the axis are the same. bool CheckConsistentSubAxes(const TAxis* a1, Int_t firstBin1, Int_t lastBin1, const TAxis* a2, Int_t firstBin2 = 0, Int_t lastBin2 = 0); Check that two sub axis are the same; the limits are defined by first bin and last bin; N.B. no check is done in this case for variable bins. bool CheckConsistency(const TH1* h1, const TH1* h2); Check histogram compatibility; returns kTRUE if number of bins and bin limits are identical. Double_t Chi2Test(const TH1* h2, Option_t* option = ""UU"", Double_t* res = 0) const; test for comparing weighted and unweighted histograms. Function: Returns p-value. Other return values are specified by the 3rd parameter <br>. Parameters:. - h2: the second histogram; - option:; o ""UU"" = experiment experiment comparison (unweighted-unweighted); o ""UW"" = experiment MC comparison (unweighted-weighted). Note that; the first histogram should be unweighted; o ""WW"" = MC MC comparison (weighted-weighted); o ""NORM"" = to be used when one or both of the histograms is scaled; but the histogram originally was unweighted; o by default underflows and overlows are not included:; * ""OF"" = overflows included; * ""UF"" = underflows included; o ""P"" = print chi2, ndf, p_value, igood; o ""CHI2"" = returns chi2 instead of p-value; o ""CHI2/NDF"" = returns ; - res: not empty - computes normalized residuals and returns them in; this array. The current implementation is based on the papers test for comparison; of weighted and unweighted histograms"" in Proceedings of PHYSTAT05 and; ""Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TH1.html:44919,test,test,44919,root/html530/TH1.html,https://root.cern,https://root.cern/root/html530/TH1.html,2,['test'],['test']
Testability,"ate instance of TSQLStatement class, TSQLServer::Statement() method; should be used. Depending of the driver, used for connection to ODBC,; appropriate object instance will be created. For the moment there are; three different implementation of TSQLStatement class: for MySQL,; Oracle and ODBC. Hopefully, support of ODBC will allows usage of; statements for most existing RDBMS. // first connect to data base; TSQLServer* serv = TSQLServer::Connect(""mysql://hostname.domain:3306/test"",; ""user"", ""pass"");; // check if connection is ok; if ((serv!=0) && serv->IsConnected()) {; // create statement instance; TSQLStatement* stmt = serv->Statement(""CREATE TABLE TESTTABLE (ID1 INT, ID2 INT, FFIELD VARCHAR(255), FVALUE VARCHAR(255))"";; // process statement; stmt->Process();; // destroy object; delete stmt;; }; delete serv;. 2. Insert data to data base. There is a special syntax of SQL queries, which allow to use values,; provided as parameters. For instance, insert one row in TESTTABLE, created; with previous example, one can simply execute query like:. serv->Query(""INSERT INTO TESTTABLE VALUES (1, 2, \""name1\"", \""value1\"""");. But when many (100-1000) rows should be inserted, each call of; TSQLServer::Query() method will cause communication loop with database; server. As a result, insertion of data will takes too much time. TSQLStatement provides a mechanism to insert many rows at once. First of all,; appropriate statement should be created:. TSQLStatement* stmt = serv->Statement(""INSERT INTO TESTTABLE (ID1, ID2, FFIELD, FVALUE) VALUES (?, ?, ?, ?)"", 100);. Here question marks ""?"" indicates where statement parameters can be inserted.; To specify values of parameters, SetInt(), SetDouble(), SetString() and other; methods of TSQLStatement class should be used. Before parameters values; can be specified, NextIteration() method of statement class should be called.; For each new row first, NextIteration() called, that parameters values are; specified. There is one limitation - once pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSQLStatement.html:1830,TEST,TESTTABLE,1830,root/html528/TSQLStatement.html,https://root.cern,https://root.cern/root/html528/TSQLStatement.html,3,['TEST'],['TESTTABLE']
Testability,"ate of the intersection point. If inter is an odd number, then the point x,y is within the polygon. ; Definition at line 1841 of file TGraph.cxx. ◆ LeastSquareFit(). void TGraph::LeastSquareFit ; (; Int_t ; m, . Double_t * ; a, . Double_t ; xmin = 0, . Double_t ; xmax = 0 . ). virtual . Least squares polynomial fitting without weights. ; Parameters. [in]mnumber of parameters ; [in]aarray of parameters ; [in]xmin1st point number to fit (default =0) ; [in]xmaxlast point number to fit (default=fNpoints-1). based on CERNLIB routine LSQ: Translated to C++ by Rene Brun ; Definition at line 1856 of file TGraph.cxx. ◆ LeastSquareLinearFit(). void TGraph::LeastSquareLinearFit ; (; Int_t ; ndata, . Double_t & ; a0, . Double_t & ; a1, . Int_t & ; ifail, . Double_t ; xmin = 0, . Double_t ; xmax = 0 . ). virtual . Least square linear fit without weights. ; Fit a straight line (a0 + a1*x) to the data in this graph.; Parameters. [in]ndataif ndata<0, fits the logarithm of the graph (used in InitExpo() to set the initial parameter values for a fit with exponential function. ; [in]a0constant ; [in]a1slope ; [in]ifailreturn parameter indicating the status of the fit (ifail=0, fit is OK) ; [in]xmin,xmaxfitting range. extracted from CERNLIB LLSQ: Translated to C++ by Rene Brun ; Definition at line 1931 of file TGraph.cxx. ◆ Merge(). Int_t TGraph::Merge ; (; TCollection * ; li). virtual . Adds all graphs from the collection to this graph. ; Returns the total number of points in the result or -1 in case of an error. ; Reimplemented in TGraphAsymmErrors, and TGraphErrors.; Definition at line 2658 of file TGraph.cxx. ◆ MovePoints(). void TGraph::MovePoints ; (; Double_t ; dx, . Double_t ; dy, . Bool_t ; logx = kFALSE, . Bool_t ; logy = kFALSE . ). virtual . Move all graph points on specified values dx,dy If log argument specified, calculation done in logarithmic scale like: new_value = exp( log(old_value) + delta );. ; Definition at line 2691 of file TGraph.cxx. ◆ operator=(). TGraph & TGra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph.html:64684,log,logarithm,64684,doc/master/classTGraph.html,https://root.cern,https://root.cern/doc/master/classTGraph.html,1,['log'],['logarithm']
Testability,"ate of the; index category as listed by the index categories type iterator. PDFs may not overlap (i.e. share any variables) with the index category (function). RooSimultaneous(const char* name, const char* title, map<string,RooAbsPdf*> pdfMap, RooAbsCategoryLValue& inIndexCat). void initialize(RooAbsCategoryLValue& inIndexCat, map<string,RooAbsPdf*> pdfMap); First see if there are any RooSimultaneous input components. RooSimultaneous(const RooSimultaneous& other, const char* name = 0); Copy constructor. ~RooSimultaneous(); Destructor. RooAbsPdf* getPdf(const char* catName) const; Return the p.d.f associated with the given index category name. Bool_t addPdf(const RooAbsPdf& pdf, const char* catLabel); Associate given PDF with index category state label 'catLabel'.; The names state must be already defined in the index category. RooSimultaneous can function without having a PDF associated; with every single state. The normalization in such cases is taken; from the number of registered PDFs, but getVal() will assert if; when called for an unregistered index state. PDFs may not overlap (i.e. share any variables) with the index category (function). RooAbsPdf::ExtendMode extendMode() const; WVE NEEDS FIX. Double_t evaluate() const; Return the current value:; the value of the PDF associated with the current index category state. Double_t expectedEvents(const RooArgSet* nset) const; Return the number of expected events: If the index is in nset,; then return the sum of the expected events of all components,; otherwise return the number of expected events of the PDF; associated with the current index category state. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; Forward determination of analytical integration capabilities to component p.d.f.s; A unique code is assigned to the combined integration capabilities of all associated; p.d.f.s. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSimultaneous.html:47873,assert,assert,47873,root/html602/RooSimultaneous.html,https://root.cern,https://root.cern/root/html602/RooSimultaneous.html,2,['assert'],['assert']
Testability,"ate reference distributions (PDFs) from signal and background events: fill histograms and smooth them; if decorrelation is required, compute corresponding square-root matrices the reference histograms require the correct boundaries. ;  ; void WriteMonitoringHistosToFile () const;  write histograms and PDFs to file for monitoring purposes ;  ; virtual void WriteOptionsToStream (std::ostream &o, const TString &prefix) const;  write options to stream ;  ; void WriteWeightsToStream (TFile &rf) const;  write reference PDFs to ROOT file ;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; UInt_t GetCurrentIter ();  ; virtual Double_t GetEfficiency (const TString &, Types::ETreeType, Double_t &err);  fill background efficiency (resp. ;  ; const Event * GetEvent () const;  ; const Event * GetEvent (const TMVA::Event *ev) const;  ; const Event * GetEvent (Long64_t ievt) const;  ; const Event * GetEvent (Long64_t ievt, Types::ETreeType type) const;  ; const std::v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html:5142,Test,Testing,5142,doc/master/classTMVA_1_1MethodLikelihood.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html,1,['Test'],['Testing']
Testability,"ate the following event messages: kC_VSCROLL, kSB_SLIDERPOS, position, 0 kC_VSCROLL, kSB_SLIDERTRACK, position, 0. ; Definition at line 165 of file TGScrollBar.h. Public Member Functions;  TGVScrollBar (const TGWindow *p=nullptr, UInt_t w=2, UInt_t h=4, UInt_t options=kVerticalFrame, Pixel_t back=GetDefaultFrameBackground());  Create a vertical scrollbar. ;  ;  ~TGVScrollBar () override;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button event in vertical scrollbar. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion in a vertical scrollbar. ;  ; TClass * IsA () const override;  ; void Layout () override;  Layout and move vertical scrollbar components. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save an vertical scrollbar as a C++ statement(s) on output stream out. ;  ; void SetPosition (Int_t pos) override;  Set logical slider position of vertical scrollbar. ;  ; void SetRange (Int_t range, Int_t page_size) override;  Set range of vertical scrollbar. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGScrollBar;  TGScrollBar (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  Constructor. ;  ;  ~TGScrollBar () override;  Delete a scrollbar (either horizontal or vertical). ;  ; void ChangeBackground (Pixel_t back) override;  Change background color. ;  ; void DrawBorder () override;  Draw frame border. ;  ; TGScrollBarElement * GetHead () const;  ; virtual Int_t GetPageSize () const;  ; virtual Int_t GetPosition () const;  ; virtual Int_t GetRange () const;  ; TGScrollBarElement * GetSlider () const;  ; virtual Int_t GetSmallIncrement ();  ; TGScrollBarElement * GetTail () const;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVScrollBar.html:1313,log,logical,1313,doc/master/classTGVScrollBar.html,https://root.cern,https://root.cern/doc/master/classTGVScrollBar.html,1,['log'],['logical']
Testability,"ate); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector& insp) const; voidShowNormalEveDecorations(); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; TEveWindowManager(const char* n = ""TEveWindowManager"", const char* t = """"); virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidWindowDeleted(TEveWindow* window)SIGNAL ; voidWindowDocked(TEveWindow* window)SIGNAL ; voidWindowSelected(TEveWindow* window)SIGNAL ; voidWindowUndocked(TEveWindow* window)SIGNAL ; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizPa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveWindowManager.html:18722,Test,TestBits,18722,root/html602/TEveWindowManager.html,https://root.cern,https://root.cern/root/html602/TEveWindowManager.html,2,['Test'],['TestBits']
Testability,"ate); voidTGLViewer::SetPictureFileName(const TString& f); voidTGLViewer::SetPointScale(Float_t s); voidTGLViewer::SetResetCamerasOnUpdate(Bool_t v); voidTGLViewer::SetSmartRefresh(Bool_t smart_ref); voidTGLViewer::SetSmoothLines(Bool_t s); voidTGLViewer::SetSmoothPoints(Bool_t s); voidTGLViewer::SetStereo(Bool_t stereo, Bool_t quad_buf = kTRUE); voidTGLViewer::SetStereoEyeOffsetFac(Float_t f); voidTGLViewer::SetStereoFrustumAsymFac(Float_t f); voidTGLViewer::SetStereoZeroParallax(Float_t f); voidTGLViewerBase::SetStyle(Short_t st); virtual voidTObject::SetUniqueID(UInt_t uid); voidTGLViewerBase::SetWFLineW(Float_t w); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Short_tTGLViewerBase::Style() const; voidTGLViewer::SwitchColorSet(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTGLLockable::TakeLock(TGLLockable::ELock lock) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGLEmbeddedViewer(const TGWindow* parent, TVirtualPad* pad = 0, Int_t border = 2); TGLEmbeddedViewer(const TGWindow* parent, TVirtualPad* pad, TGedEditor* ged, Int_t border = 2); virtual voidTGLViewer::UnClicked(TObject* obj, UInt_t button, UInt_t state)SIGNAL ; virtual voidTGLViewer::UnMouseOver(TObject* obj, UInt_t state)SIGNAL ; voidTGLViewer::UpdateScene(Bool_t redraw = kTRUE); virtual voidTObject::UseCurrentStyle(); voidTGLViewer::UseDarkColorSet(); voidTGLViewer::UseDefaultColorSet(Bool_t x); static voidTGLViewer::UseDefaultColorSetForNewViewers(Bool_t x); voidTGLViewer::UseLightColorSet(); static TVirtualViewer3D*TVirtualViewer3D::Viewer3D(TVirtualPad* pad = 0, Option_t* type = """"); Int_tTGLViewer::ViewportDiagonal() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; Float_tTGLViewerBase::WFLineW() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLEmbeddedViewer.html:16859,Test,TestBit,16859,root/html604/TGLEmbeddedViewer.html,https://root.cern,https://root.cern/root/html604/TGLEmbeddedViewer.html,1,['Test'],['TestBit']
Testability,"ate, Double_t vRotate); voidTGLViewer::SetPictureFileName(const TString& f); voidTGLViewer::SetPointScale(Float_t s); voidTGLViewer::SetResetCamerasOnUpdate(Bool_t v); voidTGLViewer::SetSmartRefresh(Bool_t smart_ref); voidTGLViewer::SetSmoothLines(Bool_t s); voidTGLViewer::SetSmoothPoints(Bool_t s); voidTGLViewer::SetStereo(Bool_t s); voidTGLViewer::SetStereoEyeOffsetFac(Float_t f); voidTGLViewer::SetStereoFrustumAsymFac(Float_t f); voidTGLViewer::SetStereoZeroParallax(Float_t f); voidTGLViewerBase::SetStyle(Short_t st); virtual voidTObject::SetUniqueID(UInt_t uid); voidTGLViewerBase::SetWFLineW(Float_t w); voidShow(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Short_tTGLViewerBase::Style() const; voidTGLViewer::SwitchColorSet(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTGLLockable::TakeLock(TGLLockable::ELock lock) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGLSAViewer(TVirtualPad* pad, TGLFormat* format = 0); TGLSAViewer(const TGWindow* parent, TVirtualPad* pad, TGedEditor* ged = 0, TGLFormat* format = 0); voidToggleEditObject(); voidToggleOrthoDolly(); voidToggleOrthoRotate(); virtual voidTGLViewer::UnClicked(TObject* obj, UInt_t button, UInt_t state)SIGNAL ; virtual voidTGLViewer::UnMouseOver(TObject* obj, UInt_t state)SIGNAL ; voidTGLViewer::UpdateScene(Bool_t redraw = kTRUE); virtual voidTObject::UseCurrentStyle(); voidTGLViewer::UseDarkColorSet(); voidTGLViewer::UseDefaultColorSet(Bool_t x); static voidTGLViewer::UseDefaultColorSetForNewViewers(Bool_t x); voidTGLViewer::UseLightColorSet(); static TVirtualViewer3D*TVirtualViewer3D::Viewer3D(TVirtualPad* pad = 0, Option_t* type = """"); Int_tTGLViewer::ViewportDiagonal() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; Float_tTGLViewerBase::WFLineW() const; virtual Int_tTObject::Write(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLSAViewer.html:17066,Test,TestBit,17066,root/html602/TGLSAViewer.html,https://root.cern,https://root.cern/root/html602/TGLSAViewer.html,1,['Test'],['TestBit']
Testability,"ate. void NameSpace2FileName(TString& name); Replace ""::"" in name by ""__""; Replace ""<"", "">"", "" "", "","", ""~"", ""="" in name by ""_""; Replace ""A::X<A::Y>"" by ""A::X<-p0Y>"",; ""A::B::X<A::B::Y>"" by ""A::B::X<-p1Y>"", etc. void ProcessDocInDir(ostream& out, const char* indir, const char* outdir, const char* linkdir); Write links to files indir/*.txt, indir/*.html (non-recursive) to out.; If one of the files is called ""index.{html,txt}"" it will be; included in out (instead of copying it to outdir and generating a link; to linkdir). txt files are passed through Convert().; The files' links are sorted alphabetically. void ReferenceEntity(TSubString& str, TClass* entity, const char* comment = 0); Create a reference to a class documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataMember* entity, const char* comment = 0); Create a reference to a data member documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDocOutput.html:13277,test,test,13277,root/html528/TDocOutput.html,https://root.cern,https://root.cern/root/html528/TDocOutput.html,6,['test'],['test']
Testability,"ate<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef ::ROOT::Math::BasicFitMethodFunction<DerivFunType> ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::BaseObjFunction. Definition at line 47 of file LogLikelihoodFCN.h. ◆ IModelFunction. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef ::ROOT::Math::IParamMultiFunctionTempl<T> ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::IModelFunction. Definition at line 50 of file LogLikelihoodFCN.h. ◆ T. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef ModelFunType::BackendType ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::T. Definition at line 44 of file LogLikelihoodFCN.h. ◆ Type_t. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . typedef BaseObjFunction::Type_t ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::Type_t. Definition at line 51 of file LogLikelihoodFCN.h. Constructor & Destructor Documentation. ◆ LogLikelihoodFCN() [1/3]. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::LogLikelihoodFCN ; (; const std::shared_ptr< UnBinData > & ; data, . const std::shared_ptr< IModelFunction > & ; func, . int ; weight = 0, . bool ; extended = false, . const ::ROOT::EExecutionPolicy & ; executionPolicy = ::ROOT::EExecutionPolicy::kSequential . ). inline . Constructor from unbin data set and model function (pdf) ; Definition at line 57 of file LogLikelihoodFCN.h. ◆ LogLikelihoodFCN() [2/3]. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::LogLikelihoodFCN ; (; const UnBinData & ; data, . const IModelFunction & ; func, . int ; weight = 0, . bool ; extended = false, . const ::ROOT::EExecutionPolicy & ; executionPolicy = ::ROOT::EExecutionPoli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html:7826,Log,LogLikelihoodFCN,7826,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,1,['Log'],['LogLikelihoodFCN']
Testability,"ateColorTableFromFile(""filename.txt"") or gStyle->SetPalette(""filename.txt""). The input file contains one color per line in “r g b” float format. This function is useful to profit from a full set of colour-vision deficiency friendly and perceptually uniform colour maps that are available to download; 9.7 The Graphics Editor; A new graphics editor took place in ROOT v4.0. The editor can be activated by selecting the Editor menu entry in the canvas View menu or one of the context menu entries for setting line, fill, marker or text attributes. The following object editors are available for the current ROOT version.; 9.7.1 TAxisEditor. This user interface gives the possibility for changing the following axis attributes:. color of the selected axis, the axis’ title and labels;; the length of thick parameters and the possibility to set them on both axis sides (if +- is selected);; to set logarithmic or linear scale along the selected axis with a choice for optimized or more logarithmic labels;; primary, secondary and tertiary axis divisions can be set via the three number fields;; the axis title can be added or edited and the title’s color, position, offset, size and font can be set interactively;; the color, size, and offset of axis labels can be set similarly. In addition, there is a check box for no exponent choice, and another one for setting the same decimal part for all labels. 9.7.2 TPadEditor. It provides the following user interface:; Fixed aspect ratio - can be set for pad resizing.; Edit - sets pad or canvas as editable.; Cross-hair - sets a cross hair on the pad.; TickX - set ticks along the X axis.; TickY - set ticks along the Y axis.; GridX - set a grid along the X axis.; GridY - set a grid along the Y axis.; The pad or canvas border size can be set if a sunken or a raised border mode is; selected; no border mode can be set too. 9.8 Copy and Paste; You can make a copy of a canvas using TCanvas::DrawClonePad. This method is unique to TCanvas. It clones the ent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:366126,log,logarithmic,366126,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['log'],['logarithmic']
Testability,"ateTestStatSampler() const; specify the Test Statistic and create a ToyMC test statistic sampler. void CreateParameterPoints() const; specify the parameter points to perform the construction.; allow ability to profile on some nuisance paramters. PointSetInterval* GetInterval() const; Main interface to get a RooStats::ConfInterval.; It constructs a RooStats::PointSetInterval. FeldmanCousins(RooAbsData& data, RooStats::ModelConfig& model); FeldmanCousins();; Common constructor. Double_t Size() const; Get the size of the test (eg. rate of Type I error). {return fSize;}. Double_t ConfidenceLevel() const; Get the Confidence level for the test. {return 1.-fSize;}. void SetData(RooAbsData& ); Set the DataSet. void SetPdf(RooAbsPdf& ); Set the Pdf. void SetParameters(const RooArgSet& ); specify the parameters of interest in the interval. void SetNuisanceParameters(const RooArgSet& ); specify the nuisance parameters (eg. the rest of the parameters). void SetParameterPointsToTest(RooAbsData& pointsToTest); User-defined set of points to test. void SetPOIPointsToTest(RooAbsData& poiToTest); User-defined set of points to test. void SetTestSize(Double_t size); set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval). {fSize = size;}. void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). {fSize = 1.-cl;}. RooAbsData* GetPointsToScan(). ConfidenceBelt* GetConfidenceBelt(); {return fConfBelt;}. void UseAdaptiveSampling(bool flag = true); {fAdaptiveSampling=flag;}. void AdditionalNToysFactor(double fact); {fAdditionalNToysFactor = fact;}. void SetNBins(Int_t bins); {fNbins = bins;}. void FluctuateNumDataEntries(bool flag = true); {fFluctuateData = flag;}. void SaveBeltToFile(bool flag = true). void CreateConfBelt(bool flag = true); {fCreateBelt = flag;}. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__FeldmanCousins.html:5397,test,test,5397,root/html530/RooStats__FeldmanCousins.html,https://root.cern,https://root.cern/root/html530/RooStats__FeldmanCousins.html,5,['test'],['test']
Testability,"ateX(Double_t angle); virtual voidTGeoCombiTrans::RotateY(Double_t angle); virtual voidTGeoCombiTrans::RotateZ(Double_t angle); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTGeoCombiTrans::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoMatrix::SetDefaultName(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTGeoCombiTrans::SetDx(Double_t dx); virtual voidTGeoCombiTrans::SetDy(Double_t dy); virtual voidTGeoCombiTrans::SetDz(Double_t dz); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidTGeoCombiTrans::SetRotation(const TGeoRotation& other); voidTGeoCombiTrans::SetRotation(const TGeoRotation* rot); voidSetScale(Double_t* scale); voidSetScale(Double_t sx, Double_t sy, Double_t sz); voidTGeoMatrix::SetShared(Bool_t flag = kTRUE); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidTGeoCombiTrans::SetTranslation(const TGeoTranslation& tr); voidTGeoCombiTrans::SetTranslation(Double_t* vect); voidTGeoCombiTrans::SetTranslation(Double_t dx, Double_t dy, Double_t dz); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoGenTrans.html:14127,Test,TestBit,14127,root/html534/TGeoGenTrans.html,https://root.cern,https://root.cern/root/html534/TGeoGenTrans.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ated like 2^(3^4); 1634 ; 1635void TFormula::HandleExponentiation(TString &formula); 1636{; 1637 Int_t caretPos = formula.Last('^');; 1638 while (caretPos != kNPOS && !IsAParameterName(formula, caretPos)) {; 1639 ; 1640 TString right, left;; 1641 Int_t temp = caretPos;; 1642 temp--;; 1643 // get the expression in ( ) which has the operator^ applied; 1644 if (formula[temp] == ')') {; 1645 Int_t depth = 1;; 1646 temp--;; 1647 while (depth != 0 && temp > 0) {; 1648 if (formula[temp] == ')'); 1649 depth++;; 1650 if (formula[temp] == '('); 1651 depth--;; 1652 temp--;; 1653 }; 1654 if (depth == 0); 1655 temp++;; 1656 }; 1657 // this in case of someting like sin(x+2)^2; 1658 do {; 1659 temp--; // go down one; 1660 // handle scientific notation cases (1.e-2 ^ 3 ); 1661 if (temp >= 2 && IsScientificNotation(formula, temp - 1)); 1662 temp -= 3;; 1663 } while (temp >= 0 && !IsOperator(formula[temp]) && !IsBracket(formula[temp]));; 1664 ; 1665 assert(temp + 1 >= 0);; 1666 Int_t leftPos = temp + 1;; 1667 left = formula(leftPos, caretPos - leftPos);; 1668 // std::cout << ""left to replace is "" << left << std::endl;; 1669 ; 1670 // look now at the expression after the ^ operator; 1671 temp = caretPos;; 1672 temp++;; 1673 if (temp >= formula.Length()) {; 1674 Error(""HandleExponentiation"", ""Invalid position of operator ^"");; 1675 return;; 1676 }; 1677 if (formula[temp] == '(') {; 1678 Int_t depth = 1;; 1679 temp++;; 1680 while (depth != 0 && temp < formula.Length()) {; 1681 if (formula[temp] == ')'); 1682 depth--;; 1683 if (formula[temp] == '('); 1684 depth++;; 1685 temp++;; 1686 }; 1687 temp--;; 1688 } else {; 1689 // handle case first character is operator - or + continue; 1690 if (formula[temp] == '-' || formula[temp] == '+'); 1691 temp++;; 1692 // handle cases x^-2 or x^+2; 1693 // need to handle also cases x^sin(x+y); 1694 Int_t depth = 0;; 1695 // stop right expression if is an operator or if is a "")"" from a zero depth; 1696 while (temp < formula.Length() && ((depth > 0) || !IsO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:63025,assert,assert,63025,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['assert'],['assert']
Testability,"atedDefinition DataLoader.cxx:541; TMVA::DataLoader::fATreeTypeInt_t fATreeTypetype of event (=classIndex)Definition DataLoader.h:206; TMVA::DataLoader::fTestAssignTreestd::vector< TTree * > fTestAssignTreefor each class: tmp tree if user wants to assign the events directlyDefinition DataLoader.h:204; TMVA::DataLoader::fAnalysisTypeTypes::EAnalysisType fAnalysisTypethe training typeDefinition DataLoader.h:210; TMVA::DataLoader::SetCutvoid SetCut(const TString &cut, const TString &className="""")Definition DataLoader.cxx:575; TMVA::DataLoader::AddVariablevoid AddVariable(const TString &expression, const TString &title, const TString &unit, char type='F', Double_t min=0, Double_t max=0)user inserts discriminating variable in data set infoDefinition DataLoader.cxx:485; TMVA::DataLoader::PrepareFoldDataSetvoid PrepareFoldDataSet(CvSplit &s, UInt_t foldNumber, Types::ETreeType tt=Types::kTraining)Function for assigning the correct folds to the testing or training set.Definition DataLoader.cxx:670; TMVA::DataSetInfoClass that contains all the data information.Definition DataSetInfo.h:62; TMVA::DataSetManagerClass that contains all the data information.Definition DataSetManager.h:51; TMVA::Types::EAnalysisTypeEAnalysisTypeDefinition Types.h:126; TMVA::Types::ETreeTypeETreeTypeDefinition Types.h:142; TMVA::Types::kMaxTreeType@ kMaxTreeTypealso used as temporary storage for trees not yet assigned for testing;training...Definition Types.h:145; TMVA::Types::kTraining@ kTrainingDefinition Types.h:143; TStringBasic string class.Definition TString.h:139; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; bool; double; int; unsigned int; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; TMVA::DataLoaderCopyvoid DataLoaderCopy(TMVA::DataLoader *des, TMVA::DataLoader *src); ttauto * ttDefinition textangle.C:16; Types.h. tmvatmvaincTMVADataLoader.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:57 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:20822,test,testing,20822,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['test'],['testing']
Testability,"ategory. /Factory"" << Endl;; 1244 else; 1245 methCat->fDataSetManager = m->DataInfo().GetDataSetManager();; 1246 }; 1247 // ToDo, Do we need to fill the DataSetManager of MethodBoost here too?; 1248 ; 1249 TString wfileDir = m->DataInfo().GetName();; 1250 wfileDir += ""/"" + gConfig().GetIONames().fWeightFileDir;; 1251 m->SetWeightFileDir(wfileDir);; 1252 m->SetModelPersistence(fModelPersistence);; 1253 m->SetSilentFile(IsSilentFile());; 1254 m->SetAnalysisType(fAnalysisType);; 1255 m->SetupMethod();; 1256 m->ReadStateFromFile();; 1257 m->SetTestvarName(testvarName);; 1258 ; 1259 // replace trained method by newly created one (from weight file) in methods vector; 1260 (*methods)[i] = m;; 1261 }; 1262 }; 1263 }; 1264}; 1265 ; 1266////////////////////////////////////////////////////////////////////////////////; 1267/// Evaluates all booked methods on the testing data and adds the output to the; 1268/// Results in the corresponiding DataSet.; 1269///; 1270 ; 1271void TMVA::Factory::TestAllMethods(); 1272{; 1273 Log() << kHEADER << gTools().Color(""bold"") << ""Test all methods"" << gTools().Color(""reset"") << Endl;; 1274 ; 1275 // don't do anything if no method booked; 1276 if (fMethodsMap.empty()) {; 1277 Log() << kINFO << ""...nothing found to test"" << Endl;; 1278 return;; 1279 }; 1280 std::map<TString, MVector *>::iterator itrMap;; 1281 ; 1282 for (itrMap = fMethodsMap.begin(); itrMap != fMethodsMap.end(); ++itrMap) {; 1283 MVector *methods = itrMap->second;; 1284 MVector::iterator itrMethod;; 1285 ; 1286 // iterate over methods and test; 1287 for (itrMethod = methods->begin(); itrMethod != methods->end(); ++itrMethod) {; 1288 Event::SetIsTraining(kFALSE);; 1289 MethodBase *mva = dynamic_cast<MethodBase *>(*itrMethod);; 1290 if (mva == 0); 1291 continue;; 1292 Types::EAnalysisType analysisType = mva->GetAnalysisType();; 1293 Log() << kHEADER << ""Test method: "" << mva->GetMethodName() << "" for ""; 1294 << (analysisType == Types::kRegression; 1295 ? ""Regression""; 1296 : (analys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:51963,Test,TestAllMethods,51963,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,2,"['Log', 'Test']","['Log', 'TestAllMethods']"
Testability,"aterial.cxx:1236; TGeoMixture::FillMaterialEvolutionvoid FillMaterialEvolution(TObjArray *population, Double_t precision=0.001) overrideFills a user array with all the elements deriving from the possible decay of the top elements composi...Definition TGeoMaterial.cxx:1312; TGeoMixture::Printvoid Print(const Option_t *option="""") const overrideprint characteristics of this materialDefinition TGeoMaterial.cxx:1190; TLatexTo draw Mathematical Formula.Definition TLatex.h:18; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TObjArray::GetEntriesFastInt_t GetEntriesFast() constDefinition TObjArray.h:58; TObjArray::Clearvoid Clear(Option_t *option="""") overrideRemove all objects from the array.Definition TObjArray.cxx:321; TObjArray::AtTObject * At(Int_t idx) const overrideDefinition TObjArray.h:164; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TPad::SetLogyvoid SetLogy(Int_t value=1) overrideSet Lin/Log scale for Y.Definition TPad.cxx:6100; TPad::FindObjectTObject * FindObject(const char *name) const overrideSearch if object named name is inside this pad or in pads inside this pad.Definition TPad.cxx:2700; TPad::SetLogxvoid SetLogx(Int_t value=1) overrideSet Lin/Log scale for X.Definition TPad.cxx:6086; TPad::GetNameconst char * GetName() const overrideReturns name of object.Definition TPad.h:260; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TPaveText::AddTextvirtual TText * AddText(Double_t x1, Double_t y1, const char *label)Add a new Text line to this pavetext at given coordinates.Definition TPaveText.cxx:191; TPaveText::Drawvoid Draw(Option_t *option="""") overrideDraw this pavetext with its current attributes.Definition TPaveText.cxx:242; ptTPaveText * ptDefinition entrylist_figure1.C:7; c1return c1Definition legend1.C:41; nconst Int_t nDefinition legend1.C:16; c2return c2Definition legend2.C:14; arrowDefini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RadioNuclides_8C.html:14276,Log,Log,14276,doc/master/RadioNuclides_8C.html,https://root.cern,https://root.cern/doc/master/RadioNuclides_8C.html,1,['Log'],['Log']
Testability,"ates how to retrieve TTree variables in arrays ;  tv3.C;  tvdemo.C;  ► unuran;  unuranDemo.CExample macro to show unuran capabilities The results are compared with what is obtained using TRandom or TF1::GetRandom The macro is divided in 3 parts: ;  unuranFoamTest.CThis program must be compiled and executed with Aclic as follows ;  ► v7;  concurrentfill.cxx;  draw.cxx;  histops.cxx;  histspeedtest.cxx;  perf.cxx;  perfcomp.cxx;  simple.cxx;  ► xml;  DOMParsePerson.C ROOT implementation of a XML DOM Parser ;  DOMRecursive.C ROOT implementation of a XML DOM Parser ;  SAXHandler.C ROOT implementation of a simple SAX Handler ;  xmlnewfile.C Example to create a new xml file with the TXMLEngine class ;  xmlreadfile.C Example to read and parse any xml file, supported by TXMLEngine class The input file, produced by xmlnewfile.C macro is used If you need full xml syntax support, use TXMLParser instead ;  benchmarks.CThis macro run several tests and produces an benchmark report ;  demos.CThis macro shows a control bar to run some of the ROOT tutorials ;  demoshelp.CThis macro shows help on running the Demos ;  geant3tasks.CThis script is a representation using TTasks of the Geant3 simulation program This example uses directly TTask objects ;  hsimple.C This program creates : ;  htmlex.CThis file demonstrates how THtml can document sources ;  MyTasks.cxxA set of classes deriving from TTask ;  regexp.CA regular expression, often called a pattern, is an expression that describes a set of strings ;  regexp_pme.CClass TPMERegexp - API similar to PME - PCRE Made Easy Tries to be as close as possible to PERL syntax and functionality ;  rootalias.CDefines aliases: ;  rootenv.CProduce a picture of the ROOT environment ;  rootlogoff.CExample of rootlogoff.C ;  rootlogon.CExample of rootlogon.C ;  rootmarks.CPrints a summary of all ROOT benchmarks (must be run before) ;  tasks.CExample of TTasks . ROOT 6.08/07 - Reference Guide Generated on Thu May 31 2018 21:48:33 using Doxygen 1.8.13. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:159479,benchmark,benchmarks,159479,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['benchmark'],['benchmarks']
Testability,"ates the quantile of the distribution of the first pair entries weighted with the values in the second pair entries. Double_t GradBoost(vector<const TMVA::Event*>& , TMVA::DecisionTree* dt, UInt_t cls = 0); Calculate the desired response value for each region. Double_t GradBoostRegression(vector<const TMVA::Event*>& , TMVA::DecisionTree* dt); Implementation of M_TreeBoost using a Huber loss function as desribed by Friedman 1999. void InitGradBoost(vector<const TMVA::Event*>& ); initialize targets for first tree. Double_t TestTreeQuality(TMVA::DecisionTree* dt); test the tree quality.. in terms of Miscalssification. Double_t Boost(vector<const TMVA::Event*>& , TMVA::DecisionTree* dt, UInt_t cls = 0); apply the boosting alogrithim (the algorithm is selecte via the the ""option"" given; in the constructor. The return value is the boosting weight. void BoostMonitor(Int_t iTree); fills the ROCIntegral vs Itree from the testSample for the monitoring plots; during the training .. but using the testing events. Double_t AdaBoost(vector<const TMVA::Event*>& , TMVA::DecisionTree* dt); the AdaBoost implementation.; a new training sample is generated by weighting; events that are misclassified by the decision tree. The weight; applied is w = (1-err)/err or more general:; w = ((1-err)/err)^beta; where err is the fraction of misclassified events in the tree ( <0.5 assuming; demanding the that previous selection was better than random guessing); and ""beta"" being a free parameter (standard: beta = 1) that modifies the; boosting. Double_t AdaCost(vector<const TMVA::Event*>& , TMVA::DecisionTree* dt); the AdaCost boosting algorithm takes a simple cost Matrix (currently fixed for; all events... later could be modified to use individual cost matrices for each; events as in the original paper... true_signal true_bkg. sel_signal | Css Ctb_ss Cxx.. in the range [0,1]; sel_bkg | Cts_sb Cbb. and takes this into account when calculating the misclass. cost (former: error fraction):. err = sum_ev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBDT.html:31816,test,testing,31816,root/html534/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBDT.html,3,['test'],['testing']
Testability,"ates. More...;  ; class  RooChangeTracker;  Meta object that tracks value changes in a given set of RooAbsArgs by registering itself as value client of these objects. More...;  ; class  RooChi2Var;  Simple \( \chi^2 \) calculation from a binned dataset and a PDF. More...;  ; class  RooClassFactory;  Similar to TTree::MakeClass(), generates skeleton code for RooAbsPdf and RooAbsReal functions given a list of input parameter names. More...;  ; class  RooCmdArg;  Named container for two doubles, two integers two object points and three string pointers that can be passed as generic named arguments to a variety of RooFit end user methods. More...;  ; class  RooCmdConfig;  Configurable parser for RooCmdArg named arguments. More...;  ; class  RooCollectionProxy< RooCollection_t >;  Concrete proxy for RooArgSet or RooArgList objects. More...;  ; class  RooCompositeDataStore;  Combines several disjunct datasets into one. More...;  ; class  RooConstraintSum;  Calculates the sum of the -(log) likelihoods of a set of RooAbsPfs that represent constraint functions. More...;  ; class  RooConstVar;  Represents a constant real-valued object. More...;  ; class  RooConvCoefVar;  Auxiliary class that represents the coefficient of a RooAbsAnaConvPdf implementation as a separate RooAbsReal object to be able to interface these coefficient terms with the generic RooRealIntegral integration mechanism. More...;  ; class  RooConvGenContext;  Efficient implementation of the generator context specific for RooAbsAnaConvPdf objects. More...;  ; class  RooConvIntegrandBinding;  Implementation of RooAbsFunc that represent the integrand of a generic (numeric) convolution A (x) B so that it can be passed to a numeric integrator. More...;  ; class  RooCurve;  One-dimensional graphical representation of a real-valued function. More...;  ; class  RooDataHist;  Container class to hold N-dimensional binned data. More...;  ; class  RooDataHistSliceIter;  Iterates over all bins in a RooDataHist that occur i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Roofitcore.html:7312,log,log,7312,doc/master/group__Roofitcore.html,https://root.cern,https://root.cern/doc/master/group__Roofitcore.html,1,['log'],['log']
Testability,"atex; 2139 textaxis.SetTextFont((Int_t)(GetLabelFont()/10)*10+2);; 2140 if (fAxis && !strcmp(fAxis->GetName(),""xaxis"")) {; 2141 Float_t xoff = 0., yoff = 0.;; 2142 gStyle->GetExponentOffset(xoff, yoff, ""x"");; 2143 xx += xoff;; 2144 yy += yoff;; 2145 }; 2146 if (fAxis && !strcmp(fAxis->GetName(),""yaxis"")) {; 2147 Float_t xoff = 0., yoff = 0.;; 2148 gStyle->GetExponentOffset(xoff, yoff, ""y"");; 2149 xx += xoff;; 2150 yy += yoff;; 2151 }; 2152 typolabel = label;; 2153 typolabel.ReplaceAll(""-"", ""#minus"");; 2154 textaxis.PaintLatex(gPad->GetX1() + xx*(gPad->GetX2() - gPad->GetX1()),; 2155 gPad->GetY1() + yy*(gPad->GetY2() - gPad->GetY1()),; 2156 0,; 2157 textaxis.GetTextSize(),; 2158 typolabel.Data());; 2159 }; 2160 }; 2161 }; 2162 }; 2163 ; 2164// Log axis; 2165 ; 2166 if (optionLog && ndiv) {; 2167 UInt_t xi1=0,xi2=0,wi=0,yi1=0,yi2=0,hi=0,xl=0,xh=0;; 2168 Bool_t firstintlab = kTRUE, overlap = kFALSE;; 2169 if ((wmin == wmax) || (ndiv == 0)) {; 2170 Error(where, ""wmin (%f) == wmax (%f), or ndiv == 0"", wmin, wmax);; 2171 return;; 2172 }; 2173 if (wmin <= 0) {; 2174 Error(where, ""negative logarithmic axis"");; 2175 return;; 2176 }; 2177 if (wmax <= 0) {; 2178 Error(where, ""negative logarithmic axis"");; 2179 return;; 2180 }; 2181 xmnlog = TMath::Log10(wmin);; 2182 if (xmnlog > 0) xmnlog += 1.E-6;; 2183 else xmnlog -= 1.E-6;; 2184 x00 = 0;; 2185 x11 = axis_length;; 2186 h2 = TMath::Log10(wmax);; 2187 h2sav = h2;; 2188 if (h2 > 0) h2 += 1.E-6;; 2189 else h2 -= 1.E-6;; 2190 ih1 = int(xmnlog);; 2191 ih2 = 1+int(h2);; 2192 nbinin = ih2-ih1+1;; 2193 axmul = (x11-x00)/(h2sav-xmnlog);; 2194 ; 2195// Plot decade and intermediate tick marks; 2196 decade = ih1-2;; 2197 labelnumber = ih1;; 2198 if ( xmnlog > 0 && (xmnlog-Double_t(ih1) > 0) ) labelnumber++;; 2199 Int_t changelablogid = 0;; 2200 Int_t changelablognum = 0;; 2201 for (j=1; j<=nbinin; j++) {; 2202 ; 2203// Plot decade; 2204 firstintlab = kTRUE, overlap = kFALSE;; 2205 decade++;; 2206 if (x0 == x1 && j == 1) ylabel += charheig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:73314,Log,Log,73314,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,3,"['Log', 'log']","['Log', 'logarithmic']"
Testability,"ath); Unlink path. TFileCollection * GetFileCollection(); Get instance of the file collection to be used in 'dataset' mode. TFileMerger * GetFileMerger(Bool_t local = kFALSE); Get instance of the file merger to be used in 'merge' mode. Int_t AssertDir(const char* dirpath); Assert directory path 'dirpath', with the ownership of the last already; existing subpath.; Return 0 on success, -1 on error. TProofOutputFile(const TProofOutputFile& ). TProofOutputFile& operator=(const TProofOutputFile& ). void SetFileName(const char* name); { fFileName = name; }. void SetDir(const char* dir, Bool_t raw = kFALSE). void SetMerged(Bool_t merged = kTRUE); { fMerged = merged; }. void SetWorkerOrdinal(const char* ordinal); { fWorkerOrdinal = ordinal; }. TProofOutputFile(); { }. const char * GetDir(Bool_t raw = kFALSE) const; { return (raw) ? fRawDir : fDir; }. const char * GetFileName() const; { return fFileName; }. const char * GetLocalHost() const; { return fLocalHost; }. const char * GetOptionsAnchor() const; { return fOptionsAnchor; }. const char * GetOutputFileName() const; { return fOutputFileName; }. const char * GetWorkerOrdinal() const; { return fWorkerOrdinal; }. ERunType GetRunType() const; { return fRunType; }. UInt_t GetTypeOpt() const; { return fTypeOpt; }. Bool_t IsMerge() const; { return (fRunType == kMerge) ? kTRUE : kFALSE; }. Bool_t IsMerged() const; { return fMerged; }. Bool_t IsRegister() const; { return ((fTypeOpt & kRegister) || (fTypeOpt & kVerify)) ? kTRUE : kFALSE; }. Bool_t IsRetrieve() const; { return (TestBit(TProofOutputFile::kRetrieve)) ? kTRUE : kFALSE; }. void SetRetrieve(Bool_t on = kTRUE). void ResetFileCollection(); { fDataSet = 0; }. » Author: Long Tran-Thanh 14/09/07 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-03-14 16:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofOutputFile.html:10870,Test,TestBit,10870,root/html534/TProofOutputFile.html,https://root.cern,https://root.cern/root/html534/TProofOutputFile.html,1,['Test'],['TestBit']
Testability,"ath); Unlink path. TFileCollection * GetFileCollection(); Get instance of the file collection to be used in 'dataset' mode. TFileMerger * GetFileMerger(Bool_t local = kFALSE); Get instance of the file merger to be used in 'merge' mode. Int_t AssertDir(const char* dirpath); Assert directory path 'dirpath', with the ownership of the last already; existing subpath.; Return 0 on success, -1 on error. TProofOutputFile(const TProofOutputFile& ). TProofOutputFile& operator=(const TProofOutputFile& ). void SetFileName(const char* name); { fFileName = name; }. void SetDir(const char* dir, Bool_t raw = kFALSE). void SetMerged(Bool_t merged = kTRUE); { fMerged = merged; }. void SetWorkerOrdinal(const char* ordinal); { fWorkerOrdinal = ordinal; }. TProofOutputFile(); { }. const char * GetDir(Bool_t raw = kFALSE) const; { return (raw) ? fRawDir : fDir; }. const char * GetFileName() const; { return fFileName; }. const char * GetLocalHost() const; { return fLocalHost; }. const char * GetOptionsAnchor() const; { return fOptionsAnchor; }. const char * GetOutputFileName() const; { return fOutputFileName; }. const char * GetWorkerOrdinal() const; { return fWorkerOrdinal; }. ERunType GetRunType() const; { return fRunType; }. UInt_t GetTypeOpt() const; { return fTypeOpt; }. Bool_t IsMerge() const; { return (fRunType == kMerge) ? kTRUE : kFALSE; }. Bool_t IsMerged() const; { return fMerged; }. Bool_t IsRegister() const; { return ((fTypeOpt & kRegister) || (fTypeOpt & kVerify)) ? kTRUE : kFALSE; }. Bool_t IsRetrieve() const; { return (TestBit(TProofOutputFile::kRetrieve)) ? kTRUE : kFALSE; }. void SetRetrieve(Bool_t on = kTRUE). void ResetFileCollection(); { fDataSet = 0; }. » Author: Long Tran-Thanh 14/09/07 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-02 16:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofOutputFile.html:11640,Test,TestBit,11640,root/html604/TProofOutputFile.html,https://root.cern,https://root.cern/root/html604/TProofOutputFile.html,1,['Test'],['TestBit']
Testability,"ath); Unlink path. TFileCollection * GetFileCollection(); Get instance of the file collection to be used in 'dataset' mode. TFileMerger * GetFileMerger(Bool_t local = kFALSE); Get instance of the file merger to be used in 'merge' mode. Int_t AssertDir(const char* dirpath); Assert directory path 'dirpath', with the ownership of the last already; existing subpath.; Return 0 on success, -1 on error. TProofOutputFile(const TProofOutputFile& ). TProofOutputFile& operator=(const TProofOutputFile& ). void SetFileName(const char* name); { fFileName = name; }. void SetDir(const char* dir, Bool_t raw = kFALSE). void SetMerged(Bool_t merged = kTRUE); { fMerged = merged; }. void SetWorkerOrdinal(const char* ordinal); { fWorkerOrdinal = ordinal; }. TProofOutputFile(); { }. const char * GetDir(Bool_t raw = kFALSE) const; { return (raw) ? fRawDir : fDir; }. const char * GetFileName() const; { return fFileName; }. const char * GetLocalHost() const; { return fLocalHost; }. const char * GetOptionsAnchor() const; { return fOptionsAnchor; }. const char * GetOutputFileName() const; { return fOutputFileName; }. const char * GetWorkerOrdinal() const; { return fWorkerOrdinal; }. ERunType GetRunType() const; { return fRunType; }. UInt_t GetTypeOpt() const; { return fTypeOpt; }. Bool_t IsMerge() const; { return (fRunType == kMerge) ? kTRUE : kFALSE; }. Bool_t IsMerged() const; { return fMerged; }. Bool_t IsRegister() const; { return ((fTypeOpt & kRegister) || (fTypeOpt & kVerify)) ? kTRUE : kFALSE; }. Bool_t IsRetrieve() const; { return (TestBit(TProofOutputFile::kRetrieve)) ? kTRUE : kFALSE; }. void SetRetrieve(Bool_t on = kTRUE). void ResetFileCollection(); { fDataSet = 0; }. » Author: Long Tran-Thanh 14/09/07 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-30 15:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofOutputFile.html:11640,Test,TestBit,11640,root/html602/TProofOutputFile.html,https://root.cern,https://root.cern/root/html602/TProofOutputFile.html,1,['Test'],['TestBit']
Testability,"ath.cxx:2090; TMath::FloorNintInt_t FloorNint(Double_t x)Returns the nearest integer of TMath::Floor(x).Definition TMath.h:686; TMath::ACosHDouble_t ACosH(Double_t)Returns the nonnegative area hyperbolic cosine of x.Definition TMath.cxx:81; TMath::BesselK0Double_t BesselK0(Double_t x)Modified Bessel function I_0(x)Definition TMath.cxx:1460; TMath::BesselY0Double_t BesselY0(Double_t x)Bessel function J1(x) for any real x.Definition TMath.cxx:1705; TMath::BetaCfDouble_t BetaCf(Double_t x, Double_t a, Double_t b)Continued fraction evaluation by modified Lentz's method used in calculation of incomplete Beta funct...Definition TMath.cxx:2020; TMath::ErfInverseDouble_t ErfInverse(Double_t x)Returns the inverse error function.Definition TMath.cxx:208; TMath::LaplaceDistDouble_t LaplaceDist(Double_t x, Double_t alpha=0, Double_t beta=1)Computes the probability density function of Laplace distribution at point x, with location parameter...Definition TMath.cxx:2364; TMath::LogDouble_t Log(Double_t x)Returns the natural logarithm of x.Definition TMath.h:756; TMath::ErfcDouble_t Erfc(Double_t x)Computes the complementary error function erfc(x).Definition TMath.cxx:199; TMath::VavilovIDouble_t VavilovI(Double_t x, Double_t kappa, Double_t beta2)Returns the value of the Vavilov cumulative distribution function (lower tail integral of the probabi...Definition TMath.cxx:2815; TMath::BetaDouble_t Beta(Double_t p, Double_t q)Calculates Beta-function Gamma(p)*Gamma(q)/Gamma(p+q).Definition TMath.cxx:2011; TMath::PoissonDouble_t Poisson(Double_t x, Double_t par)Computes the Poisson distribution function for (x,par).Definition TMath.cxx:587; TMath::SqrtDouble_t Sqrt(Double_t x)Returns the square root of x.Definition TMath.h:662; TMath::PowerLongDouble_t Power(LongDouble_t x, LongDouble_t y)Returns x raised to the power y.Definition TMath.h:721; TMath::BesselJ0Double_t BesselJ0(Double_t x)Modified Bessel function K_1(x)Definition TMath.cxx:1634; TMath::GammaDouble_t Gamma(Double_t z)Compu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:125378,Log,Log,125378,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,2,"['Log', 'log']","['Log', 'logarithm']"
Testability,"ath::BrentRootFinder::Solvebool Solve(int maxIter=100, double absTol=1E-8, double relTol=1E-10) overrideReturns the X value corresponding to the function value fy for (xmin<x<xmax).Definition BrentRootFinder.cxx:66; ROOT::Math::BrentRootFinder::fXMindouble fXMinLower bound of the search interval.Definition BrentRootFinder.h:129; ROOT::Math::BrentRootFinder::fXMaxdouble fXMaxUpper bound of the search interval.Definition BrentRootFinder.h:130; ROOT::Math::BrentRootFinder::BrentRootFinderBrentRootFinder()Default Constructor.Definition BrentRootFinder.cxx:28; ROOT::Math::BrentRootFinder::fNpxint fNpxNumber of points to bracket root with initial grid (def is 100)Definition BrentRootFinder.h:127; ROOT::Math::BrentRootFinder::fStatusint fStatusStatus of code of the last estimate.Definition BrentRootFinder.h:128; ROOT::Math::BrentRootFinder::fNIterint fNIterNumber of iterations needed for the last estimation.Definition BrentRootFinder.h:126; ROOT::Math::BrentRootFinder::fLogScanbool fLogScanflag to control usage of a log scanDefinition BrentRootFinder.h:125; ROOT::Math::BrentRootFinder::fFunctionconst IGenFunction * fFunctionPointer to the function.Definition BrentRootFinder.h:124; ROOT::Math::BrentRootFinder::fRootdouble fRootCurrent estimation of the function root.Definition BrentRootFinder.h:131; ROOT::Math::BrentRootFinder::SetDefaultNpxstatic void SetDefaultNpx(int npx)set number of default Npx used at construction time (when SetNpx is not called) Default value is 100Definition BrentRootFinder.cxx:37; ROOT::Math::BrentRootFinder::Nameconst char * Name() const overrideReturn name of root finder algorithm (""BrentRootFinder"").Definition BrentRootFinder.cxx:62; ROOT::Math::BrentRootFinder::SetDefaultNSearchstatic void SetDefaultNSearch(int n)set number of times the bracketing search in combination with is done to find a good interval Default...Definition BrentRootFinder.cxx:39; ROOT::Math::IBaseFunctionOneDimInterface (abstract class) for generic functions objects of one-di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BrentRootFinder_8cxx_source.html:5035,log,log,5035,doc/master/BrentRootFinder_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BrentRootFinder_8cxx_source.html,1,['log'],['log']
Testability,"ath::GSLRandomEngine::Exponential(double mu) const; doubleROOT::Math::GSLRandomEngine::FDist(double nu1, double nu2) const; doubleROOT::Math::GSLRandomEngine::Gamma(double a, double b) const; doubleROOT::Math::GSLRandomEngine::Gaussian(double sigma) const; voidROOT::Math::GSLRandomEngine::Gaussian2D(double sigmaX, double sigmaY, double rho, double& x, double& y) const; doubleROOT::Math::GSLRandomEngine::GaussianRatio(double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianTail(double a, double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxD1GSLRngRanLuxD1(); ROOT::Math::GSLRngRanLuxD1GSLRngRanLuxD1(const ROOT::Math::GSLRngRanLuxD1&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxD1&operator=(const ROOT::Math::GSLRngRanLuxD1&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxD1.html:2516,Log,LogNormal,2516,root/html534/ROOT__Math__GSLRngRanLuxD1.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxD1.html,1,['Log'],['LogNormal']
Testability,"ath::GSLRandomEngine::Exponential(double mu) const; doubleROOT::Math::GSLRandomEngine::FDist(double nu1, double nu2) const; doubleROOT::Math::GSLRandomEngine::Gamma(double a, double b) const; doubleROOT::Math::GSLRandomEngine::Gaussian(double sigma) const; voidROOT::Math::GSLRandomEngine::Gaussian2D(double sigmaX, double sigmaY, double rho, double& x, double& y) const; doubleROOT::Math::GSLRandomEngine::GaussianRatio(double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianTail(double a, double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxD2GSLRngRanLuxD2(); ROOT::Math::GSLRngRanLuxD2GSLRngRanLuxD2(const ROOT::Math::GSLRngRanLuxD2&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxD2&operator=(const ROOT::Math::GSLRngRanLuxD2&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxD2.html:2596,Log,LogNormal,2596,root/html534/ROOT__Math__GSLRngRanLuxD2.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxD2.html,1,['Log'],['LogNormal']
Testability,"ath::GSLRandomEngine::Exponential(double mu) const; doubleROOT::Math::GSLRandomEngine::FDist(double nu1, double nu2) const; doubleROOT::Math::GSLRandomEngine::Gamma(double a, double b) const; doubleROOT::Math::GSLRandomEngine::Gaussian(double sigma) const; voidROOT::Math::GSLRandomEngine::Gaussian2D(double sigmaX, double sigmaY, double rho, double& x, double& y) const; doubleROOT::Math::GSLRandomEngine::GaussianRatio(double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianTail(double a, double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxS1GSLRngRanLuxS1(); ROOT::Math::GSLRngRanLuxS1GSLRngRanLuxS1(const ROOT::Math::GSLRngRanLuxS1&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxS1&operator=(const ROOT::Math::GSLRngRanLuxS1&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxS1.html:2595,Log,LogNormal,2595,root/html534/ROOT__Math__GSLRngRanLuxS1.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxS1.html,1,['Log'],['LogNormal']
Testability,"ath::GSLRandomEngine::Exponential(double mu) const; doubleROOT::Math::GSLRandomEngine::FDist(double nu1, double nu2) const; doubleROOT::Math::GSLRandomEngine::Gamma(double a, double b) const; doubleROOT::Math::GSLRandomEngine::Gaussian(double sigma) const; voidROOT::Math::GSLRandomEngine::Gaussian2D(double sigmaX, double sigmaY, double rho, double& x, double& y) const; doubleROOT::Math::GSLRandomEngine::GaussianRatio(double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianTail(double a, double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngRanLuxS2GSLRngRanLuxS2(); ROOT::Math::GSLRngRanLuxS2GSLRngRanLuxS2(const ROOT::Math::GSLRngRanLuxS2&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLuxS2&operator=(const ROOT::Math::GSLRngRanLuxS2&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxS2.html:2595,Log,LogNormal,2595,root/html534/ROOT__Math__GSLRngRanLuxS2.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngRanLuxS2.html,1,['Log'],['LogNormal']
Testability,"ath::IGradientFunctionMultiDim::IGradientFunctionMultiDim(const ROOT::Math::IGradientFunctionMultiDim&); ROOT::Math::IGradientMultiDimROOT::Math::IGradientMultiDim::IGradientMultiDim(); ROOT::Math::IGradientMultiDimROOT::Math::IGradientMultiDim::IGradientMultiDim(const ROOT::Math::IGradientMultiDim&); ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>& f); ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(const shared_ptr<ROOT::Fit::UnBinData>& data, const shared_ptr<ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction>& func, int weight = 0, bool extended = false); ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(const ROOT::Fit::UnBinData& data, const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& func, int weight = 0, bool extended = false); virtual const ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::IModelFunction&ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::ModelFunction() const; shared_ptr<ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::IModelFunction>ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::ModelFunctionPtr() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NCalls() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NDim() const; virtual unsigned intNFitPoints() const; virtual unsigned intROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>::NPoints() const; doubleROOT::Math::IBaseFunctionMultiDim::operator()(const double* x) const; ROOT::Fit::Log",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html:3652,Log,LogLikelihoodFCN,3652,root/html604/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,1,['Log'],['LogLikelihoodFCN']
Testability,"ath::Log));; 306 }; 307 ; 308/* ; 309 Taken from (1); 310*/ ; 311 Double_t GoFTest::GetSigmaN(const std::vector<size_t> & ns, size_t N) {; 312 // compute moments of AD distribution (from Scholz-Stephen paper, paragraph 3); 313 ; 314 Double_t sigmaN = 0.0, h = 0.0, H = 0.0, g = 0.0, a, b, c, d, k = ns.size();; 315 ; 316 for (size_t i = 0; i < ns.size(); ++i) {; 317 H += 1.0 / double( ns[i] );; 318 }; 319 ; 320 // use approximate formulas for large N; 321 // cache Sum( 1 / i); 322 if (N < 2000) { ; 323 std::vector<double> invI(N); ; 324 for (size_t i = 1; i <= N - 1; ++i) {; 325 invI[i] = 1.0 / i; ; 326 h += invI[i]; ; 327 }; 328 for (size_t i = 1; i <= N - 2; ++i) {; 329 double tmp = invI[N-i];; 330 for (size_t j = i + 1; j <= N - 1; ++j) {; 331 g += tmp * invI[j];; 332 }; 333 }; 334 }; 335 else {; 336 // for N larger than 2000 error difference in g is ~ 5 10^-3 while in h is at the level of 10^-5; 337 const double emc = 0.5772156649015328606065120900824024; // Euler-Mascheroni constant; 338 h = std::log(double(N-1) ) + emc;; 339 g = (M_PI)*(M_PI)/6.0;; 340 }; 341 double k2 = std::pow(k,2);; 342 a = (4 * g - 6) * k + (10 - 6 * g) * H - 4 * g + 6;; 343 b = (2 * g - 4) * k2 + 8 * h * k + (2 * g - 14 * h - 4) * H - 8 * h + 4 * g - 6;; 344 c = (6 * h + 2 * g - 2) * k2 + (4 * h - 4 *g + 6) * k + (2 * h - 6) * H + 4 * h;; 345 d = (2 * h + 6) * k2 - 4 * h * k;; 346 sigmaN += a * std::pow(double(N),3) + b * std::pow(double(N),2) + c * N + d;; 347 sigmaN /= ( double(N - 1) * double(N - 2) * double(N - 3) );; 348 sigmaN = TMath::Sqrt(sigmaN);; 349 return sigmaN;; 350 }; 351 ; 352 ; 353 Double_t GoFTest::PValueADKSamples(size_t nsamples, Double_t tx) {; 354 ; 355 /*; 356 Computation of p-values according to ; 357 ""K-Sample Anderson-Darling Tests"" by F.W. Scholz ; 358 and M.A. Stephens (1987), Journal of the American Statistical Association, ; 359 Vol 82, No. 399, pp 918-924.; 360 Code from kSamples package from R (author F. Scholtz); 361 ; 362 This function uses the upper T_m qu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GoFTest_8cxx_source.html:11379,log,log,11379,doc/master/GoFTest_8cxx_source.html,https://root.cern,https://root.cern/doc/master/GoFTest_8cxx_source.html,1,['log'],['log']
Testability,"athFuncs.h:93; RooFit::Detail::MathFuncs::chebychevdouble chebychev(double *coeffs, unsigned int nCoeffs, double x_in, double xMin, double xMax)Definition MathFuncs.h:139; RooFit::Detail::MathFuncs::poissondouble poisson(double x, double par)Definition MathFuncs.h:198; RooFit::Detail::MathFuncs::binomialdouble binomial(int n, int k)Calculates the binomial coefficient n over k.Definition MathFuncs.h:31; RooFit::Detail::MathFuncs::getUniformBinningunsigned int getUniformBinning(double low, double high, double val, unsigned int numBins)Definition MathFuncs.h:172; RooFit::Detail::MathFuncs::flexibleInterpSingledouble flexibleInterpSingle(unsigned int code, double low, double high, double boundary, double nominal, double paramVal, double res)Definition MathFuncs.h:213; RooFit::Detail::MathFuncs::interpolate1ddouble interpolate1d(double low, double high, double val, unsigned int numBins, double const *vals)Definition MathFuncs.h:178; RooFit::Detail::MathFuncs::logNormalStandarddouble logNormalStandard(double x, double sigma, double mu)Definition MathFuncs.h:343; RooFit::Detail::MathFuncs::bifurGaussdouble bifurGauss(double x, double mean, double sigmaL, double sigmaR)Definition MathFuncs.h:108; RooFit::Detail::MathFuncs::ratiodouble ratio(double numerator, double denominator)Definition MathFuncs.h:103; RooFit::Detail::MathFuncs::polynomialIntegraldouble polynomialIntegral(double const *coeffs, int nCoeffs, int lowestOrder, double xMin, double xMax)In pdfMode, a coefficient for the constant term of 1.0 is implied if lowestOrder > 0.Definition MathFuncs.h:481; RooFit::Detail::MathFuncs::bernsteinIntegraldouble bernsteinIntegral(double xlo, double xhi, double xmin, double xmax, double *coefs, int nCoefs)Definition MathFuncs.h:705; RooFit::Detail::MathFuncs::approxErfdouble approxErf(double arg)Definition MathFuncs.h:401; RooFit::Detail::MathFuncs::effProddouble effProd(double eff, double pdf)Definition MathFuncs.h:348; RooFit::Detail::MathFuncs::poissonIntegraldouble poissonI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MathFuncs_8h_source.html:29615,log,logNormalStandarddouble,29615,doc/master/MathFuncs_8h_source.html,https://root.cern,https://root.cern/doc/master/MathFuncs_8h_source.html,2,['log'],"['logNormalStandard', 'logNormalStandarddouble']"
Testability,"athcore:$Id$; 2// Authors: W. Brown, M. Fischler, L. Moneta 2005; 3 ; 4 /**********************************************************************; 5 * *; 6 * Copyright (c) 2005 , FNAL MathLib Team *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11 ; 12// Header source file for function etaMax; 13//; 14// Created by: Mark Fischler at Thu Jun 2 2005; 15 ; 16 ; 17#ifndef ROOT_Math_GenVector_etaMax; 18#define ROOT_Math_GenVector_etaMax 1; 19 ; 20 ; 21#include <limits>; 22#include <cmath>; 23 ; 24 ; 25namespace ROOT {; 26 ; 27 namespace Math {; 28 ; 29 /**; 30 The following function could be called to provide the maximum possible; 31 value of pseudorapidity for a non-zero rho. This is log ( max/min ); 32 where max and min are the extrema of positive values for type; 33 long double.; 34 */; 35 inline; 36 long double etaMax_impl() {; 37 using std::log;; 38 return log ( std::numeric_limits<long double>::max()/256.0l ) -; 39 log ( std::numeric_limits<long double>::denorm_min()*256.0l ); 40 + 16.0 * log(2.0);; 41 // Actual usage of etaMax() simply returns the number 22756, which is; 42 // the answer this would supply, rounded to a higher integer.; 43 }; 44 ; 45 /**; 46 Function providing the maximum possible value of pseudorapidity for; 47 a non-zero rho, in the Scalar type with the largest dynamic range.; 48 */; 49 template <class T>; 50 inline; 51 T etaMax() {; 52 return static_cast<T>(22756.0);; 53 }; 54 ; 55 } // namespace Math; 56 ; 57} // namespace ROOT; 58 ; 59 ; 60#endif /* ROOT_Math_GenVector_etaMax */; MathNamespace for new Math classes and functions.; ROOT::Math::etaMax_impllong double etaMax_impl()The following function could be called to provide the maximum possible value of pseudorapidity for a ...Definition etaMax.h:36; ROOT::Math::etaMaxT etaMax()Function providing the maximum possible value of pseudorapidity for a non-zero rho,...Definition etaMax.h:51; ROOTtbb::task_arena is an alias of tbb::interface7::task_are",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/etaMax_8h_source.html:1184,log,log,1184,doc/master/etaMax_8h_source.html,https://root.cern,https://root.cern/doc/master/etaMax_8h_source.html,1,['log'],['log']
Testability,"atic . Check if the package is enabled; priority is given to packmgr, if defined. ; Returns kTRUE if enabled ; Definition at line 961 of file TPackMgr.cxx. ◆ IsInDir(). Bool_t TPackMgr::IsInDir ; (; const char * ; path). Method to check if 'path' is in the managed directory Return kTRUE or kFALSE. ; Definition at line 478 of file TPackMgr.cxx. ◆ IsPackageEnabled(). Bool_t TPackMgr::IsPackageEnabled ; (; const char * ; pack). inline . Definition at line 82 of file TPackMgr.h. ◆ Load() [1/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . const char * ; opts . ). Method to load a package taking an option const char * Return -1 on error, 0 otherwise. ; Definition at line 206 of file TPackMgr.cxx. ◆ Load() [2/2]. Int_t TPackMgr::Load ; (; const char * ; pack, . TList * ; optls = 0 . ). Method to load a package taking an option list Return -1 on error, 0 otherwise. ; Definition at line 220 of file TPackMgr.cxx. ◆ Log(). void TPackMgr::Log ; (; const char * ; msg). private . Wrapper to notofuer / logger. ; Definition at line 73 of file TPackMgr.cxx. ◆ operator=(). TPackMgr & TPackMgr::operator= ; (; const TPackMgr & ; ). private . ◆ ReadMD5(). TMD5 * TPackMgr::ReadMD5 ; (; const char * ; pack). Read MD5 checksum of the PAR file from the PROOF-INF/md5.txt file. ; Returns a pointer to a TMD5 object, transferring ownership to the caller ; Definition at line 708 of file TPackMgr.cxx. ◆ RegisterGlobalPath(). Int_t TPackMgr::RegisterGlobalPath ; (; const char * ; paths). static . Parse one or more paths as possible sources of packages Returns number of paths added; or -1 in case of problems. ; Definition at line 872 of file TPackMgr.cxx. ◆ Remove(). Int_t TPackMgr::Remove ; (; const char * ; pack = 0, . Bool_t ; dolock = kTRUE . ). Remove package 'pack' If 'pack' is null or empty all packages are cleared. ; Definition at line 593 of file TPackMgr.cxx. ◆ SetLogger(). void TPackMgr::SetLogger ; (; TPackMgrLog_t ; logger). inline . Definition at line 67 of file TPackMgr.h. ◆ Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPackMgr.html:21702,log,logger,21702,doc/master/classTPackMgr.html,https://root.cern,https://root.cern/doc/master/classTPackMgr.html,1,['log'],['logger']
Testability,"atic . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGObject::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 47 of file TGObject.h. ◆ DeclFileName(). static const char * TGObject::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 47 of file TGObject.h. ◆ GetClient(). TGClient * TGObject::GetClient ; (; ); const. inline . Definition at line 42 of file TGObject.h. ◆ GetId(). Handle_t TGObject::GetId ; (; ); const. inline . Definition at line 41 of file TGObject.h. ◆ Hash(). ULong_t TGObject::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TGObject::HashULong_t Hash() const overrideReturn hash value for this object.Definition TGObject.h:43; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGObject.html:12171,Test,TestBit,12171,doc/master/classTGObject.html,https://root.cern,https://root.cern/doc/master/classTGObject.html,1,['Test'],['TestBit']
Testability,"atic ROOT::Math::GoFTest::EUserDistributionkCDF; static ROOT::Math::GoFTest::EDistributionkExponential; static ROOT::Math::GoFTest::EDistributionkGaussian; static ROOT::Math::GoFTest::ETestTypekKS; static ROOT::Math::GoFTest::ETestTypekKS2s; static ROOT::Math::GoFTest::EDistributionkLogNormal; static ROOT::Math::GoFTest::EUserDistributionkPDF; static ROOT::Math::GoFTest::EDistributionkUndefined; static ROOT::Math::GoFTest::EDistributionkUserDefined. private:. auto_ptr<ROOT::Math::IGenFunction>fCDF; vector<Double_t>fCombinedSamples; ROOT::Math::GoFTest::EDistributionfDist; Double_tfMean; vector<vector<Double_t> >fSamples; Double_tfSigma; Bool_tfTestSampleFromH0. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GoFTest(UInt_t sample1Size, const Double_t* sample1, UInt_t sample2Size, const Double_t* sample2); Constructor for using only with 2-samples tests. GoFTest(UInt_t sampleSize, const Double_t* sample, ROOT::Math::GoFTest::EDistribution dist = kUndefined); Constructor for using only with 1-sample tests with a specified distribution. GoFTest(UInt_t sampleSize, const Double_t* sample, const ROOT::Math::IGenFunction& dist, ROOT::Math::GoFTest::EUserDistribution userDist = kPDF, Double_t xmin = 1, Double_t xmax = 0); Templated constructor for using only with 1-sample tests with a user specified distribution. Instantiate(const Double_t* sample, UInt_t sampleSize). GoFTest(UInt_t sampleSize, const Double_t* sample, const ROOT::Math::IGenFunction& dist, ROOT::Math::GoFTest::EUserDistribution userDist = kPDF, Double_t xmin = 1, Double_t xmax = 0); Specialization using IGenFunction interface. SetUserDistribution(const ROOT::Math::IGenFunction& dist, ROOT::Math::GoFTest::EUserDistribution userDist = kPDF, Double_t xmin = 1, Double_t xmax = 0). SetDistributionFunction(const ROOT::Math::IGenFunction& cdf, Bool_t isPDF, Double_t xmin, Double_t xmax). void SetUserPDF(const ROOT::Math::IGenFunction& pdf, Double_t xmin = 1, Double_t xmax ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GoFTest.html:4269,test,tests,4269,root/html602/ROOT__Math__GoFTest.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GoFTest.html,2,['test'],['tests']
Testability,"atic TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void disableClass ();  Globally disable bin-width corrections by this class. ;  ; static void enableClass ();  Globally enable bin-width corrections by this class. ;  ; static bool isClassEnabled ();  Returns true if bin-width corrections by this class are globally enabled, false otherwise. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinWidthFunction.html:46111,log,logging,46111,doc/master/classRooBinWidthFunction.html,https://root.cern,https://root.cern/doc/master/classRooBinWidthFunction.html,1,['log'],['logging']
Testability,"atic TObject::(anonymous)TObject::kZombie. private:. TTree*fAnalysisTree; TTree*fIOTree; TMultiLayerPerceptron*fNetwork. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TMLPAnalyzer(); Destructor. Int_t GetLayers(); Returns the number of layers. Int_t GetNeurons(Int_t layer); Returns the number of neurons in given layer. TString GetNeuronFormula(Int_t idx); Returns the formula used as input for neuron (idx) in; the first layer. const char* GetInputNeuronTitle(Int_t in); Returns the name of any neuron from the input layer. const char* GetOutputNeuronTitle(Int_t out); Returns the name of any neuron from the output layer. void CheckNetwork(); Gives some information about the network in the terminal. void GatherInformations(); Collect information about what is usefull in the network.; This method has to be called first when analyzing a network.; Fills the two analysis trees. void DrawDInput(Int_t i); Draws the distribution (on the test sample) of the; impact on the network output of a small variation of; the ith input. void DrawDInputs(); Draws the distribution (on the test sample) of the; impact on the network output of a small variation of; each input.; DrawDInputs() draws something that approximates the distribution of the; derivative of the NN w.r.t. each input. That quantity is recognized as; one of the measures to determine key quantities in the network. What is done is to vary one input around its nominal value and to see; how the NN changes. This is done for each entry in the sample and produces; a distribution. What you can learn from that is:; - is variable a really useful, or is my network insensitive to it ?; - is there any risk of big systematic ? Is the network extremely sensitive; to small variations of any of my inputs ?. As you might understand, this is to be considered with care and can serve; as input for an ""educated guess"" when optimizing the network. void DrawNetwork(Int_t neuron, const char* signal, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMLPAnalyzer.html:7388,test,test,7388,root/html602/TMLPAnalyzer.html,https://root.cern,https://root.cern/root/html602/TMLPAnalyzer.html,2,['test'],['test']
Testability,"atic Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressMemoryPlot(TProofProgressDialog* d, Int_t w = 700, Int_t h = 300); Main constructor. ~TProofProgressMemoryPlot(); Destructor. TGListBox* BuildLogList(TGFrame* parent); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void Clear(Option_t* = 0); Clear the canvases. void DoPlot(); Draw the plot from the logs. TGraph * DoAveragePlot(Int_t& max_el, Int_t& min_el); Create the average plots. Int_t ParseLine(TString l, Long64_t& v, Long64_t& r, Long64_t& e); Extract from line 'l' the virtual memory 'v', the resident memory 'r' and the; number of events 'e'.; The line is assumed to be in the form; ""... Memory 130868 virtual 31540 ... event 5550""; The fields are only filled if >= 0 .; Return 0 on success, -1 if any of the values coudl not be filled (the output; fields are not touched in such a case). TGraph * DoWorkerPlot(TProofLogElem* ple); Make a memory consumption graph for a worker. TGraph * DoMasterPlot(TProofLogElem* ple); a master or submaster log; display without meaningful labels for now. void Select(Int_t id); actions of select all/clear all button. TGraph* DoAveragePlotOld(Int_t& max_el, Int_t& min_el). » Author: Anna Kreshuk 18/07/2008 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id$ » Last generated: 2015-03-1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofProgressMemoryPlot.html:23072,log,logs,23072,root/html534/TProofProgressMemoryPlot.html,https://root.cern,https://root.cern/root/html534/TProofProgressMemoryPlot.html,1,['log'],['logs']
Testability,"atic Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressMemoryPlot(TProofProgressDialog* d, Int_t w = 700, Int_t h = 300); Main constructor. ~TProofProgressMemoryPlot(); Destructor. TGListBox* BuildLogList(TGFrame* parent); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void Clear(Option_t* = 0); Clear the canvases. void DoPlot(); Draw the plot from the logs. TGraph * DoAveragePlot(Int_t& max_el, Int_t& min_el); Create the average plots. Int_t ParseLine(TString l, Long64_t& v, Long64_t& r, Long64_t& e); Extract from line 'l' the virtual memory 'v', the resident memory 'r' and the; number of events 'e'.; The line is assumed to be in the form; ""... Memory 130868 virtual 31540 ... event 5550""; The fields are only filled if >= 0 .; Return 0 on success, -1 if any of the values coudl not be filled (the output; fields are not touched in such a case). TGraph * DoWorkerPlot(TProofLogElem* ple); Make a memory consumption graph for a worker. TGraph * DoMasterPlot(TProofLogElem* ple); a master or submaster log; display without meaningful labels for now. void Select(Int_t id); actions of select all/clear all button. TGraph* DoAveragePlotOld(Int_t& max_el, Int_t& min_el). » Author: Anna Kreshuk 18/07/2008 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TProofProgressMemoryPlot.h ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofProgressMemoryPlot.html:22900,log,logs,22900,root/html528/TProofProgressMemoryPlot.html,https://root.cern,https://root.cern/root/html528/TProofProgressMemoryPlot.html,3,['log'],['logs']
Testability,"atic const TGGC*TGFrame::fgBckgndGC; static Pixmap_tTGScrollBar::fgBckgndPixmap; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static Int_tTGScrollBar::fgScrollBarWidth; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGHScrollBar(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 2, UInt_t options = kHorizontalFrame, Pixel_t back = GetDefaultFrameBackground()); Create a horizontal scrollbar widget. void Layout(); Layout and move horizontal scrollbar components. Bool_t HandleButton(Event_t* event); Handle a mouse button event in a horizontal scrolbar. Bool_t HandleMotion(Event_t* event); Handle mouse motion event in a horizontal scrollbar. void SetRange(Int_t range, Int_t page_size); Set range of horizontal scrollbar. void SetPosition(Int_t pos); Set logical slider position of horizontal scrollbar. void SavePrimitive(ostream& out, Option_t* option = """"); Save an horizontal scrollbar as a C++ statement(s) on output stream out. virtual ~TGHScrollBar(); { }. TGDimension GetDefaultSize() const; { return TGDimension(fWidth, GetScrollBarWidth()); }. » Author: Fons Rademakers 10/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGHScrollBar.html:20840,log,logical,20840,root/html534/TGHScrollBar.html,https://root.cern,https://root.cern/root/html534/TGHScrollBar.html,1,['log'],['logical']
Testability,"atic const char * RooStats::LikelihoodIntervalPlot::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 93 of file LikelihoodIntervalPlot.h. ◆ Draw(). void LikelihoodIntervalPlot::Draw ; (; const Option_t * ; options = nullptr). override . draw the likelihood interval or contour for the 1D case a RooPlot is drawn by default of the profiled Log-Likelihood ratio if option ""TF1"" is used the objects are drawn using a TF1 scanning the LL function in a grid of the set points (by default the TF1 can be customized by setting maximum and the number of points to scan ; draw the log of the profiled likelihood function in 1D with the interval or as a 2D plot with the contours.; Higher dimensional intervals cannot be drawn. One needs to call SetPlotParameters to project interval in 1 or 2dim. Options for drawing 1D intervals; For 1D problem the log of the profiled likelihood function is drawn by default in a RooPlot as a RooCurve The plotting range (default is the full parameter range) and the precision of the RooCurve can be specified by using SetRange(x1,x2) and SetPrecision(eps). SetNPoints(npoints) can also be used (default is npoints=100) Optionally the function can be drawn as a TF1 (option=""tf1"") obtained by sampling the given npoints in the given range. Options for drawing 2D intervals; For 2D case, a contour and optionally the profiled likelihood function is drawn by sampling npoints in the given range. A 2d histogram of nbinsX=nbinsY = sqrt(npoints) is used for sampling the profiled likelihood. The contour can be obtained by using Minuit or by the sampled histogram, If using Minuit, the number of points specifies the number of contour points. If using an histogram the number of points is approximately the total number of bins of the histogram. Possible options:; minuit/nominuit: use minuit for computing the contour; hist/nohist : sample in an histogram the profiled likelihood. Note that one can have both a d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1LikelihoodIntervalPlot.html:17866,log,log,17866,doc/master/classRooStats_1_1LikelihoodIntervalPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1LikelihoodIntervalPlot.html,1,['log'],['log']
Testability,"atic const char * DeclFileName ();  . Protected Member Functions; void SetDepthLocal (Float_t d) override;  Set depth (z-coordinate) of the projected points. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Protected Member Functions inherited from TEveProjected; void SetDepthCommon (Float_t d, TEveElement *el, Float_t *bbox);  Utility function to update the z-values of the bounding-box. ;  . Private Member Functions;  TEveStraightLineSetProjected (const TEveStraightLineSetProjected &);  ; TEveStraightLineSetProjected & operator= (const TEveStraightLineSetProjected &);  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisib",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveStraightLineSetProjected.html:39384,Assert,Assert,39384,doc/master/classTEveStraightLineSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEveStraightLineSetProjected.html,1,['Assert'],['Assert']
Testability,"atic constexpr Version_t TGLScenePad::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 98 of file TGLScenePad.h. ◆ CloseComposite(). void TGLScenePad::CloseComposite ; (; ). overridevirtual . Close composite container TVirtualViewer3D interface overload - see base/src/TVirtualViewer3D.cxx for description of viewer architecture. ; Implements TVirtualViewer3D.; Definition at line 507 of file TGLScenePad.cxx. ◆ ComposePolymarker(). void TGLScenePad::ComposePolymarker ; (; const TList * ; padPrimitives). protected . Definition at line 709 of file TGLScenePad.cxx. ◆ CreateNewLogical(). TGLLogicalShape * TGLScenePad::CreateNewLogical ; (; const TBuffer3D & ; buffer); const. protected . Create and return a new TGLLogicalShape from the supplied buffer. ; Definition at line 616 of file TGLScenePad.cxx. ◆ CreateNewPhysical(). TGLPhysicalShape * TGLScenePad::CreateNewPhysical ; (; UInt_t ; physicalID, . const TBuffer3D & ; buffer, . const TGLLogicalShape & ; logical . ); const. protected . Create and return a new TGLPhysicalShape with id 'ID', using 'buffer' placement information (translation etc), and bound to suppled 'logical'. ; Definition at line 693 of file TGLScenePad.cxx. ◆ DeclFileName(). static const char * TGLScenePad::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 98 of file TGLScenePad.h. ◆ DistancetoPrimitive(). Int_t TGLScenePad::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). inlineoverridevirtual . Computes distance from point (px,py) to the object. ; This member function must be implemented for each graphics primitive. This default function returns a big number (999999). ; Reimplemented from TObject.; Definition at line 83 of file TGLScenePad.h. ◆ EndScene(). void TGLScenePad::EndScene ; (; ). overridevirtual . End building of the scene. ; TVirtualViewer3D interface overload - see base/src/TVirtualViewer3D.cxx for description of viewer archi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLScenePad.html:29376,log,logical,29376,doc/master/classTGLScenePad.html,https://root.cern,https://root.cern/doc/master/classTGLScenePad.html,1,['log'],['logical']
Testability,"atic constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Bool_t fMakeFoldDataSet;  ; UInt_t fNumFolds;  ; std::vector< std::vector< TMVA::Event * > > fTestEvents;  ; std::vector< std::vector< TMVA::Event * > > fTrainEvents;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::Configu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CvSplit.html:12627,log,logger,12627,doc/master/classTMVA_1_1CvSplit.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CvSplit.html,1,['log'],['logger']
Testability,"atic voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidSetParent(TObject* parent); virtual voidSetPidOffset(UShort_t offset); voidSetReadMode(); virtual voidSetReadParam(Int_t mapsize); voidSetReAllocFunc(ReAllocCharFun_t reallocfunc = 0); virtual voidSetStreamerElementNumber(Int_t); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetWriteMode(); virtual voidSetWriteParam(Int_t mapsize); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidSkipObjectAny(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidStreamObject(TObject* obj); virtual voidStreamObject(void* obj, const type_info& typeinfo, const TClass* onFileClass = 0); virtual voidStreamObject(void* obj, const char* className, const TClass* onFileClass = 0); virtual voidStreamObject(void* obj, const TClass* cl, const TClass* onFileClass = 0); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual voidWriteArray(const Bool_t* b, Int_t n); virtual voidWriteArray(const Char_t* c, Int_t n); virtual voidWriteArray(const UChar_t* c, Int_t n); virtual voidWriteArray(const Short_t* h, Int_t n); virtual voidWriteArray(const UShort_t* h, Int_t n); virtual voidWriteArray(const Int_t* i, Int_t n); virtual voidWriteArray(const UInt_t* i, Int_t n); virtual voidWriteArray(const Long_t* l, Int_t n); virtual voidWriteArray(const ULong_t* l, Int_t n); virtual voidWriteArray(const Long64_t* l, Int_t n); virtual voidWriteArray(const ULong64_t* l, Int_t n); virtual voidWriteArray(const Float_t* f, Int_t n); virtual voidWriteArray(const Double_t* d, Int_t n); virtual voidWriteArrayDouble32(const Double_t* d, Int_t n, TStreamerElement* ele = 0); virtual voidWriteArrayFloat16(const Float_t* f, Int_t n, TStreamerElement*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBuffer.html:10680,Test,TestBit,10680,root/html526/TBuffer.html,https://root.cern,https://root.cern/root/html526/TBuffer.html,1,['Test'],['TestBit']
Testability,"atic voidTObject::SetDtorOnly(void* obj); virtual voidSetEMail(const char* value = 0, const char* description = 0); virtual voidSetExecutable(const char* value = 0, const char* description = 0); virtual voidSetInputDataList(const char* list = ""collection.xml"", const char* description = 0); virtual voidSetInputDataListFormat(const char* format = ""xml-single"", const char* description = 0); virtual voidSetJobTag(const char* jobtag = 0, const char* description = 0); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOutputDirectory(const char* value = 0, const char* description = 0); virtual voidSetPrice(UInt_t price = 1, const char* description = 0); virtual voidSetSplitArguments(const char* splitarguments = 0, const char* description = 0); virtual voidSetSplitMode(const char* value, UInt_t maxnumberofinputfiles = 0, UInt_t maxinputfilesize = 0, const char* d1 = 0, const char* d2 = 0, const char* d3 = 0); virtual voidSetTTL(UInt_t ttl = 72000, const char* description = 0); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetValidationCommand(const char* value, const char* description = 0); voidSetValue(const char* key, const char* value); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGridJDL.html:6493,Test,TestBit,6493,root/html528/TGridJDL.html,https://root.cern,https://root.cern/root/html528/TGridJDL.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); voidSettingsChanged(); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TEditQueryFrame(const TEditQueryFrame&); TEditQueryFrame(TGWindow* p, Int_t w, Int_t h); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); voidUpdateFields(TQueryDescription* desc); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEditQueryFrame.html:14464,Test,TestBit,14464,root/html602/TEditQueryFrame.html,https://root.cern,https://root.cern/root/html602/TEditQueryFrame.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::SetDtorOnly(void* obj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); voidSetLabelWidth(Int_t w); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); voidSetNEHeight(Int_t h); voidSetNELength(Int_t l); static voidTObject::SetObjectStat(Bool_t stat); voidSetShowSlider(Bool_t s = kTRUE); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); Bool_tTGWidget::WantFocus() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; Int_tTGWidget::WidgetId() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGValuatorBase.html:14577,Test,TestBit,14577,root/html528/TEveGValuatorBase.html,https://root.cern,https://root.cern/root/html528/TEveGValuatorBase.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); voidSetNeuronInputCalculator(TMVA::TNeuronInput* inputCalculator); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodANNBase.html:11298,Test,TestBit,11298,root/html528/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodANNBase.html,1,['Test'],['TestBit']
Testability,"atic voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); Int_toperator Int_t() const; void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooInt&operator=(Int_t value); RooInt&operator=(const RooInt&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooInt.html:4677,Test,TestBit,4677,root/html534/RooInt.html,https://root.cern,https://root.cern/root/html534/RooInt.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::HypoTestInverterPlot&operator=(const RooStats::HypoTestInverterPlot&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__HypoTestInverterPlot.html:4778,Test,TestBit,4778,root/html528/RooStats__HypoTestInverterPlot.html,https://root.cern,https://root.cern/root/html528/RooStats__HypoTestInverterPlot.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::SequentialProposal&operator=(const RooStats::SequentialProposal&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPropose(RooArgSet& xPrime, RooArgSet& x); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); RooStats::SequentialProposalSequentialProposal(); RooStats::SequentialProposalSequentialProposal(double divisor); RooStats::SequentialProposalSequentialProposal(const RooStats::SequentialProposal&); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__SequentialProposal.html:4807,Test,TestBit,4807,root/html530/RooStats__SequentialProposal.html,https://root.cern,https://root.cern/root/html530/RooStats__SequentialProposal.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTGeoPatternFinder::Reflect(Bool_t flag = kTRUE); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoPatternFinder::SetDivIndex(Int_t index); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoPatternFinder::SetNext(Int_t index); static voidTObject::SetObjectStat(Bool_t stat); voidTGeoPatternFinder::SetRange(Double_t start, Double_t step, Int_t ndivisions); voidTGeoPatternFinder::SetSpacedOut(Bool_t flag); virtual voidTObject::SetUniqueID(UInt_t uid); voidTGeoPatternFinder::SetVolume(TGeoVolume* vol); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoPatternHoneycomb.html:6529,Test,TestBit,6529,root/html530/TGeoPatternHoneycomb.html,https://root.cern,https://root.cern/root/html530/TGeoPatternHoneycomb.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooAbsMCStudyModule&RooAbsMCStudyModule::operator=(const RooAbsMCStudyModule&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Bool_tRooAbsMCStudyModule::processAfterFit(Int_t); virtual Bool_tRooAbsMCStudyModule::processBeforeGen(Int_t); virtual Bool_tprocessBetweenGenAndFit(Int_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; RooStats::UpperLimitMCSModuleUpperLimitMCSModule(const RooStats::UpperLimitMCSModule& other); RooStats::UpperLimitMCSModuleUpperLimitMCSModule(const RooArgSet* poi, Double_t CL = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__UpperLimitMCSModule.html:4999,Test,TestBit,4999,root/html528/RooStats__UpperLimitMCSModule.html,https://root.cern,https://root.cern/root/html528/RooStats__UpperLimitMCSModule.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMacro&operator=(const TMacro&); virtual voidPaint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual Int_tReadFile(const char* filename); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); virtual voidSaveSource(const char* filename)MENU ; voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetParams(const char* params = 0)MENU ; virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMacro.html:5846,Test,TestBit,5846,root/html528/TMacro.html,https://root.cern,https://root.cern/root/html528/TMacro.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooChi2MCSModule&operator=(const RooChi2MCSModule&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Bool_tprocessAfterFit(Int_t); virtual Bool_tRooAbsMCStudyModule::processBeforeGen(Int_t); virtual Bool_tRooAbsMCStudyModule::processBetweenGenAndFit(Int_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooChi2MCSModule.html:5259,Test,TestBit,5259,root/html530/RooChi2MCSModule.html,https://root.cern,https://root.cern/root/html530/RooChi2MCSModule.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompChol&operator=(const TDecompChol& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixDSym& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDecompChol.html:5527,Test,TestBit,5527,root/html528/TDecompChol.html,https://root.cern,https://root.cern/root/html528/TDecompChol.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPoints3D&operator=(const TPoints3D&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidPaintPoints(Int_t, Float_t*, Option_t*); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Int_tSetLastPosition(Int_t idx); virtual Int_tTPoints3DABC::SetNextPoint(Float_t x, Float_t y, Float_t z); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOption(Option_t* option = """"); virtual Int_tSetPoint(Int_t point, Float_t x, Float_t y, Float_t z)MENU ; virtual Int_tSetPoints(Int_t n, Float_t* p = 0, Option_t* option = """"); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tSize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPoints3D.html:6359,Test,TestBit,6359,root/html534/TPoints3D.html,https://root.cern,https://root.cern/root/html534/TPoints3D.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete[](void* ptr, void* vp); Double_toperator Double_t() const; void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooRealProxy&operator=(const Double_t& value); RooRealProxy&operator=(const RooRealProxy&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual voidRooArgProxy::print(ostream& os, Bool_t addContents = kFALSE) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tsetArg(RooAbsReal& newRef); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealProxy.html:5807,Test,TestBit,5807,root/html534/RooRealProxy.html,https://root.cern,https://root.cern/root/html534/RooRealProxy.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooExpensiveObjectCache&operator=(const RooExpensiveObjectCache&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); voidprint() const; virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tregisterObject(const char* ownerName, const char* objectName, TObject& cacheObject, TIterator* paramIter); Bool_tregisterObject(const char* ownerName, const char* objectName, TObject& cacheObject, const RooArgSet& params); voidTObject::ResetBit(UInt_t f); const TObject*retrieveObject(const char* name, TClass* tclass, const RooArgSet& params); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); Bool_tsetObj(Int_t uniqueID, TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); Int_tsize() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooExpensiveObjectCache.html:5395,Test,TestBit,5395,root/html534/RooExpensiveObjectCache.html,https://root.cern,https://root.cern/root/html534/RooExpensiveObjectCache.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualGraphPainter&operator=(const TVirtualGraphPainter&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidPaintGraph(TGraph* theGraph, Int_t npoints, const Double_t* x, const Double_t* y, Option_t* chopt); virtual voidPaintGrapHist(TGraph* theGraph, Int_t npoints, const Double_t* x, const Double_t* y, Option_t* chopt); virtual voidPaintHelper(TGraph* theGraph, Option_t* option); virtual voidPaintStats(TGraph* theGraph, TF1* fit); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); static voidSetPainter(TVirtualGraphPainter* painter); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualGraphPainter.html:5146,Test,TestBit,5146,root/html528/TVirtualGraphPainter.html,https://root.cern,https://root.cern/root/html528/TVirtualGraphPainter.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"atic voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); voidOutputClassDecl(FILE* hf, int offset, UInt_t maxVarname); voidOutputDecl(FILE* hf, int offset, UInt_t maxVarname); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetDuplicate(); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; ROOT::TFriendProxyDescriptorTFriendProxyDescriptor(const char* treename, const char* aliasname, Int_t index); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__TFriendProxyDescriptor.html:5050,Test,TestBit,5050,root/html534/ROOT__TFriendProxyDescriptor.html,https://root.cern,https://root.cern/root/html534/ROOT__TFriendProxyDescriptor.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Shifter's Instructions. These are the aspects the shifter shall keep under control; The shifter summarises the events of the week during the ROOT meeting. The hand-over to the next shifter must be carefully handled.; Forum Posts; All forum posts have to be followed up. Some hours can be given to the community to discuss the questions but an answer from the ROOT team must be given within 24 hours. It is responsibility of the shifter to make sure this happens, either answering or involving the relevant expert.; Failing tests; The shifter has the responsibility to ""keep the builds green"". She needs to fix the broken tests in the incremental and nightly builds and/or involve the relevant experts to make that happen.; Open pull requests; The shifter has the responsibility to follow up PRs if the relevant expert did not either interacting with the contributor or involving the relevant expert. Again, feedback needs to be given within 24 hours after the PR submission. Simple PRs should be reviewed. For simple PRs submitted by a contributor, the shifter should merge them immediately if they are acceptable (i.e. passing continuous integration and shifter's review). Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/shifters-instructions.html:2492,test,tests,2492,d/shifters-instructions.html,https://root.cern,https://root.cern/d/shifters-instructions.html,1,['test'],['tests']
Testability,ation ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24587,Test,Test,24587,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test error found - save the configuration ; : 130 | 10561.5 9564.19 0.0200344 0.00180234 43878.7 0; : 131 Minimum Test error found - save the configuration ; : 131 | 10475.3 9477.45 0.0200356 0.00180107 43872.9 0; : 132 Minimum Test error found - save the configuration ; : 132 | 10388.3 9392.54 0.0200847 0.0018148 43788 0; : 133 Minimum Test error found - save the configuration ; : 133 | 10303 9307.9 0.0200258 0.00180758 43912.1 0; : 134 Minimum Test error found - save the configuration ; : 134 | 10217.2 9225.8 0.0200352 0.00180785 43890.1 0; : 135 Minimum Test error found - save the configuration ; : 135 | 10133.2 9143.83 0.0200313 0.00180712 43897.8 0; : 136 Minimum Test error found - save the configuration ; : 136 | 10051.9 9059.29 0.0200892 0.0018637 43894.4 0; : 137 Minimum Test error found - save the configuration ; : 137 | 9966.99 8978.86 0.0201265 0.00183533 43737 0; : 138 Minimum Test error found - save the configuration ; : 138 | 9887.13 8895.8 0.0200521 0.00180887 43851.8 0; : 139 Minimum Test error found - save the configuration ; : 139 | 9804.58 8815.4 0.020043 0.00180744 43870.3 0; : 140 Minimum Test error found - save the configuration ; : 140 | 9722.87 8737.3 0.0202214 0.00190002 43664.9 0; : 141 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:25830,Test,Test,25830,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 134 | 10217.2 9225.8 0.0200352 0.00180785 43890.1 0; : 135 Minimum Test error found - save the configuration ; : 135 | 10133.2 9143.83 0.0200313 0.00180712 43897.8 0; : 136 Minimum Test error found - save the configuration ; : 136 | 10051.9 9059.29 0.0200892 0.0018637 43894.4 0; : 137 Minimum Test error found - save the configuration ; : 137 | 9966.99 8978.86 0.0201265 0.00183533 43737 0; : 138 Minimum Test error found - save the configuration ; : 138 | 9887.13 8895.8 0.0200521 0.00180887 43851.8 0; : 139 Minimum Test error found - save the configuration ; : 139 | 9804.58 8815.4 0.020043 0.00180744 43870.3 0; : 140 Minimum Test error found - save the configuration ; : 140 | 9722.87 8737.3 0.0202214 0.00190002 43664.9 0; : 141 Minimum Test error found - save the configuration ; : 141 | 9644.27 8657.79 0.020429 0.00182729 43006.8 0; : 142 Minimum Test error found - save the configuration ; : 142 | 9564.39 8579.88 0.0204803 0.00186473 42974.8 0; : 143 Minimum Test error found - save the configuration ; : 143 | 9485.56 8503.01 0.0205275 0.0018356 42799.2 0; : 144 Minimum Test error found - save the configuration ; : 144 | 9408.47 8425.29 0.0205008 0.00183704 42863.9 0; : 145 Minimum Test error found - save the configuration ; : 145 | 9331.33 8347.95 0.0201933 0.00180744 43511.7 0; : 146 Minimum Test error found - save the configuration ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:27069,Test,Test,27069,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 135 | 10133.2 9143.83 0.0200313 0.00180712 43897.8 0; : 136 Minimum Test error found - save the configuration ; : 136 | 10051.9 9059.29 0.0200892 0.0018637 43894.4 0; : 137 Minimum Test error found - save the configuration ; : 137 | 9966.99 8978.86 0.0201265 0.00183533 43737 0; : 138 Minimum Test error found - save the configuration ; : 138 | 9887.13 8895.8 0.0200521 0.00180887 43851.8 0; : 139 Minimum Test error found - save the configuration ; : 139 | 9804.58 8815.4 0.020043 0.00180744 43870.3 0; : 140 Minimum Test error found - save the configuration ; : 140 | 9722.87 8737.3 0.0202214 0.00190002 43664.9 0; : 141 Minimum Test error found - save the configuration ; : 141 | 9644.27 8657.79 0.020429 0.00182729 43006.8 0; : 142 Minimum Test error found - save the configuration ; : 142 | 9564.39 8579.88 0.0204803 0.00186473 42974.8 0; : 143 Minimum Test error found - save the configuration ; : 143 | 9485.56 8503.01 0.0205275 0.0018356 42799.2 0; : 144 Minimum Test error found - save the configuration ; : 144 | 9408.47 8425.29 0.0205008 0.00183704 42863.9 0; : 145 Minimum Test error found - save the configuration ; : 145 | 9331.33 8347.95 0.0201933 0.00180744 43511.7 0; : 146 Minimum Test error found - save the configuration ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:27182,Test,Test,27182,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 136 | 10051.9 9059.29 0.0200892 0.0018637 43894.4 0; : 137 Minimum Test error found - save the configuration ; : 137 | 9966.99 8978.86 0.0201265 0.00183533 43737 0; : 138 Minimum Test error found - save the configuration ; : 138 | 9887.13 8895.8 0.0200521 0.00180887 43851.8 0; : 139 Minimum Test error found - save the configuration ; : 139 | 9804.58 8815.4 0.020043 0.00180744 43870.3 0; : 140 Minimum Test error found - save the configuration ; : 140 | 9722.87 8737.3 0.0202214 0.00190002 43664.9 0; : 141 Minimum Test error found - save the configuration ; : 141 | 9644.27 8657.79 0.020429 0.00182729 43006.8 0; : 142 Minimum Test error found - save the configuration ; : 142 | 9564.39 8579.88 0.0204803 0.00186473 42974.8 0; : 143 Minimum Test error found - save the configuration ; : 143 | 9485.56 8503.01 0.0205275 0.0018356 42799.2 0; : 144 Minimum Test error found - save the configuration ; : 144 | 9408.47 8425.29 0.0205008 0.00183704 42863.9 0; : 145 Minimum Test error found - save the configuration ; : 145 | 9331.33 8347.95 0.0201933 0.00180744 43511.7 0; : 146 Minimum Test error found - save the configuration ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:27296,Test,Test,27296,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:28766,Test,Test,28766,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:28992,Test,Test,28992,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:29105,Test,Test,29105,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:29219,Test,Test,29219,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:29333,Test,Test,29333,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:29447,Test,Test,29447,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test error found - save the configuration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Test error found - save the configuration ; : 181 | 6939.07 5975.45 0.0200798 0.00180145 43767.5 0; : 182 Minimum Test error found - save the configuration ; : 182 | 6882.6 5919.11 0.0200699 0.00180792 43806.8 0; : 183 Minimum Test error found - save the configuration ; : 183 | 6826.1 5863.62 0.0200838 0.00180862 43775.3 0; : 184 Minimum Test error found - save the configuration ; : 184 | 6771.06 5807.61 0.0200991 0.00181199 43746.7 0; : 185 Minimum Test error found - save the configuration ; : 185 | 6714.64 5753.86 0.0200873 0.00180851 43766.7 0; : 186 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:30914,Test,Test,30914,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test error found - save the configuration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Test error found - save the configuration ; : 181 | 6939.07 5975.45 0.0200798 0.00180145 43767.5 0; : 182 Minimum Test error found - save the configuration ; : 182 | 6882.6 5919.11 0.0200699 0.00180792 43806.8 0; : 183 Minimum Test error found - save the configuration ; : 183 | 6826.1 5863.62 0.0200838 0.00180862 43775.3 0; : 184 Minimum Test error found - save the configuration ; : 184 | 6771.06 5807.61 0.0200991 0.00181199 43746.7 0; : 185 Minimum Test error found - save the configuration ; : 185 | 6714.64 5753.86 0.0200873 0.00180851 43766.7 0; : 186 Minimum Test error found - save the configuration ; : 186 | 6660.45 5699.55 0.0200713 0.00180648 43800 0; : 187 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:31028,Test,Test,31028,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 183 | 6826.1 5863.62 0.0200838 0.00180862 43775.3 0; : 184 Minimum Test error found - save the configuration ; : 184 | 6771.06 5807.61 0.0200991 0.00181199 43746.7 0; : 185 Minimum Test error found - save the configuration ; : 185 | 6714.64 5753.86 0.0200873 0.00180851 43766.7 0; : 186 Minimum Test error found - save the configuration ; : 186 | 6660.45 5699.55 0.0200713 0.00180648 43800 0; : 187 Minimum Test error found - save the configuration ; : 187 | 6606 5645.81 0.0200891 0.00180584 43755.9 0; : 188 Minimum Test error found - save the configuration ; : 188 | 6552.47 5592.04 0.0200898 0.00181079 43766 0; : 189 Minimum Test error found - save the configuration ; : 189 | 6500.15 5537.2 0.0201183 0.00181031 43696.6 0; : 190 Minimum Test error found - save the configuration ; : 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:32612,Test,Test,32612,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33857,Test,Test,33857,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33971,Test,Test,33971,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:34312,Test,Test,34312,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:34426,Test,Test,34426,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:36918,Test,Test,36918,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:40996,Test,Test,40996,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:42929,Test,Test,42929,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:44852,Test,Test,44852,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:44965,Test,Test,44965,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:45079,Test,Test,45079,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:45192,Test,Test,45192,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:45306,Test,Test,45306,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:48824,Test,Test,48824,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:48938,Test,Test,48938,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:49279,Test,Test,49279,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:49393,Test,Test,49393,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:52563,Test,Test,52563,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:52676,Test,Test,52676,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:59696,Test,Test,59696,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:60036,Test,Test,60036,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum Test error found - save the configuration ; : 469 | 521.821 280.136 0.020536 0.00184948 42811.7 0; : 470 Minimum Test error found - save the configuration ; : 470 | 516.179 277.682 0.0201344 0.00181863 43678.3 0; : 471 Minimum Test error found - save the configuration ; : 471 | 510.8 274.83 0.02012 0.00181888 43713.2 0; : 472 Minimum Test error found - save the configuration ; : 472 | 505.541 272.006 0.0201116 0.0018163 43727.1 0; : 473 Minimum Test error found - save the configuration ; : 473 | 500.494 269.395 0.0201254 0.00181777 43697.5 0; : 474 Minimum Test error found - save the configuration ; : 474 | 495.466 266.483 0.0201058 0.00181722 43743.1 0; : 475 Minimum Test error found - save the configuration ; : 475 | 490.186 263.742 0.0201189 0.00181234 43700.1 0; : 476 Minimum Test error found - save the configuration ; : 476 | 485.098 261.173 0.0201246 0.00180486 43668.7 0; : 477 Minimum Test error found - save the configuration ; : 477 | 480.019 258.868 0.0201244 0.00181187 43685.9 0; : 478 Minimum Test error found - save the configuration ; : 478 | 475.092 256.56 0.0201327 0.00181261 43667.9 0; : 479 Minimum Test error found - save the configuration ; : 479 | 470.459 253.447 0.0201134 0.00181351 43716.2 0; : 480 Minimum Test error found - save the configuration ; : 480 | 465.037 251.028 0.0201358 0.00183269 43708.4 0; : 481 Minimum Test error found - save the configuration ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:64908,Test,Test,64908,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 M,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:69332,Test,Test,69332,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:69446,Test,Test,69446,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:69560,Test,Test,69560,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:73304,Test,Test,73304,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:74097,Test,Test,74097,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:74209,Test,Test,74209,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.5,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:74663,Test,Test,74663,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum Test error found - save the configuration ; : 594 | 130.385 83.3494 0.0201184 0.00182079 43721.6 0; : 595 Minimum Test error found - save the configuration ; : 595 | 128.821 82.7241 0.0201197 0.00182054 43718 0; : 596 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:77326,Test,Test,77326,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum Test error found - save the configuration ; : 594 | 130.385 83.3494 0.0201184 0.00182079 43721.6 0; : 595 Minimum Test error found - save the configuration ; : 595 | 128.821 82.7241 0.0201197 0.00182054 43718 0; : 596 Minimum Test error found - save the configuration ; : 596 | 127.285 81.8772 0.0201421 0.00182102 43665.5 0; : 597 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:77439,Test,Test,77439,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum Test error found - save the configuration ; : 594 | 130.385 83.3494 0.0201184 0.00182079 43721.6 0; : 595 Minimum Test error found - save the configuration ; : 595 | 128.821 82.7241 0.0201197 0.00182054 43718 0; : 596 Minimum Test error found - save the configuration ; : 596 | 127.285 81.8772 0.0201421 0.00182102 43665.5 0; : 597 Minimum Test error found - save the configuration ; : 597 | 125.567 80.7585 0.0201182 0.00182506 43732.1 0; : 598 Minimum Test error found - save the configuration ; : 598 | 124.213 80.6209 0.0201133 0.0018121 43713 0; : 599 Minimum Test error found - save the configuration ; : 599 | 122.94 79.487 0.0201252 0.00180702 43672.5 0; : 600 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:77778,Test,Test,77778,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum Test error found - save the configuration ; : 594 | 130.385 83.3494 0.0201184 0.00182079 43721.6 0; : 595 Minimum Test error found - save the configuration ; : 595 | 128.821 82.7241 0.0201197 0.00182054 43718 0; : 596 Minimum Test error found - save the configuration ; : 596 | 127.285 81.8772 0.0201421 0.00182102 43665.5 0; : 597 Minimum Test error found - save the configuration ; : 597 | 125.567 80.7585 0.0201182 0.00182506 43732.1 0; : 598 Minimum Test error found - save the configuration ; : 598 | 124.213 80.6209 0.0201133 0.0018121 43713 0; : 599 Minimum Test error found - save the configuration ; : 599 | 122.94 79.487 0.0201252 0.00180702 43672.5 0; : 600 Minimum Test error found - save the configuration ; : 600 | 121.268 78.716 0.0201262 0.0018137 43686.1 0; : 601 Minimum Test error found - save the configuration ; : 601 | 119.733 78.5666 0.0201064 0.00181556 43737.8 0; : 602 Minimum Test error found - save the configuration ; : 602 | 118.293 77.4143 0.0201212 0.00181376 43698 0; : 603 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:78119,Test,Test,78119,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum Test error found - save the configuration ; : 594 | 130.385 83.3494 0.0201184 0.00182079 43721.6 0; : 595 Minimum Test error found - save the configuration ; : 595 | 128.821 82.7241 0.0201197 0.00182054 43718 0; : 596 Minimum Test error found - save the configuration ; : 596 | 127.285 81.8772 0.0201421 0.00182102 43665.5 0; : 597 Minimum Test error found - save the configuration ; : 597 | 125.567 80.7585 0.0201182 0.00182506 43732.1 0; : 598 Minimum Test error found - save the configuration ; : 598 | 124.213 80.6209 0.0201133 0.0018121 43713 0; : 599 Minimum Test error found - save the configuration ; : 599 | 122.94 79.487 0.0201252 0.00180702 43672.5 0; : 600 Minimum Test error found - save the configuration ; : 600 | 121.268 78.716 0.0201262 0.0018137 43686.1 0; : 601 Minimum Test error found - save the configuration ; : 601 | 119.733 78.5666 0.0201064 0.00181556 43737.8 0; : 602 Minimum Test error found - save the configuration ; : 602 | 118.293 77.4143 0.0201212 0.00181376 43698 0; : 603 Minimum Test error found - save the configuration ; : 603 | 116.739 75.9525 0.0201101 0.00180951 43714.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:78796,Test,Test,78796,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:81114,Test,Test,81114,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:81906,Test,Test,81906,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82132,Test,Test,82132,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 5,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84396,Test,Test,84396,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88871,Test,Test,88871,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ation ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17.9119 20.8249 0.0200825 0.00181515 43794.1 0; : 750 | 17.7295 20.9077 0.0200909 0.00176261 43648.3 1; : 751 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:93041,Test,Test,93041,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,"ation object if any server is redirected ; Reimplemented from RooAbsPdf.; Definition at line 955 of file RooAddPdf.cxx. ◆ resetErrorCounters(). void RooAddPdf::resetErrorCounters ; (; Int_t ; resetValue = 10). overridevirtual . Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ; Reimplemented from RooAbsPdf.; Definition at line 602 of file RooAddPdf.cxx. ◆ selectNormalization(). void RooAddPdf::selectNormalization ; (; const RooArgSet * ; depSet = nullptr, . bool ; force = false . ). overrideprotectedvirtual . Interface function used by test statistics to freeze choice of observables for interpretation of fraction coefficients. ; Reimplemented from RooAbsReal.; Definition at line 863 of file RooAddPdf.cxx. ◆ selectNormalizationRange(). void RooAddPdf::selectNormalizationRange ; (; const char * ; rangeName = nullptr, . bool ; force = false . ). overrideprotectedvirtual . Interface function used by test statistics to freeze choice of range for interpretation of fraction coefficients. ; Reimplemented from RooAbsReal.; Definition at line 886 of file RooAddPdf.cxx. ◆ selfNormalized(). bool RooAddPdf::selfNormalized ; (; ); const. inlineoverridevirtual . Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ; Always returns false, unless a PDF overrides this function. ; Reimplemented from RooAbsPdf.; Definition at line 55 of file RooAddPdf.h. ◆ setAllExtendable(). void RooAddPdf::setAllExtendable ; (; bool ; allExtendable). inlineprivate . Definition at line 151 of file RooAddPdf.h. ◆ setCacheAndTrackHints(). void RooAddPdf::setCacheAndTrackHints ; (; RooArgSet & ; trackNodes). overridevirtual . Label OK'ed components of a RooAddPdf with cache-and-track. ; Reimplemented from RooAbsArg.; Definition at line 938 of file RooAddPdf.cxx. ◆ setRecursiveFraction(). void RooAddPdf::setRecursiveFraction ; (; bool ; recursiveFraction). inlineprivate . Definition at line 150 of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddPdf.html:92016,test,test,92016,doc/master/classRooAddPdf.html,https://root.cern,https://root.cern/doc/master/classRooAddPdf.html,2,['test'],['test']
Testability,"ation of 800 events: 0.00597 sec ; Factory : ␛[1mEvaluate all methods␛[0m; Factory : Evaluate classifier: TMVA_LSTM; : ; TMVA_LSTM : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Evaluate deep neural network on CPU using batches with size = 1000; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; Factory : Evaluate classifier: TMVA_DNN; : ; TMVA_DNN : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Evaluate deep neural network on CPU using batches with size = 1000; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; Factory : Evaluate classifier: PyKeras_LSTM; : ; PyKeras_LSTM : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; Factory : Evaluate classifier: BDTG; : ; BDTG : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; : ; : Evaluation results ranked by best signal efficiency and purity (area); : -------------------------------------------------------------------------------------------------------------------; : DataSet MVA ; : Name: Method: ROC-integ; : dataset BDTG : 0.843; : dataset PyKeras_LSTM : 0.815; : dataset TMVA_LSTM : 0.732; : dataset TMVA_DNN : 0.637; : -------------------------------------------------------------------------------------------------------------------; : ; : Testing efficiency compared to training efficiency (overtraining check); : -------------------------------------------------------------------------------------------------------------------; : DataSet MVA Signal efficiency: from test sample (from training sample) ; : Name: Method:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:47288,test,test,47288,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['test'],['test']
Testability,"ation of 800 events: 0.00679 sec ; Factory : ␛[1mEvaluate all methods␛[0m; Factory : Evaluate classifier: TMVA_LSTM; : ; TMVA_LSTM : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Evaluate deep neural network on CPU using batches with size = 1000; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; Factory : Evaluate classifier: TMVA_DNN; : ; TMVA_DNN : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Evaluate deep neural network on CPU using batches with size = 1000; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; Factory : Evaluate classifier: PyKeras_LSTM; : ; PyKeras_LSTM : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; Factory : Evaluate classifier: BDTG; : ; BDTG : [dataset] : Loop over test events and fill histograms with classifier response...; : ; : Dataset[dataset] : variable plots are not produces ! The number of variables is 300 , it is larger than 200; : ; : Evaluation results ranked by best signal efficiency and purity (area); : -------------------------------------------------------------------------------------------------------------------; : DataSet MVA ; : Name: Method: ROC-integ; : dataset PyKeras_LSTM : 0.857; : dataset BDTG : 0.843; : dataset TMVA_LSTM : 0.783; : dataset TMVA_DNN : 0.654; : -------------------------------------------------------------------------------------------------------------------; : ; : Testing efficiency compared to training efficiency (overtraining check); : -------------------------------------------------------------------------------------------------------------------; : DataSet MVA Signal efficiency: from test sample (from training sample) ; : Name: Method:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:54895,test,test,54895,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['test'],['test']
Testability,"ation of objects inside; a static system of coordinates. In case you want to rotate the frame and; want to know the coordinates of objects in the rotated system, you should; apply the inverse rotation to the objects. If you want to transform coordinates; from the rotated frame to the original frame you have to apply the direct; transformation.; A rotation around a specified axis means counterclockwise rotation around; the positive direction of the axis.;  . Declaration, Access, Comparisons;   TRotation r;    // r initialized as identity;   TRotation m(r); // m = r; There is no direct way to set the matrix elements - to ensure that; a TRotation object always describes a real rotation. But you can get the; values by the member functions XX()..ZZ() or the (,); operator:;   Double_t xx = r.XX();     //  the; same as xx=r(0,0);            xx; = r(0,0);;   if (r==m) {...}          // test for equality;   if (r!=m) {..}           // test for inequality;   if (r.IsIdentity()) {...} // test for identity;  . Rotation around axes; The following matrices desrcibe counterclockwise rotations around coordinate; axes;         | 1   0      ; 0    |; Rx(a) = | 0 cos(a) -sin(a) |;         | 0 sin(a) cos(a) ; |;         | cos(a)  0 sin(a); |; Ry(a) = |   0     1   ; 0   |;         | -sin(a) 0 cos(a) |;         | cos(a) -sin(a) 0 |; Rz(a) = | sin(a) cos(a) 0 |;         |   0     ; 0     1 |; and are implemented as member functions RotateX(), RotateY(); and RotateZ():;   r.RotateX(TMath::Pi()); // rotation around the x-axis. Rotation around arbitary axis; The member function Rotate() allows to rotate around an arbitary vector; (not neccessary a unit one) and returns the result.;   r.Rotate(TMath::Pi()/3,TVector3(3,4,5));; It is possible to find a unit vector and an angle, which describe the; same rotation as the current one:;   Double_t angle;;   TVector3 axis;;   r.GetAngleAxis(angle,axis);. Rotation of local axes; Member function RotateAxes() adds a rotation of local axes to; the curre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRotation.html:1948,test,test,1948,root/html534/TRotation.html,https://root.cern,https://root.cern/root/html534/TRotation.html,3,['test'],['test']
Testability,"ation of; each input.; DrawDInputs() draws something that approximates the distribution of the; derivative of the NN w.r.t. each input. That quantity is recognized as; one of the measures to determine key quantities in the network. What is done is to vary one input around its nominal value and to see; how the NN changes. This is done for each entry in the sample and produces; a distribution. What you can learn from that is:; - is variable a really useful, or is my network insensitive to it ?; - is there any risk of big systematic ? Is the network extremely sensitive; to small variations of any of my inputs ?. As you might understand, this is to be considered with care and can serve; as input for an ""educated guess"" when optimizing the network. void DrawNetwork(Int_t neuron, const char* signal, const char* bg); Draws the distribution of the neural network (using ith neuron).; Two distributions are drawn, for events passing respectively the ""signal""; and ""background"" cuts. Only the test sample is used. TProfile* DrawTruthDeviation(Int_t outnode = 0, Option_t* option = """"); Create a profile of the difference of the MLP output minus the; true value for a given output node outnode, vs the true value for; outnode, for all test data events. This method is mainly useful; when doing regression analysis with the MLP (i.e. not classification,; but continuous truth values).; The resulting TProfile histogram is returned.; It is not drawn if option ""goff"" is specified.; Options are passed to TProfile::Draw. THStack* DrawTruthDeviations(Option_t* option = """"); Creates TProfiles of the difference of the MLP output minus the; true value vs the true value, one for each output, filled with the; test data events. This method is mainly useful when doing regression; analysis with the MLP (i.e. not classification, but continuous truth; values).; The returned THStack contains all the TProfiles. It is drawn unless; the option ""goff"" is specified.; Options are passed to TProfile::Draw. TProf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMLPAnalyzer.html:8041,test,test,8041,root/html528/TMLPAnalyzer.html,https://root.cern,https://root.cern/root/html528/TMLPAnalyzer.html,6,['test'],['test']
Testability,"ation options for proof and proof-lite ;  CProposalFunctionProposalFunction is an interface for all proposal functions that would be used with a Markov Chain Monte Carlo algorithm ;  CProposalHelper;  CRatioOfProfiledLikelihoodsTestStatTestStatistic that returns the ratio of profiled likelihoods ;  CSamplingDistPlotThis class provides simple and straightforward utilities to plot SamplingDistribution objects ;  CSamplingDistributionThis class simply holds a sampling distribution of some test statistic ;  CSamplingSummary;  CSamplingSummaryLookup;  CSequentialProposalClass implementing a proposal function that samples the parameter space by moving only in one coordinate (choosen randomly) at each step ;  CSimpleInterval;  CSimpleLikelihoodRatioTestStatTestStatistic class that returns -log(L[null] / L[alt]) where L is the likelihood ;  CSPlotThis class calculates sWeights used to create an sPlot ;  CTestStatisticTestStatistic is an interface class to provide a facility for construction test statistics distributions to the NeymanConstruction class ;  CTestStatSamplerTestStatSampler is an interface class for a tools which produce RooStats SamplingDistributions ;  CToyMCImportanceSamplerToyMCImportanceSampler is an extension of the ToyMCSampler for Importance Sampling ;  CToyMCPayload;  CToyMCSamplerToyMCSampler is an implementation of the TestStatSampler interface ;  CToyMCStudyToyMCStudy is an implementation of RooAbsStudy for toy Monte Carlo sampling ;  CUniformProposalUniformProposal is a concrete implementation of the ProposalFunction interface for use with a Markov Chain Monte Carlo algorithm ;  CUpperLimitMCSModuleThis class allow to compute in the ToyMcStudy framework the ProfileLikelihood upper limit for each toy-MC sample generated ;  ►NROOTNamespace for new ROOT classes and functions ;  ►NDetail;  CTBranchProxy;  ►CTCollectionProxyInfo;  CAddress;  CEnviron;  CEnvironBase;  CInsert;  CIterators;  CIterators< Cont_t, true >;  CIterators< std::vector< T >, false >",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:9658,test,test,9658,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,1,['test'],['test']
Testability,ation options for proof and proof-lite ;  CProposalFunctionProposalFunction is an interface for all proposal functions that would be used with a Markov Chain Monte Carlo algorithm ;  CProposalHelper;  CRatioOfProfiledLikelihoodsTestStatTestStatistic that returns the ratio of profiled likelihoods ;  CSamplingDistPlotThis class provides simple and straightforward utilities to plot SamplingDistribution objects ;  CSamplingDistributionThis class simply holds a sampling distribution of some test statistic ;  CSamplingSummary;  CSamplingSummaryLookup;  CSequentialProposalClass implementing a proposal function that samples the parameter space by moving only in one coordinate (choosen randomly) at each step ;  CSimpleInterval;  CSimpleLikelihoodRatioTestStatTestStatistic class that returns -log(L[null] / L[alt]) where L is the likelihood ;  CSPlotThis class calculates sWeights used to create an sPlot ;  CTestStatisticTestStatistic is an interface class to provide a facility for construction test statistics distributions to the NeymanConstruction class ;  CTestStatSamplerTestStatSampler is an interface class for a tools which produce RooStats SamplingDistributions ;  CToyMCImportanceSamplerToyMCImportanceSampler is an extension of the ToyMCSampler for Importance Sampling ;  CToyMCPayload;  CToyMCSamplerToyMCSampler is an implementation of the TestStatSampler interface ;  CToyMCStudyToyMCStudy is an implementation of RooAbsStudy for toy Monte Carlo sampling ;  CUniformProposalUniformProposal is a concrete implementation of the ProposalFunction interface for use with a Markov Chain Monte Carlo algorithm ;  CUpperLimitMCSModuleThis class allow to compute in the ToyMcStudy framework the ProfileLikelihood upper limit for each toy-MC sample generated ;  ►NROOTThis namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce ;  ►NDetail;  CTBranchProxyBase class for all the proxy object ;  ►CTCollectionProxyInfo;  CAddress;  CEnviron,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:9309,test,test,9309,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,1,['test'],['test']
Testability,"ation with the buffer (see BufferEmpty and BufferFill); 7109 ; 7110 TString opt = option;; 7111 opt.ToUpper();; 7112 fSumw2.Reset();; 7113 if (fIntegral) {; 7114 delete [] fIntegral;; 7115 fIntegral = nullptr;; 7116 }; 7117 ; 7118 if (opt.Contains(""M"")) {; 7119 SetMinimum();; 7120 SetMaximum();; 7121 }; 7122 ; 7123 if (opt.Contains(""ICE"") && !opt.Contains(""S"")) return;; 7124 ; 7125 // Setting fBuffer[0] = 0 is like resetting the buffer but not deleting it; 7126 // But what is the sense of calling BufferEmpty() ? For making the axes ?; 7127 // BufferEmpty will update contents that later will be; 7128 // reset in calling TH1D::Reset. For this we need to reset the stats afterwards; 7129 // It may be needed for computing the axis limits....; 7130 if (fBuffer) {BufferEmpty(); fBuffer[0] = 0;}; 7131 ; 7132 // need to reset also the statistics; 7133 // (needs to be done after calling BufferEmpty() ); 7134 fTsumw = 0;; 7135 fTsumw2 = 0;; 7136 fTsumwx = 0;; 7137 fTsumwx2 = 0;; 7138 fEntries = 0;; 7139 ; 7140 if (opt == ""ICES"") return;; 7141 ; 7142 ; 7143 TObject *stats = fFunctions->FindObject(""stats"");; 7144 fFunctions->Remove(stats);; 7145 //special logic to support the case where the same object is; 7146 //added multiple times in fFunctions.; 7147 //This case happens when the same object is added with different; 7148 //drawing modes; 7149 TObject *obj;; 7150 while ((obj = fFunctions->First())) {; 7151 while(fFunctions->Remove(obj)) { }; 7152 delete obj;; 7153 }; 7154 if(stats) fFunctions->Add(stats);; 7155 fContour.Set(0);; 7156}; 7157 ; 7158////////////////////////////////////////////////////////////////////////////////; 7159/// Save the histogram as .csv, .tsv or .txt. In case of any other extension, fall; 7160/// back to TObject::SaveAs, which saves as a .C macro (but with the file name; 7161/// extension specified by the user); 7162///; 7163/// The Under/Overflow bins are also exported (as first and last lines); 7164/// The fist 2 columns are the lower and upper edges ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:279218,log,logic,279218,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['log'],['logic']
Testability,"ation, by a pure TRotation or by a boost:; TLorentzRotation l; // l is initialized as identity; TLorentzRotation m(l);// m = l; TRotation r;; TLorentzRotation lr(r);; TLorentzRotation lb1(bx,by,bz);; TVector3 b;; TLorentzRotation lb2(b);; The Matrix for a Lorentz boosts is:; \[; \left|; \begin{array}{cccc}; 1+gamma'*bx*bx & gamma'*bx*by & gamma'*bx*bz & gamma*bx \\; gamma'*bx*bz & 1+gamma'*by*by & gamma'*by*by & gamma*by \\; gamma'*bz*bx & gamma'*bz*by & 1+gamma'*bz*bz & gamma*bz \\; gamma*bx & gamma*by & gamma*bz & gamma; \end{array}; \right|; \]; with the boost vector b=(bx,by,bz); gamma=1/Sqrt(1-beta*beta);gamma'=(gamma-1)/beta*beta.; 17.5.2 Access to the Matrix Components/Comparisons; The access to the matrix components is possible with the methods XX(), XY() … TT(), and with the operator(int,int):; Double_t xx;; TLorentzRotation l;; xx = l.XX(); // gets the xx component; xx = l(0,0); // gets the xx component; if (l == m) {...} // test for equality; if (l != m) {...} // test for inequality; if (l.IsIdentity()) {...} // test for identity; 17.5.3 Transformations of a Lorentz Rotation; There are four possibilities to find the product of two TLorentzRotation transformations:; TLorentzRotation a,b,c;; c = b*a; // product; c = a.MatrixMultiplication(b); // a is unchanged; a *= b; // a=a*b; c = a.Transform(b) // a=b*a then c=a; Lorentz boosts:; Double_t bx, by, bz;; TVector3 v(bx,by,bz);; TLorentzRotation l;; l.Boost(v);; l.Boost(bx,by,bz);; Rotations:; TVector3 axis;; l.RotateX(TMath::Pi()); // rotation around x-axis; l.Rotate(.5,axis); // rotation around specified vector; Inverse transformation: use the method Inverse()to return the inverse transformation keeping the current one unchanged. The method Invert() inverts the current TLorentzRotation:; l1 = l2.Inverse(); // l1 is inverse of l2, l2 unchanged; l1 = l2.Invert(); // invert l2, then l1=l2; The matrix for the inverse transformation of a TLorentzRotation is as follows:; \[; \left|; \begin{array}{cccc}; xx & xy &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:872684,test,test,872684,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['test'],['test']
Testability,"ation. MySQL (native driver and; MyODBC 3) does not support such a mode of operation, therefore adding; new rows will result in communication loop to database. Local databases (SQLite3) do not use any buffering at all in the TSQLStatement; implementation (but inside the library). They still profit from the; usage of prepared statements. When inserting many rows into a SQLite3 database,; consider using a transaction via the methods StartTransaction() and Commit(); of the TSQLServer, as autocommit is active by default and causes a sync to disk; after each single insert. One should also mention differences between Oracle and ODBC SQL syntax for; parameters. ODBC (and MySQL) use question marks to specify the position; where parameters should be inserted (as shown in the example). Oracle uses; :1, :2 and so on as marks to specify the position of parameter 0, 1, and so on.; Therefore, similar to the example, a query will look like:. TSQLStatement* stmt = serv->Statement(""INSERT INTO TESTTABLE (ID1, ID2, FFIELD, FVALUE) VALUES (:1, :2, :3, :4)"", 100);. SQLite3 supports both these syntaxes and some more. There is a possibility to set a parameter value to NULL with the SetNull() method.; If this method is to be called for the first iteration, one should first call another Set...; method to identify the actual type which will be used for the parameter later. 3. Getting data from database. To request data from a database, the SELECT statement should be used.; After a SELECT statement is created, it must be processed; with the TSQLStatement::Process() method and the result of statement; should be stored in internal buffers with the method TSQLStatement::StoreResult().; Information about selected fields (columns); can be obtained with GetNumFields() and GetFieldName() methods.; To receive data for the next result row, NextResultRow() method should be called.; Value from each column can be retrieved with the GetInt(), GetDouble(),; GetString() and other methods. There are no stric",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLStatement.html:5103,TEST,TESTTABLE,5103,root/html534/TSQLStatement.html,https://root.cern,https://root.cern/root/html534/TSQLStatement.html,3,['TEST'],['TESTTABLE']
Testability,"ation. ◆ TProofLite() [1/3]. TProofLite::TProofLite ; (; const TProofLite & ; ). private . ◆ TProofLite() [2/3]. TProofLite::TProofLite ; (; ). inlineprotected . Definition at line 87 of file TProofLite.h. ◆ TProofLite() [3/3]. TProofLite::TProofLite ; (; const char * ; url, . const char * ; conffile = kPROOF_ConfFile, . const char * ; confdir = kPROOF_ConfDir, . Int_t ; loglevel = 0, . const char * ; alias = 0, . TProofMgr * ; mgr = 0 . ). Create a PROOF environment. ; Starting PROOF involves either connecting to a master server, which in turn will start a set of slave servers, or directly starting as master server (if master = """"). Masterurl is of the form: [proof[s]://]host[:port]. Conffile is the name of the config file describing the remote PROOF cluster (this argument alows you to describe different cluster configurations). The default is proof.conf. Confdir is the directory where the config file and other PROOF related files are (like motd and noproof files). Loglevel is the log level (default = 1). User specified custom config files will be first looked for in $HOME/.conffile. ; Definition at line 72 of file TProofLite.cxx. ◆ ~TProofLite(). TProofLite::~TProofLite ; (; ). override . Destructor. ; Definition at line 375 of file TProofLite.cxx. Member Function Documentation. ◆ CancelStagingDataSet(). Bool_t TProofLite::CancelStagingDataSet ; (; const char * ; dataset). overridevirtual . Cancels a dataset staging request. ; Returns kTRUE on success, kFALSE on failure. Dataset not found equals to a failure. PROOF-Lite re-implementation of the equivalent function in TProofServ. ; Reimplemented from TProof.; Definition at line 2195 of file TProofLite.cxx. ◆ Class(). static TClass * TProofLite::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofLite::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofLite::Class_Version ; (; ). inlinestaticconstexpr . Returns",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:47500,Log,Loglevel,47500,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,2,"['Log', 'log']","['Loglevel', 'log']"
Testability,"ation; Factory(TString theJobName, TFile* theTargetFile, TString theOption = """"); standard constructor; jobname : this name will appear in all weight file names produced by the MVAs; theTargetFile : output ROOT file; the test tree and all evaluation plots; will be stored here; theOption : option string; currently: ""V"" for verbose. void Greetings(); print welcome message; options are: kLogoWelcomeMsg, kIsometricWelcomeMsg, kLeanWelcomeMsg. ~Factory( void ); destructor; delete fATreeEvent;. void DeleteAllMethods( void ); delete methods. void SetVerbose(Bool_t v = kTRUE). TMVA::DataSetInfo& AddDataSet( DataSetInfo &dsi ). TMVA::DataSetInfo& AddDataSet(const TString& ). TTree* CreateEventAssignTrees(const TString& name); create the data assignment tree (for event-wise data assignment by user). void AddSignalTrainingEvent(const vector<Double_t>& event, Double_t weight = 1.0); add signal training event. void AddSignalTestEvent(const vector<Double_t>& event, Double_t weight = 1.0); add signal testing event. void AddBackgroundTrainingEvent(const vector<Double_t>& event, Double_t weight = 1.0); add signal training event. void AddBackgroundTestEvent(const vector<Double_t>& event, Double_t weight = 1.0); add signal training event. void AddTrainingEvent(const TString& className, const vector<Double_t>& event, Double_t weight); add signal training event. void AddTestEvent(const TString& className, const vector<Double_t>& event, Double_t weight); add signal test event. void AddEvent(const TString& className, TMVA::Types::ETreeType tt, const vector<Double_t>& event, Double_t weight); add event; vector event : the order of values is: variables + targets + spectators. Bool_t UserAssignEvents(UInt_t clIndex). void SetInputTreesFromEventAssignTrees(); assign event-wise local trees to data set. void AddTree(TTree* tree, const TString& className, Double_t weight, const TCut& cut, const TString& treeType); number of signal events (used to compute significance). void AddTree(TTree* tree, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__Factory.html:13697,test,testing,13697,root/html530/TMVA__Factory.html,https://root.cern,https://root.cern/root/html530/TMVA__Factory.html,3,['test'],['testing']
Testability,"ationFunction::kSoftSign@ kSoftSign; TMVA::DNN::EActivationFunction::kSymmRelu@ kSymmRelu; TMVA::DNN::ELossFunctionELossFunctionEnum that represents objective functions for the net, i.e.Definition Functions.h:57; TMVA::DNN::ModeOutputValuesModeOutputValuesDefinition NeuralNet.h:179; TMVA::DNN::TMVAInput_tstd::tuple< const std::vector< Event * > &, const DataSetInfo & > TMVAInput_tDefinition DataLoader.h:40; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; TMVA::gConfigConfig & gConfig(); TMVA::gToolsTools & gTools(); TMVA::fetchValueTString fetchValue(const std::map< TString, TString > &keyValueMap, TString key)Definition MethodDNN.cxx:320; TMVA::EndlMsgLogger & Endl(MsgLogger &ml)Definition MsgLogger.h:148; TMath::LogDouble_t Log(Double_t x)Returns the natural logarithm of x.Definition TMath.h:756; TMVA::MethodDNN::TTrainingSettingsDefinition MethodDNN.h:90; TMVA::MethodDNN::TTrainingSettings::regularizationDNN::ERegularization regularizationDefinition MethodDNN.h:94; TMVA::MethodDNN::TTrainingSettings::convergenceStepssize_t convergenceStepsDefinition MethodDNN.h:93; TMVA::MethodDNN::TTrainingSettings::learningRateDouble_t learningRateDefinition MethodDNN.h:95; TMVA::MethodDNN::TTrainingSettings::testIntervalsize_t testIntervalDefinition MethodDNN.h:92; TMVA::MethodDNN::TTrainingSettings::batchSizesize_t batchSizeDefinition MethodDNN.h:91; TMVA::MethodDNN::TTrainingSettings::dropoutProbabilitiesstd::vector< Double_t > dropoutProbabilitiesDefinition MethodDNN.h:98; TMVA::MethodDNN::TTrainingSettings::multithreadingbool multithreadingDefinition MethodDNN.h:99; TMVA::MethodDNN::TTrainingSettings::weightDecayDouble_t weightDecayDefinition MethodDNN.h:97; TMVA::MethodDNN::TTrainingSettings::momentumDouble_t momentumDefinition MethodDNN.h:96; lTLine lDefinition textangle.C:4; Config.h; Types.h; outputstatic void output(). tmvatmvasrcMethodDNN.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:00 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:73117,test,testIntervalDefinition,73117,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['test'],['testIntervalDefinition']
Testability,ationReLU.cxx;  TActivationSigmoid.cxx;  TActivationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  efficienciesMulticlass.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  ►,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:92792,Test,TestDerivatives,92792,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['Test'],['TestDerivatives']
Testability,ationReLU.cxx;  TActivationSigmoid.cxx;  TActivationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  LinkDef.h;  ► src;  annconve,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:94589,Test,TestDerivatives,94589,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['Test'],['TestDerivatives']
Testability,ationSigmoid.cxx;  TActivationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  efficienciesMulticlass.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  ► src;  annconvergencete,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:92812,Test,TestDerivativesCpu,92812,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['Test'],['TestDerivativesCpu']
Testability,ationSigmoid.cxx;  TActivationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  LinkDef.h;  ► src;  annconvergencetest.cxx;  BDT.cx,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:94609,Test,TestDerivativesCpu,94609,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['Test'],['TestDerivativesCpu']
Testability,ationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  efficienciesMulticlass.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  ► src;  annconvergencetest.cxx;  BDT.cxx;  BDT_R,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:92837,Test,TestDerivativesCuda,92837,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['Test'],['TestDerivativesCuda']
Testability,ationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h;  tmvaglob.h;  TMVAGui.h;  TMVAMultiClassGui.h;  TMVARegGui.h;  variables.h;  variablesMultiClass.h;  LinkDef.h;  ► src;  annconvergencetest.cxx;  BDT.cxx;  BDT_Reg.cxx;  BDTCon,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:94634,Test,TestDerivativesCuda,94634,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['Test'],['TestDerivativesCuda']
Testability,"atistic and create a ToyMC test statistic sampler. void CreateParameterPoints() const; specify the parameter points to perform the construction.; allow ability to profile on some nuisance paramters. ConfInterval* GetInterval() const; Main interface to get a RooStats::ConfInterval.; It constructs a RooStats::PointSetInterval. FeldmanCousins(). Double_t Size() const; Get the size of the test (eg. rate of Type I error). {return fSize;}. Double_t ConfidenceLevel() const; Get the Confidence level for the test. {return 1.-fSize;}. void SetData(RooAbsData& data); Set the DataSet. { fData = &data; }. void SetPdf(RooAbsPdf& pdf); Set the Pdf. { fPdf = &pdf; }. void SetParameters(const RooArgSet& set); specify the parameters of interest in the interval. { fPOI.removeAll(); fPOI.add(set); }. void SetNuisanceParameters(const RooArgSet& set); specify the nuisance parameters (eg. the rest of the parameters). {fNuisParams.removeAll(); fNuisParams.add(set);}. void SetTestSize(Double_t size); set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval). {fSize = size;}. void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). {fSize = 1.-cl;}. RooAbsData* GetPointsToScan(). ConfidenceBelt* GetConfidenceBelt(); {return fConfBelt;}. void UseAdaptiveSampling(bool flag = true); {fAdaptiveSampling=flag;}. void SetNBins(Int_t bins); {fNbins = bins;}. void FluctuateNumDataEntries(bool flag = true); {fFluctuateData = flag;}. void SaveBeltToFile(bool flag = true). void CreateConfBelt(bool flag = true); {fCreateBelt = flag;}. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: FeldmanCousins.h 31276 2009-11-18 15:06:42Z moneta $ » Last generated: 2009-12-07 13:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__FeldmanCousins.html:9894,test,test,9894,root/html526/RooStats__FeldmanCousins.html,https://root.cern,https://root.cern/root/html526/RooStats__FeldmanCousins.html,1,['test'],['test']
Testability,atistic calculation; Int_tRooAbsTestStatistic::_nGofNumber of sub-contexts; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooArgSet*RooAbsOptTestStatistic::_normSetPointer to set with observables used for normalization; Int_tRooAbsTestStatistic::_numSetsTotal number of partitions in parallel calculation mode; Double_tRooAbsTestStatistic::_offset! Offset; Double_tRooAbsTestStatistic::_offsetCarry! avoids loss of precision; Double_t_offsetCarrySaveW2!; Double_t_offsetSaveW2!; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_tRooAbsOptTestStatistic::_optimized!; RooAbsData*RooAbsOptTestStatistic::_origDataOriginal data; RooAbsReal*RooAbsOptTestStatistic::_origFuncOriginal function; Bool_tRooAbsOptTestStatistic::_ownDataDo we own the dataset; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxyRooAbsTestStatistic::_paramSetParameters of the test statistic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooArgSet*RooAbsOptTestStatistic::_projDepsSet of projected observable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; RooRefArrayRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; TStringRooAbsOptTestStatistic::_sealNoticeUser-defined notice shown when reading a sealed likelihood; Bool_tRooAbsOptTestStatistic::_sealedIs test statistic sealed -- i.e. no access to data; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server o,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooNLLVar.html:42227,test,test,42227,root/html602/RooNLLVar.html,https://root.cern,https://root.cern/root/html602/RooNLLVar.html,6,['test'],['test']
Testability,"ative distribution functions in ROOT ;  mathcoreGenVector.C Example macro testing available methods and operation of the GenVector classes ;  mathcoreSpecFunc.C Example macro describing how to use the special mathematical functions taking full advantage of the precision and speed of the C99 compliant environments ;  mathcoreStatFunc.C Example macro showing some major probability density functions in ROOT ;  mathcoreVectorCollection.C Example showing how to write and read a std vector of ROOT::Math LorentzVector in a ROOT tree ;  mathcoreVectorFloatIO.C Macro illustrating I/O with Lorentz Vectors of floats The dictionary for LorentzVector of float is not in the libMathCore, therefore is generated when parsed the file with CINT ;  mathcoreVectorIO.C Example of I/O of a mathcore Lorentz Vectors in a Tree and comparison with a TLorentzVector ;  mathGammaNormal.C Tutorial illustrating the use of TMath::GammaDist and TMath::LogNormal ;  mathLaplace.C Test the TMath::LaplaceDist and TMath::LaplaceDistI functions ;  mathmoreIntegration.C Example on the usage of the adaptive 1D integration algorithm of MathMore it calculates the numerically cumulative integral of a distribution (like in this case the BreitWigner) to execute the macro type it (you need to compile with AClic) ;  mathStudent.C Tutorial illustrating the use of the Student and F distributions ;  multidimSampling.C Example of sampling a multi-dim distribution using the DistSampler class NOTE: This tutorial must be run with ACLIC ;  normalDist.C Tutorial illustrating the new statistical distributions functions (pdf, cdf and quantile) ;  permute.C Tutorial illustrating the use of TMath::Permute can be run with: ;  principal.C Principal Components Analysis (PCA) example ;  quantiles.C Demo for quantiles ;  quasirandom.C Example of generating quasi-random numbers ;  Rolke.C Example of the usage of the TRolke class The TRolke class computes the profile likelihood confidence limits for 7 different model assumptions on sy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:131295,Test,Test,131295,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['Test'],['Test']
Testability,"atives. . Saving Canvas in TeX ; . Being able to generate TeX graphics can be useful for several reasons:. 	To have an easy to modify the image, in particular the labels and titles (ASCII file).; 	To have the same font in all labels, legends, plot titles etc. as in the text body of a document.; 	Render Math formulae using... more . Defining C++14 ; Hi,. A new C++ meeting is coming up in a few days. Many, many proposals are on the table; they can be found here and here. Out of those proposals only very few will be discussed at the meeting; likely only those that are about to make it into C++14. Given that I am rather new in this business... more . On the way to ROOT 6 ; Hi!. We are running late with ROOT 6, in part because I'm just back at work after being sick for 4 weeks. The other cling team members were hacking away at Fermilab, and I'll demonstrate how major that step to version 6 is for ROOT. ""Commit Activity Index"" for ROOT. SVNPlot defines a... more . C++14 ; Hi,. Two weeks ago I participated at the ISO C++ standard meeting. It was my and CERN's first one and a pleasant surprise. A few news items:. 	The next two standards are planned for 2014 and 2017, with 2014 being a bit like 2003: mostly bug fixes and usability improvements.; 	There is now (... more . Pages1; 2; 3; 4; next ›; last ». Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/blog.html:5605,test,tests,5605,d/blog.html,https://root.cern,https://root.cern/d/blog.html,2,"['Benchmark', 'test']","['Benchmarks', 'tests']"
Testability,ator context specific for RooSimultaneous PDFs when generating more than one of the component pdfs. More...;  ; class  RooSimSplitGenContext;  Efficient implementation of the generator context specific for RooSimultaneous PDFs when generating more than one of the component pdfs. More...;  ; class  RooSimultaneous;  Facilitates simultaneous fitting of multiple PDFs to subsets of a given dataset. More...;  ; class  RooStringVar;  A RooAbsArg implementing string values. More...;  ; class  RooStudyManager;  Utility class to manage studies that consist of repeated applications of generate-and-fit operations on a workspace. More...;  ; class  RooStudyPackage;  Utility class to manage studies that consist of repeated applications of generate-and-fit operations on a workspace. More...;  ; class  RooSubsidiaryL;  Calculates the sum of the -(log) likelihoods of a set of RooAbsPdf objects that represent subsidiary or constraint functions. More...;  ; class  RooFit::TestStatistics::RooSumL;  Likelihood class that sums over multiple -log components. More...;  ; class  RooSuperCategory;  Joins several RooAbsCategoryLValue objects into a single category. More...;  ; class  RooTable;  Abstract interface for table objects. More...;  ; class  RooTemplateProxy< T >;  ; class  RooThresholdCategory;  A real-to-category mapping defined by a series of thresholds. More...;  ; class  RooTrace;  Controls the memory tracing hooks in all RooFit objects. More...;  ; class  RooTreeDataStore;  TTree-backed data storage. More...;  ; class  RooTruthModel;  Implements a RooResolution model that corresponds to a delta function. More...;  ; class  RooUnbinnedL;  A -log(likelihood) calculation from a dataset (assumed to be unbinned) and a PDF. More...;  ; class  RooUniformBinning;  Implementation of RooAbsBinning that provides a uniform binning in 'n' bins between the range end points. More...;  ; class  RooVectorDataStore;  Uses std::vector to store data columns. More...;  ; class  RooWorkspace;  Persi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Roofitcore.html:19588,Test,TestStatistics,19588,doc/master/group__Roofitcore.html,https://root.cern,https://root.cern/doc/master/group__Roofitcore.html,2,"['Test', 'log']","['TestStatistics', 'log']"
Testability,"ator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TChainIndex&operator=(const TChainIndex&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree* T); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUpdateFormulaLeaves(const TTree* parent); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TChainIndex.html:5253,Test,TestBit,5253,root/html530/TChainIndex.html,https://root.cern,https://root.cern/root/html530/TChainIndex.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpDataBase&operator=(const TQpDataBase& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPutAIntoAt(TMatrixDBase& M, Int_t row, Int_t col); virtual voidPutCIntoAt(TMatrixDBase& M, Int_t row, Int_t col); virtual voidPutQIntoAt(TMatrixDBase& M, Int_t row, Int_t col); virtual voidQmult(Double_t beta, TVectorD& y, Double_t alpha, const TVectorD& x); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQpDataBase.html:5930,Test,TestBit,5930,root/html528/TQpDataBase.html,https://root.cern,https://root.cern/root/html528/TQpDataBase.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpResidual&operator=(const TQpResidual& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidProject_r3(Double_t rmin, Double_t rmax); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSet_r3_xz_alpha(TQpVar* vars, Double_t alpha); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TQpResidual(); TQpResidual(const TQpResidual& another); TQpResidual(Int_t nx, Int_t my, Int_t mz, TVectorD& ixlow, TVectorD& ixupp, TVectorD& iclow, TVectorD& icupp); virtual voidTObject::UseCurrentStyle(); Bool_tValidNonZeroPattern(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQpResidual.html:4939,Test,TestBit,4939,root/html602/TQpResidual.html,https://root.cern,https://root.cern/root/html602/TQpResidual.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooAbsMCStudyModule&operator=(const RooAbsMCStudyModule&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Bool_tprocessAfterFit(Int_t); virtual Bool_tprocessBeforeGen(Int_t); virtual Bool_tprocessBetweenGenAndFit(Int_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsMCStudyModule.html:5467,Test,TestBit,5467,root/html530/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html530/RooAbsMCStudyModule.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompQRH&operator=(const TDecompQRH& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixD& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TDecompQRH.html:5936,Test,TestBit,5936,root/html530/TDecompQRH.html,https://root.cern,https://root.cern/root/html530/TDecompQRH.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDecompSVD&operator=(const TDecompSVD& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = """") constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetMatrix(const TMatrixD& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TDecompSVD.html:6166,Test,TestBit,6166,root/html530/TDecompSVD.html,https://root.cern,https://root.cern/root/html530/TDecompSVD.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidPrintCovarianceMatrix(RooFitResult* result, RooArgSet* params, string filename); voidProcessExpectedHisto(TH1F* hist, RooWorkspace* proto, string prefix, string productPrefix, string systTerm, double low, double high, int lowBin, int highBin); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidSetObsToExpected(RooWorkspace* proto, string obsPrefix, string expPrefix, int lowBin, int highBin); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HistFactory__HistoToWorkspaceFactory.html:6761,Test,TestBit,6761,root/html530/RooStats__HistFactory__HistoToWorkspaceFactory.html,https://root.cern,https://root.cern/root/html530/RooStats__HistFactory__HistoToWorkspaceFactory.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; voidTProcessID::PutObjectWithID(TObject* obj, UInt_t uid = 0); virtual Int_tTObject::Read(const char* name); virtual voidTProcessID::RecursiveRemove(TObject* obj); voidRemoveUUID(UInt_t number); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTProcessID::SetObjectCount(UInt_t number); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProcessUUID.html:6754,Test,TestBit,6754,root/html528/TProcessUUID.html,https://root.cern,https://root.cern/root/html528/TProcessUUID.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooDLLSignificanceMCSModule&operator=(const RooDLLSignificanceMCSModule&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Bool_tprocessAfterFit(Int_t); virtual Bool_tRooAbsMCStudyModule::processBeforeGen(Int_t); virtual Bool_tRooAbsMCStudyModule::processBetweenGenAndFit(Int_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooDLLSignificanceMCSModule.html:5777,Test,TestBit,5777,root/html530/RooDLLSignificanceMCSModule.html,https://root.cern,https://root.cern/root/html530/RooDLLSignificanceMCSModule.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGeoPatternParaX&operator=(const TGeoPatternParaX&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTGeoPatternFinder::Reflect(Bool_t flag = kTRUE); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoPatternFinder::SetDivIndex(Int_t index); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoPatternFinder::SetNext(Int_t index); static voidTObject::SetObjectStat(Bool_t stat); voidTGeoPatternFinder::SetRange(Double_t start, Double_t step, Int_t ndivisions); voidTGeoPatternFinder::SetSpacedOut(Bool_t flag); virtual voidTObject::SetUniqueID(UInt_t uid); voidTGeoPatternFinder::SetVolume(TGeoVolume* vol); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternParaX.html:6939,Test,TestBit,6939,root/html534/TGeoPatternParaX.html,https://root.cern,https://root.cern/root/html534/TGeoPatternParaX.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGeoPatternParaY&operator=(const TGeoPatternParaY&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTGeoPatternFinder::Reflect(Bool_t flag = kTRUE); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoPatternFinder::SetDivIndex(Int_t index); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoPatternFinder::SetNext(Int_t index); static voidTObject::SetObjectStat(Bool_t stat); voidTGeoPatternFinder::SetRange(Double_t start, Double_t step, Int_t ndivisions); voidTGeoPatternFinder::SetSpacedOut(Bool_t flag); virtual voidTObject::SetUniqueID(UInt_t uid); voidTGeoPatternFinder::SetVolume(TGeoVolume* vol); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternParaY.html:6939,Test,TestBit,6939,root/html534/TGeoPatternParaY.html,https://root.cern,https://root.cern/root/html534/TGeoPatternParaY.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGeoPatternParaZ&operator=(const TGeoPatternParaZ&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTGeoPatternFinder::Reflect(Bool_t flag = kTRUE); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoPatternFinder::SetDivIndex(Int_t index); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoPatternFinder::SetNext(Int_t index); static voidTObject::SetObjectStat(Bool_t stat); voidTGeoPatternFinder::SetRange(Double_t start, Double_t step, Int_t ndivisions); voidTGeoPatternFinder::SetSpacedOut(Bool_t flag); virtual voidTObject::SetUniqueID(UInt_t uid); voidTGeoPatternFinder::SetVolume(TGeoVolume* vol); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternParaZ.html:6939,Test,TestBit,6939,root/html534/TGeoPatternParaZ.html,https://root.cern,https://root.cern/root/html534/TGeoPatternParaZ.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGeoPatternTrapZ&operator=(const TGeoPatternTrapZ&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTGeoPatternFinder::Reflect(Bool_t flag = kTRUE); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoPatternFinder::SetDivIndex(Int_t index); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoPatternFinder::SetNext(Int_t index); static voidTObject::SetObjectStat(Bool_t stat); voidTGeoPatternFinder::SetRange(Double_t start, Double_t step, Int_t ndivisions); voidTGeoPatternFinder::SetSpacedOut(Bool_t flag); virtual voidTObject::SetUniqueID(UInt_t uid); voidTGeoPatternFinder::SetVolume(TGeoVolume* vol); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternTrapZ.html:6987,Test,TestBit,6987,root/html534/TGeoPatternTrapZ.html,https://root.cern,https://root.cern/root/html534/TGeoPatternTrapZ.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject*operator()(const char* name) const; virtual voidPaint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual voidPrint(Option_t* option, Int_t recurse) const; virtual voidPrint(Option_t* option, const char* wildcard, Int_t recurse = 1) const; virtual voidPrint(Option_t* option, TPRegexp& regexp, Int_t recurse = 1) const; virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); virtual TObject*Remove(TObject* obj); voidRemoveAll(); virtual voidRemoveAll(TCollection* col); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCurrentCollection(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOwner(Bool_t enable = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); static voidStartGarbageCollection(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tWrite(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tWrite(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TCollection.html:6345,Test,TestBit,6345,root/html530/TCollection.html,https://root.cern,https://root.cern/root/html530/TCollection.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPoints3DABC&TPoints3DABC::operator=(const TPoints3DABC&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTPoints3DABC::PaintPoints(Int_t n, Float_t* p, Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Int_tSetLastPosition(Int_t idx); virtual Int_tTPoints3DABC::SetNextPoint(Float_t x, Float_t y, Float_t z); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOption(Option_t*); virtual Int_tSetPoint(Int_t, Float_t, Float_t, Float_t); virtual Int_tSetPoints(Int_t, Float_t*, Option_t*); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tSize() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTablePoints.html:6046,Test,TestBit,6046,root/html528/TTablePoints.html,https://root.cern,https://root.cern/root/html528/TTablePoints.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPointsArray3D&operator=(const TPointsArray3D&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidPaintPoints(Int_t, Float_t*, Option_t*); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Int_tSetLastPosition(Int_t idx); virtual Int_tTPoints3DABC::SetNextPoint(Float_t x, Float_t y, Float_t z); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOption(Option_t* option = """"); virtual Int_tSetPoint(Int_t point, Float_t x, Float_t y, Float_t z)MENU ; virtual Int_tSetPoints(Int_t n, Float_t* p = 0, Option_t* option = """"); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tSize() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPointsArray3D.html:6369,Test,TestBit,6369,root/html528/TPointsArray3D.html,https://root.cern,https://root.cern/root/html528/TPointsArray3D.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetElements(TList* e); voidSetMiniFrame(Bool_t r); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetRGBA(const Float_t* arr); voidSetRGBALine(const Float_t* arr); voidSetRnrElements(Bool_t r); voidSetRnrFrame(Bool_t r); voidSetRnrSelf(Bool_t r); voidSetShape(TGeoShape* s); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidSetTrans(const Double_t* arr); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveGeoShapeExtract.html:5315,Test,TestBit,5315,root/html534/TEveGeoShapeExtract.html,https://root.cern,https://root.cern/root/html534/TEveGeoShapeExtract.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooMinimizer&operator=(const RooMinimizer&); voidoptimizeConst(Bool_t flag); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); RooFitResult*save(const char* name = 0, const char* title = 0); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); Int_tseek(); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidsetEps(Double_t eps); voidsetErrorLevel(Double_t level); voidsetEvalErrorWall(Bool_t flag); Bool_tsetLogFile(const char* logf = 0); voidsetMinimizerType(const char* type); static voidTObject::SetObjectStat(Bool_t stat); voidsetPrintEvalErrors(Int_t numEvalErrors); Int_tsetPrintLevel(Int_t newLevel); voidsetProfile(Bool_t flag = kTRUE); voidsetStrategy(Int_t strat); virtual voidTObject::SetUniqueID(UInt_t uid); voidsetVerbose(Bool_t flag = kTRUE); virtual voidShowMembers(TMemberInspector& insp); Int_tsimplex(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMinimizer.html:5524,log,logf,5524,root/html528/RooMinimizer.html,https://root.cern,https://root.cern/root/html528/RooMinimizer.html,3,"['Test', 'log']","['TestBit', 'TestBits', 'logf']"
Testability,"ator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Bool_tProcess(Long64_t entry); virtual Bool_tTSelector::ProcessCut(Long64_t); virtual voidTSelector::ProcessFill(Long64_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTSelector::ResetAbort(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTSelector::SetInputList(TList* input); virtual voidTSelector::SetObject(TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTSelector::SetOption(const char* option); virtual voidTSelector::SetStatus(Long64_t status); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidSlaveBegin(TTree* tree); virtual voidSlaveTerminate(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTerminate(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual Int_tVersion() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPySelector.html:6586,Test,TestBit,6586,root/html534/TPySelector.html,https://root.cern,https://root.cern/root/html534/TPySelector.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDEDw(Double_t in); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidSetNewEvent() const; voidSetNormalisation(Double_t mean, Double_t RMS); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidSetWeight(Double_t w); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TNeuron(TNeuron::ENeuronType type = kSigmoid, const char* name = """", const char* title = """", const char* extF = """", const char* extD = """"); TTreeFormula*UseBranch(TTree*, const char*); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNeuron.html:5784,Test,TestBit,5784,root/html602/TNeuron.html,https://root.cern,https://root.cern/root/html602/TNeuron.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = 0) const; voidPrt(const char* what); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); Int_tRetrieve(const char* ord = ""*"", TProofLog::ERetrieveOpt opt = TProofLog::kTrailing, const char* fname = 0, const char* pattern = 0); Int_tSave(const char* ord = ""*"", const char* fname = 0, Option_t* opt = ""w""); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetLogToBox(Bool_t lgbox = kFALSE); static voidSetMaxTransferSize(Long64_t maxsz); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; TDatimeStartTime(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofLog.html:7854,Test,TestBit,7854,root/html530/TProofLog.html,https://root.cern,https://root.cern/root/html530/TProofLog.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTKey::Print(Option_t* option = """") const; virtual Int_tRead(TObject* obj); virtual voidReadBuffer(char*&); virtual Bool_tReadFile(); voidTKey::ReadKeyBuffer(char*& buffer); virtual TObject*ReadObj(); virtual void*ReadObjectAny(const TClass* expectedClass); virtual TObject*ReadObjWithBuffer(char* bufferRead); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBuffer(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTKey::SetMotherDir(TDirectory* dir); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTKey::SetParent(const TObject* parent); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTKey::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Int_tWriteFile(Int_t = 1, TFile* = 0).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TKeySQL.html:6034,Test,TestBit,6034,root/html530/TKeySQL.html,https://root.cern,https://root.cern/root/html530/TKeySQL.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidRandomize() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); Double_tResult(Int_t event, Int_t index = 0) const; virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetData(TTree*); voidSetDelta(Double_t delta); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetEpsilon(Double_t eps); voidSetEta(Double_t eta); voidSetEtaDecay(Double_t ed); voidSetEventWeight(const char*); voidSetLearningMethod(TMultiLayerPerceptron::ELearningMethod method); static voidTObject::SetObjectStat(Bool_t stat); voidSetReset(Int_t reset); voidSetTau(Double_t tau); voidSetTestDataSet(TEventList* test); voidSetTestDataSet(const char* test); voidSetTrainingDataSet(TEventList* train); voidSetTrainingDataSet(const char* train); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTrain(Int_t nEpoch, Option_t* option = ""text"", Double_t minE = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMultiLayerPerceptron.html:14604,test,test,14604,root/html530/TMultiLayerPerceptron.html,https://root.cern,https://root.cern/root/html530/TMultiLayerPerceptron.html,8,"['Test', 'test']","['TestBit', 'TestBits', 'test']"
Testability,"ator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVolumePosition&operator=(const TVolumePosition& rhs); virtual voidPaint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual TVolumePosition*Reset(TVolume* node = 0, Double_t x = 0, Double_t y = 0, Double_t z = 0, TRotMatrix* matrix = 0); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetId(UInt_t id); virtual voidSetLineAttributes()MENU ; virtual voidSetMatrix(TRotMatrix* matrix = 0); Bool_tSetMatrixOwner(Bool_t ownerShips = kTRUE); virtual voidSetNode(TVolume* node); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPosition(Double_t x = 0, Double_t y = 0, Double_t z = 0); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetVisibility(Int_t vis = 1)MENU ; virtual voidSetX(Double_t x); virtual voidSetXYZ(Double_t* xyz = 0); virtual voidSetY(Double_t y); virtual voidSetZ(Double_t z); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUpdatePosition(Option_t* option = """"); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVolumePosition.html:6982,Test,TestBit,6982,root/html528/TVolumePosition.html,https://root.cern,https://root.cern/root/html528/TVolumePosition.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,ator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; RooAbsData*_dataPointer to original input dataset; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; Bool_t_doOffsetApply interval value offset to control numeric precision?; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Double_t_evalCarry! carry of Kahan sum in evaluatePartition; Int_t_extSet! Number of designated set to calculated extended term; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*_funcPointer to original input function; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; pRooAbsTestStatistic*_gofArray! Array of sub-contexts representing part of the combined test statistic; RooAbsTestStatistic::GOFOpMode_gofOpModeOperation mode of test statistic instance; vector<RooFit::MPSplit>_gofSplitMode! GOF MP Split mode specified by component (when Auto is active); static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Bool_t_init! Is object initialized; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; pRooRealMPFE*_mpfeArray! Array of parallel execution frond ends; RooFit::MPSplit_mpinterlUse interleaving strategy rather than N-wise split for partioning of dataset for multiprocessor-split; Int_t_nCPUNumber of processors to use in parallel calculation mode; Int_t_nEventsTotal number of events i,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsTestStatistic.html:37742,test,test,37742,root/html602/RooAbsTestStatistic.html,https://root.cern,https://root.cern/root/html602/RooAbsTestStatistic.html,2,['test'],['test']
Testability,"ator that relies on asymptotic properties of the Profile Likelihood Ratio; the Neyman Construction classes with this class as a test statistic; the Hybrid Calculator class with this class as a test statistic. Function Members (Methods); public:. virtual~ProfileLikelihoodTestStat(); static TClass*Class(); virtual Double_tEvaluate(RooAbsData& data, RooArgSet& paramsOfInterest); virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::TestStatistic&RooStats::TestStatistic::operator=(const RooStats::TestStatistic&); RooStats::ProfileLikelihoodTestStatProfileLikelihoodTestStat(); RooStats::ProfileLikelihoodTestStatProfileLikelihoodTestStat(RooAbsPdf& pdf); RooStats::ProfileLikelihoodTestStatProfileLikelihoodTestStat(const RooStats::ProfileLikelihoodTestStat&); virtual boolRooStats::TestStatistic::PValueIsRightTail() const; virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; private:. const RooArgSet*fCachedBestFitParams; RooAbsData*fLastData; RooNLLVar*fNll; RooAbsPdf*fPdf; RooProfileLL*fProfile. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProfileLikelihoodTestStat(); Proof constructor. Do not use. ProfileLikelihoodTestStat(RooAbsPdf& pdf). virtual ~ProfileLikelihoodTestStat(); delete fRand;; delete fTestStatistic;. Double_t Evaluate(RooAbsData& data, RooArgSet& paramsOfInterest); Main interface to evaluate the test statistic on a dataset. const TString GetVarName() const; {return ""Profile Likelihood Ratio"";}. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: ProfileLikelihoodTestStat.h 36602 2010-11-11 16:52:13Z moneta $ » Last generated: 2010-11-25 07:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__ProfileLikelihoodTestStat.html:2101,test,test,2101,root/html528/RooStats__ProfileLikelihoodTestStat.html,https://root.cern,https://root.cern/root/html528/RooStats__ProfileLikelihoodTestStat.html,1,['test'],['test']
Testability,"ator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooLinTransBinning Linear transformation of binning specification; RooLinearVar Lvalue linear transformation function ; RooLinkedList Doubly linked list for storage of RooAbsArg objects; RooLinkedListElem Element of RooLinkedList container class; RooLinkedListIter Iterator for RooLinkedList container class; RooList TList with extra support for Option_t associations; RooListProxy Proxy class for a RooArgList; RooLognormal log-normal PDF; RooMCIntegrator VEGAS based multi-dimensional numerical integration engine; RooMCStudy A general purpose toy Monte Carlo study manager; RooMPSentinel Singleton class that terminate MP server processes when parent exists; RooMapCatEntry Utility class, holding a map expression from a index label regexp to a RooCatType; RooMappedCategory Index variable, derived from another index using pattern-matching based mapping; RooMappedCategory::Entry Map cat entry definition; RooMath math utility routines; RooMinimizer RooFit interface to ROOT::Fit::Fitter; RooMinimizerFcn ; RooMinuit RooFit minimizer based on MINUIT; RooMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooMomentMorph Your description goes here...; RooMsgService RooFit Message Service Singleton class; RooMsgService::StreamConfig ; RooMultiBinomial Simultaneous pdf of N Binomial distributions with associated efficiency functions; RooMultiCatIter Iterator over all state permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:37692,log,log-normal,37692,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,4,['log'],['log-normal']
Testability,"ator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooLinTransBinning Linear transformation of binning specification; RooLinearVar Lvalue linear transformation function; RooLinkedList Doubly linked list for storage of RooAbsArg objects; RooLinkedListElem Element of RooLinkedList container class; RooLinkedListIter Iterator for RooLinkedList container class; RooList TList with extra support for Option_t associations; RooListProxy Proxy class for a RooArgList; RooLognormal log-normal PDF; RooMCIntegrator VEGAS based multi-dimensional numerical integration engine; RooMCStudy A general purpose toy Monte Carlo study manager; RooMPSentinel Singleton class that terminate MP server processes when parent exists; RooMapCatEntry Utility class, holding a map expression from a index label regexp to a RooCatType; RooMappedCategory Index variable, derived from another index using pattern-matching based mapping; RooMappedCategory::Entry Map cat entry definition; RooMath math utility routines; RooMinimizer RooFit interface to ROOT::Fit::Fitter; RooMinimizerFcn ; RooMinuit RooFit minimizer based on MINUIT; RooMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooMomentMorph Your description goes here...; RooMsgService RooFit Message Service Singleton class; RooMsgService::StreamConfig ; RooMultiBinomial Simultaneous pdf of N Binomial distributions with associated efficiency functions; RooMultiCatIter Iterator over all state permutations of a list of categories; RooMultiCategory Product operator for categories; RooMultiGenFunction Export RooAbsReal as functor; RooMultiVarGau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassIndex.html:35808,log,log-normal,35808,root/html602/ClassIndex.html,https://root.cern,https://root.cern/root/html602/ClassIndex.html,2,['log'],['log-normal']
Testability,"ator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNewChainDlg.html:22074,Test,TestBit,22074,doc/master/classTNewChainDlg.html,https://root.cern,https://root.cern/doc/master/classTNewChainDlg.html,338,['Test'],"['TestBit', 'TestBits']"
Testability,"ator= ; (; const LogLikelihoodFCN< DerivFunType, ModelFunType > & ; rhs). inline . Assignment operator. ; Definition at line 99 of file LogLikelihoodFCN.h. ◆ Type(). template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . virtual BaseObjFunction::Type_t ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::Type ; (; ); const. inlinevirtual . get type of fit method function ; Reimplemented from ROOT::Math::BasicFitMethodFunction< DerivFunType >.; Definition at line 134 of file LogLikelihoodFCN.h. ◆ UseSumOfWeightSquare(). template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . void ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::UseSumOfWeightSquare ; (; bool ; on = true). inline . Definition at line 139 of file LogLikelihoodFCN.h. Member Data Documentation. ◆ fExecutionPolicy. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . ::ROOT::EExecutionPolicy ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::fExecutionPolicy. private . Execution policy. ; Definition at line 176 of file LogLikelihoodFCN.h. ◆ fGrad. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . std::vector<double> ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::fGrad. mutableprivate . for derivatives ; Definition at line 174 of file LogLikelihoodFCN.h. ◆ fIsExtended. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . bool ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::fIsExtended. private . flag for indicating if likelihood is extended ; Definition at line 168 of file LogLikelihoodFCN.h. ◆ fNEffPoints. template<class DerivFunType , class ModelFunType = ROOT::Math::IParamMultiFunction> . unsigned int ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >::fNEffPoints. mutableprivate . number of effective points used in the fit ; Definition at line 172 of file LogLikelihoodFCN.h. ◆ fWeight. tem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html:12877,Log,LogLikelihoodFCN,12877,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN.html,1,['Log'],['LogLikelihoodFCN']
Testability,"ator=(const RooStats::SimpleInterval& other); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetConfidenceLevel(Double_t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; RooStats::SimpleIntervalSimpleInterval(const char* name = 0); RooStats::SimpleIntervalSimpleInterval(const RooStats::SimpleInterval&); RooStats::SimpleIntervalSimpleInterval(const RooStats::SimpleInterval& other, const char* name); RooStats::SimpleIntervalSimpleInterval(const char* name, const RooRealVar& var, Double_t lower, Double_t upper, Double_t cl); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Double_tUpperLimit(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__SimpleInterval.html:5592,Test,TestBit,5592,root/html602/RooStats__SimpleInterval.html,https://root.cern,https://root.cern/root/html602/RooStats__SimpleInterval.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ator=(const TPoints3DABC&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidPaintPoints(int, float*, const char*); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSetAnyColumn(const Char_t* anyName, TTable3Points::EPointDirection indx); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Int_tSetKeyByIndx(Int_t); virtual Int_tSetKeyByValue(Int_t); virtual Int_tTTablePoints::SetLastPosition(Int_t idx); virtual Int_tTPoints3DABC::SetNextPoint(Float_t x, Float_t y, Float_t z); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTTablePoints::SetOption(Option_t*); virtual Int_tTTablePoints::SetPoint(Int_t, Float_t, Float_t, Float_t); virtual Int_tTTablePoints::SetPoints(Int_t, Float_t*, Option_t*); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetXColumn(const Char_t* xName); virtual voidSetYColumn(const Char_t* yName); virtual voidSetZColumn(const Char_t* zName); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTTablePoints::Size() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTable3Points.html:8545,Test,TestBit,8545,root/html530/TTable3Points.html,https://root.cern,https://root.cern/root/html530/TTable3Points.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,atrix.cxx;  SVWorkingSet.cxx;  TActivation.cxx;  TActivationChooser.cxx;  TActivationIdentity.cxx;  TActivationRadial.cxx;  TActivationReLU.cxx;  TActivationSigmoid.cxx;  TActivationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  efficienciesMulticlass.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulev,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:92666,Test,TestCuda,92666,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['Test'],['TestCuda']
Testability,atrix.cxx;  SVWorkingSet.cxx;  TActivation.cxx;  TActivationChooser.cxx;  TActivationIdentity.cxx;  TActivationRadial.cxx;  TActivationReLU.cxx;  TActivationSigmoid.cxx;  TActivationTanh.cxx;  Timer.cxx;  TNeuron.cxx;  TNeuronInput.cxx;  TNeuronInputAbs.cxx;  TNeuronInputChooser.cxx;  TNeuronInputSqSum.cxx;  TNeuronInputSum.cxx;  Tools.cxx;  TransformationHandler.cxx;  TSpline1.cxx;  TSpline2.cxx;  TSynapse.cxx;  Types.cxx;  VariableDecorrTransform.cxx;  VariableGaussTransform.cxx;  VariableIdentityTransform.cxx;  VariableImportance.cxx;  VariableInfo.cxx;  VariableNormalizeTransform.cxx;  VariablePCATransform.cxx;  VariableRearrangeTransform.cxx;  VariableTransform.cxx;  VariableTransformBase.cxx;  VarTransformHandler.cxx;  Volume.cxx;  ► test;  ► DNN;  TestActivationFunctions.cxx;  TestActivationFunctions.h;  TestActivationFunctionsCpu.cxx;  TestActivationFunctionsCuda.cxx;  TestBackpropagation.cxx;  TestBackpropagation.h;  TestBackpropagationCpu.cxx;  TestBackpropagationCuda.cxx;  TestCuda.cxx;  TestDataLoader.cxx;  TestDataLoader.h;  TestDataLoaderCpu.cxx;  TestDataLoaderCuda.cxx;  TestDerivatives.cxx;  TestDerivatives.h;  TestDerivativesCpu.cxx;  TestDerivativesCuda.cxx;  TestLossFunctions.cxx;  TestLossFunctions.h;  TestLossFunctionsCpu.cxx;  TestLossFunctionsCuda.cxx;  TestMatrixArithmetic.h;  TestMatrixArithmeticCpu.cxx;  TestMatrixArithmeticCuda.cxx;  TestMinimization.cxx;  TestMinimization.h;  TestMinimizationCpu.cxx;  TestMinimizationCuda.cxx;  Utility.h;  ► tmvagui;  ► inc;  ► TMVA;  annconvergencetest.h;  BDT.h;  BDT_Reg.h;  BDTControlPlots.h;  BoostControlPlots.h;  compareanapp.h;  correlations.h;  correlationscatters.h;  correlationscattersMultiClass.h;  correlationsMultiClass.h;  CorrGui.h;  CorrGuiMultiClass.h;  deviations.h;  efficiencies.h;  likelihoodrefs.h;  MovieMaker.h;  mvaeffs.h;  mvas.h;  mvasMulticlass.h;  mvaweights.h;  network.h;  paracoor.h;  PlotFoams.h;  probas.h;  regression_averagedevs.h;  rulevis.h;  rulevisCorr.h;  rulevisHists.h; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:94463,Test,TestCuda,94463,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['Test'],['TestCuda']
Testability,atrixFfwd.h;  StaticCheck.h;  SVector.h;  SVector.icc;  UnaryOperators.h;  LinkDef.h;  LinkDefAll.h;  LinkDefD32.h;  ► src;  Dict.h;  ► test;  kalman.C;  matrix_op.h;  matrix_util.h;  matrixOperations.C;  stressKalman.cxx;  stressOperations.cxx;  testInversion.cxx;  testIO.cxx;  testKalman.cxx;  testOperations.cxx;  testSMatrix.cxx;  TestTimer.h;  Track.h;  TrackLinkDef.h;  ► splot;  ► inc;  LinkDef.h;  TSPlot.h;  ► src;  TSPlot.cxx;  ► unuran;  ► inc;  LinkDef.h;  TUnuran.h;  TUnuranBaseDist.h;  TUnuranContDist.h;  TUnuranDiscrDist.h;  TUnuranEmpDist.h;  TUnuranMultiContDist.h;  TUnuranSampler.h;  ► src;  TUnuran.cxx;  TUnuranContDist.cxx;  TUnuranDiscrDist.cxx;  TUnuranEmpDist.cxx;  TUnuranMultiContDist.cxx;  TUnuranSampler.cxx;  UnuranDistr.h;  UnuranDistrAdapter.h;  UnuranRng.h;  ► test;  unuranDiscrete.cxx;  unuranDistr.cxx;  unuranHist.cxx;  unuranMulti2D.cxx;  unuranMultiDim.cxx;  unuranSimple.cxx;  ► vdt;  ► include;  ► vdt;  asin.h;  atan.h;  atan2.h;  cos.h;  exp.h;  inv.h;  log.h;  sin.h;  sincos.h;  sqrt.h;  tan.h;  vdtcore_common.h;  vdtMath.h;  ► tests;  stressVdt.cxx;  ► misc;  ► memstat;  ► inc;  LinkDef.h;  TMemStat.h;  TMemStatBacktrace.h;  TMemStatDef.h;  TMemStatHelpers.h;  TMemStatHook.h;  TMemStatMng.h;  ► src;  TMemStat.cxx;  TMemStatBacktrace.cxx;  TMemStatHelpers.cxx;  TMemStatHook.cxx;  TMemStatMng.cxx;  ► test;  leak_test.C;  run.C;  ► table;  ► inc;  LinkDef.h;  tableDescriptor.h;  TCernLib.h;  TChair.h;  TColumnView.h;  TDataSet.h;  TDataSetIter.h;  TDsKey.h;  TFileIter.h;  TFileSet.h;  TGenericTable.h;  TIndexTable.h;  TObjectSet.h;  TPoints3D.h;  TPointsArray3D.h;  TPolyLineShape.h;  TResponseTable.h;  TTable.h;  TTable3Points.h;  TTableDescriptor.h;  TTableIter.h;  TTableMap.h;  TTablePadView3D.h;  TTablePoints.h;  TTableSorter.h;  Ttypes.h;  TVolume.h;  TVolumePosition.h;  TVolumeView.h;  TVolumeViewIter.h;  ► src;  TCernLib.cxx;  TChair.cxx;  TColumnView.cxx;  TDataSet.cxx;  TDataSetIter.cxx;  TDsKey.cxx;  TFileIter.cxx;  TFileSet.c,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:58135,log,log,58135,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['log'],['log']
Testability,"atrixManages a detector rotation matrix ;  CTRSA_fun;  CTRWLock;  CTS3HTTPRequest;  CTS3WebFile;  CTSapDBResult;  CTSapDBRow;  CTSapDBServer;  CTSAXParserTSAXParser is a subclass of TXMLParser, it is a wraper class to libxml library ;  CTSecContext;  CTSecContextCleanup;  CTSelectorA TSelector object is used by the TTree::Draw, TTree::Scan, TTree::Process to navigate in a TTree and make selections ;  CTSelectorDrawA specialized TSelector for TTree::Draw ;  CTSelectorEntriesThe class is derived from the ROOT class TSelector ;  CTSelectorListA TList derived class that makes sure that objects added to it are not linked to the currently open file (like histograms, eventlists and trees) ;  CTSelectorScalarNamed scalar type, based on Long64_t, streamable, storable and mergable ;  CTSelEventSelector for PROOF I/O benchmark test ;  CTSelEventGenSelector for event file generation ;  CTSelHandleDataSetPROOF selector for file cache release ;  CTSelHistPROOF selector for CPU-intensive benchmark test ;  CTSelVerifyDataSetSelector to verify dataset in parallel on workers ;  CTSemaphore;  CTSeqCollectionSequenceable collection abstract base class ;  CTServerSocket;  CTSessionDescription;  CTSessionFrame;  CTSessionInputFrame;  CTSessionLogView;  CTSessionOutputFrame;  CTSessionQueryFrame;  CTSessionServerFrame;  CTSessionViewer;  CTShapeThis is the base class for all geometry shapes ;  CTShutdownTimer;  CTSignalHandler;  CTSimpleAnalysisA TSimpleAnalysis object creates histograms from a TChain ;  CTSlaveClass describing a PROOF worker server ;  CTSlaveInfo;  CTSlaveLiteVersion of TSlave for local worker servers ;  CTSliderA specialized TPad including a TSliderBox object ;  CTSliderBoxThe moving box in a TSlider ;  CTSocket;  CTSortedListA sorted doubly linked list ;  CTSpectrumAdvanced Spectra Processing ;  CTSpectrum2Advanced 2-dimensional spectra processing ;  CTSpectrum2FitAdvanced 2-dimensional spectra fitting functions ;  CTSpectrum2PainterTwo-dimensional graphics function ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:203574,test,test,203574,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,3,['test'],['test']
Testability,"atrixTSym<float> Template of Symmetric Hilbert Matrix class; THistPainter Helper class to draw histograms; THnSparse Interfaces of sparse n-dimensional histogram; THnSparseArrayChunk chunks of linearized bins; THnSparseT<TArrayC> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayD> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayF> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayI> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayL> Sparse n-dimensional histogram with templated content; THnSparseT<TArrayS> Sparse n-dimensional histogram with templated content; THostAuth Class providing host specific authentication information; THtml Convert class(es) into HTML file(s); THtml::TFileDefinition helper class to determine a class's source files; THtml::TFileSysDB instance of file system data; THtml::TFileSysDir an directory of the local file system; THtml::TFileSysEntry an entry of the local file system; THtml::TFileSysRoot an root directory of the local file system; THtml::THelperBase a helper object's base class; THtml::TModuleDefinition helper class to determine a class's module; THtml::TPathDefinition helper class to determine directory layouts; TImage Abstract image class; TImageDump create image in batch mode; TImagePalette Color Palette for value -> color conversion; TImagePlugin base class for different image format handlers(plugins); TIndArray ; TIndexTable ""Index"" array for TTable object; TIndexTable::iterator ; TInetAddress Represents an Internet Protocol (IP) address; TInspectCanvas The canvas Inspector; TInspectorImp GUI independent inspector abc; TInterpreter ABC defining interface to generic interpreter; TIsAProxy ; TIter Iterator wrapper; TIterator Iterator abstract base class; TKDE One dimensional semi-parametric Kernel Density Estimation; TKDTree<int,double> KD tree; TKDTree<int,float> KD tree; TKDTreeBinning ; TKey Header description of a logical record on file.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:96583,log,logical,96583,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,1,['log'],['logical']
Testability,"ats, TTreePlayer, TTreeReader, TParallelCoord, TParallelCoordRange, TParallelCoordSelect, TParallelCoordVar, TSpider, TTreeViewer, TTVRecord, TTVSession, iterplugin, h1analysis, h1analysisTreeReader, PyROOT::RegulatorCleanup, ROOT::Internal::TCheckHashRecursiveRemoveConsistency, and ROOT::Experimental::Internal::RKeyBlob.; Definition at line 894 of file TObject.cxx. ◆ StreamerNVirtual(). void TObject::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 243 of file TObject.h. ◆ SysError(). void TObject::SysError ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue system error message. ; Use ""location"" to specify the method where the system error occurred. Accepts standard printf formatting arguments. ; Definition at line 1007 of file TObject.cxx. ◆ TestBit(). R__ALWAYS_INLINE Bool_t TObject::TestBit ; (; UInt_t ; f); const. inline . Definition at line 199 of file TObject.h. ◆ TestBits(). Int_t TObject::TestBits ; (; UInt_t ; f); const. inline . Definition at line 200 of file TObject.h. ◆ UseCurrentStyle(). void TObject::UseCurrentStyle ; (; ). virtual . Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ; Reimplemented in TCanvas, TPad, TFrame, TPaveStats, TPaveText, TAxis3D, TGraph, TH1, and TTree.; Definition at line 807 of file TObject.cxx. ◆ Warning(). void TObject::Warning ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue warning message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at line 979 of file TObject.cxx. ◆ Write() [1/2]. Int_t TObject::Write ; (; const char * ; name = nullptr, . Int_t ; option = 0, . Int_t ; bufsize = 0 . ). virtual . Write this object to the current directory. ; For more see the const version of this method. ; Reimplemented in TSQLFile, TXMLFile, TDir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:115416,Test,TestBits,115416,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['Test'],['TestBits']
Testability,"ats::DebuggingTestStat. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file. viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOSTATS; » RooStats::DebuggingTestStat. class RooStats::DebuggingTestStat: public RooStats::TestStatistic. DebuggingTestStat is a simple implementation of the DistributionCreator interface used for debugging.; The sampling distribution is uniformly random between [0,1] and is INDEPENDENT of the data. So it is not useful; for true statistical tests, but it is useful for debugging. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~DebuggingTestStat(); static TClass*Class(); virtual Double_tEvaluate(RooAbsData&, RooArgSet&); virtual const RooAbsArg*GetTestStatistic() const; virtual const TStringRooStats::TestStatistic::GetVarName() const; virtual TClass*IsA() const; RooStats::DebuggingTestStat&operator=(const RooStats::DebuggingTestStat&); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; private:. TRandom*fRand; RooRealVar*fTestStatistic. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~DebuggingTestStat(); delete fRand;; delete fTestStatistic;. Double_t Evaluate(RooAbsData& , RooArgSet& ); Main interface to evaluate the test statistic on a dataset. const RooAbsArg* GetTestStatistic() const; Get the TestStatistic. {return fTestStatistic;}. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: DebuggingTestStat.h 31276 2009-11-18 15:06:42Z moneta $ » Last generated: 2009-12-07 13:49; This page has been automatically generated. For comments or suggestions regarding the doc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__DebuggingTestStat.html:966,Test,TestStatistic,966,root/html526/RooStats__DebuggingTestStat.html,https://root.cern,https://root.cern/root/html526/RooStats__DebuggingTestStat.html,1,['Test'],['TestStatistic']
Testability,"ats::SamplingDistributionSamplingDistribution(); RooStats::SamplingDistributionSamplingDistribution(const RooStats::SamplingDistribution&); RooStats::SamplingDistributionSamplingDistribution(const char* name, const char* title, const char* varName = 0); RooStats::SamplingDistributionSamplingDistribution(const char* name, const char* title, vector<Double_t>& samplingDist, const char* varName = 0); RooStats::SamplingDistributionSamplingDistribution(const char* name, const char* title, vector<Double_t>& samplingDist, vector<Double_t>& sampleWeights, const char* varName = 0); RooStats::SamplingDistributionSamplingDistribution(const char* name, const char* title, RooDataSet& dataSet, const char* columnName = 0, const char* varName = 0); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__SamplingDistribution.html:6335,Test,TestBit,6335,root/html602/RooStats__SamplingDistribution.html,https://root.cern,https://root.cern/root/html602/RooStats__SamplingDistribution.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; virtual TClass * IsA () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from ROOT::Experimental::REveSecondarySelectable;  REveSecondarySelectable ()=default;  ; virtual ~REveSecondarySelectable ();  ; Bool_t GetAlwaysSecSelect () const;  ; SelectionSet_t & RefHighlightedSet ();  ; SelectionSet_t & RefSelectedSet ();  ; void SetAlwaysSecSelect (Bool_t f);  . Protected Attributes; Bool_t fDepthTest;  ; Line_t * fLastLine {nullptr};  ! ;  ; REveChunkManager fLinePlex;  ; REveChunkManager fMarkerPlex;  ; Bool_t fOwnLinesIds;  ; Bool_t fOwnMarkersIds;  ; Bool_t fRnrLines;  ; Bool_t fRnrMarkers;  ;  Protected Attributes inherited from ROOT::Experimental::REveEleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html:18287,Assert,AssertBBox,18287,doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,1,['Assert'],['AssertBBox']
Testability,atus of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*RooAbsTestStatistic::_funcPointer to original input function; RooAbsReal*_funcClonePointer to internal clone of input function; RooArgSet*_funcCloneSetSet owning all components of internal clone of input function; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooArgSet*_normSetPointer to set with observables used for normalization ; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_t_ownDataDo we own the dataset; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxyRooAbsTestStatistic::_paramSetParameters of the test statistic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooArgSet*_projDepsSet of projected observable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; TListRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; Int_tRooAbsTestStatistic::_simCountTotal number of component p.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsOptTestStatistic.html:33508,test,test,33508,root/html526/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html526/RooAbsOptTestStatistic.html,2,['test'],['test']
Testability,"atusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVDUnfold.h>. Inheritance diagram for TSVDUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVDUnfold() [1/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ; Definition at line 75 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [2/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . TH2D * ; Bcov, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Default constructor Initialisation of TSVDUnfold User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. ; Definition at line 127 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [3/3]. TSVDUnfold::TSVDUnfold ; (; const TSVDUnfold & ; other). Copy constructor. ; Definition at line 171 of file TSVDUnfold.cxx. ◆ ~TSVDUnfold(). TSVDUnfold::~TSVDUnfold ; (; ). override . Destructor. ; Definition at line 196 of file TSVDUnfold.cxx. Member Function Documentation. ◆ Class(). static TClass * TSVDUnfold::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TSVDUnfold::Class_Name ; (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSVDUnfold.html:17864,test,test,17864,doc/master/classTSVDUnfold.html,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html,1,['test'],['test']
Testability,"atusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; TList*TVirtualMonitoringWriter::fTmpOpenPhasesTo store open phases when there is not yet an object. private:. TSQLServer*fDBSQL database where to write; Long64_tfMaxBulkSizeMax packet size for insertions; TStringfTableSQL table name; Bool_tfVerboseVerbosity toggle. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSQLMonitoringWriter(const char* serv, const char* user, const char* pass, const char* table); Constructor. ~TSQLMonitoringWriter(); Destructor. Bool_t SendParameters(TList* values, const char* ); Register query log using the information in the list which is in the form; TParameter(<par>,<value>) or TNamed(<name>,<string>). For bulk sending,; the first entry in the list is an TObjString defining the variable names; in the format; VARname1,VARname2,...; while the other entries are TObjStrings with the multiplets to be sent; VARvalue1,VARvalue2,... The string 'opt' allows the following additional control:; table=[<db>.]<table> allows to insert to a different table from the; one defined at construction (change is not; persistent); if <db> is not specified, the same; db defined at cinstruction is used.; bulk Do a bulk insert; More options can be given concurrently, comma-separated .; The specified table must already have been created in the DB. TSQLMonitoringWriter(const TSQLMonitoringWriter& ). TSQLMonitoringWriter& operator=(const TSQLMonitoringWriter& ). void Verbose(Bool_t onoff); { fVerbose = onoff; }. » Author: J.F. Grosse-Oetringhaus, G.Ganis » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSQLMonitoringWriter.html:7655,log,log,7655,root/html604/TSQLMonitoringWriter.html,https://root.cern,https://root.cern/root/html604/TSQLMonitoringWriter.html,1,['log'],['log']
Testability,"au_xm2 (double x, double xi=1, double x0=0);  Second moment of the truncated Landau distribution. ;  ; template<class T > ; T Lmag (const SVector< T, 4 > &rhs);  Lmag: Minkowski Lorentz-Vector norm (only for 4-dim vectors) Length of a vector Lorentz-Vector: \( |\vec{v}| = \sqrt{v_0^2 - v_1^2 - v_2^2 -v_3^2} \). ;  ; template<class A , class T > ; T Lmag (const VecExpr< A, T, 4 > &rhs);  ; template<class T > ; T Lmag2 (const SVector< T, 4 > &rhs);  Lmag2: Square of Minkowski Lorentz-Vector norm (only for 4D Vectors) Template to compute \( |\vec{v}|^2 = v_0^2 - v_1^2 - v_2^2 -v_3^2 \). ;  ; template<class A , class T > ; T Lmag2 (const VecExpr< A, T, 4 > &rhs);  ; double log1p (double x);  declarations for functions which are not implemented by some compilers ;  ; double lognormal_cdf (double x, double m, double s, double x0=0);  Cumulative distribution function of the lognormal distribution (lower tail). ;  ; double lognormal_cdf_c (double x, double m, double s, double x0=0);  Complement of the cumulative distribution function of the lognormal distribution (upper tail). ;  ; template<class char_t , class traits_t > ; std::basic_ios< char_t, traits_t > & machine_readable (std::basic_ios< char_t, traits_t > &ios);  ; template<class T , unsigned int D> ; T Mag (const SVector< T, D > &rhs);  Vector magnitude (Euclidean norm) Compute : \( |\vec{v}| = \sqrt{\sum_iv_i^2} \). ;  ; template<class A , class T , unsigned int D> ; T Mag (const VecExpr< A, T, D > &rhs);  ; template<class T , unsigned int D> ; T Mag2 (const SVector< T, D > &rhs);  Vector magnitude square Template to compute \(|\vec{v}|^2 = \sum_iv_i^2 \). ;  ; template<class A , class T , unsigned int D> ; T Mag2 (const VecExpr< A, T, D > &rhs);  ; template<class T > ; const T Maximum (const T &lhs, const T &rhs);  maximum. ;  ; double minfunction (const std::vector< double > &x);  function to return the function values at point x ;  ; TVectorD mingradfunction (TVectorD y);  function to return the gradient values a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math.html:60362,log,lognormal,60362,doc/master/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math.html,2,['log'],['lognormal']
Testability,"ause the viewer to suspend redraws etc, and after the EndScene the viewer will reset the camera to frame the new scene and redraw. [x3d viewer does not support changing of scenes - objects added after the first Open/CloseScene pair will be ignored.]. Filling TBuffer3D and Adding to Viewer; The viewers behind the TVirtualViewer3D interface differ greatly in their capabilities e.g. Some know how to draw certain shapes natively (e.g. spheres/tubes in OpenGL) - others always require a raw tessellation description of points/lines/segments.; Some need the 3D object positions in the global frame, others can cope with local frames + a translation matrix - which can give considerable performance benefits. To cope with these situations the object buffer is filled out in negotiation with the viewer. TBuffer3D classes are conceptually divided into enumerated sections Core, BoundingBox, Raw etc (see TBuffer3D.h for more details). . The SectionsValid() / SetSectionsValid / ClearSectionsValid() methods of TBuffer3D are used to test/set/clear these section valid flags.; The sections found in TBuffer3D (Core/BoundingBox/Raw Sizes/Raw) are sufficient to describe any tessellated shape in a generic fashion. An additional ShapeSpecific section in derived shape specific classes allows a more abstract shape description (""a sphere of inner radius x, outer radius y""). This enables a viewer which knows how to draw (tessellate) the shape itself to do so, which can bring considerable performance and quality benefits, while providing a generic fallback suitable for all viewers.; The rules for client negotiation with the viewer are:. If suitable specialized TBuffer3D class exists, use it, otherwise use TBuffer3D.; Complete the mandatory Core section.; Complete the ShapeSpecific section if applicable.; Complete the BoundingBox if you can.; Pass this buffer to the viewer using one of the AddObject() methods - see below. If the viewer requires more sections to be completed (Raw/RawSizes) AddObject()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualViewer3D.html:3335,test,test,3335,doc/master/classTVirtualViewer3D.html,https://root.cern,https://root.cern/doc/master/classTVirtualViewer3D.html,1,['test'],['test']
Testability,"aussian; 860 if (f1 == nullptr) {; 861 f1 = (TF1*)gROOT->GetFunction(""gaus"");; 862 if (f1 == nullptr) f1 = new TF1(""gaus"",""gaus"",innerAxis.GetXmin(),innerAxis.GetXmax());; 863 else f1->SetRange(innerAxis.GetXmin(),innerAxis.GetXmax());; 864 }; 865 Int_t npar = f1->GetNpar();; 866 if (npar <= 0) return;; 867 Double_t *parsave = new Double_t[npar];; 868 f1->GetParameters(parsave);; 869 ; 870 if (arr) {; 871 arr->SetOwner();; 872 arr->Expand(npar + 1);; 873 }; 874 ; 875 //Create one histogram for each function parameter; 876 Int_t ipar;; 877 TH1D **hlist = new TH1D*[npar];; 878 char *name = new char[2000];; 879 char *title = new char[2000];; 880 const TArrayD *bins = outerAxis.GetXbins();; 881 // outer axis boundaries used for creating reported histograms are different; 882 // than the limits used in the projection loop (firstbin,lastbin); 883 Int_t firstOutBin = outerAxis.TestBit(TAxis::kAxisRange) ? std::max(firstbin,1) : 1;; 884 Int_t lastOutBin = outerAxis.TestBit(TAxis::kAxisRange) ? std::min(lastbin,outerAxis.GetNbins() ) : outerAxis.GetNbins();; 885 Int_t nOutBins = lastOutBin-firstOutBin+1;; 886 // merge bins if use nstep > 1 and fixed bins; 887 if (bins->fN == 0) nOutBins /= nstep;; 888 for (ipar=0;ipar<npar;ipar++) {; 889 snprintf(name,2000,""%s_%d"",GetName(),ipar);; 890 snprintf(title,2000,""Fitted value of par[%d]=%s"",ipar,f1->GetParName(ipar));; 891 delete gDirectory->FindObject(name);; 892 if (bins->fN == 0) {; 893 hlist[ipar] = new TH1D(name,title, nOutBins, outerAxis.GetBinLowEdge(firstOutBin), outerAxis.GetBinUpEdge(lastOutBin));; 894 } else {; 895 hlist[ipar] = new TH1D(name,title, nOutBins, &bins->fArray[firstOutBin-1]);; 896 }; 897 hlist[ipar]->GetXaxis()->SetTitle(outerAxis.GetTitle());; 898 if (arr); 899 (*arr)[ipar] = hlist[ipar];; 900 }; 901 snprintf(name,2000,""%s_chi2"",GetName());; 902 delete gDirectory->FindObject(name);; 903 TH1D *hchi2 = nullptr;; 904 if (bins->fN == 0) {; 905 hchi2 = new TH1D(name,""chisquare"", nOutBins, outerAxis.GetBinLowEdg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:34001,Test,TestBit,34001,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['Test'],['TestBit']
Testability,ave the configuration ; : 13 | 28310.5 26871.8 0.0196662 0.00176724 44695.4 0; : 14 Minimum Test error found - save the configuration ; : 14 | 28043.7 26610.8 0.019761 0.00176915 44464.7 0; : 15 Minimum Test error found - save the configuration ; : 15 | 27781.4 26354.5 0.0197825 0.0017915 44466.6 0; : 16 Minimum Test error found - save the configuration ; : 16 | 27524.2 26104.3 0.0196926 0.00175551 44600.3 0; : 17 Minimum Test error found - save the configuration ; : 17 | 27271.4 25860.7 0.0197778 0.00177907 44447.7 0; : 18 Minimum Test error found - save the configuration ; : 18 | 27023.6 25622.6 0.0197311 0.00176281 44522.9 0; : 19 Minimum Test error found - save the configuration ; : 19 | 26780.6 25388.8 0.0197339 0.00176163 44513.1 0; : 20 Minimum Test error found - save the configuration ; : 20 | 26542.7 25157.4 0.0198818 0.0018763 44431 0; : 21 Minimum Test error found - save the configuration ; : 21 | 26311 24925.1 0.0199584 0.00175652 43951.6 0; : 22 Minimum Test error found - save the configuration ; : 22 | 26076.9 24700.5 0.0197873 0.00176359 44385.9 0; : 23 Minimum Test error found - save the configuration ; : 23 | 25845.4 24483.8 0.0196702 0.00176161 44671.3 0; : 24 Minimum Test error found - save the configuration ; : 24 | 25624.1 24264.1 0.0196853 0.00176075 44631.5 0; : 25 Minimum Test error found - save the configuration ; : 25 | 25402.4 24046.8 0.0199052 0.00182376 44244.2 0; : 26 Minimum Test error found - save the configuration ; : 26 | 25181.1 23835.2 0.0199605 0.00176778 43973.7 0; : 27 Minimum Test error found - save the configuration ; : 27 | 24965.1 23625.2 0.0197673 0.00175956 44425.4 0; : 28 Minimum Test error found - save the configuration ; : 28 | 24751.3 23417.4 0.0197715 0.00178318 44473.3 0; : 29 Minimum Test error found - save the configuration ; : 29 | 24538.1 23214.7 0.019691 0.0017711 44643.2 0; : 30 Minimum Test error found - save the configuration ; : 30 | 24332.4 23009.4 0.0197207 0.00177726 44584.5 0; : 31 Minimum Test error fou,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:13527,Test,Test,13527,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 14 | 28043.7 26610.8 0.019761 0.00176915 44464.7 0; : 15 Minimum Test error found - save the configuration ; : 15 | 27781.4 26354.5 0.0197825 0.0017915 44466.6 0; : 16 Minimum Test error found - save the configuration ; : 16 | 27524.2 26104.3 0.0196926 0.00175551 44600.3 0; : 17 Minimum Test error found - save the configuration ; : 17 | 27271.4 25860.7 0.0197778 0.00177907 44447.7 0; : 18 Minimum Test error found - save the configuration ; : 18 | 27023.6 25622.6 0.0197311 0.00176281 44522.9 0; : 19 Minimum Test error found - save the configuration ; : 19 | 26780.6 25388.8 0.0197339 0.00176163 44513.1 0; : 20 Minimum Test error found - save the configuration ; : 20 | 26542.7 25157.4 0.0198818 0.0018763 44431 0; : 21 Minimum Test error found - save the configuration ; : 21 | 26311 24925.1 0.0199584 0.00175652 43951.6 0; : 22 Minimum Test error found - save the configuration ; : 22 | 26076.9 24700.5 0.0197873 0.00176359 44385.9 0; : 23 Minimum Test error found - save the configuration ; : 23 | 25845.4 24483.8 0.0196702 0.00176161 44671.3 0; : 24 Minimum Test error found - save the configuration ; : 24 | 25624.1 24264.1 0.0196853 0.00176075 44631.5 0; : 25 Minimum Test error found - save the configuration ; : 25 | 25402.4 24046.8 0.0199052 0.00182376 44244.2 0; : 26 Minimum Test error found - save the configuration ; : 26 | 25181.1 23835.2 0.0199605 0.00176778 43973.7 0; : 27 Minimum Test error found - save the configuration ; : 27 | 24965.1 23625.2 0.0197673 0.00175956 44425.4 0; : 28 Minimum Test error found - save the configuration ; : 28 | 24751.3 23417.4 0.0197715 0.00178318 44473.3 0; : 29 Minimum Test error found - save the configuration ; : 29 | 24538.1 23214.7 0.019691 0.0017711 44643.2 0; : 30 Minimum Test error found - save the configuration ; : 30 | 24332.4 23009.4 0.0197207 0.00177726 44584.5 0; : 31 Minimum Test error found - save the configuration ; : 31 | 24122.8 22810.9 0.0196876 0.00176879 44645.9 0; : 32 Minimum Test error fou,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:13639,Test,Test,13639,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 2 | 0.512732 0.499825 0.0771995 0.00657724 45311.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.477495 0.458718 0.0776312 0.00665553 45085.9 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.438338 0.418147 0.0780597 0.00669006 44837 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.407569 0.391703 0.0786075 0.00678976 44557.2 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.387736 0.373696 0.0792581 0.00678916 44156.9 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.373399 0.360485 0.0791536 0.00677002 44208.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 0.362792 0.352336 0.0796639 0.00682572 43933 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.353594 0.340526 0.0805399 0.00700876 43519 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.345712 0.336826 0.080966 0.0069933 43259.2 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.338399 0.329567 0.0802544 0.00691181 43630.9 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.333122 0.322325 0.0804981 0.00689735 43477.8 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.326577 0.317097 0.0800716 0.00688531 43724 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.320979 0.311994 0.080369 0.00694962 43585.2 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.316442 0.305918 0.0803736 0.00690045 43553.3 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.311672 0.301667 0.0807629 0.00695777 43357.4 0; : 17 Minimum Test error found - save the configuration ; : 17 | 0.306787 0.297289 0.0804752 0.00690149 43493.8 0; : 18 Minimum Test error found - save the configuration ; : 18 | 0.303107 0.295781 0.0805443 0.00693772 43474.3 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.300241 0.290359 0.0805629 0.00693546 43462 0; : 20 | 0.2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:15924,Test,Test,15924,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 28 | 24751.3 23417.4 0.0197715 0.00178318 44473.3 0; : 29 Minimum Test error found - save the configuration ; : 29 | 24538.1 23214.7 0.019691 0.0017711 44643.2 0; : 30 Minimum Test error found - save the configuration ; : 30 | 24332.4 23009.4 0.0197207 0.00177726 44584.5 0; : 31 Minimum Test error found - save the configuration ; : 31 | 24122.8 22810.9 0.0196876 0.00176879 44645.9 0; : 32 Minimum Test error found - save the configuration ; : 32 | 23919.8 22612.5 0.01973 0.00178692 44585.4 0; : 33 Minimum Test error found - save the configuration ; : 33 | 23719.7 22413.7 0.019891 0.00182506 44282.2 0; : 34 Minimum Test error found - save the configuration ; : 34 | 23516.3 22222.5 0.0206631 0.00186547 42558.4 0; : 35 Minimum Test error found - save the configuration ; : 35 | 23322.1 22028.2 0.0200826 0.00177554 43698.9 0; : 36 Minimum Test error found - save the configuration ; : 36 | 23123.9 21840 0.0197735 0.00177073 44437.6 0; : 37 Minimum Test error found - save the configuration ; : 37 | 22932.1 21651.2 0.0197273 0.00177446 44561.1 0; : 38 Minimum Test error found - save the configuration ; : 38 | 22740.7 21464.4 0.0197166 0.00177193 44581.5 0; : 39 Minimum Test error found - save the configuration ; : 39 | 22549.1 21282.9 0.0197213 0.00177445 44576 0; : 40 Minimum Test error found - save the configuration ; : 40 | 22363.6 21100 0.0197729 0.00177445 44448.2 0; : 41 Minimum Test error found - save the configuration ; : 41 | 22176.6 20921.1 0.0197131 0.00176514 44573.2 0; : 42 Minimum Test error found - save the configuration ; : 42 | 21994.9 20740.9 0.0197264 0.00176834 44548.1 0; : 43 Minimum Test error found - save the configuration ; : 43 | 21811.7 20564.6 0.0197476 0.00176764 44494 0; : 44 Minimum Test error found - save the configuration ; : 44 | 21631.5 20390.5 0.0198172 0.00177793 44347.7 0; : 45 Minimum Test error found - save the configuration ; : 45 | 21453.9 20217 0.0197313 0.00176795 44535.1 0; : 46 Minimum Test error found - s,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:15200,Test,Test,15200,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 29 | 24538.1 23214.7 0.019691 0.0017711 44643.2 0; : 30 Minimum Test error found - save the configuration ; : 30 | 24332.4 23009.4 0.0197207 0.00177726 44584.5 0; : 31 Minimum Test error found - save the configuration ; : 31 | 24122.8 22810.9 0.0196876 0.00176879 44645.9 0; : 32 Minimum Test error found - save the configuration ; : 32 | 23919.8 22612.5 0.01973 0.00178692 44585.4 0; : 33 Minimum Test error found - save the configuration ; : 33 | 23719.7 22413.7 0.019891 0.00182506 44282.2 0; : 34 Minimum Test error found - save the configuration ; : 34 | 23516.3 22222.5 0.0206631 0.00186547 42558.4 0; : 35 Minimum Test error found - save the configuration ; : 35 | 23322.1 22028.2 0.0200826 0.00177554 43698.9 0; : 36 Minimum Test error found - save the configuration ; : 36 | 23123.9 21840 0.0197735 0.00177073 44437.6 0; : 37 Minimum Test error found - save the configuration ; : 37 | 22932.1 21651.2 0.0197273 0.00177446 44561.1 0; : 38 Minimum Test error found - save the configuration ; : 38 | 22740.7 21464.4 0.0197166 0.00177193 44581.5 0; : 39 Minimum Test error found - save the configuration ; : 39 | 22549.1 21282.9 0.0197213 0.00177445 44576 0; : 40 Minimum Test error found - save the configuration ; : 40 | 22363.6 21100 0.0197729 0.00177445 44448.2 0; : 41 Minimum Test error found - save the configuration ; : 41 | 22176.6 20921.1 0.0197131 0.00176514 44573.2 0; : 42 Minimum Test error found - save the configuration ; : 42 | 21994.9 20740.9 0.0197264 0.00176834 44548.1 0; : 43 Minimum Test error found - save the configuration ; : 43 | 21811.7 20564.6 0.0197476 0.00176764 44494 0; : 44 Minimum Test error found - save the configuration ; : 44 | 21631.5 20390.5 0.0198172 0.00177793 44347.7 0; : 45 Minimum Test error found - save the configuration ; : 45 | 21453.9 20217 0.0197313 0.00176795 44535.1 0; : 46 Minimum Test error found - save the configuration ; : 46 | 21277.2 20045.6 0.0197489 0.00176953 44495.5 0; : 47 Minimum Test error found - s,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:15312,Test,Test,15312,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 33 | 23719.7 22413.7 0.019891 0.00182506 44282.2 0; : 34 Minimum Test error found - save the configuration ; : 34 | 23516.3 22222.5 0.0206631 0.00186547 42558.4 0; : 35 Minimum Test error found - save the configuration ; : 35 | 23322.1 22028.2 0.0200826 0.00177554 43698.9 0; : 36 Minimum Test error found - save the configuration ; : 36 | 23123.9 21840 0.0197735 0.00177073 44437.6 0; : 37 Minimum Test error found - save the configuration ; : 37 | 22932.1 21651.2 0.0197273 0.00177446 44561.1 0; : 38 Minimum Test error found - save the configuration ; : 38 | 22740.7 21464.4 0.0197166 0.00177193 44581.5 0; : 39 Minimum Test error found - save the configuration ; : 39 | 22549.1 21282.9 0.0197213 0.00177445 44576 0; : 40 Minimum Test error found - save the configuration ; : 40 | 22363.6 21100 0.0197729 0.00177445 44448.2 0; : 41 Minimum Test error found - save the configuration ; : 41 | 22176.6 20921.1 0.0197131 0.00176514 44573.2 0; : 42 Minimum Test error found - save the configuration ; : 42 | 21994.9 20740.9 0.0197264 0.00176834 44548.1 0; : 43 Minimum Test error found - save the configuration ; : 43 | 21811.7 20564.6 0.0197476 0.00176764 44494 0; : 44 Minimum Test error found - save the configuration ; : 44 | 21631.5 20390.5 0.0198172 0.00177793 44347.7 0; : 45 Minimum Test error found - save the configuration ; : 45 | 21453.9 20217 0.0197313 0.00176795 44535.1 0; : 46 Minimum Test error found - save the configuration ; : 46 | 21277.2 20045.6 0.0197489 0.00176953 44495.5 0; : 47 Minimum Test error found - save the configuration ; : 47 | 21102.5 19876.1 0.0197499 0.00176859 44490.7 0; : 48 Minimum Test error found - save the configuration ; : 48 | 20931.2 19705.9 0.0197403 0.00176149 44496.7 0; : 49 Minimum Test error found - save the configuration ; : 49 | 20758.9 19539.2 0.0199993 0.00178715 43926.8 0; : 50 Minimum Test error found - save the configuration ; : 50 | 20589.8 19373.7 0.0199739 0.00177216 43951.9 0; : 51 Minimum Test error found,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:15756,Test,Test,15756,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 46 | 21277.2 20045.6 0.0197489 0.00176953 44495.5 0; : 47 Minimum Test error found - save the configuration ; : 47 | 21102.5 19876.1 0.0197499 0.00176859 44490.7 0; : 48 Minimum Test error found - save the configuration ; : 48 | 20931.2 19705.9 0.0197403 0.00176149 44496.7 0; : 49 Minimum Test error found - save the configuration ; : 49 | 20758.9 19539.2 0.0199993 0.00178715 43926.8 0; : 50 Minimum Test error found - save the configuration ; : 50 | 20589.8 19373.7 0.0199739 0.00177216 43951.9 0; : 51 Minimum Test error found - save the configuration ; : 51 | 20419.5 19213.6 0.0197688 0.0017747 44459 0; : 52 Minimum Test error found - save the configuration ; : 52 | 20255.7 19051.4 0.0197679 0.00177721 44467.5 0; : 53 Minimum Test error found - save the configuration ; : 53 | 20090.6 18891.7 0.0197461 0.00177488 44515.6 0; : 54 Minimum Test error found - save the configuration ; : 54 | 19926.4 18735.4 0.0197628 0.00177559 44476 0; : 55 Minimum Test error found - save the configuration ; : 55 | 19766 18579 0.0197479 0.00177128 44502.3 0; : 56 Minimum Test error found - save the configuration ; : 56 | 19606.6 18423 0.0198259 0.00178958 44354.9 0; : 57 Minimum Test error found - save the configuration ; : 57 | 19448.2 18266.7 0.0197832 0.00177932 44434.9 0; : 58 Minimum Test error found - save the configuration ; : 58 | 19286.3 18101.7 0.0200637 0.00195508 44177.8 0; : 59 Minimum Test error found - save the configuration ; : 59 | 19133.8 17932.7 0.0198394 0.00178813 44318.1 0; : 60 Minimum Test error found - save the configuration ; : 60 | 18976.4 17813.4 0.0198417 0.00178241 44298.6 0; : 61 Minimum Test error found - save the configuration ; : 61 | 18829.3 17664.6 0.0197742 0.00177192 44438.7 0; : 62 Minimum Test error found - save the configuration ; : 62 | 18675.1 17508.4 0.0197937 0.00177252 44392.2 0; : 63 Minimum Test error found - save the configuration ; : 63 | 18512.9 17340.5 0.019822 0.0017786 44337.4 0; : 64 Minimum Test error found ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:17203,Test,Test,17203,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 5 | 0.407569 0.391703 0.0786075 0.00678976 44557.2 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.387736 0.373696 0.0792581 0.00678916 44156.9 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.373399 0.360485 0.0791536 0.00677002 44208.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 0.362792 0.352336 0.0796639 0.00682572 43933 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.353594 0.340526 0.0805399 0.00700876 43519 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.345712 0.336826 0.080966 0.0069933 43259.2 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.338399 0.329567 0.0802544 0.00691181 43630.9 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.333122 0.322325 0.0804981 0.00689735 43477.8 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.326577 0.317097 0.0800716 0.00688531 43724 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.320979 0.311994 0.080369 0.00694962 43585.2 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.316442 0.305918 0.0803736 0.00690045 43553.3 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.311672 0.301667 0.0807629 0.00695777 43357.4 0; : 17 Minimum Test error found - save the configuration ; : 17 | 0.306787 0.297289 0.0804752 0.00690149 43493.8 0; : 18 Minimum Test error found - save the configuration ; : 18 | 0.303107 0.295781 0.0805443 0.00693772 43474.3 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.300241 0.290359 0.0805629 0.00693546 43462 0; : 20 | 0.29682 0.292587 0.0806285 0.00686869 43384.1 1; : ; : Elapsed time for training with 4000 events: 1.62 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of DL_CPU on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 0.106 sec ; : Creating multiclass resp,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:16264,Test,Test,16264,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 81 | 15897.7 14793.4 0.0199416 0.00179024 44073.9 0; : 82 Minimum Test error found - save the configuration ; : 82 | 15763.4 14662.5 0.0199481 0.00178931 44055.8 0; : 83 Minimum Test error found - save the configuration ; : 83 | 15630.7 14533.2 0.019931 0.00179081 44101 0; : 84 Minimum Test error found - save the configuration ; : 84 | 15500.1 14404.7 0.0199524 0.00179281 44053.8 0; : 85 Minimum Test error found - save the configuration ; : 85 | 15368.8 14279.5 0.0199675 0.00179204 44015.4 0; : 86 Minimum Test error found - save the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found - save the configuration ; : 87 | 15114.3 14026.9 0.0199836 0.00180455 44006.8 0; : 88 Minimum Test error found - save the configuration ; : 88 | 14984.6 13906.4 0.01996 0.00179383 44038 0; : 89 Minimum Test error found - save the configuration ; : 89 | 14861.1 13782.6 0.0200963 0.00185792 43863.5 0; : 90 Minimum Test error found - save the configuration ; : 90 | 14737.4 13659.4 0.0204557 0.00186757 43038.2 0; : 91 Minimum Test error found - save the configuration ; : 91 | 14612.9 13539.6 0.0208154 0.00188863 42268.3 0; : 92 Minimum Test error found - save the configuration ; : 92 | 14490.4 13421.6 0.0202522 0.00182164 43406.2 0; : 93 Minimum Test error found - save the configuration ; : 93 | 14371 13301.8 0.0200599 0.00180046 43813.1 0; : 94 Minimum Test error found - save the configuration ; : 94 | 14248.9 13186.1 0.0201736 0.00184165 43639.6 0; : 95 Minimum Test error found - save the configuration ; : 95 | 14131.5 13069.6 0.020175 0.00181418 43571 0; : 96 Minimum Test error found - save the configuration ; : 96 | 14014.5 12952.5 0.0201885 0.00182372 43561.6 0; : 97 Minimum Test error found - save the configuration ; : 97 | 13896.7 12838.4 0.0200385 0.00180689 43879.7 0; : 98 Minimum Test error found - save the configuration ; : 98 | 13782 12723.6 0.020062 0.00182418 43864.8 0; : 99 Minimum Test error found - s,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:21096,Test,Test,21096,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 82 | 15763.4 14662.5 0.0199481 0.00178931 44055.8 0; : 83 Minimum Test error found - save the configuration ; : 83 | 15630.7 14533.2 0.019931 0.00179081 44101 0; : 84 Minimum Test error found - save the configuration ; : 84 | 15500.1 14404.7 0.0199524 0.00179281 44053.8 0; : 85 Minimum Test error found - save the configuration ; : 85 | 15368.8 14279.5 0.0199675 0.00179204 44015.4 0; : 86 Minimum Test error found - save the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found - save the configuration ; : 87 | 15114.3 14026.9 0.0199836 0.00180455 44006.8 0; : 88 Minimum Test error found - save the configuration ; : 88 | 14984.6 13906.4 0.01996 0.00179383 44038 0; : 89 Minimum Test error found - save the configuration ; : 89 | 14861.1 13782.6 0.0200963 0.00185792 43863.5 0; : 90 Minimum Test error found - save the configuration ; : 90 | 14737.4 13659.4 0.0204557 0.00186757 43038.2 0; : 91 Minimum Test error found - save the configuration ; : 91 | 14612.9 13539.6 0.0208154 0.00188863 42268.3 0; : 92 Minimum Test error found - save the configuration ; : 92 | 14490.4 13421.6 0.0202522 0.00182164 43406.2 0; : 93 Minimum Test error found - save the configuration ; : 93 | 14371 13301.8 0.0200599 0.00180046 43813.1 0; : 94 Minimum Test error found - save the configuration ; : 94 | 14248.9 13186.1 0.0201736 0.00184165 43639.6 0; : 95 Minimum Test error found - save the configuration ; : 95 | 14131.5 13069.6 0.020175 0.00181418 43571 0; : 96 Minimum Test error found - save the configuration ; : 96 | 14014.5 12952.5 0.0201885 0.00182372 43561.6 0; : 97 Minimum Test error found - save the configuration ; : 97 | 13896.7 12838.4 0.0200385 0.00180689 43879.7 0; : 98 Minimum Test error found - save the configuration ; : 98 | 13782 12723.6 0.020062 0.00182418 43864.8 0; : 99 Minimum Test error found - save the configuration ; : 99 | 13666.4 12611.1 0.0200618 0.00180714 43824.4 0; : 100 Minimum Test error found - ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:21208,Test,Test,21208,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 83 | 15630.7 14533.2 0.019931 0.00179081 44101 0; : 84 Minimum Test error found - save the configuration ; : 84 | 15500.1 14404.7 0.0199524 0.00179281 44053.8 0; : 85 Minimum Test error found - save the configuration ; : 85 | 15368.8 14279.5 0.0199675 0.00179204 44015.4 0; : 86 Minimum Test error found - save the configuration ; : 86 | 15239.7 14153.7 0.0199843 0.00181623 44033.3 0; : 87 Minimum Test error found - save the configuration ; : 87 | 15114.3 14026.9 0.0199836 0.00180455 44006.8 0; : 88 Minimum Test error found - save the configuration ; : 88 | 14984.6 13906.4 0.01996 0.00179383 44038 0; : 89 Minimum Test error found - save the configuration ; : 89 | 14861.1 13782.6 0.0200963 0.00185792 43863.5 0; : 90 Minimum Test error found - save the configuration ; : 90 | 14737.4 13659.4 0.0204557 0.00186757 43038.2 0; : 91 Minimum Test error found - save the configuration ; : 91 | 14612.9 13539.6 0.0208154 0.00188863 42268.3 0; : 92 Minimum Test error found - save the configuration ; : 92 | 14490.4 13421.6 0.0202522 0.00182164 43406.2 0; : 93 Minimum Test error found - save the configuration ; : 93 | 14371 13301.8 0.0200599 0.00180046 43813.1 0; : 94 Minimum Test error found - save the configuration ; : 94 | 14248.9 13186.1 0.0201736 0.00184165 43639.6 0; : 95 Minimum Test error found - save the configuration ; : 95 | 14131.5 13069.6 0.020175 0.00181418 43571 0; : 96 Minimum Test error found - save the configuration ; : 96 | 14014.5 12952.5 0.0201885 0.00182372 43561.6 0; : 97 Minimum Test error found - save the configuration ; : 97 | 13896.7 12838.4 0.0200385 0.00180689 43879.7 0; : 98 Minimum Test error found - save the configuration ; : 98 | 13782 12723.6 0.020062 0.00182418 43864.8 0; : 99 Minimum Test error found - save the configuration ; : 99 | 13666.4 12611.1 0.0200618 0.00180714 43824.4 0; : 100 Minimum Test error found - save the configuration ; : 100 | 13550.9 12502.3 0.0200464 0.00180511 43856.6 0; : 101 Minimum Test error found ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:21320,Test,Test,21320,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 91 | 14612.9 13539.6 0.0208154 0.00188863 42268.3 0; : 92 Minimum Test error found - save the configuration ; : 92 | 14490.4 13421.6 0.0202522 0.00182164 43406.2 0; : 93 Minimum Test error found - save the configuration ; : 93 | 14371 13301.8 0.0200599 0.00180046 43813.1 0; : 94 Minimum Test error found - save the configuration ; : 94 | 14248.9 13186.1 0.0201736 0.00184165 43639.6 0; : 95 Minimum Test error found - save the configuration ; : 95 | 14131.5 13069.6 0.020175 0.00181418 43571 0; : 96 Minimum Test error found - save the configuration ; : 96 | 14014.5 12952.5 0.0201885 0.00182372 43561.6 0; : 97 Minimum Test error found - save the configuration ; : 97 | 13896.7 12838.4 0.0200385 0.00180689 43879.7 0; : 98 Minimum Test error found - save the configuration ; : 98 | 13782 12723.6 0.020062 0.00182418 43864.8 0; : 99 Minimum Test error found - save the configuration ; : 99 | 13666.4 12611.1 0.0200618 0.00180714 43824.4 0; : 100 Minimum Test error found - save the configuration ; : 100 | 13550.9 12502.3 0.0200464 0.00180511 43856.6 0; : 101 Minimum Test error found - save the configuration ; : 101 | 13439.7 12392 0.0201571 0.00185957 43721.7 0; : 102 Minimum Test error found - save the configuration ; : 102 | 13328.8 12281.3 0.0202143 0.00181888 43489.1 0; : 103 Minimum Test error found - save the configuration ; : 103 | 13217 12173.3 0.0200026 0.0018059 43964.1 0; : 104 Minimum Test error found - save the configuration ; : 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:22209,Test,Test,22209,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,ave the configuration ; : 968 | 3.75704 4.83525 0.0200988 0.00182012 43766.9 0; : 969 | 3.53402 4.87481 0.020433 0.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243 0.0205923 0.00181714 42609.4 3; : 972 | 3.49443 4.93416 0.0204303 0.00180084 42942.7 4; : 973 | 3.50169 4.88411 0.0201535 0.00176496 43505.4 5; : 974 | 3.70493 4.95915 0.0200555 0.00176513 43738.9 6; : 975 Minimum Test error found - save the configuration ; : 975 | 3.52504 4.65912 0.0202218 0.00185299 43552 0; : 976 | 3.7346 5.23443 0.0200603 0.00176255 43721.2 1; : 977 | 3.73856 4.9727 0.0200443 0.00176151 43757 2; : 978 | 3.60727 4.99113 0.0200479 0.00175633 43736 3; : 979 | 3.40672 4.84357 0.0200357 0.00175685 43766.5 4; : 980 | 3.44899 4.83288 0.0200548 0.0017499 43704.2 5; : 981 | 3.46445 4.72048 0.0203135 0.00176046 43119.7 6; : 982 Minimum Test error found - save the configuration ; : 982 | 3.46604 4.64127 0.0202116 0.00183381 43530.8 0; : 983 Minimum Test error found - save the configuration ; : 983 | 3.37896 4.59559 0.0201715 0.00182642 43608.5 0; : 984 Minimum Test error found - save the configuration ; : 984 | 3.36213 4.34126 0.0202597 0.00185498 43467.1 0; : 985 | 3.39032 4.51659 0.0201503 0.00185184 43719.5 1; : 986 | 3.5234 4.95577 0.0201762 0.0017578 43434.8 2; : 987 | 3.50466 4.60061 0.0201538 0.00175522 43481.6 3; : 988 | 3.61316 4.68965 0.0201071 0.00176 43603.6 4; : 989 | 3.88349 5.24185 0.0200475 0.00175499 43733.8 5; : 990 | 4.0647 4.52576 0.020036 0.00175545 43762.3 6; : 991 | 3.77396 5.32769 0.0200783 0.00175786 43667.1 7; : 992 | 3.45322 4.61211 0.0200841 0.00175232 43640 8; : 993 | 3.32586 4.54016 0.0200585 0.00176018 43719.9 9; : 994 | 3.54317 4.65875 0.0201539 0.00181263 43617.4 10; : 995 | 3.38008 5.03795 0.0206532 0.00179392 42419.4 11; : 996 | 3.40103 4.41295 0.0204644 0.00176564 42783.5 12; : 997 | 3.23461 4.8031 0.0203306 0.00176616 43093.1 13; : 998 | 3.41797 4.46788 0.0203618 0.00175568 42996.7 14; : 999 Minimum Test error ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:112019,Test,Test,112019,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,"ave those values for the subsequent evaluation of the; test statistics. RooAbsData* GenerateToyDataImportanceSampling(RooArgSet& paramPoint, double& weight) const; This method generates a toy data set for importance sampling for the given parameter point taking; global observables into account.; The values of the generated global observables remain in the pdf's variables.; They have to have those values for the subsequent evaluation of the; test statistics. RooAbsData* Generate(RooAbsPdf& pdf, RooArgSet& observables, const RooDataSet* protoData = NULL, int forceEvents = 0) const; This is the generate function to use in the context of the ToyMCSampler; instead of the standard RooAbsPdf::generate(...).; It takes into account whether the number of events is given explicitly; or whether it should use the expected number of events. It also takes; into account the option to generate a binned data set (ie RooDataHist). ToyMCSampler(); Proof constructor. Do not use. ToyMCSampler(RooStats::TestStatistic& ts, Int_t ntoys). void SetAlwaysUseMultiGen(Bool_t flag); { fgAlwaysUseMultiGen = flag ; }. void SetUseMultiGen(Bool_t flag); { fUseMultiGen = flag ; }. RooAbsData* GenerateToyData(RooArgSet& paramPoint) const; generates toy data; without weight. SamplingDistribution* AppendSamplingDistribution(RooArgSet& allParameters, RooStats::SamplingDistribution* last, Int_t additionalMC); Extended interface to append to sampling distribution more samples. Double_t EvaluateTestStatistic(RooAbsData& data, RooArgSet& nullPOI); Main interface to evaluate the test statistic on a dataset. TestStatistic* GetTestStatistic() const; { return fTestStat; }. Double_t ConfidenceLevel() const; { return 1. - fSize; }. void Initialize(RooAbsArg& , RooArgSet& , RooArgSet& ); { return fNToys; }. void SetNToys(const Int_t ntoy); { fNToys = ntoy; }. void SetNEventsPerToy(const Int_t nevents); Forces n events even for extended PDFs. Set NEvents=0 to; use the Poisson distributed events from the extended PDF.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__ToyMCSampler.html:6531,Test,TestStatistic,6531,root/html530/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html530/RooStats__ToyMCSampler.html,1,['Test'],['TestStatistic']
Testability,"aveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoBBox::SetBoxDimensions(Double_t dx, Double_t dy, Double_t dz, Double_t* origin = 0); voidTGeoBBox::SetBoxPoints(Double_t* points) const; virtual voidSetDimensions(Double_t* param); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoShape::SetId(Int_t id); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPoints(Double_t*) const; virtual voidSetPoints(Float_t*) const; voidTGeoShape::SetRuntime(Bool_t flag = kTRUE); virtual voidTGeoBBox::SetSegsAndPols(TBuffer3D& buffer) const; voidTGeoShape::SetShapeBit(UInt_t f); voidTGeoShape::SetShapeBit(UInt_t f, Bool_t set); virtual voidTNamed::SetTitle(const char* title = """")MENU ; static voidTGeoShape::SetTransform(TGeoMatrix* matrix); virtual voidTObject::SetUniqueID(UInt_t uid); Int_tTGeoShape::ShapeDistancetoPrimitive(Int_t numpoints, Int_t px, Int_t py) const; virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidSizeof3D() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTGeoShape::TestShapeBit(UInt_t f) const; Int_tTGeoShape::TestShapeBits(UInt_t f) const; static Double_tTGeoShape::Tolerance(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoHalfSpace.html:9124,Test,TestBit,9124,root/html528/TGeoHalfSpace.html,https://root.cern,https://root.cern/root/html528/TGeoHalfSpace.html,12,['Test'],"['TestBit', 'TestBits', 'TestShapeBit', 'TestShapeBits']"
Testability,"aveinlinevirtual; SetX2(Double_t x2) overrideTPavevirtual; SetX2NDC(Double_t x2)TPaveinlinevirtual; SetY1(Double_t y1) overrideTPavevirtual; SetY1NDC(Double_t y1)TPaveinlinevirtual; SetY2(Double_t y2) overrideTPavevirtual; SetY2NDC(Double_t y2)TPaveinlinevirtual; Streamer(TBuffer &) overrideTPavesTextvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TPavesTextinline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TAttFill()TAttFill; TAttFill(Color_t fcolor, Style_t fstyle)TAttFill; TAttLine()TAttLine; TAttLine(Color_t lcolor, Style_t lstyle, Width_t lwidth)TAttLine; TAttText()TAttText; TAttText(Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize)TAttText; TBox()TBox; TBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBox; TBox(const TBox &box)TBox; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; TPave()TPave; TPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPave; TPave(const TPave &pave)TPave; TPavesText()TPavesText; TPavesText(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t npaves=5, Option_t *option=""br"")TPavesText; TPavesText(const TPavesText &pavestext)TPavesText; TPaveText()TPaveText; TPaveText(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Option_t *option=""br"")TPaveText; TPaveText(const TPaveText &pavetext)TPaveText; UseCurrentStyle() overrideTPaveTextvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~TAttBBox2D()TAttBBox2Dvirtual; ~TAttFill()TAttFillvirtual; ~TAttLine()TAttLinevirtual; ~TAttText()TAttTextvirtual; ~TBox() overrideTBox; ~TObject()TObjectvirtual; ~TPave() overrideTPave; ~TPavesText() overrideTPavesText; ~TPaveText() override",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPavesText-members.html:11782,Test,TestBit,11782,doc/master/classTPavesText-members.html,https://root.cern,https://root.cern/doc/master/classTPavesText-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"aw this axis with its current attributes. void PaintAxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Double_t& wmin, Double_t& wmax, Int_t& ndiv, Option_t* chopt = """", Double_t gridlength = 0, Bool_t drawGridOnly = kFALSE); Control function to draw an axis. Original authors: O.Couet C.E.Vandoni N.Cremel-Somon.; Modified and converted to C++ class by Rene Brun. _Input parameters:. xmin : X origin coordinate in WC space.; xmax : X end axis coordinate in WC space.; ymin : Y origin coordinate in WC space.; ymax : Y end axis coordinate in WC space.; wmin : Lowest value for the tick mark; labels written on the axis.; wmax : Highest value for the tick mark labels; written on the axis.; ndiv : Number of divisions. ndiv=N1 + 100*N2 + 10000*N3; N1=number of 1st divisions.; N2=number of 2nd divisions.; N3=number of 3rd divisions.; e.g.:; nndi=0 --> no tick marks.; nndi=2 --> 2 divisions, one tick mark in the middle; of the axis. chopt : options (see below). chopt='G': loGarithmic scale, default is linear.; chopt='B': Blank axis. Useful to superpose axis. Orientation of tick marks on axis. Tick marks are normally drawn on the positive side of the axis,; however, if x0=x1, then negative. chopt='+': tick marks are drawn on Positive side. (default); chopt='-': tick mark are drawn on the negative side.; i.e: '+-' --> tick marks are drawn on both sides of the axis.; chopt='U': Unlabeled axis, default is labeled. Size of tick marks. By default, tick marks have a length equal to 3 per cent of the; axis length.; When the option ""S"" is specified, the length of the tick marks; is equal to fTickSize*axis_length, where fTickSize may be set; via TGaxis::SetTickSize. Position of labels on axis. Labels are normally drawn on side opposite to tick marks.; However:. chopt='=': on Equal side. Orientation of labels on axis. Labels are normally drawn parallel to the axis.; However if x0=x1, then Orthogonal; if y0=Y1, then Parallel. Position of labels on tick marks. Labels are centere",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGaxis.html:15938,loG,loGarithmic,15938,root/html528/TGaxis.html,https://root.cern,https://root.cern/root/html528/TGaxis.html,5,['loG'],['loGarithmic']
Testability,"aw(""hpx.Draw()"","""",""goff"",1,12345);; c1->cd(2);; T->Draw(""hpxpy.Draw()"","""",""goff"",1,12345);; c1->cd(3);; T->Draw(""hprof.Draw()"","""",""goff"",1,12345);; c1->Print(""htr2.png"");; }; ; void htr3() {; // Connect Tree generated by htw; // read all histograms and plot the RMS of hpx versus the Mean of hprof; // for each of the 25000 entries; auto f = new TFile(""ht.root"");; auto T = (TTree*)f->Get(""T"");; auto c1 = new TCanvas(""c1"",""test"",10,10,600,400);; T->Draw(""hpx.GetRMS():hprof.GetMean()"");; c1->Print(""htr3.png"");; }; ; void htest() {; htw();; htr1();; htr2();; htr3();; }; f#define f(i)Definition RSha256.hxx:104; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TBenchmark::Showvirtual void Show(const char *name)Stops Benchmark name and Prints results.Definition TBenchmark.cxx:155; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH2F2-D histogram with a float per channel (see TH1 documentation)Definition TH2.h:307; TProfileProfile Histogram.Definition TProfile.h:32; TRandom::Rannorvirtual void Rannor(Float_t &a, Float_t &b)Return 2 numbers distributed following a gaussian with mean=0 and sigma=1.Definition TRandom.cxx:507; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; c1return c1Definition legend1.C:41; ROOT::Math::Chebyshev::Tdouble T(double x)Definition ChebyshevPol.h:34; AuthorRene Brun ; Definition in file htest.C. tutorialstreehtest.C. RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/htest_8C.html:3075,Benchmark,Benchmark,3075,doc/master/htest_8C.html,https://root.cern,https://root.cern/doc/master/htest_8C.html,1,['Benchmark'],['Benchmark']
Testability,"aw(const void* buf, Int_t len, ESendRecvOptions opt = kDontBlock); voidSendUrgent(Int_t type, Int_t int1, Int_t int2); voidSetAWait(Bool_t w = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetClientID(Int_t); voidTSocket::SetCompressionAlgorithm(Int_t algorithm = 0); voidTSocket::SetCompressionLevel(Int_t level = 1); voidTSocket::SetCompressionSettings(Int_t settings = 1); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetInterrupt(Bool_t i = kTRUE); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual Int_tSetOption(ESockOptions, Int_t); voidTSocket::SetRemoteProtocol(Int_t rproto); voidTSocket::SetSecContext(TSecContext* ctx); voidSetSendOpt(ESendRecvOptions o); voidTSocket::SetService(const char* service); voidTSocket::SetServType(Int_t st); voidSetSessionID(Int_t id); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidTSocket::SetUrl(const char* url); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTSocket::Touch(); TXSocket(const TXSocket&); TXSocket(const char* url, Char_t mode = 'M', Int_t psid = -1, Char_t ver = -1, const char* logbuf = 0, Int_t loglevel = -1, TXHandler* handler = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSocket.html:8178,Test,TestBit,8178,root/html602/TXSocket.html,https://root.cern,https://root.cern/root/html602/TXSocket.html,8,"['Test', 'log']","['TestBit', 'TestBits', 'logbuf', 'loglevel']"
Testability,"awFuncPtr! Conversion function pointer for readraw rule; ROOT::TSchemaRule::RuleType_tfRuleTypeType of the rule; TStringfSourceSource data member string; TStringfSourceClassSource class; TObjArray*fSourceVect! Source data member vector (for searching purposes); TStringfTargetTarget data mamber string; TStringfTargetClassTarget class, this is the owner of this rule object.; TObjArray*fTargetVect! Target data member vector (for searching purposes); TStringfVersionSource version string; vector<pair<Int_t,Int_t> >*fVersionVect! Source version vector (for searching purposes). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSchemaRule(). virtual ~TSchemaRule(). TSchemaRule(const ROOT::TSchemaRule& rhs). void Clear(Option_t* = """"). Bool_t SetFromRule(const char* rule). const char * GetVersion() const. Bool_t SetVersion(const TString& version). Bool_t TestVersion(Int_t version) const. Bool_t SetChecksum(const TString& checksum). Bool_t TestChecksum(UInt_t checksum) const. void SetSourceClass(const TString& classname). const char * GetSourceClass() const. void SetTargetClass(const TString& classname). const char * GetTargetClass() const. void SetTarget(const TString& target). const TObjArray* GetTarget() const. const char * GetTargetString() const. void SetSource(const TString& source). const TObjArray* GetSource() const. void SetEmbed(Bool_t embed). Bool_t GetEmbed() const. Bool_t IsAliasRule() const. Bool_t IsRenameRule() const. Bool_t IsValid() const. void SetCode(const TString& code). const char * GetCode() const. void SetAttributes(const TString& attributes). const char * GetAttributes() const. Bool_t HasTarget(const TString& target) const. Bool_t HasSource(const TString& source) const. void SetReadFunctionPointer(ROOT::TSchemaRule::ReadFuncPtr_t ptr). ReadFuncPtr_t GetReadFunctionPointer() const. void SetReadRawFunctionPointer(ROOT::TSchemaRule::ReadRawFuncPtr_t ptr). ReadRawFuncPtr_t GetReadRawFunctionPointer() const. void S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TSchemaRule.html:9117,Test,TestChecksum,9117,root/html602/ROOT__TSchemaRule.html,https://root.cern,https://root.cern/root/html602/ROOT__TSchemaRule.html,2,['Test'],['TestChecksum']
Testability,"awHist&operator=(const TProofDrawHist&); TProofDrawHist&operator=(TProofDrawHist&&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Bool_tTProofDraw::Process(Long64_t); virtual Bool_tTSelector::ProcessCut(Long64_t); virtual voidTSelector::ProcessFill(Long64_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTSelector::ResetAbort(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTSelector::SetInputList(TList* input); virtual voidTSelector::SetObject(TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTSelector::SetOption(const char* option); virtual voidTSelector::SetStatus(Long64_t status); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidSlaveBegin(TTree*); virtual voidTProofDraw::SlaveTerminate(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTerminate(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TProofDrawHist(); TProofDrawHist(TProofDrawHist&&); TProofDrawHist(const TProofDrawHist&); virtual voidTObject::UseCurrentStyle(); virtual intTProofDraw::Version() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofDrawHist.html:5360,Test,TestBit,5360,root/html602/TProofDrawHist.html,https://root.cern,https://root.cern/root/html602/TProofDrawHist.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"awOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEllipse(const Float_t* factors); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTShape::SetName(const char* name); virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetNumberOfDivisions(Int_t p); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTShape::SetVisibility(Int_t vis)MENU ; virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidSizeof3D() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTShape::TransformPoints(Double_t* points, UInt_t NbPnts) const; TSPHE(); TSPHE(const TSPHE&); TSPHE(const char* name, const char* title, const char* material, Float_t rmax); TSPHE(const char* name, const char* title, const char* material, Float_t rmin, Float_t rmax, Float_t themin, Float_t themax, Float_t phimin, Float_t phimax); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSPHE.html:6678,Test,TestBit,6678,root/html602/TSPHE.html,https://root.cern,https://root.cern/root/html602/TSPHE.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ax = TMath::Power(10,rwymax);; 1829 // coverity [Calling risky function]; 1830 strlcat(choptaxis,""G"",10);; 1831 }; 1832 axis.SetLineColor(gStyle->GetAxisColor(""Y""));; 1833 axis.SetTextColor(gStyle->GetLabelColor(""Y""));; 1834 axis.SetTextFont(gStyle->GetLabelFont(""Y""));; 1835 axis.SetLabelSize(gStyle->GetLabelSize(""Y""));; 1836 axis.SetLabelOffset(gStyle->GetLabelOffset(""Y""));; 1837 axis.SetTickSize(gStyle->GetTickLength(""Y""));; 1838 ; 1839 axis.PaintAxis(rwxmin,rwymin,rwxmin,rwymax,rwmin,rwmax,ndiv,choptaxis);; 1840 }; 1841 ; 1842 ; 1843 // Set attributes; 1844 theGraph->TAttLine::Modify();; 1845 theGraph->TAttFill::Modify();; 1846 theGraph->TAttMarker::Modify();; 1847 ; 1848 // Min-Max scope; 1849 ; 1850 if (!optionRot) {wmin = x[0]; wmax = x[1];}; 1851 else {wmin = y[0]; wmax = y[1];}; 1852 ; 1853 if (!optionBins) delta = (wmax - wmin)/ Double_t(nbins);; 1854 ; 1855 Int_t fwidth = gPad->GetFrameLineWidth();; 1856 TFrame *frame = gPad->GetFrame();; 1857 if (frame) fwidth = frame->GetLineWidth();; 1858 if (optionOff) fwidth = 1;; 1859 Double_t dxframe = gPad->AbsPixeltoX(fwidth/2) - gPad->AbsPixeltoX(0);; 1860 Double_t vxmin = gPad->PadtoX(gPad->GetUxmin() + dxframe);; 1861 Double_t vxmax = gPad->PadtoX(gPad->GetUxmax() - dxframe);; 1862 Double_t dyframe = -gPad->AbsPixeltoY(fwidth/2) + gPad->AbsPixeltoY(0);; 1863 Double_t vymin = gPad->GetUymin() + dyframe; //y already in log scale; 1864 vxmin = TMath::Max(vxmin,wmin);; 1865 vxmax = TMath::Min(vxmax,wmax);; 1866 ; 1867 // Draw the histogram with a fill area; 1868 ; 1869 gxwork.resize(2*npoints+10);; 1870 gywork.resize(2*npoints+10);; 1871 gxworkl.resize(2*npoints+10);; 1872 gyworkl.resize(2*npoints+10);; 1873 ; 1874 if (optionFill && !optionCurve) {; 1875 fillarea = kTRUE;; 1876 if (!optionRot) {; 1877 gxwork[0] = vxmin;; 1878 if (!optionOne) gywork[0] = TMath::Min(TMath::Max((Double_t)0,gPad->GetUymin()); 1879 ,gPad->GetUymax());; 1880 else gywork[0] = gPad->GetUymin();; 1881 npt = 2;; 1882 for (j=first; j<=last;j++",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:68851,log,log,68851,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['log'],['log']
Testability,"ax number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; TClass * IsA () const override;  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; virtual Bool_t IsOpen () const;  Returns kTRUE in case file is open and kFALSE if file is not open. ;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixFile.html:4661,log,logical,4661,doc/master/classTDavixFile.html,https://root.cern,https://root.cern/doc/master/classTDavixFile.html,1,['log'],['logical']
Testability,"ax number of bytes to prefetch. ;  ; virtual Long64_t GetBytesWritten () const;  Return the total number of bytes written so far to the file. ;  ; TFileCacheRead * GetCacheRead (const TObject *tree=nullptr) const;  Return a pointer to the current read cache. ;  ; TFileCacheWrite * GetCacheWrite () const;  Return a pointer to the current write cache. ;  ; TArrayC * GetClassIndex () const;  ; Int_t GetCompressionAlgorithm () const;  ; Float_t GetCompressionFactor ();  Return the file compression factor. ;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Long64_t GetEND () const;  ; virtual const TUrl * GetEndpointUrl () const;  ; virtual Int_t GetErrno () const;  Method returning errno. ;  ; Int_t GetFd () const;  ; TList * GetListOfFree () const;  ; TObjArray * GetListOfProcessIDs () const;  ; virtual Int_t GetNbytesFree () const;  ; virtual Int_t GetNbytesInfo () const;  ; virtual Int_t GetNfree () const;  ; virtual Int_t GetNProcessIDs () const;  ; Option_t * GetOption () const override;  ; virtual Int_t GetReadCalls () const;  ; Int_t GetRecordHeader (char *buf, Long64_t first, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header starting at a certain postion. ;  ; Long64_t GetRelOffset () const;  ; virtual Long64_t GetSeekFree () const;  ; virtual Long64_t GetSeekInfo () const;  ; const TList * GetStreamerInfoCache ();  Returns the cached list of StreamerInfos used in this file. ;  ; virtual TList * GetStreamerInfoList () final;  Read the list of TStreamerInfo objects written to this file. ;  ; Int_t GetVersion () const;  ; virtual void IncrementProcessIDs ();  ; virtual Bool_t IsArchive () const;  ; Bool_t IsBinary () const;  ; Bool_t IsRaw () const;  ; void ls (Option_t *option="""") const override;  List file contents. ;  ; virtual void MakeFree (Long64_t first, Long64_t last);  Mark unused bytes on the file. ;  ; virtual void MakeProject (const char *dirname, const char *classes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetXNGFile.html:4837,log,logical,4837,doc/master/classTNetXNGFile.html,https://root.cern,https://root.cern/doc/master/classTNetXNGFile.html,1,['log'],['logical']
Testability,"ax upper fitting range; 3934/// \return A smart pointer to the TFitResult class; 3935///; 3936/// \anchor HFitOpt; 3937/// ### Histogram Fitting Options; 3938///; 3939/// Here is the full list of fit options that can be given in the parameter `option`.; 3940/// Several options can be used together by concatanating the strings without the need of any delimiters.; 3941///; 3942/// option | description; 3943/// -------|------------; 3944/// ""L"" | Uses a log likelihood method (default is chi-square method). To be used when the histogram represents counts.; 3945/// ""WL"" | Weighted log likelihood method. To be used when the histogram has been filled with weights different than 1. This is needed for getting correct parameter uncertainties for weighted fits.; 3946/// ""P"" | Uses Pearson chi-square method. Uses expected errors instead of the observed one (default case). The expected error is instead estimated from the square-root of the bin function value.; 3947/// ""MULTI"" | Uses Loglikelihood method based on multi-nomial distribution. In this case the function must be normalized and one fits only the function shape.; 3948/// ""W"" | Fit using the chi-square method and ignoring the bin uncertainties and skip empty bins.; 3949/// ""WW"" | Fit using the chi-square method and ignoring the bin uncertainties and include the empty bins.; 3950/// ""I"" | Uses the integral of function in the bin instead of the default bin center value.; 3951/// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; 3952/// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; 3953/// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; 3954/// ""M"" | Uses the IMPROVE algorithm (available only in TMinuit). This algorithm attempts improve the found local minimum by searching for a better one.; 3955/// ""S"" | The full result o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:156784,Log,Loglikelihood,156784,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['Log'],['Loglikelihood']
Testability,"ax(). virtual Double_t TMVA::Interval::GetMax ; (; ); const. inlinevirtual . Reimplemented in TMVA::LogInterval.; Definition at line 72 of file Interval.h. ◆ GetMean(). Double_t TMVA::Interval::GetMean ; (; ); const. virtual . Reimplemented in TMVA::LogInterval.; Definition at line 159 of file Interval.cxx. ◆ GetMin(). virtual Double_t TMVA::Interval::GetMin ; (; ); const. inlinevirtual . Reimplemented in TMVA::LogInterval.; Definition at line 71 of file Interval.h. ◆ GetNbins(). virtual Int_t TMVA::Interval::GetNbins ; (; ); const. inlinevirtual . Reimplemented in TMVA::LogInterval.; Definition at line 74 of file Interval.h. ◆ GetRndm(). Double_t TMVA::Interval::GetRndm ; (; TRandom3 & ; rnd); const. virtual . get uniformly distributed number within interval ; Reimplemented in TMVA::LogInterval.; Definition at line 150 of file Interval.cxx. ◆ GetStepSize(). Double_t TMVA::Interval::GetStepSize ; (; Int_t ; iBin = 0); const. virtual . returns the step size between the numbers of a ""discrete Interval"" ; Reimplemented in TMVA::LogInterval.; Definition at line 135 of file Interval.cxx. ◆ GetWidth(). Double_t TMVA::Interval::GetWidth ; (; ); const. virtual . Reimplemented in TMVA::LogInterval.; Definition at line 155 of file Interval.cxx. ◆ IsA(). virtual TClass * TMVA::Interval::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented in TMVA::LogInterval.; Definition at line 93 of file Interval.h. ◆ Log(). TMVA::MsgLogger & TMVA::Interval::Log ; (; ); const. private . Definition at line 171 of file Interval.cxx. ◆ Print(). void TMVA::Interval::Print ; (; std::ostream & ; os); const. virtual . Definition at line 164 of file Interval.cxx. ◆ SetMax(). void TMVA::Interval::SetMax ; (; Double_t ; m). inline . Definition at line 80 of file Interval.h. ◆ SetMin(). void TMVA::Interval::SetMin ; (; Double_t ; m). inline . Definition at line 81 of file Interval.h. ◆ Streamer(). virtual void TMVA::Interval::Streamer ; (; TBuffer & ; ). virtual . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Interval.html:5423,Log,LogInterval,5423,doc/master/classTMVA_1_1Interval.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Interval.html,1,['Log'],['LogInterval']
Testability,"ax(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::ProbDouble_t Prob(Double_t chi2, Int_t ndf)Computation of the probability for a certain Chi-squared (chi2) and number of degrees of freedom (ndf...Definition TMath.cxx:637; TMath::QuietNaNDouble_t QuietNaN()Returns a quiet NaN as defined by IEEE 754.Definition TMath.h:902; TMath::SqrtDouble_t Sqrt(Double_t x)Returns the square root of x.Definition TMath.h:662; TMath::PowerLongDouble_t Power(LongDouble_t x, LongDouble_t y)Returns x raised to the power y.Definition TMath.h:721; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; TMath::AreEqualRelBool_t AreEqualRel(Double_t af, Double_t bf, Double_t relPrec)Comparing floating points.Definition TMath.h:426; TMath::BinarySearchLong64_t BinarySearch(Long64_t n, const T *array, T value)Binary search in an array of n values to locate value.Definition TMathBase.h:347; TMath::Log10Double_t Log10(Double_t x)Returns the common (base-10) logarithm of x.Definition TMath.h:762; TMath::AbsShort_t Abs(Short_t d)Returns the absolute value of parameter Short_t d.Definition TMathBase.h:123; TMath::InfinityDouble_t Infinity()Returns an infinity as defined by the IEEE standard.Definition TMath.h:917; formula1Definition formula1.py:1; v@ vDefinition rootcling_impl.cxx:3699; ROOT::v5::TF1DataDefinition TF1Data.h:37; ROOT::v5::TF1Data::fParMinDouble_t * fParMinDefinition TF1Data.h:48; ROOT::v5::TF1Data::fNsaveInt_t fNsaveDefinition TF1Data.h:45; ROOT::v5::TF1Data::fSaveDouble_t * fSaveDefinition TF1Data.h:50; ROOT::v5::TF1Data::Streamervoid Streamer(TBuffer &b, Int_t version, UInt_t start, UInt_t count, const TClass *onfile_class=nullptr)specialized streamer function being able to read old TF1 versions as TF1Data in memoryDefinition TF1Data_v5.cxx:81; ROOT::v5::TF1Data::fNpxInt_t fNpxDefinition TF1Data.h:41; ROOT::v5::TF1Data::fXminDouble_t fXminDefinition TF1Data.h:39; ROOT::v5::TF1Data::fNpfitsInt_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:202042,log,logarithm,202042,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['log'],['logarithm']
Testability,"ax(dfmax2, TMath::Abs(rsum1-rsum2));; 1592 }; 1593 }; 1594 ; 1595 // Get Kolmogorov probability: use effective entries, esum1 or esum2, for normalizing it; 1596 Double_t factnm;; 1597 if (afunc1) factnm = TMath::Sqrt(esum2);; 1598 else if (afunc2) factnm = TMath::Sqrt(esum1);; 1599 else factnm = TMath::Sqrt(esum1*sum2/(esum1+esum2));; 1600 ; 1601 // take average of the two distances; 1602 Double_t dfmax = 0.5*(dfmax1+dfmax2);; 1603 Double_t z = dfmax*factnm;; 1604 ; 1605 prb = TMath::KolmogorovProb(z);; 1606 ; 1607 Double_t prb1 = 0, prb2 = 0;; 1608 // option N to combine normalization makes sense if both afunc1 and afunc2 are false; 1609 if (opt.Contains(""N"") && !(afunc1 || afunc2 ) ) {; 1610 // Combine probabilities for shape and normalization; 1611 prb1 = prb;; 1612 Double_t d12 = esum1-esum2;; 1613 Double_t chi2 = d12*d12/(esum1+esum2);; 1614 prb2 = TMath::Prob(chi2,1);; 1615 // see Eadie et al., section 11.6.2; 1616 if (prb > 0 && prb2 > 0) prb = prb*prb2*(1-TMath::Log(prb*prb2));; 1617 else prb = 0;; 1618 }; 1619 ; 1620 // debug printout; 1621 if (opt.Contains(""D"")) {; 1622 printf("" Kolmo Prob h1 = %s, sum1=%g\n"",h1->GetName(),sum1);; 1623 printf("" Kolmo Prob h2 = %s, sum2=%g\n"",h2->GetName(),sum2);; 1624 printf("" Kolmo Probabil = %f, Max Dist = %g\n"",prb,dfmax);; 1625 if (opt.Contains(""N"")); 1626 printf("" Kolmo Probabil = %f for shape alone, =%f for normalisation alone\n"",prb1,prb2);; 1627 }; 1628 // This numerical error condition should never occur:; 1629 if (TMath::Abs(rsum1-1) > 0.002) Warning(""KolmogorovTest"",""Numerical problems with h1=%s\n"",h1->GetName());; 1630 if (TMath::Abs(rsum2-1) > 0.002) Warning(""KolmogorovTest"",""Numerical problems with h2=%s\n"",h2->GetName());; 1631 ; 1632 if(opt.Contains(""M"")) return dfmax; // return average of max distance; 1633 ; 1634 return prb;; 1635}; 1636 ; 1637 ; 1638////////////////////////////////////////////////////////////////////////////////; 1639/// Rebin only the X axis; 1640/// see Rebin2D; 1641 ; 1642TH2 *TH2::Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:64749,Log,Log,64749,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['Log'],['Log']
Testability,"ax) {; 4537 np++;; 4538 if (i1 < 0) i1 = i;; 4539 if (i < n-1) continue;; 4540 }; 4541 if (np == 0) continue;; 4542 if (!gPad->IsBatch() && GetPainter()); 4543 GetPainter()->DrawPolyMarker(np, &x[i1], &y[i1]);; 4544 if (gVirtualPS) {; 4545 gVirtualPS->DrawPolyMarker(np, &x[i1], &y[i1]);; 4546 }; 4547 i1 = -1;; 4548 np = 0;; 4549 }; 4550 Modified();; 4551}; 4552 ; 4553////////////////////////////////////////////////////////////////////////////////; 4554/// Paint polymarker in CurrentPad World coordinates.; 4555 ; 4556void TPad::PaintPolyMarker(Int_t nn, Double_t *x, Double_t *y, Option_t *); 4557{; 4558 Int_t n = TMath::Abs(nn);; 4559 Double_t xmin,xmax,ymin,ymax;; 4560 if (nn > 0 || TestBit(TGraph::kClipFrame)) {; 4561 xmin = fUxmin; ymin = fUymin; xmax = fUxmax; ymax = fUymax;; 4562 } else {; 4563 xmin = fX1; ymin = fY1; xmax = fX2; ymax = fY2;; 4564 }; 4565 Int_t i,i1=-1,np=0;; 4566 for (i=0; i<n; i++) {; 4567 if (x[i] >= xmin && x[i] <= xmax && y[i] >= ymin && y[i] <= ymax) {; 4568 np++;; 4569 if (i1 < 0) i1 = i;; 4570 if (i < n-1) continue;; 4571 }; 4572 if (np == 0) continue;; 4573 if (!gPad->IsBatch() && GetPainter()); 4574 GetPainter()->DrawPolyMarker(np, &x[i1], &y[i1]);; 4575 if (gVirtualPS) {; 4576 gVirtualPS->DrawPolyMarker(np, &x[i1], &y[i1]);; 4577 }; 4578 i1 = -1;; 4579 np = 0;; 4580 }; 4581 Modified();; 4582}; 4583 ; 4584////////////////////////////////////////////////////////////////////////////////; 4585/// Paint text in CurrentPad World coordinates.; 4586 ; 4587void TPad::PaintText(Double_t x, Double_t y, const char *text); 4588{; 4589 Modified();; 4590 ; 4591 if (!gPad->IsBatch() && GetPainter()); 4592 GetPainter()->DrawText(x, y, text, TVirtualPadPainter::kClear);; 4593 ; 4594 if (gVirtualPS) gVirtualPS->Text(x, y, text);; 4595}; 4596 ; 4597////////////////////////////////////////////////////////////////////////////////; 4598/// Paint text in CurrentPad World coordinates.; 4599 ; 4600void TPad::PaintText(Double_t x, Double_t y, const wchar_t *tex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:144634,Test,TestBit,144634,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['Test'],['TestBit']
Testability,"ax))*(q1+y*(q2+y*(q3+y*(q4+y*(q5+y*(q6+y*(q7+y*(q8+y*q9))))))));; 1516 if (x < 0) result = -result;; 1517 }; 1518 return result;; 1519}; 1520 ; 1521////////////////////////////////////////////////////////////////////////////////; 1522/// Computes the modified Bessel function K_1(x) for positive real x.; 1523///; 1524/// M.Abramowitz and I.A.Stegun, Handbook of Mathematical Functions,; 1525/// Applied Mathematics Series vol. 55 (1964), Washington.; 1526///; 1527/// \author NvE 12-mar-2000 UU-SAP Utrecht; 1528 ; 1529Double_t TMath::BesselK1(Double_t x); 1530{; 1531 // Parameters of the polynomial approximation; 1532 const Double_t p1= 1., p2= 0.15443144, p3=-0.67278579,; 1533 p4=-0.18156897, p5=-1.919402e-2, p6=-1.10404e-3, p7=-4.686e-5;; 1534 ; 1535 const Double_t q1= 1.25331414, q2= 0.23498619, q3=-3.655620e-2,; 1536 q4= 1.504268e-2, q5=-7.80353e-3, q6= 3.25614e-3, q7=-6.8245e-4;; 1537 ; 1538 if (x <= 0) {; 1539 Error(""TMath::BesselK1"", ""*K1* Invalid argument x = %g\n"",x);; 1540 return 0;; 1541 }; 1542 ; 1543 Double_t y=0,result=0;; 1544 ; 1545 if (x <= 2) {; 1546 y = x*x/4;; 1547 result = (log(x/2.)*TMath::BesselI1(x))+(1./x)*(p1+y*(p2+y*(p3+y*(p4+y*(p5+y*(p6+y*p7))))));; 1548 } else {; 1549 y = 2/x;; 1550 result = (exp(-x)/sqrt(x))*(q1+y*(q2+y*(q3+y*(q4+y*(q5+y*(q6+y*q7))))));; 1551 }; 1552 return result;; 1553}; 1554 ; 1555////////////////////////////////////////////////////////////////////////////////; 1556/// Computes the Integer Order Modified Bessel function K_n(x); 1557/// for n=0,1,2,... and positive real x.; 1558///; 1559/// \author NvE 12-mar-2000 UU-SAP Utrecht; 1560 ; 1561Double_t TMath::BesselK(Int_t n,Double_t x); 1562{; 1563 if (x <= 0 || n < 0) {; 1564 Error(""TMath::BesselK"", ""*K* Invalid argument(s) (n,x) = (%d, %g)\n"",n,x);; 1565 return 0;; 1566 }; 1567 ; 1568 if (n==0) return TMath::BesselK0(x);; 1569 if (n==1) return TMath::BesselK1(x);; 1570 ; 1571 // Perform upward recurrence for all x; 1572 Double_t tox = 2/x;; 1573 Double_t bkm = TMath::Bess",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:51596,log,log,51596,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['log'],['log']
Testability,"axDefinition THbookFile.cxx:95; TMath.h; TMatrixDSym.h; TMatrixD.h; TPaveText.h; Formchar * Form(const char *fmt,...)Formats a string in a circular formatting buffer.Definition TString.cxx:2489; RooAbsArgCommon abstract base class for objects that represent a value and a ""shape"" in RooFit.Definition RooAbsArg.h:79; RooAbsArg::clearValueAndShapeDirtyvoid clearValueAndShapeDirty() constDefinition RooAbsArg.h:571; RooAbsArg::Printvoid Print(Option_t *options=nullptr) const overridePrint the object to the defaultPrintStream().Definition RooAbsArg.h:294; RooAbsArg::dependsOnbool dependsOn(const RooAbsCollection &serverList, const RooAbsArg *ignoreArg=nullptr, bool valueOnly=false) constTest whether we depend on (ie, are served by) any object in the specified collection.Definition RooAbsArg.cxx:850; RooAbsArg::constR__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg constDefinition RooAbsArg.h:145; RooAbsArg::setOperModevoid setOperMode(OperMode mode, bool recurseADirty=true)Set the operation mode of this node.Definition RooAbsArg.cxx:1963; RooAbsArg::getParametersRooFit::OwningPtr< RooArgSet > getParameters(const RooAbsData *data, bool stripDisconnected=true) constCreate a list of leaf nodes in the arg tree starting with ourself as top node that don't match any of...Definition RooAbsArg.cxx:541; RooAbsArg::getObservablesRooFit::OwningPtr< RooArgSet > getObservables(const RooArgSet &set, bool valueOnly=true) constGiven a set of possible observables, return the observables that this PDF depends on.Definition RooAbsArg.cxx:698; RooAbsArg::addOwnedComponentsbool addOwnedComponents(const RooAbsCollection &comps)Take ownership of the contents of 'comps'.Definition RooAbsArg.cxx:2258; RooAbsArg::ADirty@ ADirtyDefinition RooAbsArg.h:362; RooAbsArg::getStringAttributeconst Text_t * getStringAttribute(const Text_t *key) constGet string attribute mapped",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:136016,test,testArg,136016,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['test'],['testArg']
Testability,"axQ); static voidLoadMacro(const char* mac); static voidMacro(const char* mac); TEveUtil&operator=(const TEveUtil&); static voidSetColorBrightness(Float_t value, Bool_t full_redraw = kFALSE); static voidSetupEnvironment(); static voidSetupGUI(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. static TObjArray*fgDefaultColors. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupEnvironment(); Setup Include and Macro paths.; Since inclusion into ROOT this does nothing but could; potentially be reactivated if some common macros are established; and shipped with binary ROOT (in macros/eve). For example, these; might be used to spawn specific GUI / GL configurations. void SetupGUI(); Setup icon pictures and mime-types. Bool_t CheckMacro(const char* mac); Checks if macro 'mac' is loaded. void AssertMacro(const char* mac); Load and execute macro 'mac' if it has not been loaded yet. void Macro(const char* mac); Execute macro 'mac'. Do not reload the macro. void LoadMacro(const char* mac); Makes sure that macro 'mac' is loaded, but do not reload it. void ColorFromIdx(Color_t ci, UChar_t* col, Bool_t alpha = kTRUE); Fill col with RGBA values corresponding to index ci. If alpha; is true, set alpha component of col to 255.; ROOT's indexed color palette does not support transparency. void ColorFromIdx(Color_t ci, UChar_t* col, Char_t transparency); Fill col with RGBA values corresponding to index ci and transparency.; ROOT's indexed color palette does not support transparency. void ColorFromIdx(Float_t f1, Color_t c1, Float_t f2, Color_t c2, UChar_t* col, Bool_t alpha = kTRUE); Fill col with weighted RGBA values corresponding to; color-indices c1 and c2. If alpha is true, set alpha component; of col to 255. Color_t* FindColorVar(TObject* obj, const char* varname); Find address of Color_t data-member with name varname in o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveUtil.html:2312,Assert,AssertMacro,2312,root/html534/TEveUtil.html,https://root.cern,https://root.cern/root/html534/TEveUtil.html,1,['Assert'],['AssertMacro']
Testability,"aximum; number of xtru vertices. Int_t CountNodes(const TGeoVolume* vol = 0, Int_t nlevels = 10000, Int_t option = 0); Count the total number of nodes starting from a volume, nlevels down. void DefaultAngles(); Set default angles for a given view. void DrawCurrentPoint(Int_t color = 2); Draw current point in the same view. void AnimateTracks(Double_t tmin = 0, Double_t tmax = 5E-8, Int_t nframes = 200, Option_t* option = ""/*""); Draw animation of tracks. void DrawTracks(Option_t* option = """"); Draw tracks over the geometry, according to option. By default, only; primaries are drawn. See TGeoTrack::Draw() for additional options. void DrawPath(const char* path, Option_t* option = """"); Draw current path. void RandomPoints(const TGeoVolume* vol, Int_t npoints = 10000, Option_t* option = """"); Draw random points in the bounding box of a volume. void Test(Int_t npoints = 1000000, Option_t* option = """"); Check time of finding ""Where am I"" for n points. void TestOverlaps(const char* path = """"); Geometry overlap checker based on sampling. void GetBranchNames(Int_t* names) const; Fill volume names of current branch into an array. const char * GetPdgName(Int_t pdg) const; Get name for given pdg code;. void SetPdgName(Int_t pdg, const char* name); Set a name for a particle having a given pdg. void GetBranchNumbers(Int_t* copyNumbers, Int_t* volumeNumbers) const; Fill node copy numbers of current branch into an array. void GetBranchOnlys(Int_t* isonly) const; Fill node copy numbers of current branch into an array. void GetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; Retrieve cartesian and radial bomb factors. Int_t GetMaxDaughters(); Return maximum number of daughters of a volume used in the geometry. Int_t GetMaxLevels(); Return maximum number of levels used in the geometry. Int_t GetMaxXtruVert(); Return maximum number of vertices for an xtru shape used. Int_t GetNumThreads(); Returns number of threads that were set to use geometry. TGeo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoManager.html:48481,Test,TestOverlaps,48481,root/html534/TGeoManager.html,https://root.cern,https://root.cern/root/html534/TGeoManager.html,1,['Test'],['TestOverlaps']
Testability,"axis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char* funcname, Int_t ndiv = 510, Option_t* chopt = """", Double_t gridlength = 0); TGaxis constructor with a TF1 to map axis values. See explanation of parameters in PaintAxis; Instead of the wmin,wmax arguments of the normal constructor, the; name of a TF1 function can be specified. This function will be used; by TGaxis::PaintAxis to map the user coordinates to the axis values; and ticks.; Examples:; void gaxis3a(); {; gStyle->SetOptStat(0);. TH2F *h2 = new TH2F(""h"",""Axes"",100,0,10,100,-2,2);; h2->Draw();. TF1 *f1=new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();. TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();. TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,""G"");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.03);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(1.2);; A3->Draw();; }. /*; ; */. TGaxis(const TGaxis& ); Copy constructor. TGaxis& operator=(const TGaxis& ); Assignement operator. ~TGaxis(); TGaxis default destructor. void CenterLabels(Bool_t center = kTRUE); If center = kTRUE axis labels are centered in the center of the bin.; The default is to center on the primary tick marks.; This option does not make sense if there are more bins than tick marks. void CenterTitle(Bool_t center = kTRUE); If center = kTRUE axis title will be centered.; The default is right adjusted. void DrawAxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Double_t wmin, Double_t wmax, Int_t ndiv = 510, Option_t* chopt = """", Double_t gridlength = 0); Draw this axis with new attributes. Int_t GetMaxDigits(); Static function returning fgMaxDigits (See SetMaxDigits). void ImportAxisAttributes(TAxis* axis); Copy TAxis attributes to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGaxis.html:13933,log,logarithmic,13933,root/html528/TGaxis.html,https://root.cern,https://root.cern/root/html528/TGaxis.html,5,['log'],['logarithmic']
Testability,"axis.h. ◆ SetLabelSize(). void TGaxis::SetLabelSize ; (; Float_t ; labelsize). inline . Definition at line 107 of file TGaxis.h. ◆ SetMaxDigits(). void TGaxis::SetMaxDigits ; (; Int_t ; maxd = 5). static . Static function to set fgMaxDigits for axis. ; fgMaxDigits is the maximum number of digits permitted for the axis labels above which the notation with 10^N is used.For example, to accept 6 digits number like 900000 on an axis call TGaxis::SetMaxDigits(6). The default value is 5. fgMaxDigits must be greater than 0. Warning: this static function changes the max number of digits in all axes. If you only want to change the digits of the current TGaxis instance, use axis->SetNdivisions(N*1000000 + (axis->GetNdiv()%1000000)) instead of axis->SetMaxDigits(N). ; Definition at line 2896 of file TGaxis.cxx. ◆ SetMoreLogLabels(). void TGaxis::SetMoreLogLabels ; (; Bool_t ; more = kTRUE). virtual . Set the kMoreLogLabels bit flag. ; When this option is selected more labels are drawn when in logarithmic scale and there is a small number of decades (less than 3). Note that this option is automatically inherited from TAxis ; Definition at line 2914 of file TGaxis.cxx. ◆ SetName(). void TGaxis::SetName ; (; const char * ; name). virtual . Change the name of the axis. ; Definition at line 2904 of file TGaxis.cxx. ◆ SetNdivisions(). virtual void TGaxis::SetNdivisions ; (; Int_t ; ndiv). inlinevirtual . Definition at line 118 of file TGaxis.h. ◆ SetNoExponent(). void TGaxis::SetNoExponent ; (; Bool_t ; noExponent = kTRUE). virtual . Set the NoExponent flag. ; By default, an exponent of the form 10^N is used when the label values are either all very small or very large. One can disable the exponent by calling axis.SetNoExponent(kTRUE). ; Definition at line 2925 of file TGaxis.cxx. ◆ SetOption(). void TGaxis::SetOption ; (; Option_t * ; option = """"). To set axis options. ; Definition at line 2934 of file TGaxis.cxx. ◆ SetTickLength(). void TGaxis::SetTickLength ; (; Float_t ; ticklengt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGaxis.html:73983,log,logarithmic,73983,doc/master/classTGaxis.html,https://root.cern,https://root.cern/doc/master/classTGaxis.html,1,['log'],['logarithmic']
Testability,"axiter (default = 100) controls the maximum number; of iteration of the Brent algorithm; If the flag logx is set the grid search is done in log step size; This is done automatically if the log scale is set in the current Pad. NOTE: see also TF1::GetX. Double_t GetMinimum(Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.0E-10, Int_t maxiter = 100, Bool_t logx = false) const; Returns the minimum value of the function on the (xmin, xmax) interval; Method:; First, the grid search is used to bracket the maximum; with the step size = (xmax-xmin)/fNpx. This way, the step size; can be controlled via the SetNpx() function. If the function is; unimodal or if its extrema are far apart, setting the fNpx to; a small value speeds the algorithm up many times.; Then, Brent's method is applied on the bracketed interval; epsilon (default = 1.E-10) controls the relative accuracy (if |x| > 1 ); and absolute (if |x| < 1) and maxiter (default = 100) controls the maximum number; of iteration of the Brent algorithm; If the flag logx is set the grid search is done in log step size; This is done automatically if the log scale is set in the current Pad. NOTE: see also TF1::GetMaximumX and TF1::GetX. Double_t GetMinMaxNDim(Double_t* x, Bool_t findmax, Double_t epsilon = 0, Int_t maxiter = 0) const; find the minimum of a function of whatever dimension.; While GetMinimum works only for 1D function , GetMinimumNDim works for all dimensions; since it uses the minimizer interface; vector x at beginning will contained the initial point, on exit will contain the result. Double_t GetMinimumX(Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.0E-10, Int_t maxiter = 100, Bool_t logx = false) const; Returns the X value corresponding to the minimum value of the function; on the (xmin, xmax) interval; Method:; First, the grid search is used to bracket the maximum; with the step size = (xmax-xmin)/fNpx. This way, the step size; can be controlled via the SetNpx() function. If the function i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TF1.html:44771,log,logx,44771,root/html602/TF1.html,https://root.cern,https://root.cern/root/html602/TF1.html,6,['log'],"['log', 'logx']"
Testability,"ay at each epoch; (look at the constructor for the complete description; of learning methods and parameters). void SetTau(Double_t tau); Sets Tau - used in line search; (look at the constructor for the complete description; of learning methods and parameters). void SetReset(Int_t reset); Sets number of epochs between two resets of the; search direction to the steepest descent.; (look at the constructor for the complete description; of learning methods and parameters). void GetEntry(Int_t ) const; Load an entry into the network. void Train(Int_t nEpoch, Option_t* option = ""text"", Double_t minE = 0); Train the network.; nEpoch is the number of iterations.; option can contain:; - ""text"" (simple text output); - ""graph"" (evoluting graphical training curves); - ""update=X"" (step for the text/graph output update); - ""+"" will skip the randomisation and start from the previous values.; - ""current"" (draw in the current canvas); - ""minErrorTrain"" (stop when NN error on the training sample gets below minE; - ""minErrorTest"" (stop when NN error on the test sample gets below minE; All combinations are available. Double_t Result(Int_t event, Int_t index = 0) const; Computes the output for a given event.; Look at the output neuron designed by index. Double_t GetError(Int_t event) const; Error on the output for a given event. Double_t GetError(TMultiLayerPerceptron::EDataSet set) const; Error on the whole dataset. Double_t GetSumSquareError() const; Error on the output for a given event. Double_t GetCrossEntropyBinary() const; Cross entropy error for sigmoid output neurons, for a given event. Double_t GetCrossEntropy() const; Cross entropy error for a softmax output neuron, for a given event. void ComputeDEDw() const; Compute the DEDw = sum on all training events of dedw for each weight; normalized by the number of events. void Randomize() const; Randomize the weights. void AttachData(); Connects the TTree to Neurons in input and output; layers. The formulas associated to each neuron ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiLayerPerceptron.html:25259,test,test,25259,root/html528/TMultiLayerPerceptron.html,https://root.cern,https://root.cern/root/html528/TMultiLayerPerceptron.html,6,['test'],['test']
Testability,"ay corresponds to a different variable like in the case of image; 824 // In that case the VAriableInfo has a bit, IsVariableFromArray that is set and we have a single formula for the array; 825 // fInputFormulaTable contains a map of the formula and the variable index to evaluate the formula; 826 for (UInt_t ivar = 0; ivar < nvars; ivar++) {; 827 // distinguish case where variable is not from an array; 828 if (dsi.IsVariableFromArray(ivar)) continue;; 829 auto inputFormula = fInputTableFormulas[ivar].first;; 830 ; 831 Int_t ndata = inputFormula->GetNdata();; 832 ; 833 classEventCounts.varAvLength[ivar] += ndata;; 834 if (ndata == 1) continue;; 835 haveAllArrayData = kTRUE;; 836 //varIsArray[ivar] = kTRUE;; 837 //std::cout << ""Found array !!!"" << std::endl;; 838 if (sizeOfArrays == 1) {; 839 sizeOfArrays = ndata;; 840 prevArrExpr = ivar;; 841 }; 842 else if (sizeOfArrays!=ndata) {; 843 Log() << kERROR << Form(""Dataset[%s] : "",dsi.GetName())<< ""ERROR while preparing training and testing trees:"" << Endl;; 844 Log() << Form(""Dataset[%s] : "",dsi.GetName())<< "" multiple array-type expressions of different length were encountered"" << Endl;; 845 Log() << Form(""Dataset[%s] : "",dsi.GetName())<< "" location of error: event "" << evtIdx; 846 << "" in tree "" << currentInfo.GetTree()->GetName(); 847 << "" of file "" << currentInfo.GetTree()->GetCurrentFile()->GetName() << Endl;; 848 Log() << Form(""Dataset[%s] : "",dsi.GetName())<< "" expression "" << inputFormula->GetTitle() << "" has ""; 849 << Form(""Dataset[%s] : "",dsi.GetName()) << ndata << "" entries, while"" << Endl;; 850 Log() << Form(""Dataset[%s] : "",dsi.GetName())<< "" expression "" << fInputTableFormulas[prevArrExpr].first->GetTitle() << "" has ""; 851 << Form(""Dataset[%s] : "",dsi.GetName())<< fInputTableFormulas[prevArrExpr].first->GetNdata() << "" entries"" << Endl;; 852 Log() << kFATAL << Form(""Dataset[%s] : "",dsi.GetName())<< ""Need to abort"" << Endl;; 853 }; 854 }; 855 ; 856 // now we read the information; 857 for (Int_t idata = 0; id",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:35659,test,testing,35659,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,2,"['Log', 'test']","['Log', 'testing']"
Testability,"ay); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); voidTGMainFrame::SetMWMHints(UInt_t value, UInt_t funcs, UInt_t input); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGMainFrame::SetWindowName(const char* name = 0); voidTGMainFrame::SetWMPosition(Int_t x, Int_t y); voidTGMainFrame::SetWMSize(UInt_t w, UInt_t h); voidTGMainFrame::SetWMSizeHints(UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc); voidTGMainFrame::SetWMState(EInitialState state); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); TUploadDataSetDlg(const TUploadDataSetDlg&); TUploadDataSetDlg(TSessionViewer* gui, Int_t w, Int_t h); virtual voidTGFrame::UnmapWindow(); voidUploadDataSet(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUploadDataSetDlg.html:16256,Test,TestBit,16256,root/html602/TUploadDataSetDlg.html,https://root.cern,https://root.cern/root/html602/TUploadDataSetDlg.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ay.cxx:387; TObjArray::Clearvoid Clear(Option_t *option="""") overrideRemove all objects from the array.Definition TObjArray.cxx:321; TObjArray::Compressvirtual void Compress()Remove empty slots from array.Definition TObjArray.cxx:334; TObjArray::GetEntriesInt_t GetEntries() const overrideReturn the number of objects in array (i.e.Definition TObjArray.cxx:523; TObjArray::AtTObject * At(Int_t idx) const overrideDefinition TObjArray.h:164; TObjArray::RemoveTObject * Remove(TObject *obj) overrideRemove object from array.Definition TObjArray.cxx:719; TObjArray::FindObjectTObject * FindObject(const char *name) const overrideFind an object in this collection using its name.Definition TObjArray.cxx:415; TObjArray::Addvoid Add(TObject *obj) overrideDefinition TObjArray.h:68; TObjStringCollectable string class.Definition TObjString.h:28; TObjString::StringTString & String()Definition TObjString.h:48; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::IsOnHeapR__ALWAYS_INLINE Bool_t IsOnHeap() constDefinition TObject.h:152; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::FindObjectvirtual TObject * FindObject(const char *name) constMust be redefined in derived classes.Definition TObject.cxx:408; TObject::Classstatic TClass * Class(); TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::GetTitlevirtual const char * GetTitle() constReturns title of object.Definition TObject.cxx:488; TObject::IsAvirtual TClass * IsA() constDefinition TObject.h:243; TObject::MakeZombievoid MakeZombie()Definition TObject.h:53; TObject::kInvalidObject@ kInvalidObjectif object ctor s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:475974,Test,TestBit,475974,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['Test'],['TestBit']
Testability,"ayDim(Int_t dim); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCountClass(const char* clname); voidSetCountName(const char* name); voidSetCountVersion(Int_t count); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTStreamerElement::SetMaxIndex(Int_t dim, Int_t max); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTStreamerElement::SetNewClass(TClass* cl); virtual voidTStreamerElement::SetNewType(Int_t dtype); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTStreamerElement::SetOffset(Int_t offset); virtual voidTStreamerElement::SetSize(Int_t dsize); virtual voidTStreamerElement::SetStreamer(TMemberStreamer* streamer); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTStreamerElement::SetTObjectOffset(Int_t tobjoffset); virtual voidTStreamerElement::SetType(Int_t dtype); virtual voidTStreamerElement::SetTypeName(const char* name); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TStreamerLoop(); TStreamerLoop(const char* name, const char* title, Int_t offset, const char* countName, const char* countClass, Int_t version, const char* typeName); virtual voidTStreamerElement::Update(const TClass* oldClass, TClass* newClass); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerLoop.html:6805,Test,TestBit,6805,root/html602/TStreamerLoop.html,https://root.cern,https://root.cern/root/html602/TStreamerLoop.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGenPhaseSpace&operator=(const TGenPhaseSpace& gen); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); Bool_tSetDecay(TLorentzVector& P, Int_t nt, const Double_t* mass, Option_t* opt = """"); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGenPhaseSpace.html:5061,Test,TestBit,5061,root/html534/TGenPhaseSpace.html,https://root.cern,https://root.cern/root/html534/TGenPhaseSpace.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TCondorSlave&operator=(const TCondorSlave&); TCondorSlave&operator=(TCondorSlave&&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TCondorSlave(); TCondorSlave(TCondorSlave&&); TCondorSlave(const TCondorSlave&); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCondorSlave.html:4550,Test,TestBit,4550,root/html602/TCondorSlave.html,https://root.cern,https://root.cern/root/html602/TCondorSlave.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMySQLRow&operator=(const TMySQLRow&); const char*TSQLRow::operator[](Int_t field); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TMySQLRow(const TMySQLRow&); TMySQLRow(void* result, ULong_t rowHandle); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMySQLRow.html:4398,Test,TestBit,4398,root/html602/TMySQLRow.html,https://root.cern,https://root.cern/root/html602/TMySQLRow.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidoperator delete(void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); void*OrgAddress(void* addr) const; virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); TObject*Remove(TObject* obj); TObject*Remove(const char* name); voidRemoveAll(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidSetMapAddress(Long_t addr); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidUpdate(TObject* obj = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; static TMapFile*WhichMapFile(void* addr); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMapFile.html:6915,Test,TestBit,6915,root/html602/TMapFile.html,https://root.cern,https://root.cern/root/html602/TMapFile.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ayer);  Set a new PROOF player. ;  ; void SetupWorkersEnv (TList *wrks, Bool_t increasingpool=kFALSE);  Set up packages, loaded macros, include and lib paths ... ;  ; virtual Bool_t StartSlaves (Bool_t attach=kFALSE);  Start up PROOF slaves. ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; virtual void ValidateDSet (TDSet *dset);  Validate a TDSet. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  Internal function for parallel dataset verification used TProof::VerifyDataSet and TProofLite::VerifyDataSet. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static Int_t AssertDataSet (TDSet *dset, TList *input, TDataSetManager *mgr, TString &emsg);  Make sure that dataset is in the form to be processed. ;  ; static void AssertMacroPath (const char *macro);  Make sure that the directory path contained by macro is in the macro path. ;  ; static Bool_t GetFileInCmd (const char *cmd, TString &fn);  Static method to extract the filename (if any) form a CINT command. ;  ; static Int_t GetInputData (TList *input, const char *cachedir, TString &emsg);  Get the input data from the file defined in the input list. ;  ; static Int_t SaveInputData (TQueryResult *qr, const char *cachedir, TString &emsg);  Save input data file from 'cachedir' into the sandbox or create a the file with input data objects. ;  ; static Int_t SendInputData (TQueryResult *qr, TProof *p, TString &emsg);  Send the input data file to the workers. ;  ; static void * SlaveStartupThread (void *arg);  ; static void SystemCmd (const char *cmd, Int_t fdout);  Exec system command 'cmd'. If fdout > -1, append the output to fdout. ;  ;  Stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:40494,Assert,AssertDataSet,40494,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['Assert'],['AssertDataSet']
Testability,"ayerPerceptron (const char *layout, TTree *data, TEventList *training, TEventList *test, TNeuron::ENeuronType type=TNeuron::kSigmoid, const char *extF="""", const char *extD="""");  The network is described by a simple string: The input/output layers are defined by giving the branch names separated by comas. ;  ;  TMultiLayerPerceptron (const char *layout, TTree *data=nullptr, const char *training=""Entry$%2==0"", const char *test="""", TNeuron::ENeuronType type=TNeuron::kSigmoid, const char *extF="""", const char *extD="""");  The network is described by a simple string: The input/output layers are defined by giving the branch names separated by comas. ;  ;  ~TMultiLayerPerceptron () override;  Destructor. ;  ; void ComputeDEDw () const;  Compute the DEDw = sum on all training events of dedw for each weight normalized by the number of events. ;  ; void Draw (Option_t *option="""") override;  Draws the network structure. ;  ; void DrawResult (Int_t index=0, Option_t *option=""test"") const;  Draws the neural net output It produces an histogram with the output for the two datasets. ;  ; Bool_t DumpWeights (Option_t *filename=""-"") const;  Dumps the weights to a text file. ;  ; Double_t Evaluate (Int_t index, Double_t *params) const;  Returns the Neural Net for a given set of input parameters #parameters must equal #input neurons. ;  ; void Export (Option_t *filename=""NNfunction"", Option_t *language=""C++"") const;  Exports the NN as a function for any non-ROOT-dependant code Supported languages are: only C++ , FORTRAN and Python (yet) This feature is also useful if you want to plot the NN as a function (TF1 or TF2). ;  ; Double_t GetDelta () const;  ; Double_t GetEpsilon () const;  ; Double_t GetError (Int_t event) const;  Error on the output for a given event. ;  ; Double_t GetError (TMultiLayerPerceptron::EDataSet set) const;  Error on the whole dataset. ;  ; Double_t GetEta () const;  ; Double_t GetEtaDecay () const;  ; TMultiLayerPerceptron::ELearningMethod GetLearningMethod () cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:11750,test,test,11750,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['test'],['test']
Testability,"ayout and training strategy.; Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; In addition to input layout, batch layout and training strategy we add now:; ; - Type of Loss function (e.g. CROSSENTROPY); - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); - Variable Transformation; - Type of Architecture (e.g. CPU, GPU, Standard); ; We can then book the DL method using the built option string; ; ***/; ; if (useDL) {; ; bool useDLGPU = false;; #ifdef R__HAS_TMVAGPU; useDLGPU = true;; #endif; ; // Define DNN layout; TString inputLayoutString = ""InputLayout=1|1|7"";; TString batchLayoutString= ""BatchLayout=1|128|7"";; TString layoutString (""Layout=DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|1|LINEAR"");; // Define Training strategies; // one can catenate several training strategies; TString training1(""LearningRate=1e-3,Momentum=0.9,""; ""ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,""; ""MaxEpochs=30,WeightDecay=1e-4,Regularization=None,""; ""Optimizer=ADAM,ADAM_beta1=0.9,ADAM_beta2=0.999,ADAM_eps=1.E-7,"" // ADAM default parameters; ""DropConfig=0.0+0.0+0.0+0."");; // TString training2(""LearningRate=1e-3,Momentum=0.9""; // ""ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,""; // ""MaxEpochs=20,WeightDecay=1e-4,Regularization=None,""; // ""Optimizer=SGD,DropConfig=0.0+0.0+0.0+0."");; ; TString trainingStrategyString (""TrainingStrategy="");; trainingStrategyString += training1; // + ""|"" + training2;; ; // General Options.; ; TString dnnOptions (""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=G:""; ""WeightInitialization=XAVIER"");; dnnOptions.Append ("":""); dnnOptions.Append (inputLayoutString);; dnnOptions.Append ("":""); dnnOptions.Append (batchLayoutString);; dnnOptions.Append ("":""); dnnOptions.Append (layoutString);; dnnOptions.Append ("":""); dnnOptions.Append (trainingStrategyString);; ; TString dnnMethodName = ""DNN_CPU"";; if (useDLGPU) {; dnnOptions += "":Architecture=GPU"";; dnnMethodName = """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:66097,Test,TestRepetitions,66097,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['Test'],['TestRepetitions']
Testability,"ayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); voidTGMainFrame::SetMWMHints(UInt_t value, UInt_t funcs, UInt_t input); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGMainFrame::SetWindowName(const char* name = 0); voidTGMainFrame::SetWMPosition(Int_t x, Int_t y); voidTGMainFrame::SetWMSize(UInt_t w, UInt_t h); voidTGMainFrame::SetWMSizeHints(UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc); voidTGMainFrame::SetWMState(EInitialState state); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGInputDialog(const TGWindow* p = 0, const TGWindow* main = 0, const char* prompt = 0, const char* defval = 0, char* retstr = 0, UInt_t options = kVerticalFrame); virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGInputDialog.html:15834,Test,TestBit,15834,root/html602/TGInputDialog.html,https://root.cern,https://root.cern/root/html602/TGInputDialog.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); voidTGMainFrame::SetMWMHints(UInt_t value, UInt_t funcs, UInt_t input); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGMainFrame::SetWindowName(const char* name = 0); voidTGMainFrame::SetWMPosition(Int_t x, Int_t y); voidTGMainFrame::SetWMSize(UInt_t w, UInt_t h); voidTGMainFrame::SetWMSizeHints(UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc); voidTGMainFrame::SetWMState(EInitialState state); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp) const; voidStop(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGHtmlBrowser(const TGHtmlBrowser&); TGHtmlBrowser(const char* filename = 0, const TGWindow* p = 0, UInt_t w = 900, UInt_t h = 600); virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); voidURLChanged(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGHtmlBrowser.html:15913,Test,TestBit,15913,root/html602/TGHtmlBrowser.html,https://root.cern,https://root.cern/root/html602/TGHtmlBrowser.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGButtonGroup::SetRadioButtonExclusive(Bool_t flag = kTRUE); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTGButtonGroup::SetState(Bool_t state = kTRUE); virtual voidTGGroupFrame::SetTextColor(Pixel_t color, Bool_t local = kTRUE); virtual voidTGGroupFrame::SetTextFont(const char* fontName, Bool_t local = kTRUE); virtual voidTGGroupFrame::SetTextFont(FontStruct_t font, Bool_t local = kTRUE); virtual voidTGButtonGroup::SetTitle(TGString* title); virtual voidTGButtonGroup::SetTitle(const char* title); virtual voidTGGroupFrame::SetTitlePos(TGGroupFrame::ETitlePos pos = kLeft); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGButtonGroup::Show(); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGHButtonGroup.html:18604,Test,TestBit,18604,root/html528/TGHButtonGroup.html,https://root.cern,https://root.cern/root/html528/TGHButtonGroup.html,12,['Test'],"['TestBit', 'TestBits']"
Testability,"ayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); voidTGMainFrame::SetMWMHints(UInt_t value, UInt_t funcs, UInt_t input); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGMainFrame::SetWindowName(const char* name = 0); voidTGMainFrame::SetWMPosition(Int_t x, Int_t y); voidTGMainFrame::SetWMSize(UInt_t w, UInt_t h); voidTGMainFrame::SetWMSizeHints(UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc); voidTGMainFrame::SetWMState(EInitialState state); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGPrintDialog(const TGPrintDialog&); TGPrintDialog(const TGWindow* p = 0, const TGWindow* main = 0, UInt_t w = 1, UInt_t h = 1, char** printerName = 0, char** printProg = 0, Int_t* ret_code = 0, UInt_t options = kVerticalFrame); virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGPrintDialog.html:16071,Test,TestBit,16071,root/html602/TGPrintDialog.html,https://root.cern,https://root.cern/root/html602/TGPrintDialog.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ays of length na, nb, respectively.; 718/// The elements of a and b must be given in ascending order.; 719/// option is a character string to specify options; 720/// ""D"" Put out a line of ""Debug"" printout; 721/// ""M"" Return the Maximum Kolmogorov distance instead of prob; 722///; 723/// ### Output:; 724/// The returned value prob is a calculated confidence level which gives a; 725/// statistical test for compatibility of a and b.; 726/// Values of prob close to zero are taken as indicating a small probability; 727/// of compatibility. For two point sets drawn randomly from the same parent; 728/// distribution, the value of prob should be uniformly distributed between; 729/// zero and one.; 730/// in case of error the function return -1; 731/// If the 2 sets have a different number of points, the minimum of; 732/// the two sets is used.; 733///; 734/// ### Method:; 735/// The Kolmogorov test is used. The test statistic is the maximum deviation; 736/// between the two integrated distribution functions, multiplied by the; 737/// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; 738///; 739/// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); 740/// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; 741/// Statistical Methods in Experimental Physics, (North-Holland,; 742/// Amsterdam 1971) 269-271); 743///; 744/// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); 745///; 746/// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; 747/// over the two sorted arrays a and b representing empirical distribution; 748/// functions. The for-loop handles 3 cases: when the next points to be; 749/// evaluated satisfy a>b, a<b, or a=b:; 750///; 751/// ~~~ {.cpp}; 752/// for (Int_t i=0;i<na+nb;i++) {; 753/// if (a[ia-1] < b[ib-1]) {; 754/// rdiff -= sa;; 755/// ia++;; 756/// if (ia > na) {ok = kTRUE; break;}; 757/// } else if (a[ia-1] > b[ib-1]) {; 758/// rdiff += sb;; 759/// ib++;; 760/// if (ib > nb) {ok = kTRUE; bre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:24072,test,test,24072,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['test'],['test']
Testability,"b entry lists in \p elist doesn't correspond to the; 2697/// tree of the chain with the same index (i.e. it doesn't share the; 2698/// same tree name and file name).; 2699///; 2700/// This function finds correspondence between the sub-lists of the TEntryList; 2701/// and the trees of the TChain.; 2702 ; 2703void TChain::SetEntryList(TEntryList *elist, Option_t *opt); 2704{; 2705 if (fEntryList){; 2706 //check, if the chain is the owner of the previous entry list; 2707 //(it happens, if the previous entry list was created from a user-defined; 2708 //TEventList in SetEventList() function); 2709 if (fEntryList->TestBit(kCanDelete)) {; 2710 TEntryList *tmp = fEntryList;; 2711 fEntryList = nullptr; // Avoid problem with RecursiveRemove.; 2712 delete tmp;; 2713 } else {; 2714 fEntryList = nullptr;; 2715 }; 2716 }; 2717 if (!elist){; 2718 fEntryList = nullptr;; 2719 fEventList = nullptr;; 2720 return;; 2721 }; 2722 if (!elist->TestBit(kCanDelete)){; 2723 //this is a direct call to SetEntryList, not via SetEventList; 2724 fEventList = nullptr;; 2725 }; 2726 if (elist->GetN() == 0){; 2727 fEntryList = elist;; 2728 return;; 2729 }; 2730 if (fProofChain){; 2731 //for processing on proof, event list and entry list can't be; 2732 //set at the same time.; 2733 fEventList = nullptr;; 2734 fEntryList = elist;; 2735 return;; 2736 }; 2737 ; 2738 Int_t ne = fFiles->GetEntries();; 2739 Int_t listfound=0;; 2740 TString treename, filename;; 2741 ; 2742 TEntryList *templist = nullptr;; 2743 ; 2744 const auto *subentrylists = elist->GetLists();; 2745 if(strcmp(opt, ""sync"") == 0){; 2746 if(!subentrylists){; 2747 std::string msg{""In 'TChain::SetEntryList': ""};; 2748 msg += ""the input TEntryList doesn't have sub entry lists. Please make sure too add them through "";; 2749 msg += ""TEntryList::AddSubList"";; 2750 throw std::runtime_error(msg);; 2751 }; 2752 const auto nsubelists = subentrylists->GetEntries();; 2753 if(nsubelists != ne){; 2754 std::string msg{""In 'TChain::SetEntryList': ""};; 2755 m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:98738,Test,TestBit,98738,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['Test'],['TestBit']
Testability,"b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTail(const char* what, const char* how = 0, const char* where = 0); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; static TFileCollection*TProofMgr::UploadFiles(TList* src, const char* mss, const char* dest = 0); static TFileCollection*TProofMgr::UploadFiles(const char* txtfile, const char* mss, const char* dest = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidCpProgress(const char* pfx, Long64_t bytes, Long64_t size, TStopwatch* watch, Bool_t cr = kFALSE); TObjString*Exec(Int_t action, const char* what, const char* how, const char* where); Int_tInit(Int_t loglevel = -1). Data Members; public:. enum TProofMgr::EServType { kProofd; kXProofd; kProofLite; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSignalHandler*TProofMgr::fIntHandlerInterrupt signal handler (ctrl-c); TStringTProofMgr::fMssUrlURL for the remote data pool, if any; TStringTNamed::fNameobject identifier; Int_tTProofMgr::fRemoteProtocolProtocol number run by the daemon server; TProofMgr::EServTypeTProofMgr::fServTypeType of server: old-proofd, XrdProofd; TList*TProofMgr::fSessionsPROOF session managed by this server; TStringTNamed::fTitleobject title; TUrlTProofMgr::fUrlServer URL; static TListTProofMgr::fgListOfManagersSub-list of TROOT::ListOfProofs for manager",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXProofMgr.html:8655,log,loglevel,8655,root/html534/TXProofMgr.html,https://root.cern,https://root.cern/root/html534/TXProofMgr.html,1,['log'],['loglevel']
Testability,"b, Int_t first, Int_t last); static voidTSeqCollection::QSort(TObject** a, Int_t nBs, TObject*** b, Int_t first, Int_t last); virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); voidRehash(Int_t newCapacity); virtual TObject*Remove(TObject* obj); virtual TObject*Remove(TObjLink* lnk); virtual voidTSeqCollection::RemoveAfter(TObject* after); voidTCollection::RemoveAll(); virtual voidTCollection::RemoveAll(TCollection* col); virtual TObject*TSeqCollection::RemoveAt(Int_t idx); virtual voidTSeqCollection::RemoveBefore(TObject* before); virtual voidTSeqCollection::RemoveFirst(); virtual voidTList::RemoveLast(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTCollection::SetCurrentCollection(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTCollection::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTCollection::SetOwner(Bool_t enable = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidTList::Sort(Bool_t order = kSortAscending); static voidTCollection::StartGarbageCollection(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTSeqCollection::UnSort(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THashList.html:8377,Test,TestBit,8377,root/html534/THashList.html,https://root.cern,https://root.cern/root/html534/THashList.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bString& str, TDataType* entity, const char* comment = 0); Create a reference to a type documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. void ReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); Create a reference to a method documentation page.; str encloses the text to create the reference for (e.g. name of instance).; comment will be added e.g. as tooltip text.; After the reference is put into str.String(), str will enclose the reference; and the original text. Example:; Input:; str.String(): ""a gHtml test""; str.Begin(): 2; str.Length(): 5; Output:; str.String(): ""a <a href=""THtml.html"">gHtml</a> test""; str.Begin(): 2; str.Length(): 30. Bool_t ReferenceIsRelative(const char* reference) const; Check whether reference is a relative reference, and can (or should); be prependen by relative paths. For HTML, check that it doesn't start; with ""http://"" or ""https://"". const char* ReplaceSpecialChars(char c); Replace ampersand, less-than and greater-than character, writing to out.; If 0 is returned, no replacement needs to be done. void ReplaceSpecialChars(TString& text, Ssiz_t& pos); Replace ampersand, less-than and greater-than character. Input: text - text where replacement will happen,; pos - index of char to be replaced; will point to next char to be; replaced when function returns. void ReplaceSpecialChars(TString& text); Replace ampersand, less-than and greater-than character. Input: text - text where replacement will happen,. void ReplaceSpecialChars(ostream& out, const char* string); Replace ampersand, less-than and greater-than characters, writing to out. Input: out - output",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDocOutput.html:14985,test,test,14985,root/html528/TDocOutput.html,https://root.cern,https://root.cern/root/html528/TDocOutput.html,6,['test'],['test']
Testability,"back.h. ◆ Feedback(). void TStatsFeedback::Feedback ; (; TList * ; objs). Display feedback. ; Definition at line 74 of file TStatsFeedback.cxx. ◆ GetName(). const char * TStatsFeedback::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 41 of file TStatsFeedback.h. ◆ Hash(). ULong_t TStatsFeedback::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498; TStatsFeedback::HashULong_t Hash() const overrideReturn hash value for this object.Definition TStatsFeedback.h:42. Reimplemented from TObject.; Definition at line 42 of file TStatsFeedback.h. ◆ IsA(). TClass * TStatsFeedback::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatsFeedback.html:16776,log,logarithmic,16776,doc/master/classTStatsFeedback.html,https://root.cern,https://root.cern/doc/master/classTStatsFeedback.html,1,['log'],['logarithmic']
Testability,"bal number of instantiated nodes ;  ; UInt_t GetDepth () const;  ; virtual TMVA::BinaryTree * GetParentTree () const;  ; char GetPos () const;  ; void ReadXML (void *node, UInt_t tmva_Version_Code=262657);  read attributes from XML ;  ; void SetDepth (UInt_t d);  ; virtual void SetParentTree (TMVA::BinaryTree *t);  ; void SetPos (char s);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static UInt_t GetTmvaVersionCode ();  ; static bool IsTraining ();  ; static void SetIsTraining (bool on);  ; static void SetTmvaVersionCode (UInt_t code);  ;  Static Public Member Functions inherited from TMVA::Node; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Static Protected Member Functions; static MsgLogger & Log ();  . Protected Attributes; Bool_t fCutType;  true: if event variable > cutValue ==> signal , false otherwise ;  ; Float_t fCutValue;  cut value applied on this node to discriminate bkg against sig ;  ; std::vector< Double_t > fFisherCoeff;  the fisher coeff (offset at the last element) ;  ; Bool_t fIsTerminalNode;  ! flag to set node as terminal (i.e., without deleting its descendants) ;  ; Int_t fNodeType;  Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal. ;  ; Float_t fPurity;  the node purity ;  ; Float_t fResponse;  response value in case of regression ;  ; Float_t fRMS;  response RMS of the regression node ;  ; Short_t fSelector;  index of variable used in node selection (decision tree) ;  ; DTNodeTrainingInfo * fTrainInfo;  ;  Protected Attributes inherited from TMVA::Node; UInt_t fDepth;  depth of the node within the tree (seen from root node) ;  ; Node * fLeft;  pointers to the two ""daughter"" nodes ;  ; Node * fParent;  the previous (pare",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTreeNode.html:12849,Log,Log,12849,doc/master/classTMVA_1_1DecisionTreeNode.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTreeNode.html,1,['Log'],['Log']
Testability,"basePDG::~TDatabasePDG ; (; ). override . Cleanup the PDG database. ; Definition at line 85 of file TDatabasePDG.cxx. Member Function Documentation. ◆ AddAntiParticle(). TParticlePDG * TDatabasePDG::AddAntiParticle ; (; const char * ; Name, . Int_t ; PdgCode . ). virtual . assuming particle has already been defined ; Definition at line 193 of file TDatabasePDG.cxx. ◆ AddParticle(). TParticlePDG * TDatabasePDG::AddParticle ; (; const char * ; name, . const char * ; title, . Double_t ; mass, . Bool_t ; stable, . Double_t ; width, . Double_t ; charge, . const char * ; ParticleClass, . Int_t ; PDGcode, . Int_t ; Anti = -1, . Int_t ; TrackingCode = 0 . ). virtual . Particle definition normal constructor. ; If the particle is set to be stable, the decay width parameter does have no meaning and can be set to any value. The parameters granularity, LowerCutOff and HighCutOff are used for the construction of the mean free path look up tables. The granularity will be the number of logwise energy points for which the mean free path will be calculated. ; Definition at line 156 of file TDatabasePDG.cxx. ◆ Browse(). void TDatabasePDG::Browse ; (; TBrowser * ; b). overridevirtual . browse data base ; Reimplemented from TObject.; Definition at line 775 of file TDatabasePDG.cxx. ◆ BuildPdgMap(). void TDatabasePDG::BuildPdgMap ; (; ); const. protected . Build fPdgMap mapping pdg-code to particle. ; Initial size is set so as to be able to hold at least 600 particles: 521 in default table, ALICE adds 54 more. To be revisited after LHC discovers SUSY. ; Definition at line 127 of file TDatabasePDG.cxx. ◆ Class(). static TClass * TDatabasePDG::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDatabasePDG::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDatabasePDG::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 83 of file TDatabasePDG.h. ◆ C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDatabasePDG.html:15579,log,logwise,15579,doc/master/classTDatabasePDG.html,https://root.cern,https://root.cern/doc/master/classTDatabasePDG.html,1,['log'],['logwise']
Testability,"bdirectory. To recreate; the directory structure do:. TFile* file = TFile::Open(""newfile.root"", ""RECREATE"");; file->mkdir(""mydir"")->cd();; ch.Merge(file);. Long64_t Merge(TCollection* /* list */, Option_t* /* option */ ); Merge all chains in the collection. (NOT IMPLEMENTED). Long64_t Merge(TFile* file, Int_t basketsize, Option_t* option = """"); Merge all the entries in the chain into a new tree in the current file. Note: The ""file"" parameter is *not* the file where the new; tree will be inserted. The new tree is inserted into; gDirectory, which is usually the most recently opened; file, or the directory most recently cd()'d to. If option = ""C"" is given, the compression level for all branches; in the new Tree is set to the file compression level. By default,; the compression level of all branches is the original compression; level in the old trees. If basketsize > 1000, the basket size for all branches of the; new tree will be set to basketsize. Example using the file generated in $ROOTSYS/test/Event; merge two copies of Event.root. gSystem.Load(""libEvent"");; TChain ch(""T"");; ch.Add(""Event1.root"");; ch.Add(""Event2.root"");; ch.Merge(""all.root"");. If the chain is expecting the input tree inside a directory,; this directory is NOT created by this routine. So if you do:. TChain ch(""mydir/mytree"");; ch.Merge(""newfile.root"");. The resulting file will not have subdirectories. In order to; preserve the directory structure do the following instead:. TFile* file = TFile::Open(""newfile.root"", ""RECREATE"");; file->mkdir(""mydir"")->cd();; ch.Merge(file);. If 'option' contains the word 'fast' the merge will be done without; unzipping or unstreaming the baskets (i.e., a direct copy of the raw; bytes on disk). When 'fast' is specified, 'option' can also contains a; sorting order for the baskets in the output file. There is currently 3 supported sorting order:; SortBasketsByOffset (the default); SortBasketsByBranch; SortBasketsByEntry. When using SortBasketsByOffset the baskets are wri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TChain.html:39069,test,test,39069,root/html526/TChain.html,https://root.cern,https://root.cern/root/html526/TChain.html,1,['test'],['test']
Testability,be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 48 of file RooRealL.cxx. ◆ getCarry(). double RooFit::TestStatistics::RooRealL::getCarry ; (; ); const. inline . Definition at line 41 of file RooRealL.h. ◆ getRooAbsL(). std::shared_ptr< RooAbsL > const & RooFit::TestStatistics::RooRealL::getRooAbsL ; (; ). inline . Definition at line 44 of file RooRealL.h. ◆ globalNormalization(). double RooFit::TestStatistics::RooRealL::globalNormalization ; (; ); const. inline . Definition at line 35 of file RooRealL.h. ◆ IsA(). TClass * RooFit::TestStatistics::RooRealL::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsReal.; Definition at line 55 of file RooRealL.h. ◆ Streamer(). void RooFit::TestStatistics::RooRealL::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooFit::TestStatistics::RooRealL::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 55 of file RooRealL.h. Member Data Documentation. ◆ eval_carry. double RooFit::TestStatistics::RooRealL::eval_carry = 0. mutableprivate . Definition at line 51 of file RooRealL.h. ◆ likelihood_. std::shared_ptr<RooAbsL> RooFit::TestStatistics::RooRealL::likelihood_. private . Definition at line 50 of file RooRealL.h. ◆ vars_obs_. RooArgSet RooFit::TestStatistics::RooRealL::vars_obs_. private . list of observables ; Definition at line 53 of file RooRealL.h. ◆ vars_proxy_. RooSetProxy RooFit::TestStatistics::RooRealL::vars_proxy_. private . sets up client-server connections ; Definition at line 52 of file RooRealL.h. Libraries for RooFit::TestStatistics::RooRealL:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooFit/TestStatistics/RooRealL.h; roofit/roofitcore/src/TestStatistics/RooRealL.cxx. RooFitTestStatisticsRooRealL. ROOT master - Reference Gui,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html:63031,Test,TestStatistics,63031,doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,https://root.cern,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,1,['Test'],['TestStatistics']
Testability,"be surronding the points); The Algorithm is described in http://en.wikipedia.org/wiki/Trilinear_interpolation; The given values (x,y,z) must be between first bin center and last bin center for each coordinate:. fXAxis.GetBinCenter(1) < x < fXaxis.GetBinCenter(nbinX) AND; fYAxis.GetBinCenter(1) < y < fYaxis.GetBinCenter(nbinY) AND; fZAxis.GetBinCenter(1) < z < fZaxis.GetBinCenter(nbinZ). Double_t KolmogorovTest(const TH1* h2, Option_t* option = """") const; Statistical test of compatibility in shape between; THIS histogram and h2, using Kolmogorov test.; Default: Ignore under- and overflow bins in comparison. option is a character string to specify options; ""U"" include Underflows in test; ""O"" include Overflows; ""N"" include comparison of normalizations; ""D"" Put out a line of ""Debug"" printout; ""M"" Return the Maximum Kolmogorov distance instead of prob. The returned function value is the probability of test; (much less than one means NOT compatible). The KS test uses the distance between the pseudo-CDF's obtained; from the histogram. Since in more than 1D the order for generating the pseudo-CDF is; arbitrary, we use the pseudo-CDF's obtained from all the possible 6 combinatons of the 3 axis.; The average of all the maximum distances obtained is used in the tests. Long64_t Merge(TCollection* list); Add all histograms in the collection to this histogram.; This function computes the min/max for the axes,; compute a new number of bins, if necessary,; add bin contents, errors and statistics.; If overflows are present and limits are different the function will fail.; The function returns the total number of entries in the result histogram; if the merge is successfull, -1 otherwise. IMPORTANT remark. The 2 axis x and y may have different number; of bins and different limits, BUT the largest bin width must be; a multiple of the smallest bin width and the upper limit must also; be a multiple of the bin width. TH1D * ProjectionX(const char* name = ""_px"", Int_t firstybin = 0, Int_t l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH3.html:37099,test,test,37099,root/html528/TH3.html,https://root.cern,https://root.cern/root/html528/TH3.html,4,['test'],['test']
Testability,"be surronding the points); The Algorithm is described in http://en.wikipedia.org/wiki/Trilinear_interpolation; The given values (x,y,z) must be between first bin center and last bin center for each coordinate:. fXAxis.GetBinCenter(1) < x < fXaxis.GetBinCenter(nbinX) AND; fYAxis.GetBinCenter(1) < y < fYaxis.GetBinCenter(nbinY) AND; fZAxis.GetBinCenter(1) < z < fZaxis.GetBinCenter(nbinZ). Double_t KolmogorovTest(const TH1* h2, Option_t* option = """") const; Statistical test of compatibility in shape between; THIS histogram and h2, using Kolmogorov test.; Default: Ignore under- and overflow bins in comparison. option is a character string to specify options; ""U"" include Underflows in test; ""O"" include Overflows; ""N"" include comparison of normalizations; ""D"" Put out a line of ""Debug"" printout; ""M"" Return the Maximum Kolmogorov distance instead of prob. The returned function value is the probability of test; (much less than one means NOT compatible). The KS test uses the distance between the pseudo-CDF's obtained; from the histogram. Since in more than 1D the order for generating the pseudo-CDF is; arbitrary, we use the pseudo-CDF's obtained from all the possible 6 combinatons of the 3 axis.; The average of all the maximum distances obtained is used in the tests. Long64_t Merge(TCollection* list); Add all histograms in the collection to this histogram.; This function computes the min/max for the axes,; compute a new number of bins, if necessary,; add bin contents, errors and statistics.; If overflows are present and limits are different the function will fail.; The function returns the total number of entries in the result histogram; if the merge is successfull, -1 otherwise. IMPORTANT remark. The 2 axis x and y may have different number; of bins and different limits, BUT the largest bin width must be; a multiple of the smallest bin width and the upper limit must also; be a multiple of the bin width. TH1D * ProjectionX(const char* name = ""_px"", Int_t iymin = 0, Int_t iymax",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3.html:41467,test,test,41467,root/html602/TH3.html,https://root.cern,https://root.cern/root/html602/TH3.html,2,['test'],['test']
Testability,"be(); Default constructor. TGeoTube(Double_t rmin, Double_t rmax, Double_t dz); Default constructor specifying minimum and maximum radius. TGeoTube(const char* name, Double_t rmin, Double_t rmax, Double_t dz); Default constructor specifying minimum and maximum radius. TGeoTube(Double_t* params); Default constructor specifying minimum and maximum radius; param[0] = Rmin; param[1] = Rmax; param[2] = dz. ~TGeoTube(); destructor. Double_t Capacity() const; Computes capacity of the shape in [length^3]. Double_t Capacity(Double_t rmin, Double_t rmax, Double_t dz); Computes capacity of the shape in [length^3]. void ComputeBBox(); compute bounding box of the tube. void ComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); Compute normal to closest surface from POINT. void ComputeNormalS(const Double_t* point, const Double_t* dir, Double_t* norm, Double_t rmin, Double_t rmax, Double_t dz); Compute normal to closest surface from POINT. Bool_t Contains(const Double_t* point) const; test if point is inside this tube. Int_t DistancetoPrimitive(Int_t px, Int_t py); compute closest distance from point px,py to each corner. Double_t DistFromInsideS(const Double_t* point, const Double_t* dir, Double_t rmin, Double_t rmax, Double_t dz); Compute distance from inside point to surface of the tube (static); Boundary safe algorithm.; compute distance to surface; Do Z. Double_t DistFromInside(const Double_t* point, const Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; Compute distance from inside point to surface of the tube; Boundary safe algorithm. Double_t DistFromOutsideS(const Double_t* point, const Double_t* dir, Double_t rmin, Double_t rmax, Double_t dz); Static method to compute distance from outside point to a tube with given parameters; Boundary safe algorithm.; check Z planes. Double_t DistFromOutside(const Double_t* point, const Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTube.html:14597,test,test,14597,root/html534/TGeoTube.html,https://root.cern,https://root.cern/root/html534/TGeoTube.html,3,['test'],['test']
Testability,"bel indicating if grepping or piping; TGTextEntry*fGrepTexttext to grep for in the logs; TGNumberEntry*fLinesFromstarting line; TGNumberEntry*fLinesToending line; TGListBox*fLogListlist of workers; TGTextButton*fLogNewdisplay logs button; TProofLog*fProofLogthe log; TGCheckButton*fRawLinesdisplay raw lines button; TGTextButton*fSavesave button; TGNumberEntry*fSessNumrelative index of the session to get; Int_tfSessionIdx; TStringfSessionUrl; TGTextView*fTexttext widget; Int_tfTextTypeType of retrieval; TGTextButton*fUrlButtonrebuild button; TGTextEntry*fUrlTexturl to connect to; TGVerticalFrame*fVworkersVertical frame. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressLog(TProofProgressDialog* d, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. TProofProgressLog(const char* url = 0, Int_t sessionidx = 0, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. void Init(Int_t w = 700, Int_t h = 600); Init window frame for log messages. ~TProofProgressLog(); Destructor. void Popup(); Show log window. void Clear(Option_t* = 0); Clear log window. void LoadBuffer(const char* buffer); Load a text buffer in the window. void LoadFile(const char* file); Load a file in the window. void AddBuffer(const char* buffer); Add text to the window. void CloseWindow(); Handle close button or when closed via window manager action. void BuildLogList(Bool_t create = kFALSE); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void DoLog(Bool_t grep = kFALSE); Display logs. 'grep' is set to kTRUE if it is invoked by pressing the; 'Filter' button. void LogMessage(const char* msg, Bool_t all); Load/append a log msg in the log frame, if open. void SaveToFile(); Save the logs to a file; Only the name of the file is taken, no expansion. void SetGrepView(); Sets the view of grep filters according to the value of checkboxes. void NoLineEntry(); Enable/disable the l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofProgressLog.html:23832,log,log,23832,root/html534/TProofProgressLog.html,https://root.cern,https://root.cern/root/html534/TProofProgressLog.html,1,['log'],['log']
Testability,"bel(0.1,0.94,0.9,0.98, ""Various options on LOG scales plots"");; title->SetFillColor(16);; title->SetTextFont(42);; title->Draw();; ; TPaveText *pave = new TPaveText(0.1,0.55,0.9,0.61);; pave->SetFillColor(42);; pave->SetTextAlign(12);; pave->SetTextFont(42);; pave->AddText(""When more Log labels are requested, the overlapping labels are removed"");; pave->Draw();; ; pad1->cd();; pad1->SetLogy();; pad1->SetGridy();; TF1 *f1 = new TF1(""f1"",""x*sin(x)*exp(-0.1*x)+15"",-10.,10.);; TF1 *f2 = new TF1(""f2"",""(sin(x)+cos(x))**5+15"",-10.,10.);; TF1 *f3 = new TF1(""f3"",""(sin(x)/(x)-x*cos(x))+15"",-10.,10.);; f1->SetLineWidth(1); f1->SetLineColor(2);; f2->SetLineWidth(1); f2->SetLineColor(3);; f3->SetLineWidth(1); f3->SetLineColor(4);; f1->Draw();; f2->Draw(""same"");; f3->Draw(""same"");; f1->GetYaxis()->SetMoreLogLabels();; TPaveText *pave1 = new TPaveText(-6,2,6,6);; pave1->SetFillColor(42);; pave1->SetTextAlign(12);; pave1->SetTextFont(42);; pave1->AddText(""Log scale along Y axis."");; pave1->AddText(""More Log labels requested."");; pave1->Draw();; ; pad2->cd();; double x[10] = { 200, 300, 400, 500, 600, 650, 700, 710, 900,1000 };; double y[10] = { 200, 1000, 900, 400, 500, 250, 800, 150, 201, 220 };; TGraph *g_2 = new TGraph(10,x,y);; g_2->Draw(""AL*"");; g_2->SetMarkerColor(2);; g_2->GetYaxis()->SetMoreLogLabels();; g_2->GetYaxis()->SetNoExponent();; pad2->SetLogy();; g_2->GetXaxis()->SetMoreLogLabels();; pad2->SetLogx();; pad2->SetGridx();; TPaveText *pave2 = new TPaveText(150,80,500,180);; pave2->SetFillColor(42);; pave2->SetTextFont(42);; pave2->SetTextAlign(12);; pave2->AddText(""Log scale along X and Y axis."");; pave2->AddText(""More Log labels on both."");; pave2->AddText(""No exponent along Y axis."");; pave2->Draw();; ; pad3->cd();; pad3->SetGridx();; pad3->SetGridy();; pad3->SetLogy();; pad3->SetLogx();; TF1 *f4 = new TF1(""f4a"",""x*sin(x+10)+25"",1,21);; f4->SetLineWidth(1);; f4->Draw();; f4->SetNpx(200);; f4->GetYaxis()->SetMoreLogLabels();; f4->GetXaxis()->SetMoreLogLabels();; f4 = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/logscales_8C.html:1657,Log,Log,1657,doc/master/logscales_8C.html,https://root.cern,https://root.cern/doc/master/logscales_8C.html,1,['Log'],['Log']
Testability,"bel, Bool_t printError = kTRUE); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; TIterator*RooAbsCategory::typeIterator() const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual Double_tvolume(const char* rangeName) const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidwriteToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsCategoryLValue.html:15679,Test,TestBit,15679,root/html526/RooAbsCategoryLValue.html,https://root.cern,https://root.cern/root/html526/RooAbsCategoryLValue.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ber () const;  Get the numeric value (integer representation). ;  ; virtual EAttribute GetNumAttr () const;  Get the numerical attribute. ;  ; virtual Double_t GetNumber () const;  Get the numeric value (floating point representation). ;  ; virtual ELimit GetNumLimits () const;  Get the numerical limit attribute. ;  ; virtual Double_t GetNumMax () const;  Get the upper limit. ;  ; virtual Double_t GetNumMin () const;  Get the lower limit. ;  ; virtual EStyle GetNumStyle () const;  Get the numerical style. ;  ; virtual void GetTime (Int_t &hour, Int_t &min, Int_t &sec) const;  Get the numeric value (time format). ;  ; Bool_t HandleFocusChange (Event_t *event) override;  Handle focus change. ;  ; Bool_t HandleKey (Event_t *event) override;  Handle keys. ;  ; virtual void IncreaseNumber (EStepSize step=kNSSSmall, Int_t sign=1, Bool_t logstep=kFALSE);  Increase the number value. ;  ; virtual void InvalidInput (const char *instr);  ; TClass * IsA () const override;  ; Bool_t IsEditable () const override;  ; virtual Bool_t IsLogStep () const;  Is log step enabled? ;  ; void Layout () override;  Layout. ;  ; void ReturnPressed () override;  Return was pressed. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save a number entry widget as a C++ statement(s) on output stream out. ;  ; virtual void SetDate (Int_t year, Int_t month, Int_t day, Bool_t emit=kTRUE);  Set the numeric value (date format). ;  ; virtual void SetFormat (EStyle style, EAttribute attr=kNEAAnyNumber);  Set the numerical format. ;  ; virtual void SetHexNumber (ULong_t val, Bool_t emit=kTRUE);  Set the numeric value (hex format). ;  ; virtual void SetIntNumber (Long_t val, Bool_t emit=kTRUE);  Set the numeric value (integer representation). ;  ; virtual void SetLimits (ELimit limits=kNELNoLimits, Double_t min=0, Double_t max=1);  Set the numerical limits. ;  ; virtual void SetLogStep (Bool_t on=kTRUE);  Set logarithmic steps. ;  ; virtual void SetNumber (Double_t val, Bool_t emit=kTRUE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntryField.html:2202,log,log,2202,doc/master/classTGNumberEntryField.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntryField.html,1,['log'],['log']
Testability,"ber Functions; RooAbsGenContext * genContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false) const override;  Return specialized context to efficiently generate toy events from RooAddModels. ;  ; void getCompIntList (const RooArgSet *nset, const RooArgSet *iset, pRooArgList &compIntList, Int_t &code, const char *isetRangeName) const;  Check if this configuration was created before. ;  ; AddCacheElem * getProjCache (const RooArgSet *nset, const RooArgSet *iset=nullptr) const;  Retrieve cache element with for calculation of p.d.f value with normalization set nset and integrated over iset in range 'rangeName'. ;  ; void selectNormalization (const RooArgSet *depSet=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of observables for interpretation of fraction coefficients. ;  ; void selectNormalizationRange (const char *rangeName=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of range for interpretation of fraction coefficients. ;  ; void updateCoefficients (AddCacheElem &cache, const RooArgSet *nset) const;  Update the coefficient values in the given cache element: calculate new remainder fraction, normalize fractions obtained from extended ML terms to unity, and multiply the various range and dimensional corrections needed in the current use context. ;  ;  Protected Member Functions inherited from RooResolutionModel; bool redirectServersHook (const RooAbsCollection &newServerList, bool mustReplaceAll, bool nameChange, bool isRecursive) override;  Forward redirectServers call to our basis function, which is not connected to either resolution model or the physics model. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:63194,test,test,63194,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['test'],['test']
Testability,"ber of allocated rows. TGenericTable(const char* structName, Int_t n). Create TGenericTable by C structure name provided:. dsc - Pointer to the table descriptor; name - The name of this object; n - The initial number of allocated rows. TGenericTable(const char* structName, const char* name, Int_t n). Create TGenericTable by C structure name provided:. dsc - Pointer to the table descriptor; name - The name of this object; n - The initial number of allocated rows. ~TGenericTable(); destructor. TTableDescriptor * GetDescriptorPointer() const; { return fColDescriptors;}. void SetDescriptorPointer(TTableDescriptor* list); { fColDescriptors = list;}. void SetGenericType(); { TTable::SetType(GetDescriptorPointer()->GetName()); }. iterator & operator=(const TGenericTable& ); { fRowSize = iter.fRowSize; fCurrentRow = iter.fCurrentRow; return *this;}. TGenericTable(); {SetType(""generic"");}. TGenericTable(const char* structName, const char* name); Create TGenericTable by C structure name provided. char * GetTable(Int_t i = 0) const; { return ((char *)GetArray())+i*GetRowSize();}. TTableDescriptor * GetTableDescriptors() const; { return GetDescriptorPointer();}. TTableDescriptor * GetRowDescriptors() const; { return GetDescriptorPointer();}. char & operator[](Int_t i); { assert(i>=0 && i < GetNRows()); return *GetTable(i); }. const char & operator[](Int_t i) const; { assert(i>=0 && i < GetNRows()); return *((const char *)(GetTable(i))); }. iterator begin(); { return ((const TGenericTable *)this)->begin();}. iterator begin() const; { return GetNRows() ? iterator(*this, *GetTable(0)):end();}. iterator end(); { return ((const TGenericTable *)this)->end(); }. iterator end() const; {Long_t i = GetNRows(); return i? iterator(*this, *GetTable(i)):iterator(*this);}. » Last changed: root/table:$Id$ » Last generated: 2015-06-02 15:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGenericTable.html:19889,assert,assert,19889,root/html604/TGenericTable.html,https://root.cern,https://root.cern/root/html604/TGenericTable.html,2,['assert'],['assert']
Testability,"ber of allocated rows. TGenericTable(const char* structName, Int_t n). Create TGenericTable by C structure name provided:. dsc - Pointer to the table descriptor; name - The name of this object; n - The initial number of allocated rows. TGenericTable(const char* structName, const char* name, Int_t n). Create TGenericTable by C structure name provided:. dsc - Pointer to the table descriptor; name - The name of this object; n - The initial number of allocated rows. ~TGenericTable(); destructor. TTableDescriptor * GetDescriptorPointer() const; { return fColDescriptors;}. void SetDescriptorPointer(TTableDescriptor* list); { fColDescriptors = list;}. void SetGenericType(); { TTable::SetType(GetDescriptorPointer()->GetName()); }. iterator & operator=(const TGenericTable& ); { fRowSize = iter.fRowSize; fCurrentRow = iter.fCurrentRow; return *this;}. TGenericTable(); {SetType(""generic"");}. TGenericTable(const char* structName, const char* name); Create TGenericTable by C structure name provided. char * GetTable(Int_t i = 0) const; { return ((char *)GetArray())+i*GetRowSize();}. TTableDescriptor * GetTableDescriptors() const; { return GetDescriptorPointer();}. TTableDescriptor * GetRowDescriptors() const; { return GetDescriptorPointer();}. char & operator[](Int_t i); { assert(i>=0 && i < GetNRows()); return *GetTable(i); }. const char & operator[](Int_t i) const; { assert(i>=0 && i < GetNRows()); return *((const char *)(GetTable(i))); }. iterator begin(); { return ((const TGenericTable *)this)->begin();}. iterator begin() const; { return GetNRows() ? iterator(*this, *GetTable(0)):end();}. iterator end(); { return ((const TGenericTable *)this)->end(); }. iterator end() const; {Long_t i = GetNRows(); return i? iterator(*this, *GetTable(i)):iterator(*this);}. » Last changed: root/table:$Id$ » Last generated: 2015-06-30 15:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGenericTable.html:19889,assert,assert,19889,root/html602/TGenericTable.html,https://root.cern,https://root.cern/root/html602/TGenericTable.html,2,['assert'],['assert']
Testability,"ber of keys that have been recovered.; 2016/// If no keys can be recovered, the file will be declared Zombie by; 2017/// the calling function. This function is automatically called when; 2018/// opening a file.; 2019/// If the file is open in read only mode, the file is not modified.; 2020/// If open in update mode and the function finds something to recover,; 2021/// a new directory header is written to the file. When opening the file gain; 2022/// no message from Recover will be reported.; 2023/// If keys have been recovered, the file is usable and you can safely; 2024/// read the corresponding objects.; 2025/// If the file is not usable (a zombie), you can test for this case; 2026/// with code like:; 2027///; 2028/// ~~~{.cpp}; 2029/// TFile f(""myfile.root"");; 2030/// if (f.IsZombie()) {<actions to take if file is unusable>}; 2031/// ~~~; 2032///; 2033/// If the file has been recovered, the bit kRecovered is set in the TFile object in memory.; 2034/// You can test if the file has been recovered with; 2035///; 2036/// if (f.TestBit(TFile::kRecovered)) {... the file has been recovered}; 2037///; 2038/// When writing TTrees to a file, it is important to save the Tree header; 2039/// at regular intervals (see TTree::AutoSave). If a file containing a Tree; 2040/// is recovered, the last Tree header written to the file will be used.; 2041/// In this case all the entries in all the branches written before writing; 2042/// the header are valid entries.; 2043/// One can disable the automatic recovery procedure by setting; 2044///; 2045/// TFile.Recover 0; 2046///; 2047/// in the <em>system.rootrc</em> file.; 2048 ; 2049Int_t TFile::Recover(); 2050{; 2051 Short_t keylen,cycle;; 2052 UInt_t datime;; 2053 Int_t nbytes,date,time,objlen,nwheader;; 2054 Long64_t seekkey,seekpdir;; 2055 char header[1024];; 2056 char *buffer, *bufread;; 2057 char nwhc;; 2058 Long64_t idcur = fBEGIN;; 2059 ; 2060 Long64_t size;; 2061 if ((size = GetSize()) == -1) { // NOLINT: silence clang-tidy war",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:72719,test,test,72719,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['test'],['test']
Testability,ber of processors to use in parallel calculation mode; Int_tRooAbsTestStatistic::_nEventsTotal number of events in test statistic calculation; Int_tRooAbsTestStatistic::_nGofNumber of sub-contexts; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooArgSet*_normSetPointer to set with observables used for normalization; Int_tRooAbsTestStatistic::_numSetsTotal number of partitions in parallel calculation mode; Double_tRooAbsTestStatistic::_offset! Offset; Double_tRooAbsTestStatistic::_offsetCarry! avoids loss of precision; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; Bool_t_optimized!; RooAbsData*_origDataOriginal data; RooAbsReal*_origFuncOriginal function; Bool_t_ownDataDo we own the dataset; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxyRooAbsTestStatistic::_paramSetParameters of the test statistic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooArgSet*_projDepsSet of projected observable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; RooRefArrayRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; TString_sealNoticeUser-defined notice shown when reading a sealed likelihood; Bool_t_sealedIs test statistic sealed -- i.e. no access to data; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Int_tRooAbsTestStatistic::_setNumPartition number of this instance in parallel calculation mode; Bool_tRooAbsArg::,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsOptTestStatistic.html:41319,test,test,41319,root/html602/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html602/RooAbsOptTestStatistic.html,6,['test'],['test']
Testability,"ber(const char *name) constTF1inlinevirtual; GetProb() constTF1virtual; GetQuantiles(Int_t n, Double_t *xp, const Double_t *p)TF1virtual; GetRandom(TRandom *rng=nullptr, Option_t *opt=nullptr)TF1virtual; GetRandom(Double_t xmin, Double_t xmax, TRandom *rng=nullptr, Option_t *opt=nullptr)TF1virtual; GetRange(Double_t *xmin, Double_t *xmax) constTF1protectedvirtual; GetRange(Double_t &xmin, Double_t &xmax) constTF1virtual; GetRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) constTF1virtual; GetRange(Double_t &xmin, Double_t &ymin, Double_t &zmin, Double_t &xmax, Double_t &ymax, Double_t &zmax) constTF1virtual; GetSave(const Double_t *x)TF1virtual; GetTitle() const overrideTNamedinlinevirtual; GetUniqueID() constTObjectvirtual; GetVariable(const TString &name)TF1inlinevirtual; GetX(Double_t y, Double_t xmin=0, Double_t xmax=0, Double_t epsilon=1.E-10, Int_t maxiter=100, Bool_t logx=false) constTF1virtual; GetXaxis() constTF1; GetXmax() constTF1inlinevirtual; GetXmin() constTF1inlinevirtual; GetYaxis() constTF1; GetZaxis() constTF1; GradientPar(Int_t ipar, const Double_t *x, Double_t eps=0.01)TF1virtual; GradientPar(Int_t ipar, const T *x, Double_t eps=0.01)TF1inline; GradientPar(const Double_t *x, Double_t *grad, Double_t eps=0.01)TF1virtual; GradientPar(const T *x, T *grad, Double_t eps=0.01)TF1inline; GradientParTempl(Int_t ipar, const T *x, Double_t eps=0.01)TF1inline; GradientParTempl(const T *x, T *grad, Double_t eps=0.01)TF1inline; HandleTimer(TTimer *timer)TObjectvirtual; Hash() const overrideTNamedinlinevirtual; HasInconsistentHash() constTObjectinline; HasSave() constTF1inline; Info(const char *method, const char *msgfmt,...) constTObjectvirtual; InheritsFrom(const char *classname) constTObjectvirtual; InheritsFrom(const TClass *cl) constTObjectvirtual; InitArgs(const Double_t *x, const Double_t *params)TF1virtual; InitStandardFunctions()TF1static; Inspect() constTObjectvirtual; Integral(Double_t a, Double_t b, Double_t epsrel=1.e-12)TF1vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1-members.html:8095,log,logx,8095,doc/master/classTF1-members.html,https://root.cern,https://root.cern/doc/master/classTF1-members.html,1,['log'],['logx']
Testability,"berOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TStdExceptionHandler&operator=(const TStdExceptionHandler&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidRemove(); virtual voidTSysEvtHandler::Removed()SIGNAL ; voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TStdExceptionHandler(); TStdExceptionHandler(const TStdExceptionHandler&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStdExceptionHandler.html:7639,Test,TestBit,7639,root/html602/TStdExceptionHandler.html,https://root.cern,https://root.cern/root/html602/TStdExceptionHandler.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bers ; TMVA::LogInterval Class ReferenceTMVA. ; The TMVA::Interval Class. . LogInterval definition, continuous and discrete; LogInterval(min,max) : a continous interval [min,max]; LogInterval(min,max,n): a ""discrete interval"" [min,max], i.e the n numbers:; 1,10,100,1000; 1,2,4,8,16,32,64,128,512,1024; or alike .. Example:; LogInterval(1,10000,5); i=0 --> 1 note: StepSize(ibin=0) = not defined !!; i=1 --> 10 StepSize(ibin=1) = 9; i=2 --> 100 StepSize(ibin=2) = 99; i=3 --> 1000 StepSize(ibin=3) = 999; i=4 --> 10000 StepSize(ibin=4) = 9999; ; LogInterval(1,1000,11); i=0 --> 1; i=1 --> 1.99526; i=2 --> 3.98107; i=3 --> 7.94328; i=4 --> 15.8489; i=5 --> 31.6228; i=6 --> 63.0957; i=7 --> 125.893; i=8 --> 251.189; i=9 --> 501.187; i=10 --> 1000; ; LogInterval(1,1024,11); i=0 --> 1; i=1 --> 2; i=2 --> 4; i=3 --> 8; i=4 --> 16; i=5 --> 32; i=6 --> 64; i=7 --> 128; i=8 --> 256; i=9 --> 512; i=10 --> 1024; TMVA::LogIntervalThe TMVA::Interval Class.Definition LogInterval.h:83. Definition at line 83 of file LogInterval.h. Public Member Functions;  LogInterval (const LogInterval &other);  ;  LogInterval (Double_t min, Double_t max, Int_t nbins=0);  ; virtual ~LogInterval ();  destructor ;  ; virtual Double_t GetElement (Int_t position) const;  calculates the value of the ""number"" bin in a discrete interval. ;  ; virtual Double_t GetMax () const;  ; virtual Double_t GetMean () const;  ; virtual Double_t GetMin () const;  ; virtual Int_t GetNbins () const;  ; virtual Double_t GetRndm (TRandom3 &) const;  get uniformly distributed number within interval ;  ; virtual Double_t GetStepSize (Int_t iBin=0) const;  returns the step size between the numbers of a ""discrete LogInterval"" ;  ; virtual Double_t GetWidth () const;  ; virtual TClass * IsA () const;  ; MsgLogger & Log () const;  ; void SetMax (Double_t m);  ; void SetMin (Double_t m);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1LogInterval.html:1233,Log,LogInterval,1233,doc/master/classTMVA_1_1LogInterval.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1LogInterval.html,1,['Log'],['LogInterval']
Testability,"bers ; TSpider Class Reference. ; Spider class. ; A spider view is a handy way to visualize a set of data stored in a TTree. It draws as many polar axes as selected data members. For each of them, it draws on the axis the position of the present event between the min and max of the data member. Two modes are available:. The spider view: With each points on the axes is drawn a polyline.; The segment view: For each data member is drawn an arc segment with the radius corresponding to the event. The spider plot is available from the treeviewer called by ""atree->StartViewer()"", or simply by calling its constructor and defining the variables to display.; {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; f#define f(i)Definition RSha256.hxx:104; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TSpiderSpider class.Definition TSpider.h:40; TSpider::Drawvoid Draw(Option_t *options="""") overrideDraw the spider.Definition TSpider.cxx:454; TSpider::TSpiderTSpider()Default constructor.Definition TSpider.cxx:76; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; c1return c1Definition legend1.C:41. Definition at line 40 of file TSpider.h. Public Member Functions;  TSpider",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:1246,log,log,1246,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,2,['log'],['log']
Testability,"bers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. private:. TMVA::SeparationBase*fSepTypeseparation type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamDecisionTree(); Default constructor for streamer, user should not use it. PDEFoamDecisionTree(const TString& , TMVA::SeparationBase* sepType, UInt_t cls); Parameters:. - name - name of the foam. - sepType - separation type used for the cell splitting (will be; deleted in the destructor). - cls - class to consider as signal when calcualting the purity. PDEFoamDecisionTree(const TMVA::PDEFoamDecisionTree& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). ~PDEFoamDecisionTree(); Destructor; deletes fSepType. void Explore(TMVA::PDEFoamCell* Cell); Internal subprogram used by Create. It explores newly defined; cell with according to the decision tree logic. The separation; set via the 'sepType' option in the constructor. The optimal division point for eventual future cell division is; determined/recorded. Note that links to parents and initial; volume = 1/2 parent has to be already defined prior to calling; this routine. Note, that according to the decision tree logic, a cell is only; split, if the number of (unweighted) events in each dautghter; cell is greater than fNmin. » Author: Alexander Voigt » Copyright (c) 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__PDEFoamDecisionTree.html:13267,log,logic,13267,root/html534/TMVA__PDEFoamDecisionTree.html,https://root.cern,https://root.cern/root/html534/TMVA__PDEFoamDecisionTree.html,2,['log'],['logic']
Testability,"bers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. private:. TMVA::SeparationBase*fSepTypeseparation type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamDecisionTree(); Default constructor for streamer, user should not use it. PDEFoamDecisionTree(const TString& , TMVA::SeparationBase* sepType, UInt_t cls); Parameters:. - name - name of the foam. - sepType - separation type used for the cell splitting (will be; deleted in the destructor). - cls - class to consider as signal when calcualting the purity. PDEFoamDecisionTree(const TMVA::PDEFoamDecisionTree& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). ~PDEFoamDecisionTree(); Destructor; deletes fSepType. void Explore(TMVA::PDEFoamCell* Cell); Internal subprogram used by Create. It explores newly defined; cell with according to the decision tree logic. The separation; set via the 'sepType' option in the constructor. The optimal division point for eventual future cell division is; determined/recorded. Note that links to parents and initial; volume = 1/2 parent has to be already defined prior to calling; this routine. Note, that according to the decision tree logic, a cell is only; split, if the number of (unweighted) events in each dautghter; cell is greater than fNmin. » Author: Alexander Voigt » Copyright (c) 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__PDEFoamDecisionTree.html:13708,log,logic,13708,root/html604/TMVA__PDEFoamDecisionTree.html,https://root.cern,https://root.cern/root/html604/TMVA__PDEFoamDecisionTree.html,2,['log'],['logic']
Testability,"bers; Double_t*TMVA::PDEFoam::fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*TMVA::PDEFoam::fTimer! timer for graphical output; TObjArray*TMVA::PDEFoam::fVariableNamescollection of all variable names; Float_tTMVA::PDEFoam::fVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to total phase space; Double_t*TMVA::PDEFoam::fXmax[fDim] maximum for variable transform; Double_t*TMVA::PDEFoam::fXmin[fDim] minimum for variable transform. private:. TMVA::SeparationBase*fSepTypeseparation type. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamDecisionTree(); Default constructor for streamer, user should not use it. PDEFoamDecisionTree(const TString& , TMVA::SeparationBase* sepType, UInt_t cls); Parameters:. - name - name of the foam. - sepType - separation type used for the cell splitting (will be; deleted in the destructor). - cls - class to consider as signal when calcualting the purity. PDEFoamDecisionTree(const TMVA::PDEFoamDecisionTree& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). ~PDEFoamDecisionTree(); Destructor; deletes fSepType. void Explore(TMVA::PDEFoamCell* Cell); Internal subprogram used by Create. It explores newly defined; cell with according to the decision tree logic. The separation; set via the 'sepType' option in the constructor. The optimal division point for eventual future cell division is; determined/recorded. Note that links to parents and initial; volume = 1/2 parent has to be already defined prior to calling; this routine. Note, that according to the decision tree logic, a cell is only; split, if the number of (unweighted) events in each dautghter; cell is greater than fNmin. » Author: Alexander Voigt » Copyright (c) 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamDecisionTree.html:13700,log,logic,13700,root/html602/TMVA__PDEFoamDecisionTree.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamDecisionTree.html,2,['log'],['logic']
Testability,"bie() const; virtual voidLayout(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTGLayoutManager::SetDefaultHeight(UInt_t); virtual voidTGLayoutManager::SetDefaultWidth(UInt_t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTGLayoutManager::SetModified(Bool_t flag = kTRUE); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGColumnLayout.html:5430,Test,TestBit,5430,root/html528/TGColumnLayout.html,https://root.cern,https://root.cern/root/html528/TGColumnLayout.html,14,['Test'],"['TestBit', 'TestBits']"
Testability,"bie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooNumGenFactory&operator=(const RooNumGenFactory&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); Bool_tstoreProtoSampler(RooAbsNumGenerator* proto, const RooArgSet& defConfig); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumGenFactory.html:5075,Test,TestBit,5075,root/html526/RooNumGenFactory.html,https://root.cern,https://root.cern/root/html526/RooNumGenFactory.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPackageDescription&operator=(const TPackageDescription&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPackageDescription.html:4471,Test,TestBit,4471,root/html534/TPackageDescription.html,https://root.cern,https://root.cern/root/html534/TPackageDescription.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSQLClassColumnInfo&operator=(const TSQLClassColumnInfo&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLClassColumnInfo.html:4840,Test,TestBit,4840,root/html534/TSQLClassColumnInfo.html,https://root.cern,https://root.cern/root/html534/TSQLClassColumnInfo.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSessionDescription&operator=(const TSessionDescription&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSessionDescription.html:4495,Test,TestBit,4495,root/html534/TSessionDescription.html,https://root.cern,https://root.cern/root/html534/TSessionDescription.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"big and B.Schorr, ""A program package for the Landau; distribution"", Computer Phys.Comm., 31(1984), 97-111. Double_t Sin(Double_t x); { return sin(x); }. Double_t Cos(Double_t x); { return cos(x); }. Double_t Tan(Double_t x); { return tan(x); }. Double_t SinH(Double_t x); { return sinh(x); }. Double_t CosH(Double_t x); { return cosh(x); }. Double_t TanH(Double_t x); { return tanh(x); }. Double_t ASin(Double_t x). Double_t ACos(Double_t x). Double_t ATan(Double_t x); { return atan(x); }. Double_t ATan2(Double_t y, Double_t x). Double_t Sqrt(Double_t x); { return sqrt(x); }. Double_t Ceil(Double_t x); { return ceil(x); }. Int_t CeilNint(Double_t x); { return TMath::Nint(ceil(x)); }. Double_t Floor(Double_t x); { return floor(x); }. Int_t FloorNint(Double_t x); { return TMath::Nint(floor(x)); }. Double_t Exp(Double_t x); { return exp(x); }. Double_t Ldexp(Double_t x, Int_t exp); { return ldexp(x, exp); }. Double_t Power(Double_t x, Double_t y); { return pow(x, y); }. Double_t Log(Double_t x); { return log(x); }. Double_t Log10(Double_t x); { return log10(x); }. Int_t Finite(Double_t x); { return isfinite(x); }. Int_t IsNaN(Double_t x); from math.h. { return isnan(x); }. Double_t QuietNaN(); --------wrapper to numeric_limits. Double_t SignalingNaN(). Double_t Infinity(); returns an infinity as defined by the IEEE standard. template <typename T> inline T NormCross(const T v1[3],const T v2[3],T out[3]); Calculate the Normalized Cross Product of two vectors. T MinElement(Long64_t n, const T *a); Return minimum of array a of length n. T MaxElement(Long64_t n, const T *a); Return maximum of array a of length n. Long64_t LocMin(Long64_t n, const T *a); Return index of array with the minimum element.; If more than one element is minimum returns first found. Iterator LocMin(Iterator first, Iterator last); Return index of array with the minimum element.; If more than one element is minimum returns first found. Long64_t LocMax(Long64_t n, const T *a); Return index of array with th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMath.html:38722,Log,Log,38722,root/html530/TMath.html,https://root.cern,https://root.cern/root/html530/TMath.html,2,"['Log', 'log']","['Log', 'log']"
Testability,"big and B.Schorr, ""A program package for the Landau; distribution"", Computer Phys.Comm., 31(1984), 97-111. Double_t Sin(Double_t x); { return sin(x); }. Double_t Cos(Double_t x); { return cos(x); }. Double_t Tan(Double_t x); { return tan(x); }. Double_t SinH(Double_t x); { return sinh(x); }. Double_t CosH(Double_t x); { return cosh(x); }. Double_t TanH(Double_t x); { return tanh(x); }. Double_t ASin(Double_t x). Double_t ACos(Double_t x). Double_t ATan(Double_t x); { return atan(x); }. Double_t ATan2(Double_t y, Double_t x). Double_t Sqrt(Double_t x); { return sqrt(x); }. Double_t Ceil(Double_t x); { return ceil(x); }. Int_t CeilNint(Double_t x); { return TMath::Nint(ceil(x)); }. Double_t Floor(Double_t x); { return floor(x); }. Int_t FloorNint(Double_t x); { return TMath::Nint(floor(x)); }. Double_t Exp(Double_t x); { return exp(x); }. Double_t Ldexp(Double_t x, Int_t exp); { return ldexp(x, exp); }. Double_t Power(Double_t x, Double_t y); { return pow(x, y); }. Double_t Log(Double_t x); { return log(x); }. Double_t Log10(Double_t x); { return log10(x); }. Int_t Finite(Double_t x); { return isfinite(x); }. Int_t IsNaN(Double_t x); from math.h. { return isnan(x); }. template <typename T> inline T NormCross(const T v1[3],const T v2[3],T out[3]); Calculate the Normalized Cross Product of two vectors. T MinElement(Long64_t n, const T *a); Return minimum of array a of length n. T MaxElement(Long64_t n, const T *a); Return maximum of array a of length n. Long64_t LocMin(Long64_t n, const T *a); Return index of array with the minimum element.; If more than one element is minimum returns first found. Iterator LocMin(Iterator first, Iterator last); Return index of array with the minimum element.; If more than one element is minimum returns first found. Long64_t LocMax(Long64_t n, const T *a); Return index of array with the maximum element.; If more than one element is maximum returns first found. Iterator LocMax(Iterator first, Iterator last); Return index of array with the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMath.html:38658,Log,Log,38658,root/html528/TMath.html,https://root.cern,https://root.cern/root/html528/TMath.html,2,"['Log', 'log']","['Log', 'log']"
Testability,"bility for a volume. ;  ; void SetVisLevel (Int_t level=3);  set default level down to which visualization is performed ;  ; void SetVisOption (Int_t option=0);  set drawing mode : ;  ; void SetVolumeAttribute (const char *name, const char *att, Int_t val);  Set volume attributes in G3 style. ;  ; virtual ULong_t SizeOf (const TGeoNode *node, Option_t *option);  computes the total size in bytes of the branch starting with node. ;  ; void SortOverlaps ();  Sort overlaps by decreasing overlap distance. Extrusions comes first. ;  ; TGeoNode * Step (Bool_t is_geom=kTRUE, Bool_t cross=kTRUE);  Make a rectilinear step of length fStep from current point (fPoint) on current direction (fDirection). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGeoManager. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Test (Int_t npoints=1000000, Option_t *option="""");  Check time of finding ""Where am I"" for n points. ;  ; void TestOverlaps (const char *path="""");  Geometry overlap checker based on sampling. ;  ; void TopToMaster (const Double_t *top, Double_t *master) const;  Convert coordinates from top volume frame to master. ;  ; Int_t TransformVolumeToAssembly (const char *vname);  Transform all volumes named VNAME to assemblies. The volumes must be virtual. ;  ; void UnbombTranslation (const Double_t *tr, Double_t *bombtr);  Get the new 'unbombed' translation vector according current exploded view mode. ;  ; void ViewLeaves (Bool_t flag=kTRUE);  Set visualization option (leaves only OR all volumes) ;  ; TGeoVolume * Volume (const char *name, const char *shape, Int_t nmed, Double_t *upar, Int_t npar=0);  Create a volume in GEANT3 style. ;  ; TGeoVolume * Volume (const char *name, const char *shape, Int_t nmed, Float_t *upar, Int_t npar=0);  Create a volume in GEANT3 style. ;  ; Double_t Weight (Double_t precision=0.01, Option_t *option=""va"");  Estimate weight of volume VOL with a precision SIGMA(W)/W better than PRECISION. ;  ;  Public Mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManager.html:49945,Test,TestOverlaps,49945,doc/master/classTGeoManager.html,https://root.cern,https://root.cern/doc/master/classTGeoManager.html,1,['Test'],['TestOverlaps']
Testability,"bility of the node (obsolete). void VisibleDaughters(Bool_t vis = kTRUE); Set visibility of the daughters (obsolete). void cd() const; {;}. Int_t GetByteCount() const; {return 44;}. TGeoNode * GetDaughter(Int_t ind) const; {return fVolume->GetNode(ind);}. TGeoMatrix * GetMatrix() const. Int_t GetColour() const; {return fVolume->GetLineColor();}. Int_t GetIndex() const; {return 0;}. TGeoPatternFinder * GetFinder() const; {return 0;}. TGeoMedium * GetMedium() const; {return fVolume->GetMedium();}. TGeoVolume * GetMotherVolume() const; {return fMother;}. Int_t GetNdaughters() const; {return fVolume->GetNdaughters();}. TObjArray * GetNodes() const; {return fVolume->GetNodes();}. Int_t GetNumber() const; {return fNumber;}. Int_t * GetOverlaps(Int_t& novlp) const; {novlp=fNovlp; return fOverlaps;}. TGeoVolume * GetVolume() const; {return fVolume;}. Int_t GetOptimalVoxels() const; {return 0;}. Bool_t IsFolder() const; {return (GetNdaughters()?kTRUE:kFALSE);}. Bool_t IsOffset() const; {return TObject::TestBit(kGeoNodeOffset);}. Bool_t IsOverlapping() const; {return TObject::TestBit(kGeoNodeOverlap);}. Bool_t IsVirtual() const; {return TObject::TestBit(kGeoNodeVC);}. Bool_t IsVisible() const; {return (TGeoAtt::IsVisible() && fVolume->IsVisible());}. Bool_t IsVisDaughters() const; {return (TGeoAtt::IsVisDaughters() && fVolume->IsVisDaughters());}. TGeoNode * MakeCopyNode() const; {return 0;}. void SetCurrentPoint(Double_t x, Double_t y, Double_t z); {fVolume->SetCurrentPoint(x,y,z);}. void SetVolume(TGeoVolume* volume); {fVolume = volume;}. void SetNumber(Int_t number); {fNumber=number;}. void SetOverlapping(Bool_t flag = kTRUE); {TObject::SetBit(kGeoNodeOverlap, flag);}. void SetVirtual(); {TObject::SetBit(kGeoNodeVC, kTRUE);}. void SetInvisible(); {SetVisibility(kFALSE);}. void SetAllInvisible(); {VisibleDaughters(kFALSE);}. void SetMotherVolume(TGeoVolume* mother); {fMother = mother;}. » Author: Andrei Gheata 24/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoNode.html:16042,Test,TestBit,16042,root/html528/TGeoNode.html,https://root.cern,https://root.cern/root/html528/TGeoNode.html,3,['Test'],['TestBit']
Testability,"bility. std::string Type() const. Return the type (name) of the used generator. unsigned int EngineSize() const. Return the size of the generator state. double Gaus(double mean = 0, double sigma = 1); Random Distributions; Use naming and signatures compatible with ROOT TRandom. Gaussian distribution. Default method (use Ziggurat). double GausBM(double mean = 0, double sigma = 1). Gaussian distribution (Box-Muller method). double GausR(double mean = 0, double sigma = 1). Gaussian distribution (Ratio Method). double GaussianTail(double a, double sigma = 1). Gaussian Tail distribution. void Gaussian2D(double sigmaX, double sigmaY, double rho, double& x, double& y). Bivariate Gaussian distribution with correlation. double Exp(double tau). Exponential distribution. double BreitWigner(double mean = 0., double gamma = 1). Breit Wigner distribution. double Landau(double mean = 0, double sigma = 1). Landau distribution. double Gamma(double a, double b). Gamma distribution. double LogNormal(double zeta, double sigma). Log Normal distribution. double ChiSquare(double nu). Chi square distribution. double FDist(double nu1, double nu2). F distrbution. double tDist(double nu). t student distribution. void Circle(double& x, double& y, double r = 1). generate random numbers in a 2D circle of radious 1. void Sphere(double& x, double& y, double& z, double r = 1). generate random numbers in a 3D sphere of radious 1. unsigned int Poisson(double mu). Poisson distribution. unsigned int Binomial(unsigned int ntot, double prob). Binomial distribution. unsigned int NegativeBinomial(double n, double prob). Negative Binomial distribution; First parameter is n, second is probability; To be consistent with Random::Binomial. std::vector<unsigned int> Multinomial(unsigned int ntot, const vector<double>& p). Multinomial distribution. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-06-30 14:24; This ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Random_-p1GSLRngGFSR4_.html:3847,Log,LogNormal,3847,root/html602/ROOT__Math__Random_-p1GSLRngGFSR4_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Random_-p1GSLRngGFSR4_.html,8,['Log'],['LogNormal']
Testability,"bility. std::string Type() const. Return the type (name) of the used generator. unsigned int EngineSize() const. Return the size of the generator state. double Gaus(double mean = 0, double sigma = 1); Random Distributions; Use naming and signatures compatible with ROOT TRandom. Gaussian distribution. Default method (use Ziggurat). double GausBM(double mean = 0, double sigma = 1). Gaussian distribution (Box-Muller method). double GausR(double mean = 0, double sigma = 1). Gaussian distribution (Ratio Method). double GaussianTail(double a, double sigma = 1). Gaussian Tail distribution. void Gaussian2D(double sigmaX, double sigmaY, double rho, double& x, double& y). Bivariate Gaussian distribution with correlation. double Exp(double tau). Exponential distribution. double BreitWigner(double mean = 0., double gamma = 1). Breit Wigner distribution. double Landau(double mean = 0, double sigma = 1). Landau distribution. double Gamma(double a, double b). Gamma distribution. double LogNormal(double zeta, double sigma). Log Normal distribution. double ChiSquare(double nu). Chi square distribution. double FDist(double nu1, double nu2). F distrbution. double tDist(double nu). t student distribution. void Circle(double& x, double& y, double r = 1). generate random numbers in a 2D circle of radious 1. void Sphere(double& x, double& y, double& z, double r = 1). generate random numbers in a 3D sphere of radious 1. unsigned int Poisson(double mu). Poisson distribution. unsigned int Binomial(unsigned int ntot, double prob). Binomial distribution. unsigned int NegativeBinomial(double n, double prob). Negative Binomial distribution; First parameter is n, second is probability; To be consistent with Random::Binomial. std::vector<unsigned int> Multinomial(unsigned int ntot, const vector<double>& p). Multinomial distribution. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:00; This ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Random_-p1GSLRngGFSR4_.html:3926,Log,LogNormal,3926,root/html534/ROOT__Math__Random_-p1GSLRngGFSR4_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Random_-p1GSLRngGFSR4_.html,8,['Log'],['LogNormal']
Testability,"bility. std::string Type() const. Return the type (name) of the used generator. unsigned int EngineSize() const. Return the size of the generator state. double Gaus(double mean = 0, double sigma = 1); Random Distributions; Use naming and signatures compatible with ROOT TRandom. Gaussian distribution. Default method (use Ziggurat). double GausBM(double mean = 0, double sigma = 1). Gaussian distribution (Box-Muller method). double GausR(double mean = 0, double sigma = 1). Gaussian distribution (Ratio Method). double GaussianTail(double a, double sigma = 1). Gaussian Tail distribution. void Gaussian2D(double sigmaX, double sigmaY, double rho, double& x, double& y). Bivariate Gaussian distribution with correlation. double Exp(double tau). Exponential distribution. double BreitWigner(double mean = 0., double gamma = 1). Breit Wigner distribution. double Landau(double mean = 0, double sigma = 1). Landau distribution. double Gamma(double a, double b). Gamma distribution. double LogNormal(double zeta, double sigma). Log Normal distribution. double ChiSquare(double nu). Chi square distribution. double FDist(double nu1, double nu2). F distrbution. double tDist(double nu). t student distribution. void Circle(double& x, double& y, double r = 1). generate random numbers in a 2D circle of radious 1. void Sphere(double& x, double& y, double& z, double r = 1). generate random numbers in a 3D sphere of radious 1. unsigned int Poisson(double mu). Poisson distribution. unsigned int Binomial(unsigned int ntot, double prob). Binomial distribution. unsigned int NegativeBinomial(double n, double prob). Negative Binomial distribution; First parameter is n, second is probability; To be consistent with Random::Binomial. std::vector<unsigned int> Multinomial(unsigned int ntot, const vector<double>& p). Multinomial distribution. » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:35; This ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__Random_-p1GSLRngGFSR4_.html:3847,Log,LogNormal,3847,root/html604/ROOT__Math__Random_-p1GSLRngGFSR4_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__Random_-p1GSLRngGFSR4_.html,8,['Log'],['LogNormal']
Testability,"bing how to use the special mathematical functions taking full advantage of the precision and speed of the C99 compliant environments. ;  ; file  mathcoreStatFunc.C;   Example macro showing some major probability density functions in ROOT. ;  ; file  mathcoreStatFunc.py;   Example macro showing some major probability density functions in ROOT. ;  ; file  mathcoreVectorCollection.C;   Example showing how to write and read a std vector of ROOT::Math LorentzVector in a ROOT tree. ;  ; file  mathcoreVectorFloatIO.C;   Macro illustrating I/O with Lorentz Vectors of floats The dictionary for LorentzVector of float is not in the libMathCore, therefore is generated when parsed the file with CLING. ;  ; file  mathcoreVectorIO.C;   Example of I/O of a mathcore Lorentz Vectors in a Tree and comparison with a TLorentzVector. ;  ; file  mathGammaNormal.C;   Tutorial illustrating the use of TMath::GammaDist and TMath::LogNormal ;  ; file  mathLaplace.C;   Test the TMath::LaplaceDist and TMath::LaplaceDistI functions ;  ; file  mathmoreIntegration.C;   Example on the usage of the adaptive 1D integration algorithm of MathMore it calculates the numerically cumulative integral of a distribution (like in this case the BreitWigner) to execute the macro type it (you need to compile with AClic) ;  ; file  mathmoreIntegrationMultidim.C;   Example on the usage of the multidimensional integration algorithm of MathMore Please refer to the web documentation for further details: https://root.cern/manual/math/#numerical-integration To execute the macro type the following: ;  ; file  mathStudent.C;   Tutorial illustrating the use of the Student and F distributions ;  ; file  multidimSampling.C;   Example of sampling a multi-dim distribution using the DistSampler class NOTE: This tutorial must be run with ACLIC ;  ; file  multivarGaus.C;   Tutorial illustrating the multivariate gaussian random number generation ;  ; file  normalDist.C;   Tutorial illustrating the new statistical distributions fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__math.html:3554,Test,Test,3554,doc/master/group__tutorial__math.html,https://root.cern,https://root.cern/doc/master/group__tutorial__math.html,1,['Test'],['Test']
Testability,"bins to create for each axis when constructing the interval ;  ; virtual void SetNumBurnInSteps (Int_t numBurnInSteps);  set the number of steps in the chain to discard as burn-in, starting from the first ;  ; virtual void SetNumIters (Int_t numIters);  set the number of iterations to run the metropolis algorithm ;  ; virtual void SetParameters (const RooArgSet &set);  specify the parameters of interest in the interval ;  ; virtual void SetPdf (RooAbsPdf &pdf);  Set the Pdf if not already there. ;  ; virtual void SetPriorPdf (RooAbsPdf &pdf);  Set the Prior Pdf if not already there. ;  ; virtual void SetProposalFunction (ProposalFunction &proposalFunction);  set the proposal function for suggesting new points for the MCMC ;  ; void SetTestSize (double size) override;  set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval) ;  ; virtual void SetUseKeys (bool useKeys);  set whether to use kernel estimation to determine the interval ;  ; virtual void SetUseSparseHist (bool useSparseHist);  set whether to use sparse histogram (if using histogram at all) ;  ; double Size () const override;  Get the size of the test (eg. rate of Type I error) ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooStats::IntervalCalculator; virtual ~IntervalCalculator ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Com",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html:4805,test,test,4805,doc/master/classRooStats_1_1MCMCCalculator.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCCalculator.html,1,['test'],['test']
Testability,"bins(), xbins->GetArray(),; 863 yaxis->GetNbins(), ymin, ymax);; 864 } else if (xbins->fN == 0 && ybins->fN != 0) {; 865 fHistogram = new TH2F(GetName(),GetTitle(),; 866 xaxis->GetNbins(), xmin, xmax,; 867 yaxis->GetNbins(), ybins->GetArray());; 868 } else {; 869 fHistogram = new TH2F(GetName(),GetTitle(),; 870 xaxis->GetNbins(), xmin, xmax,; 871 yaxis->GetNbins(), ymin, ymax);; 872 }; 873 } else {; 874 if (xbins->fN != 0) {; 875 fHistogram = new TH1F(GetName(),GetTitle(),; 876 xaxis->GetNbins(), xbins->GetArray());; 877 } else {; 878 fHistogram = new TH1F(GetName(),GetTitle(),xaxis->GetNbins(),xmin, xmax);; 879 }; 880 }; 881 fHistogram->SetStats(false);; 882 TH1::AddDirectory(add);; 883 } else {; 884 fHistogram->SetTitle(GetTitle());; 885 }; 886 ; 887 if (nostackb) {; 888 loption.ReplaceAll(""nostackb"","""");; 889 } else {; 890 if (nostack) loption.ReplaceAll(""nostack"","""");; 891 fHistogram->GetPainter()->SetStack(fHists);; 892 }; 893 ; 894 if (!fHistogram->TestBit(TH1::kIsZoomed)) {; 895 if (nostack && fMaximum != -1111) fHistogram->SetMaximum(fMaximum);; 896 else {; 897 if (gPad->GetLogy()) fHistogram->SetMaximum(themax*(1+0.2*TMath::Log10(themax/themin)));; 898 else {; 899 if (fMaximum != -1111) fHistogram->SetMaximum(themax);; 900 else fHistogram->SetMaximum((1+gStyle->GetHistTopMargin())*themax);; 901 }; 902 }; 903 if (nostack && fMinimum != -1111) fHistogram->SetMinimum(fMinimum);; 904 else {; 905 if (gPad->GetLogy()) fHistogram->SetMinimum(themin/(1+0.5*TMath::Log10(themax/themin)));; 906 else fHistogram->SetMinimum(themin);; 907 }; 908 }; 909 ; 910 // Copy the axis labels if needed.; 911 TH1 *hfirst = (TH1*)fHists->First();; 912 THashList* labels = hfirst->GetXaxis()->GetLabels();; 913 if (labels) {; 914 TIter iL(labels);; 915 Int_t ilab = 1;; 916 while (auto lb=(TObjString*)iL()) {; 917 fHistogram->GetXaxis()->SetBinLabel(ilab,lb->String().Data());; 918 ilab++;; 919 }; 920 }; 921 ; 922 // Set fHistogram attributes and paint it.; 923 if (!lsame) {; 924 fHistogra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THStack_8cxx_source.html:29611,Test,TestBit,29611,doc/master/THStack_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THStack_8cxx_source.html,1,['Test'],['TestBit']
Testability,"bins, the values of PROB,; instead of being exactly uniformly distributed between zero and one, have; a mean value of about 0.56. We can apply a useful; rule: As long as the bin width is small compared with any significant; physical effect (for example the experimental resolution) then the binning; cannot have an important effect. Therefore, we believe that for all; practical purposes, the probability value PROB is calculated correctly; provided the user is aware that:; 1. The value of PROB should not be expected to have exactly the correct; distribution for binned data.; 2. The user is responsible for seeing to it that the bin widths are; small compared with any physical phenomena of interest.; 3. The effect of binning (if any) is always to make the value of PROB; slightly too big. That is, setting an acceptance criterion of (PROB>0.05; will assure that at most 5% of truly compatible histograms are rejected,; and usually somewhat less."". Note also that for GoF test of unbinned data ROOT provides also the class; ROOT::Math::GoFTest. The class has also method for doing one sample tests; (i.e. comparing the data with a given distribution). void SetContent(const Double_t* content); -*-*-*-*-*-*Replace bin contents by the contents of array content*-*-*-*. Int_t GetContour(Double_t* levels = 0); Return contour values into array levels if pointer levels is non zero. The function returns the number of contour levels.; see GetContourLevel to return one contour only. Double_t GetContourLevel(Int_t level) const; Return value of contour number level; see GetContour to return the array of all contour levels. Double_t GetContourLevelPad(Int_t level) const; Return the value of contour number ""level"" in Pad coordinates ie: if the Pad; is in log scale along Z it returns le log of the contour level value.; see GetContour to return the array of all contour levels. void SetBuffer(Int_t buffersize, Option_t* option = """"); set the maximum number of entries to be kept in the buffer. void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1.html:118373,test,test,118373,root/html534/TH1.html,https://root.cern,https://root.cern/root/html534/TH1.html,1,['test'],['test']
Testability,"bins, the values of PROB,; instead of being exactly uniformly distributed between zero and one, have; a mean value of about 0.56. We can apply a useful; rule: As long as the bin width is small compared with any significant; physical effect (for example the experimental resolution) then the binning; cannot have an important effect. Therefore, we believe that for all; practical purposes, the probability value PROB is calculated correctly; provided the user is aware that:; 1. The value of PROB should not be expected to have exactly the correct; distribution for binned data.; 2. The user is responsible for seeing to it that the bin widths are; small compared with any physical phenomena of interest.; 3. The effect of binning (if any) is always to make the value of PROB; slightly too big. That is, setting an acceptance criterion of (PROB>0.05; will assure that at most 5% of truly compatible histograms are rejected,; and usually somewhat less."". Note also that for GoF test of unbinned data ROOT provides also the class; ROOT::Math::GoFTest. The class has also method for doing one sample tests; (i.e. comparing the data with a given distribution). void SetContent(const Double_t* content); Replace bin contents by the contents of array content. Int_t GetContour(Double_t* levels = 0); Return contour values into array levels if pointer levels is non zero. The function returns the number of contour levels.; see GetContourLevel to return one contour only. Double_t GetContourLevel(Int_t level) const; Return value of contour number level; use GetContour to return the array of all contour levels. Double_t GetContourLevelPad(Int_t level) const; Return the value of contour number ""level"" in Pad coordinates ie: if the Pad; is in log scale along Z it returns le log of the contour level value.; see GetContour to return the array of all contour levels. void SetBuffer(Int_t buffersize, Option_t* option = """"); set the maximum number of entries to be kept in the buffer. void SetContour(Int_t n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:121279,test,test,121279,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,2,['test'],['test']
Testability,"binz2; ++binz) {; 8019 Int_t bin = GetBin(binx, biny, binz);; 8020 Double_t dv = 0.0;; 8021 if (width) {; 8022 dz = fZaxis.GetBinWidth(binz);; 8023 dv = dx * dy * dz;; 8024 integral += RetrieveBinContent(bin) * dv;; 8025 } else {; 8026 integral += RetrieveBinContent(bin);; 8027 }; 8028 if (doError) {; 8029 if (width) igerr2 += GetBinErrorSqUnchecked(bin) * dv * dv;; 8030 else igerr2 += GetBinErrorSqUnchecked(bin);; 8031 }; 8032 }; 8033 }; 8034 }; 8035 ; 8036 if (doError) error = TMath::Sqrt(igerr2);; 8037 return integral;; 8038}; 8039 ; 8040////////////////////////////////////////////////////////////////////////////////; 8041/// Statistical test of compatibility in shape between; 8042/// this histogram and h2, using the Anderson-Darling 2 sample test.; 8043///; 8044/// The AD 2 sample test formula are derived from the paper; 8045/// F.W Scholz, M.A. Stephens ""k-Sample Anderson-Darling Test"".; 8046///; 8047/// The test is implemented in root in the ROOT::Math::GoFTest class; 8048/// It is the same formula ( (6) in the paper), and also shown in; 8049/// [this preprint](http://arxiv.org/pdf/0804.0380v1.pdf); 8050///; 8051/// Binned data are considered as un-binned data; 8052/// with identical observation happening in the bin center.; 8053///; 8054/// \param[in] h2 Pointer to 1D histogram; 8055/// \param[in] option is a character string to specify options; 8056/// - ""D"" Put out a line of ""Debug"" printout; 8057/// - ""T"" Return the normalized A-D test statistic; 8058///; 8059/// - Note1: Underflow and overflow are not considered in the test; 8060/// - Note2: The test works only for un-weighted histogram (i.e. representing counts); 8061/// - Note3: The histograms are not required to have the same X axis; 8062/// - Note4: The test works only for 1-dimensional histograms; 8063 ; 8064Double_t TH1::AndersonDarlingTest(const TH1 *h2, Option_t *option) const; 8065{; 8066 Double_t advalue = 0;; 8067 Double_t pvalue = AndersonDarlingTest(h2, advalue);; 8068 ; 8069 TString opt = opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:315303,test,test,315303,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['test'],['test']
Testability,"bitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; voidSummary() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/Roo2DMomentMorphFunction.html:24841,Test,TestBit,24841,root/html532/Roo2DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html532/Roo2DMomentMorphFunction.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bitset = 8; , kSTLforwardlist = 9; , kSTLunorderedset = 10; , kSTLunorderedmultiset = 11; , ;   kSTLunorderedmap = 12; , kSTLunorderedmultimap = 13; , kSTLend = 14; , kSTLany = 300; , ;   kSTLstring = 365. };  ; enum  EThreadSlotReservation { ;   kMaxUserThreadSlot = 20; , kPadThreadSlot = 20; , kClassThreadSlot = 21; , kDirectoryThreadSlot = 22; , ;   kFileThreadSlot = 23; , kPerfStatsThreadSlot = 24; , kMaxThreadSlot = 25. };  . Functions; void AddClass (const char *cname, Version_t id, const std::type_info &info, DictFuncPtr_t dict, Int_t pragmabits);  Global function called by the ctor of a class's init class (see the ClassImp macro). More...;  ; void AddClass (const char *cname, Version_t id, DictFuncPtr_t dict, Int_t pragmabits);  ; void AddClassAlternate (const char *normName, const char *alternate);  Global function called by GenerateInitInstance. More...;  ; void CallRecursiveRemoveIfNeeded (TObject &obj);  call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true. More...;  ; void Class_ShowMembers (TClass *cl, const void *obj, TMemberInspector &);  Indirect call to the implementation of ShowMember allowing [forward] declaration with out a full definition of the TClass class. More...;  ; static UInt_t ClassTableHash (const char *name, UInt_t size);  ; int CompressionSettings (RCompressionSetting::EAlgorithm algorithm, int compressionLevel);  ; int CompressionSettings (ROOT::ECompressionAlgorithm algorithm, int compressionLevel);  Deprecated name, do not use: More...;  ; TClass * CreateClass (const char *cname, Version_t id, const char *dfil, const char *ifil, Int_t dl, Int_t il);  Global function called by a class' static Dictionary() method (see the ClassDef macro). More...;  ; TClass * CreateClass (const char *cname, Version_t id, const std::type_info &info, TVirtualIsAProxy *isa, const char *dfil, const char *ifil, Int_t dl, Int_t il);  Global function called by a class' static Dictionary() method (see the ClassDef macro). Mor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v618/namespaceROOT.html:6076,Test,TestBit,6076,doc/v618/namespaceROOT.html,https://root.cern,https://root.cern/doc/v618/namespaceROOT.html,3,['Test'],['TestBit']
Testability,"bj = nullptr . ). protected . Read data of special kind of objects. ; Definition at line 851 of file TSQLFile.cxx. ◆ ReadSQLClassInfos(). void TSQLFile::ReadSQLClassInfos ; (; ). protected . Read all class infos from IdsTable. ; Definition at line 1911 of file TSQLFile.cxx. ◆ Recover(). Int_t TSQLFile::Recover ; (; ). inlinefinalvirtual . Attempt to recover file if not correctly closed. ; The function returns the number of keys that have been recovered. If no keys can be recovered, the file will be declared Zombie by the calling function. This function is automatically called when opening a file. If the file is open in read only mode, the file is not modified. If open in update mode and the function finds something to recover, a new directory header is written to the file. When opening the file gain no message from Recover will be reported. If keys have been recovered, the file is usable and you can safely read the corresponding objects. If the file is not usable (a zombie), you can test for this case with code like:; TFile f(""myfile.root"");; if (f.IsZombie()) {<actions to take if file is unusable>}; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; If the file has been recovered, the bit kRecovered is set in the TFile object in memory. You can test if the file has been recovered with if (f.TestBit(TFile::kRecovered)) {... the file has been recovered}; When writing TTrees to a file, it is important to save the Tree header at regular intervals (see TTree::AutoSave). If a file containing a Tree is recovered, the last Tree header written to the file will be used. In this case all the entries in all the branches written before writing the header are valid entries. One can disable the automatic recovery procedure by setting TFile.Recover 0; in the system.rootrc file. ; Reimplemented from TFile.; Definition at line 240 of file TSQLFile.h. ◆ ReOpen(). Int_t TSQLFile::ReOpen ; (; Option_t * ; m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLFile.html:85104,test,test,85104,doc/master/classTSQLFile.html,https://root.cern,https://root.cern/doc/master/classTSQLFile.html,1,['test'],['test']
Testability,"bj) const; virtual voidTF1::FixParameter(Int_t ipar, Double_t value); Double_tTF1::GetChisquare() const; static TF1*TF1::GetCurrent(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TStringTFormula::GetExpFormula(Option_t* option = """") const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; TH1*TF1::GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual const TObject*TFormula::GetLinearPart(Int_t i); virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual Double_tTF1::GetMaximum(Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.E-10, Int_t maxiter = 100, Bool_t logx = false) const; virtual Double_tTF1::GetMaximumStored() const; virtual Double_tTF1::GetMaximumX(Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.E-10, Int_t maxiter = 100, Bool_t logx = false) const; TMethodCall*TF1::GetMethodCall() const; virtual Double_tTF1::GetMinimum(Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.E-10, Int_t maxiter = 100, Bool_t logx = false) const; virtual Double_tTF1::GetMinimumStored() const; virtual Double_tTF1::GetMinimumX(Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.E-10, Int_t maxiter = 100, Bool_t logx = false) const; virtual const char*TNamed::GetName() const; virtual Int_tTF1::GetNDF() const; virtual Int_tTFormula::GetNdim() const; virtual Int_tTFormula::GetNpar() const; virtual Int_tTF1::GetNpx() const; virtual Int_tTFormula::GetNumber() const; virtual Int_tTF1::GetNumberFitPoints() const; virtual Int_tTF1::GetNumberFreeParameters() const; virtual char*TF1::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TF12.html:4517,log,logx,4517,root/html534/TF12.html,https://root.cern,https://root.cern/root/html534/TF12.html,1,['log'],['logx']
Testability,"bj) overrideRemove object from the list.Definition TList.cxx:820; TList::FirstTObject * First() const overrideReturn the first object in the list. Returns 0 when list is empty.Definition TList.cxx:657; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TNamed::Streamervoid Streamer(TBuffer &) overrideStream an object of class TObject.; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TNamed::fTitleTString fTitleDefinition TNamed.h:33; TNamed::fNameTString fNameDefinition TNamed.h:32; TNamed::operator=TNamed & operator=(const TNamed &rhs)TNamed assignment operator.Definition TNamed.cxx:51; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::UseCurrentStylevirtual void UseCurrentStyle()Set current style settings in this object This function is called when either TCanvas::UseCurrentStyl...Definition TObject.cxx:807; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::AppendPadvirtual void AppendPad(Option_t *option="""")Append graphics object to current pad.Definition TObject.cxx:190; TObject::SaveAsvirtual void SaveAs(const char *filename="""", Option_t *option="""") constSave this object in the file specified by filename.Definition TObject.cxx:692; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8cxx_source.html:131063,Test,TestBit,131063,doc/master/TGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8cxx_source.html,1,['Test'],['TestBit']
Testability,"bj); virtual TMatrixTBase<float>&TMatrixTBase<float>::SetMatrixArray(const float* data, Option_t* option = """"); static voidTObject::SetObjectStat(Bool_t stat); virtual TMatrixTBase<float>&SetRowIndexArray(Int_t*); virtual TMatrixTBase<float>&SetSub(Int_t row_lwb, Int_t col_lwb, const TMatrixTBase<float>& source); floatTMatrixTBase<float>::SetTol(float newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual TMatrixTBase<float>&TMatrixTBase<float>::Shift(Int_t row_shift, Int_t col_shift); virtual voidShowMembers(TMemberInspector&); floatSimilarity(const TVectorT<float>& v) const; virtual TMatrixTBase<float>&TMatrixTBase<float>::Sqr(); virtual TMatrixTBase<float>&TMatrixTBase<float>::Sqrt(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual floatTMatrixTBase<float>::Sum() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TMatrixT<float>&T(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTMult(const TMatrixT<float>& a, const TMatrixT<float>& b); voidTMult(const TMatrixT<float>& a, const TMatrixTSym<float>& b); voidTMult(const TMatrixTSym<float>& a, const TMatrixT<float>& b); voidTMult(const TMatrixTSym<float>& a, const TMatrixTSym<float>& b); TMatrixT<float>&Transpose(const TMatrixT<float>& source); virtual TMatrixTBase<float>&TMatrixTBase<float>::UnitMatrix(); TMatrixT<float>&Use(TMatrixT<float>& a); const TMatrixT<float>&Use(const TMatrixT<float>& a) const; TMatrixT<float>&Use(Int_t nrows, Int_t ncols, float* data); const TMatrixT<float>&Use(Int_t nrows, Int_t ncols, const float* data) const; TMatrixT<float>&Use(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, float* data); const TMatrixT<float>&Use(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, const float* data) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMatrixT_float_.html:11979,Test,TestBits,11979,root/html534/TMatrixT_float_.html,https://root.cern,https://root.cern/root/html534/TMatrixT_float_.html,1,['Test'],['TestBits']
Testability,"bj); virtual voidReferenceEntity(TSubString& str, TClass* entity, const char* comment = 0); virtual voidReferenceEntity(TSubString& str, TDataMember* entity, const char* comment = 0); virtual voidReferenceEntity(TSubString& str, TDataType* entity, const char* comment = 0); virtual voidReferenceEntity(TSubString& str, TMethod* entity, const char* comment = 0); virtual Bool_tReferenceIsRelative(const char* reference) const; virtual const char*ReplaceSpecialChars(char c); voidReplaceSpecialChars(TString& text); voidReplaceSpecialChars(ostream& out, const char* string); voidReplaceSpecialChars(TString& text, Ssiz_t& pos); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteHtmlFooter(ostream& out, const char* dir = """", const char* lastUpdate = """", const char* author = """", const char* copyright = """"); virtual voidWriteHtmlHeader(ostream& out, const char* title, const char* dir = """", TClass* cls = 0); voidWriteLineNumbers(ostream& out, Long_t nLines, const TString& infileBase) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TDocOutput.html:6546,Test,TestBit,6546,root/html530/TDocOutput.html,https://root.cern,https://root.cern/root/html530/TDocOutput.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bj); virtual voidTGCompositeFrame::SetEditable(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetEditDisabled(UInt_t on = 1); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetParts(Int_t npart)MENU ; virtual voidSetParts(Int_t* parts, Int_t npart); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidSetText(TGString* text, Int_t partidx = 0); virtual voidSetText(const char* text, Int_t partidx = 0); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGStatusBar.html:14563,Test,TestBit,14563,root/html534/TGStatusBar.html,https://root.cern,https://root.cern/root/html534/TGStatusBar.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bj;; 6065 pad->SetEditable(mode);; 6066 }; 6067 }; 6068}; 6069 ; 6070////////////////////////////////////////////////////////////////////////////////; 6071/// Override TAttFill::FillStyle for TPad because we want to handle style=0; 6072/// as style 4000.; 6073 ; 6074void TPad::SetFillStyle(Style_t fstyle); 6075{; 6076 if (fstyle == 0) fstyle = 4000;; 6077 TAttFill::SetFillStyle(fstyle);; 6078}; 6079 ; 6080////////////////////////////////////////////////////////////////////////////////; 6081/// Set Lin/Log scale for X; 6082/// - value = 0 X scale will be linear; 6083/// - value = 1 X scale will be logarithmic (base 10); 6084/// - value > 1 reserved for possible support of base e or other; 6085 ; 6086void TPad::SetLogx(Int_t value); 6087{; 6088 fLogx = value;; 6089 delete fView; fView = nullptr;; 6090 Modified();; 6091 RangeAxisChanged();; 6092}; 6093 ; 6094////////////////////////////////////////////////////////////////////////////////; 6095/// Set Lin/Log scale for Y; 6096/// - value = 0 Y scale will be linear; 6097/// - value = 1 Y scale will be logarithmic (base 10); 6098/// - value > 1 reserved for possible support of base e or other; 6099 ; 6100void TPad::SetLogy(Int_t value); 6101{; 6102 fLogy = value;; 6103 delete fView; fView = nullptr;; 6104 Modified();; 6105 RangeAxisChanged();; 6106}; 6107 ; 6108////////////////////////////////////////////////////////////////////////////////; 6109/// Set Lin/Log scale for Z; 6110 ; 6111void TPad::SetLogz(Int_t value); 6112{; 6113 fLogz = value;; 6114 delete fView; fView = nullptr;; 6115 Modified();; 6116 RangeAxisChanged();; 6117}; 6118 ; 6119////////////////////////////////////////////////////////////////////////////////; 6120/// Set canvas range for pad and resize the pad. If the aspect ratio; 6121/// was fixed before the call it will be un-fixed.; 6122 ; 6123void TPad::SetPad(Double_t xlow, Double_t ylow, Double_t xup, Double_t yup); 6124{; 6125 // Reorder points to make sure xlow,ylow is bottom left point and; 6126 // x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:199723,Log,Log,199723,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,5,"['Log', 'log']","['Log', 'logarithmic']"
Testability,"bjWrap TGLPysicalShape into TObject so that it can be edited using GED ;  CTGLPShapeObjEditorGUI editor for TGLPShapeObj ;  CTGLPShapeRefBase class for references to TGLPysicalShape that need to be notified when the shape is destroyed ;  CTGLQuadricWrapper class for GLU quadric shape drawing object ;  CTGLRectViewport (pixel base) 2D rectangle class ;  CTGLRedrawTimer;  CTGLRnrCtxAggregates data for a given redering context as needed by various parts of the ROOT's OpenGL infrastructure ;  CTGLRotateManipRotate manipulator - attaches to physical shape and draws local axes widgets - rings drawn from attached physical center, in plane defined by axis ;  CTGLSAFrameStandalone GL Viewer GUI main frame ;  CTGLSAViewerThe top level standalone GL-viewer - created via plugin manager ;  CTGLScaleManipScale manipulator - attaches to physical shape and draws local axes widgets with box heads ;  ►CTGLSceneTGLScene provides management and rendering of ROOT's default 3D /object representation as logical and physical shapes ;  CDrawElement_t;  CTSceneInfo;  CTGLSceneBaseScene base-class – provides basic interface expected by the TGLViewer or its sub-classes: ;  CTGLSceneInfoBase class for extended scene context ;  CTGLScenePadImplements VirtualViewer3D interface and fills the base-class visualization structures from pad contents ;  CTGLSelectBufferEncapsulates OpenGL select buffer ;  CTGLSelectionBuffer;  CTGLSelectRecordStandard selection record including information about containing scene and details ob out selected object (TGLPhysicalShape*, TObject* or simply a void* for foreign scenes) ;  CTGLSelectRecordBase;  CTGLSphereImplements a native ROOT-GL sphere that can be rendered at different levels of detail ;  CTGLStopwatchStopwatch object for timing GL work ;  ►CTGLSurfacePainterImplements painting of TH2 with ""SURF"" option ;  CProjection_t;  CTGLTextGL Text ;  CTGLTF3PainterPlot-painter for TF3 functions ;  CTGLTH3Composition;  CTGLTH3CompositionPainter;  CTGLTH3SliceA slice o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:128230,log,logical,128230,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,1,['log'],['logical']
Testability,"bjWrap TGLPysicalShape into TObject so that it can be edited using GED ;  CTGLPShapeObjEditorGUI editor for TGLPShapeObj ;  CTGLPShapeRefBase class for references to TGLPysicalShape that need to be notified when the shape is destroyed ;  CTGLQuadricWrapper class for GLU quadric shape drawing object ;  CTGLRectViewport (pixel base) 2D rectangle class ;  CTGLRedrawTimer;  CTGLRnrCtxAggregates data for a given redering context as needed by various parts of the ROOT's OpenGL infrastructure ;  CTGLRotateManipRotate manipulator - attaches to physical shape and draws local axes widgets - rings drawn from attached physical center, in plane defined by axis ;  CTGLSAFrameStandalone GL Viewer GUI main frame ;  CTGLSAViewerThe top level standalone GL-viewer - created via plugin manager ;  CTGLScaleManipScale manipulator - attaches to physical shape and draws local axes widgets with box heads ;  ►CTGLSceneTGLScene provides management and rendering of ROOT's default 3D /object representation as logical and physical shapes ;  CDrawElement_t;  CTSceneInfo;  CTGLSceneBaseScene base-class – provides basic interface expected by the TGLViewer or its sub-classes: ;  CTGLSceneInfoBase class for extended scene context ;  CTGLScenePadImplements VirtualViewer3D interface and fills the base-class visualization structures from pad contents ;  CTGLSelectBufferEncapsulates OpenGL select buffer ;  CTGLSelectionBuffer;  CTGLSelectRecordStandard selection record including information about containing scene and details ob out selected object (TGLPhysicalShape*, TObject* or simply a void* for foreign scenes) ;  CTGLSelectRecordBaseBase class for select records ;  CTGLSphereImplements a native ROOT-GL sphere that can be rendered at different levels of detail ;  CTGLStopwatchStopwatch object for timing GL work ;  ►CTGLSurfacePainterImplements painting of TH2 with ""SURF"" option ;  CProjection_t;  CTGLTextGL Text ;  CTGLTF3PainterPlot-painter for TF3 functions ;  CTGLTH3Composition;  CTGLTH3CompositionP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:154634,log,logical,154634,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,5,['log'],['logical']
Testability,"bject gGeoIdentity. Ownership of Geometry Objects; The class TGeoManager class contains the entire API needed for building and tracking geometry. It defines a global pointer gGeoManager in order to be fully accessible from external code. The manager class is the owner of all geometry objects defined in a session; therefore, users must not try to control their deletion. It contains lists of media, materials, transformations, shapes and volumes. A special case is the one of geometrical transformations. When creating a matrix or a translation, this is by default owned by external objects. The manager class becomes owner of all transformations used for positioning volumes. In order to force the ownership for other transformations, one can use TGeoMatrix::RegisterYourself() method. Do not be therefore surprised that some transformations cannot be found by name when creating a composite shape for instance if you did not register them after creation.; Logical nodes (positioned volumes) are created and destroyed by the TGeoVolume class. Physical nodes and their global transformations are subjected to a caching mechanism due to the sometimes very large memory requirements of logical graph expansion. The total number of physical instances of volumes triggers the caching mechanism and the cache manager is a client of TGeoManager. The manager class also controls the drawing/checking package (TGeoPainter client). This is linked with ROOT graphical libraries loaded on demand in order to control visualization actions. Navigation and Tracking; Tracking is the feature allowing the transport of a given particle knowing its kinematics. A state is determined by any combination of the position \(\vec{r}\) and direction \(\vec{n}\) with respect to the world reference frame. The direction \(\vec{n}\) must be a unit vector having as components the director cosines. The full classification of a given state will provide the following information: the deepest physical node containing the posit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:64719,Log,Logical,64719,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['Log'],['Logical']
Testability,"bject(TObject* o); virtual voidSetTitle(const char* t); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector& insp) const; virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTPolyMarker3D::Size() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTakeAction(TEvePointSelector*); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; TEvePointSet(const TEvePointSet& e); TEvePointSet(Int_t n_points = 0, TEvePointSelectorConsumer::ETreeVarType_e tv_type = kTVT_XYZ); TEvePointSet(const char* name, Int_t n_points = 0, TEvePointSelectorConsumer::ETreeVarType_e tv_type = kTVT_XYZ); virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteVizParams(ostream& out, const TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePointSet.html:20831,Test,TestBits,20831,root/html602/TEvePointSet.html,https://root.cern,https://root.cern/root/html602/TEvePointSet.html,2,['Test'],['TestBits']
Testability,"bject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidTEveDigitSet::SetTooltipCBFoo(TEveDigitSet::TooltipCB_foo f); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector& insp) const; virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; TEveQuadSet(const char* n = ""TEveQuadSet"", const char* t = """"); TEveQuadSet(TEveQuadSet::EQuadType_e quadType, Bool_t valIsCol, Int_t chunkSize, const char* n = ""TEveQuadSet"", const char* t = """"); virtual voidTEveDigitSet::UnHighlighted(); virtual voidTEveDigitSet::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveDigitSet::UseSingleColor(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveEleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveQuadSet.html:20897,Test,TestBit,20897,root/html602/TEveQuadSet.html,https://root.cern,https://root.cern/root/html602/TEveQuadSet.html,2,['Test'],['TestBit']
Testability,"bject* obj) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); virtual voidRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidSaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOwner(Bool_t owner = kTRUE); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFolder.html:7959,Test,TestBit,7959,root/html528/TFolder.html,https://root.cern,https://root.cern/root/html528/TFolder.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGPicturePool.html:4765,Test,TestBit,4765,root/html528/TGPicturePool.html,https://root.cern,https://root.cern/root/html528/TGPicturePool.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TObjectRefSpy.html:4544,Test,TestBit,4544,root/html528/TObjectRefSpy.html,https://root.cern,https://root.cern/root/html528/TObjectRefSpy.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject* obj); virtual voidTDataSet::Remove(TDataSet* set); virtual TDataSet*TDataSet::RemoveAt(Int_t idx); virtual voidTChair::Reset(Int_t c = 0); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTChair::SavePrimitive(ostream& out, Option_t* option); virtual voidTChair::Set(Int_t n); virtual voidTChair::Set(Int_t n, Char_t* array); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTDataSet::SetMother(TDataSet* parent = 0); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTChair::SetNRows(Int_t n); virtual voidTDataSet::SetObject(TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTDataSet::SetParent(TDataSet* parent = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTDataSet::SetWrite(); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidTDataSet::Shunt(TDataSet* newParent = 0); virtual Int_tTNamed::Sizeof() const; virtual voidTDataSet::Sort(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const TTable*TChair::Table() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTDataSet::UnMark()MENU ; voidTDataSet::UnMarkAll()MENU ; virtual voidTChair::Update(); virtual voidTChair::Update(TDataSet* set, UInt_t opt = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTDataSet::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTDataSet::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TColumnView.html:8672,Test,TestBit,8672,root/html526/TColumnView.html,https://root.cern,https://root.cern/root/html526/TColumnView.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject* obj); virtual voidTHn::Reset(Option_t* option = """"); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTHnBase::Scale(Double_t c); voidTHn::SetBinContent(const Int_t* idx, Double_t v); virtual voidTHn::SetBinContent(Long64_t bin, Double_t v); voidTHnBase::SetBinEdges(Int_t idim, const Double_t* bins); voidTHnBase::SetBinError(const Int_t* idx, Double_t e); voidTHnBase::SetBinError(Long64_t bin, Double_t e); virtual voidTHn::SetBinError2(Long64_t bin, Double_t e2); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTHnBase::SetEntries(Double_t entries); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTHnBase::SetTitle(const char* title); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTHn::Sumw2(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; THnT<Long64_t>(); THnT<Long64_t>(const THnT<Long64_t>&); THnT<Long64_t>(THnT<Long64_t>&&); THnT<Long64_t>(const char* name, const char* title, Int_t dim, const Int_t* nbins, const Double_t* xmin, const Double_t* xmax); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THnT_Long64_t_.html:8301,Test,TestBit,8301,root/html602/THnT_Long64_t_.html,https://root.cern,https://root.cern/root/html602/THnT_Long64_t_.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidTStreamerElement::SetArrayDim(Int_t dim); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCtype(Int_t t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTStreamerElement::SetMaxIndex(Int_t dim, Int_t max); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTStreamerElement::SetNewClass(TClass* cl); virtual voidTStreamerElement::SetNewType(Int_t dtype); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTStreamerElement::SetOffset(Int_t offset); virtual voidTStreamerElement::SetSize(Int_t dsize); voidSetSTLtype(Int_t t); virtual voidSetStreamer(TMemberStreamer* streamer); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTStreamerElement::SetTObjectOffset(Int_t tobjoffset); virtual voidTStreamerElement::SetType(Int_t dtype); virtual voidTStreamerElement::SetTypeName(const char* name); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTStreamerElement::Update(const TClass* oldClass, TClass* newClass); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStreamerSTL.html:6508,Test,TestBit,6508,root/html528/TStreamerSTL.html,https://root.cern,https://root.cern/root/html528/TStreamerSTL.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject** b, Int_t first, Int_t last); static voidTSeqCollection::QSort(TObject** a, Int_t nBs, TObject*** b, Int_t first, Int_t last); virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); virtual TObject*Remove(TObject* obj); virtual TObject*Remove(TObjLink* lnk); virtual voidTSeqCollection::RemoveAfter(TObject* after); voidTCollection::RemoveAll(); virtual voidTCollection::RemoveAll(TCollection* col); virtual TObject*TSeqCollection::RemoveAt(Int_t idx); virtual voidTSeqCollection::RemoveBefore(TObject* before); virtual voidTSeqCollection::RemoveFirst(); virtual voidRemoveLast(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTCollection::SetCurrentCollection(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTCollection::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTCollection::SetOwner(Bool_t enable = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidSort(Bool_t order = kSortAscending); static voidTCollection::StartGarbageCollection(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TList(); TList(TObject*); voidTSeqCollection::UnSort(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TList.html:8994,Test,TestBit,8994,root/html602/TList.html,https://root.cern,https://root.cern/root/html602/TList.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); virtual RooAbsArg*createFundamental(const char* newname = 0) const; Roo1DTable*createTable(const char* label) const; virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::Exe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsCategory.html:3235,test,testArg,3235,root/html526/RooAbsCategory.html,https://root.cern,https://root.cern/root/html526/RooAbsCategory.html,3,['test'],['testArg']
Testability,"bject.; Definition at line 100 of file TApplicationRemote.h. ◆ IsValid(). Bool_t TApplicationRemote::IsValid ; (; ); const. inline . Definition at line 109 of file TApplicationRemote.h. ◆ Print(). void TApplicationRemote::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print some info about this instance. ; Reimplemented from TObject.; Definition at line 920 of file TApplicationRemote.cxx. ◆ ProcessLine(). Longptr_t TApplicationRemote::ProcessLine ; (; const char * ; line, . Bool_t ; = kFALSE, . Int_t * ; error = nullptr . ). overridevirtual . Parse a single command line and forward the request to the remote server where it will be processed. ; The line is either a C++ statement or an interpreter command starting with a ""."". Return the return value of the command casted to a long. ; Reimplemented from TApplication.; Definition at line 886 of file TApplicationRemote.cxx. ◆ RecvLogFile(). void TApplicationRemote::RecvLogFile ; (; Int_t ; size). private . Receive the log file from the server. ; Definition at line 602 of file TApplicationRemote.cxx. ◆ SendFile(). Int_t TApplicationRemote::SendFile ; (; const char * ; file, . Int_t ; opt = kAscii, . const char * ; rfile = nullptr . ). Send a file to the server. ; Return 0 on success, -1 in case of error. If defined, the full path of the remote path will be rfile. The mask 'opt' is an or of ESendFileOpt: kAscii (0x0) if set true ascii file transfer is used; kBinary (0x1) if set true binary file transfer is used; kForce (0x2) if not set an attempt is done to find out; whether the file really needs to be downloaded; (a valid copy may already exist in the cache; from a previous run). Definition at line 762 of file TApplicationRemote.cxx. ◆ SendObject(). Int_t TApplicationRemote::SendObject ; (; const TObject * ; obj). Send object to server. ; Return 0 on success, -1 in case of error. ; Definition at line 652 of file TApplicationRemote.cxx. ◆ SetPortParam(). void TApplicationRemote::SetPortParam ; (; Int_t ; lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:29423,log,log,29423,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,1,['log'],['log']
Testability,"bject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringfCPUParList of par files to be loaded for CPU benchmarks; TStringfCPUSelSelector to be used for CPU benchmarks; TProofBenchDataSet*fDSInstance to handle datasets operations; TStringfDataGenParList of par files to be loaded to generate data for benchmarks; TStringfDataGenSelSelector to be used for generate data for benchmarks; TStringfDataParList of par files to be loaded for data benchmarks; TStringfDataSelSelector to be used for data benchmarks; TStringfDataSetName of the dataset; Bool_tfDebugDebug switch; TNamed*fDescriptionStrings describing the cluster for this test (saved in the output file); TPBHistType*fHistTypeType of histograms for CPU runs; Int_tfNFilesWrkNumber of files generated files per worker; Int_tfNHistNumber of histograms to be created in default CPU runs; Int_tfNtriesNumber of times a measurement is repeated; Int_tfNumWrkMaxMax number of workers (required for dynamic setups); TFile*fOutFileOutput file; TStringfOutFileNameName of the output file; TProof*fProofProof; TProof*fProofDSProof to be used for dataset actions; TPBReadType*fReadTypeType of read (partial, full); Bool_tfReleaseCacheRelease cache for data reads between runs; TProofBenchRunCPU*fRunCPUInstance to run CPU scans; TProofBenchRunDataRead*fRunDSInstance to run data-read scans; TStringfSelOptionOption field for processing the selector; static TF1*fgFioFunction used for I/O rate fits; static TF1*fgFioVFunction used for I/O rate fits with non-constant Rcpu; static TF1*fgFp1Simple 1st degree polynomial; static TF1*fgFp1nNormalized 1st degree; static TF1*fgFp2Simple 2nd degree polynomial; static TF1*fgFp2nNormalized 2nd degree; static TF1*fgFp3Function with varying Rcpu; static TF1*fgFp3nNormalized Function with varying Rcpu; static TList*fgGraphsList of TGraphErrors created by Draw actions. private:. Bool_tfUnlinkOutfileWhether to remove empty output files. Class Charts. Inheritance; I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofBench.html:7770,benchmark,benchmarks,7770,root/html602/TProofBench.html,https://root.cern,https://root.cern/root/html602/TProofBench.html,14,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"bject::(anonymous)TObject::kZombie. protected:. TSignalHandler*TProofMgr::fIntHandlerInterrupt signal handler (ctrl-c); TStringTProofMgr::fMssUrlURL for the remote data pool, if any; TStringTNamed::fNameobject identifier; Int_tTProofMgr::fRemoteProtocolProtocol number run by the daemon server; TProofMgr::EServTypeTProofMgr::fServTypeType of server: old-proofd, XrdProofd; TList*TProofMgr::fSessionsPROOF session managed by this server; TStringTNamed::fTitleobject title; TUrlTProofMgr::fUrlServer URL; static TListTProofMgr::fgListOfManagersSub-list of TROOT::ListOfProofs for managers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofMgrLite(const char* url, Int_t loglevel = -1, const char* alias = """"); Create a PROOF manager for the Lite environment. TProof * CreateSession(const char* = 0, const char* = 0, Int_t = -1); Create a new session. TProofLog * GetSessionLogs(Int_t ridx = 0, const char* stag = 0, const char* pattern = ""-v | SvcMsg"", Bool_t rescan = kFALSE); Get logs or log tails from last session associated with this manager; instance.; The arguments allow to specify a session different from the last one:; isess specifies a position relative to the last one, i.e. 1; for the next to last session; the absolute value is taken; so -1 and 1 are equivalent.; stag specifies the unique tag of the wanted session; The special value stag = ""NR"" allows to just initialize the TProofLog; object w/o retrieving the files; this may be useful when the number; of workers is large and only a subset of logs is required.; If 'stag' is specified 'isess' is ignored (unless stag = ""NR"").; If 'pattern' is specified only the lines containing it are retrieved; (remote grep functionality); to filter out a pattern 'pat' use; pattern = ""-v pat"".; Returns a TProofLog object (to be deleted by the caller) on success,; 0 if something wrong happened. TObjString * ReadBuffer(const char* file, Long64_t ofs, Int_t len); Read 'len' bytes from offset 'ofs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofMgrLite.html:10148,log,logs,10148,root/html602/TProofMgrLite.html,https://root.cern,https://root.cern/root/html602/TProofMgrLite.html,4,['log'],"['log', 'logs']"
Testability,"bject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); Int_tCopyMacroToCache(const char* macro, Int_t headerRequired = 0, TSelector** selector = 0, Int_t opt = 0, TList* wrks = 0); TSlave*TProof::CreateSlave(const char* url, const char* ord, Int_t perf, const char* image, const char* workdir); TSlave*TProof::CreateSubmaster(const char* url, const char* ord, const char* image, const char* msd); Int_tCreateSymLinks(TList* files, TList* wrks = 0); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; TList*TProof::GetEnabledPackages() const; static Bool_tTProof::GetFileInCmd(const char* cmd, TString& fn); static Int_tTProof::GetInputData(TList* input, const char* cachedir, TString& emsg); TList*TProof::GetListOfActiveSlaves() const; TVirtualProofPlayer*TProof::GetPlayer() const; TPluginHandler*TProof::GetProgressDialog() const; Int_tTProof::GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTProof::HandleLibIncPath(const char* what, Bool_t add, const char* dirs); Int_tTProof::HandleOutputOptions(TString& opt, TString& target, Int_t action); Int_tInit(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); voidTProof::InitMembers(); virtual TVirtualProofPlayer*TProof::MakePlayer(const char* player = 0, TSocket* s = 0); TProofQueryResult*MakeQueryResult(Long64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); voidTObject::MakeZombie(); virtual Int_tPollForNewWorkers(); voidTProof::PrepareInputDataFile(TString& dataFile); Int_tTProof::RemoveWorkers(TList* wrks); static Int_tTProof::SaveInputData(TQueryResult* qr, const char* cachedir, TString& emsg); virtual voidTProof::SaveWorkerInfo(); Int_tTProof::SendFile(const char* file, Int_t opt = (kBinary|kForward|kCp|kCpBin), const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofLite.html:21366,assert,assert,21366,root/html534/TProofLite.html,https://root.cern,https://root.cern/root/html534/TProofLite.html,1,['assert'],['assert']
Testability,"bject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; UInt_tfShapeBitsshape bits; Int_tfShapeIdshape id; TStringTNamed::fTitleobject title. private:. static Double_tfgEpsMchMachine round-off error; static TGeoMatrix*fgTransformcurrent transformation matrix that applies to shape. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoShape(); Default constructor. TGeoShape(const char* name); Default constructor. ~TGeoShape(); Destructor. void CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); Test for shape navigation methods. Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate; directions randomly in cos(theta). Compute DistFromInside and move the; point with bigger distance. Compute DistFromOutside back from new point.; Plot d-(d1+d2). Double_t ComputeEpsMch(); Compute machine round-off double precision error as the smallest number that; if added to 1.0 is different than 1.0. Double_t EpsMch(); static function returning the machine round-off error. const char * GetName() const; Get the shape name. Int_t ShapeDistancetoPrimitive(Int_t numpoints, Int_t px, Int_t py) const; Returns distance to shape primitive mesh. Bool_t IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); True if point is closer than epsil to one of the phi planes defined by c1,s1 or c2,s2. Bool_t IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); Static method to check if a point is in the phi range (phi1, phi2) [degrees]. Bool_t IsCrossingSemiplane(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoShape.html:18488,test,test,18488,root/html602/TGeoShape.html,https://root.cern,https://root.cern/root/html602/TGeoShape.html,2,['test'],['test']
Testability,"bject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; const RooArgList&list(); Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooConstraintSum.html:17666,log,logEvalError,17666,root/html534/RooConstraintSum.html,https://root.cern,https://root.cern/root/html534/RooConstraintSum.html,3,['log'],['logEvalError']
Testability,"bject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPackageDescription&operator=(const TPackageDescription&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPackageDescription.html:4381,Test,TestBit,4381,root/html528/TPackageDescription.html,https://root.cern,https://root.cern/root/html528/TPackageDescription.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSessionDescription&operator=(const TSessionDescription&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSessionDescription.html:4407,Test,TestBit,4407,root/html528/TSessionDescription.html,https://root.cern,https://root.cern/root/html528/TSessionDescription.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEventIterTree&operator=(const TEventIterTree&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidTEventIter::StopProcess(Bool_t abort); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEventIterTree.html:4681,Test,TestBit,4681,root/html528/TEventIterTree.html,https://root.cern,https://root.cern/root/html528/TEventIterTree.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEventIterUnit&operator=(const TEventIterUnit&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidTEventIter::StopProcess(Bool_t abort); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEventIterUnit.html:4665,Test,TestBit,4665,root/html528/TEventIterUnit.html,https://root.cern,https://root.cern/root/html528/TEventIterUnit.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidSaveAs(const char* filename = """", Option_t* option = """") const; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGObject(); TGObject(const TGObject& tgo); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGObject.html:4394,Test,TestBit,4394,root/html602/TGObject.html,https://root.cern,https://root.cern/root/html602/TGObject.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGPicture&operator=(const TGPicture&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); UInt_tTRefCnt::References() const; UInt_tTRefCnt::RemoveReference(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidTRefCnt::SetRefCount(UInt_t r); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGPicture.html:4776,Test,TestBit,4776,root/html528/TGPicture.html,https://root.cern,https://root.cern/root/html528/TGPicture.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGIdleHandler&operator=(const TGIdleHandler&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGIdleHandler.html:4464,Test,TestBit,4464,root/html534/TGIdleHandler.html,https://root.cern,https://root.cern/root/html534/TGIdleHandler.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPyDispatcher&operator=(const TPyDispatcher&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPyDispatcher.html:7487,Test,TestBit,7487,root/html534/TPyDispatcher.html,https://root.cern,https://root.cern/root/html534/TPyDispatcher.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TKSocket&operator=(const TKSocket&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TKSocket(const TKSocket&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TKSocket.html:4408,Test,TestBit,4408,root/html602/TKSocket.html,https://root.cern,https://root.cern/root/html602/TKSocket.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::MakeZombie(). private:. TMVA::MsgLogger&Log() const; TStringSecToText(Double_t, Bool_t) const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Bool_tfColourfulOutputflag for use of colors; TMVA::MsgLogger*fLoggerthe output logger; Int_tfNcountsreference number of ""counts""; TStringfPrefixprefix for outputs; static const TStringfgClassNameused for output; static const Int_tfgNbinsnumber of bins in progress bar. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Timer(const char* prefix = """", Bool_t colourfulOutput = kTRUE); constructor. Timer(Int_t ncounts, const char* prefix = """", Bool_t colourfulOutput = kTRUE); standard constructor: ncounts gives the total number of counts that; the loop will iterate through. At each call of the timer, the current; number of counts is provided by the user, so that the timer can obtain; the due time from linearly interpolating the spent time. ~Timer( void ); destructor. void Init(Int_t ncounts); timer initialisation. void Reset( void ); resets timer. Double_t ElapsedSeconds( void ); computes elapsed tim in seconds. TString GetElapsedTime(Bool_t Scientific = kTRUE); returns pretty string with elaplsed time. TString GetLeftTime(Int_t icounts); returns pretty string with time left. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__Timer.html:6936,log,logger,6936,root/html602/TMVA__Timer.html,https://root.cern,https://root.cern/root/html602/TMVA__Timer.html,2,['log'],['logger']
Testability,"bject::MakeZombie(); voidTMVA::VariableTransformBase::SetCreated(Bool_t c = kTRUE); voidTMVA::VariableTransformBase::SetName(const TString& c); voidTMVA::VariableTransformBase::SetNVariables(UInt_t i); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Targets(); vector<TMVA::VariableInfo>&TMVA::VariableTransformBase::Variables(). private:. voidCleanUpCumulativeArrays(TString opt = ""ALL""); voidGetCumulativeDist(const vector<TMVA::Event*,allocator<TMVA::Event*> >&); Double_tOldCumulant(Float_t x, TH1* h) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<std::vector<TH1F*> >fCumulativeDist! The Cummulative distributions ; vector<std::vector<PDF*> >fCumulativePDFThe cumulative PDF; UInt_tfElementsperbinav number of events stored per bin in cum dist; Bool_tfFlatNotGauss; Int_tfPdfMaxSmooth; Int_tfPdfMinSmooth. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableGaussTransform(TMVA::DataSetInfo& dsi, TString strcor = """"); constructor; can only be applied one after the other when they are created. But in order to; determine the Gauss transformation. ~VariableGaussTransform( void ); destructor. void Initialize(). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); calculate the cumulative distributions. const TMVA::Event* Transform(const TMVA::Event *const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__VariableGaussTransform.html:7858,log,logger,7858,root/html528/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html528/TMVA__VariableGaussTransform.html,1,['log'],['logger']
Testability,"bject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); doubleoperator()(int x, int y) const; RooCFunction2Ref<double,int,int>&operator=(const RooCFunction2Ref<double,int,int>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& R__b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction2Ref_double_int_int_.html:5260,Test,TestBit,5260,root/html530/RooCFunction2Ref_double_int_int_.html,https://root.cern,https://root.cern/root/html530/RooCFunction2Ref_double_int_int_.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooHashTable&operator=(const RooHashTable&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tremove(TObject* arg, TObject* hashArg = 0); Bool_treplace(const TObject* oldArg, const TObject* newArg, const TObject* oldHashArg = 0); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); Int_tsize() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooHashTable.html:5040,Test,TestBit,5040,root/html526/RooHashTable.html,https://root.cern,https://root.cern/root/html526/RooHashTable.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TConditionImp&operator=(const TConditionImp&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tSignal(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Int_tTimedWait(ULong_t secs, ULong_t nanoSecs = 0); virtual voidTObject::UseCurrentStyle(); virtual Int_tWait(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TConditionImp.html:4567,Test,TestBit,4567,root/html530/TConditionImp.html,https://root.cern,https://root.cern/root/html530/TConditionImp.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEveRecTrackT<float>&operator=(const TEveRecTrackT<float>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; Float_tPt(); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TEveRecTrackT<float>(); TEveRecTrackT<float>(const TEveRecTrackT<float>&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveRecTrackT_float_.html:4405,Test,TestBit,4405,root/html602/TEveRecTrackT_float_.html,https://root.cern,https://root.cern/root/html602/TEveRecTrackT_float_.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGDMLRefl&operator=(const TGDMLRefl&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGDMLRefl(); TGDMLRefl(const TGDMLRefl&); TGDMLRefl(const char* name, const char* solid, TGeoMatrix* matrix); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGDMLRefl.html:4380,Test,TestBit,4380,root/html602/TGDMLRefl.html,https://root.cern,https://root.cern/root/html602/TGDMLRefl.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooSharedPropertiesList&operator=(const RooSharedPropertiesList&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); RooSharedProperties*registerProperties(RooSharedProperties*, Bool_t canDeleteIncoming = kTRUE); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidunregisterProperties(RooSharedProperties*); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooSharedPropertiesList.html:4621,Test,TestBit,4621,root/html530/RooSharedPropertiesList.html,https://root.cern,https://root.cern/root/html530/RooSharedPropertiesList.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGDMLWrite&operator=(const TGDMLWrite&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetG4Compatibility(Bool_t G4Compatible); voidSetNamingSpeed(TGDMLWrite::ENamingType naming); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidWriteGDMLfile(TGeoManager* geomanager, const char* filename = ""test.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDMLWrite.html:4374,Test,TestBit,4374,root/html532/TGDMLWrite.html,https://root.cern,https://root.cern/root/html532/TGDMLWrite.html,3,"['Test', 'test']","['TestBit', 'TestBits', 'test']"
Testability,"bject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTGLayoutManager::SetDefaultHeight(UInt_t); virtual voidTGLayoutManager::SetDefaultWidth(UInt_t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTGLayoutManager::SetModified(Bool_t flag = kTRUE); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGTileLayout(TGCompositeFrame* main, Int_t sep = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTileLayout.html:5426,Test,TestBit,5426,root/html602/TGTileLayout.html,https://root.cern,https://root.cern/root/html602/TGTileLayout.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&operator=(const TNamed& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetName(const char* name)MENU ; virtual voidSetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tSizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNamed.html:4803,Test,TestBit,4803,root/html534/TNamed.html,https://root.cern,https://root.cern/root/html534/TNamed.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Bool_tProcess(Long64_t); virtual Bool_tTSelector::ProcessCut(Long64_t); virtual voidProcessFill(Long64_t entry); virtual voidProcessFillMultiple(Long64_t entry); virtual voidProcessFillObject(Long64_t entry); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTSelector::ResetAbort(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEstimate(Long64_t n); virtual voidTSelector::SetInputList(TList* input); virtual voidTSelector::SetObject(TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTSelector::SetOption(const char* option); virtual voidTSelector::SetStatus(Long64_t status); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidTSelector::SlaveBegin(TTree*); virtual voidTSelector::SlaveTerminate(); virtual UInt_tSplitNames(const TString& varexp, vector<TString>& names); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTakeAction(); virtual voidTakeEstimate(); virtual voidTerminate(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual intTSelector::Version() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelectorDraw.html:6266,Test,TestBit,6266,root/html534/TSelectorDraw.html,https://root.cern,https://root.cern/root/html534/TSelectorDraw.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::Print(Option_t* option = """") const; virtual Bool_tProcess(Long64_t); virtual Bool_tTSelector::ProcessCut(Long64_t); virtual voidProcessFill(Long64_t entry); virtual voidProcessFillMultiple(Long64_t entry); virtual voidProcessFillObject(Long64_t entry); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTSelector::ResetAbort(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEstimate(Long64_t n); virtual voidTSelector::SetInputList(TList* input); virtual voidTSelector::SetObject(TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTSelector::SetOption(const char* option); virtual voidTSelector::SetStatus(Long64_t status); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidTSelector::SlaveBegin(TTree*); virtual voidTSelector::SlaveTerminate(); virtual UInt_tSplitNames(const TString& varexp, vector<TString>& names); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTakeAction(); virtual voidTakeEstimate(); virtual voidTerminate(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TSelectorDraw(); virtual voidTObject::UseCurrentStyle(); virtual intTSelector::Version() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorDraw.html:6256,Test,TestBit,6256,root/html602/TSelectorDraw.html,https://root.cern,https://root.cern/root/html602/TSelectorDraw.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::Read(const char* name); virtual voidTHashList::RecursiveRemove(TObject* obj); voidTHashList::Rehash(Int_t newCapacity); virtual TObject*THashList::Remove(TObject* obj); virtual TObject*THashList::Remove(TObjLink* lnk); virtual voidTSeqCollection::RemoveAfter(TObject* after); voidTCollection::RemoveAll(); virtual voidTCollection::RemoveAll(TCollection* col); virtual TObject*TSeqCollection::RemoveAt(Int_t idx); virtual voidTSeqCollection::RemoveBefore(TObject* before); virtual voidTSeqCollection::RemoveFirst(); virtual voidTList::RemoveLast(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTCollection::SetCurrentCollection(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTCollection::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTCollection::SetOwner(Bool_t enable = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidTList::Sort(Bool_t order = kSortAscending); static voidTCollection::StartGarbageCollection(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TSelectorList(); TSelectorList(TSelectorList&&); TSelectorList(const TSelectorList&); voidTSeqCollection::UnSort(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorList.html:8313,Test,TestBit,8313,root/html602/TSelectorList.html,https://root.cern,https://root.cern/root/html602/TSelectorList.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::Read(const char* name); virtual voidTObjArray::RecursiveRemove(TObject* obj); virtual TObject*TObjArray::Remove(TObject* obj); virtual voidTSeqCollection::RemoveAfter(TObject* after); voidTCollection::RemoveAll(); virtual voidTCollection::RemoveAll(TCollection* col); virtual TObject*TObjArray::RemoveAt(Int_t idx); virtual voidTSeqCollection::RemoveBefore(TObject* before); virtual voidTSeqCollection::RemoveFirst(); virtual voidTSeqCollection::RemoveLast(); virtual voidTObjArray::RemoveRange(Int_t idx1, Int_t idx2); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTCollection::SetCurrentCollection(); TGeoNavigator*SetCurrentNavigator(Int_t inav); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTObjArray::SetLast(Int_t last); voidTCollection::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTCollection::SetOwner(Bool_t enable = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidTObjArray::Sort(Int_t upto = kMaxInt); static voidTCollection::StartGarbageCollection(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TObject*TObjArray::UncheckedAt(Int_t i) const; voidTSeqCollection::UnSort(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoNavigatorArray.html:8612,Test,TestBit,8612,root/html534/TGeoNavigatorArray.html,https://root.cern,https://root.cern/root/html534/TGeoNavigatorArray.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCL(Double_t newCL); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMuMax(Double_t newMax = 50.0); voidSetMuMin(Double_t newMin = 0.0); voidSetMuStep(Double_t newMuStep = 0.005); voidSetNbackground(Double_t Nbg); voidSetNobserved(Double_t NObs); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tFindLimitsFromTable(Double_t mu); voidTObject::MakeZombie(); Double_tProb(Int_t N, Double_t mu, Double_t B). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfCLconfidence level as a fraction [e.g. 90% = 0.9]; Double_tfLowerLimitthe calculated lower limit; Double_tfMu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFeldmanCousins.html:5976,Test,TestBit,5976,root/html528/TFeldmanCousins.html,https://root.cern,https://root.cern/root/html528/TFeldmanCousins.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMarginBinsContent(Double_t z = 0.); voidSetMaxIter(Int_t n = 100000); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGraphDelaunay(); TGraphDelaunay(TGraph2D* g); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidCreateTrianglesDataStructure(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Bool_tEnclose(Int_t T1, Int_t T2, Int_t T3, Int_t Ex) const; voidFileIt(Int_t P, Int_t N, Int_t M); voidFindHull(); Bool_tInHull(Int_t E, Int_t X) const; Double_tInterpolateOnPlane(Int_t TI1, Int_t TI2, Int_t TI3, Int_t E) const; voidTObject::MakeZombie(). private:. TGraphDelaunay&operator=(const TGraphDelaunay&); TGraphDelaunay(const TGraphDelaunay&).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphDelaunay.html:6075,Test,TestBit,6075,root/html602/TGraphDelaunay.html,https://root.cern,https://root.cern/root/html602/TGraphDelaunay.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); RooStats::SamplingDistPlotSamplingDistPlot(Int_t nbins = 100); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetApplyStyle(Bool_t s); voidSetAxisTitle(char* varName); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetLineColor(Color_t color, const RooStats::SamplingDistribution* samplDist = 0); voidSetLineStyle(Style_t style, const RooStats::SamplingDistribution* samplDist = 0); voidSetLineWidth(Width_t lwidth, const RooStats::SamplingDistribution* samplDist = 0); voidSetLogXaxis(Bool_t lx); voidSetLogYaxis(Bool_t ly); voidSetMarkerColor(Color_t color, const RooStats::SamplingDistribution* samplDist = 0); voidSetMarkerSize(Size_t size, const RooStats::SamplingDistribution* samplDist = 0); voidSetMarkerStyle(Style_t style, const RooStats::SamplingDistribution* samplDist = 0); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__SamplingDistPlot.html:7081,Test,TestBit,7081,root/html530/RooStats__SamplingDistPlot.html,https://root.cern,https://root.cern/root/html530/RooStats__SamplingDistPlot.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tSetBinary(Int_t, void*, Long_t, Long_t = 0x1000); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); Bool_tSetDate(Int_t, const TDatime&); virtual Bool_tSetDate(Int_t, Int_t, Int_t, Int_t); Bool_tSetDatime(Int_t, const TDatime&); virtual Bool_tSetDatime(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t); virtual Bool_tSetDouble(Int_t, Double_t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Bool_tSetInt(Int_t, Int_t); virtual Bool_tSetLong(Int_t, Long_t); virtual Bool_tSetLong64(Int_t, Long64_t); virtual Bool_tSetMaxFieldSize(Int_t, Long_t); virtual Bool_tSetNull(Int_t); static voidTObject::SetObjectStat(Bool_t stat); virtual Bool_tSetString(Int_t, const char*, Int_t = 256); Bool_tSetTime(Int_t, const TDatime&); virtual Bool_tSetTime(Int_t, Int_t, Int_t, Int_t); virtual voidSetTimeFormating(const char*); Bool_tSetTimestamp(Int_t, const TDatime&); virtual Bool_tSetTimestamp(Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t = 0); virtual Bool_tSetUInt(Int_t, UInt_t); virtual Bool_tSetULong64(Int_t, ULong64_t); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Bool_tStoreResult(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSQLStatement.html:14803,Test,TestBit,14803,root/html528/TSQLStatement.html,https://root.cern,https://root.cern/root/html528/TSQLStatement.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); static Int_tTEntryList::Scan(const char* fn, TList* roots); virtual Int_tTEntryList::ScanPaths(TList* roots, Bool_t notify = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTEntryList::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTEntryList::SetEntriesToProcess(Long64_t nen); virtual voidTEntryList::SetFileName(const char* filename); virtual voidSetFileNames(TObjArray* names); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetNFiles(Int_t nfiles); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTEntryList::SetReapplyCut(Bool_t apply = kFALSE)TOGGLE ; virtual voidTEntryList::SetShift(Bool_t shift); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(const TTree*); virtual voidSetTree(const char*, const char*); virtual voidTEntryList::SetTreeName(const char* treename); virtual voidSetTreeNumber(Int_t index); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSubtract(const TEntryList*); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEntryListFromFile.html:7387,Test,TestBit,7387,root/html534/TEntryListFromFile.html,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTAttFill::SaveFillAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1001); virtual voidTAttLine::SaveLineAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t widdef = 1); virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTShape::SetName(const char* name); virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTShape::SetVisibility(Int_t vis)MENU ; virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidSizeof3D() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTShape::TransformPoints(Double_t* points, UInt_t NbPnts) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBRIK.html:6277,Test,TestBit,6277,root/html526/TBRIK.html,https://root.cern,https://root.cern/root/html526/TBRIK.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidsetArgStatus(const RooArgSet& set, Bool_t active); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidsetDirtyProp(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidsetExternalWeightArray(Double_t* arrayWgt, Double_t* arrayWgtErrLo, Double_t* arrayWgtErrHi, Double_t* arraySumW2); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual Double_tsumEntries() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual const TTree*RooAbsDataStore::tree() const; virtual voidTObject::UseCurrentStyle(); virtual Bool_tvalid() const; RooArgSetvarsNoWeight(const RooArgSet& allVars, const char* wgtName); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Double_tweight() const; virtual Double_tweight(Int_t index) const; virtual Double_tweightError(RooAbsData::ErrorType etype = RooAbsData::Poisson) const; virtual voidweightError(Double_t& lo, Double_t& hi, RooAbsData::ErrorType etype = RooAbsData::Poisson) const; RooRealVar*weightVar(const RooArgSet& allVars, const char* wgtName); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooVectorDataStore.html:8175,Test,TestBit,8175,root/html602/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html602/RooVectorDataStore.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTGFrame::SetCleanup(Int_t = kLocalCleanup); voidTGFrame::SetDNDSource(Bool_t onoff); voidTGFrame::SetDNDTarget(Bool_t onoff); virtual voidTGFrame::SetDragType(Int_t type); virtual voidTGFrame::SetDrawOption(Option_t* = """"); virtual voidTGFrame::SetDropType(Int_t type); static voidTObject::SetDtorOnly(void* obj); virtual voidTGFrame::SetEditable(Bool_t); virtual voidTGWindow::SetEditDisabled(UInt_t on = kEditDisable); voidSetEventHandler(TGEventHandler* eh); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidSetFormat(); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGFrame::SetLayoutBroken(Bool_t = kTRUE); virtual voidTGWindow::SetMapSubwindows(Bool_t); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSwapBuffers(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLWidget.html:14848,Test,TestBit,14848,root/html534/TGLWidget.html,https://root.cern,https://root.cern/root/html534/TGLWidget.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTGFrame::SetCleanup(Int_t = kLocalCleanup); voidTGFrame::SetDNDSource(Bool_t onoff); voidTGFrame::SetDNDTarget(Bool_t onoff); virtual voidTGFrame::SetDragType(Int_t type); virtual voidTGFrame::SetDrawOption(Option_t* = """"); virtual voidTGFrame::SetDropType(Int_t type); static voidTObject::SetDtorOnly(void* obj); virtual voidTGFrame::SetEditable(Bool_t); virtual voidTGWindow::SetEditDisabled(UInt_t on = kEditDisable); voidSetExternalHandler(Bool_t x); virtual voidTGFrame::SetForegroundColor(Pixel_t); virtual voidSetFrame(TGFrame* frame, Bool_t prev); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGFrame::SetLayoutBroken(Bool_t = kTRUE); virtual voidTGWindow::SetMapSubwindows(Bool_t); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGSplitter.html:13192,Test,TestBit,13192,root/html534/TGSplitter.html,https://root.cern,https://root.cern/root/html534/TGSplitter.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::SetDtorOnly(void* obj); virtual voidSetEditable(Bool_t editable = kTRUE)TOGGLE GETTER ; virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidSetHistogram(TH1F* h); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTAttMarker::SetMarkerAttributes()MENU ; virtual voidTAttMarker::SetMarkerColor(Color_t tcolor = 1); virtual voidTAttMarker::SetMarkerSize(Size_t msize = 1); virtual voidTAttMarker::SetMarkerStyle(Style_t mstyle = 1); virtual voidSetMaximum(Double_t maximum = -1111)MENU ; virtual voidSetMinimum(Double_t minimum = -1111)MENU ; virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPoint(Int_t i, Double_t x, Double_t y); virtual voidSetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidSort(Bool_t (*)(const TGraph*, Int_t, Int_t) greater = &TGraph::CompareX, Bool_t ascending = kTRUE, Int_t low = 0, Int_t high = -1111); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidZero(Int_t& k, Double_t AZ, Double_t BZ, Double_t E2, Double_t& X, Double_t& Y, Int_t maxiterations).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraph.html:10854,Test,TestBit,10854,root/html530/TGraph.html,https://root.cern,https://root.cern/root/html530/TGraph.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::SetDtorOnly(void* obj); voidTVirtualGeoTrack::SetId(Int_t id); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTAttMarker::SetMarkerAttributes()MENU ; virtual voidTAttMarker::SetMarkerColor(Color_t tcolor = 1); virtual voidTAttMarker::SetMarkerSize(Size_t msize = 1); virtual voidTAttMarker::SetMarkerStyle(Style_t mstyle = 1); voidTVirtualGeoTrack::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); voidTGeoAtt::SetOptimization(Option_t* option); voidTVirtualGeoTrack::SetParent(TVirtualGeoTrack* parent); virtual voidTVirtualGeoTrack::SetParticle(TObject* particle); virtual voidTVirtualGeoTrack::SetPDG(Int_t pdgcode); virtual voidTObject::SetUniqueID(UInt_t uid); voidTGeoAtt::SetVisBranch(); virtual voidTGeoAtt::SetVisContainers(Bool_t flag = kTRUE); voidTGeoAtt::SetVisDaughters(Bool_t vis = kTRUE); virtual voidTGeoAtt::SetVisibility(Bool_t vis = kTRUE); virtual voidTGeoAtt::SetVisLeaves(Bool_t flag = kTRUE); virtual voidTGeoAtt::SetVisOnly(Bool_t flag = kTRUE); voidTGeoAtt::SetVisRaytrace(Bool_t flag = kTRUE); voidTGeoAtt::SetVisStreamed(Bool_t vis = kTRUE); voidTGeoAtt::SetVisTouched(Bool_t vis = kTRUE); virtual voidShowMembers(TMemberInspector& insp); Int_tSize(Int_t& imin, Int_t& imax); virtual voidSizeof3D() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTGeoAtt::TestAttBit(UInt_t f) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoTrack.html:8947,Test,TestAttBit,8947,root/html528/TGeoTrack.html,https://root.cern,https://root.cern/root/html528/TGeoTrack.html,9,['Test'],"['TestAttBit', 'TestBit', 'TestBits']"
Testability,"bject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTPolyMarker3D::Size() const; virtual voidTAtt3D::Sizeof3D() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TPointSet3D(); TPointSet3D(const TPointSet3D& t); TPointSet3D(Int_t n, Marker_t m = 1, Option_t* opt = """"); TPointSet3D(Int_t n, Float_t* p, Marker_t m = 1, Option_t* opt = """"); TPointSet3D(Int_t n, Double_t* p, Marker_t m = 1, Option_t* opt = """"); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.0050000000000000001); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1.0E+6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); voidCopyIds(const TPointSet3D& t); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPointSet3D.html:7724,Assert,AssertBBoxExtents,7724,root/html602/TPointSet3D.html,https://root.cern,https://root.cern/root/html602/TPointSet3D.html,2,['Assert'],['AssertBBoxExtents']
Testability,"bject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TStringmangle(const char* exp) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooCatType_cat; TRegexp_regexp; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooMapCatEntry(const char* exp, const RooCatType* cat). RooMapCatEntry(const RooMapCatEntry& other). Bool_t match(const char* testPattern) const. TString mangle(const char* exp) const; Mangle name : escape regexp character '+'. inline RooMapCatEntry(); {}. virtual ~RooMapCatEntry(); {}. TObject* Clone(const char* newName = 0) const. Bool_t ok(); { return (_regexp.Status()==TRegexp::kOK) ; }. const RooCatType& outCat() const; { return _cat ; }. » Last changed: Tue Mar 10 17:17:47 2015 » Last generated: 2015-03-10 17:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMapCatEntry.html:5892,test,testPattern,5892,root/html534/RooMapCatEntry.html,https://root.cern,https://root.cern/root/html534/RooMapCatEntry.html,1,['test'],['testPattern']
Testability,"bject::SetUniqueID(UInt_t uid); virtual voidTXMLSetup::SetUsedDtd(Bool_t use = kTRUE); virtual voidTXMLSetup::SetUseNamespaces(Bool_t iUseNamespaces = kTRUE); voidTBuffer::SetWriteMode(); virtual voidTBufferFile::SetWriteParam(Int_t mapsize); virtual voidTXMLSetup::SetXmlLayout(TXMLSetup::EXMLLayout layout); virtual voidShowMembers(TMemberInspector&); virtual voidSkipObjectAny(); virtual voidSkipVersion(const TClass* cl = 0); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidStreamObject(TObject* obj); virtual voidStreamObject(void* obj, const type_info& typeinfo, const TClass* onFileClass = 0); virtual voidStreamObject(void* obj, const char* className, const TClass* onFileClass = 0); virtual voidStreamObject(void* obj, const TClass* cl, const TClass* onFileClass = 0); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTBufferFile::TagStreamerInfo(TVirtualStreamerInfo* info); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual voidWriteArray(const Bool_t* b, Int_t n); virtual voidWriteArray(const Char_t* c, Int_t n); virtual voidWriteArray(const UChar_t* c, Int_t n); virtual voidWriteArray(const Short_t* h, Int_t n); virtual voidWriteArray(const UShort_t* h, Int_t n); virtual voidWriteArray(const Int_t* i, Int_t n); virtual voidWriteArray(const UInt_t* i, Int_t n); virtual voidWriteArray(const Long_t* l, Int_t n); virtual voidWriteArray(const ULong_t* l, Int_t n); virtual voidWriteArray(const Long64_t* l, Int_t n); virtual voidWriteArray(const ULong64_t* l, Int_t n); virtual voidWriteArray(const Float_t* f, Int_t n); virtual voidWriteArray(const Double_t* d, Int_t n); virtual voidWriteArrayDouble32(const Double_t* d, Int_t n, TStreamerElement* ele = 0); virtual voidWriteArrayFloat16(const Float_t* f, Int_t n, TStreamerElement*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBufferXML.html:14807,Test,TestBit,14807,root/html534/TBufferXML.html,https://root.cern,https://root.cern/root/html534/TBufferXML.html,1,['Test'],['TestBit']
Testability,"bject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); doubleoperator()(double x, int y) const; RooCFunction2Ref<double,double,int>&operator=(const RooCFunction2Ref<double,double,int>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& R__b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Ref_double_double_int_.html:5244,Test,TestBit,5244,root/html526/RooCFunction2Ref_double_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Ref_double_double_int_.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); doubleoperator()(int x, double y) const; RooCFunction2Ref<double,int,double>&operator=(const RooCFunction2Ref<double,int,double>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& R__b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Ref_double_int_double_.html:5244,Test,TestBit,5244,root/html526/RooCFunction2Ref_double_int_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Ref_double_int_double_.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooNumIntFactory&operator=(const RooNumIntFactory&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); Bool_tstoreProtoIntegrator(RooAbsIntegrator* proto, const RooArgSet& defConfig, const char* depName = """"); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumIntFactory.html:5065,Test,TestBit,5065,root/html526/RooNumIntFactory.html,https://root.cern,https://root.cern/root/html526/RooNumIntFactory.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMutexImp&operator=(const TMutexImp&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Int_tTryLock(); virtual Int_tUnLock(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMutexImp.html:4518,Test,TestBit,4518,root/html534/TMutexImp.html,https://root.cern,https://root.cern/root/html534/TMutexImp.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSplinePoly3&operator=(TSplinePoly3 const& other); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_t&TSplinePoly::X(); Double_t&TSplinePoly::Y().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSplinePoly3.html:4638,Test,TestBit,4638,root/html530/TSplinePoly3.html,https://root.cern,https://root.cern/root/html530/TSplinePoly3.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSplinePoly5&operator=(TSplinePoly5 const& other); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_t&TSplinePoly::X(); Double_t&TSplinePoly::Y().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSplinePoly5.html:4690,Test,TestBit,4690,root/html530/TSplinePoly5.html,https://root.cern,https://root.cern/root/html530/TSplinePoly5.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; Bool_tRooAbsIntegrator::printEvalCounter() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Bool_tRooIntegrator1D::setLimits(Double_t* xmin, Double_t* xmax); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsIntegrator::setPrintEvalCounter(Bool_t value); virtual voidTObject::SetUniqueID(UInt_t uid); virtual Bool_tRooIntegrator1D::setUseIntegrandLimits(Bool_t flag); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooIntegrator2D.html:5783,Test,TestBit,5783,root/html526/RooIntegrator2D.html,https://root.cern,https://root.cern/root/html526/RooIntegrator2D.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TVirtualHistPainter&operator=(const TVirtualHistPainter&); virtual voidPaint(Option_t* option = """"); virtual voidPaintStat(Int_t dostat, TF1* fit); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidProcessMessage(const char* mess, const TObject* obj); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetHistogram(TH1* h); static voidTObject::SetObjectStat(Bool_t stat); static voidSetPainter(const char* painter); virtual voidSetShowProjection(const char* option, Int_t nbins); virtual voidSetStack(TList* stack); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TVirtualHistPainter.html:5030,Test,TestBit,5030,root/html530/TVirtualHistPainter.html,https://root.cern,https://root.cern/root/html530/TVirtualHistPainter.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TAttParticle&operator=(const TAttParticle&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tSampleMass() const; virtual Double_tSampleMass(Double_t widthcut) const; virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAttParticle.html:5406,Test,TestBit,5406,root/html526/TAttParticle.html,https://root.cern,https://root.cern/root/html526/TAttParticle.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TToggleGroup&operator=(const TToggleGroup&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidRemove(TToggle* t); virtual voidRemove(Int_t pos); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSelect(Int_t idx); virtual voidSelect(TToggle* t); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TToggleGroup.html:5103,Test,TestBit,5103,root/html530/TToggleGroup.html,https://root.cern,https://root.cern/root/html530/TToggleGroup.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::PDEFoamKernelGauss&operator=(const TMVA::PDEFoamKernelGauss&); virtual voidTObject::Paint(Option_t* option = """"); TMVA::PDEFoamKernelBaseTMVA::PDEFoamKernelBase::PDEFoamKernelBase(); TMVA::PDEFoamKernelBaseTMVA::PDEFoamKernelBase::PDEFoamKernelBase(const TMVA::PDEFoamKernelBase&); TMVA::PDEFoamKernelGaussPDEFoamKernelGauss(Float_t sigma); TMVA::PDEFoamKernelGaussPDEFoamKernelGauss(const TMVA::PDEFoamKernelGauss&); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamKernelGauss.html:4889,Test,TestBit,4889,root/html602/TMVA__PDEFoamKernelGauss.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamKernelGauss.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRootSnifferStoreJson&operator=(const TRootSnifferStoreJson&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetField(Int_t lvl, const char* field, const char* value, Bool_t with_quotes); static voidTObject::SetObjectStat(Bool_t stat); voidTRootSnifferStore::SetResult(void* _res, TClass* _rescl, TDataMember* _resmemb, Int_t _res_chld); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TRootSnifferStoreJson(const TRootSnifferStoreJson&); TRootSnifferStoreJson(TString& _buf, Bool_t _compact = kFALSE); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootSnifferStoreJson.html:5049,Test,TestBit,5049,root/html602/TRootSnifferStoreJson.html,https://root.cern,https://root.cern/root/html602/TRootSnifferStoreJson.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRootSnifferStoreXml&operator=(const TRootSnifferStoreXml&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetField(Int_t lvl, const char* field, const char* value, Bool_t); static voidTObject::SetObjectStat(Bool_t stat); voidTRootSnifferStore::SetResult(void* _res, TClass* _rescl, TDataMember* _resmemb, Int_t _res_chld, Int_t restr = 0); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TRootSnifferStoreXml(const TRootSnifferStoreXml&); TRootSnifferStoreXml(TString& _buf, Bool_t _compact = kFALSE); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRootSnifferStoreXml.html:5026,Test,TestBit,5026,root/html604/TRootSnifferStoreXml.html,https://root.cern,https://root.cern/root/html604/TRootSnifferStoreXml.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNonSplitBrowsable&operator=(const TNonSplitBrowsable&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); static voidRegister(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TNonSplitBrowsable(const TNonSplitBrowsable&); Bool_tTVirtualBranchBrowsable::TypeIsPointer() const; static voidUnregister(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNonSplitBrowsable.html:7014,Test,TestBit,7014,root/html602/TNonSplitBrowsable.html,https://root.cern,https://root.cern/root/html602/TNonSplitBrowsable.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpLinSolverBase&operator=(const TQpLinSolverBase& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPutXDiagonal(TVectorD& xdiag); virtual voidPutZDiagonal(TVectorD& zdiag); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSeparateVars(TVectorD& vars1, TVectorD& vars2, TVectorD& vars3, TVectorD& vars); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidSolve(TQpDataBase* prob, TQpVar* vars, TQpResidual* resids, TQpVar* step); virtual voidSolveCompressed(TVectorD& rhs); virtual voidSolveXYZS(TVectorD& stepx, TVectorD& stepy, TVectorD& stepz, TVectorD& steps, TVectorD& ztemp, TQpDataBase* data); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQpLinSolverBase.html:5226,Test,TestBit,5226,root/html530/TQpLinSolverBase.html,https://root.cern,https://root.cern/root/html530/TQpLinSolverBase.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetCall(TObject* obj, const char* method, const char* args = """", Int_t selfobjposition = 0); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetSelf(Bool_t self); virtual voidSetTitle(const char* title); virtual voidSetToggle(Bool_t toggle = kTRUE); virtual voidSetType(Int_t type); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TClassMenuItem(); TClassMenuItem(Int_t type, TClass* parent, const char* title = """", const char* functionname = """", TObject* obj = 0, const char* args = """", Int_t selfobjposition = -1, Bool_t self = kFALSE); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClassMenuItem.html:5580,Test,TestBit,5580,root/html602/TClassMenuItem.html,https://root.cern,https://root.cern/root/html602/TClassMenuItem.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); voidOutputClassDecl(FILE* hf, int offset, UInt_t maxVarname); voidOutputDecl(FILE* hf, int offset, UInt_t maxVarname); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetDuplicate(); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; ROOT::TFriendProxyDescriptorTFriendProxyDescriptor(const char* treename, const char* aliasname, Int_t index); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TFriendProxyDescriptor.html:5040,Test,TestBit,5040,root/html602/ROOT__TFriendProxyDescriptor.html,https://root.cern,https://root.cern/root/html602/ROOT__TFriendProxyDescriptor.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpLinSolverDens&operator=(const TQpLinSolverDens& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPutXDiagonal(TVectorD& xdiag); virtual voidPutZDiagonal(TVectorD& zdiag); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTQpLinSolverBase::SeparateVars(TVectorD& vars1, TVectorD& vars2, TVectorD& vars3, TVectorD& vars); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidTQpLinSolverBase::Solve(TQpDataBase* prob, TQpVar* vars, TQpResidual* resids, TQpVar* step); virtual voidSolveCompressed(TVectorD& rhs); virtual voidTQpLinSolverBase::SolveXYZS(TVectorD& stepx, TVectorD& stepy, TVectorD& stepz, TVectorD& steps, TVectorD& ztemp, TQpDataBase* data); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQpLinSolverDens.html:5383,Test,TestBit,5383,root/html530/TQpLinSolverDens.html,https://root.cern,https://root.cern/root/html530/TQpLinSolverDens.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TViewerX3D&operator=(const TViewerX3D&); virtual voidTVirtualViewer3D::PadPaint(TVirtualPad*); virtual voidTObject::Paint(Option_t* option = """"); voidPaintPolyMarker(const TBuffer3D& buffer) const; virtual voidTObject::Pop(); virtual Bool_tPreferLocalFrame() const; virtual voidTObject::Print(Option_t* option = """") const; virtual voidTVirtualViewer3D::PrintObjects(); Bool_tProcessFrameMessage(Long_t msg, Long_t parm1, Long_t parm2); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTVirtualViewer3D::ResetCameras(); virtual voidTVirtualViewer3D::ResetCamerasAfterNextUpdate(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual TObject*TVirtualViewer3D::SelectObject(Int_t, Int_t); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidShow(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidUpdate(); virtual voidTObject::UseCurrentStyle(); static TVirtualViewer3D*TVirtualViewer3D::Viewer3D(TVirtualPad* pad = 0, Option_t* type = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TViewerX3D.html:5727,Test,TestBit,5727,root/html530/TViewerX3D.html,https://root.cern,https://root.cern/root/html530/TViewerX3D.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidPaint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetParameter(const char*, Double_t); virtual voidSetPtCut(Float_t ptcut = 0)MENU ; virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetViewRadius(Float_t rbox = 1000)MENU ; virtual voidSetViewRange(Float_t xmin = -10000, Float_t ymin = -10000, Float_t zmin = -10000, Float_t xmax = 10000, Float_t ymax = 10000, Float_t zmax = 10000)MENU ; virtual voidShowMembers(TMemberInspector&); virtual voidShowNeutrons(Bool_t show = 1)MENU ; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGenerator.html:8610,Test,TestBit,8610,root/html534/TGenerator.html,https://root.cern,https://root.cern/root/html534/TGenerator.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); virtual voidPaint(Option_t* options); virtual voidTObject::Pop(); virtual voidPrint(Option_t* options) constMENU ; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTAttLine::ResetAttLine(Option_t* option = """"); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTAttLine::SaveLineAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t widdef = 1); virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSendToBack()MENU ; voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidSetLineColor(Color_t col); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidSetLineWidth(Width_t wid); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParallelCoordRange.html:5634,Test,TestBit,5634,root/html530/TParallelCoordRange.html,https://root.cern,https://root.cern/root/html530/TParallelCoordRange.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator new[](size_t sz, void* vp); ROOT::TFriendProxyDescriptor&operator=(const ROOT::TFriendProxyDescriptor&); voidOutputClassDecl(FILE* hf, int offset, UInt_t maxVarname); voidOutputDecl(FILE* hf, int offset, UInt_t maxVarname); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetDuplicate(); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; ROOT::TFriendProxyDescriptorTFriendProxyDescriptor(const ROOT::TFriendProxyDescriptor& b); ROOT::TFriendProxyDescriptorTFriendProxyDescriptor(const char* treename, const char* aliasname, Int_t index); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__TFriendProxyDescriptor.html:5053,Test,TestBit,5053,root/html526/ROOT__TFriendProxyDescriptor.html,https://root.cern,https://root.cern/root/html526/ROOT__TFriendProxyDescriptor.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator new[](size_t sz, void* vp); TChainElement&operator=(const TChainElement&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidSetBaddress(void* add); virtual voidSetBaddressClassName(const char* clname); virtual voidSetBaddressIsPtr(Bool_t isptr); virtual voidSetBaddressType(UInt_t type); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBranchPtr(TBranch** ptr); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetLookedUp(Bool_t y = kTRUE); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetNumberEntries(Long64_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPacketSize(Int_t size = 100); virtual voidSetStatus(Int_t status); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TChainElement.html:5379,Test,TestBit,5379,root/html528/TChainElement.html,https://root.cern,https://root.cern/root/html528/TChainElement.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bject::operator new[](size_t sz, void* vp); TSpectrumTransform&operator=(const TSpectrumTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDirection(Int_t direction); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetEnhanceCoeff(Double_t enhanceCoeff); voidSetFilterCoeff(Double_t filterCoeff); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetRegion(Int_t xmin, Int_t xmax); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidSetTransformType(Int_t transType, Int_t degree); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTransform(const Double_t* source, Double_t* destVector); TSpectrumTransform(); TSpectrumTransform(Int_t size); TSpectrumTransform(const TSpectrumTransform&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumTransform.html:5911,Test,TestBit,5911,root/html602/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html602/TSpectrumTransform.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,bject; Double_tRooAbsTestStatistic::_evalCarry! carry of Kahan sum in evaluatePartition; Int_tRooAbsTestStatistic::_extSet! Number of designated set to calculated extended term; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*RooAbsTestStatistic::_funcPointer to original input function; RooAbsReal*_funcClonePointer to internal clone of input function; RooArgSet*_funcCloneSetSet owning all components of internal clone of input function; RooArgSet*_funcObsSetList of observables in the pdf expression; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; pRooAbsTestStatistic*RooAbsTestStatistic::_gofArray! Array of sub-contexts representing part of the combined test statistic; RooAbsTestStatistic::GOFOpModeRooAbsTestStatistic::_gofOpModeOperation mode of test statistic instance; vector<RooFit::MPSplit>RooAbsTestStatistic::_gofSplitMode! GOF MP Split mode specified by component (when Auto is active); static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Bool_tRooAbsTestStatistic::_init! Is object initialized; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; pRooRealMPFE*RooAbsTestStatistic::_mpfeArray! Array of parallel execution frond ends; RooFit::MPSplitRooAbsTestStatistic::_mpinterlUse interleaving strategy rather than N-wise split for partioning of dataset for multiprocessor-split; Int_tRooAbsTestStatistic::_nCPUNumber of processors to use in parallel calculation mode; Int_tR,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsOptTestStatistic.html:39431,test,test,39431,root/html602/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html602/RooAbsOptTestStatistic.html,2,['test'],['test']
Testability,"bject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. RooArgList*_constParamList; TStopwatch_cumulTimer; Bool_t_doEvalErrorWall; Int_t_evalCounter; TMatrixDSym*_extV; RooArgList*_floatParamList; RooAbsReal*_func; Bool_t_handleLocalErrors; RooArgList*_initConstParamList; RooArgList*_initFloatParamList; ofstream*_logfile; Double_t_maxFCN; Int_t_nPar; Int_t_numBadNLL; Bool_t_optConst; Int_t_printEvalErrors; Int_t_printLevel; Bool_t_profile; Int_t_status; static TVirtualFitter*_theFitter; TStopwatch_timer; Bool_t_verbose; Int_t_warnLevel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Cleanup method called by atexit handler installed by RooSentinel; to delete all global heap objects when the program is terminated. RooMinuit(RooAbsReal& function); Construct MINUIT interface to given function. Function can be anything,; but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; (implemented by RooChi2Var). Other frequent use cases are a RooAddition; of a RooNLLVar plus a penalty or constraint term. This class propagates; all RooFit information (floating parameters, their values and errors); to MINUIT before each MINUIT call and propagates all MINUIT information; back to the RooFit object at the end of each call (updated parameter; values, their (asymmetric errors) etc. The default MINUIT error level; for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); value of the input function. ~RooMinuit(); Destructor. void setStrategy(Int_t strat); Change MINUIT strategy to istrat. Accepted codes; are 0,1,2 and represent MINUIT strategies for dealing; most efficiently with fast FCNs (0), expensive FCNs (2); and 'intermediate' FCNs (1). void setErrorLevel(Double_t level); Set the level for MINUIT error analysis to the given; value. This function overrides the default value; that is taken in the RooMinuit constructor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMinuit.html:8313,log,log,8313,root/html530/RooMinuit.html,https://root.cern,https://root.cern/root/html530/RooMinuit.html,1,['log'],['log']
Testability,"bject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tfCarry; Int_tfCount24; Float_tfFloatSeedTable[24]; Int_tfIlag; const Int_tfIntModulus; Int_tfJlag; Int_tfLuxury; const Double_tfMantissaBit12; const Double_tfMantissaBit24; TStringTNamed::fNameobject identifier; Int_tfNskip; UInt_tTRandom::fSeedRandom number generator seed; const UInt_t*fTheSeeds; TStringTNamed::fTitleobject title; static Int_tfgMaxIndex; static Int_tfgNumEngines. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRandom1(UInt_t seed, Int_t lux = 3); Luxury level is set in the same way as the original FORTRAN routine.; level 0 (p=24): equivalent to the original RCARRY of Marsaglia; and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0,; now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still; defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possible; correlations have very small chance of being observed.; level 4 (p=389): highest possible luxury, all 24 bits chaotic. TRandom1(); default constructor. TRandom1(Int_t rowIndex, Int_t colIndex, Int_t lux); constructor. ~TRandom1(); destructor. void GetTableSeeds(UInt_t* seeds, Int_t index); static function returning the table of seeds. Double_t Rndm(Int_t i = 0); return a random number in ]0,1]. void RndmArray(Int_t size, Float_t* vect); return an array of random numbers in ]0,1]. void RndmArray(Int_t size, Double_t* vect); return an array of random numbers in ]0,1[. void SetSeeds(const UInt_t* seeds, Int_t lux = 3); set seeds. void SetSeed2(UInt_t seed, Int_t lux = 3); The initialisation is carried out using a Multiplicative; Congruential generator using formula constants of L'Ecuyer; as described in ""A review of pseudorandom number generators""; (Fred James) published in Computer Physics",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRandom1.html:8025,test,tests,8025,root/html534/TRandom1.html,https://root.cern,https://root.cern/root/html534/TRandom1.html,1,['test'],['tests']
Testability,"bject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tfCarry; Int_tfCount24; Float_tfFloatSeedTable[24]; Int_tfIlag; const Int_tfIntModulus; Int_tfJlag; Int_tfLuxury; const Double_tfMantissaBit12; const Double_tfMantissaBit24; TStringTNamed::fNameobject identifier; Int_tfNskip; UInt_tTRandom::fSeedRandom number generator seed; const UInt_t*fTheSeeds; TStringTNamed::fTitleobject title; static Int_tfgMaxIndex; static Int_tfgNumEngines. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRandom1(UInt_t seed, Int_t lux = 3); Luxury level is set in the same way as the original FORTRAN routine.; level 0 (p=24): equivalent to the original RCARRY of Marsaglia; and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0,; now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still; defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possible; correlations have very small chance of being observed.; level 4 (p=389): highest possible luxury, all 24 bits chaotic. TRandom1(); default constructor. TRandom1(Int_t rowIndex, Int_t colIndex, Int_t lux); constructor. ~TRandom1(); destructor. void GetTableSeeds(UInt_t* seeds, Int_t index); static function returning the table of seeds. Double_t Rndm(Int_t i = 0); return a random number in ]0,1]. void RndmArray(Int_t size, Float_t* vect); return an array of random numbers in ]0,1]. void RndmArray(Int_t size, Double_t* vect); return an array of random numbers in ]0,1]. void SetSeeds(const UInt_t* seeds, Int_t lux = 3); set seeds. void SetSeed2(UInt_t seed, Int_t lux = 3); The initialisation is carried out using a Multiplicative; Congruential generator using formula constants of L'Ecuyer; as described in ""A review of pseudorandom number generators""; (Fred James) published in Computer Physics",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRandom1.html:7946,test,tests,7946,root/html528/TRandom1.html,https://root.cern,https://root.cern/root/html528/TRandom1.html,3,['test'],['tests']
Testability,"bjectProxy_Check(PyObject* pyobject); static Bool_tObjectProxy_CheckExact(PyObject* pyobject); static PyObject*ObjectProxy_FromVoidPtr(void* addr, const char* classname, Bool_t python_owns = kFALSE); TPython&operator=(const TPython&); static voidPrompt(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. static Bool_tInitialize(). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t Initialize(); Private initialization method: setup the python interpreter and load the; ROOT module. void LoadMacro(const char* name); Execute the give python script as if it were a macro (effectively an; execfile in __main__), and create CINT equivalents for any newly available; python classes. void ExecScript(const char* name, int argc = 0, const char** argv = 0); Execute a python stand-alone script, with argv CLI arguments. example of use:; const char* argv[] = { ""1"", ""2"", ""3"" };; TPython::ExecScript( ""test.py"", sizeof(argv)/sizeof(argv[0]), argv );. Bool_t Exec(const char* cmd); Execute a python statement (e.g. ""import ROOT""). const TPyReturn Eval(const char* expr); Evaluate a python expression (e.g. ""ROOT.TBrowser()""). Caution: do not hold on to the return value: either store it in a builtin; type (implicit casting will work), or in a pointer to a ROOT object (explicit; casting to a void* is required). Bool_t Bind(TObject* object, const char* label); Bind a ROOT object with, at the python side, the name ""label"". void Prompt(); Enter an interactive python session (exit with ^D). State is preserved; between successive calls. Bool_t ObjectProxy_Check(PyObject* pyobject); Test whether the type of the given pyobject is of ObjectProxy type or any; derived type. Bool_t ObjectProxy_CheckExact(PyObject* pyobject); Test whether the type of the given pyobject is ObjectProxy type. Bool_t MethodProxy_Check(PyObject* pyobject); Test whether the type of the g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPython.html:3837,test,test,3837,root/html534/TPython.html,https://root.cern,https://root.cern/root/html534/TPython.html,1,['test'],['test']
Testability,"bjects in the workspace that are not directly listed as content elements (e.g. analytical convolution tokens ) ; Definition at line 2446 of file RooAbsArg.cxx. ◆ isCategory(). virtual bool RooAbsArg::isCategory ; (; ); const. inlinevirtual . Reimplemented in RooAbsCategory.; Definition at line 555 of file RooAbsArg.h. ◆ isConstant(). bool RooAbsArg::isConstant ; (; ); const. inline . Check if the ""Constant"" attribute is set. ; Definition at line 335 of file RooAbsArg.h. ◆ isDerived(). virtual bool RooAbsArg::isDerived ; (; ); const. inlinevirtual . Does value or shape of this arg depend on any other arg? ; Reimplemented in RooCategory, RooConstVar, RooRealVar, and RooAbsOptTestStatistic.; Definition at line 99 of file RooAbsArg.h. ◆ isFundamental(). virtual bool RooAbsArg::isFundamental ; (; ); const. inlinevirtual . Is this object a fundamental type that can be added to a dataset? Fundamental-type subclasses override this method to return true. ; Note that this test is subtlely different from the dynamic isDerived() test, e.g. a constant is not derived but is also not fundamental. ; Reimplemented in RooCategory, RooErrorVar, RooRealVar, and RooStringVar.; Definition at line 223 of file RooAbsArg.h. ◆ isIdentical(). virtual bool RooAbsArg::isIdentical ; (; const RooAbsArg & ; other, . bool ; assumeSameType = false . ); const. pure virtual . Implemented in RooAbsCategory, RooAbsReal, and RooStringVar. ◆ isLValue(). virtual bool RooAbsArg::isLValue ; (; ); const. inlinevirtual . Is this argument an l-value, i.e., can it appear on the left-hand side of an assignment expression? LValues are also special since they can potentially be analytically integrated and generated. ; Reimplemented in RooAbsCategoryLValue, and RooAbsRealLValue.; Definition at line 235 of file RooAbsArg.h. ◆ isReducerNode(). virtual bool RooAbsArg::isReducerNode ; (; ); const. inlinevirtual . Reimplemented in RooPolynomial.; Definition at line 549 of file RooAbsArg.h. ◆ isShapeDirty(). bool RooAbsAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsArg.html:72690,test,test,72690,doc/master/classRooAbsArg.html,https://root.cern,https://root.cern/doc/master/classRooAbsArg.html,2,['test'],['test']
Testability,bkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 600; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 590; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 580; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-869.586) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.621299 a1=-0.442393 mean=5.13262 nbkg=131.7 nsig=167.982 sig1frac=0.776177; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 570; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 560; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 550; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 540; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 530; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-820.086) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.699182 a1=-0.532303 mean=4.90748 nbkg=130.722 nsig=155.109 sig1frac=0.843514; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 520; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 510; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-814.421) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.729962 a1=-0.49802 mean=4.92039 nbkg=146.276 nsig=144.44 sig1frac=0.620699; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 500; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 490; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 480; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 470; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 460; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 450; [#0] PROGRESS:Gener,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:17732,log,log,17732,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,2,['log'],['log']
Testability,"ble *covmat, double *genpars, double * lmat = nullptr) const;; 216 ; 217 ; 218 /**; 219 Exponential distribution; 220 */; 221 double Exponential(double mu) const;; 222 ; 223 /**; 224 Cauchy distribution; 225 */; 226 double Cauchy(double a) const;; 227 ; 228 /**; 229 Landau distribution; 230 */; 231 double Landau() const;; 232 ; 233 /**; 234 Gamma distribution; 235 */; 236 double Gamma(double a, double b) const;; 237 ; 238 /**; 239 Beta distribution; 240 */; 241 double Beta(double a, double b) const;; 242 ; 243 /**; 244 Log Normal distribution; 245 */; 246 double LogNormal(double zeta, double sigma) const;; 247 ; 248 /**; 249 Chi square distribution; 250 */; 251 double ChiSquare(double nu) const;; 252 ; 253 /**; 254 F distribution; 255 */; 256 double FDist(double nu1, double nu2) const;; 257 ; 258 /**; 259 t student distribution; 260 */; 261 double tDist(double nu) const;; 262 ; 263 /**; 264 Rayleigh distribution; 265 */; 266 double Rayleigh(double sigma) const;; 267 ; 268 /**; 269 Logistic distribution; 270 */; 271 double Logistic(double a) const;; 272 ; 273 /**; 274 Pareto distribution; 275 */; 276 double Pareto(double a, double b) const;; 277 ; 278 /**; 279 generate random numbers in a 2D circle of radious 1; 280 */; 281 void Dir2D(double &x, double &y) const;; 282 ; 283 /**; 284 generate random numbers in a 3D sphere of radious 1; 285 */; 286 void Dir3D(double &x, double &y, double &z) const;; 287 ; 288 /**; 289 Poisson distribution; 290 */; 291 unsigned int Poisson(double mu) const;; 292 ; 293 /**; 294 Binomial distribution; 295 */; 296 unsigned int Binomial(double p, unsigned int n) const;; 297 ; 298 /**; 299 Negative Binomial distribution; 300 */; 301 unsigned int NegativeBinomial(double p, double n) const;; 302 ; 303 /**; 304 Multinomial distribution; 305 */; 306 std::vector<unsigned int> Multinomial( unsigned int ntot, const std::vector<double> & p ) const;; 307 ; 308 //@}; 309 ; 310 ; 311 ; 312 protected:; 313 ; 314 /// internal method used by the derived cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLRndmEngines_8h_source.html:7430,Log,Logistic,7430,doc/master/GSLRndmEngines_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLRndmEngines_8h_source.html,1,['Log'],['Logistic']
Testability,"ble *x) constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlineprivatevirtual; fDataROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fExecutionPolicyROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >private; fFuncROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fGradROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >mutableprivate; fIsExtendedROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >private; fNCallsROOT::Math::BasicFitMethodFunction< DerivFunType >mutableprivate; fNDimROOT::Math::BasicFitMethodFunction< DerivFunType >private; fNEffPointsROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >mutableprivate; fNPointsROOT::Math::BasicFitMethodFunction< DerivFunType >private; fWeightROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >private; G2(const double *, double *) constROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; Gradient(const double *x, double *g) constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; HasHessian() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; Hessian(const double *x, double *hess) constROOT::Math::BasicFitMethodFunction< DerivFunType >inlinevirtual; IGradModelFunction typedefROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; IModelFunction typedefROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >; IsAGradFCN()ROOT::Math::BasicFitMethodFunction< DerivFunType >inlinestatic; IsAGradFCN()ROOT::Math::BasicFitMethodFunction< DerivFunType >inline; kLeastSquare enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kLogLikelihood enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kPoissonLikelihood enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; kUndefined enum valueROOT::Math::BasicFitMethodFunction< DerivFunType >; LogLikelihoodFCN(const std::shared_ptr< UnBinData > &data, const std::shared_ptr< IModelFunction > &func, int weight=0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html:2386,Log,LogLikelihoodFCN,2386,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,1,['Log'],['LogLikelihoodFCN']
Testability,"ble 3"", ""units"", 'F' );; dataloader->AddVariable( ""var4"", ""Variable 4"", ""units"", 'F' );; ; dataloader->AddSignalTree ( signal, signalWeight );; dataloader->AddBackgroundTree( background2, background2Weight );; ; // dataloader->SetBackgroundWeightExpression(""weight"");; ; // tell the dataloader to use all remaining events in the trees after training for testing:; dataloader->PrepareTrainingAndTestTree( mycuts, mycutb,; ""nTrain_Signal=0:nTrain_Background=0:SplitMode=Random:NormMode=NumEvents:!V"" );; ; // Boosted Decision Trees; factory->BookMethod( dataloader, TMVA::Types::kBDT, ""BDTG"",; ""!H:!V:NTrees=1000:BoostType=Grad:Shrinkage=0.30:UseBaggedBoost:BaggedSampleFraction=0.5:SeparationType=GiniIndex:nCuts=20:MaxDepth=2"" );; factory->TrainAllMethods();; factory->TestAllMethods();; factory->EvaluateAllMethods();; ; outputFile->Close();; ; delete factory;; delete dataloader;; ; }; ; ; ; ; ; // ----------------------------------------------------------------------------------------------; // Application; // ----------------------------------------------------------------------------------------------; //; // create a summary tree with all signal and background events and for each event the three classifier values and the true classID; void ApplicationCreateCombinedTree(){; ; // Create a new root output file.; TString outfileName( ""tmva_example_multiple_backgrounds__applied.root"" );; TFile* outputFile = TFile::Open( outfileName, ""RECREATE"" );; TTree* outputTree = new TTree(""multiBkg"",""multiple backgrounds tree"");; ; Float_t var1, var2;; Float_t var3, var4;; Int_t classID = 0;; Float_t weight = 1.f;; ; Float_t classifier0, classifier1, classifier2;; ; outputTree->Branch(""classID"", &classID, ""classID/I"");; outputTree->Branch(""var1"", &var1, ""var1/F"");; outputTree->Branch(""var2"", &var2, ""var2/F"");; outputTree->Branch(""var3"", &var3, ""var3/F"");; outputTree->Branch(""var4"", &var4, ""var4/F"");; outputTree->Branch(""weight"", &weight, ""weight/F"");; outputTree->Branch(""cls0"", &classifier0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html:36227,Test,TestAllMethods,36227,doc/master/TMVAMultipleBackgroundExample_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMultipleBackgroundExample_8C.html,1,['Test'],['TestAllMethods']
Testability,"ble RooFit::Detail::MathFuncs::interpolate1d ; (; double ; low, . double ; high, . double ; val, . unsigned int ; numBins, . double const * ; vals . ). inline . Definition at line 178 of file MathFuncs.h. ◆ landau(). double RooFit::Detail::MathFuncs::landau ; (; double ; x, . double ; mu, . double ; sigma . ). inline . Definition at line 331 of file MathFuncs.h. ◆ logNormal(). double RooFit::Detail::MathFuncs::logNormal ; (; double ; x, . double ; k, . double ; m0 . ). inline . Definition at line 338 of file MathFuncs.h. ◆ logNormalIntegral(). double RooFit::Detail::MathFuncs::logNormalIntegral ; (; double ; xMin, . double ; xMax, . double ; m0, . double ; k . ). inline . Definition at line 627 of file MathFuncs.h. ◆ logNormalIntegralStandard(). double RooFit::Detail::MathFuncs::logNormalIntegralStandard ; (; double ; xMin, . double ; xMax, . double ; mu, . double ; sigma . ). inline . Definition at line 638 of file MathFuncs.h. ◆ logNormalStandard(). double RooFit::Detail::MathFuncs::logNormalStandard ; (; double ; x, . double ; sigma, . double ; mu . ). inline . Definition at line 343 of file MathFuncs.h. ◆ nll(). double RooFit::Detail::MathFuncs::nll ; (; double ; pdf, . double ; weight, . int ; binnedL, . int ; doBinOffset . ). inline . Definition at line 353 of file MathFuncs.h. ◆ poisson(). double RooFit::Detail::MathFuncs::poisson ; (; double ; x, . double ; par . ). inline . Definition at line 198 of file MathFuncs.h. ◆ poissonIntegral(). double RooFit::Detail::MathFuncs::poissonIntegral ; (; int ; code, . double ; mu, . double ; x, . double ; integrandMin, . double ; integrandMax, . unsigned int ; protectNegative . ). inline . Definition at line 580 of file MathFuncs.h. ◆ polynomial(). template<bool pdfMode = false> . double RooFit::Detail::MathFuncs::polynomial ; (; double const * ; coeffs, . int ; nCoeffs, . int ; lowestOrder, . double ; x . ). inline . In pdfMode, a coefficient for the constant term of 1.0 is implied if lowestOrder > 0. ; Definition at li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceRooFit_1_1Detail_1_1MathFuncs.html:9331,log,logNormalStandard,9331,doc/master/namespaceRooFit_1_1Detail_1_1MathFuncs.html,https://root.cern,https://root.cern/doc/master/namespaceRooFit_1_1Detail_1_1MathFuncs.html,1,['log'],['logNormalStandard']
Testability,"ble beta, Double_t& seed); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual TMatrixTBase<double>&ResizeTo(Int_t nrows, Int_t ncols, Int_t nr_nonzeros = -1); virtual TMatrixTBase<double>&ResizeTo(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros = -1); virtual doubleRowNorm() const; virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual TMatrixTBase<double>&SetColIndexArray(Int_t* data); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual TMatrixTBase<double>&SetMatrixArray(const double* data, Option_t* option = """"); static voidTObject::SetObjectStat(Bool_t stat); virtual TMatrixTBase<double>&SetRowIndexArray(Int_t* data); virtual TMatrixTBase<double>&SetSub(Int_t row_lwb, Int_t col_lwb, const TMatrixTBase<double>& source); doubleSetTol(double newTol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual TMatrixTBase<double>&Shift(Int_t row_shift, Int_t col_shift); virtual voidShowMembers(TMemberInspector& insp); virtual TMatrixTBase<double>&Sqr(); virtual TMatrixTBase<double>&Sqrt(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual doubleSum() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual TMatrixTBase<double>&UnitMatrix(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual TMatrixTBase<double>&Zero().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMatrixTBase_double_.html:14169,Test,TestBit,14169,root/html530/TMatrixTBase_double_.html,https://root.cern,https://root.cern/root/html530/TMatrixTBase_double_.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ble gives an example of a very simple use of the genetic algorithm of TMVA ;  TMVAGAexample2.C This exectutable gives an example of a very simple use of the genetic algorithm of TMVA ;  TMVAMinimalClassification.C Minimal self-contained example for setting up TMVA with binary classification ;  TMVAMulticlass.C This macro provides a simple example for the training and testing of the TMVA multiclass classification ;  TMVAMulticlassApplication.C This macro provides a simple example on how to use the trained multiclass classifiers within an analysis module ;  TMVAMultipleBackgroundExample.C This example shows the training of signal with three different backgrounds Then in the application a tree is created with all signal and background events where the true class ID and the three classifier outputs are added finally with the application tree, the significance is maximized with the help of the TMVA genetic algrorithm ;  TMVARegression.C This macro provides examples for the training and testing of the TMVA classifiers ;  TMVARegressionApplication.C This macro provides a simple example on how to use the trained regression MVAs within an analysis module ;  ► tree;  basic.C Read data from an ascii file and create a root file with an histogram and an ntuple ;  basic2.C Create can ntuple reading data from an ascii file ;  bill.C Benchmark comparing row-wise and column-wise storage performance ;  cernbuild.C Read data (CERN staff) from an ascii file and create a root file with a Tree ;  cernstaff.C Playing with a Tree containing variables of type character ;  circular.C Example of a circular Tree ;  clonesA_Event.CExample to write & read a Tree built with a complex class inheritance tree ;  clonesA_Event.cxx;  clonesA_Event.h;  copytree.C Copy a subset of a Tree to a new Tree ;  copytree2.C Copy a subset of a Tree to a new Tree, one branch in a separate file ;  copytree3.C Example of Root macro to copy a subset of a Tree to a new Tree, selecting entries ;  drawsparse.C Convert a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/files.html:160270,test,testing,160270,doc/v614/files.html,https://root.cern,https://root.cern/doc/v614/files.html,2,['test'],['testing']
Testability,"ble tmp = localArr1[iEl2-1];; 1370 localArr1[iEl2-1] = localArr1[iEl2];; 1371 localArr1[iEl2] = tmp;; 1372 ; 1373 int tmp2 = localArr2[iEl2-1];; 1374 localArr2[iEl2-1] = localArr2[iEl2];; 1375 localArr2[iEl2] = tmp2;; 1376 }; 1377 }; 1378 }; 1379 ; 1380 for (iEl = 0; iEl < Narr; iEl++) {; 1381 arr2[iEl] = localArr2[iEl];; 1382 }; 1383 delete [] localArr2;; 1384 delete [] localArr1;; 1385}; 1386 ; 1387 ; 1388////////////////////////////////////////////////////////////////////////////////; 1389/// Calculates hash index from any char string.; 1390/// Based on pre-calculated table of 256 specially selected numbers.; 1391/// These numbers are selected in such a way, that for string; 1392/// length == 4 (integer number) the hash is unambiguous, i.e.; 1393/// from hash value we can recalculate input (no degeneration).; 1394///; 1395/// The quality of hash method is good enough, that; 1396/// ""random"" numbers made as R = Hash(1), Hash(2), ...Hash(N); 1397/// tested by `<R>`, `<R*R>`, `<Ri*Ri+1>` gives the same result; 1398/// as for libc rand().; 1399///; 1400/// - For string: i = TMath::Hash(string,nstring);; 1401/// - For int: i = TMath::Hash(&intword,sizeof(int));; 1402/// - For pointer: i = TMath::Hash(&pointer,sizeof(void*));; 1403///; 1404/// V.Perev; 1405/// This function is kept for back compatibility. The code previously in this function; 1406/// has been moved to the static function TString::Hash; 1407 ; 1408ULong_t TMath::Hash(const void *txt, Int_t ntxt); 1409{; 1410 return TString::Hash(txt,ntxt);; 1411}; 1412 ; 1413 ; 1414////////////////////////////////////////////////////////////////////////////////; 1415 ; 1416ULong_t TMath::Hash(const char *txt); 1417{; 1418 return Hash(txt, Int_t(strlen(txt)));; 1419}; 1420 ; 1421////////////////////////////////////////////////////////////////////////////////; 1422/// Computes the modified Bessel function I_0(x) for any real x.; 1423///; 1424/// \author NvE 12-mar-2000 UU-SAP Utrecht; 1425 ; 1426Double_t TMath::BesselI0(Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:46368,test,tested,46368,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['test'],['tested']
Testability,"ble& z) const; doubleROOT::Math::GSLRandomEngine::Exponential(double mu) const; doubleROOT::Math::GSLRandomEngine::FDist(double nu1, double nu2) const; doubleROOT::Math::GSLRandomEngine::Gamma(double a, double b) const; doubleROOT::Math::GSLRandomEngine::Gaussian(double sigma) const; voidROOT::Math::GSLRandomEngine::Gaussian2D(double sigmaX, double sigmaY, double rho, double& x, double& y) const; doubleROOT::Math::GSLRandomEngine::GaussianRatio(double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianTail(double a, double sigma) const; doubleROOT::Math::GSLRandomEngine::GaussianZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine& eng); ROOT::Math::GSLRngTausGSLRngTaus(); ROOT::Math::GSLRngTausGSLRngTaus(const ROOT::Math::GSLRngTaus&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngTaus&operator=(const ROOT::Math::GSLRngTaus&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLRngTaus.html:2480,Log,LogNormal,2480,root/html534/ROOT__Math__GSLRngTaus.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLRngTaus.html,1,['Log'],['LogNormal']
Testability,"ble() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMLPAnalyzer&operator=(const TMLPAnalyzer&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMLPAnalyzer.html:5020,Test,TestBit,5020,root/html530/TMLPAnalyzer.html,https://root.cern,https://root.cern/root/html530/TMLPAnalyzer.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ble. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual void gradient (double *) const;  ; virtual bool hasGradient () const;  ; TClass * IsA () const override;  ; virtual bool isBinnedDistribution (const RooArgSet &) const;  Tests if the distribution is binned. Unless overridden by derived classes, this always returns false. ;  ; bool isIdentical (const RooAbsArg &other, bool assumeSameType=false) const override;  ; virtual bool isOffsetting () const;  ; bool isSelectedComp () const;  If true, the current pdf is a selected component (for use in plotting) ;  ; void logEvalError (const char *message, const char *serverValueString=nullptr) const;  Log evaluation error message. ;  ; virtual double maxVal (Int_t code) const;  Return maximum value for set of observables identified by code assigned in getMaxVal. ;  ; RooAbsMoment * mean (RooRealVar &obs);  ; RooAbsMoment * mean (RooRealVar &obs, const RooArgSet &nset);  ; virtual Int_t minTrialSamples (const RooArgSet &) const;  ; RooAbsMoment * moment (RooRealVar &obs, const RooArgSet &normObs, Int_t order, bool central, bool takeRoot, bool intNormObs);  Return function representing moment of p.d.f (normalized w.r.t given observables) of given order. ;  ; RooAbsMoment * moment (RooRealVar &obs, Int_t order, bool central, bool takeRoot);  Return function representing moment of function of given order. ;  ; virtual double offset () const;  ; bool operator== (const RooAbsArg &other) const override;  Equality operator when comparing to ano",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFixedProdPdf.html:25368,log,logEvalError,25368,doc/master/classRooFixedProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooFixedProdPdf.html,18,"['Log', 'log']","['Log', 'logEvalError']"
Testability,"ble.py;  Set visibility attributes for the NA49 geometry Set Shape attributes. ;  ; file  ntuple1.py;   Ntuple drawing example. ;  ; file  numberEntry.py;  Example frame with one box where the user can increase or decrease a number and the shown value will be updated accordingly. ;  ; file  parse_CSV_file_with_TTree_ReadStream.py;  This function provides an example of how one might massage a csv data file to read into a ROOT TTree via TTree::ReadStream. ;  ; file  pyroot001_arrayInterface.py;   This tutorial illustrates the conversion of STL vectors and TVec to numpy arrays without copying the data. ;  ; file  pyroot002_pythonizationDecorator.py;   This tutorial shows how to use the @pythonization decorator to add extra behaviour to C++ user classes that are used from Python via PyROOT. ;  ; file  pyroot003_prettyPrinting.py;   This tutorial illustrates the pretty printing feature of PyROOT, which reveals the content of the object if a string representation is requested, e.g., by Python's print statement. ;  ; file  pyroot004_NumbaDeclare.py;   This tutorial illustrates how PyROOT supports declaring C++ callables from Python callables making them, for example, usable with RDataFrame. ;  ; file  pyroot005_tfile_context_manager.py;   This tutorial demonstrates the usage of the TFile class as a Python context manager. ;  ; file  pyroot006_tcontext_context_manager.py;   This tutorial demonstrates the usage of the TContext class as a Python context manager. ;  ; file  ratioplot.py;   Display two histograms and their ratio. ;  ; file  shapes.py;   Draw the geometry using the x3d viewver. ;  ; file  staff.py;   example of macro to read data from an ascii file and create a root file with a Tree. ;  ; file  surfaces.py;   Surfaces example ;  ; file  tornado.py;  Tornado example. ;  ; file  zdemo.py;   This macro is an example of graphs in log scales with annotations. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__pyroot.html:2997,log,log,2997,doc/master/group__tutorial__pyroot.html,https://root.cern,https://root.cern/doc/master/group__tutorial__pyroot.html,1,['log'],['log']
Testability,"ble::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBoost.html:12433,Test,TestBit,12433,root/html530/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBoost.html,8,['Test'],"['TestBit', 'TestBits', 'TestMulticlass', 'TestRegression']"
Testability,"ble::printAddress(ostream& os) const; virtual voidRooPrintable::printArgs(ostream& os) const; virtual voidRooPrintable::printClassName(ostream& os) const; Bool_tprintEvalCounter() const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidprintMultiline(ostream& os, Int_t content, Bool_t verbose, TString indent = """") const; virtual voidRooPrintable::printName(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidRooPrintable::printTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidRooPrintable::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidsetEpsAbs(Double_t newEpsAbs); voidsetEpsRel(Double_t newEpsRel); static voidTObject::SetObjectStat(Bool_t stat); voidsetPrintEvalCounter(Bool_t newVal); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumIntConfig.html:6302,Test,TestBit,6302,root/html528/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html528/RooNumIntConfig.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ble::printAddress(ostream& os) const; virtual voidRooPrintable::printArgs(ostream& os) const; virtual voidprintClassName(ostream& os) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidprintMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; virtual voidprintName(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidprintTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidprintValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/Roo1DTable.html:5973,Test,TestBit,5973,root/html530/Roo1DTable.html,https://root.cern,https://root.cern/root/html530/Roo1DTable.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ble::printClassName(ostream& os) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidRooPrintable::printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; virtual voidRooPrintable::printName(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidRooPrintable::printTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidRooPrintable::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooClassFactory.html:7298,Test,TestBit,7298,root/html526/RooClassFactory.html,https://root.cern,https://root.cern/root/html526/RooClassFactory.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"ble;  ; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  Details;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TestSupport;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; class  RBrowser;  Web-based ROOT files and objects browser. More...;  ; class  RBrowserCatchedWidget;  ; class  RBrowserData;  Way to browse (hopefully) everything in ROOT. More...;  ; class  RBrowserDataCleanup;  ; class  RBrowserEditorWidget;  ; class  RBrowserInfoWidget;  ; class  RBrowserReply;  Reply on browser request. More...;  ; class  RBrowserRequest;  Request send from client to get content of path element. More...;  ; class  RBrowserTimer;  ; class  RBrowserWidget;  Abstract Web-based widget, which can be used in the RBrowser Used to embed canvas, geometry viewer and potentially any other widgets. More...;  ; class  RBrowserWidgetProvider;  ; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v630/namespaceROOT.html:1334,Test,TestSupport,1334,doc/v630/namespaceROOT.html,https://root.cern,https://root.cern/doc/v630/namespaceROOT.html,1,['Test'],['TestSupport']
Testability,"bleClass ();  Globally enable bin-width corrections by this class. ;  ; static bool isClassEnabled ();  Returns true if bin-width corrections by this class are globally enabled, false otherwise. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinWidthFunction.html:46172,log,logEvalError,46172,doc/master/classRooBinWidthFunction.html,https://root.cern,https://root.cern/doc/master/classRooBinWidthFunction.html,3,['log'],"['logEvalError', 'logging']"
Testability,"bleInfo > & GetTargetInfos () const;  ; Int_t GetTargetNameMaxLength () const;  ; std::vector< Float_t > * GetTargetsForMulticlass (const Event *ev);  ; Double_t GetTestingSumBackgrWeights ();  ; Double_t GetTestingSumSignalWeights ();  ; Double_t GetTrainingSumBackgrWeights ();  ; Double_t GetTrainingSumSignalWeights ();  ; Int_t GetVarArraySize (const TString &expression) const;  ; VariableInfo & GetVariableInfo (Int_t i);  ; const VariableInfo & GetVariableInfo (Int_t i) const;  ; std::vector< VariableInfo > & GetVariableInfos ();  ; const std::vector< VariableInfo > & GetVariableInfos () const;  ; Int_t GetVariableNameMaxLength () const;  ; const TString GetWeightExpression (Int_t i) const;  ; Bool_t HasCuts () const;  ; virtual TClass * IsA () const;  ; Bool_t IsSignal (const Event *ev) const;  ; Bool_t IsVariableFromArray (Int_t i) const;  ; void PrintClasses () const;  ; void PrintCorrelationMatrix (const TString &className);  calculates the correlation matrices for signal and background, prints them to standard output, and fills 2D histograms ;  ; void SetCorrelationMatrix (const TString &className, TMatrixD *matrix);  ; void SetCut (const TCut &cut, const TString &className);  set the cut for the classes ;  ; void SetMsgType (EMsgType t) const;  ; void SetNormalization (const TString &norm);  ; void SetRootDir (TDirectory *d);  ; void SetSplitOptions (const TString &so);  ; void SetTestingSumBackgrWeights (Double_t testingSumBackgrWeights);  ; void SetTestingSumSignalWeights (Double_t testingSumSignalWeights);  ; void SetTrainingSumBackgrWeights (Double_t trainingSumBackgrWeights);  ; void SetTrainingSumSignalWeights (Double_t trainingSumSignalWeights);  ; void SetWeightExpression (const TString &exp, const TString &className="""");  set the weight expressions for the classes if class name is specified, set only for this class if class name is unknown, register new class with this name ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html:5844,test,testingSumBackgrWeights,5844,doc/master/classTMVA_1_1DataSetInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html,2,['test'],"['testingSumBackgrWeights', 'testingSumSignalWeights']"
Testability,"bleTransformTMVA::VariableTransformBase::GetVariableTransform() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitialize(); virtual voidTObject::Inspect() constMENU ; virtual const TMVA::Event*InverseTransform(const TMVA::Event*const ev, Int_t cls) const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTMVA::VariableTransformBase::IsCreated() const; Bool_tTMVA::VariableTransformBase::IsEnabled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariableIdentityTransform&operator=(const TMVA::VariableIdentityTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html:3636,Log,Log,3636,root/html602/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html,2,['Log'],['Log']
Testability,"ble_t > &event, Double_t weight=1.0)add signal training eventDefinition DataLoader.cxx:228; TMVA::DataLoader::fVerboseBool_t fVerboseverbose modeDefinition DataLoader.h:196; TMVA::DataLoader::AddRegressionTargetvoid AddRegressionTarget(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)Definition DataLoader.h:132; TMVA::DataLoader::AddTestEventvoid AddTestEvent(const TString &className, const std::vector< Double_t > &event, Double_t weight)add signal test eventDefinition DataLoader.cxx:268; TMVA::DataLoader::DataAssignTypeDataAssignTypeDefinition DataLoader.h:199; TMVA::DataLoader::kAssignTrees@ kAssignTreesDefinition DataLoader.h:200; TMVA::DataLoader::kAssignEvents@ kAssignEventsDefinition DataLoader.h:201; TMVA::DataLoader::kUndefined@ kUndefinedDefinition DataLoader.h:199; TMVA::DataLoader::SetSignalTreevoid SetSignalTree(TTree *signal, Double_t weight=1.0)Definition DataLoader.cxx:432; TMVA::DataLoader::fTransformationsTString fTransformationsList of transformations to test.Definition DataLoader.h:195; TMVA::DataLoader::SetInputTreesvoid SetInputTrees(const TString &signalFileName, const TString &backgroundFileName, Double_t signalWeight=1.0, Double_t backgroundWeight=1.0)Definition DataLoader.cxx:464; TMVA::DataLoader::~DataLoadervirtual ~DataLoader()Definition DataLoader.cxx:96; TMVA::DataLoader::AddTreevoid AddTree(TTree *tree, const TString &className, Double_t weight=1.0, const TCut &cut="""", Types::ETreeType tt=Types::kMaxTreeType)Definition DataLoader.cxx:351; TMVA::DataLoader::GetDefaultDataSetInfoconst DataSetInfo & GetDefaultDataSetInfo()Definition DataLoader.h:165; TMVA::DataLoader::fOptionsTString fOptionsoption string given by construction (presently only ""V"")Definition DataLoader.h:194; TMVA::DataLoader::SetInputVariablesvoid SetInputVariables(std::vector< TString > *theVariables)deprecatedDefinition DataLoader.cxx:541; TMVA::DataLoader::fATreeTypeInt_t fATreeTypetype of event (=classIndex)Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8h_source.html:18563,test,test,18563,doc/master/DataLoader_8h_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8h_source.html,1,['test'],['test']
Testability,"ble_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); virtual voidSetDimensions(Double_t* param); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoShape::SetId(Int_t id); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPoints(Double_t* points) const; virtual voidSetPoints(Float_t* points) const; voidTGeoShape::SetRuntime(Bool_t flag = kTRUE); virtual voidTGeoTubeSeg::SetSegsAndPols(TBuffer3D& buff) const; voidTGeoShape::SetShapeBit(UInt_t f); voidTGeoShape::SetShapeBit(UInt_t f, Bool_t set); virtual voidTNamed::SetTitle(const char* title = """")MENU ; static voidTGeoShape::SetTransform(TGeoMatrix* matrix); voidTGeoTube::SetTubeDimensions(Double_t rmin, Double_t rmax, Double_t dz); voidTGeoTubeSeg::SetTubsDimensions(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); virtual voidTObject::SetUniqueID(UInt_t uid); Int_tTGeoShape::ShapeDistancetoPrimitive(Int_t numpoints, Int_t px, Int_t py) const; virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidTGeoTubeSeg::Sizeof3D() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTGeoShape::TestShapeBit(UInt_t f) const; Int_tTGeoShape::TestShapeBits(UInt_t f) const; static Double_tTGeoShape::Tolerance(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoCtub.html:12625,Test,TestBit,12625,root/html534/TGeoCtub.html,https://root.cern,https://root.cern/root/html534/TGeoCtub.html,4,['Test'],"['TestBit', 'TestBits', 'TestShapeBit', 'TestShapeBits']"
Testability,"ble_t getPdfParamErr(Int_t index); Access PDF parameter error by ordinal index (needed by MINUIT). Bool_t setPdfParamVal(Int_t index, Double_t value, Bool_t verbose = kFALSE); Modify PDF parameter value by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t value); Modify PDF parameter error by ordinal index (needed by MINUIT). void clearPdfParamAsymErr(Int_t index); Modify PDF parameter error by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); Modify PDF parameter error by ordinal index (needed by MINUIT). void profileStart(); Start profiling timer. void profileStop(); Stop profiling timer and report results of last session. void backProp(); Transfer MINUIT fit results back into RooFit objects. void updateFloatVec(). void applyCovarianceMatrix(TMatrixDSym& V); Apply results of given external covariance matrix. i.e. propagate its errors; to all RRV parameter representations and give this matrix instead of the; HESSE matrix at the next save() call. RooMinuit(RooAbsReal& function). void setEvalErrorWall(Bool_t flag); { _doEvalErrorWall = flag ; }. void setPrintEvalErrors(Int_t numEvalErrors); { _printEvalErrors = numEvalErrors ; }. void setVerbose(Bool_t flag = kTRUE); { _verbose = flag ; }. void setProfile(Bool_t flag = kTRUE); { _profile = flag ; }. void setMaxEvalMultiplier(Int_t n); { _maxEvalMult = n ; }. Int_t evalCounter() const; { return _evalCounter ; }. void zeroEvalCount(); { _evalCounter = 0 ; }. Int_t getNPar() const; { return _nPar ; }. std::ofstream* logfile() const; { return _logfile ; }. Double_t& maxFCN(); { return _maxFCN ; }. void saveStatus(const char* label, Int_t status); { _statusHistory.push_back(std::pair<std::string,int>(label,status)) ; }. » Last changed: Tue Jun 2 15:32:08 2015 » Last generated: 2015-06-02 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooMinuit.html:15326,log,logfile,15326,root/html604/RooMinuit.html,https://root.cern,https://root.cern/root/html604/RooMinuit.html,1,['log'],['logfile']
Testability,"ble_t psi); TRotation&RotateZ(Double_t); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); TRotation&SetToIdentity(); virtual voidTObject::SetUniqueID(UInt_t uid); TRotation&SetXAxis(const TVector3& axis); TRotation&SetXAxis(const TVector3& axis, const TVector3& xyPlane); TRotation&SetXEulerAngles(Double_t phi, Double_t theta, Double_t psi); voidSetXPhi(Double_t); voidSetXPsi(Double_t); voidSetXTheta(Double_t); TRotation&SetYAxis(const TVector3& axis); TRotation&SetYAxis(const TVector3& axis, const TVector3& yzPlane); TRotation&SetYEulerAngles(Double_t phi, Double_t theta, Double_t psi); voidSetYPhi(Double_t); voidSetYPsi(Double_t); voidSetYTheta(Double_t); TRotation&SetZAxis(const TVector3& axis); TRotation&SetZAxis(const TVector3& axis, const TVector3& zxPlane); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Double_tThetaX() const; Double_tThetaY() const; Double_tThetaZ() const; TRotation&Transform(const TRotation& m); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_tXX() const; Double_tXY() const; Double_tXZ() const; Double_tYX() const; Double_tYY() const; Double_tYZ() const; Double_tZX() const; Double_tZY() const; Double_tZZ() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRotation.html:11304,Test,TestBit,11304,root/html534/TRotation.html,https://root.cern,https://root.cern/root/html534/TRotation.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ble_t t2, Double_t t3, const TGLVector3& norm1, const TGLVector3& norm2, const TGLVector3& norm3); voidDrawMapleMesh(const vector<Double_t>& vs, const vector<Double_t>& ns, const vector<UInt_t>& ts); voidDrawMapleMesh(const vector<Double_t>& vs, const vector<Double_t>& ns, const vector<UInt_t>& ts, const TGLBoxCut& box); voidDrawMesh(const vector<Float_t>& vs, const vector<UInt_t>& fTS); voidDrawMesh(const vector<Double_t>& vs, const vector<UInt_t>& fTS); voidDrawMesh(const vector<Float_t>& vs, const vector<Float_t>& ns, const vector<UInt_t>& ts); voidDrawMesh(const vector<Double_t>& vs, const vector<Double_t>& ns, const vector<UInt_t>& ts); voidDrawMesh(const vector<Float_t>& vs, const vector<UInt_t>& ts, const TGLBoxCut& box); voidDrawMesh(const vector<Double_t>& vs, const vector<UInt_t>& ts, const TGLBoxCut& box); voidDrawMesh(const vector<Float_t>& vs, const vector<Float_t>& ns, const vector<UInt_t>& ts, const TGLBoxCut& box); voidDrawMesh(const vector<Double_t>& vs, const vector<Double_t>& ns, const vector<UInt_t>& ts, const TGLBoxCut& box); voidDrawPalette(const TGLPlotCamera* camera, const TGLLevelPalette& palette); voidDrawPaletteAxis(const TGLPlotCamera* camera, const Rgl::Range_t& minMax, Bool_t logZ); voidDrawQuadFilled(const TGLVertex3& v0, const TGLVertex3& v1, const TGLVertex3& v2, const TGLVertex3& v3, const TGLVector3& normal); voidDrawQuadOutline(const TGLVertex3& v1, const TGLVertex3& v2, const TGLVertex3& v3, const TGLVertex3& v4); voidDrawSmoothFace(const TGLVertex3& v1, const TGLVertex3& v2, const TGLVertex3& v3, const TGLVector3& norm1, const TGLVector3& norm2, const TGLVector3& norm3); voidDrawSphere(TGLQuadric* quadric, Double_t xMin, Double_t xMax, Double_t yMin, Double_t yMax, Double_t zMin, Double_t zMax); voidGetColor(Float_t v, Float_t vmin, Float_t vmax, Int_t type, Float_t* rgba); voidObjectIDToColor(Int_t objectID, Bool_t highColor); voidSetZLevels(TAxis* zAxis, Double_t zMin, Double_t zMax, Double_t zScale, vector<Double_t>& zLevels).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/Rgl.html:2503,log,logZ,2503,root/html526/Rgl.html,https://root.cern,https://root.cern/root/html526/Rgl.html,2,['log'],['logZ']
Testability,"ble_t threshold=0.05)TH1virtual; Sizeof() constTNamedvirtual; Smooth(Int_t ntimes=1, Option_t *option="""")TH1virtual; SmoothArray(Int_t NN, Double_t *XX, Int_t ntimes=1)TH1static; StatOverflows(Bool_t flag=kTRUE)TH1static; Streamer(TBuffer &) overrideTH1virtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TH1inline; Sumw2(Bool_t flag=kTRUE)TH1virtual; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TAttFill()TAttFill; TAttFill(Color_t fcolor, Style_t fstyle)TAttFill; TAttLine()TAttLine; TAttLine(Color_t lcolor, Style_t lstyle, Width_t lwidth)TAttLine; TAttMarker()TAttMarker; TAttMarker(Color_t color, Style_t style, Size_t msize)TAttMarker; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TH1(const TH1 &)=deleteTH1private; TH1()TH1protected; TH1(const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup)TH1protected; TH1(const char *name, const char *title, Int_t nbinsx, const Float_t *xbins)TH1protected; TH1(const char *name, const char *title, Int_t nbinsx, const Double_t *xbins)TH1protected; TH1MergerTH1friend; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; TransformHisto(TVirtualFFT *fft, TH1 *h_output, Option_t *option)TH1static; UpdateBinContent(Int_t bin, Double_t content)TH1protectedvirtual; UseCurrentStyle() overrideTH1virtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~TAttFill()TAttFillvirtual; ~TAttLine()TAttLinevirtual; ~TAttMarker()TAttMarkervirtual; ~TH1() overrideTH1; ~TNamed()TNamedvirtual; ~TObject()TObjectvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1-members.html:21917,Test,TestBit,21917,doc/master/classTH1-members.html,https://root.cern,https://root.cern/doc/master/classTH1-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ble_t w, const TMVA::Event *E) { return w + E->GetOriginalWeight(); });; 1649 ; 1650 testingSumWeightsPerClass.at(cls) =; 1651 std::accumulate(tmpEventVector[Types::kTesting].at(cls).begin(),; 1652 tmpEventVector[Types::kTesting].at(cls).end(),; 1653 Double_t(0), [](Double_t w, const TMVA::Event *E) { return w + E->GetOriginalWeight(); });; 1654 ; 1655 if ( cls == dsi.GetSignalClassIndex()){; 1656 trainingSumSignalWeights += trainingSumWeightsPerClass.at(cls);; 1657 testingSumSignalWeights += testingSumWeightsPerClass.at(cls);; 1658 }else{; 1659 trainingSumBackgrWeights += trainingSumWeightsPerClass.at(cls);; 1660 testingSumBackgrWeights += testingSumWeightsPerClass.at(cls);; 1661 }; 1662 ; 1663 // output statistics; 1664 ; 1665 Log() << kINFO //<< Form(""Dataset[%s] : "",dsi.GetName()); 1666 << setiosflags(ios::left) << std::setw(maxL); 1667 << dsi.GetClassInfo(cls)->GetName() << "" -- ""; 1668 << ""training events : "" << trainingSizePerClass.at(cls) << Endl;; 1669 Log() << kDEBUG << ""\t(sum of weights: "" << trainingSumWeightsPerClass.at(cls) << "")""; 1670 << "" - requested were "" << eventCounts[cls].nTrainingEventsRequested << "" events"" << Endl;; 1671 Log() << kINFO //<< Form(""Dataset[%s] : "",dsi.GetName()); 1672 << setiosflags(ios::left) << std::setw(maxL); 1673 << dsi.GetClassInfo(cls)->GetName() << "" -- ""; 1674 << ""testing events : "" << testingSizePerClass.at(cls) << Endl;; 1675 Log() << kDEBUG << ""\t(sum of weights: "" << testingSumWeightsPerClass.at(cls) << "")""; 1676 << "" - requested were "" << eventCounts[cls].nTestingEventsRequested << "" events"" << Endl;; 1677 Log() << kINFO //<< Form(""Dataset[%s] : "",dsi.GetName()); 1678 << setiosflags(ios::left) << std::setw(maxL); 1679 << dsi.GetClassInfo(cls)->GetName() << "" -- ""; 1680 << ""training and testing events: ""; 1681 << (trainingSizePerClass.at(cls)+testingSizePerClass.at(cls)) << Endl;; 1682 Log() << kDEBUG << ""\t(sum of weights: ""; 1683 << (trainingSumWeightsPerClass.at(cls)+testingSumWeightsPerClass.at(cls)) << "")"" <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:77682,Log,Log,77682,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['Log'],['Log']
Testability,"ble_t y) const overrideConvert y from pad to Y.Definition TPad.cxx:3551; TPad::fTickxInt_t fTickxSet to 1 if tick marks along X.Definition TPad.h:89; TPad::SetBBoxY1void SetBBoxY1(const Int_t y) overrideSet top of BoundingBox to a value (resize in y direction on top)Definition TPad.cxx:7348; TPad::fTickyInt_t fTickySet to 1 if tick marks along Y.Definition TPad.h:90; TPad::GetPixmapIDInt_t GetPixmapID() const overrideDefinition TPad.h:266; TPad::XYtoAbsPixelvirtual void XYtoAbsPixel(Double_t x, Double_t y, Int_t &xpixel, Int_t &ypixel) constConvert X/Y into absolute pixel coordinates.Definition TPad.cxx:7415; TPad::TPadTPad(const TPad &pad)=delete; TPad::GetGridxBool_t GetGridx() const overrideDefinition TPad.h:235; TPad::fX2Double_t fX2X of upper X coordinate.Definition TPad.h:38; TPad::PlaceBoxBool_t PlaceBox(TObject *o, Double_t w, Double_t h, Double_t &xl, Double_t &yb, Option_t *option=""lb"") overridePlace a box in NDC space.Definition TPad.cxx:3203; TPad::SetLogzvoid SetLogz(Int_t value=1) overrideSet Lin/Log scale for Z.Definition TPad.cxx:6111; TPad::fEmbeddedGLBool_t fEmbeddedGL!Definition TPad.h:87; TPad::UtoAbsPixelInt_t UtoAbsPixel(Double_t u) const overrideConvert X NDC to absolute pixel.Definition TPad.cxx:7459; TPad::Browsevoid Browse(TBrowser *b) overrideBrowse pad.Definition TPad.cxx:523; TPad::XtoPixelInt_t XtoPixel(Double_t x) const overrideConvert X coordinate to pixel.Definition TPad.cxx:7486; TPad::SetAttFillPSvoid SetAttFillPS(Color_t color, Style_t style) overrideSet postscript fill area attributes.Definition TPad.cxx:6204; TPad::fCGnxInt_t fCGnx! Size of the collide grid along xDefinition TPad.h:119; TPad::SetBBoxCenterYvoid SetBBoxCenterY(const Int_t y) overrideSet Y coordinate of the center of the Pad.Definition TPad.cxx:7318; TPad::fPixeltoXDouble_t fPixeltoXxworld = fPixeltoXk + fPixeltoX*xpixelDefinition TPad.h:57; TPad::CopyBackgroundPixmapvoid CopyBackgroundPixmap(Int_t x, Int_t y)Copy pixmap of this pad as background of the current pad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8h_source.html:36584,Log,Log,36584,doc/master/TPad_8h_source.html,https://root.cern,https://root.cern/doc/master/TPad_8h_source.html,1,['Log'],['Log']
Testability,"ble_t y, Double_t z); This method can be called directly from the TGeoManager class and print a report on how a given point is classified by the modeller: which is the full path to the deepest node containing it, and the (under)estimation of the distance to the closest boundary (safety).; TGeoChecker::RandomPoints(Int_t npoints); Can be called from TGeoVolume class. It first draws the volume and its content with the current visualization settings. Then randomly samples points in its bounding box, plotting in the geometry display only the points classified as belonging to visible volumes.; TGeoChecker::RandomRays(Int_t nrays, Double_t startx, starty, startz); Can be called and acts in the same way as the previous, but instead of points, rays having random isotropic directions are generated from the given point. A raytracing algorithm propagates all rays until they exit geometry, plotting all segments crossing visible nodes in the same color as these.; TGeoChecker::Test(Int_t npoints); Implementation of TGeoManager::Test(). Computes the time for the modeller to find out ""Where am I?"" for a given number of random points.; TGeoChecker::LegoPlot(ntheta, themin, themax, nphi, phimin, phimax,...); Implementation of TGeoVolume::LegoPlot(). Draws a spherical radiation length lego plot for a given volume, in a given theta/phi range.; TGeoChecker::Weight(Double_t precision); Implementation of TGeoVolume::Weight(). Estimates the total weight of a given volume by material sampling. Accepts as input the desired precision. ; Definition at line 37 of file TGeoChecker.h. Public Member Functions;  TGeoChecker ();  Default constructor. ;  ;  TGeoChecker (TGeoManager *geom);  Constructor for a given geometry. ;  ;  ~TGeoChecker () override;  Destructor. ;  ; virtual void CheckBoundaryErrors (Int_t ntracks=1000000, Double_t radius=-1.);  Check pushes and pulls needed to cross the next boundary with respect to the position given by FindNextBoundary. ;  ; virtual void CheckBoundaryReferen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoChecker.html:1866,Test,Test,1866,doc/master/classTGeoChecker.html,https://root.cern,https://root.cern/doc/master/classTGeoChecker.html,2,['Test'],['Test']
Testability,"ble_t* u, Int_t flag); Minimization function for H1s using a Chisquare method; The ""I""ntegral method is used; for each point the cache contains the following info; -1D : bc,e, xc,xw (bin content, error, x of center of bin, x bin width of bin); -2D : bc,e, xc,xw,yc,yw; -3D : bc,e, xc,xw,yc,yw,zc,zw. void FitLikelihood(Int_t& npar, Double_t* gin, Double_t& f, Double_t* u, Int_t flag); Minimization function for H1s using a Likelihood method*-*-*-*-*-*; Basically, it forms the likelihood by determining the Poisson; probability that given a number of entries in a particular bin,; the fit would predict it's value. This is then done for each bin,; and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin); for each point the cache contains the following info; -1D : bc,e, xc (bin content, error, x of center of bin); -2D : bc,e, xc,yc; -3D : bc,e, xc,yc,zc. void FitLikelihoodI(Int_t& npar, Double_t* gin, Double_t& f, Double_t* u, Int_t flag); Minimization function for H1s using a Likelihood method*-*-*-*-*-*; Basically, it forms the likelihood by determining the Poisson; probability that given a number of entries in a particular bin,; the fit would predict it's value. This is then done for each bin,; and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used; for each point the cache contains the following info; -1D : bc,e, xc,xw (bin content, error, x of center of bin, x bin width of bin); -2D : bc,e, xc,xw,yc,yw; -3D : bc,e, xc,xw,yc,yw,zc,zw. TFitter(const TFitter& ). TFitter& operator=(const TFitter& ). TMinuit * GetMinuit() const; {return fMinuit;}. » Author: Rene Brun 31/08/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/minuit:$Id: TFitter.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2010-09-23 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFitter.html:16861,log,logs,16861,root/html528/TFitter.html,https://root.cern,https://root.cern/root/html528/TFitter.html,1,['log'],['logs']
Testability,"ble_t* u, Int_t flag); Minimization function for H1s using a Chisquare method; The ""I""ntegral method is used; for each point the cache contains the following info; -1D : bc,e, xc,xw (bin content, error, x of center of bin, x bin width of bin); -2D : bc,e, xc,xw,yc,yw; -3D : bc,e, xc,xw,yc,yw,zc,zw. void FitLikelihood(Int_t& npar, Double_t* gin, Double_t& f, Double_t* u, Int_t flag); Minimization function for H1s using a Likelihood method*-*-*-*-*-*; Basically, it forms the likelihood by determining the Poisson; probability that given a number of entries in a particular bin,; the fit would predict it's value. This is then done for each bin,; and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin); for each point the cache contains the following info; -1D : bc,e, xc (bin content, error, x of center of bin); -2D : bc,e, xc,yc; -3D : bc,e, xc,yc,zc. void FitLikelihoodI(Int_t& npar, Double_t* gin, Double_t& f, Double_t* u, Int_t flag); Minimization function for H1s using a Likelihood method*-*-*-*-*-*; Basically, it forms the likelihood by determining the Poisson; probability that given a number of entries in a particular bin,; the fit would predict it's value. This is then done for each bin,; and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used; for each point the cache contains the following info; -1D : bc,e, xc,xw (bin content, error, x of center of bin, x bin width of bin); -2D : bc,e, xc,xw,yc,yw; -3D : bc,e, xc,xw,yc,yw,zc,zw. TFitter(const TFitter& ). TFitter& operator=(const TFitter& ). TMinuit * GetMinuit() const; {return fMinuit;}. » Author: Rene Brun 31/08/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/minuit:$Id: TFitter.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-07-04 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFitter.html:16930,log,logs,16930,root/html530/TFitter.html,https://root.cern,https://root.cern/root/html530/TFitter.html,1,['log'],['logs']
Testability,"ble_t* u, Int_t flag); Minimization function for H1s using a Chisquare method; The ""I""ntegral method is used; for each point the cache contains the following info; -1D : bc,e, xc,xw (bin content, error, x of center of bin, x bin width of bin); -2D : bc,e, xc,xw,yc,yw; -3D : bc,e, xc,xw,yc,yw,zc,zw. void FitLikelihood(Int_t& npar, Double_t* gin, Double_t& f, Double_t* u, Int_t flag); Minimization function for H1s using a Likelihood method*-*-*-*-*-*; Basically, it forms the likelihood by determining the Poisson; probability that given a number of entries in a particular bin,; the fit would predict it's value. This is then done for each bin,; and the sum of the logs is taken as the likelihood.; Default method (function evaluated at center of bin); for each point the cache contains the following info; -1D : bc,e, xc (bin content, error, x of center of bin); -2D : bc,e, xc,yc; -3D : bc,e, xc,yc,zc. void FitLikelihoodI(Int_t& npar, Double_t* gin, Double_t& f, Double_t* u, Int_t flag); Minimization function for H1s using a Likelihood method*-*-*-*-*-*; Basically, it forms the likelihood by determining the Poisson; probability that given a number of entries in a particular bin,; the fit would predict it's value. This is then done for each bin,; and the sum of the logs is taken as the likelihood.; The ""I""ntegral method is used; for each point the cache contains the following info; -1D : bc,e, xc,xw (bin content, error, x of center of bin, x bin width of bin); -2D : bc,e, xc,xw,yc,yw; -3D : bc,e, xc,xw,yc,yw,zc,zw. TFitter(const TFitter& ). TFitter& operator=(const TFitter& ). TMinuit * GetMinuit() const; {return fMinuit;}. » Author: Rene Brun 31/08/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/minuit:$Id: TFitter.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:13; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFitter.html:16930,log,logs,16930,root/html532/TFitter.html,https://root.cern,https://root.cern/root/html532/TFitter.html,1,['log'],['logs']
Testability,"ble_t>& parameters, Double_t currentTemperature); voidGenerateNeighbour(vector<Double_t>& parameters, vector<Double_t>& oldParameters, Double_t currentTemperature); voidGenerateNewTemperature(Double_t& currentTemperature, Int_t Iter); TMVA::MsgLogger&Log() const; voidReWriteParameters(vector<Double_t>& from, vector<Double_t>& to); voidSetDefaultScale(); Bool_tShouldGoIn(Double_t currentFit, Double_t localFit, Double_t currentTemperature). Data Members; public:. enum EKernelTemperature { kSqrt; kIncreasingAdaptive; kDecreasingAdaptive; kLog; kHomo; kSin; kGeo; };. private:. Double_tfAdaptiveSpeedhow fast temperature change in adaptive (in adaptive two variables describe; Double_tfEpsepsilon; TMVA::IFitterTarget&fFitterTargetthe fitter target; Double_tfInitialTemperatureinitial temperature; TMVA::SimulatedAnnealing::EKernelTemperaturefKernelTemperature; TMVA::MsgLogger*fLoggermessage logger; Int_tfMaxCallsmaximum number of minimisation calls; Double_tfMinTemperaturemimimum temperature; Double_tfProgress; TRandom*fRandomrandom generator; const vector<TMVA::Interval*>&fRangesparameter ranges; Double_tfTemperatureAdaptiveStepused to calculate InitialTemperature if fUseDefaultTemperature; Double_tfTemperatureScalehow fast temperature change; Bool_tfUseDefaultScaleif TRUE, SA calculates its own TemperatureScale; Bool_tfUseDefaultTemperatureif TRUE, SA calculates its own InitialTemperature (MinTemperautre). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SimulatedAnnealing(TMVA::IFitterTarget& target, const vector<TMVA::Interval*>& ranges); constructor. void SetOptions(Int_t maxCalls, Double_t initialTemperature, Double_t minTemperature, Double_t eps, TString kernelTemperatureS, Double_t temperatureScale, Double_t adaptiveSpeed, Double_t temperatureAdaptiveStep, Bool_t useDefaultScale, Bool_t useDefaultTemperature); option setter. ~SimulatedAnnealing(); destructor. void FillWithRandomValues(vector<Double_t>& parameters); random star",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__SimulatedAnnealing.html:2358,log,logger,2358,root/html528/TMVA__SimulatedAnnealing.html,https://root.cern,https://root.cern/root/html528/TMVA__SimulatedAnnealing.html,4,['log'],['logger']
Testability,ble_tRooAbsTestStatistic::_evalCarry! carry of Kahan sum in evaluatePartition; Int_tRooAbsTestStatistic::_extSet! Number of designated set to calculated extended term; Bool_t_extended; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Bool_t_first!; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooAbsReal*RooAbsTestStatistic::_funcPointer to original input function; RooAbsReal*RooAbsOptTestStatistic::_funcClonePointer to internal clone of input function; RooArgSet*RooAbsOptTestStatistic::_funcCloneSetSet owning all components of internal clone of input function; RooArgSet*RooAbsOptTestStatistic::_funcObsSetList of observables in the pdf expression; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; RooAbsTestStatistic**RooAbsTestStatistic::_gofArray! Array of sub-contexts representing part of the combined test statistic; RooAbsTestStatistic::GOFOpModeRooAbsTestStatistic::_gofOpModeOperation mode of test statistic instance ; vector<RooFit::MPSplit>RooAbsTestStatistic::_gofSplitMode! GOF MP Split mode specified by component (when Auto is active); static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Bool_tRooAbsTestStatistic::_init! Is object initialized ; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealMPFE**RooAbsTestStatistic::_mpfeArray! Array of parallel execution frond ends; RooFit::MPSplitRooAbsTestStatistic::_mpinterlUse interleaving strategy rather than N-wise split for partioning of dataset for multiprocessor-spl,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNLLVar.html:38429,test,test,38429,root/html534/RooNLLVar.html,https://root.cern,https://root.cern/root/html534/RooNLLVar.html,1,['test'],['test']
Testability,"ble_t ; dirz, . Double_t * ; array, . Int_t & ; nelem, . Int_t & ; dim, . Double_t * ; endpoint = nullptr . ); const. Shoot one ray from start point with direction (dirx,diry,dirz). ; Fills input array with points just after boundary crossings. ; Definition at line 2614 of file TGeoChecker.cxx. ◆ Streamer(). void TGeoChecker::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGeoChecker::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TGeoChecker.h. ◆ Test(). void TGeoChecker::Test ; (; Int_t ; npoints, . Option_t * ; option . ). Check time of finding ""Where am I"" for n points. ; Definition at line 2709 of file TGeoChecker.cxx. ◆ TestOverlaps(). void TGeoChecker::TestOverlaps ; (; const char * ; path). Geometry overlap checker based on sampling. ; Definition at line 2761 of file TGeoChecker.cxx. ◆ TestVoxels(). Bool_t TGeoChecker::TestVoxels ; (; TGeoVolume * ; vol, . Int_t ; npoints = 1000000 . ). Returns optimal voxelization type for volume vol. . kFALSE - cartesian; kTRUE - cylindrical . Definition at line 3008 of file TGeoChecker.cxx. ◆ TimingPerVolume(). Double_t TGeoChecker::TimingPerVolume ; (; TGeoVolume * ; vol). private . Compute timing per ""FindNextBoundary"" + ""Safety"" call. ; Volume must be in the current path. ; Definition at line 741 of file TGeoChecker.cxx. ◆ Weight(). Double_t TGeoChecker::Weight ; (; Double_t ; precision = 0.01, . Option_t * ; option = ""v"" . ). Estimate weight of top level volume with a precision SIGMA(W)/W better than PRECISION. ; Option can be ""v"" - verbose (default). ; Definition at line 2890 of file TGeoChecker.cxx. Member Data Documentation. ◆ fBuff1. TBuffer3D* TGeoChecker::fBuff1. private . Definition at line 42 of file TGeoChecker.h. ◆ fBuff2. TBuffer3D* TGeoChecker::fBuff2. private . Definition at line 43 of file TGeoChecker.h. ◆ fFlags. Bool_t* TGeoChecker::fFlags. private . A",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoChecker.html:29147,Test,TestVoxels,29147,doc/master/classTGeoChecker.html,https://root.cern,https://root.cern/doc/master/classTGeoChecker.html,1,['Test'],['TestVoxels']
Testability,"blic Member Functions;  Random ();  ;  Random (unsigned int seed);  ; double Beta (double a, double b);  Beta distribution. ;  ; unsigned int Binomial (unsigned int ntot, double prob);  discrete distributions ;  ; double BreitWigner (double mean=0., double gamma=1);  Breit Wigner distribution. ;  ; double ChiSquare (double nu);  chi-square ;  ; void Circle (double &x, double &y, double r=1);  generate random numbers in a 2D circle of radius 1 ;  ; unsigned int EngineSize () const;  Return the size of the generator state. ;  ; double Exp (double tau);  Exponential distribution. ;  ; double FDist (double nu1, double nu2);  F-distribution. ;  ; RandomFunctions< Engine, EngineBaseType > & Functions ();  ; double Gamma (double a, double b);  Gamma distribution. ;  ; double Gaus (double mean=0, double sigma=1);  ; uint64_t Integer ();  ; double Landau (double m=0, double s=1);  Landau distribution. ;  ; double Logistic (double a);  Logistic distribution. ;  ; double LogNormal (double zeta, double sigma);  Log-normal distribution. ;  ; std::vector< unsigned int > Multinomial (unsigned int ntot, const std::vector< double > &p);  Multinomial distribution. ;  ; unsigned int NegativeBinomial (double n, double prob);  Negative Binomial distribution First parameter is n, second is probability To be consistent with Random::Binomial. ;  ; double operator() ();  ; double Pareto (double a, double b);  Pareto distribution. ;  ; unsigned int Poisson (double mu);  Poisson distribution. ;  ; double Rayleigh (double sigma);  Rayleigh distribution. ;  ; double Rndm ();  ; void RndmArray (int n, double *array);  Generate an array of random numbers between ]0,1] 0 is excluded and 1 is included Function to preserve ROOT Trandom compatibility. ;  ; Engine & Rng ();  ; void SetSeed (int seed);  ; void Sphere (double &x, double &y, double &z, double r=1);  generate random numbers in a 3D sphere of radius 1 ;  ; double tDist (double nu);  t student distribution ;  ; std::string Type () const;  Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Random.html:1648,Log,LogNormal,1648,doc/master/classROOT_1_1Math_1_1Random.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Random.html,2,['Log'],"['Log-normal', 'LogNormal']"
Testability,"blic Member Functions;  TProofServLite (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServLite () override;  Cleanup. ;  ; Int_t CreateServer () override;  Finalize the server setup. ;  ; void HandleFork (TMessage *mess) override;  Cloning itself via fork. ;  ; void HandleSigPipe () override;  Called when the client is not alive anymore; terminate the session. ;  ; void HandleTermination () override;  Called when the client is not alive anymore; terminate the session. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate (Int_t status) override;  Terminate the proof server. ;  ;  Public Member Functions inherited from TProofServ;  TProofServ (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServ () override;  Cleanup. ;  ; virtual void DisableTimeout ();  ; virtual void EnableTimeout ();  ; void FlushLogFile ();  Reposition the read pointer in the log file to the very end. ;  ; TObject * Get (const char *namecycle);  Get object with name ""name;cycle"" (e.g. ;  ; Int_t GetActSessions () const;  ; const char * GetCacheDir () const;  ; TProofLockPath * GetCacheLock ();  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataDir () const;  ; const char * GetDataDirOpts () const;  ; Float_t GetEffSessions () const;  ; TList * GetEnabledPackages () const;  ; const char * GetGroup () const;  ; Int_t GetGroupId () const;  ; Int_t GetGroupSize () const;  ; const char * GetImage () const;  ; Int_t GetLogLevel () const;  ; Long64_t GetMsgSizeHWM () const;  ; TDSetElement * GetNextPacket (Long64_t totalEntries=-1);  Get next range of entries to be processed on this server. ;  ; void GetOptions (Int_t *argc, char **argv) override;  Get and handle command line options. ;  ; const char * GetOrdinal () const;  ; TPackMg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLite.html:1675,log,log,1675,doc/master/classTProofServLite.html,https://root.cern,https://root.cern/doc/master/classTProofServLite.html,1,['log'],['log']
Testability,"block); Int_tNext(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEntryListBlock&operator=(const TEntryListBlock& rhs); voidOptimizeStorage(); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; voidPrintWithShift(Int_t shift) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRemove(Int_t entry); voidTObject::ResetBit(UInt_t f); voidResetIndices(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEntryListBlock.html:13687,Test,TestBit,13687,root/html534/TEntryListBlock.html,https://root.cern,https://root.cern/root/html534/TEntryListBlock.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bmission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome Documentation. ROOT provides different types of documentation:. The Reference Guide, which is generated by doxygen provides an up-to-date full code documentation. This is mainly for software developers of ROOT and using ROOT to build the applications.; A general Users Guide is provided for a more in depth explanation of concepts and functionality available in the ROOT system. ; A number of topical User Guides and Manuals for various components of the system.; A rich set of ROOT tutorials and code examples are offered to developers to exercise specific functionality.; A rich set of HowTo's is also present to discuss issues commonly faced by ROOT users. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/documentation.html:3045,test,tests,3045,d/documentation.html,https://root.cern,https://root.cern/d/documentation.html,2,"['Benchmark', 'test']","['Benchmarks', 'tests']"
Testability,"bool useLatex=false);  Write the GraphViz representation of the expression tree headed by this RooAbsArg object to the given ostream. ;  ; bool hasClients () const;  ; bool hasDataToken () const;  ; virtual bool importWorkspaceHook (RooWorkspace &ws);  ; bool isConstant () const;  Check if the ""Constant"" attribute is set. ;  ; virtual bool isDerived () const;  Does value or shape of this arg depend on any other arg? ;  ; virtual bool isReducerNode () const;  ; bool IsSortable () const override;  ; bool localNoDirtyInhibit () const;  ; const TNamed * namePtr () const;  De-duplicated pointer to this object's name. ;  ; Int_t numProxies () const;  Return the number of registered proxies. ;  ; bool observableOverlaps (const RooAbsData *dset, const RooAbsArg &testArg) const;  Test if any of the dependents of the arg tree (as determined by getObservables) overlaps with those of the testArg. ;  ; bool observableOverlaps (const RooArgSet *depList, const RooAbsArg &testArg) const;  Test if any of the dependents of the arg tree (as determined by getObservables) overlaps with those of the testArg. ;  ; RooAbsArg & operator= (const RooAbsArg &other)=delete;  ; bool overlaps (const RooAbsArg &testArg, bool valueOnly=false) const;  Test if any of the nodes of tree are shared with that of the given tree. ;  ; const RooArgSet * ownedComponents () const;  ; void Print (Option_t *options=nullptr) const override;  Print the object to the defaultPrintStream(). ;  ; void printAddress (std::ostream &os) const override;  Print address of this RooAbsArg. ;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void printClassName (std::ostream &os) const override;  Print object class name. ;  ; void printCompactTree (const char *indent="""", const char *fileName=nullptr, const char *namePat=nullptr, RooAbsArg *client=nullptr);  Print tree structure of expression tree on stdout, or to file if filename is specified. ;  ; void printCompactTree (std::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSuperCategory.html:16779,test,testArg,16779,doc/master/classRooSuperCategory.html,https://root.cern,https://root.cern/doc/master/classRooSuperCategory.html,3,"['Test', 'test']","['Test', 'testArg']"
Testability,"boolSetObsToExpected(RooAbsPdf& pdf, const RooArgSet& obs); static boolSetObsToExpected(RooProdPdf& prod, const RooArgSet& obs). Data Members; protected:. const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fAltModel; unsigned intRooStats::HypoTestCalculatorGeneric::fAltToysSeedto have same toys for alternate ; const RooAbsData*RooStats::HypoTestCalculatorGeneric::fData; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fDefaultSampler; RooStats::TestStatistic*RooStats::HypoTestCalculatorGeneric::fDefaultTestStat; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fNullModel; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fTestStatSampler. private:. RooAbsData*fAsimovDataasimov data set ; RooArgSetfAsimovGlobObssnapshot of Asimov global observables ; RooArgSetfBestFitParamssnapshot of all best fitted Parameter values; RooArgSetfBestFitPoisnapshot of best fitted POI values; doublefNLLAsimov; doublefNLLObs; boolfOneSidedfor one sided PL test statistic (upper limits); boolfOneSidedDiscoveryfor one sided PL test statistic (for discovery); intfUseQTildeflag to indicate if using qtilde or not (-1 (default based on RooRealVar)), 0 false, 1 (true); static intfgPrintLevelcontrol print level (0 minimal, 1 normal, 2 debug). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetPrintLevel(int level); set print level (static function); 0 minimal, 1 normal, 2 debug. AsymptoticCalculator(RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, bool nominalAsimov = false); constructor for asymptotic calculator from Data set and ModelConfig; The constructor will perform a global fit of the model to the data; and build an Asimov data set.; It will then also fit the model to the Asimov data set to find the likelihood value; of the Asimov data set; nominalAsimov is an option for using Asimov data set obtained using nominal nuisance parameter values",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__AsymptoticCalculator.html:5053,test,test,5053,root/html534/RooStats__AsymptoticCalculator.html,https://root.cern,https://root.cern/root/html534/RooStats__AsymptoticCalculator.html,2,['test'],['test']
Testability,"bose(Bool_t flag = kTRUE); Int_tsetWarnLevel(Int_t newLevel); virtual voidShowMembers(TMemberInspector& insp); Int_tsimplex(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidzeroEvalCount(). protected:. voidapplyCovarianceMatrix(TMatrixDSym& V); voidbackProp(); voidclearPdfParamAsymErr(Int_t index); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tgetNPar() const; Double_tgetPdfParamErr(Int_t index); Double_tgetPdfParamVal(Int_t index); ofstream*logfile() const; voidTObject::MakeZombie(); Double_t&maxFCN(); voidprofileStart(); voidprofileStop(); voidsetPdfParamErr(Int_t index, Double_t value); voidsetPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); virtual Bool_tsetPdfParamVal(Int_t index, Double_t value, Bool_t verbose = kFALSE); Bool_tsynchronize(Bool_t verbose). private:. RooMinuit(const RooMinuit&). Data Members; public:. enum Strategy { Speed; Balance; Robustness; };; enum PrintLevel { None; Reduced; Normal; ExtraForProblem; Maximum; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. RooArgList*_constParamList; TStopwatch_cumulTimer; Bool_t_doEvalErrorWall; Int_t_evalCounter; TMatrixDSym*_extV; RooArgList*_floatParamList; RooAbsReal*_func; Bool_t_handleLocalErrors; RooArgList*_initConstParamList; RooArgList*_initFloa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMinuit.html:6682,log,logfile,6682,root/html530/RooMinuit.html,https://root.cern,https://root.cern/root/html530/RooMinuit.html,1,['log'],['logfile']
Testability,"bose=0)constructorDefinition Reader.cxx:123; TMVA::Reader::EvaluateMulticlassconst std::vector< Float_t > & EvaluateMulticlass(const TString &methodTag, Double_t aux=0)evaluates MVA for given set of input variablesDefinition Reader.cxx:630; TMVA::Reader::fDataInputHandlerDataInputHandler fDataInputHandlerDefinition Reader.h:138; TMVA::Reader::DecodeVarNamesvoid DecodeVarNames(const std::string &varNames)decodes ""name1:name2:..."" formDefinition Reader.cxx:772; TMVA::Reader::DeclareOptionsvoid DeclareOptions()declaration of configuration optionsDefinition Reader.cxx:264; TMVA::Reader::AddSpectatorvoid AddSpectator(const TString &expression, Float_t *)Add a float spectator or expression to the reader.Definition Reader.cxx:321; TMVA::Reader::AddVariablevoid AddVariable(const TString &expression, Float_t *)Add a float variable or expression to the reader.Definition Reader.cxx:303; TMVA::Reader::~Readervirtual ~Reader(void)destructorDefinition Reader.cxx:277; TMVA::Reader::fLoggerMsgLogger * fLogger! message loggerDefinition Reader.h:161; TMVA::Reader::DataInfoconst DataSetInfo & DataInfo() constDefinition Reader.h:117; TMVA::Tools::xmlengineTXMLEngine & xmlengine()Definition Tools.h:262; TMVA::Tools::ReadAttrvoid ReadAttr(void *node, const char *, T &value)read attribute from xmlDefinition Tools.h:329; TMVA::Types::Instancestatic Types & Instance()The single instance of ""Types"" if existing already, or create it (Singleton)Definition Types.cxx:70; TMVA::Types::EMVAEMVADefinition Types.h:76; TMVA::Types::kCategory@ kCategoryDefinition Types.h:97; TMVA::Types::kCuts@ kCutsDefinition Types.h:78; TStringBasic string class.Definition TString.h:139; TString::LengthSsiz_t Length() constDefinition TString.h:417; TString::ReplaceAllTString & ReplaceAll(const TString &s1, const TString &s2)Definition TString.h:704; TString::LastSsiz_t Last(char c) constFind last occurrence of a character c.Definition TString.cxx:931; TString::ContainsBool_t Contains(const char *pat, ECaseCompare cmp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:40427,log,loggerDefinition,40427,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['log'],['loggerDefinition']
Testability,"box. We also provide a convenience function, SetAABoundingBox(), for simpler case of setting an axis aligned bounding box. Master/Local Reference Frames; The Core section of TBuffer3D contains two members relating to reference frames: fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer (bounding box and tessellation vertexes) are in local or master (world frame). fLocalMaster is a standard 4x4 translation matrix (OpenGL column major ordering) for placing the object into the 3D master frame.; If fLocalFrame is kFALSE, fLocalMaster should contain an identity matrix. This is set by default, and can be reset using SetLocalMasterIdentity() function.; Logical & Physical Objects. There are two cases of object addition:. Add this object as a single independent entity in the world reference frame.; Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have very large number repeated placements of relatively few logical (unique) shapes. Some viewers (OpenGL only at present) are able to take advantage of this by identifying unique logical shapes from the fID logical ID member of TBuffer3D. If repeated addition of the same fID is found, the shape is cached already - and the costly tessellation does not need to be sent again. The viewer can also perform internal GL specific caching with considerable performance gains in these cases.; For this to work correctly the logical object in must be described in TBuffer3D in the local reference frame, complete with the local/master translation. The viewer indicates this through the interface method; PreferLocalFrame(); If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D containing the same fID, and different fLocalMaster placements.; For viewers supporting logical/physical objects, the TBuffer3D content refers to the properties of logical object, with the fLocalMaster transf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBuffer3D.html:5456,log,logical,5456,doc/master/classTBuffer3D.html,https://root.cern,https://root.cern/doc/master/classTBuffer3D.html,1,['log'],['logical']
Testability,"break;; 842 }; 843 ; 844 Settings * settings = new Settings(TString(), s.convergenceSteps, s.batchSize,; 845 s.testInterval, s.weightDecay, r,; 846 MinimizerType::fSteepest, s.learningRate,; 847 s.momentum, 1, s.multithreading);; 848 std::shared_ptr<Settings> ptrSettings(settings);; 849 ptrSettings->setMonitoring (0);; 850 Log() << kINFO; 851 << ""Training with learning rate = "" << ptrSettings->learningRate (); 852 << "", momentum = "" << ptrSettings->momentum (); 853 << "", repetitions = "" << ptrSettings->repetitions (); 854 << Endl;; 855 ; 856 ptrSettings->setProgressLimits ((idxSetting)*100.0/(fSettings.size ()),; 857 (idxSetting+1)*100.0/(fSettings.size ()));; 858 ; 859 const std::vector<double>& dropConfig = ptrSettings->dropFractions ();; 860 if (!dropConfig.empty ()) {; 861 Log () << kINFO << ""Drop configuration"" << Endl; 862 << "" drop repetitions = "" << ptrSettings->dropRepetitions(); 863 << Endl;; 864 }; 865 ; 866 int idx = 0;; 867 for (auto f : dropConfig) {; 868 Log () << kINFO << "" Layer "" << idx << "" = "" << f << Endl;; 869 ++idx;; 870 }; 871 Log () << kINFO << Endl;; 872 ; 873 DNN::Steepest minimizer(ptrSettings->learningRate(),; 874 ptrSettings->momentum(),; 875 ptrSettings->repetitions());; 876 net.train(weights, trainPattern, testPattern, minimizer, *ptrSettings.get());; 877 ptrSettings.reset();; 878 Log () << kINFO << Endl;; 879 idxSetting++;; 880 }; 881 size_t weightIndex = 0;; 882 for (size_t l = 0; l < fNet.GetDepth(); l++) {; 883 auto & layerWeights = fNet.GetLayer(l).GetWeights();; 884 for (Int_t j = 0; j < layerWeights.GetNcols(); j++) {; 885 for (Int_t i = 0; i < layerWeights.GetNrows(); i++) {; 886 layerWeights(i,j) = weights[weightIndex];; 887 weightIndex++;; 888 }; 889 }; 890 auto & layerBiases = fNet.GetLayer(l).GetBiases();; 891 if (l == 0) {; 892 for (Int_t i = 0; i < layerBiases.GetNrows(); i++) {; 893 layerBiases(i,0) = weights[weightIndex];; 894 weightIndex++;; 895 }; 896 } else {; 897 for (Int_t i = 0; i < layerBiases.GetNrows(); i++) {",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:30901,Log,Log,30901,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,3,['Log'],['Log']
Testability,"break;; }; }; ; // Since we passed the address of a local variable we need; // to remove it.; t->ResetBranchAddresses();; }; ; ; void hvector(); {; gBenchmark->Start(""hvector"");; ; write();; read();; ; gBenchmark->Show(""hvector"");; }; f#define f(i)Definition RSha256.hxx:104; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Float_tfloat Float_tDefinition RtypesCore.h:57; Long64_tlong long Long64_tDefinition RtypesCore.h:69; TBenchmark.h; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; TCanvas.h; TFile.h; kUPDATE@ kUPDATEDefinition TFitParametersDialog.cxx:46; TFrame.h; TH1F.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TSystem.h; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TTree.h; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TBenchmark::Startvirtual void Start(const char *name)Starts Benchmark with the specified name.Definition TBenchmark.cxx:172; TBenchmark::Showvirtual void Show(const char *name)Stops Benchmark name and Prints results.Definition TBenchmark.cxx:155; TBranchA TTree is a list of TBranches.Definition TBranch.h:93; TBranch::GetEntryvirtual Int_t GetEntry(Long64_t entry=0, Int_t getall=0)Read all leaves of entry and return total number of bytes read.Definition TBranch.cxx:1706; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/hvector_8C.html:3469,Benchmark,Benchmark,3469,doc/master/hvector_8C.html,https://root.cern,https://root.cern/doc/master/hvector_8C.html,1,['Benchmark'],['Benchmark']
Testability,"bsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; const RooCatType*RooAbsCategory::lookupType(Int_t index, Bool_t printError = kFALSE) const; const RooCatType*RooAbsCategory::lookupType(const char* label, Bool_t printError = kFALSE) const; const RooCatType*RooAbsCategory::lookupType(const RooCatType& type, Bool_t printError = kFALSE) const; virtual voidTNamed::ls(Option_t* option = """") const; TIterator*MakeIterator() const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); virtual Int_tRooAbsCategoryLValue::numBins(const char* rangeName) const; Int_tRooAbsArg::numCaches() const; Int_tRooAbsCategory::numTypes(const char* = 0) const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Bool_tRooAbsCategory::operator!=(Int_t index); Bool_tRooAbsCategory::operator!=(const char* label); Bool_tRooAbsCategory::operator!=(const RooAbsArg& other); RooAbsArg&RooAbsCategoryLValue::operator=(int index); RooAbsArg&RooAbsCategoryLValue::operator=(const char* label); RooAbsArg&RooAbsCategoryLValue::operator=(const RooAbsCategory& other); Bool_tRooAbsCategory::operator==(Int_t index) const; Bool_tRooAbsCategory::operator==(const char* label) const; virtual Bool_tRooAbsCategory::oper",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSuperCategory.html:11442,test,testArg,11442,root/html534/RooSuperCategory.html,https://root.cern,https://root.cern/root/html534/RooSuperCategory.html,1,['test'],['testArg']
Testability,"bsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; const RooCatType*RooAbsCategory::lookupType(Int_t index, Bool_t printError = kFALSE) const; const RooCatType*RooAbsCategory::lookupType(const char* label, Bool_t printError = kFALSE) const; const RooCatType*RooAbsCategory::lookupType(const RooCatType& type, Bool_t printError = kFALSE) const; virtual voidTNamed::ls(Option_t* option = """") const; TIterator*MakeIterator() const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); virtual Int_tRooAbsCategoryLValue::numBins(const char* rangeName) const; Int_tRooAbsArg::numCaches() const; Int_tRooAbsCategory::numTypes(const char* = 0) const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Bool_tRooAbsCategory::operator!=(Int_t index); Bool_tRooAbsCategory::operator!=(const char* label); Bool_tRooAbsCategory::operator!=(const RooAbsArg& other); RooSuperCategory&operator=(const RooSuperCategory&); Bool_tRooAbsCategory::operator==(Int_t index) const; Bool_tRooAbsCategory::operator==(const char* label) const; virtual Bool_tRooAbsCategory::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSuperCategory.html:11255,test,testArg,11255,root/html602/RooSuperCategory.html,https://root.cern,https://root.cern/root/html602/RooSuperCategory.html,2,['test'],['testArg']
Testability,"bsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsArg*RooAbsString::createFundamental(const char* newname = 0) const; virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::Exe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStringVar.html:3184,test,testArg,3184,root/html534/RooStringVar.html,https://root.cern,https://root.cern/root/html534/RooStringVar.html,3,['test'],['testArg']
Testability,"bsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; TIterator*RooAbsCategory::typeIterator() const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; voidRooAbsArg::wireAllCaches(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsCategory::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBinningCategory.html:16099,Test,TestBit,16099,root/html534/RooBinningCategory.html,https://root.cern,https://root.cern/root/html534/RooBinningCategory.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"bsArg::clientIterator(): use clients() and begin(), end() or range-based loops instead; RooAbsArg::valueClientIterator(): use valueClients(); RooAbsArg::shapeClientIterator(): use shapeClients(); RooAbsArg::serverIterator(): use servers(); RooAbsArg::valueClientMIterator(): use valueClients(); RooAbsArg::shapeClientMIterator(): use shapeClients(); RooAbsArg::serverMIterator(): use servers(); RooAbsCollection::createIterator(): use begin(), end() and range-based for loops; RooAbsCollection::iterator(): same; RooAbsCollection::fwdIterator(): same; RooWorkspace::componentIterator(): use RooWorkspace::components() with range-based loop. Deprecation of legacy test statistics classes in public interface; Instantiating the following classes and even including their header files is deprecated, and the headers will be removed in ROOT 6.34:. RooAbsTestStatistic; RooAbsOptTestStatistic; RooNLLVar; RooChi2Var; RooXYChi2Var. Please use the higher-level functions RooAbsPdf::createNLL() and RooAbsPdf::createChi2() if you want to create objects that represent test statistics.; Change of RooParamHistFunc; The RooParamHistFunc didn’t take any observable RooRealVar as constructor argument. It assumes as observable the internal variables in the passed RooDataHist. This means it was in most contexts unusable, because the input can’t be changed, other than loading a different bin in the dataset.; Furthermore, there was actually a constructor that took a RooAbsArg x, but it was simply ignored.; To fix all these problems, the existing constructors were replaced by a new one that takes the observable explicitly.; Since the old constructors resulted in wrong computation graphs that caused trouble with the new CPU evaluation backend, they had to be removed without deprecation. Please adapt your code if necessary.; Renaming of some RooFit classes; The RooPower was renamed to RooPowerSum, and RooExpPoly was renamed to RooLegacyExpPoly.; This was a necessary change, because the names of these cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:13600,test,test,13600,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['test'],['test']
Testability,"bsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsArg*RooAbsCategory::createFundamental(const char* newname = 0) const; Roo1DTable*RooAbsCategory::createTable(const char* label) const; virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::Exe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsCategoryLValue.html:3612,test,testArg,3612,root/html534/RooAbsCategoryLValue.html,https://root.cern,https://root.cern/root/html534/RooAbsCategoryLValue.html,19,['test'],['testArg']
Testability,"bsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsOptTestStatistic::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooMoment*RooAbsReal::mean(RooRealVar& obs); RooMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooChi2Var.html:18329,log,logEvalError,18329,root/html528/RooChi2Var.html,https://root.cern,https://root.cern/root/html528/RooChi2Var.html,4,['log'],['logEvalError']
Testability,"bsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tisDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tisSealed() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooMoment*RooAbsReal::mean(RooRealVar& obs); RooMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsOptTestStatistic.html:17462,log,logEvalError,17462,root/html528/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html528/RooAbsOptTestStatistic.html,2,['log'],['logEvalError']
Testability,"bsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_toperator==(const char*) const; virtual Bool_toperator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsString.html:9587,test,testArg,9587,root/html534/RooAbsString.html,https://root.cern,https://root.cern/root/html534/RooAbsString.html,1,['test'],['testArg']
Testability,"bsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual TStringoperator TString(); virtual RooAbsArg&operator=(const char* newValue); Bool_tRooAbsString::operator==(const char*) const; virtual Bool_tRooAbsString::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStringVar.html:9484,test,testArg,9484,root/html534/RooStringVar.html,https://root.cern,https://root.cern/root/html534/RooStringVar.html,1,['test'],['testArg']
Testability,"bsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooAbsString&operator=(const RooAbsString&); Bool_toperator==(const char*) const; virtual Bool_toperator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsString.html:9582,test,testArg,9582,root/html602/RooAbsString.html,https://root.cern,https://root.cern/root/html602/RooAbsString.html,2,['test'],['testArg']
Testability,"bsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual TStringoperator TString(); virtual RooAbsArg&operator=(const char* newValue); RooStringVar&operator=(const RooStringVar&); Bool_tRooAbsString::operator==(const char*) const; virtual Bool_tRooAbsString::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStringVar.html:9311,test,testArg,9311,root/html602/RooStringVar.html,https://root.cern,https://root.cern/root/html602/RooStringVar.html,2,['test'],['testArg']
Testability,"bsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; RooFIterRooAbsArg::shapeClientMIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; RooFIterRooAbsArg::valueClientMIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsHiddenReal::writeToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooUnblindCPAsymVar.html:25016,Test,TestBit,25016,root/html532/RooUnblindCPAsymVar.html,https://root.cern,https://root.cern/root/html532/RooUnblindCPAsymVar.html,8,['Test'],"['TestBit', 'TestBits']"
Testability,"bsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidsetUnitNorm(Bool_t flag); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual Int_tTNamed::Sizeof() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig() const; RooNumGenConfig*RooAbsPdf::specialGeneratorConfig(Bool_t createOnTheFly); RooNumIntConfig*RooAbsReal::specialIntegratorConfig() const; RooNumIntConfig*RooAbsReal::specialIntegratorConfig(Bool_t createOnTheFly); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tRooAbsPdf::traceEvalHook(Double_t value) const; Bool_tRooAbsPdf::traceEvalPdf(Double_t value) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); static intRooAbsPdf::verboseEval(); static voidRooAbsPdf::verboseEval(Int_t stat); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidRooAbsReal::writ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooHistPdf.html:28982,Test,TestBit,28982,root/html526/RooHistPdf.html,https://root.cern,https://root.cern/root/html526/RooHistPdf.html,1,['Test'],['TestBit']
Testability,"bsData* Generate(RooAbsPdf& pdf, RooArgSet& observables, const RooDataSet* protoData = NULL, int forceEvents = 0) const; This is the generate function to use in the context of the ToyMCSampler; instead of the standard RooAbsPdf::generate(...).; It takes into account whether the number of events is given explicitly; or whether it should use the expected number of events. It also takes; into account the option to generate a binned data set (ie RooDataHist). SamplingDistribution* AppendSamplingDistribution(RooArgSet& allParameters, RooStats::SamplingDistribution* last, Int_t additionalMC). void ClearCache(); clear the cache obtained from the pdf used for speeding the toy and global observables generation; needs to be called every time the model pdf (fPdf) changes. ToyMCSampler(). void SetUseMultiGen(Bool_t flag); { fUseMultiGen = flag ; }. void AddTestStatistic(RooStats::TestStatistic* t = NULL); The pdf can be NULL in which case the density from SetPdf(); is used. The snapshot and TestStatistic is also optional. RooAbsData* GenerateToyData(RooArgSet& paramPoint, RooAbsPdf& pdf) const; generates toy data; without weight. return GenerateToyData(paramPoint, weight, pdf). RooAbsData* GenerateToyData(RooArgSet& paramPoint) const; with weight. { return GenerateToyData(paramPoint,*fPdf); }. Double_t EvaluateTestStatistic(RooAbsData& data, RooArgSet& nullPOI, int i); Main interface to evaluate the test statistic on a dataset. Double_t EvaluateTestStatistic(RooAbsData& data, RooArgSet& nullPOI); { return EvaluateTestStatistic( data,nullPOI, 0 ); }. TestStatistic* GetTestStatistic(unsigned int i) const. TestStatistic* GetTestStatistic(unsigned int i) const; { return GetTestStatistic(0); }. Double_t ConfidenceLevel() const; { return 1. - fSize; }. void Initialize(RooAbsArg& , RooArgSet& , RooArgSet& ); { return fNToys; }. void SetNToys(const Int_t ntoy); { fNToys = ntoy; }. void SetNEventsPerToy(const Int_t nevents); Forces n events even for extended PDFs. Set NEvents=0 to; use t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__ToyMCSampler.html:7952,Test,TestStatistic,7952,root/html534/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html534/RooStats__ToyMCSampler.html,1,['Test'],['TestStatistic']
Testability,bsList!; list<RooAbsPdf*>RooStats::ToyMCSampler::_pdfList!; Double_tRooStats::ToyMCSampler::fAdaptiveHighLimit; Double_tRooStats::ToyMCSampler::fAdaptiveLowLimit; boolfApplyVeto; RooArgSetfConditionalObsset of conditional observables; Bool_tRooStats::ToyMCSampler::fExpectedNuisanceParwhether to use expectation values for nuisance parameters (ie Asimov data set); Bool_tRooStats::ToyMCSampler::fGenerateAutoBinned; Bool_tRooStats::ToyMCSampler::fGenerateBinned; TStringRooStats::ToyMCSampler::fGenerateBinnedTag; boolfGenerateFromNull; const RooArgSet*RooStats::ToyMCSampler::fGlobalObservables; vector<RooAbsReal*>fImpNLLs!; vector<RooAbsPdf*>fImportanceDensities; vector<const RooArgSet*>fImportanceSnapshots; unsigned intfIndexGenDensity; Double_tRooStats::ToyMCSampler::fMaxToys; Int_tRooStats::ToyMCSampler::fNEventsnumber of events per toy (may be ignored depending on settings); Int_tRooStats::ToyMCSampler::fNToysnumber of toys to generate; RooStats::NuisanceParametersSampler*RooStats::ToyMCSampler::fNuisanceParametersSampler!; const RooArgSet*RooStats::ToyMCSampler::fNuisancePars; vector<RooAbsPdf*>fNullDensities; vector<RooAbsReal*>fNullNLLs!; vector<const RooArgSet*>fNullSnapshots; const RooArgSet*RooStats::ToyMCSampler::fObservables; const RooArgSet*RooStats::ToyMCSampler::fParametersForTestStat; RooAbsPdf*RooStats::ToyMCSampler::fPdfmodel (can be alt or null); RooAbsPdf*RooStats::ToyMCSampler::fPriorNuisanceprior pdf for nuisance parameters; RooStats::ProofConfig*RooStats::ToyMCSampler::fProofConfig!; const RooDataSet*RooStats::ToyMCSampler::fProtoDatain dev; boolfReuseNLL; stringRooStats::ToyMCSampler::fSamplingDistNamename of the model; Double_tRooStats::ToyMCSampler::fSize; vector<TestStatistic*>RooStats::ToyMCSampler::fTestStatistics; Double_tRooStats::ToyMCSampler::fToysInTails; RooStats::toysStrategiesfToysStrategy; Bool_tRooStats::ToyMCSampler::fUseMultiGenUse PrepareMultiGen?; static Bool_tRooStats::ToyMCSampler::fgAlwaysUseMultiGenUse PrepareMultiGen always.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__ToyMCImportanceSampler.html:8132,Test,TestStatistic,8132,root/html534/RooStats__ToyMCImportanceSampler.html,https://root.cern,https://root.cern/root/html534/RooStats__ToyMCImportanceSampler.html,1,['Test'],['TestStatistic']
Testability,"bsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual voidRooResolutionModel::normLeafServerList(RooArgSet& list) const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooAddModel&operator=(const RooAddModel&); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAddModel.html:24683,test,testArg,24683,root/html602/RooAddModel.html,https://root.cern,https://root.cern/root/html602/RooAddModel.html,2,['test'],['testArg']
Testability,bsOptTestStatistic::_funcClonePointer to internal clone of input function; RooArgSet*RooAbsOptTestStatistic::_funcCloneSetSet owning all components of internal clone of input function; RooArgSet*RooAbsOptTestStatistic::_funcObsSetList of observables in the pdf expression; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooArgSet*RooAbsOptTestStatistic::_normSetPointer to set with observables used for normalization; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooAbsData*RooAbsOptTestStatistic::_origDataOriginal data ; RooAbsReal*RooAbsOptTestStatistic::_origFuncOriginal function ; Bool_tRooAbsOptTestStatistic::_ownDataDo we own the dataset; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooSetProxyRooAbsTestStatistic::_paramSetParameters of the test statistic (=parameters of the input function); Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooArgSet*RooAbsOptTestStatistic::_projDepsSet of projected observable; const RooArgSet*RooAbsTestStatistic::_projDepsPointer to set with projected observables; TRefArrayRooAbsArg::_proxyListlist of proxies; stringRooAbsTestStatistic::_rangeNameName of range in which to calculate test statistic; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; TStringRooAbsOptTestStatistic::_sealNoticeUser-defined notice shown when reading a sealed likelihood ; Bool_tRooAbsOptTestStatistic::_sealedIs test statistic sealed -- i.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDataWeightedAverage.html:35497,test,test,35497,root/html532/RooDataWeightedAverage.html,https://root.cern,https://root.cern/root/html532/RooDataWeightedAverage.html,3,['test'],['test']
Testability,"bsPdf& pdf); returns -logL(poi, conditonal MLE of nuisance params); subtract off the global MLE or not depending on the option; It is the numerator or the denominator of the ratio (depending on the pdf); L.M. : not sure why this method is needed now. Double_t Evaluate(RooAbsData& data, RooArgSet& nullParamsOfInterest); evaluate the ratio of profile likelihood. RatioOfProfiledLikelihoodsTestStat(); Proof constructor. Don't use. RatioOfProfiledLikelihoodsTestStat(RooAbsPdf& nullPdf, RooAbsPdf& altPdf, const RooArgSet* altPOI = 0). Calculates the ratio of profiled likelihoods. 	 By default the calculation is:. 	 Lambda(mu_alt , conditional MLE for alt nuisance); 	log --------------------------------------------; 	 Lambda(mu_null , conditional MLE for null nuisance). 	where Lambda is the profile likeihood ratio, so the; 	MLE for the null and alternate are subtracted off. 	If SetSubtractMLE(false) then it calculates:. 	 L(mu_alt , conditional MLE for alt nuisance); 	log --------------------------------------------; 	 L(mu_null , conditional MLE for null nuisance). 	The values of the parameters of interest for the alternative; 	hypothesis are taken at the time of the construction.; 	If empty, it treats all free parameters as nuisance parameters. 	The value of the parameters of interest for the null hypotheses; 	are given at each call of Evaluate(data,nullPOI). ~RatioOfProfiledLikelihoodsTestStat(void). void EnableDetailedOutput(bool e = true). void SetReuseNLL(Bool_t flag). void SetMinimizer(const char* minimizer). void SetStrategy(Int_t strategy). void SetTolerance(Double_t tol). void SetPrintLevel(Int_t printLevel). void SetConditionalObservables(const RooArgSet& set); set the conditional observables which will be used when creating the NLL; so the pdf's will not be normalized on the conditional observables when computing the NLL. const RooArgSet* GetDetailedOutput(void); Returns detailed output. The value returned by this function is updated after each call to Evaluate(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__RatioOfProfiledLikelihoodsTestStat.html:3447,log,log,3447,root/html602/RooStats__RatioOfProfiledLikelihoodsTestStat.html,https://root.cern,https://root.cern/root/html602/RooStats__RatioOfProfiledLikelihoodsTestStat.html,2,['log'],['log']
Testability,"bsPdf::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName) const; 365{; 366 cxcoutD(Eval) << ""RooAbsPdf::analyticalIntegralWN("" << GetName() << "") code = "" << code << "" normset = "" << (normSet?*normSet:RooArgSet()) << endl ;; 367 ; 368 ; 369 if (code==0) return getVal(normSet) ;; 370 if (normSet) {; 371 return analyticalIntegral(code,rangeName) / getNorm(normSet) ;; 372 } else {; 373 return analyticalIntegral(code,rangeName) ;; 374 }; 375}; 376 ; 377 ; 378 ; 379////////////////////////////////////////////////////////////////////////////////; 380/// Check that passed value is positive and not 'not-a-number'. If; 381/// not, print an error, until the error counter reaches its set; 382/// maximum.; 383 ; 384bool RooAbsPdf::traceEvalPdf(double value) const; 385{; 386 // check for a math error or negative value; 387 bool error(false) ;; 388 if (TMath::IsNaN(value)) {; 389 logEvalError(Form(""p.d.f value is Not-a-Number (%f), forcing value to zero"",value)) ;; 390 error=true ;; 391 }; 392 if (value<0) {; 393 logEvalError(Form(""p.d.f value is less than zero (%f), forcing value to zero"",value)) ;; 394 error=true ;; 395 }; 396 ; 397 // do nothing if we are no longer tracing evaluations and there was no error; 398 if(!error) return error ;; 399 ; 400 // otherwise, print out this evaluations input values and result; 401 if(++_errorCount <= 10) {; 402 cxcoutD(Tracing) << ""*** Evaluation Error "" << _errorCount << "" "";; 403 if(_errorCount == 10) cxcoutD(Tracing) << ""(no more will be printed) "";; 404 }; 405 else {; 406 return error ;; 407 }; 408 ; 409 Print() ;; 410 return error ;; 411}; 412 ; 413 ; 414////////////////////////////////////////////////////////////////////////////////; 415/// Get normalisation term needed to normalise the raw values returned by; 416/// getVal(). Note that `getVal(normalisationVariables)` will automatically; 417/// apply the normalisation term returned here.; 418/// \param nset Set of variables to normalise over.; 419double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:14638,log,logEvalError,14638,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['log'],['logEvalError']
Testability,"bsReal.cxx:285; RooAbsReal::logEvalErrorvoid logEvalError(const char *message, const char *serverValueString=nullptr) constLog evaluation error message.Definition RooAbsReal.cxx:3464; RooAbsReal::analyticalIntegralWNvirtual double analyticalIntegralWN(Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) constImplements the actual analytical integral(s) advertised by getAnalyticalIntegral.Definition RooAbsReal.cxx:380; RooAbsReal::getUnitconst Text_t * getUnit() constDefinition RooAbsReal.h:143; RooAbsReal::getIntegratorConfigconst RooNumIntConfig * getIntegratorConfig() constReturn the numeric integration configuration used for this object.Definition RooAbsReal.cxx:3309; RooAbsReal::isBinnedDistributionvirtual bool isBinnedDistribution(const RooArgSet &) constTests if the distribution is binned. Unless overridden by derived classes, this always returns false.Definition RooAbsReal.h:346; RooAbsReal::printEvalErrorsstatic void printEvalErrors(std::ostream &os=std::cout, Int_t maxPerNode=10000000)Print all outstanding logged evaluation error on the given ostream.Definition RooAbsReal.cxx:3582; RooAbsReal::createIntRIRooFit::OwningPtr< RooAbsReal > createIntRI(const RooArgSet &iset, const RooArgSet &nset={})Utility function for createRunningIntegral.Definition RooAbsReal.cxx:3827; RooAbsReal::enableOffsettingvirtual void enableOffsetting(bool)Definition RooAbsReal.cxx:4484; RooAbsReal::clearEvalErrorLogstatic void clearEvalErrorLog()Clear the stack of evaluation error messages.Definition RooAbsReal.cxx:3542; RooAbsReal::createIntObjRooFit::OwningPtr< RooAbsReal > createIntObj(const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) constInternal utility function for createIntegral() that creates the actual integral object.Definition RooAbsReal.cxx:590; RooAbsReal::sigmaRooAbsMoment * sigma(RooRealVar &obs, const RooArgSet &nset)Definition RooAbsReal.h:362; RooAbsReal::functorRooFunctor * functor(const RooArgList &ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:51092,log,logged,51092,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['log'],['logged']
Testability,"bsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; RooListProxy_set1Set of constraint terms; TIterator*_setIter1! do not persist; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooConstraintSum(); Default constructor. RooConstraintSum(const char* name, const char* title, const RooArgSet& constraintSet, const RooArgSet& paramSet); Constructor with set of constraint p.d.f.s. All elements in constraintSet must inherit from RooAbsPdf. RooConstraintSum(const RooConstraintSum& other, const char* name = 0); Copy constructor. ~RooConstraintSum(); Destructor. Double_t evaluate() const; Return sum of -log of constraint p.d.f.s. TObject* clone(const char* newname) const; { return new RooConstraintSum(*this, newname); }. const RooArgList& list(); { return _set1 ; }. » Last changed: Tue Jun 2 15:30:07 2015 » Last generated: 2015-06-02 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooConstraintSum.html:37910,log,log,37910,root/html604/RooConstraintSum.html,https://root.cern,https://root.cern/root/html604/RooConstraintSum.html,1,['log'],['log']
Testability,"bsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooMoment*RooAbsReal::mean(RooRealVar& obs); RooMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); const RooArgSet&numIntCatVars() const; const RooArgSet&numIntRealVars() const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealIntegral.html:17744,test,testArg,17744,root/html532/RooRealIntegral.html,https://root.cern,https://root.cern/root/html532/RooRealIntegral.html,1,['test'],['testArg']
Testability,"bsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); const RooArgList&paramList() const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/PiecewiseInterpolation.html:18488,test,testArg,18488,root/html530/PiecewiseInterpolation.html,https://root.cern,https://root.cern/root/html530/PiecewiseInterpolation.html,1,['test'],['testArg']
Testability,"bsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); const RooArgList&paramList() const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ParamHistFunc.html:19106,test,testArg,19106,root/html532/ParamHistFunc.html,https://root.cern,https://root.cern/root/html532/ParamHistFunc.html,2,['test'],['testArg']
Testability,"bsRealinline; mean(RooRealVar &obs, const RooArgSet &nset)RooAbsRealinline; minTrialSamples(const RooArgSet &) constRooAbsRealinlinevirtual; moment(RooRealVar &obs, Int_t order, bool central, bool takeRoot)RooAbsReal; moment(RooRealVar &obs, const RooArgSet &normObs, Int_t order, bool central, bool takeRoot, bool intNormObs)RooAbsReal; mustBeExtended() constRooAbsPdfinline; MustBeExtended enum valueRooAbsPdf; nameFieldLength(Int_t newLen)RooPrintablestatic; namePtr() constRooAbsArginline; Never enum valueRooAbsArg; normalizeWithNaNPacking(double rawVal, double normVal) constRooAbsPdfprotected; normRange() constRooAbsPdfinline; NotAdvised enum valueRooAbsArg; Notify()TObjectvirtual; numCaches() constRooAbsArg; numEvalErrorItems()RooAbsRealstatic; numEvalErrors()RooAbsRealstatic; NumEvent enum valueRooAbsReal; numProxies() constRooAbsArg; observableOverlaps(const RooAbsData *dset, const RooAbsArg &testArg) constRooAbsArg; observableOverlaps(const RooArgSet *depList, const RooAbsArg &testArg) constRooAbsArg; Obsolete(const char *method, const char *asOfVers, const char *removedFromVers) constTObject; offset() constRooAbsRealinlinevirtual; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const RooAbsArg &other)=deleteRooAbsArg; TNamed::operator=(const TNamed &rhs)TNamed; TObject::operator=(const TObject &rhs)TObjectinline; operator==(double value) constRooAbsReal; operator==(const RooAbsArg &other) const overrideRooAbsRealvirtual; operMode() constRooAbsArginline; OperMode enum nameRooAbsArg; operModeHook()RooAbsArginlineprotectedvirtual; optimizeCacheMode(const RooArgSet &observables)RooAbsArgvirtual; optimizeCacheMode(const RooArgSet &observables, RooArgSet &optNodes, RooLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf-members.html:27377,test,testArg,27377,doc/master/classRooAbsPdf-members.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf-members.html,1,['test'],['testArg']
Testability,"bservableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooCFunction3Binding<double,double,double,double>&operator=(const RooCFunction3Binding<double,double,double,double>&); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooAbsReal::plotOn(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Binding_double_double_double_double_.html:20066,test,testArg,20066,root/html602/RooCFunction3Binding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Binding_double_double_double_double_.html,2,['test'],['testArg']
Testability,"bsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGItemContext&operator=(const TGItemContext&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidRemoveItem()MENU ; voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidScan()MENU ; voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetExpression(const char* name = """", const char* alias = ""-empty-"", Bool_t cut = kFALSE)MENU ; static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGItemContext(); TGItemContext(const TGItemContext&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGItemContext.html:4530,Test,TestBit,4530,root/html602/TGItemContext.html,https://root.cern,https://root.cern/root/html602/TGItemContext.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"bstractMethod(const char* method) const; virtual Bool_tTEveElementList::AcceptElement(TEveElement* el); voidAddDependent(TEveElement* el); virtual voidTEveElement::AddElement(TEveElement* el); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TGListTreeItem* parent_lti); virtual TGListTreeItem*TEveElement::AddIntoListTree(TGListTree* ltree, TEveElement* parent); virtual TGListTreeItem*TEveElement::AddIntoListTrees(TEveElement* parent); virtual voidTEveElement::AddParent(TEveElement* re); virtual voidTEveProjectable::AddProjected(TEveProjected* p); virtual voidTEveProjectable::AddProjectedsToSet(set<TEveElement*>& set); virtual voidTEveElement::AddStamp(UChar_t bits); virtual voidTEveElement::Annihilate(); virtual voidTEveElement::AnnihilateElements(); virtual voidTEveProjectable::AnnihilateProjecteds(); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveProjectionManager.html:1762,Assert,AssertBBox,1762,root/html530/TEveProjectionManager.html,https://root.cern,https://root.cern/root/html530/TEveProjectionManager.html,5,['Assert'],['AssertBBox']
Testability,"buffer, fObjlen);; 609 if (TestBit(TKey::kReproducible)); 610 TDatime((UInt_t) 1).FillBuffer(buffer);; 611 else; 612 fDatime.FillBuffer(buffer);; 613 tobuf(buffer, fKeylen);; 614 tobuf(buffer, fCycle);; 615 if (fVersion > 1000) {; 616 tobuf(buffer, fSeekKey);; 617 ; 618 // We currently store in the 16 highest bit of fSeekPdir the value of; 619 // fPidOffset. This offset is used when a key (or basket) is transfered from one; 620 // file to the other. In this case the TRef and TObject might have stored a; 621 // pid index (to retrieve TProcessIDs) which refered to their order on the original; 622 // file, the fPidOffset is to be added to those values to correctly find the; 623 // TProcessID. This fPidOffset needs to be increment if the key/basket is copied; 624 // and need to be zero for new key/basket.; 625 Long64_t pdir = (((Long64_t)fPidOffset)<<kPidOffsetShift) | (kPidOffsetMask & fSeekPdir);; 626 tobuf(buffer, pdir);; 627 } else {; 628 tobuf(buffer, (Int_t)fSeekKey);; 629 tobuf(buffer, (Int_t)fSeekPdir);; 630 }; 631 if (TestBit(kIsDirectoryFile)) {; 632 // We want to record ""TDirectory"" instead of TDirectoryFile so that the file can be read by ancient version of ROOT.; 633 gTDirectoryString.FillBuffer(buffer);; 634 } else {; 635 fClassName.FillBuffer(buffer);; 636 }; 637 fName.FillBuffer(buffer);; 638 fTitle.FillBuffer(buffer);; 639}; 640 ; 641////////////////////////////////////////////////////////////////////////////////; 642/// Increment fPidOffset by 'offset'.; 643///; 644/// This offset is used when a key (or basket) is transfered from one file to; 645/// the other. In this case the TRef and TObject might have stored a pid; 646/// index (to retrieve TProcessIDs) which refered to their order on the; 647/// original file, the fPidOffset is to be added to those values to correctly; 648/// find the TProcessID. This fPidOffset needs to be increment if the; 649/// key/basket is copied and need to be zero for new key/basket.; 650 ; 651void TKey::IncrementPidOffset(U",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:22491,Test,TestBit,22491,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['Test'],['TestBit']
Testability,"but if we do, let's just; 3046 // continue as before ...; 3047 }; 3048 ; 3049 std::string normalizedName;; 3050 Bool_t checkTable = kFALSE;; 3051 ; 3052 if (!cl) {; 3053 {; 3054 TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; 3055 TClassEdit::GetNormalizedName(normalizedName, name);; 3056 }; 3057 // Try the normalized name.; 3058 if (normalizedName != name) {; 3059 cl = (TClass*)gROOT->GetListOfClasses()->FindObject(normalizedName.c_str());; 3060 ; 3061 if (cl) {; 3062 if (cl->IsLoaded() || cl->TestBit(kUnloading)) return cl;; 3063 ; 3064 //we may pass here in case of a dummy class created by TVirtualStreamerInfo; 3065 load = kTRUE;; 3066 }; 3067 checkTable = kTRUE;; 3068 }; 3069 } else {; 3070 normalizedName = cl->GetName(); // Use the fact that all TClass names are normalized.; 3071 checkTable = load && (normalizedName != name);; 3072 }; 3073 ; 3074 if (!load) return nullptr;; 3075 ; 3076// This assertion currently fails because of; 3077// TClass *c1 = TClass::GetClass(""basic_iostream<char,char_traits<char> >"");; 3078// TClass *c2 = TClass::GetClass(""std::iostream"");; 3079// where the TClassEdit normalized name of iostream is basic_iostream<char>; 3080// i.e missing the addition of the default parameter. This is because TClingLookupHelper; 3081// uses only 'part' of TMetaUtils::GetNormalizedName.; 3082 ; 3083// if (!cl) {; 3084// TDataType* dataType = (TDataType*)gROOT->GetListOfTypes()->FindObject(name);; 3085// TClass *altcl = dataType ? (TClass*)gROOT->GetListOfClasses()->FindObject(dataType->GetFullTypeName()) : 0;; 3086// if (altcl && normalizedName != altcl->GetName()); 3087// ::Fatal(""TClass::GetClass"",""The existing name (%s) for %s is different from the normalized name: %s\n"",; 3088// altcl->GetName(), name, normalizedName.c_str());; 3089// }; 3090 ; 3091 // We want to avoid auto-parsing due to intentionally missing dictionary for std::pair.; 3092 // However, we don't need this special treatement in rootcling (there is no auto-parsing); 30",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:115683,assert,assertion,115683,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['assert'],['assertion']
Testability,"but if we do, let's just; 3113 // continue as before ...; 3114 }; 3115 ; 3116 std::string normalizedName;; 3117 Bool_t checkTable = kFALSE;; 3118 ; 3119 if (!cl) {; 3120 {; 3121 TInterpreter::SuspendAutoLoadingRAII autoloadOff(gInterpreter);; 3122 TClassEdit::GetNormalizedName(normalizedName, name);; 3123 }; 3124 // Try the normalized name.; 3125 if (normalizedName != name) {; 3126 cl = (TClass*)gROOT->GetListOfClasses()->FindObject(normalizedName.c_str());; 3127 ; 3128 if (cl) {; 3129 if (cl->IsLoaded() || cl->TestBit(kUnloading)) return cl;; 3130 ; 3131 //we may pass here in case of a dummy class created by TVirtualStreamerInfo; 3132 load = kTRUE;; 3133 }; 3134 checkTable = kTRUE;; 3135 }; 3136 } else {; 3137 normalizedName = cl->GetName(); // Use the fact that all TClass names are normalized.; 3138 checkTable = load && (normalizedName != name);; 3139 }; 3140 ; 3141 if (!load) return nullptr;; 3142 ; 3143// This assertion currently fails because of; 3144// TClass *c1 = TClass::GetClass(""basic_iostream<char,char_traits<char> >"");; 3145// TClass *c2 = TClass::GetClass(""std::iostream"");; 3146// where the TClassEdit normalized name of iostream is basic_iostream<char>; 3147// i.e missing the addition of the default parameter. This is because TClingLookupHelper; 3148// uses only 'part' of TMetaUtils::GetNormalizedName.; 3149 ; 3150// if (!cl) {; 3151// TDataType* dataType = (TDataType*)gROOT->GetListOfTypes()->FindObject(name);; 3152// TClass *altcl = dataType ? (TClass*)gROOT->GetListOfClasses()->FindObject(dataType->GetFullTypeName()) : 0;; 3153// if (altcl && normalizedName != altcl->GetName()); 3154// ::Fatal(""TClass::GetClass"",""The existing name (%s) for %s is different from the normalized name: %s\n"",; 3155// altcl->GetName(), name, normalizedName.c_str());; 3156// }; 3157 ; 3158 // We want to avoid auto-parsing due to intentionally missing dictionary for std::pair.; 3159 // However, we don't need this special treatement in rootcling (there is no auto-parsing); 31",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:118434,assert,assertion,118434,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['assert'],['assertion']
Testability,"but the local mother-daughters management is handled by volumes. These build additional optimization structures upon geometry closure. In order to have navigation features properly working one has to follow some rules for building a valid geometry. The daughter volume(s) must not extrude the mother shape. They are allowed however to have a common boundaries.; The volumes positioned in the same container must not overlap with each other. They may touch on one boundaries or shape vertex. The daughter nodes of a volume can be also removed or replaced with other nodes:; void RemoveNode(TGeoNode* node); TGeoNode*ReplaceNode(TGeoNode* nodeorig, TGeoShape* newshape = 0,; TGeoMatrix* newpos = 0, TGeoMedium* newmed = 0); The last method allows replacing an existing daughter of a volume with another one. Providing only the node to be replaced will just create a new volume for the node but having exactly the same parameters as the old one. This helps in case of divisions for decoupling a node from the logical hierarchy so getting new content/properties. For non-divided volumes, one can change the shape and/or the position of the daughter.; 18.4.2.4 Virtual Containers and Assemblies of Volumes; Virtual containers are volumes that do not represent real objects, but they are needed for grouping and positioning together other volumes. Such grouping helps not only geometry creation, but also optimizes tracking performance; therefore, it is highly recommended. Virtual volumes need to inherit material/medium properties from the volume they are placed into in order to be “invisible” at tracking time.; Let us suppose that we need to group together two volumes A and B into a structure and position this into several other volumes D,E, and F. What we need to do is to create a virtual container volume C holding A and B, then position C in the other volumes.; Note that C is a volume having a determined medium. Since it is not a real volume, we need to manually set its medium the same as tha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:940371,log,logical,940371,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['log'],['logical']
Testability,"buted docs):; import ROOT; from dask.distributed import Client; ; # Point RDataFrame calls to the Dask specific RDataFrame; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ; # In a Python script the Dask client needs to be initalized in a context; # Jupyter notebooks / Python session don't need this; if __name__ == ""__main__"":; # With an already setup cluster that exposes a Dask scheduler endpoint; client = Client(""dask_scheduler.domain.com:8786""); ; # The Dask RDataFrame constructor accepts the Dask Client object as an optional argument; df = RDataFrame(""mytree"",""myfile.root"", daskclient=client); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); If an instance of distributed.Client is not provided to the RDataFrame object, it will be created for you and it will run the computations in the local machine using all cores available. Choosing the number of distributed tasks; A distributed RDataFrame has internal logic to define in how many chunks the input dataset will be split before sending tasks to the distributed backend. Each task reads and processes one of said chunks. The logic is backend-dependent, but generically tries to infer how many cores are available in the cluster through the connection object. The number of tasks will be equal to the inferred number of cores. There are cases where the connection object of the chosen backend doesn't have information about the actual resources of the cluster. An example of this is when using Dask to connect to a batch system. The client object created at the beginning of the application does not automatically know how many cores will be available during distributed execution, since the jobs are submitted to the batch system after the creation of the connection. In such cases, the logic is to default to process the whole dataset in 2 tasks.; The number of tasks submitted for distributed execution can be also set programmatically, by providing the optional keyword",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:38499,log,logic,38499,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,2,['log'],['logic']
Testability,"butes() constRooAbsArginline; StyleOption enum nameRooPrintable; substituteServer(RooAbsArg *oldServer, RooAbsArg *newServer)RooAbsArgprivate; syncCache(const RooArgSet *set=nullptr) overrideRooAbsRealinlineprotectedvirtual; syncNormalization(const RooArgSet *dset, bool adjustProxies=true) constRooAbsPdfprotectedvirtual; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; traceEval(const RooArgSet *set) constRooAbsRealprotected; traceEvalPdf(double value) constRooAbsPdfprivate; transientAttributes() constRooAbsArginline; translate(RooFit::Detail::CodeSquashContext &ctx) constRooAbsArgvirtual; treeNodeServerList(RooAbsCollection *list, const RooAbsArg *arg=nullptr, bool doBranch=true, bool doLeaf=true, bool valueOnly=false, bool recurseNonDerived=false) constRooAbsArg; unRegisterCache(RooAbsCache &cache)RooAbsArg; unRegisterProxy(RooArgProxy &proxy)RooAbsArgprotected; unRegisterProxy(RooSetProxy &proxy)RooAbsArgprotected; unRegisterProxy(RooListProxy &proxy)RooAbsArgprotected; UseCurrentStyle()TObjectvirtual; value_type typedefRooAbsReal; ValueChange enum valueRooAbsArg; valueClients() constRooAbsArginline; verboseDirty(bool flag)RooAbsArgstatic; verboseEval(Int_t stat)RooAbsPdfstatic; verboseEval()RooAbsPdfstatic; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; wireAllCaches()RooAbsArg; workspace() constRooAbsArginline; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; writeToStream(std::ostream &os, bool compact) const overrideRooAbsRealvirtual; ~RooAbsArg() overrideRooAbsArg; ~RooAbsPdf()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf-members.html:38449,Test,TestBit,38449,doc/master/classRooAbsPdf-members.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"butes()MENU ; virtual voidTAttMarker::SetMarkerColor(Color_t mcolor = 1); virtual voidTAttMarker::SetMarkerColorAlpha(Color_t mcolor, Float_t malpha); virtual voidTAttMarker::SetMarkerSize(Size_t msize = 1); virtual voidTAttMarker::SetMarkerStyle(Style_t mstyle = 1); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidTSpline::SetNpx(Int_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPoint(Int_t i, Double_t x, Double_t y); virtual voidSetPointCoeff(Int_t i, Double_t b, Double_t c, Double_t d); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; static voidTest(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TSpline3(); TSpline3(const TSpline3&); TSpline3(const TH1* h, const char* opt = 0, Double_t valbeg = 0, Double_t valend = 0); TSpline3(const char* title, const TGraph* g, const char* opt = 0, Double_t valbeg = 0, Double_t valend = 0); TSpline3(const char* title, Double_t[] x, Double_t[] y, Int_t n, const char* opt = 0, Double_t valbeg = 0, Double_t valend = 0); TSpline3(const char* title, Double_t[] x, const TF1* func, Int_t n, const char* opt = 0, Double_t valbeg = 0, Double_t valend = 0); TSpline3(const char* title, Double_t xmin, Double_t xmax, Double_t[] y, Int_t n, const char* opt = 0, Double_t valbeg = 0, Double_t valend = 0); TSpline3(const char* title, Double_t xmin, Double_t xmax, const TF1* func, Int_t n, const char* opt = 0, Double_t valbeg = 0, Double_t valend = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpline3.html:7169,Test,TestBit,7169,root/html602/TSpline3.html,https://root.cern,https://root.cern/root/html602/TSpline3.html,2,['Test'],['TestBit']
Testability,"butes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t widdef = 1); virtual voidTAttMarker::SaveMarkerAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t sizdef = 1); virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTAttMarker::SetMarkerAttributes()MENU ; virtual voidTAttMarker::SetMarkerColor(Color_t tcolor = 1); virtual voidTAttMarker::SetMarkerSize(Size_t msize = 1); virtual voidTAttMarker::SetMarkerStyle(Style_t mstyle = 1); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidSetNpx(Int_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpline.html:6580,Test,TestBit,6580,root/html528/TSpline.html,https://root.cern,https://root.cern/root/html528/TSpline.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"butes.; 3610 ; 3611void TFormula::Print(Option_t *option) const; 3612{; 3613 printf("" %20s : %s Ndim= %d, Npar= %d, Number= %d \n"",GetName(),GetTitle(), fNdim,fNpar,fNumber);; 3614 printf("" Formula expression: \n"");; 3615 printf(""\t%s \n"",fFormula.Data() );; 3616 TString opt(option);; 3617 opt.ToUpper();; 3618 // do an evaluation as a cross-check; 3619 //if (fReadyToExecute) Eval();; 3620 ; 3621 if (opt.Contains(""V"") ) {; 3622 if (fNdim > 0 && !TestBit(TFormula::kLambda)) {; 3623 printf(""List of Variables: \n"");; 3624 assert(int(fClingVariables.size()) >= fNdim);; 3625 for ( int ivar = 0; ivar < fNdim ; ++ivar) {; 3626 printf(""Var%4d %20s = %10f \n"",ivar,GetVarName(ivar).Data(), fClingVariables[ivar]);; 3627 }; 3628 }; 3629 if (fNpar > 0) {; 3630 printf(""List of Parameters: \n"");; 3631 if ( int(fClingParameters.size()) < fNpar); 3632 Error(""Print"",""Number of stored parameters in vector %zu in map %zu is different than fNpar %d"",fClingParameters.size(), fParams.size(), fNpar);; 3633 assert(int(fClingParameters.size()) >= fNpar);; 3634 // print with order passed to Cling function; 3635 for ( int ipar = 0; ipar < fNpar ; ++ipar) {; 3636 printf(""Par%4d %20s = %10f \n"",ipar,GetParName(ipar), fClingParameters[ipar] );; 3637 }; 3638 }; 3639 printf(""Expression passed to Cling:\n"");; 3640 printf(""\t%s\n"",fClingInput.Data() );; 3641 if (fGradFuncPtr) {; 3642 printf(""Generated Gradient:\n"");; 3643 printf(""%s\n"", fGradGenerationInput.c_str());; 3644 printf(""%s\n"", GetGradientFormula().Data());; 3645 }; 3646 if(fHessFuncPtr) {; 3647 printf(""Generated Hessian:\n"");; 3648 printf(""%s\n"", fHessGenerationInput.c_str());; 3649 printf(""%s\n"", GetHessianFormula().Data());; 3650 }; 3651 }; 3652 if(!fReadyToExecute); 3653 {; 3654 Warning(""Print"", ""Formula is not ready to execute. Missing parameters/variables"");; 3655 for (list<TFormulaFunction>::const_iterator it = fFuncs.begin(); it != fFuncs.end(); ++it) {; 3656 TFormulaFunction fun = *it;; 3657 if (!fun.fFound) {; 3658 printf(""%s is un",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:138269,assert,assert,138269,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['assert'],['assert']
Testability,"butes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h lengthDefinition TGWin32VirtualXProxy.cxx:245; namechar name[80]Definition TGX11.cxx:110; TInterpreter.h; gInterpreter#define gInterpreterDefinition TInterpreter.h:573; TLeaf.h; operator()TRObject operator()(const T1 &t1) constDefinition TRFunctionImport__oprtr.h:14; TROOT.h; TTree.h; Utils.hxx; ROOT::Detail::RDF::RDefineBaseDefinition RDefineBase.hxx:39; ROOT::Detail::RDF::RDefineBase::GetTypeNamestd::string GetTypeName() constDefinition RDefineBase.cxx:47; ROOT::Experimental::RLogChannelA log configuration for a channel, e.g.Definition RLogger.hxx:101; ROOT::Internal::RDF::RStringCache::Insertauto Insert(const std::string &string) -> decltype(fStrings)::const_iteratorInserts the input string in the cache and returns an iterator to the cached string.Definition RDFUtils.cxx:444; ROOT::RDF::RDataSourceRDataSource defines an API that RDataFrame can use to read arbitrary data formats.Definition RDataSource.hxx:109; ROOT::RDF::RDataSource::HasColumnvirtual bool HasColumn(std::string_view colName) const =0Checks if the dataset has a certain column.; ROOT::RDF::RDataSource::GetTypeNamevirtual std::string GetTypeName(std::string_view colName) const =0Type of a column as a string, e.g.; TBranchElementA Branch for the case of an object.Definition TBranchElement.h:39; TBranchElement::GetClassvirtual TClass * GetClass() constDefinition TBranchElement.h:187; TBranch::Classstatic TClass * Class(); TClassRefTClassRef is used to implement a permanent reference to a TClass object.Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFUtils_8cxx_source.html:20201,log,log,20201,doc/master/RDFUtils_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDFUtils_8cxx_source.html,1,['log'],['log']
Testability,"bution with default meanlog=0, sigmalog=1. ; Exponential distribution with default rate=1 . Definition at line 70 of file GoFTest.h. ◆ ETestType. enum ROOT::Math::GoFTest::ETestType. Goodness of Fit test types for using with the class's unary functions as a shorthand for the in-built methods. . EnumeratorkAD ; kAD2s Anderson-Darling Test. Default value. . kKS Anderson-Darling 2-Samples Test. . kKS2s Kolmogorov-Smirnov Test. ; Kolmogorov-Smirnov 2-Samples Test . Definition at line 85 of file GoFTest.h. ◆ EUserDistribution. enum ROOT::Math::GoFTest::EUserDistribution. User input distribution option. . EnumeratorkCDF ; kPDF Input distribution is a CDF : cumulative distribution function. ; Input distribution is a PDF (Default value) . Definition at line 79 of file GoFTest.h. Constructor & Destructor Documentation. ◆ GoFTest() [1/6]. ROOT::Math::GoFTest::GoFTest ; (; size_t ; sample1Size, . const Double_t * ; sample1, . size_t ; sample2Size, . const Double_t * ; sample2 . ). Constructor for 2-samples tests. ; Definition at line 134 of file GoFTest.cxx. ◆ GoFTest() [2/6]. ROOT::Math::GoFTest::GoFTest ; (; size_t ; sampleSize, . const Double_t * ; sample, . EDistribution ; dist = kUndefined, . const std::vector< double > & ; distParams = {} . ). Constructor for 1-sample tests with a specified distribution. ; If a specific distribution is not specified it can be set later using SetDistribution. ; Definition at line 161 of file GoFTest.cxx. ◆ GoFTest() [3/6]. template<class Dist > . ROOT::Math::GoFTest::GoFTest ; (; size_t ; sampleSize, . const Double_t * ; sample, . Dist & ; dist, . EUserDistribution ; userDist = kPDF, . Double_t ; xmin = 1, . Double_t ; xmax = 0 . ). inline . Templated constructor for 1-sample tests with a user specified distribution as a functor object implementing double operator()(double x). ; Definition at line 101 of file GoFTest.h. ◆ GoFTest() [4/6]. ROOT::Math::GoFTest::GoFTest ; (; size_t ; sampleSize, . const Double_t * ; sample, . const IGenFuncti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GoFTest.html:9411,test,tests,9411,doc/master/classROOT_1_1Math_1_1GoFTest.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GoFTest.html,1,['test'],['tests']
Testability,"butions (does nothing if NULL is given).; If variable name was not set before, it is copied from the added; SamplingDistribution. Double_t Integral(Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; Normalization can be turned off. void SortValues() const. Double_t IntegralAndError(Double_t& error, Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; Normalization can be turned off.; compute also the error on the integral. Double_t CDF(Double_t x) const; returns the closed integral [-inf,x]. Double_t InverseCDF(Double_t pvalue); returns the inverse of the cumulative distribution function. Double_t InverseCDF(Double_t pvalue, Double_t sigmaVariaton, Double_t& inverseVariation); returns the inverse of the cumulative distribution function, with variations depending on number of samples. Double_t InverseCDFInterpolate(Double_t pvalue); returns the inverse of the cumulative distribution function. SamplingDistribution(const char* name, const char* title, vector<Double_t>& samplingDist, const char* varName = 0); Constructor for SamplingDistribution. Int_t GetSize() const; size of samples. {return fSamplingDist.size();}. const std::vector<Double_t> & GetSamplingDistribution() const; Get test statistics values. {return fSamplingDist;}. const std::vector<Double_t> & GetSampleWeights() const; Get the sampling weights. {return fSampleWeights;}. const TString GetVarName() const; {return fVarName;}. » Last changed: root/roostats:$Id: SamplingDistribution.h 40920 2011-09-19 06:41:59Z moneta $ » Last generated: 2011-12-02 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__SamplingDistribution.html:10354,test,test,10354,root/html532/RooStats__SamplingDistribution.html,https://root.cern,https://root.cern/root/html532/RooStats__SamplingDistribution.html,1,['test'],['test']
Testability,"by C structure name provided:. dsc - Pointer to the table descriptor; name - The name of this object; n - The initial number of allocated rows. TGenericTable(const char* structName, Int_t n). Create TGenericTable by C structure name provided:. dsc - Pointer to the table descriptor; name - The name of this object; n - The initial number of allocated rows. TGenericTable(const char* structName, const char* name, Int_t n). Create TGenericTable by C structure name provided:. dsc - Pointer to the table descriptor; name - The name of this object; n - The initial number of allocated rows. ~TGenericTable(); destructor. TTableDescriptor * GetDescriptorPointer() const; { return fColDescriptors;}. void SetDescriptorPointer(TTableDescriptor* list); { fColDescriptors = list;}. void SetGenericType(); { TTable::SetType(GetDescriptorPointer()->GetName()); }. TGenericTable(); {SetType(""generic"");}. TGenericTable(const char* structName, const char* name); Create TGenericTable by C structure name provided. char * GetTable(Int_t i = 0) const; { return ((char *)GetArray())+i*GetRowSize();}. TTableDescriptor * GetTableDescriptors() const; { return GetDescriptorPointer();}. TTableDescriptor * GetRowDescriptors() const; { return GetDescriptorPointer();}. char & operator[](Int_t i); { assert(i>=0 && i < GetNRows()); return *GetTable(i); }. const char & operator[](Int_t i) const; { assert(i>=0 && i < GetNRows()); return *((const char *)(GetTable(i))); }. iterator begin(); { return ((const TGenericTable *)this)->begin();}. iterator begin() const; { return GetNRows() ? iterator(*this, *GetTable(0)):end();}. iterator end(); { return ((const TGenericTable *)this)->end(); }. iterator end() const; {Long_t i = GetNRows(); return i? iterator(*this, *GetTable(i)):iterator(*this);}. » Last changed: root/table:$Id$ » Last generated: 2015-03-14 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGenericTable.html:18391,assert,assert,18391,root/html534/TGenericTable.html,https://root.cern,https://root.cern/root/html534/TGenericTable.html,2,['assert'],['assert']
Testability,"by the ctor of a class's init class (see the ClassImp macro). ; Definition at line 896 of file TClassTable.cxx. ◆ AddClass() [2/2]. void ROOT::AddClass ; (; const char * ; cname, . Version_t ; id, . DictFuncPtr_t ; dict, . Int_t ; pragmabits . ). ◆ AddClassAlternate(). ROOT::TClassAlt * ROOT::AddClassAlternate ; (; const char * ; normName, . const char * ; alternate . ). Global function called by GenerateInitInstance. ; (see the ClassImp macro). ; Definition at line 918 of file TClassTable.cxx. ◆ BrowsableLog(). ROOT::Experimental::RLogChannel & ROOT::BrowsableLog ; (; ). Log channel for Browsable diagnostics. ; Definition at line 20 of file RElement.cxx. ◆ BrowserLog(). ROOT::Experimental::RLogChannel & ROOT::BrowserLog ; (; ). Log channel for Browser diagnostics. ; Definition at line 35 of file RBrowserData.cxx. ◆ CallRecursiveRemoveIfNeeded(). void ROOT::CallRecursiveRemoveIfNeeded ; (; TObject & ; obj). inline . call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true. ; Note: this reset the kMustCleanup bit to allow harmless multiple call to this function. ; Definition at line 395 of file TROOT.h. ◆ Class_ShowMembers(). void ROOT::Class_ShowMembers ; (; TClass * ; cl, . const void * ; obj, . TMemberInspector & ; insp . ). Indirect call to the implementation of ShowMember allowing [forward] declaration with out a full definition of the TClass class. ; Definition at line 546 of file TClass.cxx. ◆ ClassTableHash(). static UInt_t ROOT::ClassTableHash ; (; const char * ; name, . UInt_t ; size . ). static . Definition at line 237 of file TClassTable.cxx. ◆ CompressionSettings() [1/2]. int ROOT::CompressionSettings ; (; RCompressionSetting::EAlgorithm::EValues ; algorithm, . int ; compressionLevel . ). ◆ CompressionSettings() [2/2]. int ROOT::CompressionSettings ; (; ROOT::ECompressionAlgorithm ; algorithm, . int ; compressionLevel . ). Deprecated name, do not use: . ◆ CreateClass() [1/2]. TClass * ROOT::CreateClass ; (; const char * ; cnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT.html:29537,Test,TestBit,29537,doc/v632/namespaceROOT.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT.html,1,['Test'],['TestBit']
Testability,"by the ctor of a class's init class (see the ClassImp macro). ; Definition at line 896 of file TClassTable.cxx. ◆ AddClass() [2/2]. void ROOT::AddClass ; (; const char * ; cname, . Version_t ; id, . DictFuncPtr_t ; dict, . Int_t ; pragmabits . ). ◆ AddClassAlternate(). ROOT::TClassAlt * ROOT::AddClassAlternate ; (; const char * ; normName, . const char * ; alternate . ). Global function called by GenerateInitInstance. ; (see the ClassImp macro). ; Definition at line 918 of file TClassTable.cxx. ◆ BrowsableLog(). ROOT::Experimental::RLogChannel & ROOT::BrowsableLog ; (; ). Log channel for Browsable diagnostics. ; Definition at line 20 of file RElement.cxx. ◆ BrowserLog(). ROOT::Experimental::RLogChannel & ROOT::BrowserLog ; (; ). Log channel for Browser diagnostics. ; Definition at line 35 of file RBrowserData.cxx. ◆ CallRecursiveRemoveIfNeeded(). void ROOT::CallRecursiveRemoveIfNeeded ; (; TObject & ; obj). inline . call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true. ; Note: this reset the kMustCleanup bit to allow harmless multiple call to this function. ; Definition at line 395 of file TROOT.h. ◆ Class_ShowMembers(). void ROOT::Class_ShowMembers ; (; TClass * ; cl, . const void * ; obj, . TMemberInspector & ; insp . ). Indirect call to the implementation of ShowMember allowing [forward] declaration with out a full definition of the TClass class. ; Definition at line 613 of file TClass.cxx. ◆ ClassTableHash(). static UInt_t ROOT::ClassTableHash ; (; const char * ; name, . UInt_t ; size . ). static . Definition at line 237 of file TClassTable.cxx. ◆ CompressionSettings() [1/2]. int ROOT::CompressionSettings ; (; RCompressionSetting::EAlgorithm::EValues ; algorithm, . int ; compressionLevel . ). ◆ CompressionSettings() [2/2]. int ROOT::CompressionSettings ; (; ROOT::ECompressionAlgorithm ; algorithm, . int ; compressionLevel . ). ◆ CreateClass() [1/2]. TClass * ROOT::CreateClass ; (; const char * ; cname, . Version_t ; id, . const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT.html:29358,Test,TestBit,29358,doc/master/namespaceROOT.html,https://root.cern,https://root.cern/doc/master/namespaceROOT.html,1,['Test'],['TestBit']
Testability,"by the ctor of a class's init class (see the ClassImp macro). ; Definition at line 896 of file TClassTable.cxx. ◆ AddClass() [2/2]. void ROOT::AddClass ; (; const char * ; cname, . Version_t ; id, . DictFuncPtr_t ; dict, . Int_t ; pragmabits . ). ◆ AddClassAlternate(). ROOT::TClassAlt * ROOT::AddClassAlternate ; (; const char * ; normName, . const char * ; alternate . ). Global function called by GenerateInitInstance. ; (see the ClassImp macro). ; Definition at line 918 of file TClassTable.cxx. ◆ BrowsableLog(). ROOT::Experimental::RLogChannel & ROOT::BrowsableLog ; (; ). Log channel for Browsable diagnostics. ; Definition at line 20 of file RElement.cxx. ◆ BrowserLog(). ROOT::Experimental::RLogChannel & ROOT::BrowserLog ; (; ). Log channel for Browser diagnostics. ; Definition at line 35 of file RBrowserData.cxx. ◆ CallRecursiveRemoveIfNeeded(). void ROOT::CallRecursiveRemoveIfNeeded ; (; TObject & ; obj). inline . call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true. ; Note: this reset the kMustCleanup bit to allow harmless multiple call to this function. ; Definition at line 396 of file TROOT.h. ◆ Class_ShowMembers(). void ROOT::Class_ShowMembers ; (; TClass * ; cl, . const void * ; obj, . TMemberInspector & ; insp . ). Indirect call to the implementation of ShowMember allowing [forward] declaration with out a full definition of the TClass class. ; Definition at line 546 of file TClass.cxx. ◆ ClassTableHash(). static UInt_t ROOT::ClassTableHash ; (; const char * ; name, . UInt_t ; size . ). static . Definition at line 237 of file TClassTable.cxx. ◆ CompressionSettings() [1/2]. int ROOT::CompressionSettings ; (; RCompressionSetting::EAlgorithm::EValues ; algorithm, . int ; compressionLevel . ). ◆ CompressionSettings() [2/2]. int ROOT::CompressionSettings ; (; ROOT::ECompressionAlgorithm ; algorithm, . int ; compressionLevel . ). Deprecated name, do not use: . ◆ CreateClass() [1/2]. TClass * ROOT::CreateClass ; (; const char * ; cnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v630/namespaceROOT.html:29539,Test,TestBit,29539,doc/v630/namespaceROOT.html,https://root.cern,https://root.cern/doc/v630/namespaceROOT.html,1,['Test'],['TestBit']
Testability,"by typing .q.; root[] .x demos.C; root[] .q; 20.2 $ROOTSYS/test; The test directory contains a set of examples that represent all areas of the framework. When a new release is cut, the examples in this directory are compiled and run to test the new release’s backward compatibility.; We see these source files:. Makefile; Makefile to build all test programs. hsimple.cxx; Simple test program that creates and saves some histograms. MainEvent.cxx; Simple test program that creates a ROOT Tree object and fills it with some simple structures but also with complete histograms. This program uses the files Event.cxx, EventCint.cxx and Event.h. An example of a procedure to link this program is in bind_Event. Note that the Makefile invokes the rootcling utility to generate the Cling interface EventCint.cxx. Event.cxx; Implementation for classes Event and Track. minexam.cxx; Simple test program for data fitting. tcollex.cxx; Example usage of the ROOT collection classes. tcollbm.cxx; Benchmarks of ROOT collection classes. ctorture.cxx; Test program for the class TComplex. tstring.cxx; Example usage of the ROOT string class. vmatrix.cxx; Verification program for the TMatrix class. vvector.cxx; Verification program for the TVectorclass. vlazy.cxx; Verification program for lazy matrices. hworld.cxx; Small program showing basic graphics. guitest.cxx; Example usage of the ROOT GUI classes. gui viewer .cxx; Another ROOT GUI example program. Hello.cxx; Dancing text example. Aclock.cxx; Analog clock (a la X11 xclock). Tetris.cxx; The known Tetris game based on the ROOT graphics. stress.cxx; Important ROOT stress testing program. stress*.cxx; Stress testing of different ROOT classes. bench.cxx; STL and ROOT container test and benchmarking program. QpRandomDriver.cx x; Verification program for Quadratic programming classes in Quadp library. DrawTest.sh; Entry script to extensive TTree query test suite. dt_*; Scripts used by DrawTest.sh. The $ROOTSYS/test directory is a gold mine of root-wisd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1076091,Benchmark,Benchmarks,1076091,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Benchmark'],['Benchmarks']
Testability,"by ‘@’ (e.g. “@out”) if one wants to normalize the corresponding value. Also, if the string ends with ‘!’, output neurons are set up for classification, i.e. with a sigmoid (1 neuron) or softmax (more neurons) activation function.; Many questions on the good usage of neural network, including rules of dumb to determine the best network topology are addressed at ftp://ftp.sas.com/pub/neural/FAQ.html; // a simple network: 2 inputs, 10 hidden and 1 normalized; // output neuron; TMultiLayerPerceptron network(""r,z:10:@Br"",tree);; Expressions are evaluated as for TTree::Draw(). Input and outputs are taken from the TTree associated with the network. This TTree can be given as argument of the constructor or defined later with TMultiLayerPerceptron::SetData(). Events can also be weighted. The weight expression can be given in the constructor or set later with the method SetWeight() of the class TMultiLayerPerceptron. Two datasets must be defined before learning the network: a training dataset that is used when minimizing the error, and a test dataset that will avoid bias. Those two datasets can be built aside and then given to the network, or can be built from a standard expression. By default, half of the events are put in both datasets.; // a more complex 4:8:1 network; // the ptsumf branch is used as weigh;; // default event lists are explicit; TMultiLayerPerceptron network(""m,pt,acol,acopl:8:type"",""pt"",tree,; ""Entry$%2"",""Entry$/2"");; The method TMultiLayerPerceptron::SetLearningMethod() defines the learning method. Learning methods are:; TMultiLayerPerceptron::kStochastic,; TMultiLayerPerceptron::kBatch,; TMultiLayerPerceptron::kSteepestDescent,; TMultiLayerPerceptron::kRibierePolak,; TMultiLayerPerceptron::kFletcherReeves,; TMultiLayerPerceptron::kBFGS // default; The training can start with TMultiLayerPerceptron::Train(Int_t nepoch,Option_t* options). The first argument is the number of epochs while option is a string that can contain “text” (simple text output), “grap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:236107,test,test,236107,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['test'],['test']
Testability,"by-element. ;  ; template<class Element > ; TVectorT< Element > & ElementMult (TVectorT< Element > &target, const TVectorT< Element > &source);  Multiply target by the source, element-by-element. ;  ; template<class Element > ; TVectorT< Element > & ElementMult (TVectorT< Element > &target, const TVectorT< Element > &source, const TVectorT< Element > &select);  Multiply target by the source, element-by-element only where select[i] != 0.0. ;  ; template<class Element1 , class Element2 , class Element3 > ; Element1 Mult (const TVectorT< Element1 > &v1, const TMatrixT< Element2 > &m, const TVectorT< Element3 > &v2);  Perform v1 * M * v2, a scalar result. ;  ; template<class Element > ; TMatrixT< Element > operator!= (const TMatrixT< Element > &source1, const TMatrixT< Element > &source2);  logical operation source1 != source2 ;  ; template<class Element > ; TMatrixT< Element > operator!= (const TMatrixT< Element > &source1, const TMatrixTSym< Element > &source2);  logical operation source1 != source2 ;  ; template<class Element > ; TMatrixT< Element > operator!= (const TMatrixTSym< Element > &source1, const TMatrixT< Element > &source2);  logical operation source1 != source2 ;  ; template<class Element > ; TMatrixT< Element > operator&& (const TMatrixT< Element > &source1, const TMatrixT< Element > &source2);  Logical AND. ;  ; template<class Element > ; TMatrixT< Element > operator&& (const TMatrixT< Element > &source1, const TMatrixTSym< Element > &source2);  Logical AND. ;  ; template<class Element > ; TMatrixT< Element > operator&& (const TMatrixTSym< Element > &source1, const TMatrixT< Element > &source2);  Logical AND. ;  ; template<class Element > ; TVectorT< Element > operator* (const TMatrixT< Element > &a, const TVectorT< Element > &source);  return A * source ;  ; template<class Element > ; TMatrixT< Element > operator* (const TMatrixT< Element > &source, Element val);  operation this = val*source ;  ; template<class Element > ; TMatrixT< Element > operator*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMatrixTAutoloadOps.html:6760,log,logical,6760,doc/master/namespaceTMatrixTAutoloadOps.html,https://root.cern,https://root.cern/doc/master/namespaceTMatrixTAutoloadOps.html,4,"['Log', 'log']","['Logical', 'logical']"
Testability,"c . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::PDEFoamKernelBase::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 57 of file PDEFoamKernelBase.h. ◆ DeclFileName(). static const char * TMVA::PDEFoamKernelBase::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 57 of file PDEFoamKernelBase.h. ◆ Estimate(). virtual Float_t TMVA::PDEFoamKernelBase::Estimate ; (; PDEFoam * ; , . std::vector< Float_t > & ; , . ECellValue ;  . ). pure virtual . Implemented in TMVA::PDEFoamKernelGauss, TMVA::PDEFoamKernelLinN, and TMVA::PDEFoamKernelTrivial. ◆ IsA(). virtual TClass * TMVA::PDEFoamKernelBase::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TMVA::PDEFoamKernelGauss, TMVA::PDEFoamKernelLinN, and TMVA::PDEFoamKernelTrivial.; Definition at line 57 of file PDEFoamKernelBase.h. ◆ Log(). MsgLogger & TMVA::PDEFoamKernelBase::Log ; (; ); const. inline . Definition at line 55 of file PDEFoamKernelBase.h. ◆ Streamer(). virtual void TMVA::PDEFoamKernelBase::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TMVA::PDEFoamKernelGauss, TMVA::PDEFoamKernelLinN, and TMVA::PDEFoamKernelTrivial. ◆ StreamerNVirtual(). void TMVA::PDEFoamKernelBase::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 57 of file PDEFoamKernelBase.h. Member Data Documentation. ◆ fLogger. MsgLogger* TMVA::PDEFoamKernelBase::fLogger. mutableprotected . Definition at line 44 of file PDEFoamKernelBase.h. Libraries for TMVA::PDEFoamKernelBase:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/PDEFoamKernelBase.h; tmva/tmva/src/PDEFoamKernelBase.cxx. TMVAPDEFoamKernelBase. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelBase.html:12385,Log,Log,12385,doc/master/classTMVA_1_1PDEFoamKernelBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamKernelBase.html,1,['Log'],['Log']
Testability,"c = b+an/c;; 400 if (Abs(c) < fpmin) c = fpmin;; 401 d = 1/d;; 402 del = d*c;; 403 h = h*del;; 404 if (Abs(del-1) < eps) break;; 405 //if (i==itmax) std::cout << ""*GamCf(a,x)* a too large or itmax too small"" << std::endl;; 406 }; 407 Double_t v = Exp(-x+a*Log(x)-gln)*h;; 408 return (1-v);; 409}; 410 ; 411////////////////////////////////////////////////////////////////////////////////; 412/// Computation of the incomplete gamma function P(a,x); 413/// via its series representation.; 414///; 415/// \author NvE 14-nov-1998 UU-SAP Utrecht; 416 ; 417Double_t TMath::GamSer(Double_t a,Double_t x); 418{; 419 Int_t itmax = 100; // Maximum number of iterations; 420 Double_t eps = 3.e-14; // Relative accuracy; 421 ; 422 if (a <= 0 || x <= 0) return 0;; 423 ; 424 Double_t gln = LnGamma(a);; 425 Double_t ap = a;; 426 Double_t sum = 1/a;; 427 Double_t del = sum;; 428 for (Int_t n=1; n<=itmax; n++) {; 429 ap += 1;; 430 del = del*x/ap;; 431 sum += del;; 432 if (TMath::Abs(del) < Abs(sum*eps)) break;; 433 //if (n==itmax) std::cout << ""*GamSer(a,x)* a too large or itmax too small"" << std::endl;; 434 }; 435 Double_t v = sum*Exp(-x+a*Log(x)-gln);; 436 return v;; 437}; 438 ; 439////////////////////////////////////////////////////////////////////////////////; 440/// Calculates a Breit Wigner function with mean and gamma.; 441 ; 442Double_t TMath::BreitWigner(Double_t x, Double_t mean, Double_t gamma); 443{; 444 Double_t bw = gamma/((x-mean)*(x-mean) + gamma*gamma/4);; 445 return bw/(2*Pi());; 446}; 447 ; 448////////////////////////////////////////////////////////////////////////////////; 449/// Calculates a Relativistic Breit Wigner function with median and gamma.; 450// \f$ BW(E) = \frac{2\sqrt{2}}{\pi}\frac{M^{2}\gamma\sqrt{M^{2} + \gamma^{2}}}{\left(\sqrt{M^{2}+M\sqrt{M^{2} + \gamma^{2}}}\right)\left(\left(E^{2} - M^{2}\right)^{2} + M^{2}\gamma^{2}\right)} \f$; 451 ; 452Double_t TMath::BreitWignerRelativistic(Double_t x, Double_t median, Double_t gamma); 453{; 454 Double_t mm = median*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:13279,Log,Log,13279,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['Log'],['Log']
Testability,"c Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQUndoManager(); Constructor. ~TQUndoManager(); Destructor. void ls(Option_t* option = """") const; Lists all commands in stack. void PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; Print collection entry. void SetLogging(Bool_t on = kTRUE); Start logging. Delete all previous log records; Note: logging is not implemented yet. void Add(TObject* obj, Option_t* opt); Add command to the stack of commands.; Command's redo action will be executed. option string can contain the following substrings:; ""merge"" - input command will be merged; ""compress"" - input command will be compressed. void CurrentChanged(TQCommand* c); emit signal. void Undo(Option_t* option = """"); Performs undo action. Move cursor position backward in history stack. void Redo(Option_t* option = """"); Performs redo action. Move cursor position forward in history stack. Bool_t CanRedo() const; Returns kTRUE if redo action is possible. Bool_t CanUndo() const; Returns kTRUE if undo action is possible. Bool_t IsLogging() const; Returns kTRUE if logging is ON. TQCommand * GetCurrent() const; Returns the last executed command. TQCommand * GetCursor() const; Returns a command correspondent to the current cursor position in stack. void SetLimit(UInt_t limit); Returns a maximum number of commands which could be located in stack. UInt_t GetLimit() const; Returns a maximum number of commands which could be located in stack. void Add(TObject* obj, Option_t* opt). » Author: Valeriy Onuchin 04/27/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TQCommand.h 25128 2008-08-12 17:59:19Z pcanal $ » Last generated: 2010-09-23 20:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQUndoManager.html:19521,log,logging,19521,root/html528/TQUndoManager.html,https://root.cern,https://root.cern/root/html528/TQUndoManager.html,1,['log'],['logging']
Testability,"c Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQUndoManager(); Constructor. ~TQUndoManager(); Destructor. void ls(Option_t* option = """") const; Lists all commands in stack. void PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; Print collection entry. void SetLogging(Bool_t on = kTRUE); Start logging. Delete all previous log records; Note: logging is not implemented yet. void Add(TObject* obj, Option_t* opt); Add command to the stack of commands.; Command's redo action will be executed. option string can contain the following substrings:; ""merge"" - input command will be merged; ""compress"" - input command will be compressed. void CurrentChanged(TQCommand* c); emit signal. void Undo(Option_t* option = """"); Performs undo action. Move cursor position backward in history stack. void Redo(Option_t* option = """"); Performs redo action. Move cursor position forward in history stack. Bool_t CanRedo() const; Returns kTRUE if redo action is possible. Bool_t CanUndo() const; Returns kTRUE if undo action is possible. Bool_t IsLogging() const; Returns kTRUE if logging is ON. TQCommand * GetCurrent() const; Returns the last executed command. TQCommand * GetCursor() const; Returns a command correspondent to the current cursor position in stack. void SetLimit(UInt_t limit); Returns a maximum number of commands which could be located in stack. UInt_t GetLimit() const; Returns a maximum number of commands which could be located in stack. void Add(TObject* obj, Option_t* opt). » Author: Valeriy Onuchin 04/27/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TQCommand.h 39365 2011-05-24 19:53:19Z pcanal $ » Last generated: 2011-07-04 15:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQUndoManager.html:19705,log,logging,19705,root/html530/TQUndoManager.html,https://root.cern,https://root.cern/root/html530/TQUndoManager.html,1,['log'],['logging']
Testability,"c Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQUndoManager(); Constructor. ~TQUndoManager(); Destructor. void ls(Option_t* option = """") const; Lists all commands in stack. void PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; Print collection entry. void SetLogging(Bool_t on = kTRUE); Start logging. Delete all previous log records; Note: logging is not implemented yet. void Add(TObject* obj, Option_t* opt); Add command to the stack of commands.; Command's redo action will be executed. option string can contain the following substrings:; ""merge"" - input command will be merged; ""compress"" - input command will be compressed. void CurrentChanged(TQCommand* c); emit signal. void Undo(Option_t* option = """"); Performs undo action. Move cursor position backward in history stack. void Redo(Option_t* option = """"); Performs redo action. Move cursor position forward in history stack. Bool_t CanRedo() const; Returns kTRUE if redo action is possible. Bool_t CanUndo() const; Returns kTRUE if undo action is possible. Bool_t IsLogging() const; Returns kTRUE if logging is ON. TQCommand * GetCurrent() const; Returns the last executed command. TQCommand * GetCursor() const; Returns a command correspondent to the current cursor position in stack. void SetLimit(UInt_t limit); Returns a maximum number of commands which could be located in stack. UInt_t GetLimit() const; Returns a maximum number of commands which could be located in stack. void Add(TObject* obj, Option_t* opt). » Author: Valeriy Onuchin 04/27/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TQCommand.h 39365 2011-05-24 19:53:19Z pcanal $ » Last generated: 2011-11-03 20:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQUndoManager.html:19705,log,logging,19705,root/html532/TQUndoManager.html,https://root.cern,https://root.cern/root/html532/TQUndoManager.html,1,['log'],['logging']
Testability,"c Member Functions;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Bool_t Add (const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1);  Replace contents of this histogram by the addition of h1 and h2. ;  ; virtual Bool_t Add (const TH1 *h1, Double_t c1=1);  Performs the operation: this = this + c1*h1 If errors are defined (see TH1::Sumw2), errors are also recalculated. ;  ; virtual Bool_t Add (TF1 *h1, Double_t c1=1, Option_t *option="""");  Performs the operation: this = this + c1*f1 if errors are defined (see TH1::Sumw2), errors are also recalculated. ;  ; virtual void AddBinContent (Int_t bin);  Increment bin content by 1. ;  ; virtual void AddBinContent (Int_t bin, Double_t w);  Increment bin content by a weight w. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Double_t &advalue) const;  Same function as above but returning also the test statistic value. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Option_t *option="""") const;  Statistical test of compatibility in shape between this histogram and h2, using the Anderson-Darling 2 sample test. ;  ; void Browse (TBrowser *b) override;  Browse the Histogram object. ;  ; virtual Int_t BufferEmpty (Int_t action=0);  Fill histogram with all entries in the buffer. ;  ; virtual Bool_t CanExtendAllAxes () const;  Returns true if all axes are extendable. ;  ; virtual Double_t Chi2Test (const TH1 *h2, Option_t *option=""UU"", Double_t *res=nullptr) const;  \( \chi^{2} \) test for comparing weighted and unweighted histograms. ;  ; virtual Double_t Chi2TestX (const TH1 *h2, Double_t &chi2, Int_t &ndf, Int_t &igood, Option_t *option=""UU"", Double_t *res=nullptr) const;  The computation routine of the Chisquare test. ;  ; virtual Double_t Chisquare (TF1 *f1, Option_t *option="""") const;  Compute and return the chisquare of this histogram with respect to a function The chisquare is computed by weighting each histogram point by the bin error By default the full range of the histogram is used. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:25390,test,test,25390,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,2,['test'],['test']
Testability,"c Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressMemoryPlot(TProofProgressDialog* d, Int_t w = 700, Int_t h = 300); Main constructor. ~TProofProgressMemoryPlot(); Destructor. TGListBox* BuildLogList(TGFrame* parent); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void Clear(Option_t* = 0); Clear the canvases. void DoPlot(); Draw the plot from the logs. TGraph * DoAveragePlot(Int_t& max_el, Int_t& min_el); Create the average plots. Int_t ParseLine(TString l, Long64_t& v, Long64_t& r, Long64_t& e); Extract from line 'l' the virtual memory 'v', the resident memory 'r' and the; number of events 'e'.; The line is assumed to be in the form; ""... Memory 130868 virtual 31540 ... event 5550""; The fields are only filled if >= 0 .; Return 0 on success, -1 if any of the values coudl not be filled (the output; fields are not touched in such a case). TGraph * DoWorkerPlot(TProofLogElem* ple); Make a memory consumption graph for a worker. TGraph * DoMasterPlot(TProofLogElem* ple); a master or submaster log; display without meaningful labels for now. void Select(Int_t id); actions of select all/clear all button. TGraph* DoAveragePlotOld(Int_t& max_el, Int_t& min_el). » Author: Anna Kreshuk 18/07/2008 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TProofProgressMemoryPlot.h 28564 2009-05-12 11:00:21Z ganis $ » Last generated: 2010-09-23 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofProgressMemoryPlot.html:23554,log,log,23554,root/html528/TProofProgressMemoryPlot.html,https://root.cern,https://root.cern/root/html528/TProofProgressMemoryPlot.html,1,['log'],['log']
Testability,"c Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressMemoryPlot(TProofProgressDialog* d, Int_t w = 700, Int_t h = 300); Main constructor. ~TProofProgressMemoryPlot(); Destructor. TGListBox* BuildLogList(TGFrame* parent); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void Clear(Option_t* = 0); Clear the canvases. void DoPlot(); Draw the plot from the logs. TGraph * DoAveragePlot(Int_t& max_el, Int_t& min_el); Create the average plots. Int_t ParseLine(TString l, Long64_t& v, Long64_t& r, Long64_t& e); Extract from line 'l' the virtual memory 'v', the resident memory 'r' and the; number of events 'e'.; The line is assumed to be in the form; ""... Memory 130868 virtual 31540 ... event 5550""; The fields are only filled if >= 0 .; Return 0 on success, -1 if any of the values coudl not be filled (the output; fields are not touched in such a case). TGraph * DoWorkerPlot(TProofLogElem* ple); Make a memory consumption graph for a worker. TGraph * DoMasterPlot(TProofLogElem* ple); a master or submaster log; display without meaningful labels for now. void Select(Int_t id); actions of select all/clear all button. TGraph* DoAveragePlotOld(Int_t& max_el, Int_t& min_el). » Author: Anna Kreshuk 18/07/2008 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TProofProgressMemoryPlot.h 28564 2009-05-12 11:00:21Z ganis $ » Last generated: 2011-07-04 15:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofProgressMemoryPlot.html:23707,log,log,23707,root/html530/TProofProgressMemoryPlot.html,https://root.cern,https://root.cern/root/html530/TProofProgressMemoryPlot.html,1,['log'],['log']
Testability,"c Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressMemoryPlot(TProofProgressDialog* d, Int_t w = 700, Int_t h = 300); Main constructor. ~TProofProgressMemoryPlot(); Destructor. TGListBox* BuildLogList(TGFrame* parent); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void Clear(Option_t* = 0); Clear the canvases. void DoPlot(); Draw the plot from the logs. TGraph * DoAveragePlot(Int_t& max_el, Int_t& min_el); Create the average plots. Int_t ParseLine(TString l, Long64_t& v, Long64_t& r, Long64_t& e); Extract from line 'l' the virtual memory 'v', the resident memory 'r' and the; number of events 'e'.; The line is assumed to be in the form; ""... Memory 130868 virtual 31540 ... event 5550""; The fields are only filled if >= 0 .; Return 0 on success, -1 if any of the values coudl not be filled (the output; fields are not touched in such a case). TGraph * DoWorkerPlot(TProofLogElem* ple); Make a memory consumption graph for a worker. TGraph * DoMasterPlot(TProofLogElem* ple); a master or submaster log; display without meaningful labels for now. void Select(Int_t id); actions of select all/clear all button. TGraph* DoAveragePlotOld(Int_t& max_el, Int_t& min_el). » Author: Anna Kreshuk 18/07/2008 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TProofProgressMemoryPlot.h 28564 2009-05-12 11:00:21Z ganis $ » Last generated: 2011-12-02 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofProgressMemoryPlot.html:23707,log,log,23707,root/html532/TProofProgressMemoryPlot.html,https://root.cern,https://root.cern/root/html532/TProofProgressMemoryPlot.html,1,['log'],['log']
Testability,"c Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; RooArgSet const & flattenedCatList () const;  Internal utility function to get a list of all category components for this RooSimultaneous. ;  ; void selectNormalization (const RooArgSet *depSet=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of observables for interpretation of fraction coefficients. ;  ; void selectNormalizationRange (const char *rangeName=nullptr, bool force=false) override;  Interface function used by test statistics to freeze choice of range for interpretation of fraction coefficients. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; Int_t * randomizeProtoOrder (Int_t nProto, Int_t nGen, bool resample=false) const;  Return lookup table with rando",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:63764,test,test,63764,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['test'],['test']
Testability,"c TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_t_cl; RooDataSet*_dataSummary dataset to store results; RooAbsPdf*_model; string_parNameName of Nsignal parameter; RooStats::ProfileLikelihoodCalculator*_plc; const RooArgSet*_poiparameters of interest; RooRealVar*_ul. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UpperLimitMCSModule(const RooArgSet* poi, Double_t CL = 0.94999999999999996). UpperLimitMCSModule(const RooStats::UpperLimitMCSModule& other); Copy constructor. Bool_t initializeInstance(); Initialize module after attachment to RooMCStudy object. Bool_t initializeRun(Int_t ); Initialize module at beginning of RooCMStudy run. RooDataSet* finalizeRun(); Return auxiliary dataset with results of delta(-log(L)); calculations of this module so that it is merged with; RooMCStudy::fitParDataSet() by RooMCStudy. Bool_t processBetweenGenAndFit(Int_t ). virtual ~UpperLimitMCSModule(). » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke, Nils Ruthmann » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-02 15:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__UpperLimitMCSModule.html:8319,log,log,8319,root/html604/RooStats__UpperLimitMCSModule.html,https://root.cern,https://root.cern/root/html604/RooStats__UpperLimitMCSModule.html,1,['log'],['log']
Testability,"c TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_t_cl; RooDataSet*_dataSummary dataset to store results; RooAbsPdf*_model; string_parNameName of Nsignal parameter; RooStats::ProfileLikelihoodCalculator*_plc; const RooArgSet*_poiparameters of interest; RooRealVar*_ul. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; UpperLimitMCSModule(const RooArgSet* poi, Double_t CL = 0.94999999999999996). UpperLimitMCSModule(const RooStats::UpperLimitMCSModule& other); Copy constructor. Bool_t initializeInstance(); Initialize module after attachment to RooMCStudy object. Bool_t initializeRun(Int_t ); Initialize module at beginning of RooCMStudy run. RooDataSet* finalizeRun(); Return auxiliary dataset with results of delta(-log(L)); calculations of this module so that it is merged with; RooMCStudy::fitParDataSet() by RooMCStudy. Bool_t processBetweenGenAndFit(Int_t ). virtual ~UpperLimitMCSModule(). » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke, Nils Ruthmann » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__UpperLimitMCSModule.html:8319,log,log,8319,root/html602/RooStats__UpperLimitMCSModule.html,https://root.cern,https://root.cern/root/html602/RooStats__UpperLimitMCSModule.html,1,['log'],['log']
Testability,"c boolSetObsToExpected(RooAbsPdf& pdf, const RooArgSet& obs); static boolSetObsToExpected(RooProdPdf& prod, const RooArgSet& obs). Data Members; protected:. const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fAltModel; unsigned intRooStats::HypoTestCalculatorGeneric::fAltToysSeedto have same toys for alternate; const RooAbsData*RooStats::HypoTestCalculatorGeneric::fData; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fDefaultSampler; RooStats::TestStatistic*RooStats::HypoTestCalculatorGeneric::fDefaultTestStat; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fNullModel; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fTestStatSampler. private:. RooAbsData*fAsimovDataasimov data set; RooArgSetfAsimovGlobObssnapshot of Asimov global observables; RooArgSetfBestFitParamssnapshot of all best fitted Parameter values; RooArgSetfBestFitPoisnapshot of best fitted POI values; doublefNLLAsimov; doublefNLLObs; boolfOneSidedfor one sided PL test statistic (upper limits); boolfOneSidedDiscoveryfor one sided PL test statistic (for discovery); intfUseQTildeflag to indicate if using qtilde or not (-1 (default based on RooRealVar)), 0 false, 1 (true); static intfgPrintLevelcontrol print level (0 minimal, 1 normal, 2 debug). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetPrintLevel(int level); set print level (static function); 0 minimal, 1 normal, 2 debug. AsymptoticCalculator(RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, bool nominalAsimov = false); constructor for asymptotic calculator from Data set and ModelConfig; The constructor will perform a global fit of the model to the data; and build an Asimov data set.; It will then also fit the model to the Asimov data set to find the likelihood value; of the Asimov data set; nominalAsimov is an option for using Asimov data set obtained using nominal nuisance parameter values;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__AsymptoticCalculator.html:5230,test,test,5230,root/html602/RooStats__AsymptoticCalculator.html,https://root.cern,https://root.cern/root/html602/RooStats__AsymptoticCalculator.html,2,['test'],['test']
Testability,"c bool getFloorGlobal ();  ; static void setFloorGlobal (bool flag);  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static EvalErrorIter evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumFunc.html:47361,log,logged,47361,doc/v632/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumFunc.html,1,['log'],['logged']
Testability,"c const char * TDrawFeedback::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 54 of file TDrawFeedback.h. ◆ Feedback(). void TDrawFeedback::Feedback ; (; TList * ; objs). Display feedback. ; Definition at line 93 of file TDrawFeedback.cxx. ◆ GetName(). const char * TDrawFeedback::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 50 of file TDrawFeedback.h. ◆ Hash(). ULong_t TDrawFeedback::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TDrawFeedback::HashULong_t Hash() const overrideReturn hash value for this object.Definition TDrawFeedback.h:51; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDrawFeedback.html:16869,Test,TestBit,16869,doc/master/classTDrawFeedback.html,https://root.cern,https://root.cern/doc/master/classTDrawFeedback.html,1,['Test'],['TestBit']
Testability,"c file (or $ROOTSYS/etc/system.rootrc) at the beginning of the root session. See Environment Setup below for more information.; 2.7 Environment Setup; The behavior of a ROOT session can be tailored with the options in the .rootrc file. At start-up, ROOT looks for a .rootrc file in the following order:. ./.rootrc //local directory; $HOME/.rootrc //user directory; $ROOTSYS/etc/system.rootrc //global ROOT directory. If more than one .rootrc files are found in the search paths above, the options are merged, with precedence local, user, global. While in a session, to see current settings, you can do:; root[] gEnv->Print(); The rootrc file typically looks like:; # Path used by dynamic loader to find shared libraries; Unix.*.Root.DynamicPath: .:~/rootlibs:$(ROOTSYS)/lib; Unix.*.Root.MacroPath: .:~/rootmacros:$(ROOTSYS)/macros. # Path where to look for TrueType fonts; Unix.*.Root.UseTTFonts: true; Unix.*.Root.TTFontPath:; ...; # Activate memory statistics; Rint.Load: rootalias.C; Rint.Logon: rootlogon.C; Rint.Logoff: rootlogoff.C; ...; Rint.Canvas.MoveOpaque: false; Rint.Canvas.HighLightColor: 5; The various options are explained in $ROOTSYS/etc/system.rootrc. The .rootrc file contents are combined. For example, if the flag to use true type fonts is set to true in the system.rootrc file, you have to set explicitly it false in your local .rootrc file if you do not want to use true type fonts. Removing the UseTTFontsstatement in the local .rootrc file will not disable true fonts. The value of the environment variable ROOTDEBUG overrides the value in the .rootrc file at startup. Its value is used to set gDebug and helps for quick turn on debug mode in TROOT startup.; ROOT looks for scripts in the path specified in the .rootrc file in the Root.Macro.Path variable. You can expand this path to hold your own directories.; 2.7.1 Logon and Logoff Scripts; The rootlogon.C and rootlogoff.C files are scripts loaded and executed at start-up and shutdown. The rootalias.C file is loaded bu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:63898,Log,Logon,63898,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Log'],['Logon']
Testability,"c voidMacro(const char* mac); TEveUtil&operator=(const TEveUtil&); static voidSetColorBrightness(Float_t value, Bool_t full_redraw = kFALSE); static voidSetupEnvironment(); static voidSetupGUI(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TEveUtil(); TEveUtil(const TEveUtil&). Data Members; private:. static TObjArray*fgDefaultColors. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupEnvironment(); Setup Include and Macro paths.; Since inclusion into ROOT this does nothing but could; potentially be reactivated if some common macros are established; and shipped with binary ROOT (in macros/eve). For example, these; might be used to spawn specific GUI / GL configurations. void SetupGUI(); Setup icon pictures and mime-types. Bool_t CheckMacro(const char* mac); Checks if macro 'mac' is loaded. void AssertMacro(const char* mac); Load and execute macro 'mac' if it has not been loaded yet. void Macro(const char* mac); Execute macro 'mac'. Do not reload the macro. void LoadMacro(const char* mac); Makes sure that macro 'mac' is loaded, but do not reload it. void ColorFromIdx(Color_t ci, UChar_t[4] col, Bool_t alpha = kTRUE); Fill col with RGBA values corresponding to index ci. If alpha; is true, set alpha component of col to 255.; ROOT's indexed color palette does not support transparency. void ColorFromIdx(Color_t ci, UChar_t[4] col, Char_t transparency); Fill col with RGBA values corresponding to index ci and transparency.; ROOT's indexed color palette does not support transparency. void ColorFromIdx(Float_t f1, Color_t c1, Float_t f2, Color_t c2, UChar_t[4] col, Bool_t alpha = kTRUE); Fill col with weighted RGBA values corresponding to; color-indices c1 and c2. If alpha is true, set alpha component; of col to 255. Color_t* FindColorVar(TObject* obj, const char* varname); Find address of Color_t data-member with name varnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveUtil.html:2329,Assert,AssertMacro,2329,root/html602/TEveUtil.html,https://root.cern,https://root.cern/root/html602/TEveUtil.html,2,['Assert'],['AssertMacro']
Testability,"c voidMoveFrame(TGCompositeFrame* fr, TGCompositeFrame* p); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetModel(TObject* model); static voidTObject::SetObjectStat(Bool_t stat); voidSetTab(); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVolTabEnabled(Bool_t flag = kTRUE); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoTabManager.html:5480,Test,TestBit,5480,root/html530/TGeoTabManager.html,https://root.cern,https://root.cern/root/html530/TGeoTabManager.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetResolution(Float_t resolution = 1); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; const char*SmoothMarkov(float** source, Int_t ssizex, Int_t ssizey, Int_t averWindow); static TH1*StaticBackground(const TH1* hist, Int_t niter = 20, Option_t* option = """"); static Int_tStaticSearch(const TH1* hist, Double_t sigma = 2, Option_t* option = ""goff"", Double_t threshold = 0.05); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum { kBackIncreasingWindow; kBackDecreasingWindow; kBackSuccessiveFiltering; kBackOneStepFiltering; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TH1*fHistogramresulting histogram; Int_tfMaxPeaksMaximum number of peaks to be found; Int_tfNPeaksnumber of peaks found; TStringTNamed::fNameobject identifier; Float_t*fPosition[fNPeaks] array ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSpectrum2.html:7685,Test,TestBit,7685,root/html534/TSpectrum2.html,https://root.cern,https://root.cern/root/html534/TSpectrum2.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::SetObjectStat(Bool_t stat); voidTGeoArb8::SetPlaneVertices(Double_t zpl, Double_t* vertices) const; virtual voidTGeoArb8::SetPoints(Double_t* points) const; virtual voidTGeoArb8::SetPoints(Float_t* points) const; voidTGeoShape::SetRuntime(Bool_t flag = kTRUE); virtual voidTGeoBBox::SetSegsAndPols(TBuffer3D& buffer) const; voidTGeoShape::SetShapeBit(UInt_t f); voidTGeoShape::SetShapeBit(UInt_t f, Bool_t set); virtual voidTNamed::SetTitle(const char* title = """")MENU ; static voidTGeoShape::SetTransform(TGeoMatrix* matrix); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGeoArb8::SetVertex(Int_t vnum, Double_t x, Double_t y); Int_tTGeoShape::ShapeDistancetoPrimitive(Int_t numpoints, Int_t px, Int_t py) const; virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidTGeoArb8::Sizeof3D() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTGeoShape::TestShapeBit(UInt_t f) const; Int_tTGeoShape::TestShapeBits(UInt_t f) const; TGeoTrap(); TGeoTrap(const TGeoTrap&); TGeoTrap(Double_t dz, Double_t theta, Double_t phi); TGeoTrap(Double_t dz, Double_t theta, Double_t phi, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); TGeoTrap(const char* name, Double_t dz, Double_t theta, Double_t phi, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); static Double_tTGeoShape::Tolerance(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoTrap.html:11993,Test,TestBit,11993,root/html602/TGeoTrap.html,https://root.cern,https://root.cern/root/html602/TGeoTrap.html,8,['Test'],"['TestBit', 'TestBits', 'TestShapeBit', 'TestShapeBits']"
Testability,"c voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; Bool_tRooAbsIntegrator::printEvalCounter() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Bool_tRooSegmentedIntegrator1D::setLimits(Double_t* xmin, Double_t* xmax); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsIntegrator::setPrintEvalCounter(Bool_t value); virtual voidTObject::SetUniqueID(UInt_t uid); virtual Bool_tRooSegmentedIntegrator1D::setUseIntegrandLimits(Bool_t flag); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooSegmentedIntegrator2D.html:5554,Test,TestBit,5554,root/html534/RooSegmentedIntegrator2D.html,https://root.cern,https://root.cern/root/html534/RooSegmentedIntegrator2D.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); voidResetFileCollection(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetOutputFileName(const char* name); voidSetRetrieve(Bool_t on = kTRUE); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofOutputFile.html:5517,Test,TestBit,5517,root/html534/TProofOutputFile.html,https://root.cern,https://root.cern/root/html534/TProofOutputFile.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; voidPutObjectWithID(TObject* obj, UInt_t uid = 0); virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidSetObjectCount(UInt_t number); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProcessID.html:6621,Test,TestBit,6621,root/html528/TProcessID.html,https://root.cern,https://root.cern/root/html528/TProcessID.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetFrontPower(Float_t p); voidSetLight(TGLLightSet::ELight light, Bool_t on); static voidTObject::SetObjectStat(Bool_t stat); voidSetSidePower(Float_t p); voidSetSpecularPower(Float_t p); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetUseSpecular(Bool_t s); virtual voidShowMembers(TMemberInspector&); voidStdSetupLights(const TGLBoundingBox& bbox, const TGLCamera& camera, Bool_t debug = kFALSE); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidToggleLight(TGLLightSet::ELight light); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLLightSet.html:4698,Test,TestBit,4698,root/html534/TGLLightSet.html,https://root.cern,https://root.cern/root/html534/TGLLightSet.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooAbsStudy&operator=(const RooAbsStudy&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidreleaseDetailData(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; voidstoreDetailedOutput(Bool_t flag); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); RooDataSet*summaryData(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsStudy.html:4846,Test,TestBit,4846,root/html528/RooAbsStudy.html,https://root.cern,https://root.cern/root/html528/RooAbsStudy.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidReleaseRangeX(); voidReleaseRangeY(); voidReleaseRangeZ(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetData(TH1* data); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMC(Int_t parm, TH1* MC); static voidTObject::SetObjectStat(Bool_t stat); voidSetRangeX(Int_t low, Int_t high); voidSetRangeY(Int_t low, Int_t high); voidSetRangeZ(Int_t low, Int_t high); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetWeight(Int_t parm, TH1* weight); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidUnConstrain(Int_t parm); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFractionFitter.html:9654,Test,TestBit,9654,root/html528/TFractionFitter.html,https://root.cern,https://root.cern/root/html528/TFractionFitter.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); ROOT::TSchemaRule::TSources&operator=(const ROOT::TSchemaRule::TSources&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; ROOT::TSchemaRule::TSourcesTSources(const ROOT::TSchemaRule::TSources&); ROOT::TSchemaRule::TSourcesTSources(const char* name = 0, const char* title = 0, const char* dims = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__TSchemaRule__TSources.html:4592,Test,TestBit,4592,root/html534/ROOT__TSchemaRule__TSources.html,https://root.cern,https://root.cern/root/html534/ROOT__TSchemaRule__TSources.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooDLLSignificanceMCSModule&operator=(const RooDLLSignificanceMCSModule&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Bool_tprocessAfterFit(Int_t); virtual Bool_tRooAbsMCStudyModule::processBeforeGen(Int_t); virtual Bool_tRooAbsMCStudyModule::processBetweenGenAndFit(Int_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooDLLSignificanceMCSModule.html:5708,Test,TestBit,5708,root/html528/RooDLLSignificanceMCSModule.html,https://root.cern,https://root.cern/root/html528/RooDLLSignificanceMCSModule.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject*operator()(const char* name) const; virtual voidPaint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual voidPrint(Option_t* option, Int_t recurse) const; virtual voidPrint(Option_t* option, const char* wildcard, Int_t recurse = 1) const; virtual voidPrint(Option_t* option, TPRegexp& regexp, Int_t recurse = 1) const; virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); virtual TObject*Remove(TObject* obj); voidRemoveAll(); virtual voidRemoveAll(TCollection* col); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCurrentCollection(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOwner(Bool_t enable = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); static voidStartGarbageCollection(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tWrite(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tWrite(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TCollection.html:6276,Test,TestBit,6276,root/html528/TCollection.html,https://root.cern,https://root.cern/root/html528/TCollection.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetElements(TList* e); voidSetMiniFrame(Bool_t r); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetRGBA(const Float_t* arr); voidSetRGBALine(const Float_t* arr); voidSetRnrElements(Bool_t r); voidSetRnrFrame(Bool_t r); voidSetRnrSelf(Bool_t r); voidSetShape(TGeoShape* s); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidSetTrans(const Double_t* arr); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveGeoShapeExtract.html:5296,Test,TestBit,5296,root/html530/TEveGeoShapeExtract.html,https://root.cern,https://root.cern/root/html530/TEveGeoShapeExtract.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"c voidTWebFile::SetProxy(const char* url); static voidTFile::SetReadaheadSize(Int_t bufsize = 256000); virtual voidTFile::SetReadCalls(Int_t readcalls = 0); static voidTFile::SetReadStreamerInfo(Bool_t readinfo = kTRUE); virtual voidTDirectoryFile::SetSeekDir(Long64_t v); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTDirectoryFile::SetTRefAction(TObject* ref, TObject* parent); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTDirectoryFile::SetWritable(Bool_t writable = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidTFile::ShowStreamerInfo(); static Bool_tTFile::ShrinkCacheFileDir(Long64_t shrinkSize, Long_t cleanupInteval = 0); virtual Int_tTFile::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidTFile::SumBuffer(Int_t bufsize); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TS3WebFile(const TS3WebFile&); TS3WebFile(const char* url, Option_t* options = """"); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTFile::Write(const char* name = 0, Int_t opt = 0, Int_t bufsiz = 0); virtual Int_tTFile::Write(const char* name = 0, Int_t opt = 0, Int_t bufsiz = 0) const; virtual Bool_tTFile::WriteBuffer(const char* buf, Int_t len); virtual voidTDirectoryFile::WriteDirHeader(); virtual voidTFile::WriteFree(); virtual voidTFile::WriteHeader(); virtual voidTDirectoryFile::WriteKeys(); virtual Int_tTDirectoryFile::WriteObjectAny(const void* obj, const char* classname, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tTDirectoryFile::WriteObjectAny(const void* obj, const TClass* cl, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual UShort_tTFile::WriteProcessID(TProcessID* pid); virtual voidTFile::WriteStreamerInfo(); virtual Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TS3WebFile.html:16035,Test,TestBits,16035,root/html602/TS3WebFile.html,https://root.cern,https://root.cern/root/html602/TS3WebFile.html,2,['Test'],['TestBits']
Testability,"c void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  Envelope (const TString &name, DataLoader *dataloader=nullptr, TFile *file=nullptr, const TString options="""");  Constructor for the initialization of Envelopes, differents Envelopes may needs differents constructors then this is a generic one protected. ;  ; DataInputHandler & GetDataLoaderDataInput ();  Utility method to get TMVA::DataInputHandler reference from the DataLoader. ;  ; DataSetInfo & GetDataLoaderDataSetInfo ();  Utility method to get TMVA::DataSetInfo reference from the DataLoader. ;  ; DataSetManager * GetDataLoaderDataSetManager ();  Utility method to get TMVA::DataSetManager pointer from the DataLoader. ;  ; TDirectory * RootBaseDir ();  Utility method to get base dir directory from current file. ;  ; void WriteDataInformation (TMVA::DataSetInfo &fDataSetInfo, TMVA::Types::EAnalysisType fAnalysisType);  method to save Train/Test information into the output file. ;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::shared_ptr< DataLoader > fDataLoader;  ! data ;  ; std::shared_ptr< TFile > fFile;  ! file to save the results ;  ; UInt_t fJobs;  ! number of jobs to run some high level algorithm in parallel ;  ; std::vector< OptionMap > fMethods;  ! Booked method information ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Envelope.html:14660,Test,Test,14660,doc/master/classTMVA_1_1Envelope.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Envelope.html,1,['Test'],['Test']
Testability,"c void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; bool operator< (const TCut &rhs);  ; bool operator<= (const TCut &rhs);  ; bool operator> (const TCut &rhs);  ; bool operator>= (const TCut &rhs);  . Friends; TCut operator! (const TCut &rhs);  Logical negation. ;  ; TCut operator&& (const char *lhs, const TCut &rhs);  Logical and. ;  ; TCut operator&& (const TCut &lhs, const char *rhs);  Logical and. ;  ; TCut operator&& (const TCut &lhs, const TCut &rhs);  Logical and. ;  ; TCut operator* (const char *lhs, const TCut &rhs);  Multiplication. ;  ; TCut operator* (const TCut &lhs, const char *rhs);  Multiplication. ;  ; TCut operator* (const TCut &lhs, const TCut &rhs);  Multiplication. ;  ; TCut operator+ (const char *lhs, const TCut &rhs);  Addition. ;  ; TCut operator+ (const TCut &lhs, const char *rhs);  Addition. ;  ; TCut operator+ (const TCut &lhs, const TCut &rhs);  Addition. ;  ; TCut operator|| (const char *lhs, const TCut &rhs);  Logical or. ;  ; TCut operator|| (const TCut &lhs, const char *rhs);  Logical or. ;  ; TCut operator|| (const TCut &lhs, const TCut &rhs);  Logical or. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCut.html:12516,Log,Logical,12516,doc/master/classTCut.html,https://root.cern,https://root.cern/doc/master/classTCut.html,1,['Log'],['Logical']
Testability,"c void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/roofit/roofitcore/src/RooRealMPFE.h>. Inheritance diagram for RooRealMPFE:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ Message. enum RooRealMPFE::Message. protected . EnumeratorSendReal ; SendCat ; Calculate ; Retrieve ; ReturnValue ; Terminate ; ConstOpt ; Verbose ; LogEvalError ; ApplyNLLW2 ; EnableOffset ; CalculateNoOffset . Definition at line 62 of file RooRealMPFE.h. ◆ State. enum RooRealMPFE::State. protected . EnumeratorInitialize ; Client ; Server ; Inline . Definition at line 59 of file RooRealMPFE.h. Constructor & Destructor Documentation. ◆ RooRealMPFE() [1/2]. RooRealMPFE::RooRealMPFE ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; arg, . bool ; calcInline = false . ). Construct front-end object for object 'arg' whose evaluation will be calculated asynchronously in a separate process. ; If calcInline is true the value of 'arg' is calculate synchronously in the current process. ; Definition at line 101 of file RooRealMPFE.cxx. ◆ RooRealMPFE() [2/2]. RooRealMPFE::RooRealMPFE ; (; const RooRealMPFE & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Initializes in clean state so that upon eval this instance will create its own server processes ; Definition at line 129 of file RooRealM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:63462,Log,LogEvalError,63462,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,1,['Log'],['LogEvalError']
Testability,"c with given timeout.; If clipPlanes is non-zero, test each element against its; clipping planes. Bool_t ResolveSelectRecord(TGLSelectRecord& rec, Int_t curIdx); Process selection record rec.; 'curIdx' is the item position where the scene should start; its processing.; Return TRUE if an object has been identified or FALSE otherwise.; The scene-info member of the record is already set by the caller. void CalcBoundingBox() const; Encapsulates all physical shapes bounding box with axes aligned box.; Validity checked in the base-class. void AdoptLogical(TGLLogicalShape& shape); Adopt dynamically created logical 'shape' - add to internal map; and take responsibility for deleting. Bool_t DestroyLogical(TObject* logid, Bool_t mustFind = kTRUE); Destroy logical shape defined by unique 'ID'.; Returns kTRUE if found/destroyed - kFALSE otherwise. If mustFind is true, an error is reported if the logical is not; found. Int_t DestroyLogicals(); Destroy all logical shapes in scene.; Return number of destroyed logicals. TGLLogicalShape * FindLogical(TObject* logid) const; Find and return logical shape identified by unqiue logid.; Returns 0 if not found. void AdoptPhysical(TGLPhysicalShape& shape); Adopt dynamically created physical 'shape' - add to internal map and take; responsibility for deleting. void DestroyPhysicalInternal(TGLScene::PhysicalShapeMapIt_t pit); Virtual function to destroy a physical. Sub-classes might have; special checks to perform.; Caller should also invalidate the draw-list. Bool_t DestroyPhysical(UInt_t phid); Destroy physical shape defined by unique 'ID'.; Returns kTRUE if found/destroyed - kFALSE otherwise. Int_t DestroyPhysicals(); Destroy physical shapes. TGLPhysicalShape* FindPhysical(UInt_t phid) const; Find and return physical shape identified by unqiue 'ID'.; Returns 0 if not found. UInt_t GetMaxPhysicalID(); Returns the maximum used physical id.; Returns 0 if empty. Bool_t BeginUpdate(); Put scene in update mode, return true if lock acquired. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLScene.html:11119,log,logicals,11119,root/html528/TGLScene.html,https://root.cern,https://root.cern/root/html528/TGLScene.html,6,['log'],['logicals']
Testability,"c. The default MINUIT error level; for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); value of the input function. ~RooMinuit(); Destructor. void setStrategy(Int_t strat); Change MINUIT strategy to istrat. Accepted codes; are 0,1,2 and represent MINUIT strategies for dealing; most efficiently with fast FCNs (0), expensive FCNs (2); and 'intermediate' FCNs (1). void setErrorLevel(Double_t level); Set the level for MINUIT error analysis to the given; value. This function overrides the default value; that is taken in the RooMinuit constructor from; the defaultErrorLevel() method of the input function. void setEps(Double_t eps); Change MINUIT epsilon. void setOffsetting(Bool_t flag); Enable internal likelihood offsetting for enhanced numeric precision. RooFitResult* fit(const char* options); Parse traditional RooAbsPdf::fitTo driver options. s - Run Hesse first to estimate initial step size; m - Run Migrad only; h - Run Hesse to estimate errors; v - Verbose mode; l - Log parameters after each Minuit steps to file; t - Activate profile timer; r - Save fit result; 0 - Run Migrad with strategy 0. Int_t migrad(); Execute MIGRAD. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t hesse(); Execute HESSE. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(); Execute MINOS. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(const RooArgSet& minosParamList); Execute MINOS for given list of parameters. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t seek(); Execute SEEK. C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMinuit.html:10022,Log,Log,10022,root/html534/RooMinuit.html,https://root.cern,https://root.cern/root/html534/RooMinuit.html,3,['Log'],['Log']
Testability,"c2"",""c2"",10,10,700,500);; 144 ; 145 gPad->DrawFrame(0.,-2.,10.,2);; 146 ; 147 TF1 *f1=new TF1(""f1"",""-x"",-10,10);; 148 TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; 149 A1->SetTitle(""axis with decreasing values"");; 150 A1->Draw();; 151 ; 152 TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; 153 TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; 154 A2->SetTitle(""exponential axis"");; 155 A2->SetLabelSize(0.03);; 156 A2->SetTitleSize(0.03);; 157 A2->SetTitleOffset(1.2);; 158 A2->Draw();; 159 ; 160 TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; 161 TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,"""");; 162 A3->SetTitle(""logarithmic axis"");; 163 A3->SetLabelSize(0.02);; 164 A3->SetTitleSize(0.03);; 165 A3->SetTitleOffset(0.); // Axis title automatically placed; 166 A3->Draw();; 167}; 168End_Macro; 169 ; 170Note that this functionality has some limitations and does not follow all the TGaxis setting.; 171In particular the number of divisions or the maximum number digits do not apply.; 172 ; 173\anchor GA02; 174## Logarithmic axis; 175 ; 176By default axis are linear. To define a `TGaxis` as logarithmic, it is; 177enough to create it with the option `""G""`.; 178 ; 179When plotting an histogram or a graph the logarithmic scale can be set using:; 180 ; 181 - `gPad->SetLogx(1);` set the logarithmic scale on the X axis; 182 - `gPad->SetLogy(1);` set the logarithmic scale on the Y axis; 183 ; 184When the `SetMoreLogLabels()` method is called more labels are drawn; 185when in logarithmic scale and there is a small number of decades (less than 3).; 186 ; 187\anchor GA03; 188## Blank axis; 189To draw only the axis tick marks without the axis body, it is enough to specify; 190the option `""B""`. It useful to superpose axis.; 191 ; 192\anchor GA03a; 193## Arrow on axis; 194\since **ROOT version 6.27/01:**; 195 ; 196To draw an arrow at the end of the axis use the option `"">""`. To draw it at the beginning; 197of the axis use the option `""<""`. To draw it on both ends use `""<>""`.; 198 ; 199Begin_Macro(source); 200{; 201 aut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:6212,Log,Logarithmic,6212,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,1,['Log'],['Logarithmic']
Testability,"c::SetData(RooAbsData& data); voidSetNToysInTails(int toysNull, int toysAlt); voidSetNullImportanceDensity(RooAbsPdf* p, const RooArgSet* s = NULL); virtual voidRooStats::HypoTestCalculatorGeneric::SetNullModel(const RooStats::ModelConfig& nullModel); voidSetToys(int toysNull, int toysAlt); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. virtual intRooStats::HypoTestCalculatorGeneric::CheckHook() const; virtual intPreAltHook(RooArgSet* parameterPoint, double obsTestStat) const; virtual intPreNullHook(RooArgSet* parameterPoint, double obsTestStat) const. Data Members; protected:. RooAbsPdf*fAltImportanceDensity; const RooArgSet*fAltImportanceSnapshot; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fAltModel; const RooAbsData*RooStats::HypoTestCalculatorGeneric::fData; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fDefaultSampler; RooStats::TestStatistic*RooStats::HypoTestCalculatorGeneric::fDefaultTestStat; intfNToysAlt; intfNToysAltTail; intfNToysNull; intfNToysNullTail; RooAbsPdf*fNullImportanceDensity; const RooArgSet*fNullImportanceSnapshot; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fNullModel; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fTestStatSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; int PreNullHook(RooArgSet* parameterPoint, double obsTestStat) const. int PreAltHook(RooArgSet* parameterPoint, double obsTestStat) const. FrequentistCalculator(const RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, RooStats::TestStatSampler* sampler = 0). ~FrequentistCalculator(). void SetNullImportanceDensity(RooAbsPdf* p, const RooArgSet* s = NULL); sets importance density and snapshot (optional). void SetAltImportanceDensity(RooAbsPdf* p, const RooArgSet* s = NULL); sets importance density and snapshot (optional). vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__FrequentistCalculator.html:2857,Test,TestStatSampler,2857,root/html530/RooStats__FrequentistCalculator.html,https://root.cern,https://root.cern/root/html530/RooStats__FrequentistCalculator.html,6,['Test'],"['TestStatSampler', 'TestStatistic']"
Testability,"c; SetOption(Option_t *option="""")TPolyLineinlinevirtual; SetPoint(Int_t point, Double_t x, Double_t y)TPolyLinevirtual; SetPolyLine(Int_t n)TPolyLinevirtual; SetPolyLine(Int_t n, Float_t *x, Float_t *y, Option_t *option="""")TPolyLinevirtual; SetPolyLine(Int_t n, Double_t *x, Double_t *y3, Option_t *option="""")TPolyLinevirtual; SetStartPoint(Double_t x1, Double_t y1)TCurlyLinevirtual; SetUniqueID(UInt_t uid)TObjectvirtual; SetWaveLength(Double_t WaveLength)TCurlyLinevirtual; SetWavy()TCurlyLinevirtual; Size() constTPolyLineinlinevirtual; Streamer(TBuffer &) overrideTCurlyLinevirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TCurlyLineinline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TAttFill()TAttFill; TAttFill(Color_t fcolor, Style_t fstyle)TAttFill; TAttLine()TAttLine; TAttLine(Color_t lcolor, Style_t lstyle, Width_t lwidth)TAttLine; TCurlyLine()TCurlyLine; TCurlyLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Double_t wl=.02, Double_t amp=.01)TCurlyLine; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; TPolyLine()TPolyLine; TPolyLine(Int_t n, Option_t *option="""")TPolyLine; TPolyLine(Int_t n, Float_t *x, Float_t *y, Option_t *option="""")TPolyLine; TPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""")TPolyLine; TPolyLine(const TPolyLine &polyline)TPolyLine; UseCurrentStyle()TObjectvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~TAttBBox2D()TAttBBox2Dvirtual; ~TAttFill()TAttFillvirtual; ~TAttLine()TAttLinevirtual; ~TCurlyLine() overrideTCurlyLineinline; ~TObject()TObjectvirtual; ~TPolyLine() overrideTPolyLine. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyLine-members.html:9263,Test,TestBit,9263,doc/master/classTCurlyLine-members.html,https://root.cern,https://root.cern/doc/master/classTCurlyLine-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,c;  MixMaxEngineImpl.h;  MixMaxEngineImpl17.cxx;  MixMaxEngineImpl240.cxx;  MixMaxEngineImpl256.cxx;  ParameterSettings.cxx;  PdfFuncMathCore.cxx;  ProbFuncMathCore.cxx;  QuantFuncMathCore.cxx;  RandomFunctions.cxx;  RichardsonDerivator.cxx;  RootFinder.cxx;  SparseData.cxx;  SpecFuncCephes.cxx;  SpecFuncCephes.h;  SpecFuncCephesInv.cxx;  SpecFuncMathCore.cxx;  StdEngine.cxx;  TComplex.cxx;  TKDTree.cxx;  TKDTreeBinning.cxx;  TMath.cxx;  TRandom.cxx;  TRandom1.cxx;  TRandom2.cxx;  TRandom3.cxx;  TRandomGen.cxx;  triangle.c;  triangle.h;  TStatistic.cxx;  UnBinData.cxx;  ► test;  ► fit;  GaussFunction.h;  MinimizerTypes.h;  SparseDataComparer.cxx;  SparseFit3.cxx;  SparseFit4.cxx;  testFit.cxx;  testFitPerf.cxx;  testGraphFit.cxx;  testMinim.cxx;  testRooFit.cxx;  WrapperRooPdf.h;  binarySearchTime.cxx;  kDTreeTest.cxx;  newKDTreeTest.cxx;  stdsort.cxx;  stressGoFTest.cxx;  stressTF1.cxx;  stressTMath.cxx;  testAnalyticalIntegrals.cxx;  testBinarySearch.cxx;  testDistSampler.cxx;  testIntegration.cxx;  testIntegrationMultiDim.cxx;  testKahan.cxx;  testkdTreeBinning.cxx;  testMathRandom.cxx;  testRootFinder.cxx;  testSampleQuantiles.cxx;  testSortOrder.cxx;  testSpecFuncBeta.cxx;  testSpecFuncBetaI.cxx;  testSpecFuncErf.cxx;  testSpecFuncGamma.cxx;  testSpecFuncSiCi.cxx;  testTMath.cxx;  testTStatistic.cxx;  ► v7;  ► inc;  ► ROOT;  TFit.hxx;  ► mathmore;  ► inc;  ► Math;  ChebyshevApprox.h;  Derivator.h;  DistFuncMathMore.h;  GSLFunctionAdapter.h;  GSLIntegrator.h;  GSLMCIntegrator.h;  GSLMinimizer.h;  GSLMinimizer1D.h;  GSLMultiRootFinder.h;  GSLNLSMinimizer.h;  GSLQuasiRandom.h;  GSLRandom.h;  GSLRandomFunctions.h;  GSLRndmEngines.h;  GSLRootFinder.h;  GSLRootFinderDeriv.h;  GSLRootHelper.h;  GSLSimAnMinimizer.h;  GSLSimAnnealing.h;  IntegrationTypes.h;  InterpolationTypes.h;  Interpolator.h;  KelvinFunctions.h;  LinkDef_Func.h;  LinkDef_RootFinding.h;  MCIntegrationTypes.h;  MCParameters.h;  MultiNumGradFunction.h;  MultiRootFinder.h;  ParamFunction.h;  PdfFuncMath,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:45110,test,testIntegration,45110,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['test'],['testIntegration']
Testability,c;  MixMaxEngineImpl.h;  MixMaxEngineImpl17.cxx;  MixMaxEngineImpl240.cxx;  MixMaxEngineImpl256.cxx;  ParameterSettings.cxx;  PdfFuncMathCore.cxx;  ProbFuncMathCore.cxx;  QuantFuncMathCore.cxx;  RandomFunctions.cxx;  RichardsonDerivator.cxx;  RootFinder.cxx;  SparseData.cxx;  SpecFuncCephes.cxx;  SpecFuncCephes.h;  SpecFuncCephesInv.cxx;  SpecFuncMathCore.cxx;  StdEngine.cxx;  TComplex.cxx;  TKDTree.cxx;  TKDTreeBinning.cxx;  TMath.cxx;  TRandom.cxx;  TRandom1.cxx;  TRandom2.cxx;  TRandom3.cxx;  TRandomGen.cxx;  triangle.c;  triangle.h;  TStatistic.cxx;  UnBinData.cxx;  ► test;  ► fit;  GaussFunction.h;  MinimizerTypes.h;  SparseDataComparer.cxx;  SparseFit3.cxx;  SparseFit4.cxx;  testFit.cxx;  testFitPerf.cxx;  testGraphFit.cxx;  testMinim.cxx;  testRooFit.cxx;  WrapperRooPdf.h;  binarySearchTime.cxx;  kDTreeTest.cxx;  newKDTreeTest.cxx;  stdsort.cxx;  stressGoFTest.cxx;  stressTF1.cxx;  stressTMath.cxx;  testAnalyticalIntegrals.cxx;  testBinarySearch.cxx;  testDistSampler.cxx;  testIntegration.cxx;  testIntegrationMultiDim.cxx;  testkdTreeBinning.cxx;  testMathRandom.cxx;  testRootFinder.cxx;  testSampleQuantiles.cxx;  testSortOrder.cxx;  testSpecFuncBeta.cxx;  testSpecFuncBetaI.cxx;  testSpecFuncErf.cxx;  testSpecFuncGamma.cxx;  testSpecFuncSiCi.cxx;  testTMath.cxx;  testTStatistic.cxx;  ► v7;  ► inc;  ► ROOT;  TFit.hxx;  ► mathmore;  ► inc;  ► Math;  ChebyshevApprox.h;  Derivator.h;  DistFuncMathMore.h;  GSLFunctionAdapter.h;  GSLIntegrator.h;  GSLMCIntegrator.h;  GSLMinimizer.h;  GSLMinimizer1D.h;  GSLMultiRootFinder.h;  GSLNLSMinimizer.h;  GSLQuasiRandom.h;  GSLRandom.h;  GSLRandomFunctions.h;  GSLRndmEngines.h;  GSLRootFinder.h;  GSLRootFinderDeriv.h;  GSLRootHelper.h;  GSLSimAnMinimizer.h;  GSLSimAnnealing.h;  IntegrationTypes.h;  InterpolationTypes.h;  Interpolator.h;  KelvinFunctions.h;  LinkDef.h;  LinkDef_Func.h;  LinkDef_RootFinding.h;  MCIntegrationTypes.h;  MCParameters.h;  MultiNumGradFunction.h;  MultiRootFinder.h;  ParamFunction.h;  PdfFuncMathMore,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:46536,test,testIntegration,46536,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['test'],['testIntegration']
Testability,"cCalculator&); RooStats::AsymptoticCalculatorAsymptoticCalculator(RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel); static TClass*Class(); static RooAbsData*GenerateAsimovData(const RooAbsPdf& pdf, const RooArgSet& observables); const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::GetAlternateModel() const; const RooAbsData*RooStats::HypoTestCalculatorGeneric::GetData() const; static doubleGetExpectedPValues(double pnull, double palt, double nsigma, bool usecls); virtual RooStats::HypoTestResult*GetHypoTest() const; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::GetNullModel() const; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::GetTestStatSampler() const; RooStats::HypoTestCalculatorGenericRooStats::HypoTestCalculatorGeneric::HypoTestCalculatorGeneric(const RooStats::HypoTestCalculatorGeneric&); RooStats::HypoTestCalculatorGenericRooStats::HypoTestCalculatorGeneric::HypoTestCalculatorGeneric(const RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, RooStats::TestStatSampler* sampler = 0); virtual TClass*IsA() const; static RooAbsData*MakeAsimovData(RooAbsData& data, const RooStats::ModelConfig& model, const RooArgSet& paramValues, RooArgSet& globObs); RooStats::HypoTestCalculator&RooStats::HypoTestCalculator::operator=(const RooStats::HypoTestCalculator&); virtual voidRooStats::HypoTestCalculatorGeneric::SetAlternateModel(const RooStats::ModelConfig& altModel); virtual voidRooStats::HypoTestCalculator::SetCommonModel(const RooStats::ModelConfig& model); virtual voidRooStats::HypoTestCalculatorGeneric::SetData(RooAbsData& data); virtual voidRooStats::HypoTestCalculatorGeneric::SetNullModel(const RooStats::ModelConfig& nullModel); voidSetOneSided(bool on); static voidSetPrintLevel(int level); voidSetQTilde(bool on); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__AsymptoticCalculator.html:1644,Test,TestStatSampler,1644,root/html532/RooStats__AsymptoticCalculator.html,https://root.cern,https://root.cern/root/html532/RooStats__AsymptoticCalculator.html,1,['Test'],['TestStatSampler']
Testability,cFuncCephes.cxx;  SpecFuncCephes.h;  SpecFuncCephesInv.cxx;  SpecFuncMathCore.cxx;  TComplex.cxx;  TDataPointN.cxx;  TKDTree.cxx;  TKDTreeBinning.cxx;  TMath.cxx;  TRandom.cxx;  TRandom1.cxx;  TRandom2.cxx;  TRandom3.cxx;  triangle.c;  triangle.h;  TStatistic.cxx;  UnBinData.cxx;  ► test;  ► fit;  GaussFunction.h;  MinimizerTypes.h;  SparseDataComparer.cxx;  SparseFit3.cxx;  SparseFit4.cxx;  testFit.cxx;  testFitPerf.cxx;  testGraphFit.cxx;  testMinim.cxx;  testRooFit.cxx;  WrapperRooPdf.h;  binarySearchTime.cxx;  kDTreeTest.cxx;  newKDTreeTest.cxx;  stdsort.cxx;  stressGoFTest.cxx;  stressTF1.cxx;  stressTMath.cxx;  testAnalyticalIntegrals.cxx;  testBinarySearch.cxx;  testDistSampler.cxx;  testIntegration.cxx;  testIntegrationMultiDim.cxx;  testkdTreeBinning.cxx;  testMathRandom.cxx;  testRootFinder.cxx;  testSampleQuantiles.cxx;  testSortOrder.cxx;  testSpecFuncBeta.cxx;  testSpecFuncBetaI.cxx;  testSpecFuncErf.cxx;  testSpecFuncGamma.cxx;  testSpecFuncSiCi.cxx;  testTMath.cxx;  testTStatistic.cxx;  ► v7;  ► inc;  ► ROOT;  TFit.h;  ► mathmore;  ► inc;  ► Math;  ChebyshevApprox.h;  Derivator.h;  DistFuncMathMore.h;  GSLFunctionAdapter.h;  GSLIntegrator.h;  GSLMCIntegrator.h;  GSLMinimizer.h;  GSLMinimizer1D.h;  GSLMultiRootFinder.h;  GSLNLSMinimizer.h;  GSLQuasiRandom.h;  GSLRandom.h;  GSLRandomFunctions.h;  GSLRndmEngines.h;  GSLRootFinder.h;  GSLRootFinderDeriv.h;  GSLRootHelper.h;  GSLSimAnMinimizer.h;  GSLSimAnnealing.h;  IntegrationTypes.h;  InterpolationTypes.h;  Interpolator.h;  KelvinFunctions.h;  LinkDef.h;  LinkDef_Func.h;  LinkDef_RootFinding.h;  MCIntegrationTypes.h;  MCParameters.h;  MultiNumGradFunction.h;  MultiRootFinder.h;  ParamFunction.h;  PdfFuncMathMore.h;  Polynomial.h;  QuantFuncMathMore.h;  QuasiRandom.h;  RootFinderAlgorithms.h;  SpecFuncMathMore.h;  Vavilov.h;  VavilovAccurate.h;  VavilovAccurateCdf.h;  VavilovAccuratePdf.h;  VavilovAccurateQuantile.h;  VavilovFast.h;  ► src;  cblas.cxx;  ChebyshevApprox.cxx;  complex_quartic.h;  Derivator.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:46488,test,testTStatistic,46488,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['test'],['testTStatistic']
Testability,"cPointer to user theoretical function (a TF1*)Definition TVirtualFitter.h:44; TVirtualFitter::GetFitOptionvirtual Foption_t GetFitOption() constDefinition TVirtualFitter.h:73; TVirtualFitter::SetFCNvirtual void SetFCN(void(*fcn)(Int_t &, Double_t *, Double_t &f, Double_t *, Int_t))To set the address of the minimization objective function called by the native compiler (see function...Definition TVirtualFitter.cxx:267; TVirtualFitter::fCacheDouble_t * fCache[fCacheSize] Array of points data (fNpoints*fPointSize < fCacheSize words)Definition TVirtualFitter.h:42; TVirtualFitter::fFCNvoid(* fFCN)(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag)Definition TVirtualFitter.h:46; TVirtualFitter::GetFitterstatic TVirtualFitter * GetFitter()static: return the current FitterDefinition TVirtualFitter.cxx:209; TVirtualFitter::GetUserFuncvirtual TObject * GetUserFunc() constDefinition TVirtualFitter.h:84; TVirtualFitter::fNpointsInt_t fNpointsNumber of points to fit.Definition TVirtualFitter.h:39; bool; double; int; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; eyDouble_t ey[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; grTGraphErrors * grDefinition legend1.C:25; f1TF1 * f1Definition legend1.C:11; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::LogDouble_t Log(Double_t x)Returns the natural logarithm of x.Definition TMath.h:756; TMath::SqrtDouble_t Sqrt(Double_t x)Returns the square root of x.Definition TMath.h:662; TMath::AbsShort_t Abs(Short_t d)Returns the absolute value of parameter Short_t d.Definition TMathBase.h:123; Foption_tDefinition Foption.h:24; Foption_t::W1int W1Definition Foption.h:36; Foption_t::Integralint IntegralDefinition Foption.h:44; lTLine lDefinition textangle.C:4; t1auto * t1Definition textangle.C:20. mathfumilisrcTFumili.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:39 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8cxx_source.html:80891,Log,Log,80891,doc/master/TFumili_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8cxx_source.html,2,"['Log', 'log']","['Log', 'logarithm']"
Testability,"c_cast<TLeaf*>(fLeaves.UncheckedAt(0));; 1477 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kExternal)) {; 1478 return -1;; 1479 }; 1480 ; 1481 // Remember which entry we are reading.; 1482 fReadEntry = entry;; 1483 ; 1484 bool enabled = !TestBit(kDoNotProcess);; 1485 if (R__unlikely(!enabled)) return -1;; 1486 TBasket *basket = nullptr;; 1487 Long64_t first;; 1488 Int_t result = GetBasketAndFirst(basket, first, &user_buf);; 1489 if (R__unlikely(result < 0)) return -1;; 1490 // Only support reading from full clusters.; 1491 if (R__unlikely(entry != first)) {; 1492 //printf(""Failed to read from full cluster; first entry is %ld; requested entry is %ld.\n"", first, entry);; 1493 return -1;; 1494 }; 1495 ; 1496 basket->PrepareBasket(entry);; 1497 TBuffer* buf = basket->GetBufferRef();; 1498 ; 1499 // Test for very old ROOT files.; 1500 if (R__unlikely(!buf)) {; 1501 Error(""GetBulkEntries"", ""Failed to get a new buffer.\n"");; 1502 return -1;; 1503 }; 1504 // Test for displacements, which aren't supported in fast mode.; 1505 if (R__unlikely(basket->GetDisplacement())) {; 1506 Error(""GetBulkEntries"", ""Basket has displacement.\n"");; 1507 return -1;; 1508 }; 1509 ; 1510 if (&user_buf != buf) {; 1511 // The basket was already in memory and might (and might not) be backed by persistent; 1512 // storage.; 1513 R__ASSERT(result == fReadBasket);; 1514 if (fBasketSeek[fReadBasket]) {; 1515 // It is backed, so we can be destructive; 1516 user_buf.SetBuffer(buf->Buffer(), buf->BufferSize());; 1517 buf->ResetBit(TBufferIO::kIsOwner);; 1518 fCurrentBasket = nullptr;; 1519 fBaskets[fReadBasket] = nullptr;; 1520 } else {; 1521 // This is the only copy, we can't return it as is to the user, just make a copy.; 1522 if (user_buf.BufferSize() < buf->BufferSize()) {; 1523 user_buf.AutoExpand(buf->BufferSize());; 1524 }; 1525 memcpy(user_buf.Buffer(), buf->Buffer(), buf->BufferSize());; 1526 }; 1527 }; 1528 ; 1529 Int_t bufbegin = basket->GetKeylen();; 1530 user_buf.SetB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:54046,Test,Test,54046,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,1,['Test'],['Test']
Testability,"cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class CacheElem;  Current normalization set. ;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #incl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorph.html:73120,test,testArg,73120,doc/master/classRooMomentMorph.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorph.html,4,['test'],['testArg']
Testability,"cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class CacheElem;  Current normalization set. ;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooMomentMorphFunc.h>. Inheritance diagram for RooMomentMorphFunc:. This browser is not able to show SVG: try Firefox, Chr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFunc.html:59743,test,testArg,59743,doc/master/classRooMomentMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFunc.html,4,['test'],['testArg']
Testability,"cache. RooExpensiveObjectCache RooWorkspace::_eocache. private . Cache for expensive objects. ; Definition at line 272 of file RooWorkspace.h. ◆ _exportNSName. std::string RooWorkspace::_exportNSName. private . ! Name of CINT namespace to which contents are exported ; Definition at line 277 of file RooWorkspace.h. ◆ _factory. std::unique_ptr<RooFactoryWSTool> RooWorkspace::_factory. private . ! Factory tool associated with workspace ; Definition at line 274 of file RooWorkspace.h. ◆ _genObjects. RooLinkedList RooWorkspace::_genObjects. private . List of generic objects. ; Definition at line 266 of file RooWorkspace.h. ◆ _namedSets. std::map<std::string, RooArgSet> RooWorkspace::_namedSets. private . Map of named RooArgSets. ; Definition at line 268 of file RooWorkspace.h. ◆ _openTrans. bool RooWorkspace::_openTrans = false. private . ! Is there a transaction open? ; Definition at line 279 of file RooWorkspace.h. ◆ _sandboxNodes. RooArgSet RooWorkspace::_sandboxNodes. private . ! Sandbox for incoming objects in a transaction ; Definition at line 280 of file RooWorkspace.h. ◆ _snapshots. RooLinkedList RooWorkspace::_snapshots. private . List of parameter snapshots. ; Definition at line 265 of file RooWorkspace.h. ◆ _studyMods. RooLinkedList RooWorkspace::_studyMods. private . List if StudyManager modules. ; Definition at line 267 of file RooWorkspace.h. ◆ _uuid. TUUID RooWorkspace::_uuid. private . Definition at line 255 of file RooWorkspace.h. ◆ _views. RooLinkedList RooWorkspace::_views. private . List of model views. ; Definition at line 264 of file RooWorkspace.h. Libraries for RooWorkspace:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooWorkspace.h; roofit/roofitcore/src/RooWorkspace.cxx; /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/pyzdoc/_roofit.pyzdoc. RooWorkspace. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:52956,Sandbox,Sandbox,52956,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['Sandbox'],['Sandbox']
Testability,"cachedIntegral->setCacheSource(true) ;; 561 if (normInt->operMode()==ADirty) {; 562 cachedIntegral->setOperMode(ADirty) ;; 563 }; 564 normInt= cachedIntegral ;; 565 }; 566 ; 567 }; 568 _norm = normInt ;; 569 }; 570 ; 571 // Register new normalization with manager (takes ownership); 572 cache = new CacheElem(*_norm) ;; 573 _normMgr.setObj(nset,cache) ;; 574 ; 575// cout << ""making new object "" << _norm->GetName() << endl ;; 576 ; 577 return true ;; 578}; 579 ; 580 ; 581 ; 582////////////////////////////////////////////////////////////////////////////////; 583/// Reset error counter to given value, limiting the number; 584/// of future error messages for this pdf to 'resetValue'; 585 ; 586void RooAbsPdf::resetErrorCounters(Int_t resetValue); 587{; 588 _errorCount = resetValue ;; 589 _negCount = resetValue ;; 590}; 591 ; 592 ; 593 ; 594////////////////////////////////////////////////////////////////////////////////; 595/// Reset trace counter to given value, limiting the; 596/// number of future trace messages for this pdf to 'value'; 597 ; 598void RooAbsPdf::setTraceCounter(Int_t value, bool allNodes); 599{; 600 if (!allNodes) {; 601 _traceCount = value ;; 602 return ;; 603 } else {; 604 RooArgList branchList ;; 605 branchNodeServerList(&branchList) ;; 606 for(auto * pdf : dynamic_range_cast<RooAbsPdf*>(branchList)) {; 607 if (pdf) pdf->setTraceCounter(value,false) ;; 608 }; 609 }; 610 ; 611}; 612 ; 613 ; 614 ; 615 ; 616////////////////////////////////////////////////////////////////////////////////; 617/// Return the log of the current value with given normalization; 618/// An error message is printed if the argument of the log is negative.; 619 ; 620double RooAbsPdf::getLogVal(const RooArgSet* nset) const; 621{; 622 return getLog(getVal(nset), this);; 623}; 624 ; 625 ; 626////////////////////////////////////////////////////////////////////////////////; 627/// Check for infinity or NaN.; 628/// \param[in] inputs Array to check; 629/// \return True if either infinity ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:23479,log,log,23479,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,2,['log'],['log']
Testability,"cal layout changes slightly from big endian to little endian so that it matches the in-memory layout on most modern architectures. Combined with a clear separation of offset/index data and payload data for collections, uncompressed RNTuple data can be directly mapped to memory without further copies. Goals; RNTuple shall investigate improvements of the TTree I/O in the following ways. More speed; Improve mapping to vectorized and parallel hardware; For types known at compile / JIT time: generate optimized code; Optimized for simple types (float, int, and vectors of them); Better memory control: work with a fixed budget of pre-defined I/O buffers; Naturally thread-safe and asynchronous interfaces. More robust interfaces; Compile-time type safety by default; Decomposition into layers: logical layer, primitives layer, storage layer; Separation of data model and live data; Self-contained I/O code to support creation of a standalone I/O library. Concepts; At the logical layer, the user defines a data model using the RNTupleModel class. The data model is a collection of serializable C++ types with associated names, similar to branches in a TTree. The data model can contain (nested) collections, e.g., a type can be std::vector<std::vector<float>>.; Each serializable type is represented by a field, concretely by a templated version of RField, e.g. RField<double>. A field can generate or adopt an associated value, which represents a memory location storing a value of the given C++ type. These distinguished memory locations are the destinations and sources for the deserialization and serialization.; The (de-)serialization is a mapping from the C++ type to the more simple column type system. A column contains an arbitrary number of fixed-sized elements of a well-defined set of types: integers and floats of different bit sizes. A C++ type may be mapped to multiple columns. For instance, an std::vector<float> maps to two columns, an offset column indicating the size of the vecto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/md_tree_2ntuple_2v7_2doc_2README.html:1560,log,logical,1560,doc/master/md_tree_2ntuple_2v7_2doc_2README.html,https://root.cern,https://root.cern/doc/master/md_tree_2ntuple_2v7_2doc_2README.html,1,['log'],['logical']
Testability,"cal shape. void UpdatePhysical(UInt_t phid, Double_t* trans, Color_t cidx = -1, UChar_t transp = 0); Reposition/recolor physical shape. void UpdatePhysioLogical(TObject* logid, Double_t* trans, UChar_t* col); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). void UpdatePhysioLogical(TObject* logid, Double_t* trans, Color_t cidx, UChar_t transp); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). UInt_t BeginSmartRefresh(); Moves logicals that support smart-refresh to intermediate cache.; Destroys the others and returns the number of destroyed ones. void EndSmartRefresh(); Wipes logicals in refresh-cache. TGLLogicalShape * FindLogicalSmartRefresh(TObject* ID) const; Find and return logical shape identified by unqiue 'ID' in refresh-cache.; Returns 0 if not found. UInt_t SizeOfScene() const; Return memory cost of scene.; Warning: NOT CORRECT at present - doesn't correctly calculate size.; of logical shapes with dynamic internal contents. void DumpMapSizes() const; Print sizes of logical nad physical-shape maps. void RGBAFromColorIdx(Float_t* rgba, Color_t ci, Char_t transp = 0); Fill rgba color from ROOT color-index ci and transparency (0->100). Bool_t IsOutside(const TGLBoundingBox& box, const TGLPlaneSet_t& planes); Check if box is outside of all planes. TGLScene(const TGLScene& ). TGLScene& operator=(const TGLScene& ). TSceneInfo* CreateSceneInfo(TGLViewerBase* view). LogicalShapeMap_t& RefLogicalShapes(); Temporary export for setting selected-state of physical shapes. { return fLogicalShapes; }. TGLContextIdentity* GetGLCtxIdentity() const. GL-context holding display-list definitions. { return fGLCtxIdentity; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general plea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLScene.html:14487,log,logical,14487,root/html534/TGLScene.html,https://root.cern,https://root.cern/root/html534/TGLScene.html,1,['log'],['logical']
Testability,"cal shape. void UpdatePhysical(UInt_t phid, Double_t* trans, Color_t cidx = -1, UChar_t transp = 0); Reposition/recolor physical shape. void UpdatePhysioLogical(TObject* logid, Double_t* trans, UChar_t* col); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). void UpdatePhysioLogical(TObject* logid, Double_t* trans, Color_t cidx, UChar_t transp); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). UInt_t BeginSmartRefresh(); Moves logicals that support smart-refresh to intermediate cache.; Destroys the others and returns the number of destroyed ones. void EndSmartRefresh(); Wipes logicals in refresh-cache. TGLLogicalShape * FindLogicalSmartRefresh(TObject* ID) const; Find and return logical shape identified by unqiue 'ID' in refresh-cache.; Returns 0 if not found. UInt_t SizeOfScene() const; Return memory cost of scene.; Warning: NOT CORRECT at present - doesn't correctly calculate size.; of logical shapes with dynamic internal contents. void DumpMapSizes() const; Print sizes of logical nad physical-shape maps. void RGBAFromColorIdx(Float_t* rgba, Color_t ci, Char_t transp = 0); Fill rgba color from ROOT color-index ci and transparency (0->100). Bool_t IsOutside(const TGLBoundingBox& box, const TGLPlaneSet_t& planes); Check if box is outside of all planes. TGLScene(const TGLScene& ). TGLScene& operator=(const TGLScene& ). TSceneInfo* CreateSceneInfo(TGLViewerBase* view). LogicalShapeMap_t& RefLogicalShapes(); Temporary export for setting selected-state of physical shapes. { return fLogicalShapes; }. TGLContextIdentity* GetGLCtxIdentity() const. GL-context holding display-list definitions. { return fGLCtxIdentity; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLScene.h 32334 2010-02-12 11:52:13Z matevz $ » Last generated: 2010-12-08 16:56; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLScene.html:13978,log,logical,13978,root/html528/TGLScene.html,https://root.cern,https://root.cern/root/html528/TGLScene.html,1,['log'],['logical']
Testability,"cal shape. void UpdatePhysical(UInt_t phid, Double_t* trans, Color_t cidx = -1, UChar_t transp = 0); Reposition/recolor physical shape. void UpdatePhysioLogical(TObject* logid, Double_t* trans, UChar_t* col); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). void UpdatePhysioLogical(TObject* logid, Double_t* trans, Color_t cidx, UChar_t transp); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). UInt_t BeginSmartRefresh(); Moves logicals that support smart-refresh to intermediate cache.; Destroys the others and returns the number of destroyed ones. void EndSmartRefresh(); Wipes logicals in refresh-cache. TGLLogicalShape * FindLogicalSmartRefresh(TObject* ID) const; Find and return logical shape identified by unqiue 'ID' in refresh-cache.; Returns 0 if not found. UInt_t SizeOfScene() const; Return memory cost of scene.; Warning: NOT CORRECT at present - doesn't correctly calculate size.; of logical shapes with dynamic internal contents. void DumpMapSizes() const; Print sizes of logical nad physical-shape maps. void RGBAFromColorIdx(Float_t* rgba, Color_t ci, Char_t transp = 0); Fill rgba color from ROOT color-index ci and transparency (0->100). Bool_t IsOutside(const TGLBoundingBox& box, const TGLPlaneSet_t& planes); Check if box is outside of all planes. TGLScene(const TGLScene& ). TGLScene& operator=(const TGLScene& ). TSceneInfo* CreateSceneInfo(TGLViewerBase* view). LogicalShapeMap_t& RefLogicalShapes(); Temporary export for setting selected-state of physical shapes. { return fLogicalShapes; }. TGLContextIdentity* GetGLCtxIdentity() const. GL-context holding display-list definitions. { return fGLCtxIdentity; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLScene.h 32334 2010-02-12 11:52:13Z matevz $ » Last generated: 2011-07-04 15:29; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGLScene.html:13978,log,logical,13978,root/html530/TGLScene.html,https://root.cern,https://root.cern/root/html530/TGLScene.html,1,['log'],['logical']
Testability,"cal shape. void UpdatePhysical(UInt_t phid, Double_t* trans, Color_t cidx = -1, UChar_t transp = 0); Reposition/recolor physical shape. void UpdatePhysioLogical(TObject* logid, Double_t* trans, UChar_t* col); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). void UpdatePhysioLogical(TObject* logid, Double_t* trans, Color_t cidx, UChar_t transp); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). UInt_t BeginSmartRefresh(); Moves logicals that support smart-refresh to intermediate cache.; Destroys the others and returns the number of destroyed ones. void EndSmartRefresh(); Wipes logicals in refresh-cache. TGLLogicalShape * FindLogicalSmartRefresh(TObject* ID) const; Find and return logical shape identified by unqiue 'ID' in refresh-cache.; Returns 0 if not found. UInt_t SizeOfScene() const; Return memory cost of scene.; Warning: NOT CORRECT at present - doesn't correctly calculate size.; of logical shapes with dynamic internal contents. void DumpMapSizes() const; Print sizes of logical nad physical-shape maps. void RGBAFromColorIdx(Float_t* rgba, Color_t ci, Char_t transp = 0); Fill rgba color from ROOT color-index ci and transparency (0->100). Bool_t IsOutside(const TGLBoundingBox& box, const TGLPlaneSet_t& planes); Check if box is outside of all planes. TGLScene(const TGLScene& ). TGLScene& operator=(const TGLScene& ). TSceneInfo* CreateSceneInfo(TGLViewerBase* view). LogicalShapeMap_t& RefLogicalShapes(); Temporary export for setting selected-state of physical shapes. { return fLogicalShapes; }. TGLContextIdentity* GetGLCtxIdentity() const. GL-context holding display-list definitions. { return fGLCtxIdentity; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLScene.h 32334 2010-02-12 11:52:13Z matevz $ » Last generated: 2011-11-03 20:14; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLScene.html:13978,log,logical,13978,root/html532/TGLScene.html,https://root.cern,https://root.cern/root/html532/TGLScene.html,1,['log'],['logical']
Testability,"cal shape. void UpdatePhysical(UInt_t phid, Double_t* trans, Color_t cidx = -1, UChar_t transp = 0); Reposition/recolor physical shape. void UpdatePhysioLogical(TObject* logid, Double_t* trans, UChar_t* col); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). void UpdatePhysioLogical(TObject* logid, Double_t* trans, Color_t cidx, UChar_t transp); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). UInt_t BeginSmartRefresh(); Moves logicals that support smart-refresh to intermediate cache.; Destroys the others and returns the number of destroyed ones. void EndSmartRefresh(); Wipes logicals in refresh-cache. TGLLogicalShape * FindLogicalSmartRefresh(TObject* ID) const; Find and return logical shape identified by unqiue 'ID' in refresh-cache.; Returns 0 if not found. UInt_t SizeOfScene() const; Return memory cost of scene.; Warning: NOT CORRECT at present - doesn't correctly calculate size.; of logical shapes with dynamic internal contents. void DumpMapSizes() const; Print sizes of logical nad physical-shape maps. void RGBAFromColorIdx(Float_t[4] rgba, Color_t ci, Char_t transp = 0); Fill rgba color from ROOT color-index ci and transparency (0->100). Bool_t IsOutside(const TGLBoundingBox& box, const TGLPlaneSet_t& planes); Check if box is outside of all planes. TGLScene(const TGLScene& ). TGLScene& operator=(const TGLScene& ). TSceneInfo* CreateSceneInfo(TGLViewerBase* view). LogicalShapeMap_t& RefLogicalShapes(); Temporary export for setting selected-state of physical shapes. { return fLogicalShapes; }. TGLContextIdentity* GetGLCtxIdentity() const. GL-context holding display-list definitions. { return fGLCtxIdentity; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-02 15:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general pl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLScene.html:14615,log,logical,14615,root/html604/TGLScene.html,https://root.cern,https://root.cern/root/html604/TGLScene.html,1,['log'],['logical']
Testability,"cal shape. void UpdatePhysical(UInt_t phid, Double_t* trans, Color_t cidx = -1, UChar_t transp = 0); Reposition/recolor physical shape. void UpdatePhysioLogical(TObject* logid, Double_t* trans, UChar_t* col); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). void UpdatePhysioLogical(TObject* logid, Double_t* trans, Color_t cidx, UChar_t transp); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). UInt_t BeginSmartRefresh(); Moves logicals that support smart-refresh to intermediate cache.; Destroys the others and returns the number of destroyed ones. void EndSmartRefresh(); Wipes logicals in refresh-cache. TGLLogicalShape * FindLogicalSmartRefresh(TObject* ID) const; Find and return logical shape identified by unqiue 'ID' in refresh-cache.; Returns 0 if not found. UInt_t SizeOfScene() const; Return memory cost of scene.; Warning: NOT CORRECT at present - doesn't correctly calculate size.; of logical shapes with dynamic internal contents. void DumpMapSizes() const; Print sizes of logical nad physical-shape maps. void RGBAFromColorIdx(Float_t[4] rgba, Color_t ci, Char_t transp = 0); Fill rgba color from ROOT color-index ci and transparency (0->100). Bool_t IsOutside(const TGLBoundingBox& box, const TGLPlaneSet_t& planes); Check if box is outside of all planes. TGLScene(const TGLScene& ). TGLScene& operator=(const TGLScene& ). TSceneInfo* CreateSceneInfo(TGLViewerBase* view). LogicalShapeMap_t& RefLogicalShapes(); Temporary export for setting selected-state of physical shapes. { return fLogicalShapes; }. TGLContextIdentity* GetGLCtxIdentity() const. GL-context holding display-list definitions. { return fGLCtxIdentity; }. » Author: Matevz Tadel, Feb 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-30 14:53; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general pl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLScene.html:14615,log,logical,14615,root/html602/TGLScene.html,https://root.cern,https://root.cern/root/html602/TGLScene.html,1,['log'],['logical']
Testability,"cal(TGLPhysicalShape& shape); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBeginScene(); UInt_tTGLScene::BeginSmartRefresh(); virtual Bool_tTGLScene::BeginUpdate(); const TGLBoundingBox&TGLSceneBase::BoundingBox() const; virtual voidTObject::Browse(TBrowser* b); virtual Bool_tBuildingScene() const; virtual voidTGLScene::CalcBoundingBox() const; virtual Bool_tCanLoopOnPrimitives() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); TGLClip*TGLSceneBase::Clip() const; virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidCloseComposite(); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual TGLScene::TSceneInfo*TGLScene::CreateSceneInfo(TGLViewerBase* view); TGLLockable::ELockTGLLockable::CurrentLock() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Bool_tTGLScene::DestroyLogical(TObject* logid, Bool_t mustFind = kTRUE); virtual Int_tTGLScene::DestroyLogicals(); virtual Bool_tTGLScene::DestroyPhysical(UInt_t phid); virtual Int_tTGLScene::DestroyPhysicals(); virtual Int_tDistancetoPrimitive(Int_t, Int_t); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTVirtualViewer3D::DrawViewer(); virtual voidTObject::Dump() constMENU ; voidTGLScene::DumpMapSizes() const; virtual voidEndScene(); voidTGLScene::EndSmartRefresh(); virtual voidTGLScene::EndUpdate(Bool_t minorChange = kTRUE, Bool_t sceneChanged = kTRUE, Bool_t updateViewers = kTRUE); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t, Int_t, Int_t); virtual voidTObject::Fatal(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLScenePad.html:1984,log,logid,1984,root/html528/TGLScenePad.html,https://root.cern,https://root.cern/root/html528/TGLScenePad.html,6,['log'],['logid']
Testability,"cal(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsTestStatistic::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tisSealed() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueDirtyAndClear() const; Bool_tRooAbsArg::isValueOrShapeDirtyAndClear() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; Bool_tRooAbsArg::localNoDirtyInhibit() const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsOptTestStatistic.html:18686,log,logEvalError,18686,root/html534/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html534/RooAbsOptTestStatistic.html,3,['log'],['logEvalError']
Testability,"calCleanup); voidTGFrame::SetDNDSource(Bool_t onoff); voidTGFrame::SetDNDTarget(Bool_t onoff); virtual voidTGFrame::SetDragType(Int_t type); virtual voidTGFrame::SetDrawOption(Option_t* = """"); virtual voidTGFrame::SetDropType(Int_t type); static voidTObject::SetDtorOnly(void* obj); virtual voidTGFrame::SetEditable(Bool_t); virtual voidTGWindow::SetEditDisabled(UInt_t on = kEditDisable); static voidSetFillStyle(TGGC* gc, Style_t fstyle); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGFrame::SetLayoutBroken(Bool_t = kTRUE); virtual voidTGWindow::SetMapSubwindows(Bool_t); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGedPatternFrame(const TGedPatternFrame&); TGedPatternFrame(const TGWindow* p, Style_t pattern, Int_t width = 40, Int_t height = 20); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGedPatternFrame.html:13522,Test,TestBit,13522,root/html602/TGedPatternFrame.html,https://root.cern,https://root.cern/root/html602/TGedPatternFrame.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"calCleanup); voidTGFrame::SetDNDSource(Bool_t onoff); voidTGFrame::SetDNDTarget(Bool_t onoff); virtual voidTGFrame::SetDragType(Int_t type); virtual voidTGFrame::SetDrawOption(Option_t* = """"); virtual voidTGFrame::SetDropType(Int_t type); static voidTObject::SetDtorOnly(void* obj); virtual voidTGFrame::SetEditable(Bool_t); virtual voidTGWindow::SetEditDisabled(UInt_t on = kEditDisable); virtual voidTGFrame::SetForegroundColor(Pixel_t); voidTGFrame::SetFrameElement(TGFrameElement* fe); virtual voidTGFrame::SetHeight(UInt_t h); virtual voidTGIcon::SetImage(const char* img); virtual voidTGIcon::SetImage(TImage* img); virtual voidTGIcon::SetImagePath(const char* path); virtual voidTGFrame::SetLayoutBroken(Bool_t = kTRUE); virtual voidTGWindow::SetMapSubwindows(Bool_t); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGIcon::SetPicture(const TGPicture* pic); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGMdiTitleIcon.html:13397,Test,TestBit,13397,root/html534/TGMdiTitleIcon.html,https://root.cern,https://root.cern/root/html534/TGMdiTitleIcon.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"calNode();; 59 TGeoPhysicalNode(const char *path);; 60 // destructor; 61 ~TGeoPhysicalNode() override;; 62 ; 63 Bool_t; 64 Align(TGeoMatrix *newmat = nullptr, TGeoShape *newshape = nullptr, Bool_t check = kFALSE, Double_t ovlp = 0.001);; 65 void cd() const;; 66 void Draw(Option_t *option = """") override;; 67 Int_t GetLevel() const { return fLevel; }; 68 TGeoHMatrix *GetMatrix(Int_t level = -1) const;; 69 TGeoHMatrix *GetOriginalMatrix() const { return fMatrixOrig; }; 70 TGeoNode *GetMother(Int_t levup = 1) const;; 71 TGeoNode *GetNode(Int_t level = -1) const;; 72 TGeoShape *GetShape(Int_t level = -1) const;; 73 TGeoVolume *GetVolume(Int_t level = -1) const;; 74 ; 75 Bool_t IsAligned() const { return TObject::TestBit(kGeoPNodeAligned); }; 76 Bool_t IsMatchingState(TGeoNavigator *nav) const;; 77 Bool_t IsVolAttributes() const { return TObject::TestBit(kGeoPNodeVolAtt); }; 78 Bool_t IsVisible() const { return TObject::TestBit(kGeoPNodeVisible); }; 79 Bool_t IsVisibleFull() const { return TObject::TestBit(kGeoPNodeFull); }; 80 ; 81 void Print(Option_t *option = """") const override;; 82 void Refresh();; 83 ; 84 void SetMatrixOrig(const TGeoMatrix *local);; 85 void SetIsVolAtt(Bool_t flag = kTRUE) { TObject::SetBit(kGeoPNodeVolAtt, flag); }; 86 void SetVisibility(Bool_t flag = kTRUE) { TObject::SetBit(kGeoPNodeVisible, flag); }; 87 void SetVisibleFull(Bool_t flag = kTRUE) { TObject::SetBit(kGeoPNodeFull, flag); }; 88 void Paint(Option_t *option = """") override;; 89 ; 90 ClassDefOverride(TGeoPhysicalNode, 1) // base class for physical nodes; 91};; 92 ; 93///////////////////////////////////////////////////////////////////////////////; 94// //; 95// TGeoPNEntry - class representing physical node entry having a unique name //; 96// associated to a path. //; 97// //; 98///////////////////////////////////////////////////////////////////////////////; 99 ; 100class TGeoPNEntry : public TNamed {; 101private:; 102 enum EPNEntryFlags { kPNEntryOwnMatrix = BIT(14) };; 103 TGeoPhysicalNod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPhysicalNode_8h_source.html:2876,Test,TestBit,2876,doc/master/TGeoPhysicalNode_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoPhysicalNode_8h_source.html,4,['Test'],['TestBit']
Testability,"cale! size scale for points; TGLViewer::EPushActionTGLViewer::fPushAction; TGLRedrawTimer*TGLViewer::fRedrawTimer! timer for triggering redraws; Bool_tTGLViewer::fReferenceOn! reference marker on?; TGLVertex3TGLViewer::fReferencePos! reference position; Bool_tTGLViewer::fResetCamerasOnNextUpdatereposition camera on next update; Bool_tTGLViewer::fResetCamerasOnUpdatereposition camera on each update; Bool_tTGLViewerBase::fResetSceneInfosOnRenderRequest rebuild of view-specific scene data.; TGLRnrCtx*TGLViewerBase::fRnrCtx; TGLViewerBase::SceneInfoList_tTGLViewerBase::fScenesRegistered scenes.; TGLSelectRecordTGLViewer::fSecSelRec! select record from last secondary select (should go to context); TGLSelectRecordTGLViewer::fSelRec! select record from last select (should go to context); TGLManipSet*TGLViewer::fSelectedPShapeRef!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTGLViewer::fSmartRefresh! cache logicals during scene rebuilds; Bool_tTGLViewer::fSmoothLines! smooth line edge rendering; Bool_tTGLViewer::fSmoothPoints! smooth point edge rendering; Bool_tTGLViewer::fStereo! use stereo rendering; Float_tTGLViewer::fStereoEyeOffsetFac!; Float_tTGLViewer::fStereoFrustumAsymFac!; Float_tTGLViewer::fStereoZeroParallax! position of zero-parallax plane: 0 - near clipping plane, 1 - far clipping plane; Short_tTGLViewerBase::fStyleViewer-style for rendering.; TGLRectTGLViewer::fViewport! viewport - drawn area; TGLViewerBase::SceneInfoVec_tTGLViewerBase::fVisScenesVisible scenes.; Float_tTGLViewerBase::fWFLineWOptional override of scene wire-frame line-width; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TGLColorSetTGLViewer::fgDefaultColorSet! a shared, default color-set; static Bool_tTGLViewer::fgUseDefaultColorSetForNewViewers! name says it all. private:. Int_tfBorder; TGCompositeFrame*fFrame. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLEmbeddedVie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLEmbeddedViewer.html:25211,log,logicals,25211,root/html602/TGLEmbeddedViewer.html,https://root.cern,https://root.cern/root/html602/TGLEmbeddedViewer.html,1,['log'],['logicals']
Testability,"cale! size scale for points; TGLViewer::EPushActionTGLViewer::fPushAction; TGLRedrawTimer*TGLViewer::fRedrawTimer! timer for triggering redraws; Bool_tTGLViewer::fReferenceOn! reference marker on?; TGLVertex3TGLViewer::fReferencePos! reference position; Bool_tTGLViewer::fResetCamerasOnNextUpdatereposition camera on next update; Bool_tTGLViewer::fResetCamerasOnUpdatereposition camera on each update; Bool_tTGLViewerBase::fResetSceneInfosOnRenderRequest rebuild of view-specific scene data.; TGLRnrCtx*TGLViewerBase::fRnrCtx; TGLViewerBase::SceneInfoList_tTGLViewerBase::fScenesRegistered scenes.; TGLSelectRecordTGLViewer::fSecSelRec! select record from last secondary select (should go to context); TGLSelectRecordTGLViewer::fSelRec! select record from last select (should go to context); TGLManipSet*TGLViewer::fSelectedPShapeRef!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTGLViewer::fSmartRefresh! cache logicals during scene rebuilds; Bool_tTGLViewer::fSmoothLines! smooth line edge rendering; Bool_tTGLViewer::fSmoothPoints! smooth point edge rendering; Bool_tTGLViewer::fStereo! use stereo rendering; Float_tTGLViewer::fStereoEyeOffsetFac!; Float_tTGLViewer::fStereoFrustumAsymFac!; Float_tTGLViewer::fStereoZeroParallax! position of zero-parallax plane: 0 - near clipping plane, 1 - far clipping plane; Short_tTGLViewerBase::fStyleViewer-style for rendering.; TGLRectTGLViewer::fViewport! viewport - drawn area; TGLViewerBase::SceneInfoVec_tTGLViewerBase::fVisScenesVisible scenes.; Float_tTGLViewerBase::fWFLineWOptional override of scene wire-frame line-width; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TGLColorSetTGLViewer::fgDefaultColorSet! a shared, default color-set; static Bool_tTGLViewer::fgUseDefaultColorSetForNewViewers! name says it all. private:. TGPopupMenu*fCameraMenu; Bool_tfDeleteMenuBar; TStringfDirName; TGPopupMenu*fFileMenu; TGPopupMenu*fFileSaveMenu; TGLFormat*fFormat; TGLSAFrame*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLSAViewer.html:26587,log,logicals,26587,root/html602/TGLSAViewer.html,https://root.cern,https://root.cern/root/html602/TGLSAViewer.html,1,['log'],['logicals']
Testability,"calls = 0); static voidTFile::SetReadStreamerInfo(Bool_t readinfo = kTRUE); virtual voidTDirectoryFile::SetSeekDir(Long64_t v); virtual voidSetStoreStreamerInfos(Bool_t iConvert = kTRUE); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTDirectoryFile::SetTRefAction(TObject* ref, TObject* parent); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetUsedDtd(Bool_t use = kTRUE); virtual voidSetUseNamespaces(Bool_t iUseNamespaces = kTRUE); virtual voidTDirectoryFile::SetWritable(Bool_t writable = kTRUE); virtual voidSetXmlLayout(TXMLSetup::EXMLLayout layout); virtual voidShowMembers(TMemberInspector& insp); virtual voidTFile::ShowStreamerInfo(); static Bool_tTFile::ShrinkCacheFileDir(Long64_t shrinkSize, Long_t cleanupInteval = 0); virtual Int_tSizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidTFile::SumBuffer(Int_t bufsize); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUseCache(Int_t = 10, Int_t = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tWrite(const char* = 0, Int_t = 0, Int_t = 0); virtual Int_tWrite(const char* = 0, Int_t = 0, Int_t = 0) const; virtual Bool_tWriteBuffer(const char*, Int_t); virtual voidTDirectoryFile::WriteDirHeader(); virtual voidWriteFree(); virtual voidWriteHeader(); virtual voidTDirectoryFile::WriteKeys(); Int_tTDirectory::WriteObject(const void* obj, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tTDirectoryFile::WriteObjectAny(const void* obj, const char* classname, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual Int_tTDirectoryFile::WriteObjectAny(const void* obj, const TClass* cl, const char* name, Option_t* option = """", Int_t bufsize = 0); virtual UShort_tTFile::WriteProcessID(TProcessID* pid); virtual voidWriteStr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXMLFile.html:15953,Test,TestBit,15953,root/html528/TXMLFile.html,https://root.cern,https://root.cern/root/html528/TXMLFile.html,3,['Test'],['TestBit']
Testability,"cally if the log scale is set in the current Pad. NOTE: see also TF1::GetX. Double_t GetX(Double_t y, Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.E-10, Int_t maxiter = 100, Bool_t logx = false) const; Returns the X value corresponding to the function value fy for (xmin<x<xmax).; in other words it can find the roots of the function when fy=0 and successive calls; by changing the next call to [xmin+eps,xmax] where xmin is the previous root.; Method:; First, the grid search is used to bracket the maximum; with the step size = (xmax-xmin)/fNpx. This way, the step size; can be controlled via the SetNpx() function. If the function is; unimodal or if its extrema are far apart, setting the fNpx to; a small value speeds the algorithm up many times.; Then, Brent's method is applied on the bracketed interval; epsilon (default = 1.E-10) controls the relative accuracy (if |x| > 1 ); and absolute (if |x| < 1) and maxiter (default = 100) controls the maximum number; of iteration of the Brent algorithm; If the flag logx is set the grid search is done in log step size; This is done automatically if the log scale is set in the current Pad. NOTE: see also TF1::GetMaximumX, TF1::GetMinimumX. Int_t GetNDF() const; Return the number of degrees of freedom in the fit; the fNDF parameter has been previously computed during a fit.; The number of degrees of freedom corresponds to the number of points; used in the fit minus the number of free parameters. Int_t GetNumberFreeParameters() const; Return the number of free parameters. char * GetObjectInfo(Int_t px, Int_t py) const; Redefines TObject::GetObjectInfo.; Displays the function info (x, function value); corresponding to cursor position px,py. Double_t GetParError(Int_t ipar) const; Return value of parameter number ipar. void GetParLimits(Int_t ipar, Double_t& parmin, Double_t& parmax) const; Return limits for parameter ipar. Double_t GetProb() const; Return the fit probability. Int_t GetQuantiles(Int_t nprobSum, Double_t* q",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF1.html:43746,log,logx,43746,root/html528/TF1.html,https://root.cern,https://root.cern/root/html528/TF1.html,12,['log'],"['log', 'logx']"
Testability,"camera to defaults - reframe the world volume established in Setup(); in default state. Note: limits defined in Setup() are not adjusted. Bool_t Zoom(Int_t delta, Bool_t mod1, Bool_t mod2); Zoom the camera - 'adjust lens focal length, retaining camera position'.; Arguments are:. 'delta' - mouse viewport delta (pixels) - +ive zoom in, -ive zoom out; 'mod1' / 'mod2' - sensitivity modifiers - see TGLCamera::AdjustAndClampVal(). Returns kTRUE is redraw required (camera change), kFALSE otherwise. Bool_t Truck(Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2); Truck the camera - 'move camera parallel to film plane'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. void Apply(const TGLBoundingBox& box, const TGLRect* pickRect = 0) const; Apply the camera to the current GL context, setting the viewport, projection; and modelview matricies. After this verticies etc can be directly entered; in the world frame. This also updates the cached frustum values, enabling; all the projection, overlap tests etc defined in TGLCamera to be used. Arguments are:; 'box' - view volume box - used to adjust near/far clipping; 'pickRect' - optional picking rect. If non-null, restrict drawing to this; viewport rect. void Configure(Double_t fov, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); Configure the camera state.; fov - set directly field-of-view in degrees (default = 30);; dolly - additional move along the camera forward direction;; center - new camera center (can be 0 for no change);; hRotate - additional ""up/down"" rotation in radians;; vRotate - additional ""left/right"" rotation in radians. Bool_t IsPerspective() const; { return kTRUE; }. Double_t GetFOV() const; { return fFOV; }. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:25; This page has been automatically generated. For comments or suggestions regarding the documentation or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLPerspectiveCamera.html:12826,test,tests,12826,root/html534/TGLPerspectiveCamera.html,https://root.cern,https://root.cern/root/html534/TGLPerspectiveCamera.html,1,['test'],['tests']
Testability,"camera to defaults - reframe the world volume established in Setup(); in default state. Note: limits defined in Setup() are not adjusted. Bool_t Zoom(Int_t delta, Bool_t mod1, Bool_t mod2); Zoom the camera - 'adjust lens focal length, retaining camera position'.; Arguments are:. 'delta' - mouse viewport delta (pixels) - +ive zoom in, -ive zoom out; 'mod1' / 'mod2' - sensitivity modifiers - see TGLCamera::AdjustAndClampVal(). Returns kTRUE is redraw required (camera change), kFALSE otherwise. Bool_t Truck(Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2); Truck the camera - 'move camera parallel to film plane'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. void Apply(const TGLBoundingBox& box, const TGLRect* pickRect = 0) const; Apply the camera to the current GL context, setting the viewport, projection; and modelview matricies. After this verticies etc can be directly entered; in the world frame. This also updates the cached frustum values, enabling; all the projection, overlap tests etc defined in TGLCamera to be used. Arguments are:; 'box' - view volume box - used to adjust near/far clipping; 'pickRect' - optional picking rect. If non-null, restrict drawing to this; viewport rect. void Configure(Double_t fov, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); Configure the camera state.; fov - set directly field-of-view in degrees (default = 30);; dolly - additional move along the camera forward direction;; center - new camera center (can be 0 for no change);; hRotate - additional ""up/down"" rotation in radians;; vRotate - additional ""left/right"" rotation in radians. Bool_t IsPerspective() const; { return kTRUE; }. Double_t GetFOV() const; { return fFOV; }. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLPerspectiveCamera.h 31821 2009-12-10 18:22:44Z matevz $ » Last generated: 2010-09-23 20:06; This page has been automatically generated.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLPerspectiveCamera.html:8302,test,tests,8302,root/html528/TGLPerspectiveCamera.html,https://root.cern,https://root.cern/root/html528/TGLPerspectiveCamera.html,1,['test'],['tests']
Testability,"camera to defaults - reframe the world volume established in Setup(); in default state. Note: limits defined in Setup() are not adjusted. Bool_t Zoom(Int_t delta, Bool_t mod1, Bool_t mod2); Zoom the camera - 'adjust lens focal length, retaining camera position'.; Arguments are:. 'delta' - mouse viewport delta (pixels) - +ive zoom in, -ive zoom out; 'mod1' / 'mod2' - sensitivity modifiers - see TGLCamera::AdjustAndClampVal(). Returns kTRUE is redraw required (camera change), kFALSE otherwise. Bool_t Truck(Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2); Truck the camera - 'move camera parallel to film plane'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. void Apply(const TGLBoundingBox& box, const TGLRect* pickRect = 0) const; Apply the camera to the current GL context, setting the viewport, projection; and modelview matricies. After this verticies etc can be directly entered; in the world frame. This also updates the cached frustum values, enabling; all the projection, overlap tests etc defined in TGLCamera to be used. Arguments are:; 'box' - view volume box - used to adjust near/far clipping; 'pickRect' - optional picking rect. If non-null, restrict drawing to this; viewport rect. void Configure(Double_t fov, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); Configure the camera state.; fov - set directly field-of-view in degrees (default = 30);; dolly - additional move along the camera forward direction;; center - new camera center (can be 0 for no change);; hRotate - additional ""up/down"" rotation in radians;; vRotate - additional ""left/right"" rotation in radians. Bool_t IsPerspective() const; { return kTRUE; }. Double_t GetFOV() const; { return fFOV; }. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLPerspectiveCamera.h 31821 2009-12-10 18:22:44Z matevz $ » Last generated: 2011-07-04 15:29; This page has been automatically generated.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGLPerspectiveCamera.html:8302,test,tests,8302,root/html530/TGLPerspectiveCamera.html,https://root.cern,https://root.cern/root/html530/TGLPerspectiveCamera.html,1,['test'],['tests']
Testability,"camera to defaults - reframe the world volume established in Setup(); in default state. Note: limits defined in Setup() are not adjusted. Bool_t Zoom(Int_t delta, Bool_t mod1, Bool_t mod2); Zoom the camera - 'adjust lens focal length, retaining camera position'.; Arguments are:. 'delta' - mouse viewport delta (pixels) - +ive zoom in, -ive zoom out; 'mod1' / 'mod2' - sensitivity modifiers - see TGLCamera::AdjustAndClampVal(). Returns kTRUE is redraw required (camera change), kFALSE otherwise. Bool_t Truck(Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2); Truck the camera - 'move camera parallel to film plane'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. void Apply(const TGLBoundingBox& box, const TGLRect* pickRect = 0) const; Apply the camera to the current GL context, setting the viewport, projection; and modelview matricies. After this verticies etc can be directly entered; in the world frame. This also updates the cached frustum values, enabling; all the projection, overlap tests etc defined in TGLCamera to be used. Arguments are:; 'box' - view volume box - used to adjust near/far clipping; 'pickRect' - optional picking rect. If non-null, restrict drawing to this; viewport rect. void Configure(Double_t fov, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); Configure the camera state.; fov - set directly field-of-view in degrees (default = 30);; dolly - additional move along the camera forward direction;; center - new camera center (can be 0 for no change);; hRotate - additional ""up/down"" rotation in radians;; vRotate - additional ""left/right"" rotation in radians. Bool_t IsPerspective() const; { return kTRUE; }. Double_t GetFOV() const; { return fFOV; }. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id: TGLPerspectiveCamera.h 31821 2009-12-10 18:22:44Z matevz $ » Last generated: 2011-11-03 20:14; This page has been automatically generated.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLPerspectiveCamera.html:8302,test,tests,8302,root/html532/TGLPerspectiveCamera.html,https://root.cern,https://root.cern/root/html532/TGLPerspectiveCamera.html,1,['test'],['tests']
Testability,"camera to defaults - reframe the world volume established in Setup(); in default state. Note: limits defined in Setup() are not adjusted. Bool_t Zoom(Int_t delta, Bool_t mod1, Bool_t mod2); Zoom the camera - 'adjust lens focal length, retaining camera position'.; Arguments are:. 'delta' - mouse viewport delta (pixels) - +ive zoom in, -ive zoom out; 'mod1' / 'mod2' - sensitivity modifiers - see TGLCamera::AdjustAndClampVal(). Returns kTRUE is redraw required (camera change), kFALSE otherwise. Bool_t Truck(Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2); Truck the camera - 'move camera parallel to film plane'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. void Apply(const TGLBoundingBox& box, const TGLRect* pickRect = 0) const; Apply the camera to the current GL context, setting the viewport, projection; and modelview matricies. After this verticies etc can be directly entered; in the world frame. This also updates the cached frustum values, enabling; all the projection, overlap tests etc defined in TGLCamera to be used. Arguments are:; 'box' - view volume box - used to adjust near/far clipping; 'pickRect' - optional picking rect. If non-null, restrict drawing to this; viewport rect. void Configure(Double_t fov, Double_t dolly, Double_t[3] center, Double_t hRotate, Double_t vRotate); Configure the camera state.; fov - set directly field-of-view in degrees (default = 30);; dolly - additional move along the camera forward direction;; center - new camera center (can be 0 for no change);; hRotate - additional ""up/down"" rotation in radians;; vRotate - additional ""left/right"" rotation in radians. TGLPerspectiveCamera(). Bool_t IsPerspective() const; { return kTRUE; }. Double_t GetFOV() const; { return fFOV; }. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-02 15:53; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGLPerspectiveCamera.html:13611,test,tests,13611,root/html604/TGLPerspectiveCamera.html,https://root.cern,https://root.cern/root/html604/TGLPerspectiveCamera.html,1,['test'],['tests']
Testability,"camera to defaults - reframe the world volume established in Setup(); in default state. Note: limits defined in Setup() are not adjusted. Bool_t Zoom(Int_t delta, Bool_t mod1, Bool_t mod2); Zoom the camera - 'adjust lens focal length, retaining camera position'.; Arguments are:. 'delta' - mouse viewport delta (pixels) - +ive zoom in, -ive zoom out; 'mod1' / 'mod2' - sensitivity modifiers - see TGLCamera::AdjustAndClampVal(). Returns kTRUE is redraw required (camera change), kFALSE otherwise. Bool_t Truck(Int_t xDelta, Int_t yDelta, Bool_t mod1, Bool_t mod2); Truck the camera - 'move camera parallel to film plane'.; Returns kTRUE is redraw required (camera change), kFALSE otherwise. void Apply(const TGLBoundingBox& box, const TGLRect* pickRect = 0) const; Apply the camera to the current GL context, setting the viewport, projection; and modelview matricies. After this verticies etc can be directly entered; in the world frame. This also updates the cached frustum values, enabling; all the projection, overlap tests etc defined in TGLCamera to be used. Arguments are:; 'box' - view volume box - used to adjust near/far clipping; 'pickRect' - optional picking rect. If non-null, restrict drawing to this; viewport rect. void Configure(Double_t fov, Double_t dolly, Double_t[3] center, Double_t hRotate, Double_t vRotate); Configure the camera state.; fov - set directly field-of-view in degrees (default = 30);; dolly - additional move along the camera forward direction;; center - new camera center (can be 0 for no change);; hRotate - additional ""up/down"" rotation in radians;; vRotate - additional ""left/right"" rotation in radians. TGLPerspectiveCamera(). Bool_t IsPerspective() const; { return kTRUE; }. Double_t GetFOV() const; { return fFOV; }. » Author: Richard Maunder 25/05/2005 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-06-30 14:53; This page has been automatically generated. For comments or suggestions rega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLPerspectiveCamera.html:13611,test,tests,13611,root/html602/TGLPerspectiveCamera.html,https://root.cern,https://root.cern/root/html602/TGLPerspectiveCamera.html,1,['test'],['tests']
Testability,"can be lazy.; 5389 void** pp = (void**) fAddress;; 5390 if (!*pp) {; 5391 // -- Caller wants us to allocate the STL container, but they will own it.; 5392 *pp = proxy->New();; 5393 if (!(*pp)) {; 5394 Error(""SetAddress"", ""Failed to allocate STL container for branch '%s'"", GetName());; 5395 // FIXME: Should we do this? Lots of other code wants; 5396 // fAddress to be zero if no fObject, but is; 5397 // that a good thing?; 5398 fAddress = nullptr;; 5399 ResetBit(kAddressSet);; 5400 }; 5401 }; 5402 fObject = (char*) *pp;; 5403 }; 5404 }; 5405 } else {; 5406 // -- We have been given a zero address, allocate for top-level only.; 5407 if ((fStreamerType == TVirtualStreamerInfo::kObject) ||; 5408 (fStreamerType == TVirtualStreamerInfo::kAny) ||; 5409 (fStreamerType == TVirtualStreamerInfo::kSTL)) {; 5410 // We are *not* a top-level branch and we are *not* a pointer to an STL container.; 5411 // Case of an embedded STL container.; 5412 // Note: We test for the kObject and kAny types to support; 5413 // the (unwise) choice of inheriting from an STL container.; 5414 Error(""SetAddress"", ""Embedded STL container given a zero address for branch '%s'"", GetName());; 5415 } else {; 5416 // We are either a top-level branch or sub-branch which is a pointer to an STL container.; 5417 // Streamer type should be -1 (for a top-level branch) or kSTLp here.; 5418 if ((fStreamerType != -1) && (fStreamerType != TVirtualStreamerInfo::kSTLp)) {; 5419 Error(""SetAddress"",; 5420 ""Branch %s is a split STL container (fStreamerType is: %d), the address can not be set directly."",; 5421 GetName(), fStreamerType);; 5422 } else if (fStreamerType == -1) {; 5423 // -- We are a top-level branch, allocate.; 5424 SetBit(kDeleteObject);; 5425 fObject = (char*) proxy->New();; 5426 if (fObject) {; 5427 fAddress = (char*) &fObject;; 5428 } else {; 5429 Error(""SetAddress"", ""Failed to allocate STL container for branch '%s'"", GetName());; 5430 // FIXME: Should we do this? Lots of other code wants; 5431 // fAddress to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:200917,test,test,200917,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['test'],['test']
Testability,"can be selected via the parameter mode. ; The parameter mode can be = pcev:; p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters Example: gStyle->SetOptFit(1011); print fit probability, parameter names/values and errors.; When ""v""=1 is specified, only the non-fixed parameters are shown.; When ""v""=2 all parameters are shown. Notes:. never call SetOptFit(000111); but SetOptFit(111), 000111 will be taken as an octal number !!; gStyle->SetOptFit(1) is a shortcut allowing to set the most common case and is equivalent to gStyle->SetOptFit(111); At ROOT startup the option fit is set to 0. So, to see the fit parameters on all plot resulting from a fit, a call to gStyle->SetOptFit() with a non null value should be done. One can put it in the rootlogon.C file to always have it. see also SetOptStat below. ; Definition at line 1593 of file TStyle.cxx. ◆ SetOptLogx(). void TStyle::SetOptLogx ; (; Int_t ; logx = 1). inline . Definition at line 329 of file TStyle.h. ◆ SetOptLogy(). void TStyle::SetOptLogy ; (; Int_t ; logy = 1). inline . Definition at line 330 of file TStyle.h. ◆ SetOptLogz(). void TStyle::SetOptLogz ; (; Int_t ; logz = 1). inline . Definition at line 331 of file TStyle.h. ◆ SetOptStat() [1/2]. void TStyle::SetOptStat ; (; Int_t ; mode = 1). The type of information printed in the histogram statistics box can be selected via the parameter mode. ; The parameter mode can be = ksiourmen; k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle.html:82359,log,logx,82359,doc/master/classTStyle.html,https://root.cern,https://root.cern/doc/master/classTStyle.html,1,['log'],['logx']
Testability,"can implement consistency checks of the variables. ;  ; virtual TObject * clone (const char *newname=nullptr) const =0;  ; TObject * Clone (const char *newname=nullptr) const override;  Make a clone of an object using the Streamer facility. ;  ; virtual RooAbsArg * cloneTree (const char *newname=nullptr) const;  Clone tree expression of objects. ;  ; Int_t Compare (const TObject *other) const override;  Utility function used by TCollection::Sort to compare contained TObjects We implement comparison by name, resulting in alphabetical sorting by object name. ;  ; virtual std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const;  ; std::size_t dataToken () const;  Returns the token for retrieving results in the BatchMode. For internal use only. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default contents to print. ;  ; bool dependsOn (const RooAbsArg &server, const RooAbsArg *ignoreArg=nullptr, bool valueOnly=false) const;  Test whether we depend on (ie, are served by) the specified object. ;  ; bool dependsOn (const RooAbsCollection &serverList, const RooAbsArg *ignoreArg=nullptr, bool valueOnly=false) const;  Test whether we depend on (ie, are served by) any object in the specified collection. ;  ; bool dependsOn (TNamed const *namePtr, const RooAbsArg *ignoreArg=nullptr, bool valueOnly=false) const;  Test whether we depend on (ie, are served by) an object with a specific name. ;  ; bool dependsOnValue (const RooAbsArg &server, const RooAbsArg *ignoreArg=nullptr) const;  Check whether this object depends on values served from the object passed as server. ;  ; bool dependsOnValue (const RooAbsCollection &serverList, const RooAbsArg *ignoreArg=nullptr) const;  Check whether this object depends on values from an element in the serverList. ;  ; bool getAttribute (const Text_t *name) const;  Check if a named attribute is set. By default, all attributes are unset. ;  ; RooFit::OwningPtr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:22704,Test,Test,22704,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,9,['Test'],['Test']
Testability,"cancesstd::vector< double > m_significancesDefinition NeuralNet.h:1001; TMVA::DNN::ClassificationSettings::m_sumOfSigWeightsdouble m_sumOfSigWeightsDefinition NeuralNet.h:1004; TMVA::DNN::ClassificationSettings::m_weightsstd::vector< double > m_weightsDefinition NeuralNet.h:998; TMVA::DNN::ClassificationSettings::m_fileNameNetConfigstd::string m_fileNameNetConfigDefinition NeuralNet.h:1011; TMVA::DNN::ClassificationSettings::~ClassificationSettingsvirtual ~ClassificationSettings()d'torDefinition NeuralNet.h:924; TMVA::DNN::ClassificationSettings::m_targetsstd::vector< double > m_targetsDefinition NeuralNet.h:997; TMVA::DNN::ClassificationSettings::testSamplevoid testSample(double error, double output, double target, double weight)action to be done after the computation of a test sample (e.g.Definition NeuralNet.cxx:304; TMVA::DNN::ClassificationSettings::m_scaleToNumEventssize_t m_scaleToNumEventsDefinition NeuralNet.h:1006; TMVA::DNN::ClassificationSettings::startTestCyclevirtual void startTestCycle()action to be done when the test cycle is started (e.g.Definition NeuralNet.cxx:316; TMVA::DNN::ClassificationSettings::m_sumOfBkgWeightsdouble m_sumOfBkgWeightsDefinition NeuralNet.h:1005; TMVA::DNN::ClassificationSettings::setWeightSumsvoid setWeightSums(double sumOfSigWeights, double sumOfBkgWeights)set the weight sums to be scaled to (preparations for monitoring output)Definition NeuralNet.cxx:512; TMVA::DNN::ClassificationSettings::m_amsstd::vector< double > m_amsDefinition NeuralNet.h:1000; TMVA::DNN::ClassificationSettings::m_cutValuedouble m_cutValueDefinition NeuralNet.h:1008; TMVA::DNN::ClassificationSettings::m_outputstd::vector< double > m_outputDefinition NeuralNet.h:996; TMVA::DNN::LayerDataLayerData holds the data of one layer.Definition NeuralNet.h:437; TMVA::DNN::LayerData::m_itInputBeginconst_iterator_type m_itInputBeginiterator to the first of the nodes in the input node vectorDefinition NeuralNet.h:639; TMVA::DNN::LayerData::deltasBeginconst_iterator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:53109,test,test,53109,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,1,['test'],['test']
Testability,"cases),; otherwise returns 0. Int_t Uncompress(); Uncompress the message. The message will only be uncompressed when; kMESS_ZIP is set. Returns -1 in case of error, 0 otherwise. void WriteObject(const TObject* obj); Write object to message buffer.; When support for schema evolution is enabled the list of TStreamerInfo; used to stream this object is kept in fInfos. This information is used; by TSocket::Send that sends this list through the socket. This list is in; turn used by TSocket::Recv to store the TStreamerInfo objects in the; relevant TClass in case the TClass does not know yet about a particular; class version. This feature is implemented to support clients and servers; with either different ROOT versions or different user classes versions. UShort_t WriteProcessID(TProcessID* pid); Check if the ProcessID pid is already in the message.; If not, then:; - mark bit 0 of fBitsPIDs to indicate that a ProcessID has been found; - mark bit uid+1 where uid id the uid of the ProcessID. TMessage(const TMessage& ); TMessage objects cannot be copied or assigned. void operator=(const TMessage& ). Bool_t TestBitNumber(UInt_t bitnumber) const; used by friend TSocket. { return fBitsPIDs.TestBitNumber(bitnumber); }. TClass * GetClass() const; { return fClass;}. void Reset(). UInt_t What() const; { return fWhat; }. void EnableSchemaEvolution(Bool_t enable = kTRUE); { fEvolution = enable; }. Bool_t UsesSchemaEvolution() const; { return fEvolution; }. Int_t GetCompressionLevel() const; { return fCompress; }. char * CompBuffer() const; { return fBufComp; }. Int_t CompLength() const; { return (Int_t)(fBufCompCur - fBufComp); }. » Author: Fons Rademakers 19/12/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TMessage.h 35752 2010-09-26 22:07:36Z rdm $ » Last generated: 2010-09-27 10:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMessage.html:24248,Test,TestBitNumber,24248,root/html528/TMessage.html,https://root.cern,https://root.cern/root/html528/TMessage.html,2,['Test'],['TestBitNumber']
Testability,"cast<TFormula*>(this);; 3435 thisFormula->ReInitializeEvalMethod();; 3436 }; 3437 if (!fClingInitialized) {; 3438 Error(""DoEval"", ""Formula has error and it is not properly initialized "");; 3439 ROOT::Double_v res = TMath::QuietNaN();; 3440 return res;; 3441 }; 3442 }; 3443 ; 3444 ROOT::Double_v result = 0;; 3445 void *args[2];; 3446 ; 3447 ROOT::Double_v *vars = const_cast<ROOT::Double_v *>(x);; 3448 args[0] = &vars;; 3449 if (fNpar <= 0) {; 3450 (*fFuncPtr)(0, 1, args, &result);; 3451 }else {; 3452 double *pars = (params) ? const_cast<double *>(params) : const_cast<double *>(fClingParameters.data());; 3453 args[1] = &pars;; 3454 (*fFuncPtr)(0, 2, args, &result);; 3455 }; 3456 return result;; 3457}; 3458#endif // R__HAS_VECCORE; 3459 ; 3460 ; 3461//////////////////////////////////////////////////////////////////////////////; 3462/// Re-initialize eval method; 3463///; 3464/// This function is called by DoEval and DoEvalVector in case of a previous failure; 3465/// or in case of reading from a file; 3466////////////////////////////////////////////////////////////////////////////////; 3467void TFormula::ReInitializeEvalMethod() {; 3468 ; 3469 ; 3470 if (TestBit(TFormula::kLambda) ) {; 3471 Info(""ReInitializeEvalMethod"",""compile now lambda expression function using Cling"");; 3472 InitLambdaExpression(fFormula);; 3473 fLazyInitialization = false;; 3474 return;; 3475 }; 3476 fMethod.reset();; 3477 ; 3478 if (!fLazyInitialization) Warning(""ReInitializeEvalMethod"", ""Formula is NOT properly initialized - try calling again TFormula::PrepareEvalMethod"");; 3479 //else Info(""ReInitializeEvalMethod"", ""Compile now the formula expression using Cling"");; 3480 ; 3481 // check first if formula exists in the global map; 3482 {; 3483 ; 3484 R__LOCKGUARD(gROOTMutex);; 3485 ; 3486 // std::cout << ""gClingFunctions list"" << std::endl;; 3487 // for (auto thing : gClingFunctions); 3488 // std::cout << ""gClingFunctions : "" << thing.first << std::endl;; 3489 ; 3490 auto funcit = gClingFunctions",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:131941,Test,TestBit,131941,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['Test'],['TestBit']
Testability,"cation.; 846///; 847 ; 848Double_t; 849TMVA::Factory::GetROCIntegral(TMVA::DataLoader *loader, TString theMethodName, UInt_t iClass, Types::ETreeType type); 850{; 851 return GetROCIntegral((TString)loader->GetName(), theMethodName, iClass, type);; 852}; 853 ; 854////////////////////////////////////////////////////////////////////////////////; 855/// Calculate the integral of the ROC curve, also known as the area under curve; 856/// (AUC), for a given method.; 857///; 858/// Argument iClass specifies the class to generate the ROC curve in a; 859/// multiclass setting. It is ignored for binary classification.; 860///; 861 ; 862Double_t TMVA::Factory::GetROCIntegral(TString datasetname, TString theMethodName, UInt_t iClass, Types::ETreeType type); 863{; 864 if (fMethodsMap.find(datasetname) == fMethodsMap.end()) {; 865 Log() << kERROR << Form(""DataSet = %s not found in methods map."", datasetname.Data()) << Endl;; 866 return 0;; 867 }; 868 ; 869 if (!this->HasMethod(datasetname, theMethodName)) {; 870 Log() << kERROR << Form(""Method = %s not found with Dataset = %s "", theMethodName.Data(), datasetname.Data()); 871 << Endl;; 872 return 0;; 873 }; 874 ; 875 std::set<Types::EAnalysisType> allowedAnalysisTypes = {Types::kClassification, Types::kMulticlass};; 876 if (allowedAnalysisTypes.count(this->fAnalysisType) == 0) {; 877 Log() << kERROR << Form(""Can only generate ROC integral for analysis type kClassification. and kMulticlass.""); 878 << Endl;; 879 return 0;; 880 }; 881 ; 882 TMVA::ROCCurve *rocCurve = GetROC(datasetname, theMethodName, iClass, type);; 883 if (!rocCurve) {; 884 Log() << kFATAL; 885 << Form(""ROCCurve object was not created in Method = %s not found with Dataset = %s "", theMethodName.Data(),; 886 datasetname.Data()); 887 << Endl;; 888 return 0;; 889 }; 890 ; 891 Int_t npoints = TMVA::gConfig().fVariablePlotting.fNbinsXOfROCCurve + 1;; 892 Double_t rocIntegral = rocCurve->GetROCIntegral(npoints);; 893 delete rocCurve;; 894 ; 895 return rocIntegral;; 896}; 89",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:35225,Log,Log,35225,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['Log'],['Log']
Testability,"cation.C tutorial You need to run that macro before to generate the trained Keras model Then you need to run the macro TMVA_SOFIE_Keras_HiggsModel.C to generate the corresponding header file using SOFIE. ;  ;  TMVA_SOFIE_RDataFrame.py;   Example of inference with SOFIE and RDataFrame, of a model trained with Keras. ;  ;  TMVA_SOFIE_RDataFrame_JIT.C;   This macro provides an example of using a trained model with Keras and make inference using SOFIE and RDataFrame This macro uses as input a Keras model generated with the TMVA_Higgs_Classification.C tutorial You need to run that macro before this one. ;  ;  TMVA_SOFIE_RSofieReader.C;   This macro provides an example of using a trained model with Keras and make inference using SOFIE with the RSofieReader class This macro uses as input a Keras model generated with the TMVA_Higgs_Classification.C tutorial You need to run that macro before to generate the trained Keras model ;  ;  TMVAClassification.C;   This macro provides examples for the training and testing of the TMVA classifiers. ;  ;  TMVAClassificationApplication.C;   This macro provides a simple example on how to use the trained classifiers within an analysis module ;  ;  TMVAClassificationCategory.C;   This macro provides examples for the training and testing of the TMVA classifiers in categorisation mode. ;  ;  TMVAClassificationCategoryApplication.C;   This macro provides a simple example on how to use the trained classifiers (with categories) within an analysis module ;  ;  TMVACrossValidation.C;   This macro provides an example of how to use TMVA for k-folds cross evaluation. ;  ;  TMVACrossValidationApplication.C;   This macro provides an example of how to use TMVA for k-folds cross evaluation in application. ;  ;  TMVACrossValidationRegression.C;   This macro provides an example of how to use TMVA for k-folds cross evaluation. ;  ;  TMVAGAexample.C;   This executable gives an example of a very simple use of the genetic algorithm of TMVA ;  ;  TMVAGAexample2.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_afb41fc0ce910d0ed999b271277cf431.html:5036,test,testing,5036,doc/master/dir_afb41fc0ce910d0ed999b271277cf431.html,https://root.cern,https://root.cern/doc/master/dir_afb41fc0ce910d0ed999b271277cf431.html,1,['test'],['testing']
Testability,"cation; : ; : Train all sub-classifiers for Classification ...; : Rebuilding Dataset Category_Fisher_1_dsi; : Building event vectors for type 2 Signal; : Dataset[Category_Fisher_1_dsi] : create input formulas for tree TreeS; : Building event vectors for type 2 Background; : Dataset[Category_Fisher_1_dsi] : create input formulas for tree TreeB; <HEADER> DataSetFactory : [Category_Fisher_1_dsi] : Number of events in input trees; : Dataset[Category_Fisher_1_dsi] : Signal requirement: ""abs(eta)<=1.3""; : Dataset[Category_Fisher_1_dsi] : Signal -- number of events passed: 5123 / sum of weights: 5123 ; : Dataset[Category_Fisher_1_dsi] : Signal -- efficiency : 0.5123; : Dataset[Category_Fisher_1_dsi] : Background requirement: ""abs(eta)<=1.3""; : Dataset[Category_Fisher_1_dsi] : Background -- number of events passed: 5134 / sum of weights: 5134 ; : Dataset[Category_Fisher_1_dsi] : Background -- efficiency : 0.5134; : Dataset[Category_Fisher_1_dsi] : you have opted for scaling the number of requested training/testing events; : to be scaled by the preselection efficiency; : ( 0 * 0.5123 preselection efficiency); : Dataset[Category_Fisher_1_dsi] : you have opted for scaling the number of requested training/testing events; : to be scaled by the preselection efficiency; : ( 0 * 0.5134 preselection efficiency); : Number of training and testing events; : ---------------------------------------------------------------------------; : Signal -- training events : 2561; : Signal -- testing events : 2561; : Signal -- training and testing events: 5122; : Dataset[Category_Fisher_1_dsi] : Signal -- due to the preselection a scaling factor has been applied to the numbers of requested events: 0.5123; : Background -- training events : 2567; : Background -- testing events : 2567; : Background -- training and testing events: 5134; : Dataset[Category_Fisher_1_dsi] : Background -- due to the preselection a scaling factor has been applied to the numbers of requested events: 0.5134; : ; <HEADER> Data",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:6266,test,testing,6266,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,1,['test'],['testing']
Testability,"ccess(); dummy, in future should check about read access to database. TSQLResult* SQLQuery(const char* cmd, Int_t flag = 0, Bool_t* res = 0); submits query to SQL server; if flag==0, result is not interesting and will be deleted; if flag==1, return result of submitted query; if flag==2, results is may be necessary for long time; Oracle plugin do not support working with several TSQLResult; objects, therefore explicit deep copy will be produced; If ok!=0, it will contains kTRUE is Query was successfull, otherwise kFALSE. Bool_t SQLCanStatement(); Test if DB support statement and number of open statements is not exceeded. TSQLStatement* SQLStatement(const char* cmd, Int_t bufsize = 1000); Produces SQL statement for currently conected DB server. void SQLDeleteStatement(TSQLStatement* stmt); delete statement and decrease counter. Bool_t SQLApplyCommands(TObjArray* cmds); supplies set of commands to server; Commands is stored as array of TObjString. Bool_t SQLTestTable(const char* tablename); Test, if table of specified name exists. Long64_t SQLMaximumValue(const char* tablename, const char* columnname); Returns maximum value, found in specified columnname of table tablename; Column type should be numeric. void SQLDeleteAllTables(); Delete all tables in database. Bool_t SQLStartTransaction(); Start SQL transaction. Bool_t SQLCommit(); Commit SQL transaction. Bool_t SQLRollback(); Rollback all SQL operations, done after start transaction. Int_t SQLMaxIdentifierLength(); returns maximum allowed length of identifiers. void DeleteKeyFromDB(Long64_t keyid); remove key with specified id from keys table; also removes all objects data, related to this table. TKeySQL* FindSQLKey(TDirectory* dir, Long64_t keyid); Search for TKeySQL object with specified keyid. Bool_t WriteKeyData(TKeySQL* key); add entry into keys table. Bool_t UpdateKeyData(TKeySQL* key); updates (overwrites) key data in KeysTable. Long64_t DefineNextKeyId(); Returns next possible key identifier. TSQLClassInfo* Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSQLFile.html:41864,Test,Test,41864,root/html530/TSQLFile.html,https://root.cern,https://root.cern/root/html530/TSQLFile.html,5,['Test'],['Test']
Testability,"ce &ws);  ; virtual bool isCategory () const;  ; bool isConstant () const;  Check if the ""Constant"" attribute is set. ;  ; virtual bool isDerived () const;  Does value or shape of this arg depend on any other arg? ;  ; virtual bool isReducerNode () const;  ; bool IsSortable () const override;  ; bool localNoDirtyInhibit () const;  ; const TNamed * namePtr () const;  De-duplicated pointer to this object's name. ;  ; Int_t numProxies () const;  Return the number of registered proxies. ;  ; bool observableOverlaps (const RooAbsData *dset, const RooAbsArg &testArg) const;  Test if any of the dependents of the arg tree (as determined by getObservables) overlaps with those of the testArg. ;  ; bool observableOverlaps (const RooArgSet *depList, const RooAbsArg &testArg) const;  Test if any of the dependents of the arg tree (as determined by getObservables) overlaps with those of the testArg. ;  ; RooAbsArg & operator= (const RooAbsArg &other)=delete;  ; bool overlaps (const RooAbsArg &testArg, bool valueOnly=false) const;  Test if any of the nodes of tree are shared with that of the given tree. ;  ; const RooArgSet * ownedComponents () const;  ; void Print (Option_t *options=nullptr) const override;  Print the object to the defaultPrintStream(). ;  ; void printAddress (std::ostream &os) const override;  Print address of this RooAbsArg. ;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void printClassName (std::ostream &os) const override;  Print object class name. ;  ; void printCompactTree (const char *indent="""", const char *fileName=nullptr, const char *namePat=nullptr, RooAbsArg *client=nullptr);  Print tree structure of expression tree on stdout, or to file if filename is specified. ;  ; void printCompactTree (std::ostream &os, const char *indent="""", const char *namePat=nullptr, RooAbsArg *client=nullptr);  Print tree structure of expression tree on given ostream. ;  ; virtual void printCompactTreeHook (std::ostream &os",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:34506,test,testArg,34506,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,6,"['Test', 'test']","['Test', 'testArg']"
Testability,"ce ;  CMCMCIntervalPlotThis class provides simple and straightforward utilities to plot a MCMCInterval object ;  CMetropolisHastingsThis class uses the Metropolis-Hastings algorithm to construct a Markov Chain of data points using Monte Carlo ;  CMinNLLTestStatMinNLLTestStat is an implementation of the TestStatistic interface that calculates the minimum value of the negative log likelihood function and returns it as a test statistic ;  CModelConfigModelConfig is a simple class that holds configuration information specifying how a model should be used in the context of various RooStats tools ;  CNeymanConstructionNeymanConstruction is a concrete implementation of the NeymanConstruction interface that, as the name suggests, performs a NeymanConstruction ;  CNuisanceParametersSamplerHelper class for ToyMCSampler ;  CNumberCountingPdfFactoryA factory for building PDFs and data for a number counting combination ;  CNumEventsTestStatNumEventsTestStat is a simple implementation of the TestStatistic interface used for simple number counting ;  CPdfProposalPdfProposal is a concrete implementation of the ProposalFunction interface ;  CPointSetIntervalPointSetInterval is a concrete implementation of the ConfInterval interface ;  CProfileInspectorUtility class to plot conditional MLE of nuisance parameters vs ;  CProfileLikelihoodCalculatorProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator (the interface class for a tools which can produce both RooStats HypoTestResults and ConfIntervals) ;  CProfileLikelihoodTestStatProfileLikelihoodTestStat is an implementation of the TestStatistic interface that calculates the profile likelihood ratio at a particular parameter point given a dataset ;  CProofConfigHolds configuration options for proof and proof-lite ;  CProposalFunctionProposalFunction is an interface for all proposal functions that would be used with a Markov Chain Monte Carlo algorithm ;  CProposalHelper;  CRatioOfProfiledLikelihoodsTestStatTestSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:7898,Test,TestStatistic,7898,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,5,['Test'],['TestStatistic']
Testability,"ce = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; virtual Double_t Capacity () const =0;  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void ComputeBBox ()=0;  ; virtual void ComputeNormal (const Double_t *point, const Double_t *dir, Double_t *norm)=0;  ; virtual void ComputeNormal_v (const Double_t *, const Double_t *, Double_t *, Int_t);  ; virtual Bool_t Contains (const Double_t *point) const =0;  ; virtual void Contains_v (const Double_t *, Bool_t *, Int_t) const;  ; virtual Bool_t CouldBeCrossed (const Double_t *point, const Double_t *dir) const =0;  ; virtual void CreateThreadData (Int_t);  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override=0;  Computes distance from point (px,py) to the object. ;  ; virtual Double_t DistFromInside (const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const =0;  ; virtual void DistFromInside_v (const Double_t *, const Double_t *, Double_t *, Int_t, Double_t *) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoShape.html:9358,test,testNo,9358,doc/master/classTGeoShape.html,https://root.cern,https://root.cern/doc/master/classTGeoShape.html,2,"['Test', 'test']","['Test', 'testNo']"
Testability,"ce limits for 7 different model assumptions on systematic/statistical uncertainties ;  testrandom.C Performance test of all the ROOT random generator (TRandom, TRandom1, TRandom2 and TRandom3) Tests the generator TRandom3 against some ref values and creates a timing table against TRandom, TRandom1 and TRandom2 ;  testUnfold1.C Test program for the classes TUnfold and related ;  testUnfold2.C Test program as an example for a user specific regularisation scheme ;  testUnfold3.C Simple Test program for the class TUnfoldDensity ;  testUnfold4.C Test program for the class TUnfoldSys ;  testUnfold5a.C Version 17.0 example for multi-dimensional unfolding ;  testUnfold5b.C ;  testUnfold5c.C Version 17.0 example for multi-dimensional unfolding ;  testUnfold5d.C Version 17.0 example for multi-dimensional unfolding ;  tStudent.C Example macro describing the student t distribution ;  TSVDUnfoldExample.C Data unfolding using Singular Value Decomposition ;  vavilov.C Test of the TMath::Vavilov distribution ;  ► matrix;  invertMatrix.C This macro shows several ways to invert a matrix ;  solveLinear.C This macro shows several ways to perform a linear least-squares analysis ;  ► mc;  CompareMasses.CMacro to compare masses in ROOT data base to the values from pdg pdg ;  ► memstat;  memstatExample.CScript post-processing the file generated by TMemStat (default memstat.root) ;  ► mlp;  mlpHiggs.C Example of a Multi Layer Perceptron For a LEP search for invisible Higgs boson, a neural network was used to separate the signal from the background passing some selection cuts ;  mlpRegression.CThis macro shows the use of an ANN for regression analysis: given a set {i} of input vectors i and a set {o} of output vectors o, one looks for the unknown function f(i)=o ;  ► multicore;  imt001_parBranchProcessing.CDemonstrate how to activate and use the implicit parallelisation of TTree::GetEntry ;  imt101_parTreeProcessing.CIllustrate the usage of the TTreeProcessor::Process method ;  mp001_fillHist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:131524,Test,Test,131524,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['Test'],['Test']
Testability,"ce&operator=(TGLTH3Slice&&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMinMax(const Rgl::Range_t& newRange); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetSliceWidth(Int_t width = 1)MENU ; virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGLTH3Slice(const TGLTH3Slice&); TGLTH3Slice(TGLTH3Slice&&); TGLTH3Slice(const TString& sliceName, const TH3* hist, const TGLPlotCoordinates* coord, const TGLPlotBox* box, TGLTH3Slice::ESliceAxis axis); TGLTH3Slice(const TString& sliceName, const TH3* hist, const TF3* fun, const TGLPlotCoordinates* coord, const TGLPlotBox* box, TGLTH3Slice::ESliceAxis axis); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLTH3Slice.html:4720,Test,TestBit,4720,root/html602/TGLTH3Slice.html,https://root.cern,https://root.cern/root/html602/TGLTH3Slice.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ce2); 2613{; 2614 TMatrixT<Element> target;; 2615 ; 2616 if (gMatrixCheck && !AreCompatible(source1, source2)) {; 2617 Error(""operator>(const TMatrixT&,const TMatrixTSym&)"", ""matrices not compatible"");; 2618 return target;; 2619 }; 2620 ; 2621 target.ResizeTo(source1);; 2622 ; 2623 const Element *sp1 = source1.GetMatrixArray();; 2624 const Element *sp2 = source2.GetMatrixArray();; 2625 Element *tp = target.GetMatrixArray();; 2626 const Element *const tp_last = tp + target.GetNoElements();; 2627 while (tp < tp_last) {; 2628 *tp++ = (*sp1) > (*sp2);; 2629 sp1++;; 2630 sp2++;; 2631 }; 2632 ; 2633 return target;; 2634}; 2635 ; 2636////////////////////////////////////////////////////////////////////////////////; 2637/// logical operation source1 > source2; 2638 ; 2639template <class Element>; 2640TMatrixT<Element> TMatrixTAutoloadOps::operator>(const TMatrixTSym<Element> &source1, const TMatrixT<Element> &source2); 2641{; 2642 return operator<=(source2, source1);; 2643}; 2644 ; 2645////////////////////////////////////////////////////////////////////////////////; 2646/// logical operation source1 >= source2; 2647 ; 2648template <class Element>; 2649TMatrixT<Element> TMatrixTAutoloadOps::operator>=(const TMatrixT<Element> &source1, const TMatrixT<Element> &source2); 2650{; 2651 TMatrixT<Element> target;; 2652 ; 2653 if (gMatrixCheck && !AreCompatible(source1, source2)) {; 2654 Error(""operator>=(const TMatrixT&,const TMatrixT&)"", ""matrices not compatible"");; 2655 return target;; 2656 }; 2657 ; 2658 target.ResizeTo(source1);; 2659 ; 2660 const Element *sp1 = source1.GetMatrixArray();; 2661 const Element *sp2 = source2.GetMatrixArray();; 2662 Element *tp = target.GetMatrixArray();; 2663 const Element *const tp_last = tp + target.GetNoElements();; 2664 while (tp < tp_last) {; 2665 *tp++ = (*sp1) >= (*sp2);; 2666 sp1++;; 2667 sp2++;; 2668 }; 2669 ; 2670 return target;; 2671}; 2672 ; 2673////////////////////////////////////////////////////////////////////////////////; 2674/// lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixT_8cxx_source.html:92501,log,logical,92501,doc/master/TMatrixT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMatrixT_8cxx_source.html,2,['log'],['logical']
Testability,"ce2); 2806{; 2807 TMatrixT<Element> target;; 2808 ; 2809 if (gMatrixCheck && !AreCompatible(source1, source2)) {; 2810 Error(""operator<(const TMatrixT&,const TMatrixTSym&)"", ""matrices not compatible"");; 2811 return target;; 2812 }; 2813 ; 2814 target.ResizeTo(source1);; 2815 ; 2816 const Element *sp1 = source1.GetMatrixArray();; 2817 const Element *sp2 = source2.GetMatrixArray();; 2818 Element *tp = target.GetMatrixArray();; 2819 const Element *const tp_last = tp + target.GetNoElements();; 2820 while (tp < tp_last) {; 2821 *tp++ = (*sp1) < (*sp2);; 2822 sp1++;; 2823 sp2++;; 2824 }; 2825 ; 2826 return target;; 2827}; 2828 ; 2829////////////////////////////////////////////////////////////////////////////////; 2830/// logical operation source1 < source2; 2831 ; 2832template <class Element>; 2833TMatrixT<Element> TMatrixTAutoloadOps::operator<(const TMatrixTSym<Element> &source1, const TMatrixT<Element> &source2); 2834{; 2835 return operator>=(source2, source1);; 2836}; 2837 ; 2838////////////////////////////////////////////////////////////////////////////////; 2839/// logical operation source1 != source2; 2840 ; 2841template <class Element>; 2842TMatrixT<Element> TMatrixTAutoloadOps::operator!=(const TMatrixT<Element> &source1, const TMatrixT<Element> &source2); 2843{; 2844 TMatrixT<Element> target;; 2845 ; 2846 if (gMatrixCheck && !AreCompatible(source1, source2)) {; 2847 Error(""operator!=(const TMatrixT&,const TMatrixT&)"", ""matrices not compatible"");; 2848 return target;; 2849 }; 2850 ; 2851 target.ResizeTo(source1);; 2852 ; 2853 const Element *sp1 = source1.GetMatrixArray();; 2854 const Element *sp2 = source2.GetMatrixArray();; 2855 Element *tp = target.GetMatrixArray();; 2856 const Element *const tp_last = tp + target.GetNoElements();; 2857 while (tp != tp_last) {; 2858 *tp++ = (*sp1) != (*sp2);; 2859 sp1++;; 2860 sp2++;; 2861 }; 2862 ; 2863 return target;; 2864}; 2865 ; 2866////////////////////////////////////////////////////////////////////////////////; 2867/// l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixT_8cxx_source.html:99041,log,logical,99041,doc/master/TMatrixT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMatrixT_8cxx_source.html,2,['log'],['logical']
Testability,ce; : ; <HEADER> Category_Likelihood_1 : [Category_Likelihood_1_dsi] : Evaluation of Category_Likelihood_1 on testing sample (10000 events); : Elapsed time for evaluation of 10000 events: 0.00948 sec ; <HEADER> Category_Likelihood_2 : [Category_Likelihood_2_dsi] : Evaluation of Category_Likelihood_2 on testing sample (10000 events); : Elapsed time for evaluation of 10000 events: 0.00932 sec ; <HEADER> Factory : Evaluate all methods; <HEADER> Factory : Evaluate classifier: Fisher; : ; <HEADER> Fisher : [dataset] : Loop over test events and fill histograms with classifier response...; : ; <HEADER> TFHandler_Fisher : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: -0.014081 1.2910 [ -5.3119 4.5609 ]; : var2: -0.014399 1.3299 [ -4.7537 4.6723 ]; : var3: -0.027971 1.3779 [ -5.2892 4.7007 ]; : var4: 0.12966 1.4883 [ -5.1002 4.9767 ]; : -----------------------------------------------------------; <HEADER> Factory : Evaluate classifier: Likelihood; : ; <HEADER> Likelihood : [dataset] : Loop over test events and fill histograms with classifier response...; : ; <HEADER> TFHandler_Likelihood : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: -0.014081 1.2910 [ -5.3119 4.5609 ]; : var2: -0.014399 1.3299 [ -4.7537 4.6723 ]; : var3: -0.027971 1.3779 [ -5.2892 4.7007 ]; : var4: 0.12966 1.4883 [ -5.1002 4.9767 ]; : -----------------------------------------------------------; <HEADER> Factory : Evaluate classifier: FisherCat; : ; <HEADER> FisherCat : [dataset] : Loop over test events and fill histograms with classifier response...; : ; <HEADER> TFHandler_FisherCat : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: -0.014081 1.2910 [ -5.3119 4.5609 ]; : var2: -0.014399 1.3299 [ -4.7537 4.6723 ]; : var3: -0.027971 1.3779 [ -5.2892 4.7007 ]; : var4: 0.12966 1.4883 [ -5.1002 4.9767 ]; : -------------------------------------------,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationCategory_8C.html:24629,test,test,24629,doc/master/TMVAClassificationCategory_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationCategory_8C.html,1,['test'],['test']
Testability,"ce; Inherited Members; Includes; Libraries. Function documentation; ~TMLPAnalyzer(); Destructor. Int_t GetLayers(); Returns the number of layers. Int_t GetNeurons(Int_t layer); Returns the number of neurons in given layer. TString GetNeuronFormula(Int_t idx); Returns the formula used as input for neuron (idx) in; the first layer. const char* GetInputNeuronTitle(Int_t in); Returns the name of any neuron from the input layer. const char* GetOutputNeuronTitle(Int_t out); Returns the name of any neuron from the output layer. void CheckNetwork(); Gives some information about the network in the terminal. void GatherInformations(); Collect informations about what is usefull in the network.; This method has to be called first when analyzing a network.; Fills the two analysis trees. void DrawDInput(Int_t i); Draws the distribution (on the test sample) of the; impact on the network output of a small variation of; the ith input. void DrawDInputs(); Draws the distribution (on the test sample) of the; impact on the network output of a small variation of; each input.; DrawDInputs() draws something that approximates the distribution of the; derivative of the NN w.r.t. each input. That quantity is recognized as; one of the measures to determine key quantities in the network. What is done is to vary one input around its nominal value and to see; how the NN changes. This is done for each entry in the sample and produces; a distribution. What you can learn from that is:; - is variable a really useful, or is my network insensitive to it ?; - is there any risk of big systematic ? Is the network extremely sensitive; to small variations of any of my inputs ?. As you might understand, this is to be considered with care and can serve; as input for an ""educated guess"" when optimizing the network. void DrawNetwork(Int_t neuron, const char* signal, const char* bg); Draws the distribution of the neural network (using ith neuron).; Two distributions are drawn, for events passing respectively the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMLPAnalyzer.html:6981,test,test,6981,root/html528/TMLPAnalyzer.html,https://root.cern,https://root.cern/root/html528/TMLPAnalyzer.html,3,['test'],['test']
Testability,"ceAll(const char* s1, const TString& s2); TString&TString::ReplaceAll(const char* s1, const char* s2); TString&TString::ReplaceAll(const char* s1, Ssiz_t ls1, const char* s2, Ssiz_t ls2); voidTString::Resize(Ssiz_t n); static Ssiz_tTString::ResizeIncrement(Ssiz_t ri = 16); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tSizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TSubStringTString::Strip(TString::EStripType s = kTrailing, char c = ' ') const; TSubStringTString::SubString(const char* pat, Ssiz_t start = 0, TString::ECaseCompare cmp = kExact) const; TObjArray*TString::Tokenize(const TString& delim) const; Bool_tTString::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. enum TString::[unnamed] { kAlignment; };; enum TString::EStripType { kLeading; kTrailing; kBoth; };; enum TString::ECaseCompare { kExact; kIgnoreCase; };. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStringLong(); constructor. TStringLong(Ssiz_t ic); constructor. TStringLong(const TString& s); copy constructor. TStringLong(const char* s); copy constructor. TStringLong(const char* s, Ssiz_t n); constructor from a char*. TStringLong(char c); constructor from a char. TStringLong(char c, Ssiz_t s); constructor from a char. TStringLong(const TSubString& sub); constructor from a substring. ~TStringLong(); destructor. void FillBuffer(char*& buffer); Fill buffer. void ReadBuffer(char*& buffer); Read this string from the buffer. Int_t Sizeof() const; Return the sizeof the string. void Streamer(TBuf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TStringLong.html:7528,Assert,AssertElement,7528,root/html530/TStringLong.html,https://root.cern,https://root.cern/root/html530/TStringLong.html,2,['Assert'],['AssertElement']
Testability,"ceAll(const char* s1, const TString& s2); TString&TString::ReplaceAll(const char* s1, const char* s2); TString&TString::ReplaceAll(const char* s1, Ssiz_t ls1, const char* s2, Ssiz_t ls2); voidTString::Resize(Ssiz_t n); static Ssiz_tTString::ResizeIncrement(Ssiz_t ri = 16); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTString::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TSubStringTString::Strip(TString::EStripType s = kTrailing, char c = ' ') const; TSubStringTString::SubString(const char* pat, Ssiz_t start = 0, TString::ECaseCompare cmp = kExact) const; TObjArray*TString::Tokenize(const TString& delim) const; Bool_tTString::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t nc); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::Cow(); voidTString::Cow(Ssiz_t nc); voidTString::InitChar(char c); TStringRef*TString::Pref() const. Data Members; public:. enum TString::EStripType { kLeading; kTrailing; kBoth; };; enum TString::ECaseCompare { kExact; kIgnoreCase; };. protected:. char*TString::fDataref. counted data (TStringRef is in front); const TStringfFullStr; Int_tfPos; Bool_tfReturnVoid; TPRegexpfSplitRe. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE); Constructor. Bool_t NextToken(); Get the next token, it is stored in this TString.; Returns true if new token is available, false otherwise. TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE). virtual ~TStringToken(); {}. Bool_t AtEnd() const; { return fPos >= fFullStr.Length(); }. » Author: Eddy Offermann 24/06/05 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStringToken.html:7512,Assert,AssertElement,7512,root/html528/TStringToken.html,https://root.cern,https://root.cern/root/html528/TStringToken.html,1,['Assert'],['AssertElement']
Testability,"ceNull) delete fPriorNuisanceNull;; if(fPriorNuisanceAlt) delete fPriorNuisanceAlt;. HypoTestResult* GetHypoTest() const. HybridCalculatorGeneric(const RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, RooStats::TestStatSampler* sampler = 0). void SetNullModel(const RooStats::ModelConfig& nullModel); set the model for the null hypothesis (only B). { fNullModel = &nullModel; }. const ModelConfig* GetNullModel(void); set the model for the alternate hypothesis (S+B). { return fNullModel; }. void SetAlternateModel(const RooStats::ModelConfig& altModel); { fAltModel = &altModel; }. const ModelConfig* GetAlternateModel(void); Set the DataSet. { return fAltModel; }. void SetData(RooAbsData& data); { fData = &data; }. void ForcePriorNuisanceNull(RooAbsPdf& priorNuisance); Override the distribution used for marginalizing nuisance parameters that is infered from ModelConfig. { fPriorNuisanceNull = &priorNuisance; }. void ForcePriorNuisanceAlt(RooAbsPdf& priorNuisance); { fPriorNuisanceAlt = &priorNuisance; }. TestStatSampler* GetTestStatSampler(void); Returns instance of TestStatSampler. Use to change properties of; TestStatSampler, e.g. GetTestStatSampler.SetTestSize(Double_t size);. { return fTestStatSampler; }. int PreNullHook(double ) const; should return zero (to be used later for conditional flow). { return 0; }. int PreAltHook(double ) const; { return 0; }. void SetAdaptiveLimits(Double_t obsTestStat, Bool_t forNull) const. SamplingDistribution* GenerateSamplingDistribution(RooStats::ModelConfig* thisModel, double obsTestStat, RooAbsPdf* impDens = NULL, const RooArgSet* impSnapshot = NULL) const. » Author: Kyle Cranmer, Sven Kreiss 23/05/10 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2010-12-01 01:51; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__HybridCalculatorGeneric.html:3997,Test,TestStatSampler,3997,root/html528/RooStats__HybridCalculatorGeneric.html,https://root.cern,https://root.cern/root/html528/RooStats__HybridCalculatorGeneric.html,3,['Test'],['TestStatSampler']
Testability,"ce_Check(pyobject);; 200 ; 201// all C++ objects should have sq_item defined, but a user-derived class may; 202// have deleted it, in which case this is not a sequence; 203 PyTypeObject* t = Py_TYPE(pyobject);; 204 if (!t->tp_as_sequence || !t->tp_as_sequence->sq_item); 205 return false;; 206 ; 207// if this is the default getitem, it is only a sequence if it's an array type; 208 if (t->tp_as_sequence->sq_item == CPPInstance_Type.tp_as_sequence->sq_item) {; 209 if (((CPPInstance*)pyobject)->fFlags & CPPInstance::kIsArray); 210 return true;; 211 return false;; 212 }; 213 ; 214// TODO: could additionally verify whether __len__ is supported and/or whether; 215// operator()[] takes an int argument type; 216 ; 217 return true;; 218}; 219 ; 220//-----------------------------------------------------------------------------; 221bool CPyCppyy::Instance_IsLively(PyObject* pyobject); 222{; 223// Test whether the given instance can safely return to C++; 224 if (!CPPInstance_Check(pyobject)); 225 return true; // simply don't know; 226 ; 227// the instance fails the lively test if it owns the C++ object while having a; 228// reference count of 1 (meaning: it could delete the C++ instance any moment); 229 if (pyobject->ob_refcnt <= 1 && (((CPPInstance*)pyobject)->fFlags & CPPInstance::kIsOwner)); 230 return false;; 231 ; 232 return true;; 233}; 234 ; 235//-----------------------------------------------------------------------------; 236bool CPyCppyy::Overload_Check(PyObject* pyobject); 237{; 238// Test if the given pyobject is of CPPOverload derived type.; 239 if (!Initialize()); 240 return false;; 241 ; 242// detailed walk through inheritance hierarchy; 243 return CPPOverload_Check(pyobject);; 244}; 245 ; 246//-----------------------------------------------------------------------------; 247bool CPyCppyy::Overload_CheckExact(PyObject* pyobject); 248{; 249// Test if the given pyobject is of CPPOverload type.; 250 if (!Initialize()); 251 return false;; 252 ; 253// direct pointer co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/API_8cxx_source.html:7672,Test,Test,7672,doc/master/API_8cxx_source.html,https://root.cern,https://root.cern/doc/master/API_8cxx_source.html,3,"['Test', 'test']","['Test', 'test']"
Testability,"cence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » First Steps With ROOT Showing results with ROOT. The ROOT framework consists of many classes, grouped into several categories. Finally, the latter are grouped into few top-level categories. Each top-level category comes with a basic description of the framework design and of the purpose of its categories, which also have more detailed documentation about their use. The most complete documentation is the Reference Guide, that contains the automatically generated documentation of each class.; This document is about the top-level categories related to graphical output. . ‹ TMVA; up; Canvases and pads ›. Navigate through this book; Processing data with ROOT; Showing results with ROOTCanvases and pads; Graphics 2D; Graphics 3D. Simulation in ROOT; ROOT I/O. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/showing-results-root.html:3162,test,tests,3162,d/showing-results-root.html,https://root.cern,https://root.cern/d/showing-results-root.html,2,"['Benchmark', 'test']","['Benchmarks', 'tests']"
Testability,"cene rebuilds, discarding those no longer of interest.; 9.13.4.10 Child Objects; In many geometries there is a rigid containment hierarchy, and so if the viewer is not interested in a certain object due to limits/size then it will also not be interest in any of the contained branch of siblings. Both TBuffer3D::AddObject() methods have an addChildren return parameter. The viewer will complete this (if passed) indicating if children of the object just sent are worth sending.; 9.13.4.11 Recycling TBuffer3D; Once add TBuffer3D::AddObject() has been called, the contents are copied to the viewer’s internal data structures. You are free to destroy this TBuffer3D, or recycle it for the next object if suitable.; 9.13.4.12 Examples; For an example of a simple geometry, working in master reference frame examine the code under $ROOTSYS/g3d. For a more complex example, which works in both master and local frames, and uses logical/physical division of shape geometry and placement, examine the code under $ROOTSYS/geom - in particular TGeoShape hierarchy, and the painter object TGeoPainter (under geopainter) where the negotiation with the viewer is performed.; 10 Folders and Tasks; 10.1 Folders. A TFolder is a collection of objects visible and expandable in the ROOT object browser. Folders have a name and a title and are identified in the folder hierarchy by an “UNIX-like” naming convention. The base of all folders is //root. It is visible at the top of the left panel in the browser. The browser shows several folders under //root.; New folders can be added and removed to/from a folder.; 10.2 Why Use Folders?; One reason to use folders is to reduce class dependencies and improve modularity. Each set of data has a producer class and one or many consumer classes. When using folders, the producer class places a pointer to the data into a folder, and the consumer class retrieves a reference to the folder.; The consumer can access the objects in a folder by specifying the path name of the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:418104,log,logical,418104,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['log'],['logical']
Testability,"cent< Architecture_t >::TrainMomentum ; (; const Data_t & ; TrainingDataIn, . size_t ; nTrainingSamples, . const Data_t & ; TestDataIn, . size_t ; nTestSamples, . Net_t & ; net, . Scalar_t ; momentum, . size_t ; nThreads = 1 . ). Same as Train(...) but uses the given momentum. . Member Data Documentation. ◆ fBatchSize. template<typename Architecture_t > . size_t TMVA::DNN::TGradientDescent< Architecture_t >::fBatchSize. private . Batch size to use for the training. ; Definition at line 62 of file Minimizers.h. ◆ fConvergenceCount. template<typename Architecture_t > . size_t TMVA::DNN::TGradientDescent< Architecture_t >::fConvergenceCount. private . Current number of training epochs without. ; considerable decrease in the test error. ; Definition at line 66 of file Minimizers.h. ◆ fConvergenceSteps. template<typename Architecture_t > . size_t TMVA::DNN::TGradientDescent< Architecture_t >::fConvergenceSteps. private . Number of training epochs without considerable. ; decrease in the test error for convergence. ; Definition at line 64 of file Minimizers.h. ◆ fLearningRate. template<typename Architecture_t > . Scalar_t TMVA::DNN::TGradientDescent< Architecture_t >::fLearningRate. private . Learning rate \(\alpha\). ; Definition at line 71 of file Minimizers.h. ◆ fMinimumError. template<typename Architecture_t > . Scalar_t TMVA::DNN::TGradientDescent< Architecture_t >::fMinimumError. private . The minimum loss achieved on the training set during the current training session. ; Definition at line 72 of file Minimizers.h. ◆ fStepCount. template<typename Architecture_t > . size_t TMVA::DNN::TGradientDescent< Architecture_t >::fStepCount. private . Number of steps performed in the current training session. ; Definition at line 63 of file Minimizers.h. ◆ fTestError. template<typename Architecture_t > . Scalar_t TMVA::DNN::TGradientDescent< Architecture_t >::fTestError. private . Holds the most recently computed test loss. ; Definition at line 70 of file Minimizers.h. ◆ fTestI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TGradientDescent.html:15292,test,test,15292,doc/master/classTMVA_1_1DNN_1_1TGradientDescent.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TGradientDescent.html,1,['test'],['test']
Testability,"center and last bin center for each coordinate: ; fXAxis.GetBinCenter(1) < x < fXaxis.GetBinCenter(nbinX) AND fYAxis.GetBinCenter(1) < y < fYaxis.GetBinCenter(nbinY) AND fZAxis.GetBinCenter(1) < z < fZaxis.GetBinCenter(nbinZ) ; Reimplemented from TH1.; Definition at line 1458 of file TH3.cxx. ◆ IsA(). TClass * TH3::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TH1.; Reimplemented in TH3C, TH3S, TH3I, TH3L, TH3F, TH3D, and TProfile3D.; Definition at line 152 of file TH3.h. ◆ KolmogorovTest(). Double_t TH3::KolmogorovTest ; (; const TH1 * ; h2, . Option_t * ; option = """" . ); const. overridevirtual . Statistical test of compatibility in shape between THIS histogram and h2, using Kolmogorov test. ; Default: Ignore under- and overflow bins in comparison; option is a character string to specify options ""U"" include Underflows in test ""O"" include Overflows ""N"" include comparison of normalizations ""D"" Put out a line of ""Debug"" printout ""M"" Return the Maximum Kolmogorov distance instead of prob; The returned function value is the probability of test (much less than one means NOT compatible); The KS test uses the distance between the pseudo-CDF's obtained from the histogram. Since in more than 1D the order for generating the pseudo-CDF is arbitrary, we use the pseudo-CDF's obtained from all the possible 6 combinations of the 3 axis. The average of all the maximum distances obtained is used in the tests. ; Reimplemented from TH1.; Definition at line 1532 of file TH3.cxx. ◆ operator=(). TH3 & TH3::operator= ; (; const TH3 & ; ). privatedelete . ◆ Project3D(). TH1 * TH3::Project3D ; (; Option_t * ; option = ""x""); const. virtual . Project a 3-d histogram into 1 or 2-d histograms depending on the option parameter, which may contain a combination of the characters x,y,z,e. . option = ""x"" return the x projection into a TH1D histogram; option = ""y"" return the y projection into a TH1D histogram; option = ""z"" return the z project",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3.html:89367,test,test,89367,doc/master/classTH3.html,https://root.cern,https://root.cern/doc/master/classTH3.html,3,['test'],['test']
Testability,"ces each array by one index in an attempt to move through the equality. However, this is incorrect when one or the other of a or b (or both) have a repeated value, call it x. For the KS statistic to be computed properly, rdiff needs to be calculated after all of the a and b at x have been tallied (this is due to the definition of the empirical distribution function; another way to convince yourself that the old CERNLIB method is wrong is that it implies that the function defined as the difference between a and b is multi-valued at x – besides being ugly, this would invalidate Kolmogorov's theorem).; The solution is to just add while-loops into the equality-case handling to perform the tally:; } else {; double x = a[ia-1];; while(a[ia-1] == x && ia <= na) {; rdiff -= sa;; ia++;; }; while(b[ib-1] == x && ib <= nb) {; rdiff += sb;; ib++;; }; if (ia > na) {ok = kTRUE; break;}; if (ib > nb) {ok = kTRUE; break;}; }; xDouble_t x[n]Definition legend1.C:17. Note:; A good description of the Kolmogorov test can be seen at: http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm ; Definition at line 805 of file TMath.cxx. ◆ KOrdStat(). template<class Element , typename Size > . Element TMath::KOrdStat ; (; Size ; n, . const Element * ; a, . Size ; k, . Size * ; work = 0 . ). Returns k_th order statistic of the array a of size n (k_th smallest element out of n elements). ; C-convention is used for array indexing, so if you want the second smallest element, call KOrdStat(n, a, 1).; If work is supplied, it is used to store the sorting index and assumed to be >= n. If work=0, local storage is used, either on the stack if n < kWorkMax or on the heap for n >= kWorkMax. Note that the work index array will not contain the sorted indices but all indices of the smaller element in arbitrary order in work[0,...,k-1] and all indices of the larger element in arbitrary order in work[k+1,..,n-1] work[k] will contain instead the index of the returned element.; Taken from ""Numerical Recip",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMath.html:54695,test,test,54695,doc/master/namespaceTMath.html,https://root.cern,https://root.cern/doc/master/namespaceTMath.html,1,['test'],['test']
Testability,"cess, -1 in case of error. Int_t Broadcast(const char* mess, Int_t kind = kMESS_STRING, Int_t type = kRRT_Undef); Broadcast a character string buffer to the remote session.; Use kind to set the TMessage what field.; Returns 0 on success, -1 in case of error. Int_t BroadcastObject(const TObject* obj, Int_t kind = kMESS_OBJECT); Broadcast an object to the remote session.; Use kind to set the TMessage what field.; Returns 0 on success, -1 in case of error. Int_t BroadcastRaw(const void* buffer, Int_t length); Broadcast a raw buffer of specified length to the remote session.; Returns 0 on success, -1 in case of error. Int_t Collect(Long_t timeout = -1); Collect responses from the remote server.; Returns the number of messages received.; If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; which means wait forever). Int_t CollectInput(); Collect and analyze available input from the socket.; Returns 0 on success, -1 if any failure occurs. void RecvLogFile(Int_t size); Receive the log file from the server. Int_t SendObject(const TObject* obj); Send object to server.; Return 0 on success, -1 in case of error. Bool_t CheckFile(const char* file, Long_t modtime); Check if a file needs to be send to the server. Use the following; algorithm:; - check if file appears in file map; - if yes, get file's modtime and check against time in map,; if modtime not same get md5 and compare against md5 in map,; if not same return kTRUE.; - if no, get file's md5 and modtime and store in file map, ask; slave if file exists with specific md5, if yes return kFALSE,; if no return kTRUE.; Returns kTRUE in case file needs to be send, returns kFALSE in case; file is already on remote node. Int_t SendFile(const char* file, Int_t opt = kAscii, const char* rfile = 0); Send a file to the server. Return 0 on success, -1 in case of error.; If defined, the full path of the remote path will be rfile.; The mask 'opt' is an or of ESendFileOpt:. kAscii (0x0) if set true ascii file transfer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplicationRemote.html:14863,log,log,14863,root/html526/TApplicationRemote.html,https://root.cern,https://root.cern/root/html526/TApplicationRemote.html,7,['log'],['log']
Testability,"cessFill(Long64_t entry); virtual voidTSelectorDraw::ProcessFillMultiple(Long64_t entry); virtual voidTSelectorDraw::ProcessFillObject(Long64_t entry); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTSelector::ResetAbort(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTSelectorDraw::SetEstimate(Long64_t n); virtual voidTSelector::SetInputList(TList* input); virtual voidTSelector::SetObject(TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTSelector::SetOption(const char* option); virtual voidTSelector::SetStatus(Long64_t status); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidTSelector::SlaveBegin(TTree*); virtual voidTSelector::SlaveTerminate(); virtual UInt_tTSelectorDraw::SplitNames(const TString& varexp, vector<TString>& names); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTSelectorDraw::TakeAction(); virtual voidTSelectorDraw::TakeEstimate(); virtual voidTSelectorDraw::Terminate(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TEveSelectorToEventList(TEventList* evl, const char* sel); virtual voidTObject::UseCurrentStyle(); virtual Int_tVersion() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveSelectorToEventList.html:6809,Test,TestBit,6809,root/html602/TEveSelectorToEventList.html,https://root.cern,https://root.cern/root/html602/TEveSelectorToEventList.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"cessMessage(const char* mess, const TObject* obj); static Int_tProjectAitoff2xy(Double_t l, Double_t b, Double_t& Al, Double_t& Ab); static Int_tProjectMercator2xy(Double_t l, Double_t b, Double_t& Al, Double_t& Ab); static Int_tProjectParabolic2xy(Double_t l, Double_t b, Double_t& Al, Double_t& Ab); static Int_tProjectSinusoidal2xy(Double_t l, Double_t b, Double_t& Al, Double_t& Ab); virtual Int_tTObject::Read(const char* name); virtual voidRecalculateRange(); virtual voidRecursiveRemove(TObject*); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetHistogram(TH1* h); static voidTObject::SetObjectStat(Bool_t stat); static voidTVirtualHistPainter::SetPainter(const char* painter); virtual voidSetShowProjection(const char* option, Int_t nbins); virtual voidSetStack(TList* stack); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidShowProjection3(Int_t px, Int_t py); virtual voidShowProjectionX(Int_t px, Int_t py); virtual voidShowProjectionY(Int_t px, Int_t py); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual Int_tTableInit(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; THistPainter(); THistPainter(const THistPainter&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THistPainter.html:88012,Test,TestBit,88012,root/html602/THistPainter.html,https://root.cern,https://root.cern/root/html602/THistPainter.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"cessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServ (Int_t *argc, char **argv, FILE *flog=0);  Main constructor. ;  ;  ~TProofServ () override;  Cleanup. ;  ; virtual Int_t CreateServer ();  Finalize the server setup. ;  ; virtual void DisableTimeout ();  ; virtual void EnableTimeout ();  ; void FlushLogFile ();  Reposition the read pointer in the log file to the very end. ;  ; TObject * Get (const char *namecycle);  Get object with name ""name;cycle"" (e.g. ;  ; Int_t GetActSessions () const;  ; const char * GetCacheDir () const;  ; TProofLockPath * GetCacheLock ();  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataDir () const;  ; const char * GetDataDirOpts () const;  ; Float_t GetEffSessions () const;  ; TList * GetEnabledPackages () const;  ; const char * GetGroup () const;  ; Int_t GetGroupId () const;  ; Int_t GetGroupSize () const;  ; const char * GetImage () const;  ; Int_t GetLogLevel () const;  ; Long64_t GetMsgSizeHWM () const;  ; TDSetElement * GetNextPacket (Long64_t totalEntries=-1);  Get next range of entries to be processed on this server. ;  ; void GetOptions (Int_t *argc, char **argv) override;  Get and handle command line options. ;  ; const char * GetOrdinal () const;  ; TPackMg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServ.html:2106,log,log,2106,doc/master/classTProofServ.html,https://root.cern,https://root.cern/doc/master/classTProofServ.html,1,['log'],['log']
Testability,"cetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to an ellipse. Compute the closest distance of approach from point px,py to this; ellipse. The distance is computed in pixels units. In case of a filled ellipse the distance returned is 0 if the point; (px,py) is inside the ellipse, and is huge if the point is outside. void Draw(Option_t* option = """"); Draw this ellipse with its current attributes. void DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when a line is clicked with the locator. If Left button clicked on one of the line end points, this point; follows the cursor until button is released. if Middle button clicked, the line is moved parallel to itself; until the button is released. NOTE that support for log scale is not implemented. void ls(Option_t* option = """") const; List this ellipse with its attributes. void Paint(Option_t* option = """"); Paint this ellipse with its current attributes. void PaintEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void Print(Option_t* option = """") const; Dump this ellipse with its attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. Bool_t GetNoEdges() const; Return kTRUE if kNoEdges bit is set, kFALSE otherwise. void SetNoEdges(Bool_t noEdges = kTRUE); if noEdges = kTRUE the lines connecting the center to the edges; will not be drawn.; default is to draw the edges. void Streamer(TBuffer& ); Stream an object of class TEllipse. Rectangle_t GetBBox(); Return the bounding Box of the Ellipse, currently not taking into; account the rotating angle. TPoint GetBBoxC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEllipse.html:10985,log,log,10985,root/html534/TEllipse.html,https://root.cern,https://root.cern/root/html534/TEllipse.html,3,['log'],['log']
Testability,"cetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to an ellipse. Compute the closest distance of approach from point px,py to this; ellipse. The distance is computed in pixels units. In case of a filled ellipse the distance returned is 0 if the point; (px,py) is inside the ellipse, and is huge if the point is outside. void Draw(Option_t* option = """"); Draw this ellipse with its current attributes. void DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when a line is clicked with the locator. If Left button clicked on one of the line end points, this point; follows the cursor until button is released. if Middle button clicked, the line is moved parallel to itself; until the button is released. NOTE that support for log scale is not implemented. void ls(Option_t* option = """") const; List this ellipse with its attributes. void Paint(Option_t* option = """"); Paint this ellipse with its current attributes. void PaintEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); Draw this ellipse with new coordinates. void Print(Option_t* option = """") const; Dump this ellipse with its attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. Bool_t GetNoEdges() const; Return kTRUE if kNoEdges bit is set, kFALSE otherwise. void SetNoEdges(Bool_t noEdges = kTRUE); if noEdges = kTRUE the lines connecting the center to the edges; will not be drawn.; default is to draw the edges. void Streamer(TBuffer& b); Stream an object of class TEllipse. Double_t GetX1() const; {return fX1;}. Double_t GetY1() const; {return fY1;}. Double_t GetR1() const; {return fR1;}. Double_t GetR2(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEllipse.html:10358,log,log,10358,root/html528/TEllipse.html,https://root.cern,https://root.cern/root/html528/TEllipse.html,3,['log'],['log']
Testability,"cfunc = 0); virtual voidTBufferFile::SetStreamerElementNumber(TStreamerElement*, Int_t); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetWhat(UInt_t what); voidTBuffer::SetWriteMode(); virtual voidTBufferFile::SetWriteParam(Int_t mapsize); virtual voidShowMembers(TMemberInspector&); virtual voidTBufferFile::SkipObjectAny(); virtual voidTBufferFile::SkipVersion(const TClass* cl = 0); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTBufferFile::StreamObject(TObject* obj); virtual voidTBufferFile::StreamObject(void* obj, const type_info& typeinfo, const TClass* onFileClass = 0); virtual voidTBufferFile::StreamObject(void* obj, const char* className, const TClass* onFileClass = 0); virtual voidTBufferFile::StreamObject(void* obj, const TClass* cl, const TClass* onFileClass = 0); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTagStreamerInfo(TVirtualStreamerInfo* info); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Int_tUncompress(); virtual voidTObject::UseCurrentStyle(); Bool_tUsesSchemaEvolution() const; static Bool_tUsesSchemaEvolutionForAll(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; UInt_tWhat() const; virtual voidTBufferFile::WriteArray(const Bool_t* b, Int_t n); virtual voidTBufferFile::WriteArray(const Char_t* c, Int_t n); virtual voidTBufferFile::WriteArray(const UChar_t* c, Int_t n); virtual voidTBufferFile::WriteArray(const Short_t* h, Int_t n); virtual voidTBufferFile::WriteArray(const UShort_t* h, Int_t n); virtual voidTBufferFile::WriteArray(const Int_t* i, Int_t n); virtual voidTBufferFile::WriteArray(const UInt_t* i, Int_t n); virtual voidTBufferFile::WriteArray(const Long_t* l, Int_t n); virtual voidTBufferFile::WriteArray(const ULong_t* l, Int_t n); virtual voidTBufferFile::WriteArray(const Long64_t* l, Int_t n); virtual voidTBufferFile::WriteArray(const ULong64_t* ll, Int_t n); virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMessage.html:14742,Test,TestBit,14742,root/html534/TMessage.html,https://root.cern,https://root.cern/root/html534/TMessage.html,1,['Test'],['TestBit']
Testability,"ch ;  CTProofBenchRunAbstract base class for PROOF benchmark runs ;  CTProofBenchRunCPUCPU-intensive PROOF benchmark test generates events and fill 1, 2, or 3-D histograms ;  CTProofBenchRunDataReadI/O-intensive PROOF benchmark test reads in event files distributed on the cluster ;  CTProofChain;  CTProofCondor;  CTProofDebug;  CTProofDesc;  CTProofDrawImplement Tree drawing using PROOF ;  CTProofDrawEntryList;  CTProofDrawEventList;  CTProofDrawGraph;  CTProofDrawHist;  ►CTProofDrawListOfGraphs;  CPoint3D_t;  ►CTProofDrawListOfPolyMarkers3D;  CPoint4D_t;  CTProofDrawPolyMarker3D;  CTProofDrawProfile;  CTProofDrawProfile2D;  CTProofInputHandler;  CTProofInterruptHandler;  CTProofLimitsFinderClass to find axis limits and synchronize them between workers ;  CTProofLiteThis class starts a PROOF session on the local machine: no daemons, client and master merged, communications via UNIX-like sockets ;  CTProofLockPath;  CTProofLockPathGuard;  CTProofLogImplementation of the PROOF session log handler ;  CTProofLogElem;  CTProofMergePrg;  CTProofMgrThe PROOF manager interacts with the PROOF server coordinator to create or destroy a PROOF session, attach to or detach from existing one, and to monitor any client activity on the cluster ;  CTProofMgrLiteBasic TProofMgr functionality implementation in the case of Lite session ;  ►CTProofMonSenderProvides the interface for PROOF monitoring to different writers ;  CTDSetPlet;  CTProofMonSenderMLTProofMonSender implementation for the ML writer ;  CTProofMonSenderSQLTProofMonSender implementation for the SQL writers ;  CTProofNodeInfoThe purpose of this class is to provide a complete node description for masters, submasters and workers ;  CTProofNodesPROOF worker node information ;  CTProofOutputFileClass to steer the merging of files produced on the workers ;  CTProofOutputListDerivation of TList with an overload of ls() and Print() allowing to filter out some of the variables ;  CTProofPerfAnalysisSet of tools to analyse the per",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:178301,log,log,178301,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,4,['log'],['log']
Testability,"ch allow to fix appropriate x positions of 1D ridges (not fit). However they are present in the estimated functional ; Definition at line 97 of file TSpectrum2Fit.h. ◆ fFixPositionY. Bool_t* TSpectrum2Fit::fFixPositionY. protected . [fNPeaks] array of logical values which allow to fix appropriate y positions of 2D peaks (not fit). However they are present in the estimated functional ; Definition at line 96 of file TSpectrum2Fit.h. ◆ fFixPositionY1. Bool_t* TSpectrum2Fit::fFixPositionY1. protected . [fNPeaks] array of logical values which allow to fix appropriate y positions of 1D ridges (not fit). However they are present in the estimated functional ; Definition at line 98 of file TSpectrum2Fit.h. ◆ fFixRo. Bool_t TSpectrum2Fit::fFixRo. protected . logical value of correlation coefficient, which allows to fix the parameter (not to fit). ; Definition at line 104 of file TSpectrum2Fit.h. ◆ fFixSigmaX. Bool_t TSpectrum2Fit::fFixSigmaX. protected . logical value of sigma x parameter, which allows to fix the parameter (not to fit). ; Definition at line 102 of file TSpectrum2Fit.h. ◆ fFixSigmaY. Bool_t TSpectrum2Fit::fFixSigmaY. protected . logical value of sigma y parameter, which allows to fix the parameter (not to fit). ; Definition at line 103 of file TSpectrum2Fit.h. ◆ fFixSx. Bool_t TSpectrum2Fit::fFixSx. protected . logical value of s parameter for 1D ridges in x direction, which allows to fix the parameter (not to fit). ; Definition at line 109 of file TSpectrum2Fit.h. ◆ fFixSxy. Bool_t TSpectrum2Fit::fFixSxy. protected . logical value of s parameter for 2D peaks, which allows to fix the parameter (not to fit). ; Definition at line 106 of file TSpectrum2Fit.h. ◆ fFixSy. Bool_t TSpectrum2Fit::fFixSy. protected . logical value of s parameter for 1D ridges in y direction, which allows to fix the parameter (not to fit). ; Definition at line 110 of file TSpectrum2Fit.h. ◆ fFixTx. Bool_t TSpectrum2Fit::fFixTx. protected . logical value of t parameter for 1D ridges in x ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Fit.html:85898,log,logical,85898,doc/master/classTSpectrum2Fit.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Fit.html,1,['log'],['logical']
Testability,"ch allows to fix the parameter (not to fit). ;  ; Bool_t * fFixAmp;  [fNPeaks] array of logical values which allow to fix appropriate amplitudes of 2D peaks (not fit). However they are present in the estimated functional ;  ; Bool_t * fFixAmpX1;  [fNPeaks] array of logical values which allow to fix appropriate amplitudes of 1D ridges in x direction (not fit). However they are present in the estimated functional ;  ; Bool_t * fFixAmpY1;  [fNPeaks] array of logical values which allow to fix appropriate amplitudes of 1D ridges in y direction (not fit). However they are present in the estimated functional ;  ; Bool_t fFixAx;  logical value of ax parameter, which allows to fix the parameter (not to fit). ;  ; Bool_t fFixAy;  logical value of ay parameter, which allows to fix the parameter (not to fit). ;  ; Bool_t fFixBx;  logical value of b parameter for 1D ridges in x direction, which allows to fix the parameter (not to fit). ;  ; Bool_t fFixBy;  logical value of b parameter for 1D ridges in y direction, which allows to fix the parameter (not to fit). ;  ; Bool_t * fFixPositionX;  [fNPeaks] array of logical values which allow to fix appropriate x positions of 2D peaks (not fit). However they are present in the estimated functional ;  ; Bool_t * fFixPositionX1;  [fNPeaks] array of logical values which allow to fix appropriate x positions of 1D ridges (not fit). However they are present in the estimated functional ;  ; Bool_t * fFixPositionY;  [fNPeaks] array of logical values which allow to fix appropriate y positions of 2D peaks (not fit). However they are present in the estimated functional ;  ; Bool_t * fFixPositionY1;  [fNPeaks] array of logical values which allow to fix appropriate y positions of 1D ridges (not fit). However they are present in the estimated functional ;  ; Bool_t fFixRo;  logical value of correlation coefficient, which allows to fix the parameter (not to fit). ;  ; Bool_t fFixSigmaX;  logical value of sigma x parameter, which allows to fix the par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Fit.html:26848,log,logical,26848,doc/master/classTSpectrum2Fit.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Fit.html,1,['log'],['logical']
Testability,"ch status when used as a branch; TStringTNamed::fTitleobject title. private:. static TChainElement::EStatusBitskHasBeenLookedUp. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TChainElement(); Default constructor for a chain element. TChainElement(const char* title, const char* filename); Create a chain element. ~TChainElement(); Default destructor for a chain element. void CreatePackets(); Initialize the packet descriptor string. void ls(Option_t* option = """") const; List files in the chain. void SetPacketSize(Int_t size = 100); Set number of entries per packet for parallel root. void SetLookedUp(Bool_t y = kTRUE); Set/Reset the looked-up bit. TChainElement(). void * GetBaddress() const; {return fBaddress;}. const char * GetBaddressClassName() const; { return fBaddressClassName; }. Bool_t GetBaddressIsPtr() const; { return fBaddressIsPtr; }. UInt_t GetBaddressType() const; { return fBaddressType; }. TBranch ** GetBranchPtr() const; { return fBranchPtr; }. Long64_t GetEntries() const; {return fEntries;}. char * GetPackets() const; {return fPackets;}. Int_t GetPacketSize() const; {return fPacketSize;}. Int_t GetStatus() const; {return fStatus;}. Bool_t HasBeenLookedUp(); { return TestBit(kHasBeenLookedUp); }. void SetBaddress(void* add); {fBaddress = add;}. void SetBaddressClassName(const char* clname); { fBaddressClassName = clname; }. void SetBaddressIsPtr(Bool_t isptr); { fBaddressIsPtr = isptr; }. void SetBaddressType(UInt_t type); { fBaddressType = type; }. void SetBranchPtr(TBranch** ptr); { fBranchPtr = ptr; }. void SetNumberEntries(Long64_t n); {fEntries=n;}. void SetStatus(Int_t status); {fStatus = status;}. » Author: Rene Brun 11/02/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id$ » Last generated: 2015-06-02 15:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TChainElement.html:8560,Test,TestBit,8560,root/html604/TChainElement.html,https://root.cern,https://root.cern/root/html604/TChainElement.html,1,['Test'],['TestBit']
Testability,"ch status when used as a branch; TStringTNamed::fTitleobject title. private:. static TChainElement::EStatusBitskHasBeenLookedUp. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TChainElement(); Default constructor for a chain element. TChainElement(const char* title, const char* filename); Create a chain element. ~TChainElement(); Default destructor for a chain element. void CreatePackets(); Initialize the packet descriptor string. void ls(Option_t* option = """") const; List files in the chain. void SetPacketSize(Int_t size = 100); Set number of entries per packet for parallel root. void SetLookedUp(Bool_t y = kTRUE); Set/Reset the looked-up bit. TChainElement(). void * GetBaddress() const; {return fBaddress;}. const char * GetBaddressClassName() const; { return fBaddressClassName; }. Bool_t GetBaddressIsPtr() const; { return fBaddressIsPtr; }. UInt_t GetBaddressType() const; { return fBaddressType; }. TBranch ** GetBranchPtr() const; { return fBranchPtr; }. Long64_t GetEntries() const; {return fEntries;}. char * GetPackets() const; {return fPackets;}. Int_t GetPacketSize() const; {return fPacketSize;}. Int_t GetStatus() const; {return fStatus;}. Bool_t HasBeenLookedUp(); { return TestBit(kHasBeenLookedUp); }. void SetBaddress(void* add); {fBaddress = add;}. void SetBaddressClassName(const char* clname); { fBaddressClassName = clname; }. void SetBaddressIsPtr(Bool_t isptr); { fBaddressIsPtr = isptr; }. void SetBaddressType(UInt_t type); { fBaddressType = type; }. void SetBranchPtr(TBranch** ptr); { fBranchPtr = ptr; }. void SetNumberEntries(Long64_t n); {fEntries=n;}. void SetStatus(Int_t status); {fStatus = status;}. » Author: Rene Brun 11/02/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/tree:$Id$ » Last generated: 2015-06-30 14:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TChainElement.html:8560,Test,TestBit,8560,root/html602/TChainElement.html,https://root.cern,https://root.cern/root/html602/TChainElement.html,1,['Test'],['TestBit']
Testability,"ch) std::cout << ""\n End batch loop - compute validation loss \n"";; 1533 //}; 1534 debugFirstEpoch = false;; 1535 if ((nTrainEpochs % settings.testInterval) == 0) {; 1536 ; 1537 std::chrono::time_point<std::chrono::system_clock> t1,t2;; 1538 ; 1539 t1 = std::chrono::system_clock::now();; 1540 ; 1541 // Compute validation error.; 1542 ; 1543 ; 1544 Double_t valError = 0.0;; 1545 bool inTraining = false;; 1546 for (auto batch : validationData) {; 1547 auto inputTensor = batch.GetInput();; 1548 auto outputMatrix = batch.GetOutput();; 1549 auto weights = batch.GetWeights();; 1550 // should we apply droput to the loss ??; 1551 valError += deepNet.Loss(inputTensor, outputMatrix, weights, inTraining, includeRegularization);; 1552 }; 1553 // normalize loss to number of batches and add regularization term; 1554 Double_t regTerm = (includeRegularization) ? deepNet.RegularizationTerm() : 0.0;; 1555 valError /= (Double_t)(nValidationSamples / settings.batchSize);; 1556 valError += regTerm;; 1557 ; 1558 //Log the loss value; 1559 fTrainHistory.AddValue(""valError"",nTrainEpochs,valError);; 1560 ; 1561 t2 = std::chrono::system_clock::now();; 1562 ; 1563 // checking for convergence; 1564 if (valError < minValError) {; 1565 convergenceCount = 0;; 1566 } else {; 1567 convergenceCount += settings.testInterval;; 1568 }; 1569 ; 1570 // copy configuration when reached a minimum error; 1571 if (valError < minValError ) {; 1572 // Copy weights from deepNet to fNet; 1573 Log() << std::setw(10) << nTrainEpochs; 1574 << "" Minimum Test error found - save the configuration "" << Endl;; 1575 for (size_t i = 0; i < deepNet.GetDepth(); ++i) {; 1576 fNet->GetLayerAt(i)->CopyParameters(*deepNet.GetLayerAt(i));; 1577 // if (i == 0 && deepNet.GetLayerAt(0)->GetWeights().size() > 1) {; 1578 // Architecture_t::PrintTensor(deepNet.GetLayerAt(0)->GetWeightsAt(0), "" input weights"");; 1579 // Architecture_t::PrintTensor(deepNet.GetLayerAt(0)->GetWeightsAt(1), "" state weights"");; 1580 // }; 1581 }; 1582 // Arch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:61872,Log,Log,61872,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['Log'],['Log']
Testability,"ch; , ;   kC50; , kRSNNS; , kRSVM; , kRXGB; , ;   kCrossValidation; , kMaxMethod. };  ; enum  ESBType { ;   kSignal = 0; , kBackground; , kSBBoth; , kMaxSBType; , ;   kTrueType. };  ; enum  ETreeType { ;   kTraining = 0; , kTesting; , kMaxTreeType; , kValidation; , ;   kTrainingOriginal. };  ; enum  EVariableTransform { ;   kIdentity = 0; , kDecorrelated; , kNormalized; , kPCA; , ;   kRearranged; , kGauss; , kUniform; , kMaxVariableTransform. };  . Public Member Functions;  ~Types ();  ; Bool_t AddTypeMapping (Types::EMVA method, const TString &methodname);  ; TString GetMethodName (Types::EMVA method) const;  ; Types::EMVA GetMethodType (const TString &method) const;  returns the method type (enum) for a given method (string) ;  . Static Public Member Functions; static void DestroyInstance ();  ""destructor"" of the single instance ;  ; static Types & Instance ();  The single instance of ""Types"" if existing already, or create it (Singleton) ;  . Private Member Functions;  Types ();  constructor ;  ; MsgLogger & Log () const;  . Private Attributes; MsgLogger * fLogger;  ! message logger ;  ; std::map< TString, TMVA::Types::EMVA > fStr2type;  types-to-text map ;  . Static Private Attributes; static std::atomic< Types * > fgTypesPtr {0};  . #include <TMVA/Types.h>; Member Enumeration Documentation. ◆ EAnalysisType. enum TMVA::Types::EAnalysisType. EnumeratorkClassification ; kRegression ; kMulticlass ; kNoAnalysisType ; kMaxAnalysisType . Definition at line 126 of file Types.h. ◆ EBoostStage. enum TMVA::Types::EBoostStage. EnumeratorkBoostProcBegin ; kBeforeTraining ; kBeforeBoosting ; kAfterBoosting ; kBoostProcEnd . Definition at line 150 of file Types.h. ◆ EMVA. enum TMVA::Types::EMVA. EnumeratorkVariable ; kCuts ; kLikelihood ; kPDERS ; kHMatrix ; kFisher ; kKNN ; kCFMlpANN ; kTMlpANN ; kBDT ; kDT ; kRuleFit ; kSVM ; kMLP ; kBayesClassifier ; kFDA ; kBoost ; kPDEFoam ; kLD ; kPlugins ; kCategory ; kDNN ; kDL ; kPyRandomForest ; kPyAdaBoost ; kPyGTB ; kPyKeras ; kPyT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Types.html:2085,Log,Log,2085,doc/master/classTMVA_1_1Types.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Types.html,1,['Log'],['Log']
Testability,"chTree ; (; const Event * ; ev). This method inserts the given event 'ev' it into the binary search tree. ; Definition at line 144 of file PDEFoamDensityBase.cxx. ◆ GetBox(). const std::vector< Double_t > & TMVA::PDEFoamDensityBase::GetBox ; (; ); const. inline . Definition at line 75 of file PDEFoamDensityBase.h. ◆ GetBoxVolume(). Double_t TMVA::PDEFoamDensityBase::GetBoxVolume ; (; ). protected . Returns the volume of range searching box fBox. ; If the range searching box 'fBox' has changed (fBoxHasChanged is kTRUE), recalculate the box volume and set fBoxHasChanged to kFALSE ; Definition at line 161 of file PDEFoamDensityBase.cxx. ◆ IsA(). virtual TClass * TMVA::PDEFoamDensityBase::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TMVA::PDEFoamDecisionTreeDensity, TMVA::PDEFoamDiscriminantDensity, TMVA::PDEFoamEventDensity, and TMVA::PDEFoamTargetDensity.; Definition at line 81 of file PDEFoamDensityBase.h. ◆ Log(). MsgLogger & TMVA::PDEFoamDensityBase::Log ; (; ); const. inlineprotected . Definition at line 57 of file PDEFoamDensityBase.h. ◆ SetBox(). void TMVA::PDEFoamDensityBase::SetBox ; (; std::vector< Double_t > ; box). inline . Definition at line 72 of file PDEFoamDensityBase.h. ◆ Streamer(). virtual void TMVA::PDEFoamDensityBase::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TMVA::PDEFoamDecisionTreeDensity, TMVA::PDEFoamDiscriminantDensity, TMVA::PDEFoamEventDensity, and TMVA::PDEFoamTargetDensity. ◆ StreamerNVirtual(). void TMVA::PDEFoamDensityBase::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 81 of file PDEFoamDensityBase.h. Member Data Documentation. ◆ fBox. std::vector<Double_t> TMVA::PDEFoamDensityBase::fBox. private . range-searching box ; Definition at line 49 of file PDEFoamDensityBase.h. ◆ fBoxHasChanged. Bool_t TMVA::PDEFoamDensityBase::fBoxHasChang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamDensityBase.html:14738,Log,Log,14738,doc/master/classTMVA_1_1PDEFoamDensityBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamDensityBase.html,1,['Log'],['Log']
Testability,"changed events. ; Definition at line 264 of file TGCommandPlugin.cxx. ◆ HandleTimer(). Bool_t TGCommandPlugin::HandleTimer ; (; TTimer * ; t). overridevirtual . Handle timer event. ; Reimplemented from TObject.; Definition at line 272 of file TGCommandPlugin.cxx. ◆ IsA(). TClass * TGCommandPlugin::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 56 of file TGCommandPlugin.h. ◆ SetHistAdd(). void TGCommandPlugin::SetHistAdd ; (; Bool_t ; add = kTRUE). The function SetHistAdd() is needed for a standalone TApplication to log the TGCommandPlugin commands into a ROOT history file. ; However, this function has no effect if the user does not explictly set on his standalone application the name of the ROOT history file. To log into the default ROOT history file, call this on the user-side of the code: Gl_histinit(gEnv->GetValue(""Rint.History"", gSystem->HomeDirectory())); Otherwise, replace the argument of Gl_histinit with a text file name you want to use for application-specific logging. ; Definition at line 302 of file TGCommandPlugin.cxx. ◆ Streamer(). void TGCommandPlugin::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGCommandPlugin::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 56 of file TGCommandPlugin.h. ◆ ToggleTimer(). void TGCommandPlugin::ToggleTimer ; (; Bool_t ; on). Let user stop the internal timer when there is no need to check for remote. ; or start it again later on if needed. (on=False to stop, on=True to start) ; Definition at line 283 of file TGCommandPlugin.cxx. Member Data Documentation. ◆ fComboCmd. TGComboBox* TGCommandPlugin::fComboCmd. protected . commands combobox ; Definition at line 33 of file TGCommandPlugin.h. ◆ fCommand. TGTextEntry* TGCommandPlugin::fCommand. protected . command text entry widget ; Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCommandPlugin.html:39434,log,logging,39434,doc/master/classTGCommandPlugin.html,https://root.cern,https://root.cern/doc/master/classTGCommandPlugin.html,1,['log'],['logging']
Testability,"changed from being dependent on a 'valueDirty' flag to guaranteed evaluation.; On the dataset side, the observables objects are modified to no longer send valueDirty messages; to their client. void optimizeConstantTerms(Bool_t , Bool_t = kTRUE); Driver function to activate global constant term optimization.; If activated constant terms are found and cached with the dataset; The operation mode of cached nodes is set to AClean meaning that; their getVal() call will never result in an evaluate call.; Finally the branches in the dataset that correspond to observables; that are exclusively used in constant terms are disabled as; they serve no more purpose. Bool_t setDataSlave(RooAbsData& data, Bool_t cloneData = kTRUE, Bool_t ownNewDataAnyway = kFALSE); cout << ""RAOTS::setDataSlave("" << this << "") START"" << endl ;; Change dataset that is used to given one. If cloneData is kTRUE, a clone of; in the input dataset is made. If the test statistic was constructed with; a range specification on the data, the cloneData argument is ignore and; the data is always cloned. RooAbsData& data(). const RooAbsData& data() const. RooAbsOptTestStatistic(); Constructors, assignment etc. RooAbsReal& function(); { return *_funcClone ; }. const RooAbsReal& function() const; { return *_funcClone ; }. const char* cacheUniqueSuffix() const; { return Form(""_%lx"", (ULong_t)_dataClone) ; }. Bool_t isDerived() const; Override this to be always true to force calculation of likelihood without parameters. { return kTRUE ; }. void seal(const char* notice = """"); { _sealed = kTRUE ; _sealNotice = notice ; }. Bool_t isSealed() const; { return _sealed ; }. const char* sealNotice() const; { return _sealNotice.Data() ; }. Bool_t allowFunctionCache(); { return kTRUE ; }. RooArgSet requiredExtraObservables() const; { return RooArgSet() ; }. » Last changed: Tue Jun 2 15:27:14 2015 » Last generated: 2015-06-02 15:27; This page has been automatically generated. For comments or suggestions regarding the documentatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooAbsOptTestStatistic.html:47601,test,test,47601,root/html604/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html604/RooAbsOptTestStatistic.html,1,['test'],['test']
Testability,"changed from being dependent on a 'valueDirty' flag to guaranteed evaluation.; On the dataset side, the observables objects are modified to no longer send valueDirty messages; to their client. void optimizeConstantTerms(Bool_t , Bool_t = kTRUE); Driver function to activate global constant term optimization.; If activated constant terms are found and cached with the dataset; The operation mode of cached nodes is set to AClean meaning that; their getVal() call will never result in an evaluate call.; Finally the branches in the dataset that correspond to observables; that are exclusively used in constant terms are disabled as; they serve no more purpose. Bool_t setDataSlave(RooAbsData& data, Bool_t cloneData = kTRUE, Bool_t ownNewDataAnyway = kFALSE); cout << ""RAOTS::setDataSlave("" << this << "") START"" << endl ;; Change dataset that is used to given one. If cloneData is kTRUE, a clone of; in the input dataset is made. If the test statistic was constructed with; a range specification on the data, the cloneData argument is ignore and; the data is always cloned. RooAbsData& data(). const RooAbsData& data() const. RooAbsOptTestStatistic(); Constructors, assignment etc. RooAbsReal& function(); { return *_funcClone ; }. const RooAbsReal& function() const; { return *_funcClone ; }. const char* cacheUniqueSuffix() const; { return Form(""_%lx"", (ULong_t)_dataClone) ; }. Bool_t isDerived() const; Override this to be always true to force calculation of likelihood without parameters. { return kTRUE ; }. void seal(const char* notice = """"); { _sealed = kTRUE ; _sealNotice = notice ; }. Bool_t isSealed() const; { return _sealed ; }. const char* sealNotice() const; { return _sealNotice.Data() ; }. Bool_t allowFunctionCache(); { return kTRUE ; }. RooArgSet requiredExtraObservables() const; { return RooArgSet() ; }. » Last changed: Tue Jun 30 14:30:16 2015 » Last generated: 2015-06-30 14:30; This page has been automatically generated. For comments or suggestions regarding the documentati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsOptTestStatistic.html:47601,test,test,47601,root/html602/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html602/RooAbsOptTestStatistic.html,1,['test'],['test']
Testability,"changed from being dependent on a 'valueDirty' flag to guaranteed evaluation.; On the dataset side, the observables objects are modified to no longer send valueDirty messages; to their client. void optimizeConstantTerms(Bool_t , Bool_t = kTRUE); Driver function to activate global constant term optimization.; If activated constant terms are found and cached with the dataset; The operation mode of cached nodes is set to AClean meaning that; their getVal() call will never result in an evaluate call.; Finally the branches in the dataset that correspond to observables; that are exclusively used in constant terms are disabled as; they serve no more purpose. Bool_t setDataSlave(RooAbsData& data, Bool_t cloneData = kTRUE, Bool_t ownNewDataAnyway = kFALSE); cout << ""RAOTS::setDataSlave("" << this << "") START"" << endl ;; Change dataset that is used to given one. If cloneData is kTRUE, a clone of; in the input dataset is made. If the test statistic was constructed with; a range specification on the data, the cloneData argument is ignore and; the data is always cloned. RooAbsData& data(). const RooAbsData& data() const. RooAbsReal& function(); { return *_funcClone ; }. const RooAbsReal& function() const; { return *_funcClone ; }. const char* cacheUniqueSuffix() const; { return Form(""_%lx"", (ULong_t)_dataClone) ; }. Bool_t isDerived() const; Override this to be always true to force calculation of likelihood without parameters. { return kTRUE ; }. void seal(const char* notice = """"); { _sealed = kTRUE ; _sealNotice = notice ; }. Bool_t isSealed() const; { return _sealed ; }. const char* sealNotice() const; { return _sealNotice.Data() ; }. Bool_t allowFunctionCache(); { return kTRUE ; }. RooArgSet requiredExtraObservables() const; { return RooArgSet() ; }. » Last changed: Fri Dec 2 14:26:36 2011 » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsOptTestStatistic.html:40017,test,test,40017,root/html532/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html532/RooAbsOptTestStatistic.html,1,['test'],['test']
Testability,"changed from being dependent on a 'valueDirty' flag to guaranteed evaluation.; On the dataset side, the observables objects are modified to no longer send valueDirty messages; to their client. void optimizeConstantTerms(Bool_t , Bool_t = kTRUE); Driver function to activate global constant term optimization.; If activated constant terms are found and cached with the dataset; The operation mode of cached nodes is set to AClean meaning that; their getVal() call will never result in an evaluate call.; Finally the branches in the dataset that correspond to observables; that are exclusively used in constant terms are disabled as; they serve no more purpose. Bool_t setDataSlave(RooAbsData& data, Bool_t cloneData = kTRUE, Bool_t ownNewDataAnyway = kFALSE); cout << ""RAOTS::setDataSlave("" << this << "") START"" << endl ;; Change dataset that is used to given one. If cloneData is kTRUE, a clone of; in the input dataset is made. If the test statistic was constructed with; a range specification on the data, the cloneData argument is ignore and; the data is always cloned. RooAbsData& data(). const RooAbsData& data() const. RooAbsReal& function(); { return *_funcClone ; }. const RooAbsReal& function() const; { return *_funcClone ; }. const char* cacheUniqueSuffix() const; { return Form(""_%lx"", (ULong_t)_dataClone) ; }. Bool_t isDerived() const; Override this to be always true to force calculation of likelihood without parameters. { return kTRUE ; }. void seal(const char* notice = """"); { _sealed = kTRUE ; _sealNotice = notice ; }. Bool_t isSealed() const; { return _sealed ; }. const char* sealNotice() const; { return _sealNotice.Data() ; }. Bool_t allowFunctionCache(); { return kTRUE ; }. RooArgSet requiredExtraObservables() const; { return RooArgSet() ; }. » Last changed: Tue Mar 10 17:14:05 2015 » Last generated: 2015-03-10 17:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsOptTestStatistic.html:43928,test,test,43928,root/html534/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html534/RooAbsOptTestStatistic.html,1,['test'],['test']
Testability,"char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""") overrideTHStackvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetHistogram(TH1 *h)THStackinlinevirtual; SetMaximum(Double_t maximum=-1111)THStackvirtual; SetMinimum(Double_t minimum=-1111)THStackvirtual; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetTitle(const char *title="""")TNamedvirtual; SetUniqueID(UInt_t uid)TObjectvirtual; Sizeof() constTNamedvirtual; Streamer(TBuffer &) overrideTHStackvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)THStackinline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; THStack()THStackinline; THStack(const char *name, const char *title)THStack; THStack(TH1 *hist, Option_t *axis=""x"", const char *name=nullptr, const char *title=nullptr, Int_t firstbin=1, Int_t lastbin=-1, Int_t firstbin2=1, Int_t lastbin2=-1, Option_t *proj_option="""", Option_t *draw_option="""")THStack; THStack(const THStack &hstack)THStack; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; UseCurrentStyle()TObjectvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~THStack() overrideTHStack; ~TNamed()TNamedvirtual; ~TObject()TObjectvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHStack-members.html:6204,Test,TestBit,6204,doc/master/classTHStack-members.html,https://root.cern,https://root.cern/doc/master/classTHStack-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TActivation * fActivation;  ; std::vector< TH1 * > fEpochMonHistB;  ; std::vector< TH1 * > fEpochMonHistS;  ; std::vector< TH1 * > fEpochMonHistW;  ; EEstimator fEstimator;  ; TH1F * fEstimatorHistTest;  ; TH1F * fEstimatorHistTrain;  ; TString fEstimatorS;  ; TActivation * fIdentity;  ; TNeuronInput * fInputCalculator;  ; TMatrixD fInvHessian;  zjh ;  ; Int_t fNcycles;  number of epochs to train ;  ; TString fNeuronInputType;  name of neuron input calculator class ;  ; TString fNeuronType;  name of neuron activation function class ;  ; TActivation * fOutput;  ; Int_t fRandomSeed;  random seed for initial synapse weights ;  ; std::vector< Int_t > fRegulatorIdx;  ; std::vector< Double_t > fRegulators;  ; TRandom3 * frgen;  ; TObjArray * fSynapses;  ; bool fUseRegulator;  zjh ;  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVars;  ; IPythonInteractive * fInteractive = nullptr;  temporary dataset used when evaluating on a different data (used by MethodCategory::GetMvaValues) ;  ; UInt_t fIPyCurrentIter = 0;  ; UInt_t fIPyMaxIter = 0;  ; std::vector< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; void AddPreLinks (TNeuron *neuron, TObjArray *prevLayer);  add synapses connecting a neuron ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html:30338,test,testing,30338,doc/master/classTMVA_1_1MethodANNBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html,2,"['log', 'test']","['logger', 'testing']"
Testability,"char *name, const char *value)THttpServer; SetJSROOT(const char *location)THttpServer; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetReadOnly(Bool_t readonly=kTRUE)THttpServer; SetSniffer(TRootSniffer *sniff)THttpServer; SetTerminate()THttpServer; SetTimer(Long_t milliSec=100, Bool_t mode=kTRUE)THttpServer; SetTitle(const char *title="""")TNamedvirtual; SetTopName(const char *top)THttpServerinline; SetUniqueID(UInt_t uid)TObjectvirtual; SetWSOnly(Bool_t on=kTRUE)THttpServer; Sizeof() constTNamedvirtual; StopServerThread()THttpServerprotected; Streamer(TBuffer &) overrideTHttpServervirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)THttpServerinline; SubmitHttp(std::shared_ptr< THttpCallArg > arg, Bool_t can_run_immediately=kFALSE)THttpServer; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; THttpServer(const THttpServer &)=deleteTHttpServerprotected; THttpServer(const char *engine=""http:8080"")THttpServer; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; Unregister(TObject *obj)THttpServer; UnregisterWS(std::shared_ptr< THttpWSHandler > ws)THttpServer; UseCurrentStyle()TObjectvirtual; VerifyFilePath(const char *fname)THttpServerprotectedstatic; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~THttpServer()THttpServervirtual; ~TNamed()TNamedvirtual; ~TObject()TObjectvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpServer-members.html:8548,Test,TestBit,8548,doc/master/classTHttpServer-members.html,https://root.cern,https://root.cern/doc/master/classTHttpServer-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char *outfile, const char *opt=""std:"", const char *type=""mbs"", Bool_t verbose=kFALSE, Int_t dofit=0, Int_t n0=-1, Int_t n1=-1);  Draw the CPU speedup plot. ;  ; static void DrawEfficiency (const char *outfile, const char *opt="""", Bool_t verbose=kFALSE);  Draw the efficiency plot. ;  ; static TList * GetGraphs ();  ; static void GetPerfSpecs (const char *path=""."", Int_t degfit=1);  Get performance specs. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Protected Member Functions; static void AssertFittingFun (Double_t mi, Double_t mx);  Make sure that the fitting functions are defined. ;  ; static TGraphErrors * GetGraph (TDirectory *d, const char *pfn, Int_t &nb, Double_t &xmi, Double_t &xmx, Double_t &ymi, Double_t &ymx, Int_t &kmx, TProfile *&pf);  Get from TDirectory 'd' the TProfile named 'pfn' and create the graph. ;  . Protected Attributes; TString fCPUPar;  ; TString fCPUSel;  ; TString fDataGenPar;  ; TString fDataGenSel;  ; TString fDataPar;  ; TString fDataSel;  ; TString fDataSet;  ; Bool_t fDebug;  ; TNamed * fDescription;  ; TProofBenchDataSet * fDS;  ; TPBHistType * fHistType;  ; Int_t fNFilesWrk;  ; Int_t fNHist;  ; Int_t fNtries;  ; Int_t fNumWrkMax;  ; TFile * fOutFile;  ; TString fOutFileName;  ; TProof * fProof;  ; TProof * fProofDS;  ; TPBReadType * fReadType;  ; Bool_t fReleaseCache;  ; TProofBenchRunCPU * fRunCPU;  ; TProofBenchRunDataRead * fRunDS;  ; TString fSelOption;  . Static Protected Attributes; static TF1 * fgFio = 0;  ; static TF1 * fgFioV = 0;  ; static TF1 * fgF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBench.html:12097,Assert,AssertFittingFun,12097,doc/master/classTProofBench.html,https://root.cern,https://root.cern/doc/master/classTProofBench.html,1,['Assert'],['AssertFittingFun']
Testability,"char *stylename=""Default"")TROOT; SetTitle(const char *title="""")TNamedvirtual; SetTRefAction(TObject *, TObject *)TDirectoryinlinevirtual; SetUniqueID(UInt_t uid)TObjectvirtual; SetWebDisplay(const char *webdisplay="""")TROOT; SetWritable(Bool_t)TDirectoryinlinevirtual; SharedGDirectory_t typedefTDirectoryprotected; ShutDown()TROOTstatic; Sizeof() const overrideTDirectoryinlinevirtual; Streamer(TBuffer &) overrideTROOTvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TROOTinline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TClingTROOTfriend; TDirectory(const TDirectory &directory)=deleteTDirectoryprotected; TDirectory()TDirectory; TDirectory(const char *name, const char *title, Option_t *option="""", TDirectory *motherDir=nullptr)TDirectory; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; Time(Int_t casetime=1)TROOTinline; Timer() constTROOTinline; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; TROOT(const TROOT &)=deleteTROOTprivate; TROOT()TROOTprotected; TROOT(const char *name, const char *title, VoidFuncPtr_t *initfunc=nullptr)TROOT; UnregisterContext(TContext *ctxt)TDirectoryprotected; UseCurrentStyle()TObjectvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *=nullptr, Int_t=0, Int_t=0) overrideTDirectoryinlinevirtual; Write(const char *=nullptr, Int_t=0, Int_t=0) const overrideTDirectoryinlinevirtual; WriteDirHeader()TDirectoryinlinevirtual; WriteKeys()TDirectoryinlinevirtual; WriteObject(const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0)TDirectoryinline; WriteObject(const T *obj, const char *name, Option_t *option="""", Int_t bufsize=0)TDirectoryinline; WriteObjectAny(const void *, const char *, const char *, Option_t *="""", Int_t=0)TD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTROOT-members.html:17949,Test,TestBit,17949,doc/master/classTROOT-members.html,https://root.cern,https://root.cern/doc/master/classTROOT-members.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char *url=nullptr, Int_t sessionidx=0, Int_t w=700, Int_t h=600);  Create a window frame for log messages. ;  ;  TProofProgressLog (TProofProgressDialog *d, Int_t w=700, Int_t h=600);  Create a window frame for log messages. ;  ;  ~TProofProgressLog () override;  Destructor. ;  ; void AddBuffer (const char *buffer);  Add text to the window. ;  ; void BuildLogList (Bool_t create=kFALSE);  Build the list of workers. ;  ; void Clear (Option_t *=nullptr) override;  Clear log window. ;  ; void CloseWindow () override;  Handle close button or when closed via window manager action. ;  ; void DoLog (Bool_t grep=kFALSE);  Display logs. ;  ; TClass * IsA () const override;  ; void LoadBuffer (const char *buffer);  Load a text buffer in the window. ;  ; void LoadFile (const char *file);  Load a file in the window. ;  ; void LogMessage (const char *msg, Bool_t all);  Load/append a log msg in the log frame, if open. ;  ; void NoLineEntry ();  Enable/disable the line number entry. ;  ; void Popup ();  Show log window. ;  ; void Rebuild ();  Rebuild the log info for a new entered session. ;  ; void SaveToFile ();  Save the logs to a file Only the name of the file is taken, no expansion. ;  ; void Select (Int_t id, Bool_t all=kTRUE);  actions of select all/clear all button ;  ; void SetGrepView ();  Sets the view of grep filters according to the value of checkboxes. ;  ; void SetUrl (const char *url);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; void SavePrimitive (std::ostream &out, Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressLog.html:1599,log,log,1599,doc/master/classTProofProgressLog.html,https://root.cern,https://root.cern/doc/master/classTProofProgressLog.html,1,['log'],['log']
Testability,"char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Private Types; enum  ETextType { kRaw = 0; , kStd = 1; , kGrep = 2; };  . Private Member Functions; void Init (Int_t w=700, Int_t h=600);  Init window frame for log messages. ;  . Private Attributes; TGCheckButton * fAllLines;  ; TGSplitButton * fAllWorkers;  ; TGTextButton * fClose;  ; TProofProgressDialog * fDialog;  ; TGTextEntry * fFileName;  ; Bool_t fFullText;  ; TGTextButton * fGrepButton;  ; TGCheckButton * fGrepCheckCmd;  ; TGCheckButton * fGrepCheckInv;  ; TGLabel * fGrepLabel;  ; TGTextEntry * fGrepText;  ; TGNumberEntry * fLinesFrom;  ; TGNumberEntry * fLinesTo;  ; TGListBox * fLogList;  ; TGTextButton * fLogNew;  ; TProofLog * fProofLog;  ; TGCheckButton * fRawLines;  ; TGTextButton * fSave;  ; Int_t fSessionIdx;  ; TString fSessionUrl;  ; TGNumberEntry * fSessNum;  ; TGTextView * fText;  ; Int_t fTextType;  ; TGTextButton * fUrlButton;  ; TGTextEntry * fUrlText;  ; TGVerticalFrame * fVworkers;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressLog.html:29565,log,log,29565,doc/master/classTProofProgressLog.html,https://root.cern,https://root.cern/doc/master/classTProofProgressLog.html,1,['log'],['log']
Testability,"char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_t GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; Use the existing setting or the default if nothing is found.; If 'assert' is kTRUE, make also sure that the path exists.; Return 0 on success, -1 on failure. void ParseConfigField(const char* config); The config file field may contain special instructions which need to be; parsed at the beginning, e.g. for debug runs with valgrind.; Several options can be given separated by a ','. Int_t AssertPath(const char* path, Bool_t writable); Make sure that 'path' exists; if 'writable' is kTRUE, make also sure; that the path is writable. void SetManager(TProofMgr* mgr); Set manager and schedule its destruction after this for clean; operations. Int_t AddWorkers(TList* wrks); Works on the master node only.; It starts workers on the machines in workerList and sets the paths,; packages and macros as on the master.; It is a subbstitute for StartSlaves(...); The code is mostly the master part of StartSlaves,; with the parallel startup removed. Int_t RemoveWorkers(TList* wrks); Used for shuting down the workres after a query is finished.; Sends each of the workers from the workerList, a kPROOF_STOP message.; If the workerList == 0, shutdown all the workers. Bool_t StartSlaves(Bool_t attach = kFALSE); Start up PROOF slaves. void Close(Option_t* option = """"); Close all open slave servers.; Client can decide to shutdown the remote session by passing option is 'S'; or 's'. Default for clients is detach, if supported. Masters always; shutdown the remote co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProof.html:39687,Assert,AssertPath,39687,root/html602/TProof.html,https://root.cern,https://root.cern/root/html602/TProof.html,1,['Assert'],['AssertPath']
Testability,"char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_t GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; Use the existing setting or the default if nothing is found.; If 'assert' is kTRUE, make also sure that the path exists.; Return 0 on success, -1 on failure. void ParseConfigField(const char* config); The config file field may contain special instructions which need to be; parsed at the beginning, e.g. for debug runs with valgrind.; Several options can be given separated by a ','. Int_t AssertPath(const char* path, Bool_t writable); Make sure that 'path' exists; if 'writable' is kTRUE, make also sure; that the path is writable. void SetManager(TProofMgr* mgr); Set manager and schedule its destruction after this for clean; operations. Int_t AddWorkers(TList* wrks); Works on the master node only.; It starts workers on the machines in workerList and sets the paths,; packages and macros as on the master.; It is a subbstitute for StartSlaves(...); The code is mostly the master part of StartSlaves,; with the parallel startup removed. void SetupWorkersEnv(TList* wrks, Bool_t increasingpool = kFALSE); Set up packages, loaded macros, include and lib paths ... Int_t RemoveWorkers(TList* wrks); Used for shuting down the workres after a query is finished.; Sends each of the workers from the workerList, a kPROOF_STOP message.; If the workerList == 0, shutdown all the workers. Bool_t StartSlaves(Bool_t attach = kFALSE); Start up PROOF slaves. void Close(Option_t* option = """"); Close all open slave servers.; Client can decide to shutdown the remote ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:37188,Assert,AssertPath,37188,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,2,['Assert'],['AssertPath']
Testability,"char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TConfidenceLevel&operator=(const TConfidenceLevel&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBtot(Double_t in); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetDtot(Int_t in); voidSetLRB(Double_t* in); voidSetLRS(Double_t* in); static voidTObject::SetObjectStat(Bool_t stat); voidSetStot(Double_t in); voidSetTSB(Double_t* in); voidSetTSD(Double_t in); voidSetTSS(Double_t* in); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TConfidenceLevel.html:5315,Test,TestBit,5315,root/html534/TConfidenceLevel.html,https://root.cern,https://root.cern/root/html534/TConfidenceLevel.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFoamCell&operator=(const TFoamCell&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSetBest(Int_t Best); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDau0(TFoamCell* Daug); voidSetDau1(TFoamCell* Daug); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; voidSetDriv(Double_t Driv); static voidTObject::SetDtorOnly(void* obj); voidSetIntg(Double_t Intg); static voidTObject::SetObjectStat(Bool_t stat); voidSetPrim(Double_t Prim); voidSetSerial(Int_t Serial); voidSetStat(Int_t Stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetXdiv(Double_t Xdiv); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFoamCell.html:5187,Test,TestBit,5187,root/html530/TFoamCell.html,https://root.cern,https://root.cern/root/html530/TFoamCell.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); THbookKey&operator=(const THbookKey&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THbookKey.html:4570,Test,TestBit,4570,root/html534/THbookKey.html,https://root.cern,https://root.cern/root/html534/THbookKey.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TProofQueryResult&operator=(const TProofQueryResult&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTQueryResult::Print(Option_t* opt = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofQueryResult.html:5808,Test,TestBit,5808,root/html530/TProofQueryResult.html,https://root.cern,https://root.cern/root/html530/TProofQueryResult.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSQLTableInfo&operator=(const TSQLTableInfo&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLTableInfo.html:5083,Test,TestBit,5083,root/html534/TSQLTableInfo.html,https://root.cern,https://root.cern/root/html534/TSQLTableInfo.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetFieldValue(Double_t Bx, Double_t By, Double_t Bz); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoUniformMagField.html:4791,Test,TestBit,4791,root/html530/TGeoUniformMagField.html,https://root.cern,https://root.cern/root/html530/TGeoUniformMagField.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Bool_toperator!=(Int_t index); Bool_toperator!=(const char* label); Bool_toperator!=(const RooAbsArg& other); RooAbsCategory&operator=(const RooAbsCategory&); Bool_toperator==(Int_t index) const; Bool_toperator==(const char* label) const; virtual Bool_toperator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidRooAbsArg::Print(Option_t* options = 0) const; virtual voidRooAbsArg::printAddress(ostream& os) const; virtual voidRooAbsArg::printArgs(ostream& os) const; virtual voidRooAbsArg::printClassName(ostream& os) const; voidRooAbsArg::printCompactTree(const char* indent = """", const char* fileName = 0, const char* namePat = 0, RooAbsArg* client = 0); voidRooAbsArg::printCompactTree(ostream& os, const char* indent = """", const char* namePat = 0, RooAbsArg* client = 0); virtual voidRooAbsArg::printCompactTreeHook(ostream& os, const char* ind = """"); voidRooAbsArg::printComponentTree(const char* indent = """", const char* namePat = 0, Int_t nLevel = 999); voidRooAbsArg::printDirty(Bool_t depth = kTRUE) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidRooAbsArg::printMetaArgs(ostream&) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsCategory.html:11475,test,testArg,11475,root/html602/RooAbsCategory.html,https://root.cern,https://root.cern/root/html602/RooAbsCategory.html,2,['test'],['testArg']
Testability,"char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidSetAngles(Double_t phi, Double_t theta, Double_t psi); voidSetAngles(Double_t theta1, Double_t phi1, Double_t theta2, Double_t phi2, Double_t theta3, Double_t phi3); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoMatrix::SetDefaultName(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTGeoMatrix::SetDx(Double_t); virtual voidTGeoMatrix::SetDy(Double_t); virtual voidTGeoMatrix::SetDz(Double_t); voidSetMatrix(const Double_t* rot); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetRotation(const TGeoMatrix& other); voidTGeoMatrix::SetShared(Bool_t flag = kTRUE); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGeoRotation(); TGeoRotation(const TGeoRotation& other); TGeoRotation(const TGeoMatrix& other); TGeoRotation(const char* name); TGeoRotation(const char* name, Double_t phi, Double_t theta, Double_t psi); TGeoRotation(const char* name, Double_t theta1, Double_t phi1, Double_t theta2, Double_t phi2, Double_t theta3, Double_t phi3); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoRotation.html:13865,Test,TestBit,13865,root/html602/TGeoRotation.html,https://root.cern,https://root.cern/root/html602/TGeoRotation.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSetArrayDim(Int_t dim); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTStreamerElement::SetMaxIndex(Int_t dim, Int_t max); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTStreamerElement::SetNewClass(TClass* cl); virtual voidTStreamerElement::SetNewType(Int_t dtype); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTStreamerElement::SetOffset(Int_t offset); virtual voidTStreamerElement::SetSize(Int_t dsize); virtual voidTStreamerElement::SetStreamer(TMemberStreamer* streamer); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTStreamerElement::SetTObjectOffset(Int_t tobjoffset); virtual voidTStreamerElement::SetType(Int_t dtype); virtual voidTStreamerElement::SetTypeName(const char* name); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TStreamerObjectAnyPointer(); TStreamerObjectAnyPointer(const char* name, const char* title, Int_t offset, const char* typeName); virtual voidTStreamerElement::Update(const TClass* oldClass, TClass* newClass); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerObjectAnyPointer.html:6612,Test,TestBit,6612,root/html602/TStreamerObjectAnyPointer.html,https://root.cern,https://root.cern/root/html602/TStreamerObjectAnyPointer.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* label)MENU ; virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTPave::SetName(const char* name = """")MENU ; static voidTObject::SetObjectStat(Bool_t stat); virtual voidTPave::SetOption(Option_t* option = ""br""); virtual voidTPave::SetShadowColor(Int_t color)MENU ; virtual voidTAttText::SetTextAlign(Short_t align = 11); virtual voidTAttText::SetTextAngle(Float_t tangle = 0)MENU ; virtual voidTAttText::SetTextAttributes()MENU ; virtual voidTAttText::SetTextColor(Color_t tcolor = 1); virtual voidTAttText::SetTextColorAlpha(Color_t tcolor, Float_t talpha); virtual voidTAttText::SetTextFont(Font_t tfont = 62); virtual voidTAttText::SetTextSize(Float_t tsize = 1); virtual voidTAttText::SetTextSizePixels(Int_t npixels); virtual voidTBox::SetToolTipText(const char* text, Long_t delayms = 1000); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTPave::SetX1(Double_t x1); virtual voidTPave::SetX1NDC(Double_t x1); virtual voidTPave::SetX2(Double_t x2); virtual voidTPave::SetX2NDC(Double_t x2); virtual voidTPave::SetY1(Double_t y1); virtual voidTPave::SetY1NDC(Double_t y1); virtual voidTPave::SetY2(Double_t y2); virtual voidTPave::SetY2NDC(Double_t y2); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPaveLabel.html:9159,Test,TestBit,9159,root/html534/TPaveLabel.html,https://root.cern,https://root.cern/root/html534/TPaveLabel.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); doubleoperator()(unsigned int x, double y, unsigned int z) const; RooCFunction3Ref<double,unsigned int,double,unsigned int>&operator=(const RooCFunction3Ref<double,unsigned int,double,unsigned int>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& R__b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_double_unsigned_int_.html:5519,Test,TestBit,5519,root/html526/RooCFunction3Ref_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_double_unsigned_int_.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); doubleoperator()(unsigned int x, unsigned int y, double z) const; RooCFunction3Ref<double,unsigned int,unsigned int,double>&operator=(const RooCFunction3Ref<double,unsigned int,unsigned int,double>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& R__b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_unsigned_int_double_.html:5519,Test,TestBit,5519,root/html526/RooCFunction3Ref_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_unsigned_int_double_.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TExec&operator=(const TExec&); virtual voidPaint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); virtual voidSetAction(const char* action); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TExec.html:7378,Test,TestBit,7378,root/html528/TExec.html,https://root.cern,https://root.cern/root/html528/TExec.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPosixCondition&operator=(const TPosixCondition&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tSignal(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Int_tTimedWait(ULong_t secs, ULong_t nanoSecs = 0); virtual voidTObject::UseCurrentStyle(); virtual Int_tWait(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPosixCondition.html:4503,Test,TestBit,4503,root/html534/TPosixCondition.html,https://root.cern,https://root.cern/root/html534/TPosixCondition.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TCondor&operator=(const TCondor&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRelease(); voidTObject::ResetBit(UInt_t f); Bool_tResume(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); Bool_tSetState(TCondor::EState state); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Bool_tSuspend(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TCondor(const char* pool = """"); TCondor(const TCondor&); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCondor.html:4843,Test,TestBit,4843,root/html602/TCondor.html,https://root.cern,https://root.cern/root/html602/TCondor.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TASImagePlugin&operator=(const TASImagePlugin&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual unsigned char*ReadFile(const char*, UInt_t&, UInt_t&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TASImagePlugin(const char* ext); TASImagePlugin(const TASImagePlugin&); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Bool_tWriteFile(const char*, unsigned char*, UInt_t, UInt_t).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TASImagePlugin.html:5356,Test,TestBit,5356,root/html602/TASImagePlugin.html,https://root.cern,https://root.cern/root/html602/TASImagePlugin.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpProbSparse&operator=(const TQpProbSparse& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSeparateVars(TVectorD& x_in, TVectorD& y_in, TVectorD& z_in, TVectorD& vars_in); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TQpProbSparse(); TQpProbSparse(const TQpProbSparse& another); TQpProbSparse(Int_t nx, Int_t my, Int_t mz); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQpProbSparse.html:5369,Test,TestBit,5369,root/html602/TQpProbSparse.html,https://root.cern,https://root.cern/root/html602/TQpProbSparse.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* name); const TGPicture*TGMainFrame::SetIconPixmap(const char* iconName); voidTGMainFrame::SetIconPixmap(char** xpm_array); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); voidTGMainFrame::SetMWMHints(UInt_t value, UInt_t funcs, UInt_t input); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGMainFrame::SetWindowName(const char* name = 0); voidTGMainFrame::SetWMPosition(Int_t x, Int_t y); voidTGMainFrame::SetWMSize(UInt_t w, UInt_t h); voidTGMainFrame::SetWMSizeHints(UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc); voidTGMainFrame::SetWMState(EInitialState state); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp); voidStop(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); voidURLChanged(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGHtmlBrowser.html:15844,Test,TestBit,15844,root/html528/TGHtmlBrowser.html,https://root.cern,https://root.cern/root/html528/TGHtmlBrowser.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGButton::SetOn(Bool_t on = kTRUE, Bool_t emit = kFALSE); virtual voidSetPopup(TGedPopup* p); virtual voidTGTextButton::SetRightMargin(Int_t val); virtual voidTGFrame::SetSize(const TGDimension& s); virtual voidTGCheckButton::SetState(EButtonState state, Bool_t emit = kFALSE); virtual voidTGButton::SetStyle(UInt_t newstyle); virtual voidTGButton::SetStyle(const char* style); virtual voidTGTextButton::SetText(TGHotString* new_label); virtual voidTGTextButton::SetText(const TString& new_label); virtual voidTGTextButton::SetTextColor(Pixel_t color, Bool_t global = kFALSE); virtual voidTGTextButton::SetTextJustify(Int_t tmode); virtual voidTGTextButton::SetTitle(const char* label); virtual voidTGButton::SetToolTipText(const char* text, Long_t delayms = 400)MENU ; virtual voidTGTextButton::SetTopMargin(Int_t val); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGButton::SetUserData(void* userData); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGWindow::SetWindowName(const char* name = 0); voidTGTextButton::SetWrapLength(Int_t wl); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTGButton::Toggle(Bool_t emit = kFALSE); virtual voidTGButton::Toggled(Bool_t on)SIGNAL ; virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); Bool_tTGWidget::WantFocus() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; Int_tTGWidget::WidgetId() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGedSelect.html:16578,Test,TestBit,16578,root/html534/TGedSelect.html,https://root.cern,https://root.cern/root/html534/TGedSelect.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* name); virtual voidTObjArray::RecursiveRemove(TObject* obj); virtual TObject*TObjArray::Remove(TObject* obj); virtual voidTSeqCollection::RemoveAfter(TObject* after); voidTCollection::RemoveAll(); virtual voidTCollection::RemoveAll(TCollection* col); virtual TObject*TObjArray::RemoveAt(Int_t idx); virtual voidTSeqCollection::RemoveBefore(TObject* before); virtual voidTSeqCollection::RemoveFirst(); virtual voidTSeqCollection::RemoveLast(); virtual voidTObjArray::RemoveRange(Int_t idx1, Int_t idx2); voidTObject::ResetBit(UInt_t f); RooRefArray(); RooRefArray(const RooRefArray& other); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTCollection::SetCurrentCollection(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTObjArray::SetLast(Int_t last); voidTCollection::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTCollection::SetOwner(Bool_t enable = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidTObjArray::Sort(Int_t upto = kMaxInt); static voidTCollection::StartGarbageCollection(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TObject*TObjArray::UncheckedAt(Int_t i) const; voidTSeqCollection::UnSort(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRefArray.html:8854,Test,TestBit,8854,root/html602/RooRefArray.html,https://root.cern,https://root.cern/root/html602/RooRefArray.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); virtual RooAbsArg*createFundamental(const char* newname = 0) const; Roo1DTable*createTable(const char* label) const; virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::Exe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsCategory.html:3366,test,testArg,3366,root/html532/RooAbsCategory.html,https://root.cern,https://root.cern/root/html532/RooAbsCategory.html,1,['test'],['testArg']
Testability,"char* objExt); virtual voidTSystem::SetProgname(const char* name); virtual intTSystem::SetSockOpt(int sock, int kind, int val); virtual voidTSystem::SetSoExt(const char* soExt); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidTSystem::ShowOutput(RedirectHandle_t* h); virtual Int_tTNamed::Sizeof() const; virtual voidTSystem::Sleep(UInt_t milliSec); virtual TStringTSystem::SplitAclicMode(const char* filename, TString& mode, TString& args, TString& io) const; virtual voidTSystem::StackTrace(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual intTSystem::Symlink(const char* from, const char* to); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTSystem::Syslog(ELogLevel level, const char* mess); virtual const char*TSystem::TempDirectory() const; virtual FILE*TSystem::TempFileName(TString& base, const char* dir = 0); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TXNetSystem(Bool_t owner = kTRUE); TXNetSystem(const TXNetSystem&); TXNetSystem(const char* url, Bool_t owner = kTRUE); virtual intTSystem::Umask(Int_t mask); virtual const char*TSystem::UnixPathName(const char* unixpathname); virtual intUnlink(const char* path); virtual voidTSystem::Unload(const char* module); virtual voidTSystem::Unsetenv(const char* name); virtual voidTObject::UseCurrentStyle(); virtual intTSystem::Utime(const char* file, Long_t modtime, Long_t actime); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual char*TSystem::Which(const char* search, const char* file, EAccessMode mode = kFileExists); virtual const char*TSystem::WorkingDirectory(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXNetSystem.html:14613,Test,TestBit,14613,root/html602/TXNetSystem.html,https://root.cern,https://root.cern/root/html602/TXNetSystem.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* options, TString& res, Bool_t astxt = kFALSE); Bool_tProduceImage(Int_t kind, const char* path, const char* options, void*& ptr, Long_t& length); Bool_tProduceJson(const char* path, const char* options, TString& res); Bool_tProduceXml(const char* path, const char* options, TString& res); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRegisterObject(const char* subfolder, TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidScanHierarchy(const char* topname, const char* path, TRootSnifferStore* store); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetReadOnly(Bool_t on = kTRUE); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TRootSniffer(const TRootSniffer&); TRootSniffer(const char* name, const char* objpath = ""online""); Bool_tUnregisterObject(TObject* obj); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootSniffer.html:5767,Test,TestBit,5767,root/html602/TRootSniffer.html,https://root.cern,https://root.cern/root/html602/TRootSniffer.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::HybridPlot&operator=(const RooStats::HybridPlot&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HybridPlot.html:5701,Test,TestBit,5701,root/html534/RooStats__HybridPlot.html,https://root.cern,https://root.cern/root/html534/RooStats__HybridPlot.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::TSynapse&operator=(const TMVA::TSynapse&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDEDw(Double_t DEDw); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetLearningRate(Double_t rate); static voidTObject::SetObjectStat(Bool_t stat); voidSetPostNeuron(TMVA::TNeuron* post); voidSetPreNeuron(TMVA::TNeuron* pre); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetWeight(Double_t weight); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TMVA::TSynapseTSynapse(); TMVA::TSynapseTSynapse(const TMVA::TSynapse&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__TSynapse.html:4866,Test,TestBit,4866,root/html602/TMVA__TSynapse.html,https://root.cern,https://root.cern/root/html602/TMVA__TSynapse.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TParameter<float>&operator=(const TParameter<float>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t*) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMergeMode(char mergemode = '+'); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVal(const float& val); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TParameter<float>(); TParameter<float>(const TParameter<float>&); TParameter<float>(const char* name, const float& val); TParameter<float>(const char* name, const float& val, char mergemode); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParameter_float_.html:4422,Test,TestBit,4422,root/html602/TParameter_float_.html,https://root.cern,https://root.cern/root/html602/TParameter_float_.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTProof::IsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTProof::IsFolder() const; Bool_tTProof::IsIdle() const; Bool_tTProof::IsLite() const; Bool_tTProof::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProof::IsParallel() const; Bool_tTProof::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProof::IsValid() const; Bool_tTProof::IsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tTProof::Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); static voidTQObject::LoadRQ_OBJECT(); voidTProof::LogMessage(const char* msg, Bool_t all)SIGNAL ; static voidTProof::LogViewer(const char* url = 0, Int_t sessionidx = 0); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; static TProofMgr*TProof::Mgr(const char* url); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; static TProof*TProof::Open(const char* url = 0, const char* conffile = 0, const char* confdir = 0, Int_t loglevel = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofCondor.html:11143,Log,LogMessage,11143,root/html528/TProofCondor.html,https://root.cern,https://root.cern/root/html528/TProofCondor.html,2,['Log'],['LogMessage']
Testability,"char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTProof::IsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTProof::IsFolder() const; Bool_tTProof::IsIdle() const; Bool_tTProof::IsLite() const; Bool_tTProof::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProof::IsParallel() const; Bool_tTProof::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProof::IsValid() const; Bool_tTProof::IsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tTProof::Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); static voidTQObject::LoadRQ_OBJECT(); voidTProof::LogMessage(const char* msg, Bool_t all)SIGNAL ; static voidTProof::LogViewer(const char* url = 0, Int_t sessionidx = 0); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; static TProofMgr*TProof::Mgr(const char* url); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TProof*TProof::Open(const char* url = 0, const char* conffile = 0, const char* confdir = 0, Int_t loglevel = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofCondor.html:11208,Log,LogMessage,11208,root/html530/TProofCondor.html,https://root.cern,https://root.cern/root/html530/TProofCondor.html,4,['Log'],['LogMessage']
Testability,"char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidTQueryResult::AddInput(TObject* obj); voidTQueryResult::AddLogLine(const char* logline); TQueryResult*TQueryResult::CloneInfo(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTQueryResult::SaveSelector(const char* selec); voidTQueryResult::SetArchived(const char* archfile); virtual voidTQueryResult::SetInputList(TList* in, Bool_t adopt = kTRUE); virtual voidTQueryResult::SetOutputList(TList* out, Bool_t adopt = kTRUE); virtual voidTQueryResult::SetProcessInfo(Long64_t ent, Float_t cpu = 0., Long64_t siz = -1, Float_t inittime = 0., Float_t proctime = 0.). private:. TProofQueryResult(Int_t seqnum, const char* opt, TList* inlist, Long64_t entries, Long64_t first, TDSet* dset, const char* selec, TObject* elist = 0); virtual voidRecordEnd(TQueryResult::EQueryStatus status, TList* outlist = 0); virtual voidSetFinalized(); voidSetResultFile(const char* rf); voidSetRunning(Int_t startlog, const char* par, Int_t nwrks). Data Members; public:. enum TQueryResult::EQueryStatus { kAborted; kSubmitted; kRunning; kStopped; kCompleted; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofQueryResult.html:6285,log,logline,6285,root/html534/TProofQueryResult.html,https://root.cern,https://root.cern/root/html534/TProofQueryResult.html,1,['log'],['logline']
Testability,chardsonDerivator.cxx;  RootFinder.cxx;  SparseData.cxx;  SpecFuncCephes.cxx;  SpecFuncCephes.h;  SpecFuncCephesInv.cxx;  SpecFuncMathCore.cxx;  TComplex.cxx;  TDataPointN.cxx;  TKDTree.cxx;  TKDTreeBinning.cxx;  TMath.cxx;  TRandom.cxx;  TRandom1.cxx;  TRandom2.cxx;  TRandom3.cxx;  triangle.c;  triangle.h;  TStatistic.cxx;  UnBinData.cxx;  ► test;  ► fit;  GaussFunction.h;  MinimizerTypes.h;  SparseDataComparer.cxx;  SparseFit3.cxx;  SparseFit4.cxx;  testFit.cxx;  testFitPerf.cxx;  testGraphFit.cxx;  testMinim.cxx;  testRooFit.cxx;  WrapperRooPdf.h;  binarySearchTime.cxx;  kDTreeTest.cxx;  newKDTreeTest.cxx;  stdsort.cxx;  stressGoFTest.cxx;  stressTF1.cxx;  stressTMath.cxx;  testAnalyticalIntegrals.cxx;  testBinarySearch.cxx;  testDistSampler.cxx;  testIntegration.cxx;  testIntegrationMultiDim.cxx;  testkdTreeBinning.cxx;  testMathRandom.cxx;  testRootFinder.cxx;  testSampleQuantiles.cxx;  testSortOrder.cxx;  testSpecFuncBeta.cxx;  testSpecFuncBetaI.cxx;  testSpecFuncErf.cxx;  testSpecFuncGamma.cxx;  testSpecFuncSiCi.cxx;  testTMath.cxx;  testTStatistic.cxx;  ► v7;  ► inc;  ► ROOT;  TFit.h;  ► mathmore;  ► inc;  ► Math;  ChebyshevApprox.h;  Derivator.h;  DistFuncMathMore.h;  GSLFunctionAdapter.h;  GSLIntegrator.h;  GSLMCIntegrator.h;  GSLMinimizer.h;  GSLMinimizer1D.h;  GSLMultiRootFinder.h;  GSLNLSMinimizer.h;  GSLQuasiRandom.h;  GSLRandom.h;  GSLRandomFunctions.h;  GSLRndmEngines.h;  GSLRootFinder.h;  GSLRootFinderDeriv.h;  GSLRootHelper.h;  GSLSimAnMinimizer.h;  GSLSimAnnealing.h;  IntegrationTypes.h;  InterpolationTypes.h;  Interpolator.h;  KelvinFunctions.h;  LinkDef.h;  LinkDef_Func.h;  LinkDef_RootFinding.h;  MCIntegrationTypes.h;  MCParameters.h;  MultiNumGradFunction.h;  MultiRootFinder.h;  ParamFunction.h;  PdfFuncMathMore.h;  Polynomial.h;  QuantFuncMathMore.h;  QuasiRandom.h;  RootFinderAlgorithms.h;  SpecFuncMathMore.h;  Vavilov.h;  VavilovAccurate.h;  VavilovAccurateCdf.h;  VavilovAccuratePdf.h;  VavilovAccurateQuantile.h;  VavilovFast.h;  ► src;  cb,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:46425,test,testSpecFuncGamma,46425,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['test'],['testSpecFuncGamma']
Testability,"che(); }. void SetPriorNuisance(RooAbsPdf* pdf); How to randomize the prior. Set to NULL to deactivate randomization. { fPriorNuisance = pdf; }. void SetNuisanceParameters(const RooArgSet& np); specify the nuisance parameters (eg. the rest of the parameters). { fNuisancePars = &np; }. void SetObservables(const RooArgSet& o); specify the observables in the dataset (needed to evaluate the test statistic). { fObservables = &o; }. void SetGlobalObservables(const RooArgSet& o); specify the conditional observables. { fGlobalObservables = &o; }. void SetTestSize(Double_t size); set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval). { fSize = size; }. void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). { fSize = 1. - cl; }. void SetTestStatistic(RooStats::TestStatistic* testStatistic); Set the TestStatistic (want the argument to be a function of the data & parameter points. { fTestStat = testStatistic; }. void SetExpectedNuisancePar(Bool_t i = kTRUE); { fExpectedNuisancePar = i; }. void SetAsimovNuisancePar(Bool_t i = kTRUE); { fExpectedNuisancePar = i; }. void SetGenerateBinned(bool binned = true); control to use bin data generation (=> see RooFit::AllBinned() option). { fGenerateBinned = binned; }. void SetGenerateBinnedTag(const char* binnedTag = """"); name of the tag for individual components to be generated binned (=> see RooFit::GenBinned() option). { fGenerateBinnedTag = binnedTag; }. void SetGenerateAutoBinned(Bool_t autoBinned = kTRUE); set auto binned generation (=> see RooFit::AutoBinned() option). { fGenerateAutoBinned = autoBinned; }. void SetSamplingDistName(const char* name); Set the name of the sampling distribution used for plotting. { if(name) fSamplingDistName = name; }. string GetSamplingDistName(void); { return fSamplingDistName; }. void SetMaxToys(Double_t t); This option forces a maximum number of total toys. { fMaxToys = t; }. void SetToysLeftTail",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__ToyMCSampler.html:9131,test,testStatistic,9131,root/html532/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html532/RooStats__ToyMCSampler.html,1,['test'],['testStatistic']
Testability,"checkbox active if piping; TGCheckButton*fGrepCheckInvcheckbox active if inverting; TGLabel*fGrepLabellabel indicating if grepping or piping; TGTextEntry*fGrepTexttext to grep for in the logs; TGNumberEntry*fLinesFromstarting line; TGNumberEntry*fLinesToending line; TGListBox*fLogListlist of workers; TGTextButton*fLogNewdisplay logs button; TProofLog*fProofLogthe log; TGCheckButton*fRawLinesdisplay raw lines button; TGTextButton*fSavesave button; TGNumberEntry*fSessNumrelative index of the session to get; Int_tfSessionIdx; TStringfSessionUrl; TGTextView*fTexttext widget; Int_tfTextTypeType of retrieval; TGTextButton*fUrlButtonrebuild button; TGTextEntry*fUrlTexturl to connect to; TGVerticalFrame*fVworkersVertical frame. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressLog(TProofProgressDialog* d, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. TProofProgressLog(const char* url = 0, Int_t sessionidx = 0, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. void Init(Int_t w = 700, Int_t h = 600); Init window frame for log messages. ~TProofProgressLog(); Destructor. void Popup(); Show log window. void Clear(Option_t* = 0); Clear log window. void LoadBuffer(const char* buffer); Load a text buffer in the window. void LoadFile(const char* file); Load a file in the window. void AddBuffer(const char* buffer); Add text to the window. void CloseWindow(); Handle close button or when closed via window manager action. void BuildLogList(Bool_t create = kFALSE); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void DoLog(Bool_t grep = kFALSE); Display logs. 'grep' is set to kTRUE if it is invoked by pressing the; 'Filter' button. void LogMessage(const char* msg, Bool_t all); Load/append a log msg in the log frame, if open. void SaveToFile(); Save the logs to a file; Only the name of the file is taken, no expansion. void SetGrepView(); Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofProgressLog.html:23755,log,log,23755,root/html534/TProofProgressLog.html,https://root.cern,https://root.cern/root/html534/TProofProgressLog.html,1,['log'],['log']
Testability,"checksum) const; Return a Conversion StreamerInfo from the class represened by cl for the layout represented by 'checksum' to this class, if any. Bool_t HasDefaultConstructor() const; Return true if we have access to a default constructor. ROOT::MergeFunc_t GetMerge() const; Return the wrapper around Merge. ROOT::NewFunc_t GetNew() const; Return the wrapper around new ThisClass(). ROOT::NewArrFunc_t GetNewArray() const; Return the wrapper around new ThisClass[]. ROOT::DelFunc_t GetDelete() const; Return the wrapper around delete ThiObject. ROOT::DelArrFunc_t GetDeleteArray() const; Return the wrapper around delete [] ThiObject. ROOT::DesFunc_t GetDestructor() const; Return the wrapper around the destructor. ROOT::DirAutoAdd_t GetDirectoryAutoAdd() const; Return the wrapper around the directory auto add function. void SetClassSize(Int_t sizof); { fSizeof = sizof; }. void AddInstance(Bool_t heap = kFALSE); { fInstanceCount++; if (heap) fOnHeap++; }. Bool_t CanIgnoreTObjectStreamer(); { return TestBit(kIgnoreTObjectStreamer);}. void Dump() const; { TDictionary::Dump(); }. Version_t GetClassVersion() const; { fVersionUsed = kTRUE; return fClassVersion; }. const char * GetDeclFileName() const; { return fDeclFileName; }. Short_t GetDeclFileLine() const; { return fDeclFileLine; }. ClassInfo_t * GetClassInfo() const; { return fClassInfo; }. const char * GetContextMenuTitle() const; { return fContextMenuTitle; }. TVirtualStreamerInfo * GetCurrentStreamerInfo(). TList * GetListOfRealData() const; { return fRealData; }. const char * GetImplFileName() const; { return fImplFileName; }. Short_t GetImplFileLine() const; { return fImplFileLine; }. UInt_t GetInstanceCount() const; { return fInstanceCount; }. UInt_t GetHeapInstanceCount() const; { return fOnHeap; }. TVirtualRefProxy * GetReferenceProxy() const; { return fRefProxy; }. ShowMembersFunc_t GetShowMembersWrapper() const; { return fShowMembers; }. TObjArray * GetStreamerInfos() const; { return fStreamerInfo; }. const type_in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TClass.html:47469,Test,TestBit,47469,root/html530/TClass.html,https://root.cern,https://root.cern/root/html530/TClass.html,1,['Test'],['TestBit']
Testability,"chi2, likelihood, etc..) given the data and the model function ;  NHFitInterface;  NGLTutorials;  ►NInternal;  NExecutorUtils;  NTDF;  NTThreadedObjectUtils;  ►NMacOSX;  NDetails;  NOpenGL;  NUtil;  ►NX11;  NDetail;  ►NMath;  NBlas;  NBrentMethods;  NCephes;  NChebyshevTemplate recursive functions for defining evaluation of Chebyshev polynomials T_n(x) and the series S(x) = Sum_i c_i* T_i(x) ;  NCholeskyDecompHelpersHelpers for CholeskyDecomp ;  Ndetail;  NGenAlgoOptUtil;  NGenVector;  NGenVector_detail;  NGSLRootHelperHelper functions to test convergence of Root-Finding algorithms ;  NGSLSimAn;  Ngv_detail;  NImpl;  NIntegMultiDim;  NIntegOneDim;  NIntegOptionsUtil;  NIntegration;  NIntegrationMultiDim;  NIntegrationOneDim;  NInternal;  NInterpolation;  NMCIntegration;  NMinim;  NMinim1D;  NRootsRoot-Finding Algorithms ;  NrowOffsetsUtils;  NSampler;  NUtilNamespace defining Utility functions needed by mathcore ;  NVectorUtilGlobal Helper functions for generic Vector classes ;  NMathMore;  ►NMeta;  NSelection;  NMinuit;  NMinuit2;  NQuartz;  NRNamespace associated R package for ROOT ;  NTF1Helper;  NTMetaUtils;  NTreeUtils;  NTThreadedObjectUtils;  NTypeTraitsROOT type_traits extensions ;  ►Nv5;  NTFastFun;  Nrootmarks;  NROOTwriter;  Nshapes;  Nsqlio;  Nstaff;  ►NstdSTL namespace ;  ►N__ROOT;  Ndetail;  Nsurfaces;  Ntbb;  NTClassEdit;  Ntdf001_introduction;  Ntdf002_dataModel;  Ntdf003_profiles;  Ntdf004_cutFlowReport;  Ntdf006_ranges;  Ntdf007_snapshot;  Ntdf008_createDataSetFromScratch;  Ntdf010_trivialDataSource;  Ntdf011_ROOTDataSource;  Ntdf012_DefinesAndFiltersAsStrings;  Ntdf014_CSVDataSource;  Ntest;  NTGeoUnit;  NtimeSeriesFromCSV;  NTMath;  NTMatrixTCramerInv;  NTMatrixTSymCramerInv;  ►NTMVAAbstract ClassifierFactory template that handles arbitrary types ;  ►NDNN;  NBlas;  NExperimental;  NkNN;  NTMVAGlob;  Ntornado;  Ntree;  NTStreamerInfoActions;  Ntwoscales;  ►Nvecgeom;  Ncxx;  Nwriter;  Nxmlio;  NXPD;  NXrdCl;  Nzdemo;  Nzones. ROOT 6.12/07 - Referen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/namespaces.html:2618,test,test,2618,doc/v612/namespaces.html,https://root.cern,https://root.cern/doc/v612/namespaces.html,1,['test'],['test']
Testability,"children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector& insp) const; virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; TEveGeoShapeProjected(); virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGeoShapeProjected.html:16812,Test,TestBit,16812,root/html602/TEveGeoShapeProjected.html,https://root.cern,https://root.cern/root/html602/TEveGeoShapeProjected.html,6,['Test'],"['TestBit', 'TestBits', 'TestCSCBits']"
Testability,"ching() const; virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual voidnormLeafServerList(RooArgSet& list) const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual RooPlot*RooAbsPdf::paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooResolutionModel.html:23419,test,testArg,23419,root/html528/RooResolutionModel.html,https://root.cern,https://root.cern/root/html528/RooResolutionModel.html,1,['test'],['testArg']
Testability,"chronization with the device. . ◆ StepReducedWeightsLoss() [2/2]. template<typename Architecture_t > . template<typename Net_t > . auto TMVA::DNN::TGradientDescent< Architecture_t >::StepReducedWeightsLoss ; (; Net_t & ; net, . Matrix_t & ; input, . const Matrix_t & ; output, . const Matrix_t & ; weights . ); -> Scalar_t. inline . Definition at line 642 of file Minimizers.h. ◆ Train() [1/2]. template<typename Architecture_t > . template<typename Data_t , typename Net_t > . auto TMVA::DNN::TGradientDescent< Architecture_t >::Train ; (; const Data_t & ; trainingData, . size_t ; nTrainingSamples, . const Data_t & ; testData, . size_t ; nTestSamples, . Net_t & ; net, . size_t ; nThreads . ); -> Scalar_t. Definition at line 196 of file Minimizers.h. ◆ Train() [2/2]. template<typename Architecture_t > . template<typename Data_t , typename Net_t > . Scalar_t TMVA::DNN::TGradientDescent< Architecture_t >::Train ; (; const Data_t & ; TrainingDataIn, . size_t ; nTrainingSamples, . const Data_t & ; TestDataIn, . size_t ; nTestSamples, . Net_t & ; net, . size_t ; nThreads = 1 . ). Train the given net using the given training input data (events), training output data (labels), test input data (events), test output data (labels). . ◆ TrainMomentum() [1/2]. template<typename Architecture_t > . template<typename Data_t , typename Net_t > . auto TMVA::DNN::TGradientDescent< Architecture_t >::TrainMomentum ; (; const Data_t & ; trainingData, . size_t ; nTrainingSamples, . const Data_t & ; testData, . size_t ; nTestSamples, . Net_t & ; net, . Scalar_t ; momentum, . size_t ; nThreads . ); -> Scalar_t. Definition at line 259 of file Minimizers.h. ◆ TrainMomentum() [2/2]. template<typename Architecture_t > . template<typename Data_t , typename Net_t > . Scalar_t TMVA::DNN::TGradientDescent< Architecture_t >::TrainMomentum ; (; const Data_t & ; TrainingDataIn, . size_t ; nTrainingSamples, . const Data_t & ; TestDataIn, . size_t ; nTestSamples, . Net_t & ; net, . Scalar_t ; momentum, . size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TGradientDescent.html:13505,Test,TestDataIn,13505,doc/master/classTMVA_1_1DNN_1_1TGradientDescent.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TGradientDescent.html,1,['Test'],['TestDataIn']
Testability,"chronize(vector<ROOT::Fit::ParameterSettings>& parameters, Bool_t optConst, Bool_t verbose); voidzeroEvalCount(). private:. voidClearPdfParamAsymErr(Int_t index); virtual doubleDoEval(const double* x) const; Double_tGetPdfParamErr(Int_t index); Double_tGetPdfParamVal(Int_t index); voidSetPdfParamErr(Int_t index, Double_t value); voidSetPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); Bool_tSetPdfParamVal(const Int_t& index, const Double_t& value) const; voidupdateFloatVec(). Data Members; private:. RooArgList*_constParamList; RooMinimizer*_context; Bool_t_doEvalErrorWall; Int_t_evalCounter; RooArgList*_floatParamList; vector<RooAbsArg*>_floatParamVec; RooAbsReal*_funct; RooArgList*_initConstParamList; RooArgList*_initFloatParamList; ofstream*_logfile; double_maxFCN; int_nDim; int_numBadNLL; int_printEvalErrors; bool_verbose. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooMinimizerFcn(RooAbsReal* funct, RooMinimizer* context, bool verbose = false); Reset the *largest* negative log-likelihood value we have seen so far. RooMinimizerFcn(const RooMinimizerFcn& other). ~RooMinimizerFcn(). ROOT::Math::IBaseFunctionMultiDim* Clone() const. Bool_t Synchronize(vector<ROOT::Fit::ParameterSettings>& parameters, Bool_t optConst, Bool_t verbose). Double_t GetPdfParamVal(Int_t index); Access PDF parameter value by ordinal index (needed by MINUIT). Double_t GetPdfParamErr(Int_t index); Access PDF parameter error by ordinal index (needed by MINUIT). void SetPdfParamErr(Int_t index, Double_t value); Modify PDF parameter error by ordinal index (needed by MINUIT). void ClearPdfParamAsymErr(Int_t index); Modify PDF parameter error by ordinal index (needed by MINUIT). void SetPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); Modify PDF parameter error by ordinal index (needed by MINUIT). void BackProp(const ROOT::Fit::FitResult& results); Transfer MINUIT fit results back into RooFit objects. Bool_t SetLogFile(const char* inL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMinimizerFcn.html:2598,log,log-likelihood,2598,root/html602/RooMinimizerFcn.html,https://root.cern,https://root.cern/root/html602/RooMinimizerFcn.html,2,['log'],['log-likelihood']
Testability,"cht; 368 ; 369Double_t TMath::Gamma(Double_t a,Double_t x); 370{; 371 return ::ROOT::Math::inc_gamma(a, x);; 372}; 373 ; 374////////////////////////////////////////////////////////////////////////////////; 375/// Computation of the incomplete gamma function P(a,x); 376/// via its continued fraction representation.; 377///; 378/// \author NvE 14-nov-1998 UU-SAP Utrecht; 379 ; 380Double_t TMath::GamCf(Double_t a,Double_t x); 381{; 382 Int_t itmax = 100; // Maximum number of iterations; 383 Double_t eps = 3.e-14; // Relative accuracy; 384 Double_t fpmin = 1.e-30; // Smallest Double_t value allowed here; 385 ; 386 if (a <= 0 || x <= 0) return 0;; 387 ; 388 Double_t gln = LnGamma(a);; 389 Double_t b = x+1-a;; 390 Double_t c = 1/fpmin;; 391 Double_t d = 1/b;; 392 Double_t h = d;; 393 Double_t an,del;; 394 for (Int_t i=1; i<=itmax; i++) {; 395 an = Double_t(-i)*(Double_t(i)-a);; 396 b += 2;; 397 d = an*d+b;; 398 if (Abs(d) < fpmin) d = fpmin;; 399 c = b+an/c;; 400 if (Abs(c) < fpmin) c = fpmin;; 401 d = 1/d;; 402 del = d*c;; 403 h = h*del;; 404 if (Abs(del-1) < eps) break;; 405 //if (i==itmax) std::cout << ""*GamCf(a,x)* a too large or itmax too small"" << std::endl;; 406 }; 407 Double_t v = Exp(-x+a*Log(x)-gln)*h;; 408 return (1-v);; 409}; 410 ; 411////////////////////////////////////////////////////////////////////////////////; 412/// Computation of the incomplete gamma function P(a,x); 413/// via its series representation.; 414///; 415/// \author NvE 14-nov-1998 UU-SAP Utrecht; 416 ; 417Double_t TMath::GamSer(Double_t a,Double_t x); 418{; 419 Int_t itmax = 100; // Maximum number of iterations; 420 Double_t eps = 3.e-14; // Relative accuracy; 421 ; 422 if (a <= 0 || x <= 0) return 0;; 423 ; 424 Double_t gln = LnGamma(a);; 425 Double_t ap = a;; 426 Double_t sum = 1/a;; 427 Double_t del = sum;; 428 for (Int_t n=1; n<=itmax; n++) {; 429 ap += 1;; 430 del = del*x/ap;; 431 sum += del;; 432 if (TMath::Abs(del) < Abs(sum*eps)) break;; 433 //if (n==itmax) std::cout << ""*GamSer(a,x)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:12403,Log,Log,12403,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['Log'],['Log']
Testability,"ciates each; algorithm with a number. There is a utility function to help; to set the value of compress. For example,; ROOT::CompressionSettings(ROOT::kLZMA, 1); will build an integer which will set the compression to use; the LZMA algorithm and compression level 1. These are defined; in the header file Compression.h. Note that the compression settings may be changed at any time.; The new compression settings will only apply to branches created; or attached after the setting is changed and other objects written; after the setting is changed. In case the file does not exist or is not a valid ROOT file,; it is made a Zombie. One can detect this situation with a code like:; TFile f(""file.root"");; if (f.IsZombie()) {; std::cout << ""Error opening file"" << std::endl;; exit(-1);; }. When opening the file, the system checks the validity of this directory.; If something wrong is detected, an automatic Recovery is performed. In; this case, the file is scanned sequentially reading all logical blocks; and attempting to rebuild a correct directory (see TFile::Recover).; One can disable the automatic recovery procedure when reading one; or more files by setting the environment variable ""TFile.Recover: 0""; in the system.rootrc file. TFile(const TFile& ); TFile objects can not be copied. ~TFile(); File destructor. void Init(Bool_t create); Initialize a TFile object.; TFile implementations providing asynchronous open functionality need to; override this method to run the appropriate checks before calling this; standard initialization part. See TXNetFile::Init for an example. void Close(Option_t* option = """"); Close a file.; If option == ""R"", all TProcessIDs referenced by this file are deleted.; Calling TFile::Close(""R"") might be necessary in case one reads a long list; of files having TRef, writing some of the referenced objects or TRef; to a new file. If the TRef or referenced objects of the file being closed; will not be referenced again, it is possible to minimize the size; of th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFile.html:28439,log,logical,28439,root/html602/TFile.html,https://root.cern,https://root.cern/root/html602/TFile.html,2,['log'],['logical']
Testability,"ciency calculation method; 154 // - kUseEventSelection: computes efficiencies from given data sample; 155 // - kUsePDFs : creates smoothed PDFs from data samples, and; 156 // uses this to compute efficiencies; 157 enum EEffMethod { kUseEventSelection = 0,; 158 kUsePDFs };; 159 ; 160 // improve the Monte Carlo by providing some additional information; 161 enum EFitParameters { kNotEnforced = 0,; 162 kForceMin,; 163 kForceMax,; 164 kForceSmart };; 165 ; 166 // general; 167 TString fFitMethodS; ///< chosen fit method (string); 168 EFitMethodType fFitMethod; ///< chosen fit method; 169 TString fEffMethodS; ///< chosen efficiency calculation method (string); 170 EEffMethod fEffMethod; ///< chosen efficiency calculation method; 171 std::vector<EFitParameters>* fFitParams; ///< vector for series of fit methods; 172 Double_t fTestSignalEff; ///< used to test optimized signal efficiency; 173 Double_t fEffSMin; ///< used to test optimized signal efficiency; 174 Double_t fEffSMax; ///< used to test optimized signal efficiency; 175 Double_t* fCutRangeMin; ///< minimum of allowed cut range; 176 Double_t* fCutRangeMax; ///< maximum of allowed cut range; 177 std::vector<Interval*> fCutRange; ///< allowed ranges for cut optimisation; 178 ; 179 // for the use of the binary tree method; 180 BinarySearchTree* fBinaryTreeS;; 181 BinarySearchTree* fBinaryTreeB;; 182 ; 183 // MC method; 184 Double_t** fCutMin; ///< minimum requirement; 185 Double_t** fCutMax; ///< maximum requirement; 186 Double_t* fTmpCutMin; ///< temporary minimum requirement; 187 Double_t* fTmpCutMax; ///< temporary maximum requirement; 188 TString* fAllVarsI; ///< what to do with variables; 189 ; 190 // relevant for all methods; 191 Int_t fNpar; ///< number of parameters in fit (default: 2*Nvar); 192 Double_t fEffRef; ///< reference efficiency; 193 std::vector<Int_t>* fRangeSign; ///< used to match cuts to fit parameters (and vice versa); 194 TRandom* fRandom; ///< random generator for MC optimisation method; 195 ; 19",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h_source.html:6555,test,test,6555,doc/master/MethodCuts_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h_source.html,1,['test'],['test']
Testability,ciencyHelper.h;  TF1.cxx;  TF12.cxx;  TF1Convolution.cxx;  TF1Data_v5.cxx;  TF1Helper.cxx;  TF1Helper.h;  TF1NormSum.cxx;  TF2.cxx;  TF3.cxx;  TFitResult.cxx;  TFitResultPtr.cxx;  TFormula.cxx;  TFormula_v5.cxx;  TFormulaMathInterface.cxx;  TFormulaPrimitive_v5.cxx;  TFractionFitter.cxx;  TGraph.cxx;  TGraph2D.cxx;  TGraph2DErrors.cxx;  TGraphAsymmErrors.cxx;  TGraphBentErrors.cxx;  TGraphDelaunay.cxx;  TGraphDelaunay2D.cxx;  TGraphErrors.cxx;  TGraphSmooth.cxx;  TGraphTime.cxx;  TH1.cxx;  TH1K.cxx;  TH1Merger.cxx;  TH1Merger.h;  TH2.cxx;  TH2Poly.cxx;  TH3.cxx;  THLimitsFinder.cxx;  THn.cxx;  THnBase.cxx;  THnChain.cxx;  THnSparse.cxx;  THStack.cxx;  TKDE.cxx;  TLimit.cxx;  TLimitDataSource.cxx;  TMultiDimFit.cxx;  TMultiGraph.cxx;  TPolyMarker.cxx;  TPrincipal.cxx;  TProfile.cxx;  TProfile2D.cxx;  TProfile2Poly.cxx;  TProfile3D.cxx;  TProfileHelper.h;  TSpline.cxx;  TSVDUnfold.cxx;  TVirtualFitter.cxx;  TVirtualGraphPainter.cxx;  TVirtualHistPainter.cxx;  WrappedTF1.cxx;  ► test;  test_tprofile2poly.cxx;  ► v7;  ► inc;  ► ROOT;  TAxis.hxx;  THist.hxx;  THistBinIter.hxx;  THistBufferedFill.hxx;  THistConcurrentFill.hxx;  THistData.hxx;  THistDrawable.hxx;  THistDrawOptions.hxx;  THistImpl.hxx;  THistUtils.hxx;  THistView.hxx;  ► src;  TAxis.cxx;  THistDrawable.cxx;  ► test;  speedtest.cxx;  ► histpainter;  ► inc;  Hoption.h;  Hparam.h;  TGraph2DPainter.h;  TGraphPainter.h;  THistPainter.h;  TLego.h;  TPainter3dAlgorithms.h;  TPaletteAxis.h;  ► src;  TGraph2DPainter.cxx;  TGraphPainter.cxx;  THistPainter.cxx;  TPainter3dAlgorithms.cxx;  TPaletteAxis.cxx;  ► v7;  ► src;  THistPainter.cxx;  ► spectrum;  ► inc;  TSpectrum.h;  TSpectrum2.h;  TSpectrum2Fit.h;  TSpectrum2Transform.h;  TSpectrum3.h;  TSpectrumFit.h;  TSpectrumTransform.h;  ► src;  TSpectrum.cxx;  TSpectrum2.cxx;  TSpectrum2Fit.cxx;  TSpectrum2Transform.cxx;  TSpectrum3.cxx;  TSpectrumFit.cxx;  TSpectrumTransform.cxx;  ► spectrumpainter;  ► inc;  TSpectrum2Painter.h;  ► src;  TSpectrum2Painter.cxx;  ► unfol,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:34685,test,test,34685,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['test'],['test']
Testability,"cient; pairs may overlap each other. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const. void getCompIntList(const RooArgSet* nset, const RooArgSet* iset, RooAddModel::pRooArgList& compIntList, Int_t& code, const char* isetRangeName) const; Check if this configuration was created before. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral defined by given scenario code. Double_t expectedEvents(const RooArgSet* nset); Return the number of expected events, which is either the sum of all coefficients; or the sum of the components extended terms. void selectNormalization(const RooArgSet* depSet = 0, Bool_t force = kFALSE); Interface function used by test statistics to freeze choice of observables; for interpretation of fraction coefficients. void selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); Interface function used by test statistics to freeze choice of range; for interpretation of fraction coefficients. RooAbsGenContext* genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; Return specialized context to efficiently generate toy events from RooAddPdfs. Bool_t isDirectGenSafe(const RooAbsArg& arg) const; Direct generation is safe if all components say so. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; Return pseud-code that indicates if all components can do internal generation (1) or not (0). void generateEvent(Int_t code); This function should never be called as RooAddModel implements a custom generator context. void printMetaArgs(ostream& os) const; Customized printing of arguments of a RooAddModel to more intuitively reflect the contents of the; product operator construction. TObject* clone(const char* newname) const; { return new RooAddModel(*this,n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAddModel.html:46716,test,test,46716,root/html526/RooAddModel.html,https://root.cern,https://root.cern/root/html526/RooAddModel.html,1,['test'],['test']
Testability,"cified file are not empty, a copy of the file; is made locally and augmented with the content of fInputData. Int_t Remove(const char* ref, Bool_t all); Handle remove request. TTree * GetTreeHeader(TDSet* tdset); Creates a tree header (a tree with nonexisting files) object for; the DataSet. void FindUniqueSlaves(); Add to the fUniqueSlave list the active slaves that have a unique; (user) file system image. This information is used to transfer files; only once to nodes that share a file system (an image). Submasters; which are not in fUniqueSlaves are put in the fNonUniqueMasters; list. That list is used to trigger the transferring of files to; the submaster's unique slaves without the need to transfer the file; to the submaster. void ShowData(); List contents of the data directory in the sandbox.; This is the place where files produced by the client queries are kept. void ShowDataDir(const char* dirname); List contents of the data directory 'dirname'. Int_t PollForNewWorkers(); Simulate dynamic addition, for test purposes.; Here we decide how many workers to add, we create them and set the; environment.; This call is called regularly by Collect if the opton is enabled.; Returns the number of new workers added, or <0 on errors. TProofLite(const TProofLite& ). void operator=(const TProofLite& ). TProofLite(); { }. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); { return TProof::Process(fc, sel, o, nent, fst); }. Long64_t Process(const char* dsname, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0, TObject* enl = 0); { return TProof::Process(dsname, sel, o, nent, fst, enl); }. Long64_t Process(const char* sel, Long64_t nent, Option_t* o = """"); Process via TSelector. { return TProof::Process(sel, nent, o); }. Long64_t Process(TDSet* dset, TSelector* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); { return TProof::Process(dset, sel, o, nent, fst); }. Long64_t Process(TFileCollectio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofLite.html:36828,test,test,36828,root/html534/TProofLite.html,https://root.cern,https://root.cern/root/html534/TProofLite.html,2,['test'],['test']
Testability,"cipal.h:31; TPrincipal::GetUserDataconst TVectorD * GetUserData() constDefinition TPrincipal.h:67; TPrincipal::~TPrincipal~TPrincipal() overrideDestructor.Definition TPrincipal.cxx:361; TPrincipal::GetEigenValuesconst TVectorD * GetEigenValues() constDefinition TPrincipal.h:61; TPrincipal::GetSigmasconst TVectorD * GetSigmas() constDefinition TPrincipal.h:66; TPrincipal::P2Xvirtual void P2X(const Double_t *p, Double_t *x, Int_t nTest)Calculate x as a function of nTest of the most significant principal components p,...Definition TPrincipal.cxx:1074; TPrincipal::Browsevoid Browse(TBrowser *b) overrideBrowse the TPrincipal object in the TBrowser.Definition TPrincipal.cxx:471; TPrincipal::fNumberOfDataPointsInt_t fNumberOfDataPointsNumber of data points.Definition TPrincipal.h:24; TPrincipal::MakeNormalisedvoid MakeNormalised()Normalize the covariance matrix.Definition TPrincipal.cxx:809; TPrincipal::GetHistogramsTList * GetHistograms() constDefinition TPrincipal.h:63; TPrincipal::MakePrincipalsvirtual void MakePrincipals()Perform the principal components analysis.Definition TPrincipal.cxx:884; TPrincipal::SumOfSquareResidualsvirtual void SumOfSquareResiduals(const Double_t *x, Double_t *s)Calculates the sum of the square residuals, that is.Definition TPrincipal.cxx:1183; TPrincipal::GetRowconst Double_t * GetRow(Long64_t row)Return a row of the user supplied data.Definition TPrincipal.cxx:521; TPrincipal::Testvoid Test(Option_t *option="""")Test the PCA, bye calculating the sum square of residuals (see method SumOfSquareResiduals),...Definition TPrincipal.cxx:1205; TPrincipal::fIsNormalisedBool_t fIsNormalisedNormalize matrix?Definition TPrincipal.h:42; TPrincipal::operator=TPrincipal & operator=(const TPrincipal &)Assignment operator.Definition TPrincipal.cxx:337; TVectorT< Double_t >; bool; double; int; xDouble_t x[n]Definition legend1.C:17. histhistincTPrincipal.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPrincipal_8h_source.html:9500,Test,Testvoid,9500,doc/master/TPrincipal_8h_source.html,https://root.cern,https://root.cern/doc/master/TPrincipal_8h_source.html,3,['Test'],"['Test', 'Testvoid']"
Testability,"cisionTree::SetPruneMethod ; (; EPruneMethod ; m = kCostComplexityPruning). inline . Definition at line 140 of file DecisionTree.h. ◆ SetPruneStrength(). void TMVA::DecisionTree::SetPruneStrength ; (; Double_t ; p). inline . Definition at line 146 of file DecisionTree.h. ◆ SetTreeID(). void TMVA::DecisionTree::SetTreeID ; (; Int_t ; treeID). inline . Definition at line 185 of file DecisionTree.h. ◆ SetUseExclusiveVars(). void TMVA::DecisionTree::SetUseExclusiveVars ; (; Bool_t ; t = kTRUE). inline . Definition at line 193 of file DecisionTree.h. ◆ SetUseFisherCuts(). void TMVA::DecisionTree::SetUseFisherCuts ; (; Bool_t ; t = kTRUE). inline . Definition at line 191 of file DecisionTree.h. ◆ Streamer(). virtual void TMVA::DecisionTree::Streamer ; (; TBuffer & ; ). virtual . Reimplemented from TMVA::BinaryTree. ◆ StreamerNVirtual(). void TMVA::DecisionTree::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 243 of file DecisionTree.h. ◆ TestPrunedTreeQuality(). Double_t TMVA::DecisionTree::TestPrunedTreeQuality ; (; const DecisionTreeNode * ; dt = nullptr, . Int_t ; mode = 0 . ); const. return the misclassification rate of a pruned tree a ""pruned tree"" may have set the variable ""IsTerminal"" to ""arbitrary"" at any node, hence this tree quality testing will stop there, hence test the pruned tree (while the full tree is still in place for normal/later use) ; Definition at line 1043 of file DecisionTree.cxx. ◆ TrainNode(). Double_t TMVA::DecisionTree::TrainNode ; (; const EventConstList & ; eventSample, . DecisionTreeNode * ; node . ). inline . Definition at line 108 of file DecisionTree.h. ◆ TrainNodeFast(). Double_t TMVA::DecisionTree::TrainNodeFast ; (; const EventConstList & ; eventSample, . TMVA::DecisionTreeNode * ; node . ). Decide how to split a node using one of the variables that gives the best separation of signal/background. ; In order to do this, for each variable a scan of the different cut values in a grid (grid = fNCu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:25686,Test,TestPrunedTreeQuality,25686,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['Test'],['TestPrunedTreeQuality']
Testability,"cissa x. If x is underflow or overflow, attempt to rebin histogram. Int_t FindBin(const char *label); Find bin number with label.; If label is not in the list of labels, add it.; If the number of labels exceeds the number of bins, double the number; of bins via TH1::LabelsInflate (if the histogram can be rebinned). Int_t FindFixBin(Double_t x) const; Find bin number corresponding to abscissa x. const char * GetBinLabel(Int_t bin) const; Return label for bin. Int_t GetFirst() const; return first bin on the axis; ie 1 if no range defined; NOTE: in some cases a zero is returned (see TAxis::SetRange). Int_t GetLast() const; return last bin on the axis; ie fNbins if no range defined; NOTE: in some cases a zero is returned (see TAxis::SetRange). Double_t GetBinCenter(Int_t bin) const; Return center of bin. Double_t GetBinCenterLog(Int_t bin) const; Return center of bin in log; With a log-equidistant binning for a bin with low and up edges, the mean is :; 0.5*(ln low + ln up) i.e. sqrt(low*up) in logx (e.g. sqrt(10^0*10^2) = 10).; Imagine a bin with low=1 and up=100 :; - the center in lin is (100-1)/2=50.5; - the center in log would be sqrt(1*100)=10 (!=log(50.5)); NB: if the low edge of the bin is negative, the function returns the bin center; as computed by TAxis::GetBinCenter. Double_t GetBinLowEdge(Int_t bin) const; Return low edge of bin. Double_t GetBinUpEdge(Int_t bin) const; Return up edge of bin. Double_t GetBinWidth(Int_t bin) const; Return bin width. void GetCenter(Double_t* center) const; Return an array with the center of all bins. void GetLowEdge(Double_t* edge) const; Return an array with the lod edge of all bins. const char * GetTimeFormatOnly() const; Return *only* the time format from the string fTimeFormat. const char * GetTicks() const; Return the ticks option (see SetTicks). void LabelsOption(Option_t* option = ""h""); Set option(s) to draw axis with labels; option = ""a"" sort by alphabetic order; = "">"" sort by decreasing values; = ""<"" sort by increasing v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAxis.html:13599,log,logx,13599,root/html526/TAxis.html,https://root.cern,https://root.cern/root/html526/TAxis.html,1,['log'],['logx']
Testability,"cissa x. If x is underflow or overflow, attempt to rebin histogram. Int_t FindBin(const char* label); Find bin number with label.; If label is not in the list of labels, add it.; If the number of labels exceeds the number of bins, double the number; of bins via TH1::LabelsInflate (if the histogram can be rebinned). Int_t FindFixBin(Double_t x) const; Find bin number corresponding to abscissa x. const char * GetBinLabel(Int_t bin) const; Return label for bin. Int_t GetFirst() const; return first bin on the axis; ie 1 if no range defined; NOTE: in some cases a zero is returned (see TAxis::SetRange). Int_t GetLast() const; return last bin on the axis; ie fNbins if no range defined; NOTE: in some cases a zero is returned (see TAxis::SetRange). Double_t GetBinCenter(Int_t bin) const; Return center of bin. Double_t GetBinCenterLog(Int_t bin) const; Return center of bin in log; With a log-equidistant binning for a bin with low and up edges, the mean is :; 0.5*(ln low + ln up) i.e. sqrt(low*up) in logx (e.g. sqrt(10^0*10^2) = 10).; Imagine a bin with low=1 and up=100 :; - the center in lin is (100-1)/2=50.5; - the center in log would be sqrt(1*100)=10 (!=log(50.5)); NB: if the low edge of the bin is negative, the function returns the bin center; as computed by TAxis::GetBinCenter. Double_t GetBinLowEdge(Int_t bin) const; Return low edge of bin. Double_t GetBinUpEdge(Int_t bin) const; Return up edge of bin. Double_t GetBinWidth(Int_t bin) const; Return bin width. void GetCenter(Double_t* center) const; Return an array with the center of all bins. void GetLowEdge(Double_t* edge) const; Return an array with the lod edge of all bins. const char * GetTimeFormatOnly() const; Return *only* the time format from the string fTimeFormat. const char * GetTicks() const; Return the ticks option (see SetTicks). void LabelsOption(Option_t* option = ""h""); Set option(s) to draw axis with labels; option = ""a"" sort by alphabetic order; = "">"" sort by decreasing values; = ""<"" sort by increasing v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TAxis.html:13653,log,logx,13653,root/html528/TAxis.html,https://root.cern,https://root.cern/root/html528/TAxis.html,1,['log'],['logx']
Testability,"ck (LayerData (numNodesPrev));; 1181 ; 1182 if (itGradientBegin == itGradientEnd); 1183 {; 1184 layerData.push_back (LayerData (layer.numNodes (), itWeight,; 1185 layer.activationFunction (),; 1186 layer.modeOutputValues ()));; 1187 }; 1188 else; 1189 {; 1190 layerData.push_back (LayerData (layer.numNodes (), itWeight, itGradient,; 1191 layer.activationFunction (),; 1192 layer.inverseActivationFunction (),; 1193 layer.modeOutputValues ()));; 1194 }; 1195 ; 1196 if (usesDropOut); 1197 {; 1198 layerData.back ().setDropOut (itDropOut);; 1199 }; 1200 ; 1201 }; 1202 ; 1203 if (usesDropOut); 1204 {; 1205 itDropOut += layer.numNodes ();; 1206 }; 1207 size_t _numWeights = layer.numWeights (numNodesPrev);; 1208 totalNumWeights += _numWeights;; 1209 itWeight += _numWeights;; 1210 itGradient += _numWeights;; 1211 numNodesPrev = layer.numNodes ();; 1212 ; 1213 }; 1214 assert (totalNumWeights > 0);; 1215 return layerPatternData;; 1216}; 1217 ; 1218 ; 1219 ; 1220 template <typename LayerContainer>; 1221 void Net::forwardPattern (const LayerContainer& _layers,; 1222 std::vector<LayerData>& layerData) const; 1223 {; 1224 size_t idxLayer = 0, idxLayerEnd = _layers.size ();; 1225 for (; idxLayer < idxLayerEnd; ++idxLayer); 1226 {; 1227 LayerData& prevLayerData = layerData.at (idxLayer);; 1228 LayerData& currLayerData = layerData.at (idxLayer+1);; 1229 ; 1230 forward (prevLayerData, currLayerData);; 1231 ; 1232 applyFunctions (currLayerData.valuesBegin (), currLayerData.valuesEnd (), currLayerData.activationFunction ());; 1233 }; 1234 }; 1235 ; 1236 ; 1237 ; 1238 ; 1239 template <typename LayerContainer, typename LayerPatternContainer>; 1240 void Net::forwardBatch (const LayerContainer& _layers,; 1241 LayerPatternContainer& layerPatternData,; 1242 std::vector<double>& valuesMean,; 1243 std::vector<double>& valuesStdDev,; 1244 size_t trainFromLayer) const; 1245 {; 1246 valuesMean.clear ();; 1247 valuesStdDev.clear ();; 1248 ; 1249 // ---------------------------------- loop over layers a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:39516,assert,assert,39516,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['assert'],['assert']
Testability,ck Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » TMVA; » TMVA::Config. class TMVA::Config. Function Members (Methods); public:. static TClass*Class(); TMVA::ConfigConfig(const TMVA::Config&); static voidDestroyInstance(); Bool_tDrawProgressBar() const; TMVA::Config::IONames&GetIONames(); TMVA::Config::VariablePlotting&GetVariablePlotting(); static TMVA::Config&Instance(); virtual TClass*IsA() const; Bool_tIsSilent() const; TMVA::Config&operator=(const TMVA::Config&); voidSetDrawProgressBar(Bool_t d); voidSetSilent(Bool_t s); voidSetUseColor(Bool_t uc); voidSetWriteOptionsReference(Bool_t w); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); Bool_tUseColor() const; Bool_tWriteOptionsReference() const. private:. (unknown)(); TMVA::ConfigConfig(); TMVA::MsgLogger&Log() const. Data Members; public:. TMVA::Config::IONamesfIONamesCustomisable weight file properties; TMVA::Config::VariablePlottingfVariablePlottingCustomisable plotting properties. private:. Bool_tfDrawProgressBardraw progress bar to indicate training evolution; TMVA::MsgLogger*fLoggermessage logger; Bool_tfSilentno output at all; Bool_tfUseColoredConsolecoloured standard output; Bool_tfWriteOptionsReferenceif set true: Configurable objects write file with option reference; static TMVA::Config*fgConfigPtr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Config(); constructor - set defaults. void DestroyInstance(); static function: destroy TMVA instance. TMVA::Config& Instance(); static function: returns TMVA instance. Bool_t UseColor() const; { return fUseColoredConsole; }. void SetUseColor(Bool_t uc); { fUseColoredConsole = uc; }. Bool_t IsSilent() const; { return fSilent; }. void SetSilent(Bool_t s); { fSilent = s; }. B,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__Config.html:1039,Log,Log,1039,root/html534/TMVA__Config.html,https://root.cern,https://root.cern/root/html534/TMVA__Config.html,1,['Log'],['Log']
Testability,"ck if logging is active for given object/topic/RooFit::MsgLevel combination. Bool_t isActive(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Check if logging is active for given object/topic/RooFit::MsgLevel combination. Int_t activeStream(const RooAbsArg* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. Int_t activeStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. ostream& log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. ostream& log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with TObject object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. void Print(Option_t* options = 0) const; Print configuration of message service. If ""v"" option is given also; inactive streams are listed. StreamConfig& getStream(Int_t id); { return _streams[id] ; }. Int_t numStreams() const; { return _streams.size() ; }. void reset(); { cleanup() ; }. void setGlobalKillBelow(RooFit::MsgLevel level); { _globMinLevel = level ; }. RooFit::MsgLevel globalKillBelow() const; { return _globMinLevel ; }. void showPid(Bool_t flag); { _showPid = flag ; }. Bool_t silentMode() const; Print level support for RooFit-related messages that are not routed through RooMsgService (such as Minuit printouts). { return _silentMode ; }. void setSilentMode(Bool_t flag); { _silentMode = flag ; }. Int_t errorCount() const; { return _errorCount ; }. void clearErrorCount(); { _errorCount = 0 ; }. Int_t& debugCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMsgService.html:11321,log,log,11321,root/html528/RooMsgService.html,https://root.cern,https://root.cern/root/html528/RooMsgService.html,12,"['Log', 'log']","['Log', 'log']"
Testability,"ck its content to client. Int_t BrowseFile(const char* fname); Browse root file and send back its content;; if fname is null, send the full list of files. Int_t BrowseKey(const char* keyname); Read key object and send it back to client. void Terminate(Int_t status); Terminate the proof server. void HandleCheckFile(TMessage* mess); Handle file checking request. void ErrorHandler(Int_t level, Bool_t abort, const char* location, const char* msg); The error handler function. It prints the message on stderr and; if abort is set it aborts the application. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* err = 0); Parse a command line received from the client, making sure that the files; needed for the execution, if any, are available. The line is either a C++; statement or an interpreter command starting with a ""."".; Return the return value of the command casted to a long. void ExecLogon(); Execute logon macro's. There are three levels of logon macros that; will be executed: the system logon etc/system.rootlogon.C, the global; user logon ~/.rootlogon.C and the local ./.rootlogon.C. For backward; compatibility also the logon macro as specified by the Rint.Logon; environment setting, by default ./rootlogon.C, will be executed.; No logon macros will be executed when the system is started with; the -n option. Int_t GetProtocol() const; { return fProtocol; }. Int_t GetPort() const; { return fUrl.GetPort(); }. const char * GetUser() const; { return fUrl.GetUser(); }. const char * GetHost() const; { return fUrl.GetHost(); }. TSocket * GetSocket() const; { return fSocket; }. void Interrupt(); { fInterrupt = kTRUE; }. Bool_t IsValid() const; { return fIsValid; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-03-10 17:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TApplicationServer.html:16027,log,logon,16027,root/html534/TApplicationServer.html,https://root.cern,https://root.cern/root/html534/TApplicationServer.html,4,"['Log', 'log']","['Logon', 'logon']"
Testability,"ck matrix into vector, which can be send to client; 334/// Following sizes can be used for vector:; 335/// 0 - Identity matrix; 336/// 3 - Translation; 337/// 4 - Scale (last element always 1); 338/// 9 - Rotation; 339/// 16 - Full size; 340 ; 341void RGeomDescription::PackMatrix(std::vector<float> &vect, TGeoMatrix *matr); 342{; 343 vect.clear();; 344 ; 345 if (!matr || matr->IsIdentity()); 346 return;; 347 ; 348 auto trans = matr->GetTranslation();; 349 auto scale = matr->GetScale();; 350 auto rotate = matr->GetRotationMatrix();; 351 ; 352 bool is_translate = matr->IsA() == TGeoTranslation::Class(), is_scale = matr->IsA() == TGeoScale::Class(),; 353 is_rotate = matr->IsA() == TGeoRotation::Class();; 354 ; 355 if (!is_translate && !is_scale && !is_rotate) {; 356 // check if trivial matrix; 357 ; 358 auto test = [](double val, double chk) { return (val == chk) || (TMath::Abs(val - chk) < 1e-20); };; 359 ; 360 bool no_scale = test(scale[0], 1) && test(scale[1], 1) && test(scale[2], 1);; 361 bool no_trans = test(trans[0], 0) && test(trans[1], 0) && test(trans[2], 0);; 362 bool no_rotate = test(rotate[0], 1) && test(rotate[1], 0) && test(rotate[2], 0) && test(rotate[3], 0) &&; 363 test(rotate[4], 1) && test(rotate[5], 0) && test(rotate[6], 0) && test(rotate[7], 0) &&; 364 test(rotate[8], 1);; 365 ; 366 if (no_scale && no_trans && no_rotate); 367 return;; 368 ; 369 if (no_scale && no_trans && !no_rotate) {; 370 is_rotate = true;; 371 } else if (no_scale && !no_trans && no_rotate) {; 372 is_translate = true;; 373 } else if (!no_scale && no_trans && no_rotate) {; 374 is_scale = true;; 375 }; 376 }; 377 ; 378 if (is_translate) {; 379 vect.resize(3);; 380 vect[0] = trans[0];; 381 vect[1] = trans[1];; 382 vect[2] = trans[2];; 383 return;; 384 }; 385 ; 386 if (is_scale) {; 387 vect.resize(4);; 388 vect[0] = scale[0];; 389 vect[1] = scale[1];; 390 vect[2] = scale[2];; 391 vect[3] = 1;; 392 return;; 393 }; 394 ; 395 if (is_rotate) {; 396 vect.resize(9);; 397 for (int n = 0; n < ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:8958,test,test,8958,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,32,['test'],['test']
Testability,"ck the boundary errors reference file created by CheckBoundaryErrors method.; The shape for which the crossing failed is drawn with the starting point in red; and the extrapolated point to boundary (+/- failing push/pull) in yellow. void CheckGeometryFull(Bool_t checkoverlaps = kTRUE, Bool_t checkcrossings = kTRUE, Int_t nrays = 10000, const Double_t* vertex = NULL); Geometry checking method (see: TGeoManager::CheckGeometry()). void CheckGeometry(Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const; Geometry checking method (see TGeoChecker). void CheckOverlaps(const TGeoVolume* vol, Double_t ovlp = 0.1, Option_t* option = """") const; Check overlaps for the top volume of the geometry, within a limit OVLP. void CheckPoint(Double_t x = 0, Double_t y = 0, Double_t z = 0, Option_t* option = """"); check current point in the geometry. void CheckShape(TGeoShape* shape, Int_t testNo, Int_t nsamples, Option_t* option); Test for shape navigation methods. Summary for test numbers:; 1: DistFromInside/Outside. Sample points inside the shape. Generate; directions randomly in cos(theta). Compute DistFromInside and move the; point with bigger distance. Compute DistFromOutside back from new point.; Plot d-(d1+d2). void ClearVisibleVolumes(); Clear the list of visible volumes; reset the kVisOnScreen bit for volumes previously in the list. void DefineColors() const; Define 100 colors with increasing light intensities for each basic color (1-7); Register these colors at indexes starting with 1000. Int_t GetColor(Int_t base, Float_t light) const; Get index of a base color with given light intensity (0,1). TGeoVolume * GetDrawnVolume() const; Get currently drawn volume. Int_t DistanceToPrimitiveVol(TGeoVolume* vol, Int_t px, Int_t py); compute the closest distance of approach from point px,py to a volume. void DefaultAngles(); Set default angles for the current view. void DefaultColors(); Set default volume colors according to tracking media. Int_t CountNodes(TGeoVolume* v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoPainter.html:14413,test,test,14413,root/html530/TGeoPainter.html,https://root.cern,https://root.cern/root/html530/TGeoPainter.html,3,['test'],['test']
Testability,"ck::now();; 1609 ; 1610 // Compute numerical throughput.; 1611 std::chrono::duration<double> elapsed_seconds = tend - tstart;; 1612 std::chrono::duration<double> elapsed1 = t1-tstart;; 1613 // std::chrono::duration<double> elapsed2 = t2-tstart;; 1614 // time to compute training and test errors; 1615 std::chrono::duration<double> elapsed_testing = tend-t1;; 1616 ; 1617 double seconds = elapsed_seconds.count();; 1618 // double nGFlops = (double)(settings.testInterval * batchesInEpoch * settings.batchSize)*1.E-9;; 1619 // nGFlops *= deepnet.GetNFlops() * 1e-9;; 1620 double eventTime = elapsed1.count()/( batchesInEpoch * settings.testInterval * settings.batchSize);; 1621 ; 1622 converged =; 1623 convergenceCount > settings.convergenceSteps || nTrainEpochs >= settings.maxEpochs;; 1624 ; 1625 ; 1626 Log() << std::setw(10) << nTrainEpochs << "" | ""; 1627 << std::setw(12) << trainingError; 1628 << std::setw(12) << valError; 1629 << std::setw(12) << seconds / settings.testInterval; 1630 << std::setw(12) << elapsed_testing.count(); 1631 << std::setw(12) << 1. / eventTime; 1632 << std::setw(12) << convergenceCount; 1633 << Endl;; 1634 ; 1635 if (converged) {; 1636 Log() << Endl;; 1637 }; 1638 tstart = std::chrono::system_clock::now();; 1639 }; 1640 ; 1641 // if (stepCount % 10 == 0 || converged) {; 1642 if (converged && debug) {; 1643 Log() << ""Final Deep Net Weights for phase "" << trainingPhase << "" epoch "" << nTrainEpochs; 1644 << Endl;; 1645 auto & weights_tensor = deepNet.GetLayerAt(0)->GetWeights();; 1646 auto & bias_tensor = deepNet.GetLayerAt(0)->GetBiases();; 1647 for (size_t l = 0; l < weights_tensor.size(); ++l); 1648 weights_tensor[l].Print();; 1649 bias_tensor[0].Print();; 1650 }; 1651 ; 1652 }; 1653 ; 1654 trainingPhase++;; 1655 } // end loop on training Phase; 1656}; 1657 ; 1658////////////////////////////////////////////////////////////////////////////////; 1659void MethodDL::Train(); 1660{; 1661 if (fInteractive) {; 1662 Log() << kFATAL << ""Not implemented yet"" <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:64857,test,testInterval,64857,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['test'],['testInterval']
Testability,"ckable(Bool_t p); virtual Bool_tTEveElement::SetRnrChildren(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelf(Bool_t rnr); virtual Bool_tTEveElement::SetRnrSelfChildren(Bool_t rnr_self, Bool_t rnr_children); virtual Bool_tTEveElement::SetRnrState(Bool_t rnr); voidTEveElement::SetSourceObject(TObject* o); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector& insp); virtual Bool_tTEveElement::SingleRnrState() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); voidUpdateNode(TGeoNode* node); voidUpdateVolume(TGeoVolume* volume); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidWriteExtract(const char* name, Bool_t leafs_only); virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGeoNode.html:14073,Test,TestBit,14073,root/html528/TEveGeoNode.html,https://root.cern,https://root.cern/root/html528/TEveGeoNode.html,9,['Test'],"['TestBit', 'TestBits', 'TestCSCBits']"
Testability,"ckage and it provides answers to the basic questions like ""Where am I ?"" or ""How far; from the next boundary ?"", but also to more complex ones like ""How far from; the closest surface ?"" or ""Which is the next crossing along a helix ?"".; The architecture of the modeler is a combination between a GEANT-like containment scheme and a normal CSG binary tree at the level of shapes. An important common feature of all detector geometry descriptions is the mother-daughter concept. This is the most natural approach when tracking is concerned and imposes a set of constraints to the way geometry is defined. Constructive solid geometry composition is used only in order to create more complex shapes from an existing set of primitives through boolean operations. This feature is not implemented yet but in future full definition of boolean expressions will be supported.; Practically every geometry defined in GEANT style can be mapped by the modeler. The basic components used for building the logical hierarchy of the geometry are called ""volumes"" and ""nodes"". Volumes (sometimes called ""solids"") are fully defined geometrical objects having a given shape and medium and possibly containing a list of nodes. Nodes represent just positioned instances of volumes inside a container volume and they are not directly defined by user. They are automatically created as a result of adding one volume inside other or dividing a volume. The geometrical transformation hold by nodes is always defined with respect to their mother (relative positioning). Reflection matrices are allowed. All volumes have to be fully aware of their containees when the geometry is closed. They will build additional structures (voxels) in order to fasten-up the search algorithms. Finally, nodes can be regarded as bidirectional links between containers and containees objects.; The structure defined in this way is a graph structure since volumes are replicable (same volume can become daughter node of several other volumes), ever",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManager.html:2365,log,logical,2365,doc/master/classTGeoManager.html,https://root.cern,https://root.cern/doc/master/classTGeoManager.html,1,['log'],['logical']
Testability,"cket::SendInterrupt(Int_t type); virtual Int_tTSocket::SendObject(const TObject* obj, Int_t kind = kMESS_OBJECT); virtual Int_tTXSocket::SendRaw(const void* buf, Int_t len, ESendRecvOptions opt = kDontBlock); voidTXSocket::SendUrgent(Int_t type, Int_t int1, Int_t int2); voidTXSocket::SetAWait(Bool_t w = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetClientID(Int_t cid); voidTSocket::SetCompressionAlgorithm(Int_t algorithm = 0); voidTSocket::SetCompressionLevel(Int_t level = 1); voidTSocket::SetCompressionSettings(Int_t settings = 1); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTXSocket::SetInterrupt(Bool_t i = kTRUE); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual Int_tTXSocket::SetOption(ESockOptions, Int_t); voidTSocket::SetRemoteProtocol(Int_t rproto); voidTSocket::SetSecContext(TSecContext* ctx); voidTXSocket::SetSendOpt(ESendRecvOptions o); voidTSocket::SetService(const char* service); voidTSocket::SetServType(Int_t st); voidTXSocket::SetSessionID(Int_t id); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidTSocket::SetUrl(const char* url); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTSocket::Touch(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXUnixSocket.html:8717,Test,TestBit,8717,root/html530/TXUnixSocket.html,https://root.cern,https://root.cern/root/html530/TXUnixSocket.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,ckground estimator (class TSpectrum) including Compton edges ;  Background_width.C Example to illustrate the influence of the clipping window width on the estimated background ;  Background_width2.C Example to illustrate the influence of the clipping window width on the estimated background ;  Deconvolution.C Example to illustrate deconvolution function (class TSpectrum) ;  Deconvolution_wide.C Example to illustrate deconvolution function (class TSpectrum) ;  Deconvolution_wide_boost.C Example to illustrate deconvolution function (class TSpectrum) ;  DeconvolutionRL_wide.C Example to illustrate deconvolution function (class TSpectrum) ;  DeconvolutionRL_wide_boost.C Example to illustrate deconvolution function (class TSpectrum) ;  peaks.C Getting Contours From TH2D ;  peaks2.C Example to illustrate the 2-d peak finder (class TSpectrum2) ;  Smoothing.C Example to illustrate smoothing using Markov algorithm (class TSpectrum) ;  spectrumpainter.C Examples showing how to use TSpectrum2Painter (the SPEC option) ;  ► splot;  TestSPlot.CThis tutorial illustrates the use of class TSPlot and of the sPlots method ;  ► sql;  sqlcanvas.CThis is slight modification of ntuple1.C example ;  sqlcreatedb.CCreate a runcatalog table in a MySQL test database ;  sqlfilldb.CFill run catalog with nfiles entries ;  sqlselect.C;  sqltables.CThis is an example illustrating how the TSQLFile class can be used ;  ► thread;  stressThreadPool.CUsage: ;  threadPool.CUsage: ;  threads.CExample of a simple script creating 3 threads ;  threadsh1.CExample of a simple script creating 3 threads ;  threadsh2.CExample of a simple script creating 2 threads each with one canvas ;  ► tmva;  ► keras;  ApplicationClassificationKeras.py;  ApplicationRegressionKeras.py;  ClassificationKeras.py;  GenerateModel.py;  LaunchClasGUI.C;  LaunchMultiGUI.C;  LaunchRegGUI.C;  MulticlassKeras.py;  RegressionKeras.py;  createData.CPlot the variables ;  TMVAClassification.C This macro provides examples for the training and t,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:152036,Test,TestSPlot,152036,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['Test'],['TestSPlot']
Testability,"ckgroundWeight); ; ## add event variables (image); ## use new method (from ROOT 6.20 to add a variable array for all image data); loader.AddVariablesArray(""vars"", imgSize); ; # Set individual event weights (the variables must exist in the original TTree); # for signal : factory->SetSignalWeightExpression (""weight1*weight2"");; # for background: factory->SetBackgroundWeightExpression(""weight1*weight2"");; # loader->SetBackgroundWeightExpression( ""weight"" );; ; # Apply additional cuts on the signal and background samples (can be different); mycuts = """" # for example: TCut mycuts = ""abs(var1)<0.5 && abs(var2-0.5)<1"";; mycutb = """" # for example: TCut mycutb = ""abs(var1)<0.5"";; ; # Tell the factory how to use the training and testing events; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # It is possible also to specify the number of training and testing events,; # note we disable the computation of the correlation matrix of the input variables; ; nTrainSig = 0.8 * nEventsSig; nTrainBkg = 0.8 * nEventsBkg; ; # build the string options for DataLoader::PrepareTrainingAndTestTree; ; loader.PrepareTrainingAndTestTree(; mycuts,; mycutb,; nTrain_Signal=nTrainSig,; nTrain_Background=nTrainBkg,; SplitMode=""Random"",; SplitSeed=100,; NormMode=""NumEvents"",; V=False,; CalcCorrelations=False,; ); ; ; # DataSetInfo : [dataset] : Added class ""Signal""; # : Add Tree sig_tree of type Signal with 10000 events; # DataSetInfo : [dataset] : Added class ""Background""; # : Add Tree bkg_tree of type Background with 10000 events; ; # signalTree.Print();; ; # Booking Methods; ; # Here we book the TMVA methods. We book a Boosted Decision Tree method (BDT); ; ; # Boosted Decision Trees; if useTMVABDT:; factory.BookMethod(; loader,; TMVA.Types.kBDT,; ""BDT"",; V=False,; NTrees=400,; MinNodeSize=""2.5%"",; MaxDepth=2,; BoostType=""AdaBoost"",; AdaBoostBeta=0.5,; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8py.html:8579,test,testing,8579,doc/master/TMVA__CNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8py.html,1,['test'],['testing']
Testability,"cking these changes which result in a net overhead. Thus for observable-dependent nodes,; the evaluation mechanism is changed from being dependent on a 'valueDirty' flag to guaranteed evaluation.; On the dataset side, the observables objects are modified to no longer send valueDirty messages; to their client. void optimizeConstantTerms(Bool_t ); Driver function to activate global constant term optimization.; If activated constant terms are found and cached with the dataset; The operation mode of cached nodes is set to AClean meaning that; their getVal() call will never result in an evaluate call.; Finally the branches in the dataset that correspond to observables; that are exclusively used in constant terms are disabled as; they serve no more purpose. Bool_t setData(RooAbsData& data, Bool_t cloneData = kTRUE); Change dataset that is used to given one. If cloneData is kTRUE, a clone of; in the input dataset is made. If the test statistic was constructed with; a range specification on the data, the cloneData argument is ignore and; the data is always cloned. RooAbsData& data(). const RooAbsData& data() const. RooAbsReal& function(); { return *_funcClone ; }. const RooAbsReal& function() const; { return *_funcClone ; }. const char* cacheUniqueSuffix() const; { return Form(""_%lx"", (ULong_t)_dataClone) ; }. Bool_t isDerived() const; Override this to be always true to force calculation of likelihood without parameters. { return kTRUE ; }. void seal(const char* notice = """"); { _sealed = kTRUE ; _sealNotice = notice ; }. Bool_t isSealed() const; { return _sealed ; }. const char* sealNotice() const; { return _sealNotice.Data() ; }. Bool_t allowFunctionCache(); { return kTRUE ; }. RooArgSet requiredExtraObservables() const; { return RooArgSet() ; }. » Last changed: Wed Dec 8 11:39:35 2010 » Last generated: 2010-12-08 11:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsOptTestStatistic.html:38446,test,test,38446,root/html528/RooAbsOptTestStatistic.html,https://root.cern,https://root.cern/root/html528/RooAbsOptTestStatistic.html,1,['test'],['test']
Testability,"cks, invoked from RWebWindowWSHandler Method invoked from http server thread, therefore appropriate mutex must be used on all relevant data. ; Definition at line 736 of file RWebWindow.cxx. ◆ ProvideQueueEntry(). void RWebWindow::ProvideQueueEntry ; (; unsigned ; connid, . EQueueEntryKind ; kind, . std::string && ; arg . ). private . Provide data to user callback User callback must be executed in the window thread. ; Definition at line 421 of file RWebWindow.cxx. ◆ RecordData(). void RWebWindow::RecordData ; (; const std::string & ; fname = ""protocol.json"", . const std::string & ; fprefix = """" . ). Configures recording of communication data in protocol file Provided filename will be used to store JSON array with names of written files - text or binary If data was send from client, ""send"" entry will be placed. ; JSON file will look like: [""send"", ""msg0.txt"", ""send"", ""msg1.txt"", ""msg2.txt""]; If empty file name is provided, data recording will be disabled Recorded data can be used in JSROOT directly to test client code without running C++ server ; Definition at line 1355 of file RWebWindow.cxx. ◆ RemoveConnection(). std::shared_ptr< RWebWindow::WebConn > RWebWindow::RemoveConnection ; (; unsigned ; wsid). private . Remove connection with given websocket id. ; Definition at line 279 of file RWebWindow.cxx. ◆ RemoveEmbedWindow(). void RWebWindow::RemoveEmbedWindow ; (; unsigned ; connid, . int ; channel . ). private . Remove RWebWindow associated with the channelfEmbed. ; Definition at line 1867 of file RWebWindow.cxx. ◆ RemoveKey(). void RWebWindow::RemoveKey ; (; const std::string & ; key). private . Removes all connections with the key. ; Definition at line 583 of file RWebWindow.cxx. ◆ RemoveMasterConnection(). void RWebWindow::RemoveMasterConnection ; (; unsigned ; connid = 0). private . Remove master connection - if any. ; Definition at line 343 of file RWebWindow.cxx. ◆ Run(). void RWebWindow::Run ; (; double ; tm = 0.). Run window functionality for specified time",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html:40064,test,test,40064,doc/v632/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html,1,['test'],['test']
Testability,"cks, invoked from RWebWindowWSHandler Method invoked from http server thread, therefore appropriate mutex must be used on all relevant data. ; Definition at line 737 of file RWebWindow.cxx. ◆ ProvideQueueEntry(). void RWebWindow::ProvideQueueEntry ; (; unsigned ; connid, . EQueueEntryKind ; kind, . std::string && ; arg . ). private . Provide data to user callback User callback must be executed in the window thread. ; Definition at line 422 of file RWebWindow.cxx. ◆ RecordData(). void RWebWindow::RecordData ; (; const std::string & ; fname = ""protocol.json"", . const std::string & ; fprefix = """" . ). Configures recording of communication data in protocol file Provided filename will be used to store JSON array with names of written files - text or binary If data was send from client, ""send"" entry will be placed. ; JSON file will look like: [""send"", ""msg0.txt"", ""send"", ""msg1.txt"", ""msg2.txt""]; If empty file name is provided, data recording will be disabled Recorded data can be used in JSROOT directly to test client code without running C++ server ; Definition at line 1397 of file RWebWindow.cxx. ◆ RemoveConnection(). std::shared_ptr< RWebWindow::WebConn > RWebWindow::RemoveConnection ; (; unsigned ; wsid). private . Remove connection with given websocket id. ; Definition at line 279 of file RWebWindow.cxx. ◆ RemoveEmbedWindow(). void RWebWindow::RemoveEmbedWindow ; (; unsigned ; connid, . int ; channel . ). private . Remove RWebWindow associated with the channelfEmbed. ; Definition at line 1909 of file RWebWindow.cxx. ◆ RemoveKey(). void RWebWindow::RemoveKey ; (; const std::string & ; key). private . Removes all connections with the key. ; Definition at line 584 of file RWebWindow.cxx. ◆ RemoveMasterConnection(). void RWebWindow::RemoveMasterConnection ; (; unsigned ; connid = 0). private . Remove master connection - if any. ; Definition at line 344 of file RWebWindow.cxx. ◆ Run(). void RWebWindow::Run ; (; double ; tm = 0.). Run window functionality for specified time",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindow.html:38948,test,test,38948,doc/master/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindow.html,1,['test'],['test']
Testability,"clFileName ();  . Protected Member Functions; TEveGeoShapeExtract * DumpShapeTree (TEveGeoShape *geon, TEveGeoShapeExtract *parent=nullptr);  Export this shape and its descendants into a geoshape-extract. ;  ; TGeoShape * MakePolyShape ();  Create derived TEveGeoShape form a TGeoCompositeShape. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  . Static Protected Member Functions; static TEveGeoShape * SubImportShapeExtract (TEveGeoShapeExtract *gse, TEveElement *parent);  Recursive version for importing a shape extract tree. ;  ;  Static Protected Member Functions inherited from TEveElement; static const char * ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . Protected Attributes; TGeoCompositeShape * fCompositeShape;  ; Int_t fNSegments;  ; TGeoShape * fShape;  ;  Protected Attributes inherited from TEveShape; Bool_t fDrawFrame;  ; Color_t fFillColor;  ; Bool_t fHighlightFrame;  ; Color_t fL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGeoShape.html:34204,Assert,Assert,34204,doc/master/classTEveGeoShape.html,https://root.cern,https://root.cern/doc/master/classTEveGeoShape.html,1,['Assert'],['Assert']
Testability,"clFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TQueryResult (Int_t seqnum, const char *opt, TList *inlist, Long64_t entries, Long64_t first, const char *selec);  Main constructor. ;  ; void AddInput (TObject *obj);  Add obj to the input list. ;  ; void AddLogLine (const char *logline);  Fill log file. ;  ; TQueryResult * CloneInfo ();  Return an instance of TQueryResult containing only the local info fields, i.e. ;  ; virtual void RecordEnd (EQueryStatus status, TList *outlist=nullptr);  End of query settings. ;  ; void SaveSelector (const char *selec);  Save the selector header and implementation into the dedicated TMacro instances. ;  ; void SetArchived (const char *archfile);  Set (or update) query in archived state. ;  ; virtual void SetFinalized ();  ; virtual void SetInputList (TList *in, bool adopt=true);  Set / change the input list. ;  ; void SetMergeTime (Float_t mergetime);  ; void SetNumMergers (Int_t nmergers);  ; virtual void SetOutputList (TList *out, bool adopt=true);  Set / change the output list. ;  ; void SetPrepTime (Float_t preptime);  ; virtual void SetProcessInfo (Long64_t ent, Float_t cpu=0., Long64_t siz=-1, Float_t inittime=0., Float_t proctime=0.);  Set processing info. ;  ; void SetRecvTime (Float_t recvtime);  ; void SetTer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQueryResult.html:12180,log,logline,12180,doc/master/classTQueryResult.html,https://root.cern,https://root.cern/doc/master/classTQueryResult.html,2,['log'],"['log', 'logline']"
Testability,"class created by event generators ;  CTPrincipalPrincipal Components Analysis (PCA) ;  CTProcessEventTimer;  CTProcessIDA TProcessID identifies a ROOT job in a unique way in time and space ;  CTProcessUUIDThis class is a specialized TProcessID managing the list of UUIDs ;  CTProfileProfile Histogram ;  CTProfile2DProfile2D histograms are used to display the mean value of Z and its RMS for each cell in X,Y ;  CTProfile2Poly2D Profile Histogram with Polygonal Bins ;  CTProfile2PolyBinHelper class to represent a bin in the TProfile2Poly histogram ;  CTProfile3DProfile3D histograms are used to display the mean value of T and its RMS for each cell in X,Y,Z ;  CTProfileHelper;  ►CTProofThis class controls a Parallel ROOT Facility, PROOF, cluster ;  CMD5Mod_t;  CTProofBenchSteering class for PROOF benchmarks ;  CTProofBenchDataSetHandle operations on datasets used by ProofBench ;  CTProofBenchRunAbstract base class for PROOF benchmark runs ;  CTProofBenchRunCPUCPU-intensive PROOF benchmark test generates events and fill 1, 2, or 3-D histograms ;  CTProofBenchRunDataReadI/O-intensive PROOF benchmark test reads in event files distributed on the cluster ;  CTProofChain;  CTProofCondor;  CTProofDebug;  CTProofDesc;  CTProofDrawImplement Tree drawing using PROOF ;  CTProofDrawEntryList;  CTProofDrawEventList;  CTProofDrawGraph;  CTProofDrawHist;  ►CTProofDrawListOfGraphs;  CPoint3D_t;  ►CTProofDrawListOfPolyMarkers3D;  CPoint4D_t;  CTProofDrawPolyMarker3D;  CTProofDrawProfile;  CTProofDrawProfile2D;  CTProofInputHandler;  CTProofInterruptHandler;  CTProofLimitsFinderClass to find axis limits and synchronize them between workers ;  CTProofLiteThis class starts a PROOF session on the local machine: no daemons, client and master merged, communications via UNIX-like sockets ;  CTProofLockPath;  CTProofLockPathGuard;  CTProofLogImplementation of the PROOF session log handler ;  CTProofLogElem;  CTProofMergePrg;  CTProofMgrThe PROOF manager interacts with the PROOF server coordinator ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v612/annotated.html:195306,test,test,195306,doc/v612/annotated.html,https://root.cern,https://root.cern/doc/v612/annotated.html,3,['test'],['test']
Testability,"class created by event generators ;  CTPrincipalPrincipal Components Analysis (PCA) ;  CTProcessEventTimer;  CTProcessIDA TProcessID identifies a ROOT job in a unique way in time and space ;  CTProcessUUIDThis class is a specialized TProcessID managing the list of UUIDs ;  CTProfileProfile Histogram ;  CTProfile2DProfile2D histograms are used to display the mean value of Z and its RMS for each cell in X,Y ;  CTProfile2Poly;  CTProfile2PolyBin;  CTProfile3DProfile3D histograms are used to display the mean value of T and its RMS for each cell in X,Y,Z ;  CTProfileHelper;  ►CTProofThis class controls a Parallel ROOT Facility, PROOF, cluster ;  CMD5Mod_t;  CTProofBenchSteering class for PROOF benchmarks ;  CTProofBenchDataSetHandle operations on datasets used by ProofBench ;  CTProofBenchRunAbstract base class for PROOF benchmark runs ;  CTProofBenchRunCPUCPU-intensive PROOF benchmark test generates events and fill 1, 2, or 3-D histograms ;  CTProofBenchRunDataReadI/O-intensive PROOF benchmark test reads in event files distributed on the cluster ;  CTProofChain;  CTProofCondor;  CTProofDebug;  CTProofDesc;  CTProofDrawImplement Tree drawing using PROOF ;  CTProofDrawEntryList;  CTProofDrawEventList;  CTProofDrawGraph;  CTProofDrawHist;  ►CTProofDrawListOfGraphs;  CPoint3D_t;  ►CTProofDrawListOfPolyMarkers3D;  CPoint4D_t;  CTProofDrawPolyMarker3D;  CTProofDrawProfile;  CTProofDrawProfile2D;  CTProofInputHandler;  CTProofInterruptHandler;  CTProofLimitsFinderClass to find axis limits and synchronize them between workers ;  CTProofLiteThis class starts a PROOF session on the local machine: no daemons, client and master merged, communications via UNIX-like sockets ;  CTProofLockPath;  CTProofLockPathGuard;  CTProofLogImplementation of the PROOF session log handler ;  CTProofLogElem;  CTProofMergePrg;  CTProofMgrThe PROOF manager interacts with the PROOF server coordinator to create or destroy a PROOF session, attach to or detach from existing one, and to monitor any client ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:186599,benchmark,benchmark,186599,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,1,['benchmark'],['benchmark']
Testability,"class declaration ; Definition at line 119 of file TParameter.h. ◆ GetName(). template<class AParamType > . const char * TParameter< AParamType >::GetName ; (; ); const. inlineoverridevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 66 of file TParameter.h. ◆ GetVal(). template<class AParamType > . const AParamType & TParameter< AParamType >::GetVal ; (; ); const. inline . Definition at line 67 of file TParameter.h. ◆ Hash(). template<class AParamType > . ULong_t TParameter< AParamType >::Hash ; (; ); const. inlineoverridevirtual . Return hash value for this object. ; Note: If this routine is overloaded in a derived class, this derived class should also add ROOT::CallRecursiveRemoveIfNeeded(*this); ROOT::CallRecursiveRemoveIfNeededvoid CallRecursiveRemoveIfNeeded(TObject &obj)call RecursiveRemove for obj if gROOT is valid and obj.TestBit(kMustCleanup) is true.Definition TROOT.h:395; Otherwise, when RecursiveRemove is called (by ~TObject or example) for this type of object, the transversal of THashList and THashTable containers will will have to be done without call Hash (and hence be linear rather than logarithmic complexity). You will also see warnings like Error in <ROOT::Internal::TCheckHashRecursiveRemoveConsistency::CheckRecursiveRemove>: The class SomeName overrides TObject::Hash but does not call TROOT::RecursiveRemove in its destructor.; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TParameter::HashULong_t Hash() const overrideReturn hash value for this object.Definition TParameter.h:92; TROOT::RecursiveRemovevoid RecursiveRemove(TObject *obj) overrideRecursively remove this object from the list of Cleanups.Definition TROOT.cxx:2498. Reimplemented from TObject.; Definition at l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParameter.html:13980,Test,TestBit,13980,doc/master/classTParameter.html,https://root.cern,https://root.cern/doc/master/classTParameter.html,1,['Test'],['TestBit']
Testability,"class description; function members; data members; class charts. ROOT; » GUI; » RECORDER; » TRecEvent. class TRecEvent: public TObject. ROOT EVENT RECORDING SYSTEM. TRecorder class provides interface for recording and replaying; events in ROOT.; Recorded events are:; - Commands typed by user in commandline ('new TCanvas'); - GUI events (mouse movement, button clicks, ...). All the recorded events from one session are stored in one TFile; and can be replayed again anytime. Recording. 1] To start recording. TRecorder r(const char *filename, ""NEW""); TRecorder r(const char *filename, ""RECREATE""). or:. TRecorder *recorder = new TRecorder;; recorder->Start(const char *filename, ...). -filename Name of ROOT file in which to save; recorded events. 2] To stop recording. recorder->Stop(). IMPORTANT:; State capturing is part of recording. It means that if you want to; record events for some object (window), creation of this object; must be also recorded. Example:. t = new TRecorder(); // Create a new recorder; t->Start(""logfile.root""); // ! Start recording first. c = new TCanvas(); // ! Then, create an object; c->Dump(); // Work with that object. t->Stop(); // Stop recording. It is strongly recommended to start recording with empty ROOT; environment, at least with no previously created ROOT GUI.; This ensures that only events for well known windows are stored.; Events for windows, which were not created during recording,; cannot be replayed. Replaying. 1] To start replaying. TRecorder r(const char *filename); TRecorder r(const char *filename, ""READ""). or:. TRecorder *recorder = new TRecorder;; recorder->Replay(const char *filename,; Bool_t showMouseCursor = kTRUE);. -filename A name of file with recorded events; previously created with TRecorder::Start. -showMouseCursor If kTRUE, mouse cursor is replayed as well.; In that case it is not recommended to use mouse; during replaying. In general, it is not recommended to use mouse to change positions; and states of ROOT windows dur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRecEvent.html:1154,log,logfile,1154,root/html528/TRecEvent.html,https://root.cern,https://root.cern/root/html528/TRecEvent.html,6,['log'],['logfile']
Testability,"class description; function members; data members; class charts. ROOT; » GUI; » RECORDER; » TRecorder. class TRecorder: public TObject. ROOT EVENT RECORDING SYSTEM. TRecorder class provides interface for recording and replaying; events in ROOT.; Recorded events are:; - Commands typed by user in commandline ('new TCanvas'); - GUI events (mouse movement, button clicks, ...). All the recorded events from one session are stored in one TFile; and can be replayed again anytime. Recording. 1] To start recording. TRecorder r(const char *filename, ""NEW""); TRecorder r(const char *filename, ""RECREATE""). or:. TRecorder *recorder = new TRecorder;; recorder->Start(const char *filename, ...). -filename Name of ROOT file in which to save; recorded events. 2] To stop recording. recorder->Stop(). IMPORTANT:; State capturing is part of recording. It means that if you want to; record events for some object (window), creation of this object; must be also recorded. Example:. t = new TRecorder(); // Create a new recorder; t->Start(""logfile.root""); // ! Start recording first. c = new TCanvas(); // ! Then, create an object; c->Dump(); // Work with that object. t->Stop(); // Stop recording. It is strongly recommended to start recording with empty ROOT; environment, at least with no previously created ROOT GUI.; This ensures that only events for well known windows are stored.; Events for windows, which were not created during recording,; cannot be replayed. Replaying. 1] To start replaying. TRecorder r(const char *filename); TRecorder r(const char *filename, ""READ""). or:. TRecorder *recorder = new TRecorder;; recorder->Replay(const char *filename,; Bool_t showMouseCursor = kTRUE);. -filename A name of file with recorded events; previously created with TRecorder::Start. -showMouseCursor If kTRUE, mouse cursor is replayed as well.; In that case it is not recommended to use mouse; during replaying. In general, it is not recommended to use mouse to change positions; and states of ROOT windows dur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRecorder.html:1180,log,logfile,1180,root/html528/TRecorder.html,https://root.cern,https://root.cern/root/html528/TRecorder.html,6,['log'],['logfile']
Testability,"class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOSTATS; » RooStats::MinNLLTestStat. class RooStats::MinNLLTestStat: public RooStats::TestStatistic. MinNLLTestStat is an implementation of the TestStatistic interface that calculates the minimum value of the negative log likelihood; function and returns it as a test statistic.; Internaly it operates by delegating to a MinNLLTestStat object. Function Members (Methods); public:. virtual~MinNLLTestStat(); static TClass*Class(); virtual voidEnableDetailedOutput(bool e = true); virtual Double_tEvaluate(RooAbsData& data, RooArgSet& paramsOfInterest); virtual const RooArgSet*GetDetailedOutput() const; virtual const TStringGetVarName() const; virtual TClass*IsA() const; RooStats::MinNLLTestStatMinNLLTestStat(); RooStats::MinNLLTestStatMinNLLTestStat(RooAbsPdf& pdf); RooStats::MinNLLTestStatMinNLLTestStat(const RooStats::MinNLLTestStat& rhs); RooStats::MinNLLTestStat&operator=(const RooStats::MinNLLTestStat& rhs); virtual boolRooStats::TestStatistic::PValueIsRightTail() const; voidSetLOffset(Bool_t flag = kTRUE); voidSetMinimizer(const char* minimizer); voidSetOneSided(Bool_t flag = true); voidSetOneSidedDiscovery(Bool_t flag = true); voidSetPrintLevel(Int_t printlevel); voidSetReuseNLL(Bool_t flag); voidSetStrategy(Int_t strategy); voidSetTolerance(double tol); virtual voidSetVarName(const char* name); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. RooStats::ProfileLikelihoodTestStat*fProflts. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinNLLTestStat(); Proof constructor. Do not use. MinNLLTestStat(RooAbsPdf& pdf). MinNLLTestStat(const RooStats::MinNLLTestStat& rhs). MinNLLTestStat & operator=(const RooStats::MinNLLTestStat& rhs). virtual ~MinNLLTestStat(). void SetOneSided(Bool_t flag = true); {fProflts->SetOneSided(flag);}. void S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__MinNLLTestStat.html:1172,Test,TestStatistic,1172,root/html534/RooStats__MinNLLTestStat.html,https://root.cern,https://root.cern/root/html534/RooStats__MinNLLTestStat.html,1,['Test'],['TestStatistic']
Testability,"class for elements drawn in the editor ;  CTAttCanvasManages canvas attributes ;  CTAttFillFill Area Attributes class ;  CTAttFillEditor;  CTAttImageTImage attributes ;  CTAttLineLine Attributes class ;  CTAttLineEditor;  CTAttMarkerMarker Attributes class ;  CTAttMarkerEditor;  CTAttPadManages default Pad attributes ;  CTAttParticleParticle definition, partly based on GEANT3 particle definition ;  CTAttTextText Attributes class ;  CTAttTextEditor;  CTAuthenticate;  CTAxisClass to manage histogram axis ;  CTAxis3DThe 3D axis painter class ;  CTAxisEditor;  CTAxisModLabTAxis helper class used to store the modified labels ;  CTBackCompFitterBackward compatible implementation of TVirtualFitter ;  CTBase64This code implements the Base64 encoding and decoding ;  CTBaseClassEach class (see TClass) has a linked list of its base class(es) ;  CTBasketManages buffers for branches of a Tree ;  CTBasketSQLImplement TBasket for a SQL backend ;  CTBenchmarkThis class is a ROOT utility to help benchmarking applications ;  CTBinomialEfficiencyFitterBinomial fitter for the division of two histograms ;  ►CTBitsContainer of bits ;  CTReference;  CTBonjourBrowser;  CTBonjourRecord;  CTBonjourRegistrar;  CTBonjourResolver;  CTBoxCreate a Box ;  CTBranchA TTree is a list of TBranches ;  CTBranchClonesA Branch for the case of an array of clone objects ;  CTBranchElementA Branch for the case of an object ;  CTBranchObjectA Branch for the case of an object ;  CTBranchRefA branch containing and managing a TRefTable for TRef autoloading ;  ►CTBranchSTLA Branch handling STL collection of pointers (vectors, lists, queues, sets and multisets) while storing them in split mode ;  CElementBranchHelper_t;  CTBRIKA box with faces perpendicular to the axes ;  CTBrowserUsing a TBrowser one can browse all ROOT objects ;  CTBrowserImpABC describing GUI independent browser implementation protocol ;  CTBrowserPlugin;  CTBtInnerNodeInner node of a TBtree ;  CTBtItemItem stored in inner nodes of a TBtree ;  C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:112192,benchmark,benchmarking,112192,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,5,['benchmark'],['benchmarking']
Testability,"class that wraps another p.d.f and caches its output; RooCatType Category state, (name,index) pair; RooCategory Discrete valued variable type; RooCategoryProxy Proxy for a RooAbsCategory object; RooCategorySharedProperties Shared properties of a RooCategory clone set; RooChangeTracker Meta object that tracks changes in set of other arguments; RooChebychev Chebychev polynomial PDF; RooChi2MCSModule MCStudy module to calculate chi2 between binned data and fit; RooChi2Var Chi^2 function of p.d.f w.r.t a binned dataset; RooChiSquarePdf Chi Square distribution (eg. the PDF ); RooCintUtils ; RooClassFactory RooFit class code and instance factory; RooCmdArg Generic named argument container; RooCmdConfig Configurable parse of RooCmdArg objects; RooComplex a non-persistent bare-bones complex class; RooCompositeDataStore Composite Data Storage class; RooConstVar Constant RooAbsReal value object; RooConstraintSum sum of -log of set of RooAbsPdf representing parameter constraints; RooConvCoefVar Auxiliary class representing the coefficient of a RooAbsAnaConvPdf as a RooAbsReal; RooConvGenContext Context for generating a dataset from a PDF; RooConvIntegrandBinding RooAbsFunc representation of convolution integrands; RooCurve 1-dimensional smooth curve for use in RooPlots; RooCustomizer Editing tool for RooAbsArg composite object expressions; RooDLLSignificanceMCSModule MCStudy module to calculate Delta(-logL) significance w.r.t given null hypothesis; RooDataHist Binned data set; RooDataHistSliceIter Iterator over a one-dimensional slice of a RooDataHist; RooDataProjBinding RealFunc/Dataset binding for data projection of a real function; RooDataSet Unbinned data set; RooDataWeightedAverage Optimized calculator of data weighted average of a RooAbsReal; RooDecay General decay function p.d.f; RooDerivative Representation of derivative of any RooAbsReal; RooDirItem Base class for RooFit objects that are listed TDirectories; RooDouble Container class for Double_t; RooDstD0BG D*-D0 mass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassIndex.html:30936,log,log,30936,root/html602/ClassIndex.html,https://root.cern,https://root.cern/root/html602/ClassIndex.html,4,['log'],"['log', 'logL']"
Testability,"class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); TSlave*TProof::CreateSlave(const char* url, const char* ord, Int_t perf, const char* image, const char* workdir); TSlave*TProof::CreateSubmaster(const char* url, const char* ord, const char* image, const char* msd); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; static Bool_tTProof::GetFileInCmd(const char* cmd, TString& fn); static Int_tTProof::GetInputData(TList* input, const char* cachedir, TString& emsg); TStringGetJobAd(); TList*TProof::GetListOfActiveSlaves() const; TVirtualProofPlayer*TProof::GetPlayer() const; TPluginHandler*TProof::GetProgressDialog() const; Int_tTProof::GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTProof::HandleLibIncPath(const char* what, Bool_t add, const char* dirs); Int_tTProof::Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); voidTProof::InitMembers(); virtual TVirtualProofPlayer*TProof::MakePlayer(const char* player = 0, TSocket* s = 0); voidTObject::MakeZombie(); voidTProof::PrepareInputDataFile(TString& dataFile); Int_tTProof::RemoveWorkers(TList* wrks); static Int_tTProof::SaveInputData(TQueryResult* qr, const char* cachedir, TString& emsg); virtual voidTProof::SaveWorkerInfo(); Int_tTProof::SendFile(const char* file, Int_t opt = (kBinary|kForward|kCp|kCpBin), const char* rfile = 0, TSlave* sl = 0); static Int_tTProof::SendInputData(TQueryResult* qr, TProof* p, TString& emsg); virtual voidTProof::SendInputDataFile(); voidTProof::SetDSet(TDSet* dset); voidTProof::SetPlayer(TVirtualProofPlayer* player); static void*TProof::SlaveStartupThread(void* arg); virtual Bool_tStartSlaves(Bool_t); static voidTProof::SystemCmd(const char* cmd, Int_t fdout); voidTProof::UpdateDialog(); virtual voidTProof::ValidateDSet(TDSet* dset).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofCondor.html:20512,log,loglevel,20512,root/html530/TProofCondor.html,https://root.cern,https://root.cern/root/html530/TProofCondor.html,2,['log'],['loglevel']
Testability,"classname' ;  ; bool IsDefPred (const char *predname, const char *classname);  return whether or not 'predname' is the STL default predicate for type 'classname' ;  ; bool IsInterpreterDetail (const char *type);  Return true if the type is one the interpreter details which are only forward declared (ClassInfo_t etc..) ;  ; bool IsStdArray (std::string_view name);  ; bool IsStdClass (const char *type);  return true if the class belongs to the std namespace ;  ; bool IsStdPair (std::string_view name);  ; bool IsStdPairBase (std::string_view name);  ; bool IsSTLBitset (const char *type);  Return true is the name is std::bitset<number> or bitset<number> ;  ; int IsSTLCont (const char *type, int testAlloc);  type : type name: vector<list<classA,allocator>,allocator> testAlloc: if true, we test allocator, if it is not default result is negative result: 0 : not stl container abs(result): code of container 1=vector,2=list,3=deque,4=map 5=multimap,6=set,7=multiset positive val: we have a vector or list with default allocator to any depth like vector<list<vector<int>>> negative val: STL container other than vector or list, or non default allocator For example: vector<deque<int>> has answer -1 ;  ; ROOT::ESTLType IsSTLCont (std::string_view type);  type : type name: vector<list<classA,allocator>,allocator> result: 0 : not stl container code of container 1=vector,2=list,3=deque,4=map 5=multimap,6=set,7=multiset ;  ; bool IsUniquePtr (std::string_view name);  ; bool IsVectorBool (const char *name);  ; std::string ResolveTypedef (const char *tname, bool resolveAll=false);  ; std::string ShortType (const char *typeDesc, int mode);  Return the absolute type of typeDesc. ;  ; bool SplitFunction (std::string_view decl, FunctionSplitInfo &result);  Split a function declaration into its different parts. ;  ; int STLArgs (int kind);  Return number of arguments for STL container before allocator. ;  ; ROOT::ESTLType STLKind (std::string_view type);  Converts STL container name to number.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTClassEdit.html:4579,test,testAlloc,4579,doc/master/namespaceTClassEdit.html,https://root.cern,https://root.cern/doc/master/namespaceTClassEdit.html,3,['test'],"['test', 'testAlloc']"
Testability,"clearShapeDirty() const; voidclearValueDirty() const; TIterator*clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*Clone(const char* newname = 0) const; virtual RooAbsArg*cloneTree(const char* newname = 0) const; virtual Int_tCompare(const TObject* other) const; virtual voidconstOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidcopyList(TList& dest, const TList& source); static UInt_tcrc32(const char* data); virtual RooAbsArg*createFundamental(const char* newname = 0) const; virtual Int_tdefaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tdependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tdependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tdependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tdependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tdependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsArg.html:3319,test,testArg,3319,root/html526/RooAbsArg.html,https://root.cern,https://root.cern/root/html526/RooAbsArg.html,3,['test'],['testArg']
Testability,"clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsArg*RooAbsString::createFundamental(const char* newname = 0) const; virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStringVar.html:3090,test,testArg,3090,root/html534/RooStringVar.html,https://root.cern,https://root.cern/root/html534/RooStringVar.html,3,['test'],['testArg']
Testability,"cling-clone-repo; cling-repo-sync; root-test; root-staticAnalysis-master. Basic operations; Understanding information for a single build; The Status shows a summary for the build. In case of multi-configuration jobs it it also show the configuration matrix that can be used to select a contrete configuration. See the following figure: ; For each individual build (select one cell in the matrix) the following information is provided:. Status. Shows a summary of the build (changes, errors, warnings, git revision, test results, etc.); Changes. Shows the details about the changes since the last build.; Console Output/View as plain text. Shows the full log of the build including all the steps (checkout, configuration, build, running tests, etc.); Parsed Console Output. The same as previous but with warnings and errors selected.; Parameters. The parameters used for the job.; Environment variables. A table with all the environment variables defined for the job.; Test Result. An interface to the CTest tests results. All test, failing and not failing can be shown with their output. Starting and stopping jobs. New jobs can be launched at any time independently of their automatic scheduling (time based or triggered by changes in the GIT repository). This is done by selecting Build with Parameters from the selected project page. This only enabled when your are logged in. Typically the default parameters should be sufficient unless you want to launch a special job.; Jobs (single or multi-configuration) can be stopped by pressing the small cross in the job build history or in the job status page. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentPro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/how-use-root-jenkins.html:5052,test,tests,5052,d/how-use-root-jenkins.html,https://root.cern,https://root.cern/d/how-use-root-jenkins.html,1,['test'],['tests']
Testability,"clock::now();; 1188 ; 1189 if (!fInteractive) {; 1190 Log() << std::setw(10) << ""Epoch"" << "" | ""; 1191 << std::setw(12) << ""Train Err.""; 1192 << std::setw(12) << ""Test Err.""; 1193 << std::setw(12) << ""GFLOP/s""; 1194 << std::setw(12) << ""Conv. Steps"" << Endl;; 1195 std::string separator(62, '-');; 1196 Log() << separator << Endl;; 1197 }; 1198 ; 1199 while (!converged); 1200 {; 1201 stepCount++;; 1202 // Perform minimization steps for a full epoch.; 1203 trainingData.Shuffle();; 1204 for (size_t i = 0; i < batchesInEpoch; i += nThreads) {; 1205 batches.clear();; 1206 for (size_t j = 0; j < nThreads; j++) {; 1207 batches.reserve(nThreads);; 1208 batches.push_back(trainingData.GetBatch());; 1209 }; 1210 if (settings.momentum > 0.0) {; 1211 minimizer.StepMomentum(net, nets, batches, settings.momentum);; 1212 } else {; 1213 minimizer.Step(net, nets, batches);; 1214 }; 1215 }; 1216 ; 1217 if ((stepCount % minimizer.GetTestInterval()) == 0) {; 1218 ; 1219 // Compute test error.; 1220 Double_t testError = 0.0;; 1221 for (auto batch : testData) {; 1222 auto inputMatrix = batch.GetInput();; 1223 auto outputMatrix = batch.GetOutput();; 1224 auto weightMatrix = batch.GetWeights();; 1225 testError += testNet.Loss(inputMatrix, outputMatrix, weightMatrix);; 1226 }; 1227 testError /= (Double_t) (nTestSamples / settings.batchSize);; 1228 ; 1229 //Log the loss value; 1230 fTrainHistory.AddValue(""testError"",stepCount,testError);; 1231 ; 1232 end = std::chrono::system_clock::now();; 1233 ; 1234 // Compute training error.; 1235 Double_t trainingError = 0.0;; 1236 for (auto batch : trainingData) {; 1237 auto inputMatrix = batch.GetInput();; 1238 auto outputMatrix = batch.GetOutput();; 1239 auto weightMatrix = batch.GetWeights();; 1240 trainingError += net.Loss(inputMatrix, outputMatrix, weightMatrix);; 1241 }; 1242 trainingError /= (Double_t) (nTrainingSamples / settings.batchSize);; 1243 ; 1244 //Log the loss value; 1245 fTrainHistory.AddValue(""trainingError"",stepCount,trainingError);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:43895,test,testError,43895,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['test'],['testError']
Testability,"cluding boosts and rotations; TLorentzVector A four vector with (-,-,-,+) metric; TMCVerbose Verbose class for MC application; TMD5 MD5 cryptographic hash functions with a 128 bit output; TMLPAnalyzer A simple analysis class for MLP; TMVA ; TMVA::BDTEventWrapper ; TMVA::BinarySearchTree Binary search tree including volume search method ; TMVA::BinarySearchTreeNode Node for the BinarySearchTree; TMVA::BinaryTree Base class for BinarySearch and Decision Trees; TMVA::CCPruner ; TMVA::CCTreeWrapper ; TMVA::Config Singleton class for global configuration settings; TMVA::Config::IONames ; TMVA::Config::VariablePlotting ; TMVA::Configurable Virtual base class for all TMVA method; TMVA::CostComplexityPruneTool ; TMVA::CrossEntropy Implementation of the CrossEntropy as separation criterion; TMVA::DecisionTree implementation of a Decision Tree; TMVA::DecisionTreeNode Node for the Decision Tree ; TMVA::Event ; TMVA::Factory The factory creates all MVA methods, and performs their training and testing; TMVA::FitterBase Baseclass for fitters; TMVA::GeneticAlgorithm Genetic algorithm controller; TMVA::GeneticFitter Fitter using a Genetic Algorithm; TMVA::GeneticGenes Genes definition for genetic algorithm; TMVA::GeneticPopulation Population definition for genetic algorithm; TMVA::GeneticRange Range definition for genetic algorithm; TMVA::GiniIndex Implementation of the GiniIndex as separation criterion; TMVA::GiniIndexWithLaplace Implementation of the GiniIndexWithLaplace as separation criterion; TMVA::IFitterTarget base class for a fitter ""target""; TMVA::IMethod Method Interface; TMVA::Interval Interval definition, continous and discrete; TMVA::KDEKernel Kernel density estimator for PDF smoothing; TMVA::LogInterval Interval definition, continous and discrete; TMVA::MCFitter Fitter using Monte Carlo sampling of parameters ; TMVA::MethodANNBase Base class for TMVA ANNs; TMVA::MethodBDT Analysis of Boosted Decision Trees; TMVA::MethodBase Virtual base class for all TMVA method; TMVA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:104851,test,testing,104851,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,1,['test'],['testing']
Testability,"code, const char *rangeName=nullptr) const override;  Calculate integral internally from appropriate integral cache. ;  ; std::list< double > * binBoundaries (RooAbsRealLValue &, double, double) const override;  Retrieve bin boundaries if this distribution is binned in obs. ;  ; TObject * clone (const char *newname) const override;  ; double defaultErrorLevel () const override;  Return the default error level for MINUIT error analysis If the addition contains one or more RooNLLVars and no RooChi2Vars, return the defaultErrorLevel() of RooNLLVar. ;  ; void doEval (RooFit::EvalContext &) const override;  Compute addition of PDFs in batches. ;  ; bool forceAnalyticalInt (const RooAbsArg &) const override;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &numVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; TClass * IsA () const override;  ; bool isBinnedDistribution (const RooArgSet &obs) const override;  Tests if the distribution is binned. Unless overridden by derived classes, this always returns false. ;  ; const RooArgList & list () const;  ; const RooArgList & list1 () const;  ; std::list< double > * plotSamplingHint (RooAbsRealLValue &, double, double) const override;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; void printMetaArgs (std::ostream &os) const override;  ; bool setData (RooAbsData &data, bool cloneData=true) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddition.html:2050,Test,Tests,2050,doc/master/classRooAddition.html,https://root.cern,https://root.cern/doc/master/classRooAddition.html,1,['Test'],['Tests']
Testability,"color, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTNode::SetMatrix(TRotMatrix* matrix = 0); virtual voidTNode::SetName(const char* name); virtual voidTNode::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNode::SetParent(TNode* parent); virtual voidTNode::SetPosition(Double_t x = 0, Double_t y = 0, Double_t z = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTNode::SetVisibility(Int_t vis = 1)MENU ; virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidTNode::Sizeof3D() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TNodeDiv(); TNodeDiv(const TNodeDiv&); TNodeDiv(const char* name, const char* title, const char* shapename, Int_t ndiv, Int_t axis, Option_t* option = """"); TNodeDiv(const char* name, const char* title, TShape* shape, Int_t ndiv, Int_t axis, Option_t* option = """"); virtual voidTNode::UpdateMatrix(); virtual voidTNode::UpdateTempMatrix(const Double_t* dx1, const Double_t* rmat1, Double_t x, Double_t y, Double_t z, Double_t* matrix, Double_t* dxnew, Double_t* rmatnew); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNodeDiv.html:6920,Test,TestBit,6920,root/html602/TNodeDiv.html,https://root.cern,https://root.cern/root/html602/TNodeDiv.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"colors or some other visual; parameters that do not affect object bounding-box or; transformation matrix, you can set it to false. If updateViewers is true (default), the viewers using this scene; will be tagged as changed. If sceneChanged is true the; updateViewers should be true as well, unless you take care of; the viewers elsewhere or in some other way. void UpdateLogical(TObject* logid); Drop display-lists for the logical (assume TGLObject/direct rendering).; Re-calculate the bounding box (also for all physicals). void UpdatePhysical(UInt_t phid, Double_t* trans, UChar_t* col); Reposition/recolor physical shape. void UpdatePhysical(UInt_t phid, Double_t* trans, Color_t cidx = -1, UChar_t transp = 0); Reposition/recolor physical shape. void UpdatePhysioLogical(TObject* logid, Double_t* trans, UChar_t* col); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). void UpdatePhysioLogical(TObject* logid, Double_t* trans, Color_t cidx, UChar_t transp); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). UInt_t BeginSmartRefresh(); Moves logicals that support smart-refresh to intermediate cache.; Destroys the others and returns the number of destroyed ones. void EndSmartRefresh(); Wipes logicals in refresh-cache. TGLLogicalShape * FindLogicalSmartRefresh(TObject* ID) const; Find and return logical shape identified by unqiue 'ID' in refresh-cache.; Returns 0 if not found. UInt_t SizeOfScene() const; Return memory cost of scene.; Warning: NOT CORRECT at present - doesn't correctly calculate size.; of logical shapes with dynamic internal contents. void DumpMapSizes() const; Print sizes of logical nad physical-shape maps. void RGBAFromColorIdx(Float_t* rgba, Color_t ci, Char_t transp = 0); Fill rgba color from ROOT color-index ci and transparency (0->100). Bool_t IsOutside(const TGLBoundingBox& box, const TGLPlaneSet_t& planes); Check if box is outside of all planes. TGLScene(const TGLScene& ). TGLSce",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLScene.html:13330,log,logid,13330,root/html528/TGLScene.html,https://root.cern,https://root.cern/root/html528/TGLScene.html,8,['log'],"['logical', 'logid']"
Testability,"colors or some other visual; parameters that do not affect object bounding-box or; transformation matrix, you can set it to false. If updateViewers is true (default), the viewers using this scene; will be tagged as changed. If sceneChanged is true the; updateViewers should be true as well, unless you take care of; the viewers elsewhere or in some other way. void UpdateLogical(TObject* logid); Drop display-lists for the logical (assume TGLObject/direct rendering).; Re-calculate the bounding box (also for all physicals). void UpdatePhysical(UInt_t phid, Double_t* trans, UChar_t* col); Reposition/recolor physical shape. void UpdatePhysical(UInt_t phid, Double_t* trans, Color_t cidx = -1, UChar_t transp = 0); Reposition/recolor physical shape. void UpdatePhysioLogical(TObject* logid, Double_t* trans, UChar_t* col); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). void UpdatePhysioLogical(TObject* logid, Double_t* trans, Color_t cidx, UChar_t transp); Reposition/recolor physical for given logical (assume TGLObject and; a single physical). UInt_t BeginSmartRefresh(); Moves logicals that support smart-refresh to intermediate cache.; Destroys the others and returns the number of destroyed ones. void EndSmartRefresh(); Wipes logicals in refresh-cache. TGLLogicalShape * FindLogicalSmartRefresh(TObject* ID) const; Find and return logical shape identified by unqiue 'ID' in refresh-cache.; Returns 0 if not found. UInt_t SizeOfScene() const; Return memory cost of scene.; Warning: NOT CORRECT at present - doesn't correctly calculate size.; of logical shapes with dynamic internal contents. void DumpMapSizes() const; Print sizes of logical nad physical-shape maps. void RGBAFromColorIdx(Float_t[4] rgba, Color_t ci, Char_t transp = 0); Fill rgba color from ROOT color-index ci and transparency (0->100). Bool_t IsOutside(const TGLBoundingBox& box, const TGLPlaneSet_t& planes); Check if box is outside of all planes. TGLScene(const TGLScene& ). TGLS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLScene.html:13967,log,logid,13967,root/html602/TGLScene.html,https://root.cern,https://root.cern/root/html602/TGLScene.html,4,['log'],"['logical', 'logid']"
Testability,"comparison (unweighted-unweighted); 2042/// - ""UW"" = experiment MC comparison (unweighted-weighted). Note that the first; 2043/// histogram should be unweighted; 2044/// - ""WW"" = MC MC comparison (weighted-weighted); 2045/// - ""NORM"" = if one or both histograms is scaled; 2046/// - ""OF"" = overflows included; 2047/// - ""UF"" = underflows included; 2048/// by default underflows and overflows are not included; 2049/// \param[out] igood test output; 2050/// - igood=0 - no problems; 2051/// - For unweighted unweighted comparison; 2052/// - igood=1'There is a bin in the 1st histogram with less than 1 event'; 2053/// - igood=2'There is a bin in the 2nd histogram with less than 1 event'; 2054/// - igood=3'when the conditions for igood=1 and igood=2 are satisfied'; 2055/// - For unweighted weighted comparison; 2056/// - igood=1'There is a bin in the 1st histogram with less then 1 event'; 2057/// - igood=2'There is a bin in the 2nd histogram with less then 10 effective number of events'; 2058/// - igood=3'when the conditions for igood=1 and igood=2 are satisfied'; 2059/// - For weighted weighted comparison; 2060/// - igood=1'There is a bin in the 1st histogram with less then 10 effective; 2061/// number of events'; 2062/// - igood=2'There is a bin in the 2nd histogram with less then 10 effective; 2063/// number of events'; 2064/// - igood=3'when the conditions for igood=1 and igood=2 are satisfied'; 2065/// \param[out] chi2 chisquare of the test; 2066/// \param[out] ndf number of degrees of freedom (important, when both histograms have the same empty bins); 2067/// \param[out] res normalized residuals for further analysis; 2068 ; 2069Double_t TH1::Chi2TestX(const TH1* h2, Double_t &chi2, Int_t &ndf, Int_t &igood, Option_t *option, Double_t *res) const; 2070{; 2071 ; 2072 Int_t i_start, i_end;; 2073 Int_t j_start, j_end;; 2074 Int_t k_start, k_end;; 2075 ; 2076 Double_t sum1 = 0.0, sumw1 = 0.0;; 2077 Double_t sum2 = 0.0, sumw2 = 0.0;; 2078 ; 2079 chi2 = 0.0;; 2080 ndf = 0;; 208",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:83592,test,test,83592,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,2,['test'],['test']
Testability,"compinfo));; 3529 }; 3530 } else if (generic); 3531 readSequence->AddAction(GenericReadAction, new TGenericConfiguration(this, i, compinfo));; 3532}; 3533 ; 3534////////////////////////////////////////////////////////////////////////////////; 3535/// Add a read action for the given element.; 3536/// This is for streaming via a TClonesArray (or a vector of pointers of this type).; 3537 ; 3538void TStreamerInfo::AddReadMemberWiseVecPtrAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t i, TStreamerInfo::TCompInfo *compinfo); 3539{; 3540 TStreamerElement *element = compinfo->fElem;; 3541 ; 3542 if (element->TestBit(TStreamerElement::kWrite)) return;; 3543 ; 3544 if (element->TestBit(TStreamerElement::kCache)) {; 3545 TConfiguredAction action( GetCollectionReadAction<VectorLooper>(this,element,compinfo->fType,i,compinfo,compinfo->fOffset) );; 3546 readSequence->AddAction( UseCacheVectorPtrLoop, new TConfigurationUseCache(this,action,element->TestBit(TStreamerElement::kRepeat)) );; 3547 } else {; 3548 readSequence->AddAction( GetCollectionReadAction<VectorPtrLooper>(this,element,compinfo->fType,i,compinfo,compinfo->fOffset) );; 3549 }; 3550}; 3551 ; 3552////////////////////////////////////////////////////////////////////////////////; 3553 ; 3554void TStreamerInfo::AddWriteAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t i, TStreamerInfo::TCompInfo *compinfo); 3555{; 3556 TStreamerElement *element = compinfo->fElem;; 3557 if (element->TestBit(TStreamerElement::kCache) && !element->TestBit(TStreamerElement::kWrite)) {; 3558 // Skip element cached for reading purposes.; 3559 return;; 3560 }; 3561 if (element->GetType() >= kArtificial && !element->TestBit(TStreamerElement::kWrite)) {; 3562 // Skip artificial element used for reading purposes.; 3563 return;; 3564 }; 3565 switch (compinfo->fType) {; 3566 // write basic types; 3567 case TStreamerInfo::kBool: writeSequence->AddAction( WriteBasicType<Bool_t>, new TConfiguration(this,i,compinfo,comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:161400,Test,TestBit,161400,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,5,['Test'],['TestBit']
Testability,"conName(const char* name); const TGPicture*TGMainFrame::SetIconPixmap(const char* iconName); voidTGMainFrame::SetIconPixmap(char** xpm_array); virtual voidTGCompositeFrame::SetLayoutBroken(Bool_t on = kTRUE); virtual voidTGCompositeFrame::SetLayoutManager(TGLayoutManager* l); virtual voidTGCompositeFrame::SetMapSubwindows(Bool_t on); virtual voidTGFrame::SetMaxHeight(UInt_t h); virtual voidTGFrame::SetMaxWidth(UInt_t w); virtual voidTGFrame::SetMinHeight(UInt_t h); virtual voidTGFrame::SetMinWidth(UInt_t w); voidTGMainFrame::SetMWMHints(UInt_t value, UInt_t funcs, UInt_t input); virtual voidTGWindow::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGFrame::SetSize(const TGDimension& s); voidSetTitle(); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTGFrame::SetWidth(UInt_t w); virtual voidTGMainFrame::SetWindowName(const char* name = 0); voidTGMainFrame::SetWMPosition(Int_t x, Int_t y); voidTGMainFrame::SetWMSize(UInt_t w, UInt_t h); voidTGMainFrame::SetWMSizeHints(UInt_t wmin, UInt_t hmin, UInt_t wmax, UInt_t hmax, UInt_t winc, UInt_t hinc); voidTGMainFrame::SetWMState(EInitialState state); virtual voidTGFrame::SetX(Int_t x); virtual voidTGFrame::SetY(Int_t y); virtual voidTGCompositeFrame::ShowFrame(TGFrame* f); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTGCompositeFrame::TranslateCoordinates(TGFrame* child, Int_t x, Int_t y, Int_t& fx, Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSessionLogView.html:15969,Test,TestBit,15969,root/html528/TSessionLogView.html,https://root.cern,https://root.cern/root/html528/TSessionLogView.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,conbase list tree icon picture; Bool_tfBusyKTRUE if busy i.e : connecting; TGPopupMenu*fCascadeMenuoptions menu entry; Bool_tfChangePicKTRUE if animation active; TStringfConfigFileconfiguration file name; TGHProgressBar*fConnectProgconnection progress bar; TContextMenu*fContextMenuinput/output objects context menu; time_tfElapsedtime of connection; TGPopupMenu*fFileMenufile menu entry; TGPopupMenu*fHelpMenuhelp menu entry; TGHorizontalFrame*fHf; TSessionInputFrame*fInputFrameinput frame; const TGPicture*fLocallocal session icon picture; TSessionLogView*fLogWindowexternal log window; TGMenuBar*fMenuBarapplication main menu bar; TGPopupMenu*fOptionsMenuoptions menu entry; TSessionOutputFrame*fOutputFrameoutput frame; TGPopupMenu*fPopupQryquery related popup menu; TGPopupMenu*fPopupSrvserver related popup menu; const TGPicture*fProofConconnected server icon picture; const TGPicture*fProofDiscondisconnected server icon picture; const TGPicture*fQueryConconnected(?) query icon picture; const TGPicture*fQueryDiscondisconnected(?) query icon picture; TSessionQueryFrame*fQueryFrameright side query frame; TGPopupMenu*fQueryMenuquery menu entry; TGIcon*fRightIconassociated picture; TGPicture*fRightIconPicturelower bottom left icon used to show connection status; TSessionServerFrame*fServerFrameright side server frame; TSessionFrame*fSessionFrameright side session frame; TGListTree*fSessionHierarchymain sessions/queries hierarchy list tree; TGListTreeItem*fSessionItembase (main) session list tree item; TGPopupMenu*fSessionMenusession menu entry; TList*fSessionslist of sessions; time_tfStarttime of connection; TGStatusBar*fStatusBarbottom status bar; TTimer*fTimertimer used to change icon picture; TGToolBar*fToolBarapplication tool bar; TGCanvas*fTreeViewmain right sessions/queries tree view; UserGroup_t*fUserGroupuser connected to session; TGVerticalFrame*fV1; TGVerticalFrame*fV2; TEnv*fViewerEnvviewer's configuration. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSessionViewer.html:24998,log,log,24998,root/html602/TSessionViewer.html,https://root.cern,https://root.cern/root/html602/TSessionViewer.html,2,['log'],['log']
Testability,"cond; it != itEnd; ++it); 997 {; 998 Batch& batch = *it;; 999 pass_through_type settingsAndBatch (settings, batch, dropContainer);; 1000 Minimizer minimizerClone (minimizer);; 1001 localError += minimizerClone ((*this), weights, settingsAndBatch); /// call the minimizer; 1002 }; 1003 return localError;; 1004 }); 1005 );; 1006 }; 1007 ; 1008 for (auto& f : futures); 1009 error += f.get ();; 1010 }; 1011 else; 1012 {; 1013 for (auto& batch : batches); 1014 {; 1015 std::tuple<Settings&, Batch&, DropContainer&> settingsAndBatch (settings, batch, dropContainer);; 1016 error += minimizer ((*this), weights, settingsAndBatch);; 1017 }; 1018 }; 1019 ; 1020 numBatches_stored = std::max (numBatches_stored, size_t(1)); /// normalize the error; 1021 error /= numBatches_stored;; 1022 settings.testIteration ();; 1023 ; 1024 return error;; 1025 }; 1026 ; 1027 ; 1028 ; 1029 ; 1030 ; 1031/*! \brief compute the neural net; 1032 *; 1033 * \param input the input data; 1034 * \param weights the weight data; 1035 */; 1036 template <typename Weights>; 1037 std::vector<double> Net::compute (const std::vector<double>& input, const Weights& weights) const; 1038 {; 1039 std::vector<LayerData> layerData;; 1040 layerData.reserve (m_layers.size ()+1);; 1041 auto itWeight = begin (weights);; 1042 auto itInputBegin = begin (input);; 1043 auto itInputEnd = end (input);; 1044 layerData.push_back (LayerData (itInputBegin, itInputEnd));; 1045 size_t numNodesPrev = input.size ();; 1046 ; 1047 // -------------------- prepare layer data with one pattern -------------------------------; 1048 for (auto& layer: m_layers); 1049 {; 1050 layerData.push_back (LayerData (layer.numNodes (), itWeight,; 1051 layer.activationFunction (),; 1052 layer.modeOutputValues ()));; 1053 size_t _numWeights = layer.numWeights (numNodesPrev);; 1054 itWeight += _numWeights;; 1055 numNodesPrev = layer.numNodes ();; 1056 }; 1057 ; 1058 ; 1059 // --------- forward -------------; 1060 forwardPattern (m_layers, layerData);; 1061 ; 1062",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:32046,test,testIteration,32046,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['test'],['testIteration']
Testability,configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:29558,Test,Test,29558,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 23,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:36576,Test,Test,36576,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91234,Test,Test,91234,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17.9119 20.8249 0.0200825 0.00181515 43794.1 0; : 750 | 17.7295 20.9077 0.0200909 0.00176261 43648.3 1; : 751 Minimum Test error found - save the configuration ; : 751 | 17.6646 20.1562 0.02009 0.00181812 43783 0; : 752 Minimum Test error found - save the configuration ; : 752 | 17.2045 20.1301 0.0200899 0.00181385 43773 0; : 753 Minimum Test error found - save the configuration ; : 753 | 17.2492 20.0483 0.0200805 0.00181433 43796.8 0; : 754 Minimum Test error found - save the configuration ; : 754 | 16.8738 20.0271 0.0201173 0.00182078 43724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:94172,Test,Test,94172,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test error found - save the configuration ; : 953 | 3.78482 5.22353 0.0202416 0.0018489 43495.5 0; : 954 | 3.77661 6.79704 0.0200822 0.00176597 43677.1 1; : 955 | 4.26211 5.70833 0.020048 0.0017647 43755.8 2; : 956 | 3.83703 5.25865 0.0200643 0.00176603 43720 3; : 957 Minimum Test error found - save the configuration ; : 957 | 3.70429 5.19606 0.0204948 0.00189018 43000 0; : 958 | 3.80095 5.43788 0.0203069 0.00176137 43137.1 1; : 959 Minimum Test error found - save the configuration ; : 959 | 3.68258 5.15386 0.0202548 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.97436 0.0200851 0.00180832 43771.4 0; : 961 | 3.60053 5.18492 0.0200347 0.00175376 43761.4 1; : 962 | 4.06747 4.98756 0.0202606 0.00194113 43669.3 2; : 963 | 3.72111 5.2317 0.020058 0.00176556 43733.9 3; : 964 | 3.60317 5.20936 0.020113 0.00175786 43584.5 4; : 965 | 3.63413 5.37485 0.0201057 0.00175921 43605 5; : 966 | 3.74764 5.16986 0.0200985 0.00180899 43741 6; : 967 | 3.64317 5.0911 0.0200896 0.00175556 43634.6 7; : 968 Minimum Test error found - save the configuration ; : 968 | 3.75704 4.83525 0.0200988 0.00182012 43766.9 0; : 969 | 3.53402 4.87481 0.020433 0.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243 0.0205923 0.00181714 42609.4 3; : 972 | 3.49443 4.93416 0.0204303 0.00180084 42942.7 4; : 973 | 3.50169 4.88411 0.0201535 0.00176496 43505.4 5; : 974 | 3.70493 4.95915 0.0200,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:110406,Test,Test,110406,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Test'],['Test']
Testability,"conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_HEADERS];; 14180 ; 14181 if ((cors_hdr_cfg != NULL) && (*cors_hdr_cfg != 0)) {; 14182 /* Allow only if access_control_allow_headers is; 14183 * not NULL and not an empty string. If this; 14184 * configuration is set to *, allow everything.; 14185 * Otherwise this configuration must be a list; 14186 * of allowed HTTP header names. */; 14187 mg_printf(conn,; 14188 ""Access-Control-Allow-Headers: %s\r\n"",; 14189 ((cors_hdr_cfg[0] == '*') ? cors_acrh; 14190 : cors_hdr_cfg));; 14191 }; 14192 }; 14193 if (cors_cred_cfg && *cors_cred_cfg) {; 14194 mg_printf(conn,; 14195 ""Access-Control-Allow-Credentials: %s\r\n"",; 14196 cors_cred_cfg);; 14197 }; 14198 ; 14199 mg_printf(conn, ""Access-Control-Max-Age: 60\r\n"");; 14200 ; 14201 mg_printf(conn, ""\r\n"");; 14202 return;; 14203 }; 14204 }; 14205 ; 14206 /* 5. interpret the url to find out how the request must be handled; 14207 */; 14208 /* 5.1. first test, if the request targets the regular http(s)://; 14209 * protocol namespace or the websocket ws(s):// protocol namespace.; 14210 */; 14211 is_websocket_request = (conn->protocol_type == PROTOCOL_TYPE_WEBSOCKET);; 14212#if defined(USE_WEBSOCKET); 14213 handler_type = is_websocket_request ? WEBSOCKET_HANDLER : REQUEST_HANDLER;; 14214#else; 14215 handler_type = REQUEST_HANDLER;; 14216#endif /* defined(USE_WEBSOCKET) */; 14217 ; 14218 if (is_websocket_request) {; 14219 HTTP1_only;; 14220 }; 14221 ; 14222 /* 5.2. check if the request will be handled by a callback */; 14223 if (get_request_handler(conn,; 14224 handler_type,; 14225 &callback_handler,; 14226 &subprotocols,; 14227 &ws_connect_handler,; 14228 &ws_ready_handler,; 14229 &ws_data_handler,; 14230 &ws_close_handler,; 14231 NULL,; 14232 &callback_data,; 14233 &handler_info)) {; 14234 /* 5.2.1. A callback will handle this request. All requests; 14235 * handled by a callback have to be considered as requests; 14236 * to a script resource. */; 14237 is_callback_resource = 1;; 14238 is_script",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:417660,test,test,417660,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['test'],['test']
Testability,"conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_HEADERS];; 14181 ; 14182 if ((cors_hdr_cfg != NULL) && (*cors_hdr_cfg != 0)) {; 14183 /* Allow only if access_control_allow_headers is; 14184 * not NULL and not an empty string. If this; 14185 * configuration is set to *, allow everything.; 14186 * Otherwise this configuration must be a list; 14187 * of allowed HTTP header names. */; 14188 mg_printf(conn,; 14189 ""Access-Control-Allow-Headers: %s\r\n"",; 14190 ((cors_hdr_cfg[0] == '*') ? cors_acrh; 14191 : cors_hdr_cfg));; 14192 }; 14193 }; 14194 if (cors_cred_cfg && *cors_cred_cfg) {; 14195 mg_printf(conn,; 14196 ""Access-Control-Allow-Credentials: %s\r\n"",; 14197 cors_cred_cfg);; 14198 }; 14199 ; 14200 mg_printf(conn, ""Access-Control-Max-Age: 60\r\n"");; 14201 ; 14202 mg_printf(conn, ""\r\n"");; 14203 return;; 14204 }; 14205 }; 14206 ; 14207 /* 5. interpret the url to find out how the request must be handled; 14208 */; 14209 /* 5.1. first test, if the request targets the regular http(s)://; 14210 * protocol namespace or the websocket ws(s):// protocol namespace.; 14211 */; 14212 is_websocket_request = (conn->protocol_type == PROTOCOL_TYPE_WEBSOCKET);; 14213#if defined(USE_WEBSOCKET); 14214 handler_type = is_websocket_request ? WEBSOCKET_HANDLER : REQUEST_HANDLER;; 14215#else; 14216 handler_type = REQUEST_HANDLER;; 14217#endif /* defined(USE_WEBSOCKET) */; 14218 ; 14219 if (is_websocket_request) {; 14220 HTTP1_only;; 14221 }; 14222 ; 14223 /* 5.2. check if the request will be handled by a callback */; 14224 if (get_request_handler(conn,; 14225 handler_type,; 14226 &callback_handler,; 14227 &subprotocols,; 14228 &ws_connect_handler,; 14229 &ws_ready_handler,; 14230 &ws_data_handler,; 14231 &ws_close_handler,; 14232 NULL,; 14233 &callback_data,; 14234 &handler_info)) {; 14235 /* 5.2.1. A callback will handle this request. All requests; 14236 * handled by a callback have to be considered as requests; 14237 * to a script resource. */; 14238 is_callback_resource = 1;; 14239 is_script",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:417693,test,test,417693,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['test'],['test']
Testability,"connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_t GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; Use the existing setting or the default if nothing is found.; If 'assert' is kTRUE, make also sure that the path exists.; Return 0 on success, -1 on failure. void ParseConfigField(const char* config); The config file field may contain special instructions which need to be; parsed at the beginning, e.g. for debug runs with valgrind. Int_t AssertPath(const char* path, Bool_t writable); Make sure that 'path' exists; if 'writable' ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProof.html:33101,log,loglevel,33101,root/html530/TProof.html,https://root.cern,https://root.cern/root/html530/TProof.html,2,['log'],['loglevel']
Testability,"connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. Int_t GetSandbox(TString& sb, Bool_t assert = kFALSE, const char* rc = 0); Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; Use the existing setting or the default if nothing is found.; If 'assert' is kTRUE, make also sure that the path exists.; Return 0 on success, -1 on failure. void ParseConfigField(const char* config); The config file field may contain special instructions which need to be; parsed at the beginning, e.g. for debug runs with valgrind.; Several options can be given separated by a ','. Int_t AssertPath(const char* path, Bool_t writa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:36240,log,loglevel,36240,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,3,['log'],['loglevel']
Testability,"connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). Masterurl is of; the form: [proof[s]://]host[:port]. Conffile is the name of the config; file describing the remote PROOF cluster (this argument alows you to; describe different cluster configurations).; The default is proof.conf. Confdir is the directory where the config; file and other PROOF related files are (like motd and noproof files).; Loglevel is the log level (default = 1). User specified custom config; files will be first looked for in $HOME/.conffile. TProof(); Protected constructor to be used by classes deriving from TProof; (they have to call Init themselves and override StartSlaves; appropriately). This constructor simply closes any previous gProof and sets gProof; to this instance. void InitMembers(); Default initializations. ~TProof(); Clean up PROOF environment. Int_t Init(const char* masterurl, const char* conffile, const char* confdir, Int_t loglevel, const char* alias = 0); Start the PROOF environment. Starting PROOF involves either connecting; to a master server, which in turn will start a set of slave servers, or; directly starting as master server (if master = """"). For a description; of the arguments see the TProof ctor. Returns the number of started; master or slave servers, returns 0 in case of error, in which case; fValid remains false. void ParseConfigField(const char* config); The config file field may contain special instructions which need to be; parsed at the beginning, e.g. for debug runs with valgrind. Int_t AssertPath(const char* path, Bool_t writable); Make sure that 'path' exists; if 'writable' is kTRUE, make also sure; that the path is writable. void SetManager(TProofMgr* mgr); Set manager and schedule its destruction after this for clean; operations. Int_t AddWorkers(TList* wrks); Works on the master node only.; It starts workers on the machines in workerList and sets the paths,; packages and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:32865,log,loglevel,32865,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,1,['log'],['loglevel']
Testability,"consider only negatively charged muons with a pseudorapidity; 1377smaller or equal to 2 and with a transverse momentum greater than 10 GeV.; 1378Such a selection would require, among the other things, the management of an explicit; 1379loop, for example:; 1380~~~{.cpp}; 1381std::vector<float> goodMuons_pt;; 1382const auto size = mu_charge.size();; 1383for (size_t i=0; i < size; ++i) {; 1384 if (mu_pt[i] > 10 && abs(mu_eta[i]) <= 2. && mu_charge[i] == -1) {; 1385 goodMuons_pt.emplace_back(mu_pt[i]);; 1386 }; 1387}; 1388~~~; 1389These operations become straightforward with RVec - we just need to *write what; 1390we mean*:; 1391~~~{.cpp}; 1392auto goodMuons_pt = mu_pt[ (mu_pt > 10.f && abs(mu_eta) <= 2.f && mu_charge == -1) ]; 1393~~~; 1394Now the clean collection of transverse momenta can be used within the rest of the data analysis, for; 1395example to fill a histogram.; 1396 ; 1397\anchor operationsandfunctions; 1398## Arithmetic operations, logical operations and mathematical functions; 1399Arithmetic operations on RVec instances can be performed: for example, they can be added, subtracted, multiplied.; 1400~~~{.cpp}; 1401RVec<double> v1 {1.,2.,3.,4.};; 1402RVec<float> v2 {5.f,6.f,7.f,8.f};; 1403auto v3 = v1+v2;; 1404auto v4 = 3 * v1;; 1405~~~; 1406The supported operators are ; 1407 - +, -, *, /; 1408 - +=, -=, *=, /=; 1409 - <, >, ==, !=, <=, >=, &&, ||; 1410 - ~, !; 1411 - &, |, ^; 1412 - &=, |=, ^=; 1413 - <<=, >>=; 1414 ; 1415The most common mathematical functions are supported. It is possible to invoke them passing ; 1416RVecs as arguments.; 1417 - abs, fdim, fmod, remainder; 1418 - floor, ceil, trunc, round, lround, llround; 1419 - exp, exp2, expm1; 1420 - log, log10, log2, log1p; 1421 - pow; 1422 - sqrt, cbrt; 1423 - sin, cos, tan, asin, acos, atan, atan2, hypot; 1424 - sinh, cosh, tanh, asinh, acosh; 1425 - erf, erfc; 1426 - lgamma, tgamma; 1427 ; 1428If the VDT library is available, the following functions can be invoked. Internally the calculations; 1429ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RVec_8hxx_source.html:49143,log,logical,49143,doc/master/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RVec_8hxx_source.html,2,['log'],['logical']
Testability,"considered known); mid : internal model id (really, you should not use this method at all); sde : efficiency estimate's standard deviation; sdb : background estimate's standard deviation; tau : ratio parameter (read TRolke.cxx for details); b : background expectation value (considered known); m : number of MC events generated . Definition at line 714 of file TRolke.cxx. ◆ DeclFileName(). static const char * TRolke::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 194 of file TRolke.h. ◆ EvalLikeMod1(). Double_t TRolke::EvalLikeMod1 ; (; Double_t ; mu, . Int_t ; x, . Int_t ; y, . Int_t ; z, . Double_t ; tau, . Int_t ; m, . Int_t ; what . ). private . Calculates the Profile Likelihood for MODEL 1: Poisson background/ Binomial Efficiency. . what = 1: Maximum likelihood estimate is returned; what = 2: Profile Likelihood of Maximum Likelihood estimate is returned.; what = 3: Profile Likelihood of Test hypothesis is returned otherwise parameters as described in the beginning of the class) . Definition at line 968 of file TRolke.cxx. ◆ EvalLikeMod2(). Double_t TRolke::EvalLikeMod2 ; (; Double_t ; mu, . Int_t ; x, . Int_t ; y, . Double_t ; em, . Double_t ; sde, . Double_t ; tau, . Int_t ; what . ). private . Calculates the Profile Likelihood for MODEL 2: Poisson background/ Gauss Efficiency. . what = 1: Maximum likelihood estimate is returned; what = 2: Profile Likelihood of Maximum Likelihood estimate is returned.; what = 3: Profile Likelihood of Test hypothesis is returned otherwise parameters as described in the beginning of the class) . Definition at line 1082 of file TRolke.cxx. ◆ EvalLikeMod3(). Double_t TRolke::EvalLikeMod3 ; (; Double_t ; mu, . Int_t ; x, . Double_t ; bm, . Double_t ; em, . Double_t ; sde, . Double_t ; sdb, . Int_t ; what . ). private . Calculates the Profile Likelihood for MODEL 3: Gauss background/ Gauss Efficiency. . what = 1: Maximum likelihood estimate is returned; what = 2: Profi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRolke.html:25996,Test,Test,25996,doc/master/classTRolke.html,https://root.cern,https://root.cern/doc/master/classTRolke.html,1,['Test'],['Test']
Testability,"const Double_t * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Divide(). TGeoVolume * TGeoTorus::Divide ; (; TGeoVolume * ; voldiv, . const char * ; divname, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step . ). overridevirtual . Reimplemented from TGeoBBox. ◆ GetAxisName(). const char * TGeoTorus::GetAxisName ; (; Int_t ; iaxis); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetAxisRange(). Double_t TGeoTorus::GetAxisRange ; (; Int_t ; iaxis, . Double_t & ; xlo, . Double_t & ; xhi . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetBoundingCylinder(). void TGeoTorus::GetBoundingCylinder ; (; Double_t * ; param); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetBuffer3D(). const TBuffer3D & TGeoTorus::GetBuffer3D ; (; Int_t ; reqSections, . Bool_t ; localFrame . ); const. overridevirtual . Stub implementation to avoid forcing implementation at this stage. ; Reimplemented from TGeoBBox. ◆ GetByteCount(). Int_t TGeoTorus::GetByteCount ; (; ); const. inlineoverridevirtual . Reimplemented from TGeoBBox.; Definition at line 68 of file TGeoTorus.h. ◆ GetDphi(). Double_t TGeoTorus::GetDphi ; (; ); const. inline . Definition at line 77 of file TGeoTorus.h. ◆ GetMakeRuntimeShape(). TGeoShape * TGeoTorus::GetMakeRuntimeShape ; (; TGeoShape * ; mother, . TGeoMatrix * ; mat . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetMeshNumbers(). void TGeoTorus::GetMeshNumbers ; (; Int_t & ; nvert, . Int_t & ; nsegs, . Int_t & ; npols . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetNmeshVertices(). Int_t TGeoTorus::GetNmeshVertices ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ GetPhi1(). Double_t TGeoTorus::GetPhi1 ; (; ); const. inline . Definition at line 76 of file TGeoTorus.h. ◆ GetPointsOnSegments(). Bool_t TGeoTorus::GetPointsOnSegments ; (; Int_t ; , . Double_t * ;  . )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTorus.html:27349,Stub,Stub,27349,doc/master/classTGeoTorus.html,https://root.cern,https://root.cern/doc/master/classTGeoTorus.html,1,['Stub'],['Stub']
Testability,"const Int_t* group) const; voidTHnBase::RebinnedAdd(const THnBase* h, Double_t c = 1.); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidReset(Option_t* option = """"); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTHnBase::Scale(Double_t c); voidSetBinContent(const Int_t* idx, Double_t v); virtual voidSetBinContent(Long64_t bin, Double_t v); voidTHnBase::SetBinEdges(Int_t idim, const Double_t* bins); voidTHnBase::SetBinError(const Int_t* idx, Double_t e); voidTHnBase::SetBinError(Long64_t bin, Double_t e); virtual voidSetBinError2(Long64_t bin, Double_t e2); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTHnBase::SetEntries(Double_t entries); virtual voidSetFilledBins(Long64_t nbins); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTHnBase::SetTitle(const char* title); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidSumw2(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. THnSparseArrayChunk*AddChunk(); voidTHnBase::AddInternal(const THnBase* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnSparse.html:12817,Test,TestBit,12817,root/html534/THnSparse.html,https://root.cern,https://root.cern/root/html534/THnSparse.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const PDF& pdfB ) const; 175{; 176 Double_t xmin = pdfS.GetXmin();; 177 Double_t xmax = pdfS.GetXmax();; 178 // sanity check; 179 if (xmin != pdfB.GetXmin() || xmax != pdfB.GetXmax()) {; 180 Log() << kFATAL << ""<GetSeparation> Mismatch in PDF limits: ""; 181 << xmin << "" "" << pdfB.GetXmin() << xmax << "" "" << pdfB.GetXmax() << Endl;; 182 }; 183 ; 184 Double_t separation = 0;; 185 Int_t nstep = 100;; 186 Double_t intBin = (xmax - xmin)/Double_t(nstep);; 187 for (Int_t bin=0; bin<nstep; bin++) {; 188 Double_t x = (bin + 0.5)*intBin + xmin;; 189 Double_t s = pdfS.GetVal( x );; 190 Double_t b = pdfB.GetVal( x );; 191 // separation; 192 if (s + b > 0) separation += (s - b)*(s - b)/(s + b);; 193 }; 194 separation *= (0.5*intBin);; 195 ; 196 return separation;; 197}; 198 ; 199////////////////////////////////////////////////////////////////////////////////; 200/// sanity check; 201 ; 202void TMVA::Tools::ComputeStat( const std::vector<TMVA::Event*>& events, std::vector<Float_t>* valVec,; 203 Double_t& meanS, Double_t& meanB,; 204 Double_t& rmsS, Double_t& rmsB,; 205 Double_t& xmin, Double_t& xmax,; 206 Int_t signalClass, Bool_t norm ); 207{; 208 if (0 == valVec); 209 Log() << kFATAL << ""<Tools::ComputeStat> value vector is zero pointer"" << Endl;; 210 ; 211 if ( events.size() != valVec->size() ); 212 Log() << kWARNING << ""<Tools::ComputeStat> event and value vector have different lengths ""; 213 << events.size() << ""!="" << valVec->size() << Endl;; 214 ; 215 Long64_t entries = valVec->size();; 216 ; 217 // first fill signal and background in arrays before analysis; 218 Double_t* varVecS = new Double_t[entries];; 219 Double_t* varVecB = new Double_t[entries];; 220 Double_t* wgtVecS = new Double_t[entries];; 221 Double_t* wgtVecB = new Double_t[entries];; 222 xmin = +DBL_MAX;; 223 xmax = -DBL_MAX;; 224 Long64_t nEventsS = 0;; 225 Long64_t nEventsB = 0;; 226 Double_t xmin_ = 0, xmax_ = 0;; 227 ; 228 if (norm) {; 229 xmin_ = *std::min( valVec->begin(), valVec->end() );; 230 xmax_ = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Tools_8cxx_source.html:7146,Log,Log,7146,doc/master/Tools_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Tools_8cxx_source.html,1,['Log'],['Log']
Testability,"const Ranking * MethodPyGTB::CreateRanking ; (; ). virtual . Implements TMVA::PyMethodBase.; Definition at line 541 of file MethodPyGTB.cxx. ◆ DeclareOptions(). void MethodPyGTB::DeclareOptions ; (; ). virtual . Implements TMVA::PyMethodBase.; Definition at line 121 of file MethodPyGTB.cxx. ◆ GetHelpMessage(). void MethodPyGTB::GetHelpMessage ; (; ); const. protectedvirtual . Implements TMVA::IMethod.; Definition at line 561 of file MethodPyGTB.cxx. ◆ GetMulticlassValues(). std::vector< Float_t > & MethodPyGTB::GetMulticlassValues ; (; ). virtual . Reimplemented from TMVA::MethodBase.; Definition at line 485 of file MethodPyGTB.cxx. ◆ GetMvaValue(). Double_t MethodPyGTB::GetMvaValue ; (; Double_t * ; errLower = nullptr, . Double_t * ; errUpper = nullptr . ). virtual . Implements TMVA::PyMethodBase.; Definition at line 453 of file MethodPyGTB.cxx. ◆ GetMvaValues(). std::vector< Double_t > MethodPyGTB::GetMvaValues ; (; Long64_t ; firstEvt = 0, . Long64_t ; lastEvt = -1, . Bool_t ; logProgress = false . ). virtual . get all the MVA values for the events of the current Data type ; Implements TMVA::PyMethodBase.; Definition at line 394 of file MethodPyGTB.cxx. ◆ HasAnalysisType(). Bool_t MethodPyGTB::HasAnalysisType ; (; Types::EAnalysisType ; type, . UInt_t ; numberClasses, . UInt_t ; numberTargets . ). virtual . Implements TMVA::PyMethodBase.; Definition at line 112 of file MethodPyGTB.cxx. ◆ Init(). void MethodPyGTB::Init ; (; void ; ). virtual . Implements TMVA::PyMethodBase.; Definition at line 314 of file MethodPyGTB.cxx. ◆ ProcessOptions(). void MethodPyGTB::ProcessOptions ; (; ). virtual . Implements TMVA::PyMethodBase.; Definition at line 198 of file MethodPyGTB.cxx. ◆ ReadModelFromFile(). void MethodPyGTB::ReadModelFromFile ; (; ). virtual . Implements TMVA::PyMethodBase.; Definition at line 514 of file MethodPyGTB.cxx. ◆ ReadWeightsFromStream() [1/3]. virtual void TMVA::MethodPyGTB::ReadWeightsFromStream ; (; std::istream & ; ). inlinevirtual . Implements TMVA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPyGTB.html:32197,log,logProgress,32197,doc/master/classTMVA_1_1MethodPyGTB.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPyGTB.html,1,['log'],['logProgress']
Testability,"const RooArgSet& o); voidRooStats::ToyMCSampler::SetMaxToys(Double_t t); virtual voidRooStats::ToyMCSampler::SetNEventsPerToy(const Int_t nevents); virtual voidRooStats::ToyMCSampler::SetNToys(const Int_t ntoy); virtual voidRooStats::ToyMCSampler::SetNuisanceParameters(const RooArgSet& np); virtual voidRooStats::ToyMCSampler::SetObservables(const RooArgSet& o); virtual voidSetParametersForTestStat(const RooArgSet& nullpoi); virtual voidSetPdf(RooAbsPdf& pdf); virtual voidRooStats::ToyMCSampler::SetPriorNuisance(RooAbsPdf* pdf); voidRooStats::ToyMCSampler::SetProofConfig(RooStats::ProofConfig* pc = __null); voidRooStats::ToyMCSampler::SetProtoData(const RooDataSet* d); voidSetReuseNLL(bool r = true); virtual voidRooStats::ToyMCSampler::SetSamplingDistName(const char* name); virtual voidRooStats::ToyMCSampler::SetTestSize(Double_t size); virtual voidRooStats::ToyMCSampler::SetTestStatistic(RooStats::TestStatistic* t); virtual voidRooStats::ToyMCSampler::SetTestStatistic(RooStats::TestStatistic* testStatistic, unsigned int i); voidRooStats::ToyMCSampler::SetToysBothTails(Double_t toys, Double_t low_threshold, Double_t high_threshold); voidRooStats::ToyMCSampler::SetToysLeftTail(Double_t toys, Double_t threshold); voidRooStats::ToyMCSampler::SetToysRightTail(Double_t toys, Double_t threshold); voidRooStats::ToyMCSampler::SetUseMultiGen(Bool_t flag); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); RooStats::TestStatSamplerRooStats::TestStatSampler::TestStatSampler(); RooStats::TestStatSamplerRooStats::TestStatSampler::TestStatSampler(const RooStats::TestStatSampler&); RooStats::ToyMCImportanceSamplerToyMCImportanceSampler(); RooStats::ToyMCImportanceSamplerToyMCImportanceSampler(const RooStats::ToyMCImportanceSampler&); RooStats::ToyMCImportanceSamplerToyMCImportanceSampler(RooStats::TestStatistic& ts, Int_t ntoys); RooStats::ToyMCSamplerRooStats::ToyMCSampler::ToyMCSampler",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ToyMCImportanceSampler.html:4631,Test,TestStatistic,4631,root/html602/RooStats__ToyMCImportanceSampler.html,https://root.cern,https://root.cern/root/html602/RooStats__ToyMCImportanceSampler.html,2,['Test'],['TestStatistic']
Testability,"const RooArgSet& poi, RooStats::DetailedOutputAggregator& detOutAgg). SamplingDistribution* GetSamplingDistribution(RooArgSet& paramPoint). RooDataSet* GetSamplingDistributions(RooArgSet& paramPoint); Use for serial and parallel runs. RooDataSet* GetSamplingDistributionsSingleWorker(RooArgSet& paramPoint); This is the main function for serial runs. It is called automatically; from inside GetSamplingDistribution when no ProofConfig is given.; You should not call this function yourself. This function should; be used by ToyMCStudy on the workers (ie. when you explicitly want; a serial run although ProofConfig is present). void GenerateGlobalObservables(RooAbsPdf& pdf) const. RooAbsData* GenerateToyData(RooArgSet& paramPoint, double& weight, RooAbsPdf& pdf) const; This method generates a toy data set for the given parameter point taking; global observables into account.; The values of the generated global observables remain in the pdf's variables.; They have to have those values for the subsequent evaluation of the; test statistics. RooAbsData* Generate(RooAbsPdf& pdf, RooArgSet& observables, const RooDataSet* protoData = NULL, int forceEvents = 0) const; This is the generate function to use in the context of the ToyMCSampler; instead of the standard RooAbsPdf::generate(...).; It takes into account whether the number of events is given explicitly; or whether it should use the expected number of events. It also takes; into account the option to generate a binned data set (ie RooDataHist). SamplingDistribution* AppendSamplingDistribution(RooArgSet& allParameters, RooStats::SamplingDistribution* last, Int_t additionalMC). void ClearCache(); clear the cache obtained from the pdf used for speeding the toy and global observables generation; needs to be called every time the model pdf (fPdf) changes. ToyMCSampler(). void SetUseMultiGen(Bool_t flag); { fUseMultiGen = flag ; }. void AddTestStatistic(RooStats::TestStatistic* t = NULL); The pdf can be NULL in which case the density",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__ToyMCSampler.html:6937,test,test,6937,root/html534/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html534/RooStats__ToyMCSampler.html,1,['test'],['test']
Testability,"const RooArgSet& poi, RooStats::DetailedOutputAggregator& detOutAgg). SamplingDistribution* GetSamplingDistribution(RooArgSet& paramPoint). RooDataSet* GetSamplingDistributions(RooArgSet& paramPoint); Use for serial and parallel runs. RooDataSet* GetSamplingDistributionsSingleWorker(RooArgSet& paramPoint); This is the main function for serial runs. It is called automatically; from inside GetSamplingDistribution when no ProofConfig is given.; You should not call this function yourself. This function should; be used by ToyMCStudy on the workers (ie. when you explicitly want; a serial run although ProofConfig is present). void GenerateGlobalObservables(RooAbsPdf& pdf) const. RooAbsData* GenerateToyData(RooArgSet& paramPoint, double& weight, RooAbsPdf& pdf) const; This method generates a toy data set for the given parameter point taking; global observables into account.; The values of the generated global observables remain in the pdf's variables.; They have to have those values for the subsequent evaluation of the; test statistics. RooAbsData* Generate(RooAbsPdf& pdf, RooArgSet& observables, const RooDataSet* protoData = __null, int forceEvents = 0) const; This is the generate function to use in the context of the ToyMCSampler; instead of the standard RooAbsPdf::generate(...).; It takes into account whether the number of events is given explicitly; or whether it should use the expected number of events. It also takes; into account the option to generate a binned data set (ie RooDataHist). SamplingDistribution* AppendSamplingDistribution(RooArgSet& allParameters, RooStats::SamplingDistribution* last, Int_t additionalMC). void ClearCache(); clear the cache obtained from the pdf used for speeding the toy and global observables generation; needs to be called every time the model pdf (fPdf) changes. ToyMCSampler(). void SetUseMultiGen(Bool_t flag); { fUseMultiGen = flag ; }. void AddTestStatistic(RooStats::TestStatistic* t = __null); The pdf can be NULL in which case the den",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__ToyMCSampler.html:7102,test,test,7102,root/html602/RooStats__ToyMCSampler.html,https://root.cern,https://root.cern/root/html602/RooStats__ToyMCSampler.html,2,['test'],['test']
Testability,"const RooRealVar& param, Double_t lo = -3.0, Double_t hi = 3.0, Int_t nbins = 25, Bool_t fitGauss = kFALSE); RooPlot*plotPull(const RooRealVar& param, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidcalcPulls(); virtual voidTObject::DoError(in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMCStudy.html:9250,Test,TestBit,9250,root/html534/RooMCStudy.html,https://root.cern,https://root.cern/root/html534/RooMCStudy.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const TH1D*fBdatmeasured distribution (data); const TH1D*fBinireconstructed distribution (MC); TH1D*fDHist! Distribution of d (for checking regularization); Int_tfDdim! Derivative for curvature matrix; Int_tfKReg! Regularisation parameter; Bool_tfMatToyMode! Internal switch for evaluation of statistical uncertainties from response matrix; Int_tfNdim! Truth and reconstructed dimensions; Bool_tfNormalize! Normalize unfolded spectrum to 1; TH1D*fSVHist! Distribution of singular values; Bool_tfToyMode! Internal switch for covariance matrix propagation; TH1D*fToyhisto! Toy MC histogram; TH2D*fToymat! Toy MC detector response matrix; const TH1D*fXinitruth distribution (MC); TH2D*fXinv! Computed inverse of covariance matrix; TH2D*fXtau! Computed regularized covariance matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSVDUnfold(const TH1D* bdat, const TH1D* bini, const TH1D* xini, const TH2D* Adet); Alternative constructor; User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. TSVDUnfold(const TH1D* bdat, TH2D* Bcov, const TH1D* bini, const TH1D* xini, const TH2D* Adet); Default constructor; Initialisation of TSVDUnfold; User provides data and MC test spectra, as well as detector response matrix and the covariance matrix of the measured distribution. TSVDUnfold(const TSVDUnfold& other); Copy constructor. ~TSVDUnfold(); Destructor. TH1D* Unfold(Int_t kreg); Perform the unfolding with regularisation parameter kreg. TH2D* GetUnfoldCovMatrix(const TH2D* cov, Int_t ntoys, Int_t seed = 1); Determine for given input error matrix covariance matrix of unfolded; spectrum from toy simulation given the passed covariance matrix on measured spectrum; ""cov"" - covariance matrix on the measured spectrum, to be propagated; ""ntoys"" - number of pseudo experiments used for the propagation; ""seed"" - seed for pseudo experiments;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSVDUnfold.html:7573,test,test,7573,root/html530/TSVDUnfold.html,https://root.cern,https://root.cern/root/html530/TSVDUnfold.html,3,['test'],['test']
Testability,"const TMacro& ); Copy constructor. ~TMacro(); Delete this macro. TMacro& operator=(const TMacro& ); Copy constructor. TObjString * AddLine(const char* text); Add line with text in the list of lines of this macro. Returns 0 in; case of error, otherwise the added TObjString. void Browse(TBrowser* b); When clicking in the browser, the following action is performed; on this macro, depending the content of the variable TMacro.Browse.; TMacro.Browse can be set in the system.rootrc or .rootrc file like; TMacro.Browse : Action; or set via gEnv->SetValue, eg; gEnv->SetValue(""TMacro.Browse"",""Print"");; By default TMacro.Browse=""""; -if TMacro.Browse ="""" the macro is executed; -if TMacro.Browse =""Print"" the macro is printed in stdout; -if TMacro.Browse is of the form ""mymacro.C""; the macro void mymacro.C(TMacro *m) is called where m=this macro; An example of macro.C saving the macro into a file and viewing it; with emacs is shown below:; void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }. TMD5 * Checksum(); Returns checksum of the current content. The returned TMD5 object must; be deleted by the user. Returns 0 in case of error. Long_t Exec(const char* params = 0, Int_t* error = 0); Execute this macro with params, if params is 0, default parameters; (set via SetParams) are used.; error is set to an TInterpreter::EErrorCode by TApplication::ProcessLine().; Returns the result of the macro (return value or value of the last; expression), cast to a Long_t. TObjString * GetLineWith(const char* text) const; Search the first line containing text. void Paint(Option_t* option = """"); Execute this macro (called by TPad::Paint). void Print(Option_t* option = """") const; Print contents of this macro. Int_t ReadFile(const char* filename); Read lines in filename in this macro. void SaveSource(const char* filename); Save macro source in filename. void SaveSource(FILE* fp); Save macro source in file pointer fp. void SavePrimitive(ostream& out, Option_t* option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMacro.html:8465,log,log,8465,root/html534/TMacro.html,https://root.cern,https://root.cern/root/html534/TMacro.html,1,['log'],['log']
Testability,"const TMatrixDSym& a); static voidTObject::SetObjectStat(Bool_t stat); Double_tTDecompBase::SetTol(Double_t tol); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Bool_tSolve(TVectorD& b); virtual Bool_tSolve(TMatrixDColumn& b); virtual TVectorDSolve(const TVectorD& b, Bool_t& ok); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TDecompChol(); TDecompChol(Int_t nrows); TDecompChol(const TDecompChol& another); TDecompChol(Int_t row_lwb, Int_t row_upb); TDecompChol(const TMatrixDSym& a, Double_t tol = 0.); TDecompChol(const TMatrixD& a, Double_t tol = 0.); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Bool_tTransSolve(TVectorD& b); virtual Bool_tTransSolve(TMatrixDColumn& b); virtual TVectorDTransSolve(const TVectorD& b, Bool_t& ok); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static voidTDecompBase::DiagProd(const TVectorD& diag, Double_t tol, Double_t& d1, Double_t& d2); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual const TMatrixDBase&GetDecompMatrix() const; Int_tTDecompBase::Hager(Double_t& est, Int_t iter = 5); voidTObject::MakeZombie(); voidTDecompBase::ResetStatus(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDecompChol.html:5593,Test,TestBit,5593,root/html602/TDecompChol.html,https://root.cern,https://root.cern/root/html602/TDecompChol.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const TPoint& p); virtual voidTBox::SetBBoxCenterX(const Int_t x); virtual voidTBox::SetBBoxCenterY(const Int_t y); virtual voidTBox::SetBBoxX1(const Int_t x); virtual voidTBox::SetBBoxX2(const Int_t x); virtual voidTBox::SetBBoxY1(const Int_t y); virtual voidTBox::SetBBoxY2(const Int_t y); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTWbox::SetBorderMode(Short_t bordermode)MENU ; virtual voidTWbox::SetBorderSize(Short_t bordersize)MENU ; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineColorAlpha(Color_t lcolor, Float_t lalpha); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTBox::SetToolTipText(const char* text, Long_t delayms = 1000); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTBox::SetX1(Double_t x1); virtual voidTBox::SetX2(Double_t x2); virtual voidTBox::SetY1(Double_t y1); virtual voidTBox::SetY2(Double_t y2); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUseCurrentStyle()MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFrame.html:7369,Test,TestBit,7369,root/html534/TFrame.html,https://root.cern,https://root.cern/root/html534/TFrame.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const TSelectorEntries&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Bool_tProcess(Long64_t entry); virtual Bool_tTSelector::ProcessCut(Long64_t); virtual voidTSelector::ProcessFill(Long64_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTSelector::ResetAbort(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTSelector::SetInputList(TList* input); virtual voidSetObject(TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOption(const char* option); virtual voidSetSelection(const char* selection); virtual voidTSelector::SetStatus(Long64_t status); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidSlaveBegin(TTree* tree); virtual voidSlaveTerminate(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTerminate(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TSelectorEntries(const char* selection); TSelectorEntries(const TSelectorEntries&); TSelectorEntries(TTree* tree = 0, const char* selection = 0); virtual voidTObject::UseCurrentStyle(); virtual Int_tVersion() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorEntries.html:5361,Test,TestBit,5361,root/html602/TSelectorEntries.html,https://root.cern,https://root.cern/root/html602/TSelectorEntries.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const TString &);  User constructor, to be employed by the user. ;  ; virtual ~PDEFoam ();  Default destructor. ;  ; void AddVariableName (const char *s);  ; void AddVariableName (TObjString *s);  ; void CheckAll (Int_t);  User utility, miscellaneous and debug. ;  ; void Create ();  Basic initialization of FOAM invoked by the user. ;  ; void DeleteBinarySearchTree ();  Delete the foam's density estimator, which contains the binary search tree. ;  ; TH1D * Draw1Dim (ECellValue cell_value, Int_t nbin, PDEFoamKernelBase *kernel=nullptr);  Draws 1-dimensional foam (= histogram) ;  ; void FillBinarySearchTree (const Event *ev);  Insert event to internal foam's density estimator PDEFoamDensityBase. ;  ; virtual void Finalize ();  ; TString GetFoamName () const;  ; UInt_t GetMaxDepth () const;  ; UInt_t GetNActiveCells () const;  ; UInt_t GetNCells () const;  ; UInt_t GetNInActiveCells () const;  ; UInt_t GetNmin ();  ; PDEFoamCell * GetRootCell () const;  ; Int_t GetTotDim () const;  ; TObjString * GetVariableName (Int_t idx);  ; Double_t GetXmax (Int_t idim) const;  ; Double_t GetXmin (Int_t idim) const;  ; void Initialize ();  ; MsgLogger & Log () const;  ; void PrintCell (Long_t iCell=0);  Prints geometry of and elements of 'iCell', as well as relations to parent and daughter cells. ;  ; void PrintCells ();  Prints geometry of ALL cells of the FOAM. ;  ; virtual TH2D * Project2 (Int_t idim1, Int_t idim2, ECellValue cell_value=kValue, PDEFoamKernelBase *kernel=nullptr, UInt_t nbin=50);  Project foam variable idim1 and variable idim2 to histogram. ;  ; void ResetCellElements ();  Remove the cell elements from all cells. ;  ; void RootPlot2dim (const TString &filename, TString opt, Bool_t createCanvas=kTRUE, Bool_t colors=kTRUE);  Debugging tool which plots the cells of a 2-dimensional PDEFoam as rectangles in C++ format readable for ROOT. ;  ; void SetDensity (PDEFoamDensityBase *dens);  ; void SetDim (Int_t kDim);  Sets dimension of cubical space. ;  ; void SetEvPerBin (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html:4146,Log,Log,4146,doc/master/classTMVA_1_1PDEFoamMultiTarget.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html,1,['Log'],['Log']
Testability,"const TString &methodTitle) const; 1306{; 1307 if (methodTitle != """") {; 1308 IMethod *method = GetMethod(datasetname, methodTitle);; 1309 if (method); 1310 method->MakeClass();; 1311 else {; 1312 Log() << kWARNING << ""<MakeClass> Could not find classifier \"""" << methodTitle << ""\"" in list"" << Endl;; 1313 }; 1314 } else {; 1315 ; 1316 // no classifier specified, print all help messages; 1317 MVector *methods = fMethodsMap.find(datasetname)->second;; 1318 MVector::const_iterator itrMethod;; 1319 for (itrMethod = methods->begin(); itrMethod != methods->end(); ++itrMethod) {; 1320 MethodBase *method = dynamic_cast<MethodBase *>(*itrMethod);; 1321 if (method == 0); 1322 continue;; 1323 Log() << kINFO << ""Make response class for classifier: "" << method->GetMethodName() << Endl;; 1324 method->MakeClass();; 1325 }; 1326 }; 1327}; 1328 ; 1329////////////////////////////////////////////////////////////////////////////////; 1330/// Print predefined help message of classifier.; 1331/// Iterate over methods and test.; 1332 ; 1333void TMVA::Factory::PrintHelpMessage(const TString &datasetname, const TString &methodTitle) const; 1334{; 1335 if (methodTitle != """") {; 1336 IMethod *method = GetMethod(datasetname, methodTitle);; 1337 if (method); 1338 method->PrintHelpMessage();; 1339 else {; 1340 Log() << kWARNING << ""<PrintHelpMessage> Could not find classifier \"""" << methodTitle << ""\"" in list"" << Endl;; 1341 }; 1342 } else {; 1343 ; 1344 // no classifier specified, print all help messages; 1345 MVector *methods = fMethodsMap.find(datasetname)->second;; 1346 MVector::const_iterator itrMethod;; 1347 for (itrMethod = methods->begin(); itrMethod != methods->end(); ++itrMethod) {; 1348 MethodBase *method = dynamic_cast<MethodBase *>(*itrMethod);; 1349 if (method == 0); 1350 continue;; 1351 Log() << kINFO << ""Print help message for classifier: "" << method->GetMethodName() << Endl;; 1352 method->PrintHelpMessage();; 1353 }; 1354 }; 1355}; 1356 ; 1357////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:54347,test,test,54347,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['test'],['test']
Testability,"const UInt_t nvis = dsi.GetNSpectators();; 743 ; 744 for (size_t i=0; i<nclasses; i++) {; 745 eventCounts[i].varAvLength = new Float_t[nvars];; 746 for (UInt_t ivar=0; ivar<nvars; ivar++); 747 eventCounts[i].varAvLength[ivar] = 0;; 748 }; 749 ; 750 //Bool_t haveArrayVariable = kFALSE;; 751 //Bool_t *varIsArray = new Bool_t[nvars];; 752 ; 753 // If there are NaNs in the tree:; 754 // => warn if used variables/cuts/weights contain nan (no problem if event is cut out); 755 // => fatal if cut value is nan or (event not cut out and nans somewhere); 756 // Count & collect all these warnings/errors and output them at the end.; 757 std::map<TString, int> nanInfWarnings;; 758 std::map<TString, int> nanInfErrors;; 759 ; 760 // if we work with chains we need to remember the current tree if; 761 // the chain jumps to a new tree we have to reset the formulas; 762 for (UInt_t cl=0; cl<nclasses; cl++) {; 763 ; 764 //Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << ""Create training and testing trees -- looping over class \"""" << dsi.GetClassInfo(cl)->GetName() << ""\"" ..."" << Endl;; 765 ; 766 EventStats& classEventCounts = eventCounts[cl];; 767 ; 768 // info output for weights; 769 Log() << kDEBUG //<< Form(""Dataset[%s] : "",dsi.GetName()); 770 << ""\tWeight expression for class \'"" << dsi.GetClassInfo(cl)->GetName() << ""\': \""""; 771 << dsi.GetClassInfo(cl)->GetWeight() << ""\"""" << Endl;; 772 ; 773 // used for chains only; 774 TString currentFileName("""");; 775 ; 776 std::vector<TreeInfo>::const_iterator treeIt(dataInput.begin(dsi.GetClassInfo(cl)->GetName()));; 777 for (;treeIt!=dataInput.end(dsi.GetClassInfo(cl)->GetName()); ++treeIt) {; 778 ; 779 // read first the variables; 780 std::vector<Float_t> vars(nvars);; 781 std::vector<Float_t> tgts(ntgts);; 782 std::vector<Float_t> vis(nvis);; 783 TreeInfo currentInfo = *treeIt;; 784 ; 785 Log() << kINFO << ""Building event vectors for type "" << currentInfo.GetTreeType() << "" "" << currentInfo.GetClassName() << Endl;; 786 ; 787 Event",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:31956,test,testing,31956,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['test'],['testing']
Testability,"const char *filename="""", bool overwrite=false);  Save the tree in a file if fTreeFileName == """". ;  ; void SetAxisHistogramBinning (Int_t n=100);  Set the same histogram axis binning for all axis. ;  ; void SetAxisHistogramHeight (Double_t h=0.5);  Set the same histogram axis height for all axis. ;  ; void SetAxisHistogramLineWidth (Int_t lw=2);  Set the same histogram axis line width for all axis. ;  ; void SetCandleChart (bool can);  Set a candle chart display. ;  ; void SetCurrentEntries (TEntryList *entries);  ; void SetCurrentFirst (Long64_t);  Set the first entry to be displayed. ;  ; void SetCurrentN (Long64_t);  Set the number of entry to be displayed. ;  ; TParallelCoordSelect * SetCurrentSelection (const char *title);  Set the selection being edited. ;  ; void SetCurrentSelection (TParallelCoordSelect *sel);  Set the selection being edited. ;  ; virtual void SetCurveDisplay (bool curve=true);  ; void SetDotsSpacing (Int_t s=0);  Set dots spacing. ;  ; void SetGlobalLogScale (bool);  All axes in log scale. ;  ; void SetGlobalMax (Double_t max);  Force all variables to adopt the same max. ;  ; void SetGlobalMin (Double_t min);  Force all variables to adopt the same min. ;  ; void SetGlobalScale (bool gl);  Constraint all axes to the same scale. ;  ; void SetInitEntries (TEntryList *entries);  ; void SetLineColor (Color_t col);  ; void SetLineWidth (Width_t wid);  ; void SetLiveRangesUpdate (bool);  If true, the pad is updated while the motion of a dragged range. ;  ; void SetNentries (Long64_t n);  ; void SetTree (TTree *tree);  ; void SetVertDisplay (bool vert=true);  Set the vertical or horizontal display. ;  ; void SetWeightCut (Int_t w=0);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnzoomAll ();  Unzoom all variables. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:11137,log,log,11137,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['log'],['log']
Testability,"const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSelectorScalar&operator=(const TSelectorScalar&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTParameter<Long64_t>::Print(Option_t*) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTParameter<Long64_t>::SetMergeMode(char mergemode = '+'); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTParameter<Long64_t>::SetVal(const Long64_t& val); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TSelectorScalar(const TSelectorScalar&); TSelectorScalar(const char* name = """", Long64_t val = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorScalar.html:4881,Test,TestBit,4881,root/html602/TSelectorScalar.html,https://root.cern,https://root.cern/root/html602/TSelectorScalar.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TTreeDrawArgsParser&operator=(const TTreeDrawArgsParser&); virtual voidTObject::Paint(Option_t* option = """"); Bool_tParse(const char* varexp, const char* selection, Option_t* option); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetObjectName(const char* s); static voidTObject::SetObjectStat(Bool_t stat); voidSetOriginal(TObject* o); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TTreeDrawArgsParser(); TTreeDrawArgsParser(const TTreeDrawArgsParser&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeDrawArgsParser.html:5111,Test,TestBit,5111,root/html602/TTreeDrawArgsParser.html,https://root.cern,https://root.cern/root/html602/TTreeDrawArgsParser.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* filename = """", Option_t* option = """") constMENU ; virtual voidTAttFill::SaveFillAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1001); virtual voidTAttLine::SaveLineAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t widdef = 1); virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTEllipse::SetNoEdges(Bool_t noEdges = kTRUE)TOGGLE GETTER ; static voidTObject::SetObjectStat(Bool_t stat); virtual voidTEllipse::SetPhimax(Double_t phi = 360)MENU ; virtual voidTEllipse::SetPhimin(Double_t phi = 0)MENU ; virtual voidTEllipse::SetR1(Double_t r1)MENU ; virtual voidTEllipse::SetR2(Double_t r2)MENU ; virtual voidTEllipse::SetTheta(Double_t theta = 0)MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTEllipse::SetX1(Double_t x1)MENU ; virtual voidTEllipse::SetY1(Double_t y1)MENU ; virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TArc.html:6715,Test,TestBit,6715,root/html528/TArc.html,https://root.cern,https://root.cern/root/html528/TArc.html,12,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Int_tSelect(Int_t interest = kRead, Long_t timeout = -1); virtual Int_tSend(const TMessage& mess); virtual Int_tSend(Int_t kind); virtual Int_tSend(Int_t status, Int_t kind); virtual Int_tSend(const char* mess, Int_t kind = kMESS_STRING); virtual Int_tSendObject(const TObject* obj, Int_t kind = kMESS_OBJECT); virtual Int_tSendRaw(const void* buffer, Int_t length, ESendRecvOptions opt = kDefault); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCompressionAlgorithm(Int_t algorithm = 0); voidSetCompressionLevel(Int_t level = 1); voidSetCompressionSettings(Int_t settings = 1); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual Int_tSetOption(ESockOptions opt, Int_t val); voidSetRemoteProtocol(Int_t rproto); voidSetSecContext(TSecContext* ctx); voidSetService(const char* service); voidSetServType(Int_t st); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidSetUrl(const char* url); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTouch(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSocket.html:7257,Test,TestBit,7257,root/html534/TSocket.html,https://root.cern,https://root.cern/root/html534/TSocket.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSetArrayDim(Int_t dim); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTStreamerElement::SetMaxIndex(Int_t dim, Int_t max); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTStreamerElement::SetNewClass(TClass* cl); virtual voidTStreamerElement::SetNewType(Int_t dtype); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTStreamerElement::SetOffset(Int_t offset); virtual voidTStreamerElement::SetSize(Int_t dsize); virtual voidTStreamerElement::SetStreamer(TMemberStreamer* streamer); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTStreamerElement::SetTObjectOffset(Int_t tobjoffset); virtual voidTStreamerElement::SetType(Int_t dtype); virtual voidTStreamerElement::SetTypeName(const char* name); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TStreamerObjectPointer(); TStreamerObjectPointer(const char* name, const char* title, Int_t offset, const char* typeName); virtual voidTStreamerElement::Update(const TClass* oldClass, TClass* newClass); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerObjectPointer.html:6593,Test,TestBit,6593,root/html602/TStreamerObjectPointer.html,https://root.cern,https://root.cern/root/html602/TStreamerObjectPointer.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTStreamerElement::SetArrayDim(Int_t dim); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTStreamerElement::SetMaxIndex(Int_t dim, Int_t max); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTStreamerElement::SetNewClass(TClass* cl); virtual voidTStreamerElement::SetNewType(Int_t dtype); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTStreamerElement::SetOffset(Int_t offset); voidSetReadFunc(ROOT::TSchemaRule::ReadFuncPtr_t val); voidSetReadRawFunc(ROOT::TSchemaRule::ReadRawFuncPtr_t val); virtual voidTStreamerElement::SetSize(Int_t dsize); virtual voidTStreamerElement::SetStreamer(TMemberStreamer* streamer); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTStreamerElement::SetTObjectOffset(Int_t tobjoffset); virtual voidTStreamerElement::SetType(Int_t dtype); virtual voidTStreamerElement::SetTypeName(const char* name); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTStreamerElement::Update(const TClass* oldClass, TClass* newClass); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStreamerArtificial.html:6881,Test,TestBit,6881,root/html534/TStreamerArtificial.html,https://root.cern,https://root.cern/root/html534/TStreamerArtificial.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* label, Bool_t printError = kTRUE); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; TIterator*RooAbsCategory::typeIterator() const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual Double_tvolume(const char* rangeName) const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidwriteToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsCategoryLValue.html:15800,Test,TestBit,15800,root/html528/RooAbsCategoryLValue.html,https://root.cern,https://root.cern/root/html528/RooAbsCategoryLValue.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFree&operator=(const TFree&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidReadBuffer(char*& buffer); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetFirst(Long64_t first); voidSetLast(Long64_t last); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); Int_tSizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFree.html:5222,Test,TestBit,5222,root/html534/TFree.html,https://root.cern,https://root.cern/root/html534/TFree.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetBranchAddresses(); virtual voidSetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TEveVSD(const char* name = ""TEveVSD"", const char* title = """"); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTrees().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveVSD.html:4532,Test,TestBit,4532,root/html602/TEveVSD.html,https://root.cern,https://root.cern/root/html602/TEveVSD.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Long_tProperty() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBaseClass.html:4863,Test,TestBit,4863,root/html530/TBaseClass.html,https://root.cern,https://root.cern/root/html530/TBaseClass.html,8,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveTrack::WriteVizParams(ostream& out, const TString& var). protected:. voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTEvePointSet::AssertIntIdsSize(); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); voidTPointSet3D::CopyIds(const TPointSet3D& t); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(); virtual voidTEveElement::PreDeleteElement(); virtual voidTEveElement::RemoveElementsInternal(); voidTEveProjected::SetDepthCommon(Float_t d, TEveElement* el, Float_t* bbox); virtual voidSetDepthLocal(Float_t d); static const char*TEveElement::ToString(Bool_t b). private:. TEveTrackProjected(const TEveTrackProjected&); voidGetBreakPoint(Int_t N, Bool_t back, Float_t& x, Float_t& y, Float_t& z); Int_tGetBreakPointIdx(Int_t start); TEveTrackProjected&operator=(const TEveTrackProjected&). Data Members; public:. enum TEveTrack::EBreakProjectedTracks_e { kBPTDefault; kBPTAlways; kBPTNever; };; enum TEveElement::ECompoundSelect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTrackProjected.html:24206,Assert,AssertIntIdsSize,24206,root/html528/TEveTrackProjected.html,https://root.cern,https://root.cern/root/html528/TEveTrackProjected.html,1,['Assert'],['AssertIntIdsSize']
Testability,"const char* name = 0); HybridResult default constructor (with name ). HybridResult(const char* name, const vector<double>& testStat_sb_vals, const vector<double>& testStat_b_vals, bool sumLargerValues = true); HybridResult constructor (with name, title and vectors of S+B and B values). ~HybridResult(); HybridResult destructor. void SetDataTestStatistics(double testStat_data_val); set the value of the test statistics on data. double NullPValue() const; return 1-CL_b : the B p-value. double AlternatePValue() const; return CL_s+b : the S+B p-value. Double_t CLbError() const; Returns an estimate of the error on CLb assuming a binomial error on; CLb:. Double_t CLsplusbError() const; Returns an estimate of the error on CLsplusb assuming a binomial; error on CLsplusb:. Double_t CLsError() const; Returns an estimate of the error on CLs through combination of the; errors on CLb and CLsplusb:. void Add(RooStats::HybridResult* other); add additional toy-MC experiments to the current results; use the data test statistics of the added object if none is already present (otherwise, ignore the new one). HybridPlot* GetPlot(const char* name, const char* title, int n_bins); prepare a plot showing a result and return a pointer to a HybridPlot object; the needed arguments are: an object name, a title and the number of bins in the plot. void PrintMore(const char* options); Print out some information about the results. explicit HybridResult(const char* name = 0); Default constructor. std::vector<double> GetTestStat_sb(); Get test statistics values for the sb model. {return fTestStat_sb;}. std::vector<double> GetTestStat_b(); Get test statistics values for the b model. {return fTestStat_b;}. double GetTestStat_data(); Get test statistics value for data. { return fTestStat_data;}. » Last changed: root/roostats:$Id$ » Last generated: 2015-03-10 17:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HybridResult.html:11657,test,test,11657,root/html534/RooStats__HybridResult.html,https://root.cern,https://root.cern/root/html534/RooStats__HybridResult.html,1,['test'],['test']
Testability,"const char* name = 0); HybridResult default constructor (with name ). HybridResult(const char* name, const vector<double>& testStat_sb_vals, const vector<double>& testStat_b_vals, bool sumLargerValues = true); HybridResult constructor (with name, title and vectors of S+B and B values). ~HybridResult(); HybridResult destructor. void SetDataTestStatistics(double testStat_data_val); set the value of the test statistics on data. double NullPValue() const; return 1-CL_b : the B p-value. double AlternatePValue() const; return CL_s+b : the S+B p-value. Double_t CLbError() const; Returns an estimate of the error on CLb assuming a binomial error on; CLb:. Double_t CLsplusbError() const; Returns an estimate of the error on CLsplusb assuming a binomial; error on CLsplusb:. Double_t CLsError() const; Returns an estimate of the error on CLs through combination of the; errors on CLb and CLsplusb:. void Add(RooStats::HybridResult* other); add additional toy-MC experiments to the current results; use the data test statistics of the added object if none is already present (otherwise, ignore the new one). HybridPlot* GetPlot(const char* name, const char* title, int n_bins); prepare a plot showing a result and return a pointer to a HybridPlot object; the needed arguments are: an object name, a title and the number of bins in the plot. void PrintMore(const char* options); Print out some information about the results. explicit HybridResult(const char* name = 0); Default constructor. std::vector<double> GetTestStat_sb(); Get test statistics values for the sb model. {return fTestStat_sb;}. std::vector<double> GetTestStat_b(); Get test statistics values for the b model. {return fTestStat_b;}. double GetTestStat_data(); Get test statistics value for data. { return fTestStat_data;}. » Last changed: root/roostats:$Id$ » Last generated: 2015-06-02 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__HybridResult.html:12088,test,test,12088,root/html604/RooStats__HybridResult.html,https://root.cern,https://root.cern/root/html604/RooStats__HybridResult.html,1,['test'],['test']
Testability,"const char* name = 0); HybridResult default constructor (with name ). HybridResult(const char* name, const vector<double>& testStat_sb_vals, const vector<double>& testStat_b_vals, bool sumLargerValues = true); HybridResult constructor (with name, title and vectors of S+B and B values). ~HybridResult(); HybridResult destructor. void SetDataTestStatistics(double testStat_data_val); set the value of the test statistics on data. double NullPValue() const; return 1-CL_b : the B p-value. double AlternatePValue() const; return CL_s+b : the S+B p-value. Double_t CLbError() const; Returns an estimate of the error on CLb assuming a binomial error on; CLb:. Double_t CLsplusbError() const; Returns an estimate of the error on CLsplusb assuming a binomial; error on CLsplusb:. Double_t CLsError() const; Returns an estimate of the error on CLs through combination of the; errors on CLb and CLsplusb:. void Add(RooStats::HybridResult* other); add additional toy-MC experiments to the current results; use the data test statistics of the added object if none is already present (otherwise, ignore the new one). HybridPlot* GetPlot(const char* name, const char* title, int n_bins); prepare a plot showing a result and return a pointer to a HybridPlot object; the needed arguments are: an object name, a title and the number of bins in the plot. void PrintMore(const char* options); Print out some information about the results. explicit HybridResult(const char* name = 0); Default constructor. std::vector<double> GetTestStat_sb(); Get test statistics values for the sb model. {return fTestStat_sb;}. std::vector<double> GetTestStat_b(); Get test statistics values for the b model. {return fTestStat_b;}. double GetTestStat_data(); Get test statistics value for data. { return fTestStat_data;}. » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HybridResult.html:12088,test,test,12088,root/html602/RooStats__HybridResult.html,https://root.cern,https://root.cern/root/html602/RooStats__HybridResult.html,1,['test'],['test']
Testability,"const char* name = 0); HybridResult default constructor (with name ). HybridResult(const char* name, const vector<double>& testStat_sb_vals, const vector<double>& testStat_b_vals, bool sumLargerValues = true); HybridResult constructor (with name, title and vectors of S+B and B values). ~HybridResult(); HybridResult destructor. void SetDataTestStatistics(double testStat_data_val); set the value of the test statistics on data. double NullPValue() const; return 1-CL_b : the B p-value. double AlternatePValue() const; return CL_s+b : the S+B p-value. Double_t CLbError() const; Returns an estimate of the error on CLb assuming a binomial error on; CLb:. Double_t CLsplusbError() const; Returns an estimate of the error on CLsplusb assuming a binomial; error on CLsplusb:. Double_t CLsError() const; Returns an estimate of the error on CLs through combination of the; errors on CLb and CLsplusb:. void Add(RooStats::HybridResult* other); add additional toy-MC experiments to the current results; use the data test statistics of the added object if none is already present (otherwise, ignore the new one). HybridPlot* GetPlot(const char* name, const char* title, int n_bins); prepare a plot showing a result and return a pointer to a HybridPlot object; the needed arguments are: an object name, a title and the number of bins in the plot. void PrintMore(const char* options); Print out some information about the results. explicit HybridResult(const char* name = 0); Default constructor. std::vector<double> GetTestStat_sb(); Get test statistics values for the sb model. {return fTestStat_sb;}. std::vector<double> GetTestStat_b(); Get test statistics values for the b model. {return fTestStat_b;}. double GetTestStat_data(); Get test statistics value for data. { return fTestStat_data;}. » Last changed: root/roostats:$Id: HybridResult.h 34109 2010-06-24 15:00:16Z moneta $ » Last generated: 2010-09-27 22:32; This page has been automatically generated. For comments or suggestions regarding the docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__HybridResult.html:10128,test,test,10128,root/html528/RooStats__HybridResult.html,https://root.cern,https://root.cern/root/html528/RooStats__HybridResult.html,1,['test'],['test']
Testability,"const char* name = 0); HybridResult default constructor (with name ). HybridResult(const char* name, const vector<double>& testStat_sb_vals, const vector<double>& testStat_b_vals, bool sumLargerValues = true); HybridResult constructor (with name, title and vectors of S+B and B values). ~HybridResult(); HybridResult destructor. void SetDataTestStatistics(double testStat_data_val); set the value of the test statistics on data. double NullPValue() const; return 1-CL_b : the B p-value. double AlternatePValue() const; return CL_s+b : the S+B p-value. Double_t CLbError() const; Returns an estimate of the error on CLb assuming a binomial error on; CLb:. Double_t CLsplusbError() const; Returns an estimate of the error on CLsplusb assuming a binomial; error on CLsplusb:. Double_t CLsError() const; Returns an estimate of the error on CLs through combination of the; errors on CLb and CLsplusb:. void Add(RooStats::HybridResult* other); add additional toy-MC experiments to the current results; use the data test statistics of the added object if none is already present (otherwise, ignore the new one). HybridPlot* GetPlot(const char* name, const char* title, int n_bins); prepare a plot showing a result and return a pointer to a HybridPlot object; the needed arguments are: an object name, a title and the number of bins in the plot. void PrintMore(const char* options); Print out some information about the results. explicit HybridResult(const char* name = 0); Default constructor. std::vector<double> GetTestStat_sb(); Get test statistics values for the sb model. {return fTestStat_sb;}. std::vector<double> GetTestStat_b(); Get test statistics values for the b model. {return fTestStat_b;}. double GetTestStat_data(); Get test statistics value for data. { return fTestStat_data;}. » Last changed: root/roostats:$Id: HybridResult.h 39391 2011-05-26 09:51:59Z moneta $ » Last generated: 2011-07-04 15:24; This page has been automatically generated. For comments or suggestions regarding the docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HybridResult.html:10703,test,test,10703,root/html530/RooStats__HybridResult.html,https://root.cern,https://root.cern/root/html530/RooStats__HybridResult.html,1,['test'],['test']
Testability,"const char* name = 0); HybridResult default constructor (with name ). HybridResult(const char* name, const vector<double>& testStat_sb_vals, const vector<double>& testStat_b_vals, bool sumLargerValues = true); HybridResult constructor (with name, title and vectors of S+B and B values). ~HybridResult(); HybridResult destructor. void SetDataTestStatistics(double testStat_data_val); set the value of the test statistics on data. double NullPValue() const; return 1-CL_b : the B p-value. double AlternatePValue() const; return CL_s+b : the S+B p-value. Double_t CLbError() const; Returns an estimate of the error on CLb assuming a binomial error on; CLb:. Double_t CLsplusbError() const; Returns an estimate of the error on CLsplusb assuming a binomial; error on CLsplusb:. Double_t CLsError() const; Returns an estimate of the error on CLs through combination of the; errors on CLb and CLsplusb:. void Add(RooStats::HybridResult* other); add additional toy-MC experiments to the current results; use the data test statistics of the added object if none is already present (otherwise, ignore the new one). HybridPlot* GetPlot(const char* name, const char* title, int n_bins); prepare a plot showing a result and return a pointer to a HybridPlot object; the needed arguments are: an object name, a title and the number of bins in the plot. void PrintMore(const char* options); Print out some information about the results. explicit HybridResult(const char* name = 0); Default constructor. std::vector<double> GetTestStat_sb(); Get test statistics values for the sb model. {return fTestStat_sb;}. std::vector<double> GetTestStat_b(); Get test statistics values for the b model. {return fTestStat_b;}. double GetTestStat_data(); Get test statistics value for data. { return fTestStat_data;}. » Last changed: root/roostats:$Id: HybridResult.h 39391 2011-05-26 09:51:59Z moneta $ » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HybridResult.html:10703,test,test,10703,root/html532/RooStats__HybridResult.html,https://root.cern,https://root.cern/root/html532/RooStats__HybridResult.html,1,['test'],['test']
Testability,"const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual Double_tCalcNLL(Double_t xL); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual Bool_tShouldTakeStep(Double_t d). Data Members; public:. enum FunctionSign { kNegative; kPositive; kSignUnset; };; enum FunctionType { kRegular; kLog; kTypeUnset; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooArgSetfChainParamsRooRealVars that are stored in the chain; RooAbsReal*fFunctionfunction that will generate likelihood values; Int_tfNumBurnInStepsnumber of iterations to discard as burn-in, starting from the first; Int_tfNumItersnumber of iterations to run metropolis algorithm; RooArgSetfParametersRooRealVars that define all parameter space; RooStats::ProposalFunction*fPropFuncProposal function for MCMC integration; RooStats::MetropolisHastings::FunctionSignfSignwhether the likelihood is negative (like NLL) or positive; RooStats::MetropolisHastings::FunctionTypefTypewhether the likelihood is on a regular, log, (or other) scale. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MetropolisHastings(); default constructor. MetropolisHastings(RooAbsReal& function, const RooArgSet& paramsOfInterest, RooStats::ProposalFunction& proposalFunction, Int_t numIters). MarkovChain* ConstructChain(). Bool_t ShouldTakeStep(Double_t d). Double_t CalcNLL(Double_t xL). MetropolisHastings(); default constructor. virtual ~MetropolisHastings(); {}. void SetChainParameters(const RooArgSet& set); specify the parameters to store in the chain; if not specified all of them will be stored. { fChainParams.removeAll(); fChainParams.add(set); RemoveConstantParameters(&fChainParams); }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__MetropolisHastings.html:8227,log,log,8227,root/html532/RooStats__MetropolisHastings.html,https://root.cern,https://root.cern/root/html532/RooStats__MetropolisHastings.html,2,['log'],['log']
Testability,"const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. boolDoCheckInputs() const; voidRunToys(vector<double>& bVals, vector<double>& sbVals, unsigned int nToys, bool usePriors) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooAbsPdf*fBModelThe pdf of the background model; RooAbsData*fDatapointer to the data sets ; boolfGenerateBinnedFlag to control binned generation; unsigned intfNToysnumber of Toys MC; const RooArgSet*fNuisanceParametersCollection of the nuisance parameters in the model; RooArgList*fObservablesCollection of the observables of the model; RooAbsPdf*fPriorPdfPrior PDF of the nuisance parameters; RooAbsPdf*fSbModelThe pdf of the signal+background model; unsigned intfTestStatisticsIdxIndex of the test statistics to use; boolfUsePriorPdfuse a prior for nuisance parameters . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HybridCalculator(const char *name); constructor with name and title; set default parameters. HybridCalculator( RooAbsPdf& sbModel, RooAbsPdf& bModel, RooArgList& observables, const RooArgSet* nuisance_parameters, RooAbsPdf* priorPdf ,				 bool GenerateBinned, int testStatistics, int numToys); HybridCalculator constructor without specifying a data set; the user need to specify the models in the S+B case and B-only case,; the list of observables of the model(s) (for MC-generation), the list of parameters; that are marginalised and the prior distribution of those parameters. HybridCalculator( RooAbsData & data, RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__HybridCalculator.html:10149,test,test,10149,root/html526/RooStats__HybridCalculator.html,https://root.cern,https://root.cern/root/html526/RooStats__HybridCalculator.html,1,['test'],['test']
Testability,"const char* name, Bool_t value) const; RooAbsCollection*RooAbsCollection::selectByName(const char* nameList, Bool_t verbose = kFALSE) const; RooAbsCollection*RooAbsCollection::selectCommon(const RooAbsCollection& refColl) const; voidRooAbsCollection::setAttribAll(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); Bool_tsetCatIndex(const char* name, Int_t newVal = 0, Bool_t verbose = kFALSE); Bool_tsetCatLabel(const char* name, const char* newVal = """", Bool_t verbose = kFALSE); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsCollection::setHashTableSize(Int_t i); voidRooAbsCollection::setName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); Bool_tsetRealValue(const char* name, Double_t newVal = 0, Bool_t verbose = kFALSE); Bool_tsetStringValue(const char* name, const char* newVal = """", Bool_t verbose = kFALSE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); RooAbsCollection*RooAbsCollection::snapshot(Bool_t deepCopy = kTRUE) const; Bool_tRooAbsCollection::snapshot(RooAbsCollection& output, Bool_t deepCopy = kTRUE) const; voidRooAbsCollection::sort(Bool_t ascend = kTRUE); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; voidRooAbsCollection::takeOwnership(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidwriteToFile(const char* fileName) const; virtual voidwriteToStream(ostream& os, Bool_t compact, const char* section = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooArgSet.html:12320,Test,TestBit,12320,root/html534/RooArgSet.html,https://root.cern,https://root.cern/root/html534/RooArgSet.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* name1 = ""p1"", const char* name2 = ""p2"", const char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10"")MENU ; virtual voidSetRange(Double_t xmin, Double_t xmax); virtual voidSetRange(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax); virtual voidSetRange(Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax)MENU ; virtual voidTF1::SetSavedPoint(Int_t point, Double_t value); virtual voidTF1::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TF3(); TF3(const TF3& f3); TF3(const char* name, const char* formula, Double_t xmin = 0, Double_t xmax = 1, Double_t ymin = 0, Double_t ymax = 1, Double_t zmin = 0, Double_t zmax = 1); TF3(const char* name, Double_t(*)(Double_t*,Double_t*) fcn, Double_t xmin = 0, Double_t xmax = 1, Double_t ymin = 0, Double_t ymax = 1, Double_t zmin = 0, Double_t zmax = 1, Int_t npar = 0, Int_t ndim = 3); TF3(const char* name, Double_t(*)(const Double_t*,const Double_t*) fcn, Double_t xmin = 0, Double_t xmax = 1, Double_t ymin = 0, Double_t ymax = 1, Double_t zmin = 0, Double_t zmax = 1, Int_t npar = 0, Int_t ndim = 3); TF3(const char* name, ROOT::Math::ParamFunctor f, Double_t xmin = 0, Double_t xmax = 1, Double_t ymin = 0, Double_t ymax = 1, Double_t zmin = 0, Double_t zmax = 1, Int_t npar = 0, Int_t ndim = 3); virtual voidTF1::Update(); virtual voidTObject::UseCurrentStyle(); virtual Double_tTF1::Variance(Double_t a, Double_t b, const Double_t* params = 0, Double_t epsilon = 9.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TF3.html:17354,Test,TestBits,17354,root/html604/TF3.html,https://root.cern,https://root.cern/root/html604/TF3.html,1,['Test'],['TestBits']
Testability,"const char* opname, Long64_t current, Long64_t size, TStopwatch* watch = 0, Bool_t last = kFALSE, Bool_t refresh = kFALSE). void Paint(Option_t* option = """"). void PaintNode(TGeoNode* node, Option_t* option = """", TGeoMatrix* global = 0). void PaintShape(TGeoShape* shape, Option_t* option = """"). void PaintOverlap(void* ovlp, Option_t* option = """"). void PrintOverlaps() const. void PaintVolume(TGeoVolume* vol, Option_t* option = """", TGeoMatrix* global = 0). void RandomPoints(const TGeoVolume* vol, Int_t npoints, Option_t* option = """"). void RandomRays(Int_t nrays, Double_t startx, Double_t starty, Double_t startz). void Raytrace(Option_t* option = """"). TGeoNode * SamplePoints(Int_t npoints, Double_t& dist, Double_t epsil, const char* g3path). void SetBombFactors(Double_t bombx = 1.3, Double_t bomby = 1.3, Double_t bombz = 1.3, Double_t bombr = 1.3). void SetExplodedView(Int_t iopt = 0). void SetGeoManager(TGeoManager* geom). void SetIteratorPlugin(TGeoIteratorPlugin* plugin). void SetCheckedNode(TGeoNode* node). void SetNsegments(Int_t nseg = 20). void SetNmeshPoints(Int_t npoints). void SetRaytracing(Bool_t flag = kTRUE). void SetTopVisible(Bool_t vis = kTRUE). void SetTopVolume(TGeoVolume* vol). void SetVisLevel(Int_t level = 3). void SetVisOption(Int_t option = 0). Int_t ShapeDistancetoPrimitive(const TGeoShape* shape, Int_t numpoints, Int_t px, Int_t py) const. void Test(Int_t npoints, Option_t* option). void TestOverlaps(const char* path). Bool_t TestVoxels(TGeoVolume* vol). void UnbombTranslation(const Double_t* tr, Double_t* bombtr). Double_t Weight(Double_t precision, Option_t* option = ""v""). » Author: Andrei Gheata 11/01/02 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id: TVirtualGeoPainter.h 39018 2011-04-25 09:38:31Z agheata $ » Last generated: 2011-07-04 15:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TVirtualGeoPainter.html:15071,Test,Test,15071,root/html530/TVirtualGeoPainter.html,https://root.cern,https://root.cern/root/html530/TVirtualGeoPainter.html,3,['Test'],"['Test', 'TestOverlaps', 'TestVoxels']"
Testability,"const char* opname, Long64_t current, Long64_t size, TStopwatch* watch = 0, Bool_t last = kFALSE, Bool_t refresh = kFALSE). void Paint(Option_t* option = """"). void PaintNode(TGeoNode* node, Option_t* option = """", TGeoMatrix* global = 0). void PaintShape(TGeoShape* shape, Option_t* option = """"). void PaintOverlap(void* ovlp, Option_t* option = """"). void PrintOverlaps() const. void PaintVolume(TGeoVolume* vol, Option_t* option = """", TGeoMatrix* global = 0). void RandomPoints(const TGeoVolume* vol, Int_t npoints, Option_t* option = """"). void RandomRays(Int_t nrays, Double_t startx, Double_t starty, Double_t startz). void Raytrace(Option_t* option = """"). TGeoNode * SamplePoints(Int_t npoints, Double_t& dist, Double_t epsil, const char* g3path). void SetBombFactors(Double_t bombx = 1.3, Double_t bomby = 1.3, Double_t bombz = 1.3, Double_t bombr = 1.3). void SetExplodedView(Int_t iopt = 0). void SetGeoManager(TGeoManager* geom). void SetIteratorPlugin(TGeoIteratorPlugin* plugin). void SetCheckedNode(TGeoNode* node). void SetNsegments(Int_t nseg = 20). void SetNmeshPoints(Int_t npoints). void SetRaytracing(Bool_t flag = kTRUE). void SetTopVisible(Bool_t vis = kTRUE). void SetTopVolume(TGeoVolume* vol). void SetVisLevel(Int_t level = 3). void SetVisOption(Int_t option = 0). Int_t ShapeDistancetoPrimitive(const TGeoShape* shape, Int_t numpoints, Int_t px, Int_t py) const. void Test(Int_t npoints, Option_t* option). void TestOverlaps(const char* path). Bool_t TestVoxels(TGeoVolume* vol). void UnbombTranslation(const Double_t* tr, Double_t* bombtr). Double_t Weight(Double_t precision, Option_t* option = ""v""). » Author: Andrei Gheata 11/01/02 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id: TVirtualGeoPainter.h 39018 2011-04-25 09:38:31Z agheata $ » Last generated: 2011-11-03 20:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualGeoPainter.html:15071,Test,Test,15071,root/html532/TVirtualGeoPainter.html,https://root.cern,https://root.cern/root/html532/TVirtualGeoPainter.html,3,['Test'],"['Test', 'TestOverlaps', 'TestVoxels']"
Testability,"const char* options, TString& res); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRegisterCommand(const char* cmdname, const char* method, const char* icon); Bool_tRegisterObject(const char* subfolder, TObject* obj); voidTObject::ResetBit(UInt_t f); voidRestrict(const char* path, const char* options); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidScanHierarchy(const char* topname, const char* path, TRootSnifferStore* store, Bool_t only_fields = kFALSE); voidSetAutoLoad(const char* scripts = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCurrentCallArg(THttpCallArg* arg); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); Bool_tSetItemField(const char* fullname, const char* name, const char* value); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetReadOnly(Bool_t on = kTRUE); voidSetScanGlobalDir(Bool_t on = kTRUE); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tUnregisterObject(TObject* obj); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSniffer.html:6975,Test,TestBit,6975,root/html534/TRootSniffer.html,https://root.cern,https://root.cern/root/html534/TRootSniffer.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* pass = ""pass""); Connects to SQL server with provided arguments.; If the constructor fails in any way IsZombie() will; return true. Use IsOpen() to check if the file is (still) open. If option = NEW or CREATE create a ROOT tables in database; if the tables already exists connection is; not opened.; = RECREATE create completely new tables. Any existing tables; will be deleted; = UPDATE open an existing database for writing.; If data base open by other TSQLFile instance for writing,; write access will be rejected; = BREAKLOCK Special case when lock was not correctly released; by TSQLFile instance. This may happen if program crashed when; TSQLFile was open with write access mode.; = READ or OPEN open an existing data base for reading. For more details see comments for TFile::TFile() constructor. For a moment TSQLFile does not support TTree objects and subdirectories. void StartLogFile(const char* fname); start logging of all SQL statements in specified file. void StopLogFile(); close logging file. Bool_t IsMySQL() const; checks, if MySQL database. Bool_t IsOracle() const; checks, if Oracle database. Bool_t IsODBC() const; checks, if ODBC driver used for database connection. void SetUseSuffixes(Bool_t on = kTRUE); enable/disable uasge of suffixes in columns names; can be changed before first object is saved into file. void SetArrayLimit(Int_t limit = 20); Defines maximum number of columns for array representation; If array size bigger than limit, array data will be converted to raw format; This is usefull to prevent tables with very big number of columns; If limit==0, all arrays will be stored in raw format; If limit<0, all array values will be stored in column form; Default value is 21. void SetTablesType(const char* table_type); Defines tables type, which is used in CREATE TABLE statements; Now is only used for MySQL database, where following types are supported:; ""BDB"", ""HEAP"", ""ISAM"", ""InnoDB"", ""MERGE"", ""MRG_MYISAM"", ""MYISAM""; Default for TSQLFile is ""Inn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSQLFile.html:34411,log,logging,34411,root/html530/TSQLFile.html,https://root.cern,https://root.cern/root/html530/TSQLFile.html,5,['log'],['logging']
Testability,"const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TDocHtmlDirective&operator=(const TDocHtmlDirective&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDocHtmlDirective.html:4891,Test,TestBit,4891,root/html534/TDocHtmlDirective.html,https://root.cern,https://root.cern/root/html534/TDocHtmlDirective.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTypeIsPointer() const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TVirtualBranchBrowsable.html:6706,Test,TestBit,6706,root/html530/TVirtualBranchBrowsable.html,https://root.cern,https://root.cern/root/html530/TVirtualBranchBrowsable.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRootSnifferStoreJson&operator=(const TRootSnifferStoreJson&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetField(Int_t lvl, const char* field, const char* value, Bool_t with_quotes); static voidTObject::SetObjectStat(Bool_t stat); voidTRootSnifferStore::SetResult(void* _res, TClass* _rescl, TDataMember* _resmemb, Int_t _res_chld, Int_t restr = 0); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSnifferStoreJson.html:5191,Test,TestBit,5191,root/html534/TRootSnifferStoreJson.html,https://root.cern,https://root.cern/root/html534/TRootSnifferStoreJson.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; voidSetDs(Float_t dx, Float_t dy, Float_t dz = 0); static voidTObject::SetDtorOnly(void* obj); voidSetNs(Int_t nx, Int_t ny, Int_t nz = 1); static voidTObject::SetObjectStat(Bool_t stat); voidSetOs(Float_t ox, Float_t oy, Float_t oz = 0); voidSetTrans(TEveTrans* mx); voidSetTransAdvance(TEveTrans* mx); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); Bool_tStep(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidSubtract(TEveGridStepper& s); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveGridStepper.html:4921,Test,TestBit,4921,root/html534/TEveGridStepper.html,https://root.cern,https://root.cern/root/html534/TEveGridStepper.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTVirtualPacketizer::SetFailedPackets(TList* list); virtual voidTVirtualPacketizer::SetInitTime(); static voidTObject::SetObjectStat(Bool_t stat); voidTVirtualPacketizer::SetProgressStatus(TProofProgressStatus* st); voidTVirtualPacketizer::SetTotalEntries(Long64_t ent); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStopProcess(Bool_t abort, Bool_t stoptimer = kFALSE); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPacketizerMulti.html:6025,Test,TestBit,6025,root/html530/TPacketizerMulti.html,https://root.cern,https://root.cern/root/html530/TPacketizerMulti.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRemoveRootProxy(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDragPixmap(Pixmap_t pic, Pixmap_t mask, Int_t hot_x, Int_t hot_y); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMainFrame(TGFrame* main); static voidTObject::SetObjectStat(Bool_t stat); Bool_tSetRootProxy(); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; Bool_tStartDrag(TGFrame* src, Int_t x_root, Int_t y_root, Window_t grabWin = kNone); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGDNDManager(TGFrame* toplevel, Atom_t* typelist); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGDNDManager.html:5437,Test,TestBit,5437,root/html602/TGDNDManager.html,https://root.cern,https://root.cern/root/html602/TGDNDManager.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const char* title = """")MENU ; virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector& insp); virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTNamed::Sizeof() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); TGCompositeFrame*StartEmbedding(); TEveWindowFrame*StopEmbedding(const char* name = 0); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidTEveWindow::SwapWindow(TEveWindow* w); static voidTEveWindow::SwapWindows(TEveWindow* w1, TEveWindow* w2); voidTEveWindow::SwapWindowWithCurrent()MENU ; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; voidTEveWindow::TitleBarClicked(); voidTEveWindow::UndockWindow()MENU ; voidTEveWindow::UndockWindowDestroySlot()MENU ; virtual voidTEveElement::UnHighlighted(); virtual voidTEveElement::UnSelected(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveElement::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveWindowSlot.html:16772,Test,TestBit,16772,root/html528/TEveWindowSlot.html,https://root.cern,https://root.cern/root/html528/TEveWindowSlot.html,9,['Test'],"['TestBit', 'TestBits', 'TestCSCBits']"
Testability,"const char*TNamed::GetName() const; unsigned intGetNumberOfToys(); unsigned intGetNumberOfToys() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; RooStats::HybridCalculatorHybridCalculator(const char* name = 0); RooStats::HybridCalculatorHybridCalculator(const RooStats::HybridCalculator&); RooStats::HybridCalculatorHybridCalculator(RooAbsData& data, const RooStats::ModelConfig& sb_model, const RooStats::ModelConfig& b_model, bool GenerateBinned = false, int testStatistics = 1, int ntoys = 1000); RooStats::HybridCalculatorHybridCalculator(RooAbsPdf& sb_model, RooAbsPdf& b_model, RooArgList& observables, const RooArgSet* nuisance_parameters = 0, RooAbsPdf* prior_pdf = 0, bool GenerateBinned = false, int testStatistics = 1, int ntoys = 1000); RooStats::HybridCalculatorHybridCalculator(RooAbsData& data, RooAbsPdf& sb_model, RooAbsPdf& b_model, const RooArgSet* nuisance_parameters = 0, RooAbsPdf* prior_pdf = 0, bool GenerateBinned = false, int testStatistics = 1, int ntoys = 1000); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__HybridCalculator.html:5270,test,testStatistics,5270,root/html526/RooStats__HybridCalculator.html,https://root.cern,https://root.cern/root/html526/RooStats__HybridCalculator.html,1,['test'],['testStatistics']
Testability,"const double* x, double& f, double* df) const; virtual voidGradient(const double* x, double* g) const; ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(); ROOT::Math::IBaseFunctionMultiDimROOT::Math::IBaseFunctionMultiDim::IBaseFunctionMultiDim(const ROOT::Math::IBaseFunctionMultiDim&); ROOT::Math::IGradientFunctionMultiDimROOT::Math::IGradientFunctionMultiDim::IGradientFunctionMultiDim(); ROOT::Math::IGradientFunctionMultiDimROOT::Math::IGradientFunctionMultiDim::IGradientFunctionMultiDim(const ROOT::Math::IGradientFunctionMultiDim&); ROOT::Math::IGradientMultiDimROOT::Math::IGradientMultiDim::IGradientMultiDim(); ROOT::Math::IGradientMultiDimROOT::Math::IGradientMultiDim::IGradientMultiDim(const ROOT::Math::IGradientMultiDim&); ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>& f); ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(const shared_ptr<ROOT::Fit::UnBinData>& data, const shared_ptr<ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction>& func, int weight = 0, bool extended = false); ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>(const ROOT::Fit::UnBinData& data, const ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>::IModelFunction& func, int weight = 0, bool extended = false); virtual const ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::IModelFunction&ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::ModelFunction() const; shared_ptr<ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::IModelFunction>ROOT::Fit::BasicFCN<ROOT::Math::IGradientFunctionMultiDim,ROOT::Fit::UnBinData>::ModelFunct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html:3174,Log,LogLikelihoodFCN,3174,root/html604/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__LogLikelihoodFCN_-p0Math__IGradientFunctionMultiDim_.html,1,['Log'],['LogLikelihoodFCN']
Testability,"const. Proxy methods to access the TCanvas selected TObject; and last processed event. { return GetCanvas()->GetEvent(); }. Int_t GetEventX() const. { return GetCanvas()->GetEventX(); }. Int_t GetEventY() const. { return GetCanvas()->GetEventY(); }. TObject * GetSelected() const. { return GetCanvas()->GetSelected(); }. Int_t GetSelectedX() const. { return GetCanvas()->GetSelectedX(); }. Int_t GetSelectedY() const. { return GetCanvas()->GetSelectedY(); }. TVirtualPad * GetSelectedPad() const. { return GetCanvas()->GetSelectedPad(); }. UInt_t GetAllBits() const; ----- bit manipulation. { return fBits; }. void SetAllBits(UInt_t f); { fBits = f; }. void SetBit(UInt_t f); { fBits |= f & kBitMask; }. void ResetBit(UInt_t f); { fBits &= ~(f & kBitMask); }. Bool_t TestBit(UInt_t f) const; { return (Bool_t) ((fBits & f) != 0); }. Int_t TestBits(UInt_t f) const; { return (Int_t) (fBits & f); }. void InvertBit(UInt_t f); { fBits ^= f & kBitMask; }. TQtCanvasPainter * CanvasDecorator(); { return fCanvasDecorator; }. void SetCanvasDecorator(TQtCanvasPainter* decorator); { fCanvasDecorator = decorator;}. void EnableSignalEvents(UInt_t f); { SetBit (f); }. void DisableSignalEvents(UInt_t f); { ResetBit(f); }. Bool_t IsSignalEventEnabled(UInt_t f) const; { return TestBit (f); }. void EmitSignal(UInt_t f); {if (IsSignalEventEnabled(f)) EmitTestedSignal();}. void SetIgnoreLeaveEnter(int ignore = 1); { fIgnoreLeaveEnter = ignore; }. void operator=(const TQtWidget& ); ----- Private bits, clients can only test but not change them. void ResetCanvas(); { fCanvas = 0;}. bool IsDoubleBuffered() const; { return fDoubleBufferOn; }. void EmitCanvasPainted(); { emit CanvasPainted(); }. » Author: Valeri Fine 21/01/2002 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/qt:$Id$ » Last generated: 2015-03-14 16:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQtWidget.html:14665,Test,TestBit,14665,root/html534/TQtWidget.html,https://root.cern,https://root.cern/root/html534/TQtWidget.html,2,"['Test', 'test']","['TestBit', 'test']"
Testability,const. print all the parameters and their values in the given sample to the console ; Definition at line 1784 of file RooLagrangianMorphFunc.cxx. ◆ printPhysics(). void RooLagrangianMorphFunc::printPhysics ; (; ); const. print the current physics values ; Definition at line 1810 of file RooLagrangianMorphFunc.cxx. ◆ printSamples(). void RooLagrangianMorphFunc::printSamples ; (; ); const. print all the known samples to the console ; Definition at line 1799 of file RooLagrangianMorphFunc.cxx. ◆ printSampleWeights(). void RooLagrangianMorphFunc::printSampleWeights ; (; ); const. print the current sample weights ; Definition at line 2202 of file RooLagrangianMorphFunc.cxx. ◆ printWeights(). void RooLagrangianMorphFunc::printWeights ; (; ); const. print the current sample weights ; Definition at line 2194 of file RooLagrangianMorphFunc.cxx. ◆ randomizeParameters(). void RooLagrangianMorphFunc::randomizeParameters ; (; double ; z). randomize the parameters a bit useful to test and debug fitting ; Definition at line 2217 of file RooLagrangianMorphFunc.cxx. ◆ readMatrixFromFile(). TMatrixD RooLagrangianMorphFunc::readMatrixFromFile ; (; const char * ; fname). read a matrix from a text file ; Definition at line 1604 of file RooLagrangianMorphFunc.cxx. ◆ readMatrixFromStream(). TMatrixD RooLagrangianMorphFunc::readMatrixFromStream ; (; std::istream & ; stream). read a matrix from a stream ; Definition at line 1612 of file RooLagrangianMorphFunc.cxx. ◆ readParameters(). void RooLagrangianMorphFunc::readParameters ; (; TDirectory * ; f). read the parameters from the input file ; Definition at line 1726 of file RooLagrangianMorphFunc.cxx. ◆ selfNormalized(). bool RooLagrangianMorphFunc::selfNormalized ; (; ); const. inline . Definition at line 237 of file RooLagrangianMorphFunc.h. ◆ setCacheAndTrackHints(). void RooLagrangianMorphFunc::setCacheAndTrackHints ; (; RooArgSet & ; arg). overridevirtual . Retrieve the matrix of coefficients. ; Reimplemented from RooAbsArg.; Definition,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:89707,test,test,89707,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['test'],['test']
Testability,"const; 361{; 362 if (delta < 0) {; 363 Error(""GrowBy"", ""delta < 0"");; 364 delta = Capacity();; 365 }; 366 return Capacity() + TMath::Range(2, kMaxInt - Capacity(), delta);; 367}; 368 ; 369////////////////////////////////////////////////////////////////////////////////; 370/// Returns true if object is a null pointer.; 371 ; 372Bool_t TCollection::IsArgNull(const char *where, const TObject *obj) const; 373{; 374 return obj ? kFALSE : (Error(where, ""argument is a null pointer""), kTRUE);; 375}; 376 ; 377////////////////////////////////////////////////////////////////////////////////; 378/// List (ls) all objects in this collection.; 379/// Wildcarding supported, eg option=""xxx*"" lists only objects; 380/// with names xxx*.; 381 ; 382void TCollection::ls(Option_t *option) const; 383{; 384 TROOT::IndentLevel();; 385 std::cout <<""OBJ: "" << IsA()->GetName() << ""\t"" << GetName() << ""\t"" << GetTitle() << "" : ""; 386 << Int_t(TestBit(kCanDelete)) << std::endl;; 387 ; 388 TRegexp re(option,kTRUE);; 389 TIter next(this);; 390 TObject *object;; 391 char *star = nullptr;; 392 if (option) star = (char*)strchr(option,'*');; 393 ; 394 TROOT::IncreaseDirLevel();; 395 while ((object = next())) {; 396 if (star) {; 397 TString s = object->GetName();; 398 if (s != option && s.Index(re) == kNPOS) continue;; 399 }; 400 object->ls(option);; 401 }; 402 TROOT::DecreaseDirLevel();; 403}; 404 ; 405////////////////////////////////////////////////////////////////////////////////; 406/// 'Notify' all objects in this collection.; 407Bool_t TCollection::Notify(); 408{; 409 Bool_t success = true;; 410 for (auto obj : *this) success &= obj->Notify();; 411 return success;; 412}; 413 ; 414////////////////////////////////////////////////////////////////////////////////; 415/// Paint all objects in this collection.; 416 ; 417void TCollection::Paint(Option_t *option); 418{; 419 this->R__FOR_EACH(TObject,Paint)(option);; 420}; 421 ; 422///////////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8cxx_source.html:13483,Test,TestBit,13483,doc/master/TCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8cxx_source.html,1,['Test'],['TestBit']
Testability,"const; 441{; 442 if (!fLabels) return """";; 443 if (bin <= 0 || bin > fNbins) return """";; 444 TIter next(fLabels);; 445 TObjString *obj;; 446 while ((obj=(TObjString*)next())) {; 447 Int_t binid = (Int_t)obj->GetUniqueID();; 448 if (binid == bin) return obj->GetName();; 449 }; 450 return """";; 451}; 452 ; 453////////////////////////////////////////////////////////////////////////////////; 454/// Return first bin on the axis; 455/// i.e. 1 if no range defined; 456/// NOTE: in some cases a zero is returned (see TAxis::SetRange); 457 ; 458Int_t TAxis::GetFirst() const; 459{; 460 if (!TestBit(kAxisRange)) return 1;; 461 return fFirst;; 462}; 463 ; 464////////////////////////////////////////////////////////////////////////////////; 465/// Return last bin on the axis; 466/// i.e. fNbins if no range defined; 467/// NOTE: in some cases a zero is returned (see TAxis::SetRange); 468 ; 469Int_t TAxis::GetLast() const; 470{; 471 if (!TestBit(kAxisRange)) return fNbins;; 472 return fLast;; 473}; 474 ; 475////////////////////////////////////////////////////////////////////////////////; 476/// Return center of bin; 477 ; 478Double_t TAxis::GetBinCenter(Int_t bin) const; 479{; 480 Double_t binwidth;; 481 if (!fXbins.fN || bin<1 || bin>fNbins) {; 482 binwidth = (fXmax - fXmin) / Double_t(fNbins);; 483 return fXmin + (bin-1) * binwidth + 0.5*binwidth;; 484 } else {; 485 binwidth = fXbins.fArray[bin] - fXbins.fArray[bin-1];; 486 return fXbins.fArray[bin-1] + 0.5*binwidth;; 487 }; 488}; 489 ; 490////////////////////////////////////////////////////////////////////////////////; 491/// Return center of bin in log; 492/// With a log-equidistant binning for a bin with low and up edges, the mean is :; 493/// 0.5*(ln low + ln up) i.e. sqrt(low*up) in logx (e.g. sqrt(10^0*10^2) = 10).; 494/// Imagine a bin with low=1 and up=100 :; 495/// - the center in lin is (100-1)/2=50.5; 496/// - the center in log would be sqrt(1*100)=10 (!=log(50.5)); 497///; 498/// NB: if the low edge of the bin is negati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:15245,Test,TestBit,15245,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['Test'],['TestBit']
Testability,"const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObjString&operator=(const TObjString&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t*) const; virtual Int_tTObject::Read(const char* name); voidReadBuffer(char*& buffer); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidSetString(const char* s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); Int_tSizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); TString&String(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TObjString.html:4397,Test,TestBit,4397,root/html528/TObjString.html,https://root.cern,https://root.cern/root/html528/TObjString.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooTFoamBinding&operator=(const RooTFoamBinding&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooTFoamBinding.html:4527,Test,TestBit,4527,root/html530/RooTFoamBinding.html,https://root.cern,https://root.cern/root/html530/RooTFoamBinding.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TClassGenerator&operator=(const TClassGenerator&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TClassGenerator.html:4862,Test,TestBit,4862,root/html530/TClassGenerator.html,https://root.cern,https://root.cern/root/html530/TClassGenerator.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPBHandleDSType&operator=(const TPBHandleDSType&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPBHandleDSType.html:4579,Test,TestBit,4579,root/html530/TPBHandleDSType.html,https://root.cern,https://root.cern/root/html530/TPBHandleDSType.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TPerfEvent&operator=(const TPerfEvent&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPerfEvent.html:4400,Test,TestBit,4400,root/html534/TPerfEvent.html,https://root.cern,https://root.cern/root/html534/TPerfEvent.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TProofResources&operator=(const TProofResources&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofResources.html:4786,Test,TestBit,4786,root/html530/TProofResources.html,https://root.cern,https://root.cern/root/html530/TProofResources.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; Bool_tTObject::IsZombie() const; voidLock(); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetField(TVirtualMagField* field); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoGlobalMagField.html:5017,Test,TestBit,5017,root/html530/TGeoGlobalMagField.html,https://root.cern,https://root.cern/root/html530/TGeoGlobalMagField.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; Bool_tisConvolved(); virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooMoment*RooAbsReal::mean(RooRealVar& obs); RooMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); Int_tRooAbsPdf::minDimNormValueCaching() const; virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual voidnormLeafServerList(RooArgSet& list) const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooResolutionModel.html:21305,log,logEvalError,21305,root/html528/RooResolutionModel.html,https://root.cern,https://root.cern/root/html528/RooResolutionModel.html,2,['log'],['logEvalError']
Testability,"const; Bool_tisConvolved(); virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; voidRooAbsReal::logEvalError(const char* message, const char* serverValueString = 0) const; static voidRooAbsReal::logEvalError(const RooAbsReal* originator, const char* origName, const char* message, const char* serverValueString = 0); virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooMoment*RooAbsReal::mean(RooRealVar& obs); RooMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); Int_tRooAbsPdf::minDimNormValueCaching() const; virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual voidnormLeafServerList(RooArgSet& list) const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooResolutionModel.html:21243,log,logEvalError,21243,root/html526/RooResolutionModel.html,https://root.cern,https://root.cern/root/html526/RooResolutionModel.html,1,['log'],['logEvalError']
Testability,"const; Double_tPx() const; Double_tPy() const; Double_tPz() const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); voidRotate(Double_t, const TVector3&); voidRotateUz(const TVector3&); voidRotateX(Double_t); voidRotateY(Double_t); voidRotateZ(Double_t); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMag(Double_t ma); voidSetMagThetaPhi(Double_t mag, Double_t theta, Double_t phi); static voidTObject::SetObjectStat(Bool_t stat); voidSetPerp(Double_t r); voidSetPhi(Double_t); voidSetPtEtaPhi(Double_t pt, Double_t eta, Double_t phi); voidSetPtThetaPhi(Double_t pt, Double_t theta, Double_t phi); voidSetTheta(Double_t); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetX(Double_t xx); voidSetXYZ(Double_t xx, Double_t yy, Double_t zz); voidSetY(Double_t yy); voidSetZ(Double_t zz); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Double_tTheta() const; TVector3&Transform(const TRotation&); TVector3Unit() const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_tx() const; Double_tX() const; TVector2XYvector() const; Double_ty() const; Double_tY() const; Double_tz() const; Double_tZ() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVector3.html:9979,Test,TestBit,9979,root/html528/TVector3.html,https://root.cern,https://root.cern/root/html528/TVector3.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveLine::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.005); voidTEvePointSet::AssertIntIdsSize(); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1e6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); voidTPointSet3D::CopyIds(const TPointSet3D& t); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual void*TQObject::GetSender(); virtual const char*TQObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveLineProjected.html:22914,Assert,AssertBBoxExtents,22914,root/html530/TEveLineProjected.html,https://root.cern,https://root.cern/root/html530/TEveLineProjected.html,3,['Assert'],['AssertBBoxExtents']
Testability,"const; TEvePolygonSetProjected(const char* n = ""TEvePolygonSetProjected"", const char* t = """"); virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEveShape::WriteVizParams(ostream& out, const TString& var). protected:. virtual voidTEveElement::AnnihilateRecursively(); voidTAttBBox::AssertBBoxExtents(Float_t epsilon = 0.0050000000000000001); voidTAttBBox::BBoxCheckPoint(const Float_t* p); voidTAttBBox::BBoxCheckPoint(Float_t x, Float_t y, Float_t z); voidTAttBBox::BBoxClear(); voidTAttBBox::BBoxInit(Float_t infinity = 1.0E+6); voidTAttBBox::BBoxZero(Float_t epsilon = 0, Float_t x = 0, Float_t y = 0, Float_t z = 0); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); Float_tPolygonSurfaceXY(const TEvePolygonSetProjected::Polygon_t& poly) const; virtual voidTEveElement::PreDeleteElement(); virtual voidTEveElement::RemoveElementsInternal(); voidTEveProjected::SetDepthCommon(Float_t d, TEveElement* el, Float_t* bbox); virtual voidSetDepthLocal(Float_t d); static const char*TEveElement::ToString(Bool_t b). private:. Float_tAddPolygon(list<Int_t>& pp, list<TEvePolygonSetProjected::Polygon_t>& p); Bool_tIsFirstIdxHead(Int_t s0, Int_t s1); Float_tMakePolygonsFromBP(Int_t* idxMap); Float_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePolygonSetProjected.html:18168,Assert,AssertBBoxExtents,18168,root/html602/TEvePolygonSetProjected.html,https://root.cern,https://root.cern/root/html602/TEvePolygonSetProjected.html,2,['Assert'],['AssertBBoxExtents']
Testability,"const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TQpDataBase&operator=(const TQpDataBase& source); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPutAIntoAt(TMatrixDBase& M, Int_t row, Int_t col); virtual voidPutCIntoAt(TMatrixDBase& M, Int_t row, Int_t col); virtual voidPutQIntoAt(TMatrixDBase& M, Int_t row, Int_t col); virtual voidQmult(Double_t beta, TVectorD& y, Double_t alpha, const TVectorD& x); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQpDataBase.html:5999,Test,TestBit,5999,root/html530/TQpDataBase.html,https://root.cern,https://root.cern/root/html530/TQpDataBase.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; voidPutObjectWithID(TObject* obj, UInt_t uid = 0); virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidSetObjectCount(UInt_t number); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProcessID.html:6709,Test,TestBit,6709,root/html534/TProcessID.html,https://root.cern,https://root.cern/root/html534/TProcessID.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTGeoPatternFinder::Reflect(Bool_t flag = kTRUE); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoPatternFinder::SetDivIndex(Int_t index); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoPatternFinder::SetNext(Int_t index); static voidTObject::SetObjectStat(Bool_t stat); voidTGeoPatternFinder::SetRange(Double_t start, Double_t step, Int_t ndivisions); voidTGeoPatternFinder::SetSpacedOut(Bool_t flag); virtual voidTObject::SetUniqueID(UInt_t uid); voidTGeoPatternFinder::SetVolume(TGeoVolume* vol); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoPatternCylPhi.html:6609,Test,TestBit,6609,root/html530/TGeoPatternCylPhi.html,https://root.cern,https://root.cern/root/html530/TGeoPatternCylPhi.html,24,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_toperator==(const char*) const; virtual Bool_toperator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsString.html:8698,test,testArg,8698,root/html526/RooAbsString.html,https://root.cern,https://root.cern/root/html526/RooAbsString.html,2,['test'],['testArg']
Testability,"const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual TStringoperator TString(); virtual RooAbsArg&operator=(const char* newValue); Bool_tRooAbsString::operator==(const char*) const; virtual Bool_tRooAbsString::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStringVar.html:8585,test,testArg,8585,root/html526/RooStringVar.html,https://root.cern,https://root.cern/root/html526/RooStringVar.html,2,['test'],['testArg']
Testability,"const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_toperator==(const char*) const; virtual Bool_toperator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::own",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsString.html:8866,test,testArg,8866,root/html530/RooAbsString.html,https://root.cern,https://root.cern/root/html530/RooAbsString.html,1,['test'],['testArg']
Testability,"const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const; Bool_tRooAbsArg::isValueDirty() const; Bool_tRooAbsArg::isValueServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isValueServer(const char* name) const; Bool_tTObject::IsZombie() const; voidRooAbsArg::leafNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual TStringoperator TString(); virtual RooAbsArg&operator=(const char* newValue); Bool_tRooAbsString::operator==(const char*) const; virtual Bool_tRooAbsString::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& test",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStringVar.html:8753,test,testArg,8753,root/html530/RooStringVar.html,https://root.cern,https://root.cern/root/html530/RooStringVar.html,1,['test'],['testArg']
Testability,"const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTProof::IsDataReady(Long64_t& totalbytes, Long64_t& bytesready); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTProof::IsFolder() const; Bool_tTProof::IsIdle() const; Bool_tTProof::IsLite() const; Bool_tTProof::IsMaster() const; Bool_tTObject::IsOnHeap() const; Bool_tTProof::IsParallel() const; Bool_tTProof::IsProofd() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTProof::IsTty() const; Bool_tTProof::IsValid() const; Bool_tTProof::IsWaiting() const; Bool_tTObject::IsZombie() const; virtual Int_tLoad(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); static voidTQObject::LoadRQ_OBJECT(); voidTProof::LogMessage(const char* msg, Bool_t all)SIGNAL ; static voidTProof::LogViewer(const char* url = 0, Int_t sessionidx = 0); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; static TProofMgr*TProof::Mgr(const char* url); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static TProof*TProof::Open(const char* url = 0, const char* conffile = 0, const char* confdir = 0, Int_t loglevel = 0); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofLite.html:11901,Log,LogViewer,11901,root/html534/TProofLite.html,https://root.cern,https://root.cern/root/html534/TProofLite.html,1,['Log'],['LogViewer']
Testability,"const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSplinePoly&operator=(TSplinePoly const& other); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; Double_t&X(); Double_t&Y().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSplinePoly.html:4424,Test,TestBit,4424,root/html528/TSplinePoly.html,https://root.cern,https://root.cern/root/html528/TSplinePoly.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; voidSaveMimes(); virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGMimeTypes.html:4708,Test,TestBit,4708,root/html530/TGMimeTypes.html,https://root.cern,https://root.cern/root/html530/TGMimeTypes.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TConfidenceLevel&operator=(const TConfidenceLevel&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetBtot(Double_t in); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetDtot(Int_t in); voidSetLRB(Double_t* in); voidSetLRS(Double_t* in); static voidTObject::SetObjectStat(Bool_t stat); voidSetStot(Double_t in); voidSetTSB(Double_t* in); voidSetTSD(Double_t in); voidSetTSS(Double_t* in); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TConfidenceLevel.html:5227,Test,TestBit,5227,root/html528/TConfidenceLevel.html,https://root.cern,https://root.cern/root/html528/TConfidenceLevel.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); THbookKey&operator=(const THbookKey&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THbookKey.html:4482,Test,TestBit,4482,root/html528/THbookKey.html,https://root.cern,https://root.cern/root/html528/THbookKey.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSQLTableInfo&operator=(const TSQLTableInfo&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSQLTableInfo.html:4995,Test,TestBit,4995,root/html528/TSQLTableInfo.html,https://root.cern,https://root.cern/root/html528/TSQLTableInfo.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); THaarMatrixT<double>&operator=(const THaarMatrixT<double>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; THaarMatrixT<double>(); THaarMatrixT<double>(const THaarMatrixT<double>&); THaarMatrixT<double>(Int_t n, Int_t no_cols = 0); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THaarMatrixT_double_.html:4609,Test,TestBit,4609,root/html602/THaarMatrixT_double_.html,https://root.cern,https://root.cern/root/html602/THaarMatrixT_double_.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual Double_tGetMinimumStored() const; virtual Double_tGetMinimumX(Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.E-10, Int_t maxiter = 100, Bool_t logx = false) const; virtual const char*TNamed::GetName() const; virtual Int_tGetNDF() const; virtual Int_tTFormula::GetNdim() const; virtual Int_tTFormula::GetNpar() const; virtual Int_tGetNpx() const; virtual Int_tTFormula::GetNumber() const; virtual Int_tGetNumberFitPoints() const; virtual Int_tGetNumberFreeParameters() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tTFormula::GetParameter(Int_t ipar) const; Double_tTFormula::GetParameter(const char* name) const; virtual Double_t*TFormula::GetParameters() const; virtual voidTFormula::GetParameters(Double_t* params); TObject*GetParent() const; virtual Double_tGetParError(Int_t ipar) const; virtual Double_t*GetParErrors() const; virtual voidGetParLimits(Int_t ipar, Double_t& parmin, Double_t& parmax) const; virtual const char*TFormula::GetParName(Int_t ipar) const; virtual Int_tTFormula::GetParNumber(const char* name) const; virtual Double_tGetProb() const; virtual Int_tGetQuantiles(Int_t nprobSum, Double_t* q, const Double_t* probSum); virtual Double_tGetRandom(); virtual Double_tGetRandom(Double_t xmin, Double_t xmax); virtual voidGetRange(Double_t& xmin, Double_t& xmax) const; virtual voidGetRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; virtual voidGetRange(Double_t& xmin, Double_t& ymin, Double_t& zmin, Double_t& xmax, Double_t& ymax, Double_t& zmax) const; virtual Double_tGetSave(const Double_t* x); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetX(Double_t y, Double_t xmin = 0, Double_t xmax = 0, Double_t epsilon = 1.E-10, Int_t maxiter = 100, Bool_t logx = false) const; TAxis*GetXaxis() const; virtual Double_tGetXmax() const; virtual Double_tGetXmin(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TF1.html:10259,log,logx,10259,root/html534/TF1.html,https://root.cern,https://root.cern/root/html534/TF1.html,1,['log'],['logx']
Testability,"const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); virtual RooAbsArg*RooAbsCategory::createFundamental(const char* newname = 0) const; Roo1DTable*RooAbsCategory::createTable(const char* label) const; virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; Bool_tdefineType(const char* label); Bool_tdefineType(const char* label, Int_t index); virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::Exe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCategory.html:3256,test,testArg,3256,root/html526/RooCategory.html,https://root.cern,https://root.cern/root/html526/RooCategory.html,3,['test'],['testArg']
Testability,"const; virtual Int_tTObject::Read(const char* name); THnSparse*Rebin(Int_t group) const; THnSparse*Rebin(const Int_t* group) const; voidRebinnedAdd(const THnSparse* h, Double_t c = 1.); virtual voidTObject::RecursiveRemove(TObject* obj); voidReset(Option_t* option = """"); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidScale(Double_t c); voidSetBinContent(const Int_t* x, Double_t v); voidSetBinContent(Long64_t bin, Double_t v); voidSetBinEdges(Int_t idim, const Double_t* bins); voidSetBinError(const Int_t* x, Double_t e); voidSetBinError(Long64_t bin, Double_t e); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetEntries(Double_t entries); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetTitle(const char* title); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidSumw2(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. THnSparseArrayChunk*AddChunk(); voidAddInternal(const THnSparse* h, Double_t c, Bool_t rebinned); Bool_tCheckConsistency(const THnSparse* h, const char* tag) const; THnSp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THnSparse.html:11698,Test,TestBit,11698,root/html530/THnSparse.html,https://root.cern,https://root.cern/root/html530/THnSparse.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tTMinuit::Release(Int_t parNo); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual Int_tTMinuit::SetErrorDef(Double_t up); virtual voidTMinuit::SetFCN(void* fcn); virtual voidTMinuit::SetFCN(void (*)(Int_t&, Double_t*, Double_t&f, Double_t*, Int_t) fcn); voidSetFitterTarget(TMVA::IFitterTarget& target); virtual voidTMinuit::SetGraphicsMode(Bool_t mode = kTRUE); virtual voidTMinuit::SetMaxIterations(Int_t maxiter = 500); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTMinuit::SetObjectFit(TObject* obj); static voidTObject::SetObjectStat(Bool_t stat); Int_tSetParameter(Int_t ipar, const char* parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh); virtual Int_tTMinuit::SetPrintLevel(Int_t printLevel = 0); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MinuitWrapper.html:10009,Test,TestBit,10009,root/html534/TMVA__MinuitWrapper.html,https://root.cern,https://root.cern/root/html534/TMVA__MinuitWrapper.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCL(Double_t newCL); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMuMax(Double_t newMax = 50.0); voidSetMuMin(Double_t newMin = 0.0); voidSetMuStep(Double_t newMuStep = 0.005); voidSetNbackground(Double_t Nbg); voidSetNobserved(Double_t NObs); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tFindLimitsFromTable(Double_t mu); voidTObject::MakeZombie(); Double_tProb(Int_t N, Double_t mu, Double_t B). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tfCLconfidence level as a fraction [e.g. 90% = 0.9]; Double_tfLowerLimitthe calculated lower limit; Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFeldmanCousins.html:6064,Test,TestBit,6064,root/html534/TFeldmanCousins.html,https://root.cern,https://root.cern/root/html534/TFeldmanCousins.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual TDataSet*operator[](const Char_t* path); virtual voidTObject::Paint(Option_t* option = """"); virtual TStringPath(); virtual TStringPath(const Char_t* path); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual TDataSet*Pwd(Option_t* opt = """") const; virtual TDataSet*Rd(const Char_t* dirname, Option_t* option = """"); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidReset(TDataSet* l = 0, Int_t depth = 0); voidTObject::ResetBit(UInt_t f); virtual TDataSet*Rmdir(TDataSet* dataset, Option_t* option = """"); virtual TDataSet*Rmdir(const Char_t* dirname, Option_t* option = """"); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual TDataSet*Shunt(TDataSet* set); virtual TDataSet*Shunt(TDataSet* set, const Char_t* path); virtual TDataSet*Shunt(TDataSet* set, TDataSet* dataset); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; TDataSetIter(TDataSet* l, Bool_t dir); TDataSetIter(TDataSet* l = 0, Int_t depth = 1, Bool_t dir = kIterForward); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDataSetIter.html:7217,Test,TestBit,7217,root/html602/TDataSetIter.html,https://root.cern,https://root.cern/root/html602/TDataSetIter.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); virtual RooAbsArg*RooAbsCategory::createFundamental(const char* newname = 0) const; Roo1DTable*RooAbsCategory::createTable(const char* label) const; virtual Int_tRooAbsArg::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsCategoryLValue.html:3518,test,testArg,3518,root/html534/RooAbsCategoryLValue.html,https://root.cern,https://root.cern/root/html534/RooAbsCategoryLValue.html,19,['test'],['testArg']
Testability,"const; virtual voidRooPrintable::printArgs(ostream& os) const; virtual voidprintClassName(ostream& os) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidprintMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; virtual voidprintName(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidprintTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidprintValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/Roo1DTable.html:5904,Test,TestBit,5904,root/html528/Roo1DTable.html,https://root.cern,https://root.cern/root/html528/Roo1DTable.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidprintMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; virtual voidprintName(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidprintTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidRooPrintable::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidsetExpectedData(Bool_t); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidsetProtoDataOrder(Int_t* lut); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidsetVerbose(Bool_t verbose = kTRUE); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsGenContext.html:6285,Test,TestBit,6285,root/html532/RooAbsGenContext.html,https://root.cern,https://root.cern/root/html532/RooAbsGenContext.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidprintValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidreset(); voidTObject::ResetBit(UInt_t f); virtual voidresetCache(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidsetArgStatus(const RooArgSet& set, Bool_t active); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidsetDirtyProp(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual const TTree*tree() const; virtual voidTObject::UseCurrentStyle(); virtual Bool_tvalid() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Double_tweight() const; virtual Double_tweight(Int_t index) const; virtual Double_tweightError(RooAbsData::ErrorType etype = RooAbsData::Poisson) const; virtual voidweightError(Double_t& lo, Double_t& hi, RooAbsData::ErrorType etype = RooAbsData::Poisson) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsDataStore.html:6675,Test,TestBit,6675,root/html528/RooAbsDataStore.html,https://root.cern,https://root.cern/root/html528/RooAbsDataStore.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual voidTApplication::Raise(); virtual Int_tTObject::Read(const char* name); Int_tReceiveFile(const char* file, Bool_t bin, Long64_t size); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTApplication::RemoveIdleTimer(); voidReset(const char* dir); voidTObject::ResetBit(UInt_t f); Bool_tTApplication::ReturnFromRun() const; virtual voidTApplication::ReturnPressed(char* text)SIGNAL ; virtual voidRun(Bool_t retrn = kFALSE); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidSendLogFile(Int_t status = 0, Int_t start = -1, Int_t end = -1); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTApplication::SetEchoMode(Bool_t mode); virtual voidTApplication::SetIdleTimer(UInt_t idleTimeInSec, const char* command); static voidTObject::SetObjectStat(Bool_t stat); voidTApplication::SetReturnFromRun(Bool_t ret); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTApplication::Show(); virtual voidShowMembers(TMemberInspector& insp); virtual voidTApplication::StartIdleing(); virtual voidTApplication::StopIdleing(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual Int_tTApplication::TabCompletionHook(char* buf, int* pLoc, ostream& out); virtual voidTerminate(Int_t status); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; const char*TApplication::WorkingDirectory() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TApplicationServer.html:10111,Test,TestBit,10111,root/html530/TApplicationServer.html,https://root.cern,https://root.cern/root/html530/TApplicationServer.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooJeffreysPrior.html:22247,test,testArg,22247,root/html534/RooJeffreysPrior.html,https://root.cern,https://root.cern/root/html534/RooJeffreysPrior.html,1,['test'],['testArg']
Testability,"const; virtual voidTNamed::ls(Option_t* option = """") const; virtual Double_tRooAbsReal::maxVal(Int_t code) const; voidTObject::MayNotUse(const char* method) const; RooAbsMoment*RooAbsReal::mean(RooRealVar& obs); RooAbsMoment*RooAbsReal::mean(RooRealVar& obs, const RooArgSet& nset); virtual Int_tRooAbsReal::minTrialSamples(const RooArgSet&) const; RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, Int_t order, Bool_t central, Bool_t takeRoot); RooAbsMoment*RooAbsReal::moment(RooRealVar& obs, const RooArgSet& normObs, Int_t order, Bool_t central, Bool_t takeRoot, Bool_t intNormObs); Bool_tRooAbsPdf::mustBeExtended() const; static voidRooPrintable::nameFieldLength(Int_t newLen); const TNamed*RooAbsArg::namePtr() const; const char*RooAbsPdf::normRange() const; virtual Bool_tTObject::Notify(); Int_tRooAbsArg::numCaches() const; static Int_tRooAbsReal::numEvalErrorItems(); static Int_tRooAbsReal::numEvalErrors(); Bool_tRooAbsArg::observableOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::observableOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual Double_tRooAbsReal::offset() const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooJeffreysPrior&operator=(const RooJeffreysPrior&); Bool_tRooAbsReal::operator==(Double_t value) const; virtual Bool_tRooAbsReal::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooJeffreysPrior.html:22022,test,testArg,22022,root/html602/RooJeffreysPrior.html,https://root.cern,https://root.cern/root/html602/RooJeffreysPrior.html,2,['test'],['testArg']
Testability,"const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooWorkspace::CodeRepo&operator=(const RooWorkspace::CodeRepo&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooWorkspace__CodeRepo.html:5588,Test,TestBit,5588,root/html534/RooWorkspace__CodeRepo.html,https://root.cern,https://root.cern/root/html534/RooWorkspace__CodeRepo.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGUnknownWindowHandler&operator=(const TGUnknownWindowHandler&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGUnknownWindowHandler.html:4527,Test,TestBit,4527,root/html534/TGUnknownWindowHandler.html,https://root.cern,https://root.cern/root/html534/TGUnknownWindowHandler.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMySQLRow&operator=(const TMySQLRow&); const char*TSQLRow::operator[](Int_t field); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMySQLRow.html:4469,Test,TestBit,4469,root/html530/TMySQLRow.html,https://root.cern,https://root.cern/root/html530/TMySQLRow.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TSQLRow*Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSQLResult&operator=(const TSQLResult&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLResult.html:4732,Test,TestBit,4732,root/html534/TSQLResult.html,https://root.cern,https://root.cern/root/html534/TSQLResult.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; virtual voidprintClassName(ostream& os) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidRooPrintable::printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; virtual voidprintName(ostream& os) const; virtual voidRooPrintable::printStream(ostream& os, Int_t contents, RooPrintable::StyleOption style, TString indent = """") const; virtual voidprintTitle(ostream& os) const; virtual voidRooPrintable::printTree(ostream& os, TString indent = """") const; virtual voidRooPrintable::printValue(ostream& os) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidsetVerbose(Bool_t verbose = kTRUE); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsNumGenerator.html:6317,Test,TestBit,6317,root/html534/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html534/RooAbsNumGenerator.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; voidTObject::MayNotUse(const char* method) const; const char*name() const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); doubleoperator()(double x, double y, double z) const; RooCFunction3Ref<double,double,double,double>&operator=(const RooCFunction3Ref<double,double,double,double>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& R__b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3Ref_double_double_double_double_.html:5379,Test,TestBit,5379,root/html526/RooCFunction3Ref_double_double_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3Ref_double_double_double_double_.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEventIter&operator=(const TEventIter&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPreProcessEvent(Long64_t); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStopProcess(Bool_t abort); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEventIter.html:4912,Test,TestBit,4912,root/html534/TEventIter.html,https://root.cern,https://root.cern/root/html534/TEventIter.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"const; voidTObject::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* in); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TParameter<long>&operator=(const TParameter<long>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t*) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMergeMode(char mergemode = '+'); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVal(const long& val); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParameter_long_.html:4673,Test,TestBit,4673,root/html530/TParameter_long_.html,https://root.cern,https://root.cern/root/html530/TParameter_long_.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGraph2DPainter&operator=(const TGraph2DPainter&); virtual voidPaint(Option_t* option); voidPaintContour(Option_t* option); voidPaintErrors(Option_t* option); voidPaintPolyLine(Option_t* option); voidPaintPolyMarker(Option_t* option); voidPaintTriangles(Option_t* option); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGraph2DPainter(); TGraph2DPainter(TGraphDelaunay* gd); TGraph2DPainter(const TGraph2DPainter&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraph2DPainter.html:4523,Test,TestBit,4523,root/html602/TGraph2DPainter.html,https://root.cern,https://root.cern/root/html602/TGraph2DPainter.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNDArrayT<int>&operator=(const TNDArrayT<int>&); TNDArrayRef<int>operator[](Int_t idx) const; virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidReset(Option_t* = """"); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSetAsDouble(ULong64_t linidx, Double_t value); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TNDArrayT<int>(); TNDArrayT<int>(const TNDArrayT<int>&); TNDArrayT<int>(Int_t ndim, const Int_t* nbins, bool addOverflow = false); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNDArrayT_int_.html:5368,Test,TestBit,5368,root/html602/TNDArrayT_int_.html,https://root.cern,https://root.cern/root/html602/TNDArrayT_int_.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSVDUnfold&operator=(const TSVDUnfold&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetNormalize(Bool_t normalize); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TSVDUnfold(const TSVDUnfold& other); TSVDUnfold(const TH1D* bdat, const TH1D* bini, const TH1D* xini, const TH2D* Adet); TSVDUnfold(const TH1D* bdat, TH2D* Bcov, const TH1D* bini, const TH1D* xini, const TH2D* Adet); TH1D*Unfold(Int_t kreg); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSVDUnfold.html:7353,Test,TestBit,7353,root/html602/TSVDUnfold.html,https://root.cern,https://root.cern/root/html602/TSVDUnfold.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"const; { return fPhi; }. T X() const; { return fRho*std::cos(fPhi); }. T Y() const; { return fRho*std::sin(fPhi); }. T Z() const. T R() const. T Mag2() const; { return R()*R(); }. T Perp2() const; { return fRho*fRho; }. T Theta() const. void SetRho(double rho); setters (only for data members). set the rho coordinate value keeping eta and phi constant. void SetEta(double eta). set the eta coordinate value keeping rho and phi constant. void SetPhi(double phi). set the phi coordinate value keeping rho and eta constant. void SetXYZ(ROOT::Math::CylindricalEta3D<double>::Scalar xx, ROOT::Math::CylindricalEta3D<double>::Scalar yy, ROOT::Math::CylindricalEta3D<double>::Scalar zz). set all values using cartesian coordinates. void Scale(double a). scale by a scalar quantity a --; for cylindrical eta coords, as long as a >= 0, only rho changes!. Negate(). bool operator==(const ROOT::Math::CylindricalEta3D<double>& rhs) const. Exact component-by-component equality; Note: Peculiar representaions of the zero vector such as (0,1,0) will; not test as equal to one another. bool operator!=(const ROOT::Math::CylindricalEta3D<double>& rhs) const; {return !(operator==(rhs));}. T x() const; ============= Compatibility section ==================; The following make this coordinate system look enough like a CLHEP; vector that an assignment member template can work with either. { return X();}. T y() const; { return Y();}. T z() const; { return Z(); }. void SetX(ROOT::Math::CylindricalEta3D<double>::Scalar xx); ============= Specializations for improved speed ==================; (none); ====== Set member functions for coordinates in other systems =======. void SetY(ROOT::Math::CylindricalEta3D<double>::Scalar yy). void SetZ(ROOT::Math::CylindricalEta3D<double>::Scalar zz). void SetR(ROOT::Math::CylindricalEta3D<double>::Scalar r). void SetTheta(ROOT::Math::CylindricalEta3D<double>::Scalar theta). » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 16:58; This page has been automa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__CylindricalEta3D_double_.html:5262,test,test,5262,root/html534/ROOT__Math__CylindricalEta3D_double_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__CylindricalEta3D_double_.html,1,['test'],['test']
Testability,"const; { return fPhi; }. T X() const; { return fRho*std::cos(fPhi); }. T Y() const; { return fRho*std::sin(fPhi); }. T Z() const. T R() const. T Mag2() const; { return R()*R(); }. T Perp2() const; { return fRho*fRho; }. T Theta() const. void SetRho(double rho); setters (only for data members). set the rho coordinate value keeping eta and phi constant. void SetEta(double eta). set the eta coordinate value keeping rho and phi constant. void SetPhi(double phi). set the phi coordinate value keeping rho and eta constant. void SetXYZ(ROOT::Math::CylindricalEta3D<double>::Scalar xx, ROOT::Math::CylindricalEta3D<double>::Scalar yy, ROOT::Math::CylindricalEta3D<double>::Scalar zz). set all values using cartesian coordinates. void Scale(double a). scale by a scalar quantity a --; for cylindrical eta coords, as long as a >= 0, only rho changes!. Negate(). bool operator==(const ROOT::Math::CylindricalEta3D<double>& rhs) const. Exact component-by-component equality; Note: Peculiar representaions of the zero vector such as (0,1,0) will; not test as equal to one another. bool operator!=(const ROOT::Math::CylindricalEta3D<double>& rhs) const; {return !(operator==(rhs));}. T x() const; ============= Compatibility section ==================; The following make this coordinate system look enough like a CLHEP; vector that an assignment member template can work with either. { return X();}. T y() const; { return Y();}. T z() const; { return Z(); }. void SetX(ROOT::Math::CylindricalEta3D<double>::Scalar xx); ============= Specializations for improved speed ==================; (none); ====== Set member functions for coordinates in other systems =======. void SetY(ROOT::Math::CylindricalEta3D<double>::Scalar yy). void SetZ(ROOT::Math::CylindricalEta3D<double>::Scalar zz). void SetR(ROOT::Math::CylindricalEta3D<double>::Scalar r). void SetTheta(ROOT::Math::CylindricalEta3D<double>::Scalar theta). » Last changed: root/mathcore:$Id: CylindricalEta3D.h 24923 2008-07-23 15:43:05Z moneta $ » Last",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__CylindricalEta3D_double_.html:5260,test,test,5260,root/html526/ROOT__Math__CylindricalEta3D_double_.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__CylindricalEta3D_double_.html,1,['test'],['test']
Testability,"const; { return fPhi; }. T X() const; { return fRho*std::cos(fPhi); }. T Y() const; { return fRho*std::sin(fPhi); }. T Z() const. T R() const. T Mag2() const; { return R()*R(); }. T Perp2() const; { return fRho*fRho; }. T Theta() const. void SetRho(double rho); setters (only for data members). set the rho coordinate value keeping eta and phi constant. void SetEta(double eta). set the eta coordinate value keeping rho and phi constant. void SetPhi(double phi). set the phi coordinate value keeping rho and eta constant. void SetXYZ(ROOT::Math::CylindricalEta3D<double>::Scalar xx, ROOT::Math::CylindricalEta3D<double>::Scalar yy, ROOT::Math::CylindricalEta3D<double>::Scalar zz). set all values using cartesian coordinates. void Scale(double a). scale by a scalar quantity a --; for cylindrical eta coords, as long as a >= 0, only rho changes!. Negate(). bool operator==(const ROOT::Math::CylindricalEta3D<double>& rhs) const. Exact component-by-component equality; Note: Peculiar representaions of the zero vector such as (0,1,0) will; not test as equal to one another. bool operator!=(const ROOT::Math::CylindricalEta3D<double>& rhs) const; {return !(operator==(rhs));}. T x() const; ============= Compatibility section ==================; The following make this coordinate system look enough like a CLHEP; vector that an assignment member template can work with either. { return X();}. T y() const; { return Y();}. T z() const; { return Z(); }. void SetX(ROOT::Math::CylindricalEta3D<double>::Scalar xx); ============= Specializations for improved speed ==================; (none); ====== Set member functions for coordinates in other systems =======. void SetY(ROOT::Math::CylindricalEta3D<double>::Scalar yy). void SetZ(ROOT::Math::CylindricalEta3D<double>::Scalar zz). void SetR(ROOT::Math::CylindricalEta3D<double>::Scalar r). void SetTheta(ROOT::Math::CylindricalEta3D<double>::Scalar theta). » Last changed: root/mathcore:$Id: CylindricalEta3D.h 31938 2009-12-18 14:49:38Z moneta $ » Last",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__CylindricalEta3D_double_.html:5260,test,test,5260,root/html528/ROOT__Math__CylindricalEta3D_double_.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__CylindricalEta3D_double_.html,3,['test'],['test']
Testability,"const;  ; bool exists (std::string histoName);  for monitoring ;  ; double factorWeightDecay () const;  get the weight-decay factor ;  ; virtual bool hasConverged (double testError);  has this training converged already? ;  ; double learningRate () const;  get the learning rate ;  ; size_t maxConvergenceCount () const;  returns the max convergence count so far ;  ; size_t minError () const;  returns the smallest error so far ;  ; MinimizerType minimizerType () const;  which minimizer shall be used (e.g. SGD) ;  ; double momentum () const;  get the momentum (e.g. for SGD) ;  ; void pads (int numPads);  preparation for monitoring ;  ; void plot (std::string histoName, std::string options, int pad, EColor color);  for monitoring ;  ; EnumRegularization regularization () const;  some regularization of the DNN is turned on? ;  ; int repetitions () const;  how many steps have to be gone until the batch is changed ;  ; template<typename Iterator > ; void setDropOut (Iterator begin, Iterator end, size_t _dropRepetitions);  set the drop-out configuration (layer-wise) ;  ; void setMonitoring (std::shared_ptr< Monitoring > ptrMonitoring);  prepared for monitoring ;  ; virtual void setProgressLimits (double minProgress=0, double maxProgress=100);  ; virtual void startTraining ();  ; size_t testRepetitions () const;  how often is the test data tested ;  ; bool useMultithreading () const;  is multithreading turned on? ;  . Public Attributes; std::vector< double > m_ams;  ; double m_cutValue;  ; std::string m_fileNameNetConfig;  ; std::string m_fileNameResult;  ; std::vector< double > m_input;  ; std::vector< double > m_output;  ; std::vector< Pattern > * m_pResultPatternContainer;  ; size_t m_scaleToNumEvents;  ; std::vector< double > m_significances;  ; double m_sumOfBkgWeights;  ; double m_sumOfSigWeights;  ; std::vector< double > m_targets;  ; std::vector< double > m_weights;  ;  Public Attributes inherited from TMVA::DNN::Settings; size_t count_dE;  ; size_t count_E;  ; size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html:4717,test,testRepetitions,4717,doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html,3,['test'],"['test', 'testRepetitions', 'tested']"
Testability,"const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddition.html:45768,log,logging,45768,doc/master/classRooAddition.html,https://root.cern,https://root.cern/doc/master/classRooAddition.html,42,['log'],['logging']
Testability,"constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGeoBBox::SetBoxDimensions(Double_t dx, Double_t dy, Double_t dz, Double_t* origin = 0); voidTGeoBBox::SetBoxPoints(Double_t* points) const; virtual voidTGeoBBox::SetDimensions(Double_t* param); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoShape::SetId(Int_t id); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPoints(Double_t* points) const; virtual voidSetPoints(Float_t* points) const; voidTGeoShape::SetRuntime(Bool_t flag = kTRUE); voidSetScale(TGeoScale* scale); virtual voidSetSegsAndPols(TBuffer3D& buffer) const; voidTGeoShape::SetShapeBit(UInt_t f); voidTGeoShape::SetShapeBit(UInt_t f, Bool_t set); virtual voidTNamed::SetTitle(const char* title = """")MENU ; static voidTGeoShape::SetTransform(TGeoMatrix* matrix); virtual voidTObject::SetUniqueID(UInt_t uid); Int_tTGeoShape::ShapeDistancetoPrimitive(Int_t numpoints, Int_t px, Int_t py) const; virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidTGeoBBox::Sizeof3D() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTGeoShape::TestShapeBit(UInt_t f) const; Int_tTGeoShape::TestShapeBits(UInt_t f) const; static Double_tTGeoShape::Tolerance(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoScaledShape.html:9159,Test,TestBit,9159,root/html528/TGeoScaledShape.html,https://root.cern,https://root.cern/root/html528/TGeoScaledShape.html,12,['Test'],"['TestBit', 'TestBits', 'TestShapeBit', 'TestShapeBits']"
Testability,"constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetEnabled(Bool_t e); voidSetNormalise(Bool_t n); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOutput(TMVA::Event* event, vector<Float_t>& output, vector<Char_t>& mask, const TMVA::Event* oldEvent = 0, Bool_t backTransform = kFALSE) const; voidSetOutputDataSetInfo(TMVA::DataSetInfo* outputDsi); voidSetTMVAVersion(TMVA::TMVAVersion_t v); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetUseSignalTransform(Bool_t e = kTRUE); virtual voidShowMembers(TMemberInspector& insp) const; const vector<TMVA::VariableInfo>&Spectators() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const vector<TMVA::VariableInfo>&Targets() const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidToggleInputSortOrder(Bool_t sortOrder); virtual const TMVA::Event*Transform(const TMVA::Event*const, Int_t cls) const; virtual voidTObject::UseCurrentStyle(); Bool_tUseSignalTransform() const; const vector<TMVA::VariableInfo>&Variables() const; TMVA::VariableTransformBaseVariableTransformBase(const TMVA::VariableTransformBase&); TMVA::VariableTransformBaseVariableTransformBase(TMVA::DataSetInfo& dsi, TMVA::Types::EVariableTransform tf, const TString& trfName); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidWriteTransformationToStream(ostream& o) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableTransformBase.html:5970,Test,TestBit,5970,root/html602/TMVA__VariableTransformBase.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableTransformBase.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"constReturn the type of the rule.Definition TSchemaRule.cxx:764; ROOT::TSchemaRule::ConflictsBool_t Conflicts(const TSchemaRule *rule) constCheck if this rule conflicts with the given one.Definition TSchemaRule.cxx:772; ROOT::TSchemaRule::operator=TSchemaRule & operator=(const TSchemaRule &rhs)Copy operator.Definition TSchemaRule.cxx:125; ROOT::TSchemaRule::SetTargetClassvoid SetTargetClass(const TString &classname)Set the target class of this rule (i.e. the in memory class).Definition TSchemaRule.cxx:474; ROOT::TSchemaRule::ReadRawFuncPtr_tvoid(* ReadRawFuncPtr_t)(char *, TBuffer &)Definition TSchemaRule.h:41; ROOT::TSchemaRule::GetSourceClassconst char * GetSourceClass() constGet the source class of this rule (i.e. the onfile class).Definition TSchemaRule.cxx:466; ROOT::TSchemaRule::fTargetTString fTargetDefinition TSchemaRule.h:107; ROOT::TSchemaRule::~TSchemaRulevirtual ~TSchemaRule()Destructor.Definition TSchemaRule.cxx:100; ROOT::TSchemaRule::TestChecksumBool_t TestChecksum(UInt_t checksum) constCheck if given checksum is defined in this rule.Definition TSchemaRule.cxx:437; ROOT::TSchemaRule::SetVersionBool_t SetVersion(const TString &version)Set the version string - returns kFALSE if the format is incorrect.Definition TSchemaRule.cxx:381; ROOT::TSchemaRule::fIncludeTString fIncludeSource data member vector (for searching purposes)Definition TSchemaRule.h:111; ROOT::TSchemaRule::fTargetVectTObjArray * fTargetVectDefinition TSchemaRule.h:108; ROOT::TSchemaRule::fChecksumTString fChecksumSource version vector (for searching purposes)Definition TSchemaRule.h:103; ROOT::TSchemaRule::fTargetClassTString fTargetClassDefinition TSchemaRule.h:106; ROOT::TSchemaRule::SetSourcevoid SetSource(const TString &source)Set the list of source members.Definition TSchemaRule.cxx:538; ROOT::TSchemaRule::IsRenameRuleBool_t IsRenameRule() constReturn kTRUE if the rule is a strict renaming of the class to a new name.Definition TSchemaRule.cxx:756; ROOT::TSchemaRule::SetAttributesvoi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRule_8cxx_source.html:42236,Test,TestChecksum,42236,doc/master/TSchemaRule_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRule_8cxx_source.html,2,['Test'],['TestChecksum']
Testability,"constexpr Double_t C()Velocity of light in .Definition TMath.h:114; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::QuietNaNDouble_t QuietNaN()Returns a quiet NaN as defined by IEEE 754.Definition TMath.h:902; TMath::FloorDouble_t Floor(Double_t x)Rounds x downward, returning the largest integral value that is not greater than x.Definition TMath.h:680; TMath::Kconstexpr Double_t K()Boltzmann's constant in : .Definition TMath.h:247; TMath::Sqrt2constexpr Double_t Sqrt2()Definition TMath.h:86; TMath::Econstexpr Double_t E()Base of natural log: .Definition TMath.h:93; TMath::Sigmaconstexpr Double_t Sigma()Stefan-Boltzmann constant in : .Definition TMath.h:270; TMath::Hconstexpr Double_t H()Planck's constant in : .Definition TMath.h:188; TMath::LogEconstexpr Double_t LogE()Base-10 log of e (to convert ln to log)Definition TMath.h:107; TMath::Ln10constexpr Double_t Ln10()Natural log of 10 (to convert log to ln)Definition TMath.h:100; TMath::EulerGammaconstexpr Double_t EulerGamma()Euler-Mascheroni Constant.Definition TMath.h:332; TMath::Piconstexpr Double_t Pi()Definition TMath.h:37; TMath::Rconstexpr Double_t R()Universal gas constant ( ) inDefinition TMath.h:302; TMath::Log10Double_t Log10(Double_t x)Returns the common (base-10) logarithm of x.Definition TMath.h:762; TMath::InfinityDouble_t Infinity()Returns an infinity as defined by the IEEE standard.Definition TMath.h:917; v@ vDefinition rootcling_impl.cxx:3699; TFormulaParamOrder::operator()bool operator()(const TString &a, const TString &b) constDefinition TFormula.cxx:375; TInterpreter::CallFuncIFacePtr_t::Generic_tvoid(* Generic_t)(void *, int, void **, void *)Definition TInterpreter.h:90; TInterpreter::CallFuncIFacePtr_t::fGenericGeneric_t fGenericDefinition TInterpreter.h:105; mTMarker mDefinition textangle.C:8; TFormula.h. histhistsrcTFormula.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:171465,log,logarithm,171465,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['log'],['logarithm']
Testability,"constexpr Version_t TMVA::LogInterval::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 106 of file LogInterval.h. ◆ DeclFileName(). static const char * TMVA::LogInterval::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 106 of file LogInterval.h. ◆ GetElement(). Double_t TMVA::LogInterval::GetElement ; (; Int_t ; bin); const. virtual . calculates the value of the ""number"" bin in a discrete interval. ; Parameters:; Double_t position . Reimplemented from TMVA::Interval.; Definition at line 113 of file LogInterval.cxx. ◆ GetMax(). virtual Double_t TMVA::LogInterval::GetMax ; (; ); const. inlinevirtual . Reimplemented from TMVA::Interval.; Definition at line 93 of file LogInterval.h. ◆ GetMean(). Double_t TMVA::LogInterval::GetMean ; (; ); const. virtual . Reimplemented from TMVA::Interval.; Definition at line 158 of file LogInterval.cxx. ◆ GetMin(). virtual Double_t TMVA::LogInterval::GetMin ; (; ); const. inlinevirtual . Reimplemented from TMVA::Interval.; Definition at line 92 of file LogInterval.h. ◆ GetNbins(). virtual Int_t TMVA::LogInterval::GetNbins ; (; ); const. inlinevirtual . Reimplemented from TMVA::Interval.; Definition at line 95 of file LogInterval.h. ◆ GetRndm(). Double_t TMVA::LogInterval::GetRndm ; (; TRandom3 & ; rnd); const. virtual . get uniformly distributed number within interval ; Reimplemented from TMVA::Interval.; Definition at line 144 of file LogInterval.cxx. ◆ GetStepSize(). Double_t TMVA::LogInterval::GetStepSize ; (; Int_t ; iBin = 0); const. virtual . returns the step size between the numbers of a ""discrete LogInterval"" ; Reimplemented from TMVA::Interval.; Definition at line 129 of file LogInterval.cxx. ◆ GetWidth(). Double_t TMVA::LogInterval::GetWidth ; (; ); const. virtual . Reimplemented from TMVA::Interval.; Definition at line 151 of file LogInterval.cxx. ◆ IsA(). virtual TClass * TMVA::LogInterval::IsA ; (; ); const. in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1LogInterval.html:5154,Log,LogInterval,5154,doc/master/classTMVA_1_1LogInterval.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1LogInterval.html,1,['Log'],['LogInterval']
Testability,"constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Lognormal distribution. ;  ; double evaluate () const override;  ln(k)<1 would correspond to sigma < 0 in the parameterization resulting by transforming a normal random variable in its standard parameterization to a lognormal random variable => treat ln(k) as -ln(k) for k<1 ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _nor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLognormal.html:59513,Log,Lognormal,59513,doc/master/classRooLognormal.html,https://root.cern,https://root.cern/doc/master/classRooLognormal.html,1,['Log'],['Lognormal']
Testability,"constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Private Types; enum  EAlign { ;   kNone; , kTLeft; , kTCenter; , kTRight; , ;   kMLeft; , kMCenter; , kMRight; , kBLeft; , ;   kBCenter; , kBRight. };  . Private Member Functions; void Align (void);  Compute alignment variables. ;  ; void DrawImage (FT_Bitmap *source, ULong_t fore, ULong_t back, RXImage *xim, Int_t bx, Int_t by);  Draw FT_Bitmap bitmap to xim image at position bx,by using specified foreground color. ;  ; RXImage * GetBackground (Int_t x, Int_t y, UInt_t w, UInt_t h);  Get the background of the current window in an XImage. ;  ; Bool_t IsVisible (Int_t x, Int_t y, UInt_t w, UInt_t h);  Test if there is really something to render. ;  ; void RenderString (Int_t x, Int_t y, ETextMode mode);  Perform the string rendering in the pad. ;  . Private Attributes; FT_Vector fAlign;  alignment vector ;  . Additional Inherited Members;  Public Types inherited from TVirtualX; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGX11TTF.html:46882,Test,Test,46882,doc/master/classTGX11TTF.html,https://root.cern,https://root.cern/doc/master/classTGX11TTF.html,1,['Test'],['Test']
Testability,"constructed via the; new operator or via the New() method. To remove elements from; the clones array use Remove() or RemoveAt(). TObject * operator[](Int_t idx) const; Return the object at position idx. Returns 0 if idx is out of bounds. TObject * New(Int_t idx); Create an object of type fClass with the default ctor at the specified; index. Returns 0 in case of error. void AbsorbObjects(TClonesArray* tc); Directly move the object pointers from tc without cloning (copying).; This TClonesArray takes over ownership of all of tc's object; pointers. The tc array is left empty upon return. void AbsorbObjects(TClonesArray* tc, Int_t idx1, Int_t idx2); Directly move the range of object pointers from tc without cloning; (copying).; This TClonesArray takes over ownership of all of tc's object pointers; from idx1 to idx2. The tc array is re-arranged by return. void MultiSort(Int_t nTCs, TClonesArray** tcs, Int_t upto = kMaxInt); Sort multiple TClonesArrays simultaneously with this array.; If objects in array are sortable (i.e. IsSortable() returns true; for all objects) then sort array. TObject * AddrAt(Int_t idx). TClass * GetClass() const; { return fClass; }. void AddFirst(TObject* ); { MayNotUse(""AddFirst""); }. void AddLast(TObject* ); { MayNotUse(""AddLast""); }. void AddAt(TObject* , Int_t ); { MayNotUse(""AddAt""); }. void AddAtAndExpand(TObject* , Int_t ); { MayNotUse(""AddAtAndExpand""); }. Int_t AddAtFree(TObject* ); { MayNotUse(""AddAtFree""); return 0; }. void AddAfter(const TObject* , TObject* ); { MayNotUse(""AddAfter""); }. void AddBefore(const TObject* , TObject* ); { MayNotUse(""AddBefore""); }. Bool_t CanBypassStreamer() const; { return TestBit(kBypassStreamer); }. » Author: Rene Brun 11/02/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TClonesArray.html:24592,Test,TestBit,24592,root/html534/TClonesArray.html,https://root.cern,https://root.cern/root/html534/TClonesArray.html,1,['Test'],['TestBit']
Testability,"constructed via the; new operator or via the New() method. To remove elements from; the clones array use Remove() or RemoveAt(). TObject * operator[](Int_t idx) const; Return the object at position idx. Returns 0 if idx is out of bounds. TObject * New(Int_t idx); Create an object of type fClass with the default ctor at the specified; index. Returns 0 in case of error. void AbsorbObjects(TClonesArray* tc); Directly move the object pointers from tc without cloning (copying).; This TClonesArray takes over ownership of all of tc's object; pointers. The tc array is left empty upon return. void AbsorbObjects(TClonesArray* tc, Int_t idx1, Int_t idx2); Directly move the range of object pointers from tc without cloning; (copying).; This TClonesArray takes over ownership of all of tc's object pointers; from idx1 to idx2. The tc array is re-arranged by return. void MultiSort(Int_t nTCs, TClonesArray** tcs, Int_t upto = kMaxInt); Sort multiple TClonesArrays simultaneously with this array.; If objects in array are sortable (i.e. IsSortable() returns true; for all objects) then sort array. TObject * AddrAt(Int_t idx). TClass * GetClass() const; { return fClass; }. void AddFirst(TObject* ); { MayNotUse(""AddFirst""); }. void AddLast(TObject* ); { MayNotUse(""AddLast""); }. void AddAt(TObject* , Int_t ); { MayNotUse(""AddAt""); }. void AddAtAndExpand(TObject* , Int_t ); { MayNotUse(""AddAtAndExpand""); }. Int_t AddAtFree(TObject* ); { MayNotUse(""AddAtFree""); return 0; }. void AddAfter(const TObject* , TObject* ); { MayNotUse(""AddAfter""); }. void AddBefore(const TObject* , TObject* ); { MayNotUse(""AddBefore""); }. Bool_t CanBypassStreamer() const; { return TestBit(kBypassStreamer); }. » Author: Rene Brun 11/02/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id$ » Last generated: 2015-06-02 15:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TClonesArray.html:25606,Test,TestBit,25606,root/html604/TClonesArray.html,https://root.cern,https://root.cern/root/html604/TClonesArray.html,1,['Test'],['TestBit']
Testability,"constructed via the; new operator or via the New() method. To remove elements from; the clones array use Remove() or RemoveAt(). TObject * operator[](Int_t idx) const; Return the object at position idx. Returns 0 if idx is out of bounds. TObject * New(Int_t idx); Create an object of type fClass with the default ctor at the specified; index. Returns 0 in case of error. void AbsorbObjects(TClonesArray* tc); Directly move the object pointers from tc without cloning (copying).; This TClonesArray takes over ownership of all of tc's object; pointers. The tc array is left empty upon return. void AbsorbObjects(TClonesArray* tc, Int_t idx1, Int_t idx2); Directly move the range of object pointers from tc without cloning; (copying).; This TClonesArray takes over ownership of all of tc's object pointers; from idx1 to idx2. The tc array is re-arranged by return. void MultiSort(Int_t nTCs, TClonesArray** tcs, Int_t upto = kMaxInt); Sort multiple TClonesArrays simultaneously with this array.; If objects in array are sortable (i.e. IsSortable() returns true; for all objects) then sort array. TObject * AddrAt(Int_t idx). TClass * GetClass() const; { return fClass; }. void AddFirst(TObject* ); { MayNotUse(""AddFirst""); }. void AddLast(TObject* ); { MayNotUse(""AddLast""); }. void AddAt(TObject* , Int_t ); { MayNotUse(""AddAt""); }. void AddAtAndExpand(TObject* , Int_t ); { MayNotUse(""AddAtAndExpand""); }. Int_t AddAtFree(TObject* ); { MayNotUse(""AddAtFree""); return 0; }. void AddAfter(const TObject* , TObject* ); { MayNotUse(""AddAfter""); }. void AddBefore(const TObject* , TObject* ); { MayNotUse(""AddBefore""); }. Bool_t CanBypassStreamer() const; { return TestBit(kBypassStreamer); }. » Author: Rene Brun 11/02/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/cont:$Id$ » Last generated: 2015-06-30 14:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClonesArray.html:25318,Test,TestBit,25318,root/html602/TClonesArray.html,https://root.cern,https://root.cern/root/html602/TClonesArray.html,1,['Test'],['TestBit']
Testability,"constructor.Definition TGraph.cxx:108; TGraph::CopyPointsvirtual Bool_t CopyPoints(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)Copy points from fX and fY to arrays[0] and arrays[1] or to fX and fY if arrays == 0 and ibegin !...Definition TGraph.cxx:779; TGraph::fMaximumDouble_t fMaximumMaximum value for plotting along y.Definition TGraph.h:52; TGraph::GetErrorXhighvirtual Double_t GetErrorXhigh(Int_t bin) constIt always returns a negative value.Definition TGraph.cxx:1378; TGraph::operator=TGraph & operator=(const TGraph &)Equal operator for this graph.Definition TGraph.cxx:232; TGraph::InitPolynomvirtual void InitPolynom(Double_t xmin=0, Double_t xmax=0)Compute Initial values of parameters for a polynom.Definition TGraph.cxx:1679; TGraph::GetErrorXvirtual Double_t GetErrorX(Int_t bin) constIt always returns a negative value. Real implementation in TGraphErrors.Definition TGraph.cxx:1361; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TListA doubly linked list.Definition TList.h:38; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TSplineBase class for spline implementation containing the Draw/Paint methods.Definition TSpline.h:31; TStringBasic string class.Definition TString.h:139; TVectorTTVectorT.Definition TVectorT.h:27; bool; double; int; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; grTGraphErrors * grDefinition legend1.C:25; f1TF1 * f1Definition legend1.C:11; Drawth1 Draw(); mTMarker mDefinition textangle.C:8. histhistincTGraph.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8h_source.html:31012,Test,TestBit,31012,doc/master/TGraph_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8h_source.html,1,['Test'],['TestBit']
Testability,"contains a set of tests useful when developing a neural network. ; It allows you to check for unneeded variables, and to control the network structure. ; Definition at line 25 of file TMLPAnalyzer.h. Public Member Functions;  TMLPAnalyzer (TMultiLayerPerceptron &net);  ;  TMLPAnalyzer (TMultiLayerPerceptron *net);  ;  ~TMLPAnalyzer () override;  Destructor. ;  ; void CheckNetwork ();  Gives some information about the network in the terminal. ;  ; void DrawDInput (Int_t i);  Draws the distribution (on the test sample) of the impact on the network output of a small variation of the ith input. ;  ; void DrawDInputs ();  Draws the distribution (on the test sample) of the impact on the network output of a small variation of each input. ;  ; void DrawNetwork (Int_t neuron, const char *signal, const char *bg);  Draws the distribution of the neural network (using ith neuron). ;  ; TProfile * DrawTruthDeviation (Int_t outnode=0, Option_t *option="""");  Create a profile of the difference of the MLP output minus the true value for a given output node outnode, vs the true value for outnode, for all test data events. ;  ; TProfile * DrawTruthDeviationInOut (Int_t innode, Int_t outnode=0, Option_t *option="""");  Creates a profile of the difference of the MLP output outnode minus the true value of outnode vs the input value innode, for all test data events. ;  ; THStack * DrawTruthDeviationInsOut (Int_t outnode=0, Option_t *option="""");  Creates a profile of the difference of the MLP output outnode minus the true value of outnode vs the input value, stacked for all inputs, for all test data events. ;  ; THStack * DrawTruthDeviations (Option_t *option="""");  Creates TProfiles of the difference of the MLP output minus the true value vs the true value, one for each output, filled with the test data events. ;  ; void GatherInformations ();  Collect information about what is useful in the network. ;  ; TTree * GetIOTree () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMLPAnalyzer.html:1431,test,test,1431,doc/master/classTMLPAnalyzer.html,https://root.cern,https://root.cern/doc/master/classTMLPAnalyzer.html,1,['test'],['test']
Testability,"contents of this profile.; 763///; 764/// The array stats must be correctly dimensioned in the calling program.; 765///; 766/// - stats[0] = sumw; 767/// - stats[1] = sumw2; 768/// - stats[2] = sumwx; 769/// - stats[3] = sumwx2; 770/// - stats[4] = sumwy; 771/// - stats[5] = sumwy2; 772/// - stats[6] = sumwxy; 773/// - stats[7] = sumwz; 774/// - stats[8] = sumwz2; 775/// - stats[9] = sumwxz; 776/// - stats[10]= sumwyz; 777/// - stats[11]= sumwt; 778/// - stats[12]= sumwt2; 779///; 780/// If no axis-subrange is specified (via TAxis::SetRange), the array stats; 781/// is simply a copy of the statistics quantities computed at filling time.; 782/// If a sub-range is specified, the function recomputes these quantities; 783/// from the bin contents in the current axis range.; 784 ; 785void TProfile3D::GetStats(Double_t *stats) const; 786{; 787 if (fBuffer) ((TProfile3D*)this)->BufferEmpty();; 788 ; 789 // Loop on bins; 790 if ( (fTsumw == 0 /* && fEntries > 0 */) || fXaxis.TestBit(TAxis::kAxisRange) || fYaxis.TestBit(TAxis::kAxisRange)) {; 791 ; 792 // check for labels axis . In that case corresponding statistics do not make sense and it is set to zero; 793 Bool_t labelXaxis = ((const_cast<TAxis &>(fXaxis)).GetLabels() && fXaxis.CanExtend());; 794 Bool_t labelYaxis = ((const_cast<TAxis &>(fYaxis)).GetLabels() && fYaxis.CanExtend());; 795 Bool_t labelZaxis = ((const_cast<TAxis &>(fZaxis)).GetLabels() && fZaxis.CanExtend());; 796 ; 797 Int_t bin, binx, biny,binz;; 798 Double_t w, w2;; 799 Double_t x,y,z;; 800 for (bin=0;bin<kNstat;bin++) stats[bin] = 0;; 801 if (!fBinEntries.fArray) return;; 802 for (binz=fZaxis.GetFirst();binz<=fZaxis.GetLast();binz++) {; 803 z = (!labelZaxis) ? fZaxis.GetBinCenter(binz) : 0;; 804 for (biny=fYaxis.GetFirst();biny<=fYaxis.GetLast();biny++) {; 805 y = (!labelYaxis) ? fYaxis.GetBinCenter(biny) : 0;; 806 for (binx=fXaxis.GetFirst();binx<=fXaxis.GetLast();binx++) {; 807 bin = GetBin(binx,biny,binz);; 808 w = fBinEntries.fArray[bin];; 809 w2 = (f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:27673,Test,TestBit,27673,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['Test'],['TestBit']
Testability,"copy constructor. TGeoPatternFinder& operator=(const TGeoPatternFinder& ); assignment operator. ~TGeoPatternFinder(); Destructor. Int_t GetCurrent(); Return current index. TGeoMatrix* GetMatrix(); Return current matrix. Int_t GetNext() const; Get index of next division. void SetNext(Int_t index); Set index of next division. TGeoNode * CdNext(); Make next node (if any) current. void SetRange(Double_t start, Double_t step, Int_t ndivisions); Set division range. Use this method only when dividing an assembly. ThreadData_t& GetThreadData() const. TGeoMatrix* CreateMatrix() const; methods. void cd(Int_t ); {}. TGeoNode * FindNode(Double_t* , const Double_t* = 0); {return 0;}. Int_t GetByteCount() const; {return 36;}. Int_t GetDivIndex(); {return fDivIndex;}. Int_t GetDivAxis(); {return 1;}. Int_t GetNdiv() const; {return fNdivisions;}. TGeoNode * GetNodeOffset(Int_t idiv); {return fVolume->GetNode(fDivIndex+idiv);}. Double_t GetStart() const; {return fStart;}. Double_t GetStep() const; {return fStep;}. Double_t GetEnd() const; {return fEnd;}. TGeoVolume * GetVolume() const; {return fVolume;}. Bool_t IsOnBoundary(const Double_t* ) const; {return kFALSE;}. Bool_t IsReflected() const; {return TObject::TestBit(kPatternReflected);}. Bool_t IsSpacedOut() const; {return TObject::TestBit(kPatternSpacedOut);}. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE). void Reflect(Bool_t flag = kTRUE); {TObject::SetBit(kPatternReflected,flag);}. void SetDivIndex(Int_t index); {fDivIndex = index;}. void SetSpacedOut(Bool_t flag); {TObject::SetBit(kPatternSpacedOut,flag);}. void SetVolume(TGeoVolume* vol); {fVolume = vol;}. void UpdateMatrix(Int_t , TGeoHMatrix& ) const; {}. » Author: Andrei Gheata 30/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-02 16:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoPatternFinder.html:9819,Test,TestBit,9819,root/html604/TGeoPatternFinder.html,https://root.cern,https://root.cern/root/html604/TGeoPatternFinder.html,2,['Test'],['TestBit']
Testability,"copy constructor. TGeoPatternFinder& operator=(const TGeoPatternFinder& ); assignment operator. ~TGeoPatternFinder(); Destructor. Int_t GetCurrent(); Return current index. TGeoMatrix* GetMatrix(); Return current matrix. Int_t GetNext() const; Get index of next division. void SetNext(Int_t index); Set index of next division. TGeoNode * CdNext(); Make next node (if any) current. void SetRange(Double_t start, Double_t step, Int_t ndivisions); Set division range. Use this method only when dividing an assembly. ThreadData_t& GetThreadData() const. TGeoMatrix* CreateMatrix() const; methods. void cd(Int_t ); {}. TGeoNode * FindNode(Double_t* , const Double_t* = 0); {return 0;}. Int_t GetByteCount() const; {return 36;}. Int_t GetDivIndex(); {return fDivIndex;}. Int_t GetDivAxis(); {return 1;}. Int_t GetNdiv() const; {return fNdivisions;}. TGeoNode * GetNodeOffset(Int_t idiv); {return fVolume->GetNode(fDivIndex+idiv);}. Double_t GetStart() const; {return fStart;}. Double_t GetStep() const; {return fStep;}. Double_t GetEnd() const; {return fEnd;}. TGeoVolume * GetVolume() const; {return fVolume;}. Bool_t IsOnBoundary(const Double_t* ) const; {return kFALSE;}. Bool_t IsReflected() const; {return TObject::TestBit(kPatternReflected);}. Bool_t IsSpacedOut() const; {return TObject::TestBit(kPatternSpacedOut);}. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE). void Reflect(Bool_t flag = kTRUE); {TObject::SetBit(kPatternReflected,flag);}. void SetDivIndex(Int_t index); {fDivIndex = index;}. void SetSpacedOut(Bool_t flag); {TObject::SetBit(kPatternSpacedOut,flag);}. void SetVolume(TGeoVolume* vol); {fVolume = vol;}. void UpdateMatrix(Int_t , TGeoHMatrix& ) const; {}. » Author: Andrei Gheata 30/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-30 15:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternFinder.html:9819,Test,TestBit,9819,root/html602/TGeoPatternFinder.html,https://root.cern,https://root.cern/root/html602/TGeoPatternFinder.html,2,['Test'],['TestBit']
Testability,"copy if want to preserve original data; 346 The data sets must not contain negative values. IN case it does,; 347 an empty data set is returned; 348 */; 349 BinData & BinData::LogTransform(); 350 { // apply log transform on the bin data values; 351 ; 352 if ( fWrapped ); 353 {; 354 UnWrap();; 355 }; 356 ; 357 if ( kNoError == fErrorType ); 358 {; 359 fDataError.resize(fNPoints + FitData::VectorPadding(fNPoints));; 360 fDataErrorPtr = fDataError.empty() ? nullptr : &fDataError.front();; 361 }; 362 ; 363 for ( unsigned int i=0; i < fNPoints; i++ ); 364 {; 365 double val = fData[i];; 366 ; 367 if ( val <= 0 ); 368 {; 369 MATH_ERROR_MSG(""BinData::TransformLog"",""Some points have negative values - cannot apply a log transformation"");; 370 return *this;; 371 }; 372 ; 373 fData[i] = std::log( val );; 374 ; 375 if( kNoError == fErrorType ); 376 {; 377 fDataError[i] = val;; 378 }; 379 else if ( kValueError == fErrorType ); 380 {; 381 fDataError[i]*= val;; 382 }; 383 else if ( kCoordError == fErrorType ); 384 {; 385 fDataError[i]/= val;; 386 }; 387 else if ( kAsymError == fErrorType ); 388 {; 389 fDataErrorHigh[i]/= val;; 390 fDataErrorLow[i]/= val;; 391 }; 392 else; 393 assert(false);; 394 }; 395 ; 396 if ( kNoError == fErrorType ); 397 {; 398 fErrorType = kValueError;; 399 }; 400 ; 401 return *this;; 402 }; 403 ; 404 ; 405 /**; 406 add one dim data with only coordinate and values; 407 */; 408 void BinData::Add( double x, double y ); 409 {; 410 assert( kNoError == fErrorType );; 411 ; 412 assert( !fData.empty() && fDataPtr );; 413 assert( fDataErrorHigh.empty() && !fDataErrorHighPtr );; 414 assert( fDataErrorLow.empty() && !fDataErrorLowPtr );; 415 assert( fDataError.empty() && !fDataErrorPtr );; 416 assert( fCoordErrors.empty() && fCoordErrorsPtr.empty() );; 417 ; 418 fData[ fNPoints ] = y;; 419 ; 420 FitData::Add( x );; 421 fSumContent += y;; 422 }; 423 ; 424 /**; 425 add one dim data with no error in the coordinate (x); 426 in this case store the inverse of the error in th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:11068,log,log,11068,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,5,"['assert', 'log']","['assert', 'log']"
Testability,"cores available.; 741 ; 742### Choosing the number of distributed tasks; 743 ; 744A distributed RDataFrame has internal logic to define in how many chunks the input dataset will be split before sending; 745tasks to the distributed backend. Each task reads and processes one of said chunks. The logic is backend-dependent, but; 746generically tries to infer how many cores are available in the cluster through the connection object. The number of; 747tasks will be equal to the inferred number of cores. There are cases where the connection object of the chosen backend; 748doesn't have information about the actual resources of the cluster. An example of this is when using Dask to connect to; 749a batch system. The client object created at the beginning of the application does not automatically know how many cores; 750will be available during distributed execution, since the jobs are submitted to the batch system after the creation of; 751the connection. In such cases, the logic is to default to process the whole dataset in 2 tasks.; 752 ; 753The number of tasks submitted for distributed execution can be also set programmatically, by providing the optional; 754keyword argument `npartitions` when creating the RDataFrame object. This parameter is accepted irrespectively of the; 755backend used:; 756 ; 757~~~{.py}; 758import ROOT; 759 ; 760# Define correct imports and access the distributed RDataFrame appropriate for the; 761# backend used in the analysis; 762RDataFrame = ROOT.RDF.Experimental.Distributed.[BACKEND].RDataFrame; 763 ; 764if __name__ == ""__main__"":; 765 # The `npartitions` optional argument tells the RDataFrame how many tasks are desired; 766 df = RDataFrame(""mytree"",""myfile.root"", npartitions=NPARTITIONS); 767 # Proceed as usual; 768 df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); 769~~~; 770 ; 771Note that when processing a TTree or TChain dataset, the `npartitions` value should not exceed the number of clusters in; 772the dataset. Th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:43706,log,logic,43706,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['log'],['logic']
Testability,"cores available.; 781 ; 782### Choosing the number of distributed tasks; 783 ; 784A distributed RDataFrame has internal logic to define in how many chunks the input dataset will be split before sending; 785tasks to the distributed backend. Each task reads and processes one of said chunks. The logic is backend-dependent, but; 786generically tries to infer how many cores are available in the cluster through the connection object. The number of; 787tasks will be equal to the inferred number of cores. There are cases where the connection object of the chosen backend; 788doesn't have information about the actual resources of the cluster. An example of this is when using Dask to connect to; 789a batch system. The client object created at the beginning of the application does not automatically know how many cores; 790will be available during distributed execution, since the jobs are submitted to the batch system after the creation of; 791the connection. In such cases, the logic is to default to process the whole dataset in 2 tasks.; 792 ; 793The number of tasks submitted for distributed execution can be also set programmatically, by providing the optional; 794keyword argument `npartitions` when creating the RDataFrame object. This parameter is accepted irrespectively of the; 795backend used:; 796 ; 797~~~{.py}; 798import ROOT; 799 ; 800# Define correct imports and access the distributed RDataFrame appropriate for the; 801# backend used in the analysis; 802RDataFrame = ROOT.RDF.Experimental.Distributed.[BACKEND].RDataFrame; 803 ; 804if __name__ == ""__main__"":; 805 # The `npartitions` optional argument tells the RDataFrame how many tasks are desired; 806 df = RDataFrame(""mytree"",""myfile.root"", npartitions=NPARTITIONS); 807 # Proceed as usual; 808 df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); 809~~~; 810 ; 811Note that when processing a TTree or TChain dataset, the `npartitions` value should not exceed the number of clusters in; 812the dataset. Th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:45346,log,logic,45346,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['log'],['logic']
Testability,"corresponding to that entry (can be obtained; 1464/// from `branch->GetBranchCount()`).; 1465///; 1466/// \note This interface is not meant to be exposed to end users, but rather it should; 1467/// be wrapped by higher-level interfaces.; 1468///; 1469/// \note See TBranch::GetEntriesSerialized() for an alternative that does not; 1470/// perform byte swapping (useful to save one pass over data in some cases).; 1471///; 1472Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); 1473{; 1474 // TODO: eventually support multiple leaves.; 1475 if (R__unlikely(fNleaves != 1)) return -1;; 1476 TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));; 1477 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kExternal)) {; 1478 return -1;; 1479 }; 1480 ; 1481 // Remember which entry we are reading.; 1482 fReadEntry = entry;; 1483 ; 1484 bool enabled = !TestBit(kDoNotProcess);; 1485 if (R__unlikely(!enabled)) return -1;; 1486 TBasket *basket = nullptr;; 1487 Long64_t first;; 1488 Int_t result = GetBasketAndFirst(basket, first, &user_buf);; 1489 if (R__unlikely(result < 0)) return -1;; 1490 // Only support reading from full clusters.; 1491 if (R__unlikely(entry != first)) {; 1492 //printf(""Failed to read from full cluster; first entry is %ld; requested entry is %ld.\n"", first, entry);; 1493 return -1;; 1494 }; 1495 ; 1496 basket->PrepareBasket(entry);; 1497 TBuffer* buf = basket->GetBufferRef();; 1498 ; 1499 // Test for very old ROOT files.; 1500 if (R__unlikely(!buf)) {; 1501 Error(""GetBulkEntries"", ""Failed to get a new buffer.\n"");; 1502 return -1;; 1503 }; 1504 // Test for displacements, which aren't supported in fast mode.; 1505 if (R__unlikely(basket->GetDisplacement())) {; 1506 Error(""GetBulkEntries"", ""Basket has displacement.\n"");; 1507 return -1;; 1508 }; 1509 ; 1510 if (&user_buf != buf) {; 1511 // The basket was already in memory and might (and might not) be backed by persistent; 1512 // storage.; 1513 R__ASSERT(result == fReadBasket);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:53319,Test,TestBit,53319,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,1,['Test'],['TestBit']
Testability,"course Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 0. Setting up ROOT. Downloading; If you don't have ROOT yet, download it! We have binaries but you can also build it yourself.; Environment Variables; ROOT expects ROOTSYS, PATH and LD_LIBRARY_PATH to be set correctly. If which root does not show anything then use the script that does all of that:; source wherever/root/is/bin/thisroot.sh. Starting ROOT; Now you can start ROOT using root or root -l to suppress the logo. See root --help for more options. . ‹ ROOT 6 Analysis Workshop; up; 1. Extracting an object from a TFile ›. Navigate through this book; 0. Setting up ROOT; 1. Extracting an object from a TFile; 2. Running code in ROOT; 4. Histogramming; 3. Examining a TTree's data; 5. Fitting; 6. Multivariate Analysis; 7. Using the TTreeReader; 8. Efficiency Calculation; 9. Fitting By Coding; 10. Go Parallel!; TutorialSelector.C; 11. Done!. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/0-setting-root.html:2297,log,logo,2297,d/0-setting-root.html,https://root.cern,https://root.cern/d/0-setting-root.html,1,['log'],['logo']
Testability,"cover @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.154263 cHl3=2.95902 cHq3=-2.78828; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=59.1285, denominator=wrap_pdf_Int[pTV]=200921; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.338546 cHl3=0.879879 cHq3=-1.35856; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.372361 cHl3=0.491134 cHq3=-0.886807; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; getLogVal() top-level p.d.f evaluates to NaN @ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html:15434,log,log,15434,doc/master/rf712__lagrangianmorphfit_8C.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html,2,['log'],['log']
Testability,"createExpectedEventsFunc (const RooArgSet *nset) const;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() returns an object that returns the integral. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooAbsReal > createNLL (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Construct representation of -log(L) of PDF with given dataset. ;  ; RooFit::OwningPtr< RooAbsReal > createScanCdf (const RooArgSet &iset, const RooArgSet &nset, Int_t numScanBins, Int_t intOrder);  ; double expectedEvents (const RooArgSet &nset) const;  Return expected number of events to be used in calculation of extended likelihood. ;  ; double extendedTerm (double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;  ; double extendedTerm (double sumEntries, RooArgSet const *nset, double sumEntriesW2=0.0, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; double extendedTerm (RooAbsData const &data, bool weightSquared, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooFitResult > fitTo (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Fit PDF to given dataset. ;  ; virtual RooAbsGenContext * genContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false) const;  Interface function to create a generator context from a p.d.f. ;  ; RooFit::OwningPtr< RooDataSet > generate (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Generate a new d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:5303,log,log,5303,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,2,['log'],['log']
Testability,"cribing this class . ◆ Class_Name(). static const char * TShape::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TShape::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 65 of file TShape.h. ◆ DeclFileName(). static const char * TShape::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 65 of file TShape.h. ◆ FillBuffer3D(). void TShape::FillBuffer3D ; (; TBuffer3D & ; buffer, . Int_t ; reqSections . ); const. protectedvirtual . We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ; Definition at line 211 of file TShape.cxx. ◆ GetBasicColor(). Int_t TShape::GetBasicColor ; (; ); const. protected . Get basic color. ; Definition at line 241 of file TShape.cxx. ◆ GetBuffer3D(). const TBuffer3D & TShape::GetBuffer3D ; (; Int_t ; reqSections); const. virtual . Stub to avoid forcing implementation at this stage. ; Reimplemented in TBRIK, TPCON, TSPHE, TTUBE, TTUBS, and TXTRU.; Definition at line 252 of file TShape.cxx. ◆ GetMaterial(). TMaterial * TShape::GetMaterial ; (; ); const. inline . Definition at line 56 of file TShape.h. ◆ GetNumber(). virtual Int_t TShape::GetNumber ; (; ); const. inlinevirtual . Definition at line 57 of file TShape.h. ◆ GetVisibility(). Int_t TShape::GetVisibility ; (; ); const. inline . Definition at line 58 of file TShape.h. ◆ IsA(). TClass * TShape::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Reimplemented in TSPHE, TTRAP, TTRD1, TTRD2, TTUBE, TTUBS, and TXTRU.; Definition at line 65 of file TShape.h. ◆ operator=(). TShape & TShape::operator= ; (; const TShape & ; ts). assignment operator ; Definition at line 92 of file TShape.cxx. ◆ Paint(). void TShape::Paint ; (; Option_t * ; option = """"). overridevirtual . This method is used only when a shape is painted outside a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTShape.html:18910,Stub,Stub,18910,doc/master/classTShape.html,https://root.cern,https://root.cern/doc/master/classTShape.html,1,['Stub'],['Stub']
Testability,"criminating variable. void AddMulticlassOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void NoErrorCalc(Double_t *const err, Double_t *const errUpper). Double_t GetMvaValue(const TMVA::Event *const ev, Double_t* err = 0, Double_t* errUpper = 0). Bool_t IsSignalLike(). Bool_t IsSignalLike(Double_t mvaVal). void AddClassifierOutput(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void AddClassifierOutputProb(TMVA::Types::ETreeType type); prepare tree branch with the method's discriminating variable. void TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); calculate <sum-of-deviation-squared> of regression output versus ""true"" value from test sample. bias = average deviation; dev = average absolute deviation; rms = rms of deviation. void TestMulticlass(); test multiclass classification. void TestClassification(); initialization. void WriteStateToStream(ostream& tf) const; general method used in writing the header of the weight files where; the used variables, variable transformation type etc. is specified. void AddInfoItem(void* gi, const TString& name, const TString& value) const; xml writing. void AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType). void WriteStateToXML(void* parent) const; general method used in writing the header of the weight files where; the used variables, variable transformation type etc. is specified. void ReadStateFromStream(TFile& rf); write reference MVA distributions (and other information); to a ROOT type weight file. void WriteStateToFile() const; write options and weights to file; note that each one text file for the main configuration information; and one ROOT file for ROOT objects are created. void ReadStateFromFile(); Function to write options and weights to file. void ReadStat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBase.html:23538,Test,TestMulticlass,23538,root/html530/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBase.html,4,"['Test', 'test']","['TestMulticlass', 'test']"
Testability,cros.h;  vector.h;  writemaskedvector.h;  ► sse;  casts.h;  const.h;  const_data.h;  debug.h;  helperimpl.h;  intrinsics.h;  limits.h;  macros.h;  mask.h;  math.h;  shuffle.h;  types.h;  undomacros.h;  vector.h;  vectorhelper.h;  cpuid.h;  global.h;  support.h;  vector.h;  version.h;  ► src;  avx_sorthelper.cpp;  const.cpp;  cpuid.cpp;  support.cpp;  trigonometric.cpp;  ► tests;  arithmetics.cpp;  casts.cpp;  const.h;  convert-sincos-reference.cpp;  deinterleave.cpp;  expandandmerge.cpp;  gather.cpp;  implicit_type_conversion.cpp;  implicit_type_conversion_failures.cpp;  linkTest0.cpp;  linkTest1.cpp;  linkTestLib0.cpp;  linkTestLib1.cpp;  linkTestLib2.cpp;  linkTestLib3.cpp;  load.cpp;  mask.cpp;  math.cpp;  memory.cpp;  scalaraccess.cpp;  scatter.cpp;  sse_blend.cpp;  stlcontainer.cpp;  store.cpp;  supportfunctions.cpp;  swizzles.cpp;  ulp.h;  unittest.h;  utils.cpp;  vectormemoryhelper.h;  makeTest.py;  ► vdt;  ► include;  ► vdt;  asin.h;  atan.h;  atan2.h;  cos.h;  exp.h;  inv.h;  log.h;  sin.h;  sincos.h;  sqrt.h;  tan.h;  vdtcore_common.h;  vdtMath.h;  ► tests;  stressVdt.cxx;  ► misc;  ► memstat;  ► inc;  LinkDef.h;  TMemStat.h;  TMemStatBacktrace.h;  TMemStatDef.h;  TMemStatHelpers.h;  TMemStatHook.h;  TMemStatMng.h;  ► src;  TMemStat.cxx;  TMemStatBacktrace.cxx;  TMemStatHelpers.cxx;  TMemStatHook.cxx;  TMemStatMng.cxx;  ► test;  leak_test.C;  run.C;  ► table;  ► inc;  LinkDef.h;  tableDescriptor.h;  TCernLib.h;  TChair.h;  TColumnView.h;  TDataSet.h;  TDataSetIter.h;  TDsKey.h;  TFileIter.h;  TFileSet.h;  TGenericTable.h;  TIndexTable.h;  TObjectSet.h;  TPoints3D.h;  TPointsArray3D.h;  TPolyLineShape.h;  TResponseTable.h;  TTable.h;  TTable3Points.h;  TTableDescriptor.h;  TTableIter.h;  TTableMap.h;  TTablePadView3D.h;  TTablePoints.h;  TTableSorter.h;  Ttypes.h;  TVolume.h;  TVolumePosition.h;  TVolumeView.h;  TVolumeViewIter.h;  ► src;  TCernLib.cxx;  TChair.cxx;  TColumnView.cxx;  TDataSet.cxx;  TDataSetIter.cxx;  TDsKey.cxx;  TFileIter.cxx;  TFileSet.c,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:59774,log,log,59774,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,1,['log'],['log']
Testability,"crown.SetLineStyle(fH->GetLineStyle());; 5916 crown.Paint();; 5917 }; 5918 }; 5919 }; 5920 ; 5921 if (Hoption.Zscale) PaintPalette();; 5922 ; 5923 fH->SetFillStyle(fillsav);; 5924 fH->SetFillColor(colsav);; 5925 fH->TAttFill::Modify();; 5926 ; 5927}; 5928 ; 5929////////////////////////////////////////////////////////////////////////////////; 5930/// [Control function to draw a 2D histogram as a contour plot.](\ref HP16); 5931 ; 5932void THistPainter::PaintContour(Option_t *option); 5933{; 5934 ; 5935 Int_t i, j, count, ncontour, icol, n, lj, m, ix, jx, ljfill;; 5936 Int_t itars, mode, ir[4];; 5937 Double_t xsave, ysave, thesave,phisave,x[4], y[4], zc[4];; 5938 ; 5939 if (Hoption.Contour == 14) {; 5940 Hoption.Surf = 12;; 5941 Hoption.Axis = 1;; 5942 thesave = gPad->GetTheta();; 5943 phisave = gPad->GetPhi();; 5944 gPad->SetPhi(0.);; 5945 gPad->SetTheta(90.);; 5946 PaintSurface(option);; 5947 gPad->SetPhi(phisave);; 5948 gPad->SetTheta(thesave);; 5949 TView *view = gPad->GetView();; 5950 if (view) view->SetBit(kCannotRotate); //tested in ExecuteEvent; 5951 PaintAxis();; 5952 return;; 5953 }; 5954 ; 5955 if (Hoption.Same) {; 5956 // If the contour is painted on a 3d plot, the contour lines are; 5957 // paint in 3d too.; 5958 TObject *obj;; 5959 TIter next(gPad->GetListOfPrimitives());; 5960 while ((obj=next())) {; 5961 if (strstr(obj->GetDrawOption(),""surf"") ||; 5962 strstr(obj->GetDrawOption(),""lego"") ||; 5963 strstr(obj->GetDrawOption(),""tri"")) {; 5964 Hoption.Surf = 16;; 5965 PaintSurface(option);; 5966 return;; 5967 }; 5968 }; 5969 }; 5970 ; 5971 if (Hoption.Contour == 15) {; 5972 TGraphDelaunay2D *dt = nullptr;; 5973 TGraphDelaunay *dtOld = nullptr;; 5974 TList *hl = fH->GetListOfFunctions();; 5975 dt = (TGraphDelaunay2D*)hl->FindObject(""TGraphDelaunay2D"");; 5976 if (!dt) dtOld = (TGraphDelaunay*)hl->FindObject(""TGraphDelaunay"");; 5977 if (!dt && !dtOld) return;; 5978 if (!fGraph2DPainter); 5979 fGraph2DPainter = dt ? std::make_unique<TGraph2DPainter>(dt) : std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:220456,test,tested,220456,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['test'],['tested']
Testability,"cs); voidTEveElement::SetSourceObject(TObject* o); virtual voidTEvePointSet::SetTitle(const char* t); virtual voidTEveElement::SetTransMatrix(Double_t* carr); virtual voidTEveElement::SetTransMatrix(const TGeoMatrix& mat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTEveElement::SetUserData(void* ud); voidTEveElement::SetVizModel(TEveElement* model); voidTEveElement::SetVizTag(const TString& tag); virtual voidShowMembers(TMemberInspector& insp) const; virtual Bool_tTEveElement::SingleRnrState() const; virtual Int_tTPolyMarker3D::Size() const; virtual voidTAtt3D::Sizeof3D() const; voidTEveElement::SpawnEditor()MENU ; voidTEveElement::StampColorSelection(); voidTEveElement::StampObjProps(); voidTEveElement::StampTransBBox(); voidTEveElement::StampVisibility(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTEvePointSet::TakeAction(TEvePointSelector*); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTEveElement::TestCSCBits(UChar_t f) const; TEvePointSetProjected(); virtual voidTEveElement::UnHighlighted(); virtual voidTEveProjected::UnRefProjectable(TEveProjectable* assumed_parent, bool notifyParent = true); virtual voidTEveElement::UnSelected(); virtual voidUpdateProjection(); virtual voidTObject::UseCurrentStyle(); voidTEveElement::VizDB_Apply(const char* tag)MENU ; voidTEveElement::VizDB_Insert(const char* tag, Bool_t replace = kTRUE, Bool_t update = kTRUE)MENU ; voidTEveElement::VizDB_Reapply()MENU ; voidTEveElement::VizDB_UpdateModel(Bool_t update = kTRUE)MENU ; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTEvePointSet::WriteVizParams(ostream& out, const TString& var).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePointSetProjected.html:20893,Test,TestBit,20893,root/html602/TEvePointSetProjected.html,https://root.cern,https://root.cern/root/html602/TEvePointSetProjected.html,6,['Test'],"['TestBit', 'TestBits', 'TestCSCBits']"
Testability,"cs)Definition TString.h:673; TString::Streamervirtual void Streamer(TBuffer &)Stream a string object.Definition TString.cxx:1412; TString::AppendTString & Append(const char *cs)Definition TString.h:572; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TString::Formvoid Form(const char *fmt,...)Formats a string using a printf style format descriptor.Definition TString.cxx:2356; TString::ContainsBool_t Contains(const char *pat, ECaseCompare cmp=kExact) constDefinition TString.h:632; TString::IndexSsiz_t Index(const char *pat, Ssiz_t i=0, ECaseCompare cmp=kExact) constDefinition TString.h:651; TStyle::GetOptLogyInt_t GetOptLogy() constDefinition TStyle.h:248; TStyle::SetPadBorderModevoid SetPadBorderMode(Int_t mode=1)Definition TStyle.h:357; TStyle::SetPadTopMarginvoid SetPadTopMargin(Float_t margin=0.1)Definition TStyle.h:359; TStyle::SetOptLogxvoid SetOptLogx(Int_t logx=1)Definition TStyle.h:329; TStyle::SetPadBottomMarginvoid SetPadBottomMargin(Float_t margin=0.1)Definition TStyle.h:358; TStyle::GetOptTitleInt_t GetOptTitle() constDefinition TStyle.h:246; TStyle::GetPadTickXInt_t GetPadTickX() constDefinition TStyle.h:217; TStyle::IsReadingBool_t IsReading() constDefinition TStyle.h:296; TStyle::GetPadColorColor_t GetPadColor() constDefinition TStyle.h:208; TStyle::SetPadRightMarginvoid SetPadRightMargin(Float_t margin=0.1)Definition TStyle.h:361; TStyle::SetTitleFontvoid SetTitleFont(Style_t font=62, Option_t *axis=""X"")Definition TStyle.cxx:1775; TStyle::GetPadRightMarginFloat_t GetPadRightMargin() constDefinition TStyle.h:214; TStyle::SetTitleBorderSizevoid SetTitleBorderSize(Width_t size=2)Definition TStyle.h:408; TStyle::GetDateXFloat_t GetDateX() constDefinition TStyle.h:197; TStyle::GetTitleFontStyle_t GetTitleFont(Option_t *axis=""X"") constReturn title font.Definition TStyle.cxx:1216; TStyle::SetPadTickYvoid SetPadTickY(Int_t ti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:325266,log,logx,325266,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['log'],['logx']
Testability,"ct *obj) const;  Return index of object in collection. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; TObject * FindObject (const char *name) const override;  Find an object in this collection using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this collection using the object's IsEqual() member function. ;  ; virtual Int_t GetEntries () const;  ; const char * GetName (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBtree.html:12485,Assert,AssertClass,12485,doc/master/classTBtree.html,https://root.cern,https://root.cern/doc/master/classTBtree.html,1,['Assert'],['AssertClass']
Testability,"ct identifier; RooDataSet*fNullDetailedOutput; RooStats::SamplingDistribution*fNullDistr; Double_tfNullPValuep-value for the null hypothesis (small number means disfavored); Double_tfNullPValueErrorerror of p-value for the null hypothesis (small number means disfavored); Bool_tfPValueIsRightTail; Double_tfTestStatisticDataresult of the test statistic evaluated on data; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HypoTestResult(const char* name = 0); Default constructor. HypoTestResult(const char* name, Double_t nullp, Double_t altp); Alternate constructor. HypoTestResult(const RooStats::HypoTestResult& other); copy constructor. ~HypoTestResult(); Destructor. HypoTestResult & operator=(const RooStats::HypoTestResult& other); assignment operator. void Append(const RooStats::HypoTestResult* other); Add additional toy-MC experiments to the current results.; Use the data test statistics of the added object if it is not already; set (otherwise, ignore the new one). void SetAltDistribution(RooStats::SamplingDistribution* alt). void SetNullDistribution(RooStats::SamplingDistribution* null). void SetTestStatisticData(const Double_t tsd). void SetAllTestStatisticsData(const RooArgList* tsd). void SetPValueIsRightTail(Bool_t pr). Bool_t HasTestStatisticData(void). Double_t NullPValueError() const; compute error on Null pvalue. Double_t CLbError() const; compute CLb error; Clb = 1 - NullPValue(); must use opposite condition that routine above. Double_t CLsplusbError() const. Double_t SignificanceError() const; Taylor expansion series approximation for standard deviation (error propagation). Double_t CLsError() const; Returns an estimate of the error on CLs through combination of the; errors on CLb and CLsplusb:. void UpdatePValue(const RooStats::SamplingDistribution* distr, Double_t& pvalue, Double_t& perror, Bool_t pIsRightTail); updates the pvalue if sufficient data is available. void Print(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HypoTestResult.html:9012,test,test,9012,root/html534/RooStats__HypoTestResult.html,https://root.cern,https://root.cern/root/html534/RooStats__HypoTestResult.html,1,['test'],['test']
Testability,"ct identifier; RooDataSet*fNullDetailedOutput; RooStats::SamplingDistribution*fNullDistr; Double_tfNullPValuep-value for the null hypothesis (small number means disfavored); Double_tfNullPValueErrorerror of p-value for the null hypothesis (small number means disfavored); Bool_tfPValueIsRightTail; Double_tfTestStatisticDataresult of the test statistic evaluated on data; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HypoTestResult(const char* name = 0); Default constructor. HypoTestResult(const char* name, Double_t nullp, Double_t altp); Alternate constructor. HypoTestResult(const RooStats::HypoTestResult& other); copy constructor. ~HypoTestResult(); Destructor. HypoTestResult & operator=(const RooStats::HypoTestResult& other); assignment operator. void Append(const RooStats::HypoTestResult* other); Add additional toy-MC experiments to the current results.; Use the data test statistics of the added object if it is not already; set (otherwise, ignore the new one). void SetAltDistribution(RooStats::SamplingDistribution* alt). void SetNullDistribution(RooStats::SamplingDistribution* null). void SetTestStatisticData(const Double_t tsd). void SetAllTestStatisticsData(const RooArgList* tsd). void SetPValueIsRightTail(Bool_t pr). Bool_t HasTestStatisticData(void). Double_t NullPValueError() const; compute error on Null pvalue. Double_t CLbError() const; compute CLb error; Clb = 1 - NullPValue(); must use opposite condition that routine above. Double_t CLsplusbError() const. Double_t SignificanceError() const; Taylor expansion series approximation for standard deviation (error propagation). Double_t CLsError() const; Returns an estimate of the error on CLs through combination of the; errors on CLb and CLsplusb:. void UpdatePValue(const RooStats::SamplingDistribution* distr, Double_t& pvalue, Double_t& perror, Bool_t pIsRightTail); updates the pvalue if sufficient data is available. void Print(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestResult.html:9479,test,test,9479,root/html602/RooStats__HypoTestResult.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestResult.html,2,['test'],['test']
Testability,"ct model should be less than the value chi2.; 630///; 631/// The returned probability corresponds to 1-P(a,x),; 632/// which denotes the probability that an observed Chi-squared exceeds; 633/// the value chi2 by chance, even for a correct model.; 634///; 635/// \author NvE 14-nov-1998 UU-SAP Utrecht; 636 ; 637Double_t TMath::Prob(Double_t chi2,Int_t ndf); 638{; 639 if (ndf <= 0) return 0; // Set CL to zero in case ndf<=0; 640 ; 641 if (chi2 <= 0) {; 642 if (chi2 < 0) return 0;; 643 else return 1;; 644 }; 645 ; 646 return ::ROOT::Math::chisquared_cdf_c(chi2,ndf);; 647}; 648 ; 649////////////////////////////////////////////////////////////////////////////////; 650/// Calculates the Kolmogorov distribution function,; 651///; 652/// \f[; 653/// P(z) = 2 \sum_{j=1}^{\infty} (-1)^{j-1} e^{-2 j^2 z^2}; 654/// \f]; 655///; 656/// which gives the probability that Kolmogorov's test statistic will exceed; 657/// the value z assuming the null hypothesis. This gives a very powerful; 658/// test for comparing two one-dimensional distributions.; 659/// see, for example, Eadie et al, ""statistical Methods in Experimental; 660/// Physics', pp 269-270).; 661///; 662/// This function returns the confidence level for the null hypothesis, where:; 663/// - \f$ z = dn \sqrt{n} \f$, and; 664/// - \f$ dn \f$ is the maximum deviation between a hypothetical distribution; 665/// function and an experimental distribution with; 666/// - \f$ n \f$ events; 667///; 668/// NOTE: To compare two experimental distributions with m and n events,; 669/// use \f$ z = \sqrt{m n/(m+n)) dn} \f$; 670///; 671/// Accuracy: The function is far too accurate for any imaginable application.; 672/// Probabilities less than \f$ 10^{-15} \f$ are returned as zero.; 673/// However, remember that the formula is only valid for ""large"" n.; 674///; 675/// Theta function inversion formula is used for z <= 1; 676///; 677/// This function was translated by Rene Brun from PROBKL in CERNLIB.; 678 ; 679Double_t TMath::KolmogorovProb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:20922,test,test,20922,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['test'],['test']
Testability,"ct on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static bool getFloorGlobal ();  ; static void setFloorGlobal (bool flag);  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static EvalErrorIter evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static void verboseDirty (bool flag);  Activate verbo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumFunc.html:46967,log,logging,46967,doc/v632/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumFunc.html,1,['log'],['logging']
Testability,"ct ratio; TFrame*fFrame! Pointer to 2-D frame (if one exists); Int_tTAttPad::fFrameBorderModepad frame border mode; Width_tTAttPad::fFrameBorderSizepad frame border size; Color_tTAttPad::fFrameFillColorpad frame fill color; Style_tTAttPad::fFrameFillStylepad frame fill style; Color_tTAttPad::fFrameLineColorpad frame line color; Style_tTAttPad::fFrameLineStylepad frame line style; Width_tTAttPad::fFrameLineWidthpad frame line width; Int_tfGLDevice! OpenGL off-screen pixmap identifier; Bool_tfGridxSet to true if grid along X; Bool_tfGridySet to true if grid along Y; Double_tfHNDCHeight of pad along Y in NDC; Float_tTAttPad::fLeftMarginLeftMargin; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Int_tfLogx(=0 if X linear scale, =1 if log scale); Int_tfLogy(=0 if Y linear scale, =1 if log scale); Int_tfLogz(=0 if Z linear scale, =1 if log scale); Bool_tfModifiedSet to true when pad is modified; TPad*fMother! pointer to mother of the list; TStringfNamePad name; Int_tfNumberpad number identifier; Int_tfPadPaintSet to 1 while painting the pad; TObject*fPadPointer! free pointer; TObject*fPadView3D! 3D View of this TPad; Double_tfPhiphi angle to view as lego/surface; Double_tfPixeltoXxworld = fPixeltoXk + fPixeltoX*xpixel; Double_tfPixeltoXkConversion coefficient for pixel to X World; Double_tfPixeltoYyworld = fPixeltoYk + fPixeltoY*ypixel; Double_tfPixeltoYkConversion coefficient for pixel to Y World; Int_tfPixmapID! Off-screen pixmap identifier; TList*fPrimitives->List of primitives (subpads); Bool_tTVirtualPad::fResizing!true when resizing the pad; Float_tTAttPad::fRightMarginRightMargin; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Double_tfThetatheta angle to view as lego/surface; Int_tfTickxSet to 1 if tick marks along X; Int_tfTickySet to 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPad.html:25351,log,log,25351,root/html528/TPad.html,https://root.cern,https://root.cern/root/html528/TPad.html,6,['log'],['log']
Testability,"ct.; Definition at line 203 of file RooFitResult.h. ◆ isIdentical(). bool RooFitResult::isIdentical ; (; const RooFitResult & ; other, . double ; tol = 1e-6, . double ; tolCorr = 1e-4, . bool ; verbose = true . ); const. Return true if this fit result is identical to other within tolerances. ; Parameters. [in]otherFit result to test against. ; [in]tolRelative tolerance for parameters and NLL. ; [in]tolCorrabsolute tolerance for correlation coefficients. ; [in]verboseIf this function will log to the standard output when comparisons fail. As the relative tolerance for the parameter errors, the default value of 1e-3 will be used. ; Definition at line 863 of file RooFitResult.cxx. ◆ isIdenticalNoCov(). bool RooFitResult::isIdenticalNoCov ; (; const RooFitResult & ; other, . double ; tol = 1e-6, . double ; tolErr = 1e-3, . bool ; verbose = true . ); const. Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix. ; Parameters. [in]otherFit result to test against. ; [in]tolRelative tolerance for parameters and NLL. ; [in]tolErrRelative tolerance for parameter errors. ; [in]verboseIf this function will log to the standard output when comparisons fail. . Definition at line 801 of file RooFitResult.cxx. ◆ lastMinuitFit(). RooFitResult * RooFitResult::lastMinuitFit ; (; const RooArgList & ; varList = RooArgList()). static . Import the results of the last fit performed by gMinuit, interpreting the fit parameters as the given varList of parameters. ; Definition at line 917 of file RooFitResult.cxx. ◆ minNll(). double RooFitResult::minNll ; (; ); const. inline . Return minimized -log(L) value. ; Definition at line 99 of file RooFitResult.h. ◆ numInvalidNLL(). Int_t RooFitResult::numInvalidNLL ; (; ); const. inline . Return number of NLL evaluations with problems. ; Definition at line 91 of file RooFitResult.h. ◆ numStatusHistory(). UInt_t RooFitResult::numStatusHistory ; (; ); const. inline . Definition at line 82 of file RooFitResul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFitResult.html:30406,test,test,30406,doc/master/classRooFitResult.html,https://root.cern,https://root.cern/doc/master/classRooFitResult.html,1,['test'],['test']
Testability,"ct::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TApplication*fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*fgApplicationsList of available applications. private:. TApplicationImp*fAppImp!Window system specific application implementation; Int_tfArgcNumber of com mand line arguments; char**fArgvCommand line arguments; TApplication::EExitOnExceptionfExitOnExceptionExit on exception option; TObjArray*fFilesArray of input files or C++ expression (TObjString's) specified via argv; TStringfIdleCommandCommand to execute while application is idle; TTimer*fIdleTimerIdle timer; Bool_tfIsRunningTrue when in event loop (Run() has been called); Bool_tfNoLogDo not process logon and logoff macros; Bool_tfNoLogoDo not show splash screen and welcome message; Bool_tfQuitExit after having processed input files; Bool_tfReturnFromRunWhen true return from Run(); TSignalHandler*fSigHandlerInterrupt handler; Bool_tfUseMemstatRun with TMemStat enabled; TStringfWorkDirWorking directory specified via argv; static Bool_tfgGraphInitTrue if graphics libs initialized; static Bool_tfgGraphNeededTrue if graphics libs need to be initialized. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TApplication(); Default ctor. Can be used by classes deriving from TApplication. TApplication(const char* appClassName, Int_t* argc, char** argv, void* options = 0, Int_t numOptions = 0); Create an application environment. The application environment; provides an interface to the graphics system and eventloop; (be it X, Windoze, MacOS or BeOS). After creating the application; object start the eventloop by calling its Run() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TApplication.html:12679,log,logon,12679,root/html602/TApplication.html,https://root.cern,https://root.cern/root/html602/TApplication.html,4,['log'],"['logoff', 'logon']"
Testability,"ct::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Float_tfCarry; Int_tfCount24; Float_tfFloatSeedTable[24]; Int_tfIlag; const Int_tfIntModulus; Int_tfJlag; Int_tfLuxury; const Double_tfMantissaBit12; const Double_tfMantissaBit24; TStringTNamed::fNameobject identifier; Int_tfNskip; UInt_tTRandom::fSeedRandom number generator seed; const UInt_t*fTheSeeds; TStringTNamed::fTitleobject title; static Int_tfgMaxIndex; static Int_tfgNumEngines. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TRandom. ←; TRandom1. Function documentation; TRandom1(UInt_t seed, Int_t lux = 3); Luxury level is set in the same way as the original FORTRAN routine.; level 0 (p=24): equivalent to the original RCARRY of Marsaglia; and Zaman, very long period, but fails many tests.; level 1 (p=48): considerable improvement in quality over level 0,; now passes the gap test, but still fails spectral test.; level 2 (p=97): passes all known tests, but theoretically still; defective.; level 3 (p=223): DEFAULT VALUE. Any theoretically possible; correlations have very small chance of being observed.; level 4 (p=389): highest possible luxury, all 24 bits chaotic. TRandom1(); default constructor. TRandom1(Int_t rowIndex, Int_t colIndex, Int_t lux); constructor. ~TRandom1(); destructor. void GetTableSeeds(UInt_t* seeds, Int_t index); static function returning the table of seeds. Double_t Rndm(Int_t i = 0); return a random number in ]0,1]. void RndmArray(Int_t size, Float_t* vect); return an array of random numbers in ]0,1]. void RndmArray(Int_t size, Double_t* vect); return an array of random numbers in ]0,1[. void SetSeeds(const UInt_t* seeds, Int_t lux = 3); set seeds. void SetSeed2(UInt_t seed, Int_t lux = 3); T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRandom1.html:8350,test,tests,8350,root/html602/TRandom1.html,https://root.cern,https://root.cern/root/html602/TRandom1.html,2,['test'],['tests']
Testability,"ct::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TProofNodes&operator=(const TProofNodes&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofNodes.html:4627,Test,TestBit,4627,root/html530/TProofNodes.html,https://root.cern,https://root.cern/root/html530/TProofNodes.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMerge(TCollection* list); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSelectorScalar&operator=(const TSelectorScalar&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidTParameter<Long64_t>::SetVal(const long long& val); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSelectorScalar.html:4732,Test,TestBit,4732,root/html528/TSelectorScalar.html,https://root.cern,https://root.cern/root/html528/TSelectorScalar.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidPush_back(Long_t next); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; const TTable*Table(); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTableMap.html:5509,Test,TestBit,5509,root/html534/TTableMap.html,https://root.cern,https://root.cern/root/html534/TTableMap.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual TSQLRow*Next(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMySQLResult&operator=(const TMySQLResult&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMySQLResult.html:4495,Test,TestBit,4495,root/html530/TMySQLResult.html,https://root.cern,https://root.cern/root/html530/TMySQLResult.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGPicture&operator=(const TGPicture&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); UInt_tTRefCnt::References() const; UInt_tTRefCnt::RemoveReference(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidTRefCnt::SetRefCount(UInt_t r); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGPicture.html:4864,Test,TestBit,4864,root/html534/TGPicture.html,https://root.cern,https://root.cern/root/html534/TGPicture.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Int_tReadBuffer(char* buf, Long64_t pos, Int_t len); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetFile(TFile* file); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Int_tWriteBuffer(const char* buf, Long64_t pos, Int_t len).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFileCacheWrite.html:4959,Test,TestBit,4959,root/html530/TFileCacheWrite.html,https://root.cern,https://root.cern/root/html530/TFileCacheWrite.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::MayNotUse(const char* method) const; virtual Int_tMerge(TCollection* in); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TParameter<int>&operator=(const TParameter<int>&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t*) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMergeMode(char mergemode = '+'); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); voidSetVal(const int& val); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TParameter_int_.html:4672,Test,TestBit,4672,root/html534/TParameter_int_.html,https://root.cern,https://root.cern/root/html534/TParameter_int_.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSQLClassColumnInfo&operator=(const TSQLClassColumnInfo&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TSQLClassColumnInfo(); TSQLClassColumnInfo(const TSQLClassColumnInfo&); TSQLClassColumnInfo(const char* name, const char* sqlname, const char* sqltype); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLClassColumnInfo.html:4694,Test,TestBit,4694,root/html602/TSQLClassColumnInfo.html,https://root.cern,https://root.cern/root/html602/TSQLClassColumnInfo.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetFailedPackets(TList* list); virtual voidSetInitTime(); static voidTObject::SetObjectStat(Bool_t stat); voidSetProgressStatus(TProofProgressStatus* st); voidSetTotalEntries(Long64_t ent); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStopProcess(Bool_t abort, Bool_t stoptimer = kFALSE); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPacketizer.html:6095,Test,TestBit,6095,root/html602/TVirtualPacketizer.html,https://root.cern,https://root.cern/root/html602/TVirtualPacketizer.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TRootSnifferStore&operator=(const TRootSnifferStore&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetField(Int_t, const char*, const char*, Bool_t); static voidTObject::SetObjectStat(Bool_t stat); voidSetResult(void* _res, TClass* _rescl, TDataMember* _resmemb, Int_t _res_chld, Int_t restr = 0); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRootSnifferStore.html:4914,Test,TestBit,4914,root/html534/TRootSnifferStore.html,https://root.cern,https://root.cern/root/html534/TRootSnifferStore.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; voidPrintVoxelLimits(Double_t* point) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetInvalid(Bool_t flag = kTRUE); voidSetNeedRebuild(Bool_t flag = kTRUE); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidSortCrossedVoxels(Double_t* point, Double_t* dir, Int_t tid = 0); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidVoxelize(Option_t* option = """"); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoVoxelFinder.html:5247,Test,TestBit,5247,root/html532/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html532/TGeoVoxelFinder.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFormulaPrimitive.html:5979,Test,TestBit,5979,root/html534/TFormulaPrimitive.html,https://root.cern,https://root.cern/root/html534/TFormulaPrimitive.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEventIter&operator=(const TEventIter&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPreProcessEvent(Long64_t); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStopProcess(Bool_t abort); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TEventIter(); TEventIter(const TEventIter&); TEventIter(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEventIter.html:4895,Test,TestBit,4895,root/html602/TEventIter.html,https://root.cern,https://root.cern/root/html602/TEventIter.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); Double_tRoot(Double_t refValue); TMVA::RootFinderRootFinder(const TMVA::RootFinder&); TMVA::RootFinderRootFinder(Double_t (*)(Double_t) rootVal, Double_t rootMin, Double_t rootMax, Int_t maxIterations = 100, Double_t absTolerance = 0.0); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TMVA::MsgLogger&Log() const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Double_tfAbsTolabsolu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__RootFinder.html:4511,Test,TestBit,4511,root/html534/TMVA__RootFinder.html,https://root.cern,https://root.cern/root/html534/TMVA__RootFinder.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::Read(const char* name); virtual voidTObjArray::RecursiveRemove(TObject* obj); virtual TObject*Remove(TObject* obj); virtual voidTSeqCollection::RemoveAfter(TObject* after); voidTCollection::RemoveAll(); virtual voidTCollection::RemoveAll(TCollection* col); virtual TObject*RemoveAt(Int_t idx); virtual voidTSeqCollection::RemoveBefore(TObject* before); virtual voidTSeqCollection::RemoveFirst(); virtual voidTSeqCollection::RemoveLast(); virtual voidRemoveRange(Int_t idx1, Int_t idx2); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetClass(const char* classname, Int_t size = 1000); voidSetClass(const TClass* cl, Int_t size = 1000); voidTCollection::SetCurrentCollection(); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTObjArray::SetLast(Int_t last); voidTCollection::SetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOwner(Bool_t enable = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidSort(Int_t upto = kMaxInt); static voidTCollection::StartGarbageCollection(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TObject*TObjArray::UncheckedAt(Int_t i) const; voidTSeqCollection::UnSort(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTCollection::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TClonesArray.html:12678,Test,TestBit,12678,root/html534/TClonesArray.html,https://root.cern,https://root.cern/root/html534/TClonesArray.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::RecursiveRemove(TObject* obj); virtual voidTApplication::RemoveIdleTimer(); voidTObject::ResetBit(UInt_t f); Bool_tTApplication::ReturnFromRun() const; virtual voidTApplication::ReturnPressed(char* text)SIGNAL ; virtual voidTApplication::Run(Bool_t retrn = kFALSE); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTApplication::SetEchoMode(Bool_t mode); virtual voidTApplication::SetIdleTimer(UInt_t idleTimeInSec, const char* command); static voidTObject::SetObjectStat(Bool_t stat); voidTApplication::SetReturnFromRun(Bool_t ret); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTApplication::Show(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidTApplication::StartIdleing(); virtual voidTApplication::StopIdleing(); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual Int_tTApplication::TabCompletionHook(char* buf, int* pLoc, ostream& out); virtual voidTApplication::Terminate(Int_t status = 0)SIGNAL ; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; PyROOT::TPyROOTApplicationTPyROOTApplication(const PyROOT::TPyROOTApplication&); PyROOT::TPyROOTApplicationTPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; const char*TApplication::WorkingDirectory() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/PyROOT__TPyROOTApplication.html:10429,Test,TestBit,10429,root/html602/PyROOT__TPyROOTApplication.html,https://root.cern,https://root.cern/root/html602/PyROOT__TPyROOTApplication.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::RecursiveRemove(TObject* obj); virtual voidTGLEventHandler::RemoveTooltip(); virtual voidTGLEventHandler::Repaint(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual voidTGEventHandler::SendMessage(const TGWindow* w, Long_t msg, Long_t parm1, Long_t parm2); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTGLEventHandler::SetDoInternalSelection(Bool_t x); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetLego(TEveCaloLego* x); voidTGLEventHandler::SetMouseOverSelectDelay(Int_t ms); voidTGLEventHandler::SetMouseOverTooltipDelay(Int_t ms); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidTGLEventHandler::SetSecSelType(Int_t t); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidTGLEventHandler::SetTooltipPixelTolerance(Int_t t); voidSetTransTheta(Float_t h); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidTGLEventHandler::StartMouseTimer(); virtual voidTGLEventHandler::StopMouseTimer(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTGLEventHandler::TriggerTooltip(const char* text); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveLegoEventHandler.html:9267,Test,TestBit,9267,root/html528/TEveLegoEventHandler.html,https://root.cern,https://root.cern/root/html528/TEveLegoEventHandler.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTAttFill::SaveFillAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1001); virtual voidTAttLine::SaveLineAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t widdef = 1); virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTAttLine::SetLineAttributes()MENU ; virtual voidTAttLine::SetLineColor(Color_t lcolor); virtual voidTAttLine::SetLineStyle(Style_t lstyle); virtual voidTAttLine::SetLineWidth(Width_t lwidth); virtual voidTShape::SetName(const char* name); virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidTShape::SetVisibility(Int_t vis)MENU ; virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidTBRIK::Sizeof3D() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; voidTShape::TransformPoints(Double_t* points, UInt_t NbPnts) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGTRA.html:8297,Test,TestBit,8297,root/html530/TGTRA.html,https://root.cern,https://root.cern/root/html530/TGTRA.html,20,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTAttMarker::SaveMarkerAttributes(ostream& out, const char* name, Int_t coldef = 1, Int_t stydef = 1, Int_t sizdef = 1); virtual voidTPolyMarker3D::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTAttMarker::SetMarkerAttributes()MENU ; virtual voidTAttMarker::SetMarkerColor(Color_t tcolor = 1); virtual voidTAttMarker::SetMarkerSize(Size_t msize = 1); virtual voidTAttMarker::SetMarkerStyle(Style_t mstyle = 1); virtual voidTPolyMarker3D::SetName(const char* name)MENU ; virtual Int_tTPolyMarker3D::SetNextPoint(Double_t x, Double_t y, Double_t z)MENU ; static voidTObject::SetObjectStat(Bool_t stat); voidSetOwnIds(Bool_t o); voidTPolyMarker3D::SetPoint(Int_t n, Double_t x, Double_t y, Double_t z)MENU ; voidSetPointId(TObject* id); voidSetPointId(Int_t n, TObject* id); virtual voidTPolyMarker3D::SetPolyMarker(Int_t n, Float_t* p, Marker_t marker, Option_t* option = """"); virtual voidTPolyMarker3D::SetPolyMarker(Int_t n, Double_t* p, Marker_t marker, Option_t* option = """"); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTPolyMarker3D::Size() const; virtual voidTAtt3D::Sizeof3D() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPointSet3D.html:7156,Test,TestBit,7156,root/html528/TPointSet3D.html,https://root.cern,https://root.cern/root/html528/TPointSet3D.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::SetBit(UInt_t f, Bool_t set); virtual voidSetBufferAddress(TBuffer* entryBuffer); voidSetCompressionAlgorithm(Int_t algorithm = 0); voidSetCompressionLevel(Int_t level = 1); voidSetCompressionSettings(Int_t settings = 1); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetEntries(Long64_t entries); virtual voidSetEntryOffsetLen(Int_t len, Bool_t updateSubBranches = kFALSE); virtual voidSetFile(TFile* file = 0); virtual voidSetFile(const char* filename); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidSetFirstEntry(Long64_t entry); virtual Bool_tSetMakeClass(Bool_t decomposeObj = kTRUE); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetObject(void* objadd); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOffset(Int_t offset = 0); virtual voidSetStatus(Bool_t status = 1); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidSetTree(TTree* tree); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetupAddresses(); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidUpdateAddress(); virtual voidUpdateFile(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBranch.html:8659,Test,TestBit,8659,root/html534/TBranch.html,https://root.cern,https://root.cern/root/html534/TBranch.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetFitParameters(Int_t xmin, Int_t xmax, Int_t ymin, Int_t ymax, Int_t numberIterations, Double_t alpha, Int_t statisticType, Int_t alphaOptim, Int_t power, Int_t fitTaylor); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetPeakParameters(Double_t sigmaX, Bool_t fixSigmaX, Double_t sigmaY, Bool_t fixSigmaY, Double_t ro, Bool_t fixRo, const Float_t* positionInitX, const Bool_t* fixPositionX, const Float_t* positionInitY, const Bool_t* fixPositionY, const Float_t* positionInitX1, const Bool_t* fixPositionX1, const Float_t* positionInitY1, const Bool_t* fixPositionY1, const Float_t* ampInit, const Bool_t* fixAmp, const Float_t* ampInitX1, const Bool_t* fixAmpX1, const Float_t* ampInitY1, const Bool_t* fixAmpY1); voidSetTailParameters(Double_t tInitXY, Bool_t fixTxy, Double_t tInitX, Bool_t fixTx, Double_t tInitY, Bool_t fixTy, Double_t bInitX, Bool_t fixBx, Double_t bInitY, Bool_t fixBy, Double_t sInitXY, Bool_t fixSxy, Double_t sInitX, Bool_t fixSx, Double_t sInitY, Bool_t fixSy); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSpectrum2Fit.html:7613,Test,TestBit,7613,root/html534/TSpectrum2Fit.html,https://root.cern,https://root.cern/root/html534/TSpectrum2Fit.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); const map<std::string,std::string>&RooAbsArg::stringAttributes() const; virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; const set<std::string>&RooAbsArg::transientAttributes() const; voidRooAbsArg::treeNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t doBranch = kTRUE, Bool_t doLeaf = kTRUE, Bool_t valueOnly = kFALSE, Bool_t recurseNonDerived = kFALSE) const; TIterator*RooAbsCategory::typeIterator() const; voidRooAbsArg::unRegisterCache(RooAbsCache& cache); virtual voidTObject::UseCurrentStyle(); TIterator*RooAbsArg::valueClientIterator() const; static voidRooAbsArg::verboseDirty(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidwriteToStream(ostream& os, Bool_t compact) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooGenCategory.html:15283,Test,TestBit,15283,root/html528/RooGenCategory.html,https://root.cern,https://root.cern/root/html528/RooGenCategory.html,16,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); Double_tTestTreeQuality(TMVA::DecisionTree* dt); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidTMVA::MethodBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodDT.html:14836,Test,TestBit,14836,root/html530/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodDT.html,2,['Test'],['TestBit']
Testability,"ct::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); static TMVA::MethodCFMlpANN*This(); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidTMVA::MethodBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TStrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodCFMlpANN.html:13205,Test,TestBit,13205,root/html530/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodCFMlpANN.html,2,['Test'],['TestBit']
Testability,"ct::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); static TMVA::MethodPDERS*ThisPDERS(); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidTMVA::MethodBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TStr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodPDERS.html:13222,Test,TestBit,13222,root/html530/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodPDERS.html,2,['Test'],['TestBit']
Testability,"ct::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); Bool_tUseBoost() const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodRuleFit.html:12535,Test,TestBit,12535,root/html530/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodRuleFit.html,2,['Test'],['TestBit']
Testability,"ct::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidTMVA::MethodBase::WriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBayesClassifier.html:11793,Test,TestBit,11793,root/html530/TMVA__MethodBayesClassifier.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBayesClassifier.html,18,['Test'],['TestBit']
Testability,"ct::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual voidTMVA::MethodBase::WriteEvaluationHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; virtual voidWriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodLikelihood.html:14027,Test,TestBit,14027,root/html530/TMVA__MethodLikelihood.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodLikelihood.html,2,['Test'],['TestBit']
Testability,"ct::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TH1F*fB_histoThe b Histo; TH1F*fB_histo_shadedThe b Histo shaded; TLine*fData_testStat_lineThe line for the data value of the test statistic; TLegend*fLegendThe legend of the plot; TVirtualPad*fPadThe pad where it has been drawn; TH1F*fSb_histoThe sb Histo; TH1F*fSb_histo_shadedThe sb Histo shaded; boolfVerboseverbosity flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HybridPlot(const char* name, const char* title, const vector<double>& sb_values, const vector<double>& b_values, double testStat_data, int n_bins, bool verbosity = true); HybridPlot constructor. ~HybridPlot(); destructor. void Draw(const char* options = """"); draw the S+B and B histogram in the current canvas. void DumpToFile(const char* RootFileName, const char* options); All the objects are written to rootfile. void DumpToImage(const char* filename). double GetHistoCenter(TH1* histo, double n_rms = 1, bool display_result = false); Get the center of the histo. double* GetHistoPvals(TH1* histo, double percentage). double GetMedian(TH1* histo). HybridPlot(const char* name, const char* title, const vector<double>& sb_values, const vector",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__HybridPlot.html:6625,test,test,6625,root/html526/RooStats__HybridPlot.html,https://root.cern,https://root.cern/root/html526/RooStats__HybridPlot.html,5,['test'],['test']
Testability,"ct::UseCurrentStyle(); voidValidatePDF(TH1* original = 0) const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::Configurable::GetReferenceFile() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidBuildKDEPDF(); voidBuildSplinePDF(); voidCheckHist() const; voidFillHistToGraph(); voidFillSplineToHist(); Double_tGetIntegral() const; Double_tGetPdfHistBinWidth() const; static Double_tIGetVal(Double_t*, Double_t*); TMVA::MsgLogger&Log() const; voidSmoothHistogram(); static TMVA::PDF*ThisPDF(); Bool_tUseHistogram() const. Data Members; public:. enum EInterpolateMethod { kSpline0; kSpline1; kSpline2; kSpline3; kSpline5; kKDE; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfBorderMethodString; Bool_tfCheckHistcheck of source histogram; Float_tfFineFactorfine tuning factor for Adaptive KDE; TGraph*fGraph! needed to create PDF from histogram; TH1*fHistcopy of input histogram; Int_tfHistAvgEvtPerBinavg event per source hist bin; Int_tfHistDefinedNBinssource hist bin num set by user; TH1*fHistOriginalthe input histogram; TF1*fIGetValintegration interface; TMVA::PDF::EInterpolateMethodfInterpolMethodinterpolation method; TSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__PDF.html:7291,Log,Log,7291,root/html528/TMVA__PDF.html,https://root.cern,https://root.cern/root/html528/TMVA__PDF.html,1,['Log'],['Log']
Testability,"ct::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TMVA::MsgLogger&Log() const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Double_tfAbsTolabsolute tolerance deviation; Double_t(*)(Double_t)fGetRootVal; TMVA::MsgLogger*fLogger! message logger; Int_tfMaxItermaximum number of iterations; Double_tfRootMaxmaximum root value; Double_tfRootMinminimum root value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RootFinder(const TMVA::RootFinder& ). Construct a Root-Finder algorithm. virtual ~RootFinder(). RootFinder(const TMVA::RootFinder& ); usually copying is non trivial, so we make this unaccessible. {}. double Root(). Return the current and latest estimate of the Root. » Last changed: root/mathmore:$Id$ » Last generated: 2015-06-30 15:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__RootFinder.html:6577,log,logger,6577,root/html602/TMVA__RootFinder.html,https://root.cern,https://root.cern/root/html602/TMVA__RootFinder.html,1,['log'],['logger']
Testability,"ct::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TMVA::MsgLogger&Log() const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Double_tfAbsTolabsolute tolerance deviation; Double_t(*)(Double_t)fGetRootVal; TMVA::MsgLogger*fLogger! message logger; Int_tfMaxItermaximum number of iterations; Double_tfRootMaxmaximum root value; Double_tfRootMinminimum root value. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RootFinder(const TMVA::RootFinder& ). Construct a Root-Finder algorithm. virtual ~RootFinder(). RootFinder(const TMVA::RootFinder& ); usually copying is non trivial, so we make this unaccessible. {}. double Root(). Return the current and latest estimate of the Root. » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__RootFinder.html:6577,log,logger,6577,root/html604/TMVA__RootFinder.html,https://root.cern,https://root.cern/root/html604/TMVA__RootFinder.html,1,['log'],['logger']
Testability,"ct::kZombie. protected:. Bool_tfBBoxOKhas bounding box been calculated; Double_tTGeoBBox::fDXX half-length; Double_tTGeoBBox::fDYY half-length; Double_tTGeoBBox::fDZZ half-length; TStringTNamed::fNameobject identifier; Double_tTGeoBBox::fOrigin[3]box origin; UInt_tTGeoShape::fShapeBitsshape bits; Int_tTGeoShape::fShapeIdshape id; TStringTNamed::fTitleobject title; TGeoVolumeAssembly*fVolumeassembly volume. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoShapeAssembly(); Default constructor. TGeoShapeAssembly(TGeoVolumeAssembly* vol); Constructor specifying hyperboloid parameters. ~TGeoShapeAssembly(); destructor. void ComputeBBox(); Compute bounding box of the assembly. void RecomputeBoxLast(); Recompute bounding box of the assembly after adding a node. void ComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); Compute normal to closest surface from POINT. Should not be called. Bool_t Contains(const Double_t* point) const; Test if point is inside the assembly. Int_t DistancetoPrimitive(Int_t px, Int_t py); compute closest distance from point px,py to each vertex. Should not be called. Double_t DistFromInside(const Double_t* point, const Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; Compute distance from inside point to surface of the hyperboloid. Double_t DistFromOutside(const Double_t* point, const Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; compute distance from outside point to surface of the hyperboloid.; fVolume->SetNextNodeIndex(-1);. TGeoVolume * Divide(TGeoVolume* voldiv, const char* divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step); Cannot divide assemblies. TGeoShape * GetMakeRuntimeShape(TGeoShape* mother, TGeoMatrix* mat) const; in case shape has some negative parameters, these has to be computed; in order to fit the mother. void InspectShape() const; print shape parameters. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoShapeAssembly.html:14480,Test,Test,14480,root/html602/TGeoShapeAssembly.html,https://root.cern,https://root.cern/root/html602/TGeoShapeAssembly.html,2,['Test'],['Test']
Testability,"ct::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNotify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidRemove(TTreeFormula*); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual Bool_tSync(); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TTreeFormulaManager(); virtual voidUpdateFormulaLeaves(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormulaManager.html:4578,Test,TestBit,4578,root/html602/TTreeFormulaManager.html,https://root.cern,https://root.cern/root/html602/TTreeFormulaManager.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMCVerbose&operator=(const TMCVerbose&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPostTrack(); virtual voidPreTrack(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidRunMC(Int_t nofEvents); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetLevel(Int_t level); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStepping(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMCVerbose.html:4882,Test,TestBit,4882,root/html528/TMCVerbose.html,https://root.cern,https://root.cern/root/html528/TMCVerbose.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSlaveInfo&operator=(const TSlaveInfo&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidSetStatus(TSlaveInfo::ESlaveStatus stat); voidSetSysInfo(SysInfo_t si); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSlaveInfo.html:4805,Test,TestBit,4805,root/html530/TSlaveInfo.html,https://root.cern,https://root.cern/root/html530/TSlaveInfo.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TEveRecCascade&operator=(const TEveRecCascade&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TEveRecCascade(); TEveRecCascade(const TEveRecCascade&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveRecCascade.html:4275,Test,TestBit,4275,root/html602/TEveRecCascade.html,https://root.cern,https://root.cern/root/html602/TEveRecCascade.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFoamIntegrand&operator=(const TFoamIntegrand&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TFoamIntegrand(); TFoamIntegrand(const TFoamIntegrand&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFoamIntegrand.html:4437,Test,TestBit,4437,root/html602/TFoamIntegrand.html,https://root.cern,https://root.cern/root/html602/TFoamIntegrand.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::HypoTestInverterPlot&operator=(const RooStats::HypoTestInverterPlot&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__HypoTestInverterPlot.html:4802,Test,TestBit,4802,root/html526/RooStats__HypoTestInverterPlot.html,https://root.cern,https://root.cern/root/html526/RooStats__HypoTestInverterPlot.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TAttParticle&operator=(const TAttParticle&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual Double_tSampleMass() const; virtual Double_tSampleMass(Double_t widthcut) const; virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TAttParticle.html:5461,Test,TestBit,5461,root/html530/TAttParticle.html,https://root.cern,https://root.cern/root/html530/TAttParticle.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidPaint(Option_t* chopt = """"); virtual voidTObject::Pop(); virtual voidPrint(Option_t* chopt = """") const; virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidSetHistogram(TH1* h); virtual voidSetMaximum(Double_t maximum = -1111)MENU ; virtual voidSetMinimum(Double_t minimum = -1111)MENU ; virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THStack.html:6155,Test,TestBit,6155,root/html534/THStack.html,https://root.cern,https://root.cern/root/html534/THStack.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTGLayoutHints::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); UInt_tTRefCnt::References() const; UInt_tTRefCnt::RemoveReference(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTGLayoutHints::SetLayoutHints(ULong_t lh); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTGLayoutHints::SetPadBottom(Int_t v); virtual voidTGLayoutHints::SetPadLeft(Int_t v); virtual voidTGLayoutHints::SetPadRight(Int_t v); virtual voidTGLayoutHints::SetPadTop(Int_t v); voidTRefCnt::SetRefCount(UInt_t r); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTableLayoutHints.html:6742,Test,TestBit,6742,root/html528/TGTableLayoutHints.html,https://root.cern,https://root.cern/root/html528/TGTableLayoutHints.html,6,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooLinkedList&operator=(const RooLinkedList& other); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidPrint(const char* opt) const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Bool_tRemove(TObject* arg); Bool_tReplace(const TObject* oldArg, const TObject* newArg); voidTObject::ResetBit(UInt_t f); RooLinkedList(Int_t htsize = 0); RooLinkedList(const RooLinkedList& other); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidsetHashTableSize(Int_t size); voidSetName(const char* name); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; voidSort(Bool_t ascend = kTRUE); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voiduseNptr(Bool_t flag); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooLinkedList.html:5166,Test,TestBit,5166,root/html602/RooLinkedList.html,https://root.cern,https://root.cern/root/html602/RooLinkedList.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidRecursiveRemove(TObject* obj); virtual voidRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidSaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOwner(Bool_t owner = kTRUE); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TFolder(); TFolder(const char* name, const char* title); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFolder.html:7973,Test,TestBit,7973,root/html602/TFolder.html,https://root.cern,https://root.cern/root/html602/TFolder.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooAbsMCStudyModule&RooAbsMCStudyModule::operator=(const RooAbsMCStudyModule&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Bool_tRooAbsMCStudyModule::processAfterFit(Int_t); virtual Bool_tRooAbsMCStudyModule::processBeforeGen(Int_t); virtual Bool_tprocessBetweenGenAndFit(Int_t); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; RooStats::UpperLimitMCSModuleUpperLimitMCSModule(const RooStats::UpperLimitMCSModule& other); RooStats::UpperLimitMCSModuleUpperLimitMCSModule(const RooArgSet* poi, Double_t CL = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__UpperLimitMCSModule.html:5023,Test,TestBit,5023,root/html526/RooStats__UpperLimitMCSModule.html,https://root.cern,https://root.cern/root/html526/RooStats__UpperLimitMCSModule.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFileStager&operator=(const TFileStager&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual Bool_tStage(const char*, Option_t* = 0); virtual Bool_tStage(TCollection* pathlist, Option_t* opt = 0); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFileStager.html:5389,Test,TestBit,5389,root/html534/TFileStager.html,https://root.cern,https://root.cern/root/html534/TFileStager.html,2,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDEDw(Double_t in); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidSetNewEvent() const; voidSetNormalisation(Double_t mean, Double_t RMS); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); voidSetWeight(Double_t w); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TTreeFormula*UseBranch(TTree*, const char*); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TNeuron.html:5922,Test,TestBit,5922,root/html530/TNeuron.html,https://root.cern,https://root.cern/root/html530/TNeuron.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); Bool_tRooAbsCategory::operator!=(Int_t index); Bool_tRooAbsCategory::operator!=(const char* label); Bool_tRooAbsCategory::operator!=(const RooAbsArg& other); RooMappedCategory&operator=(const RooMappedCategory&); Bool_tRooAbsCategory::operator==(Int_t index) const; Bool_tRooAbsCategory::operator==(const char* label) const; virtual Bool_tRooAbsCategory::operator==(const RooAbsArg& other); RooAbsArg::OperModeRooAbsArg::operMode() const; virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables); virtual voidRooAbsArg::optimizeCacheMode(const RooArgSet& observables, RooArgSet& optNodes, RooLinkedList& processedNodes); Bool_tRooAbsArg::overlaps(const RooAbsArg& testArg, Bool_t valueOnly = kFALSE) const; const RooArgSet*RooAbsArg::ownedComponents() const; virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidRooAbsArg::Print(Option_t* options = 0) const; virtual voidRooAbsArg::printAddress(ostream& os) const; virtual voidRooAbsArg::printArgs(ostream& os) const; virtual voidRooAbsArg::printClassName(ostream& os) const; voidRooAbsArg::printCompactTree(const char* indent = """", const char* fileName = 0, const char* namePat = 0, RooAbsArg* client = 0); voidRooAbsArg::printCompactTree(ostream& os, const char* indent = """", const char* namePat = 0, RooAbsArg* client = 0); virtual voidRooAbsArg::printCompactTreeHook(ostream& os, const char* ind = """"); voidRooAbsArg::printComponentTree(const char* indent = """", const char* namePat = 0, Int_t nLevel = 999); voidRooAbsArg::printDirty(Bool_t depth = kTRUE) const; virtual voidRooPrintable::printExtras(ostream& os) const; virtual voidprintMetaArgs(ostream& os) const; virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMappedCategory.html:11382,test,testArg,11382,root/html602/RooMappedCategory.html,https://root.cern,https://root.cern/root/html602/RooMappedCategory.html,2,['test'],['testArg']
Testability,"ct::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGeoDecayChannel&operator=(const TGeoDecayChannel& dc); virtual voidTObject::Paint(Option_t* option = """"); TGeoElementRN*Parent() const; virtual voidTObject::Pop(); virtual voidPrint(Option_t* opt = "" "") const; Double_tQvalue() const; virtual Int_tTObject::Read(const char* name); static TGeoDecayChannel*ReadDecay(const char* record); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidSavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDaughter(TGeoElementRN* daughter); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); voidSetParent(TGeoElementRN* parent); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGeoDecayChannel(); TGeoDecayChannel(const TGeoDecayChannel& dc); TGeoDecayChannel(Int_t decay, Int_t diso, Double_t branchingRatio, Double_t qValue); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoDecayChannel.html:4914,Test,TestBit,4914,root/html602/TGeoDecayChannel.html,https://root.cern,https://root.cern/root/html602/TGeoDecayChannel.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGuiFactory&operator=(const TGuiFactory&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGuiFactory(const TGuiFactory&); TGuiFactory(const char* name = ""Batch"", const char* title = ""Batch GUI Factory""); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGuiFactory.html:5740,Test,TestBit,5740,root/html602/TGuiFactory.html,https://root.cern,https://root.cern/root/html602/TGuiFactory.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMatrix(const TGeoHMatrix* matrix); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidSetPhysicalNode(TGeoPhysicalNode* node); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TGeoPNEntry(); TGeoPNEntry(const char* unique_name, const char* path); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPNEntry.html:6290,Test,TestBit,6290,root/html602/TGeoPNEntry.html,https://root.cern,https://root.cern/root/html602/TGeoPNEntry.html,4,['Test'],"['TestBit', 'TestBits']"
Testability,"ct::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::PdfProposal&operator=(const RooStats::PdfProposal&); virtual voidTObject::Paint(Option_t* option = """"); RooStats::PdfProposalPdfProposal(); RooStats::PdfProposalPdfProposal(RooAbsPdf& pdf); RooStats::PdfProposalPdfProposal(const RooStats::PdfProposal&); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidprintMappings(); virtual voidPropose(RooArgSet& xPrime, RooArgSet& x); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetCacheSize(Int_t size); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetOwnsPdf(Bool_t ownsPdf); virtual voidSetPdf(RooAbsPdf& pdf); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__PdfProposal.html:6226,Test,TestBit,6226,root/html534/RooStats__PdfProposal.html,https://root.cern,https://root.cern/root/html534/RooStats__PdfProposal.html,2,['Test'],"['TestBit', 'TestBits']"
