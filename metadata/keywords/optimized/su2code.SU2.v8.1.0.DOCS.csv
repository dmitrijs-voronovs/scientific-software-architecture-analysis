quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Availability," 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select tecio.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. tecio.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guide.pdf) and Tecio; example programs for how to use this library. If you wish to copy only the; required files to a different folder for later use, please copy the following; files:. libtecio.a (tecio.lib on Windows); TECIO.h; tecio_Exports.h; tecio.inc; tecio.for; tecio.f90; tecio_license_agreement.txt. A Note on Boost: Tecio requires only the Boost header files--no libraries--so; it is possible to build tecio using a Boost source distribution only, without; installing it. In this case, set Boost_INCLUDE_DIR to point to the root of; the source distribution, such as D:/boost_1_59_0, then click Configure, then; Generate in the CMake GUI (or for Linux, edit the Boost_INCLUDE_DIR setting in; CMakeLists.txt and reissue ""cmake ."" from the command line to rec",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:2911,error,errors,2911,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['error'],['errors']
Availability," MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MINOR, CACHE, H5E_CANTTAG, Unable to tag metadata in the cache; MINOR, CACHE, H5E_CANTLOAD, Unable to load metadata into cache; MINOR, CACHE, H5E_PROTECT, Protected metadata error; MINOR, CACHE, H5E_NOTCACHED, Metadata not currently cached; MINOR, CACHE, H5E_SYSTEM, Internal error detected; MINOR, CACHE, H5E_CANTINS, Unable to insert metadata into cache; MINOR, CACHE, H5E_CANTPROTECT, Unable to protect metadata; MINOR, CACHE, H5E_CANTUNPROTECT, Unable to unprotect metadata; MINOR, CACHE, H5E_CANTPIN, Unable to pin cache entry; MINOR, CACHE, H5E_CANTUNPIN, Unable to un-pin cache entry; MINOR, CACHE, H5E_CANTMARKDIRTY, Unable to mark a pinned entry as dirty; MINOR, CACHE, H5E_CANTMARKCLEAN, Unable to mark a pinned entry as clean; MINOR, CACHE, H5E_CANTMARKUNSERIALIZED, Unable to mark an entry as unserialized; MINOR, CACHE, H5E_CANTMARKSERIALIZED, Unable to mark an entry as serialized; MINOR, CACHE, H5E_CANTDIRTY, Unable to mark metadata as dirty; MINOR, CACHE, H5E_CANTCLEAN, Unable to mark metadata as clean; MINOR, CACHE, H5E_CANTEXPUNGE, Unable to expunge a metadata cache entry; MINOR, CACHE, H5E_CANTRESIZE, Unable to resize a metadata cache entry; MINOR, CACHE, H5E_CANTDEPEND, Unable to create a flush dependency; MINOR, CACHE, H5E_CANTUNDEPEND, Unable to destroy a flush dependency; MINOR, CACHE, H5E_CANTNOTIFY, Unable to notify object about action; MINOR, CACHE, H5E_LOGGING, Failure in the cache logging framework; MINOR, CACHE, H5E_CANTCORK, Unable to cork an object; MINOR, CACHE, H5E_CANTUNCORK, Unable to uncork an object. # B-tree related errors; MINOR, BTREE, H5E_NOTFOUND, Object not found; MINOR, BTREE, H5E_EXISTS, Object alre",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:6517,error,errors,6517,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,3,['error'],"['error', 'errors']"
Availability," MINOR, OHDR, H5E_VERSION, Wrong version number; MINOR, OHDR, H5E_ALIGNMENT, Alignment error; MINOR, OHDR, H5E_BADMESG, Unrecognized message; MINOR, OHDR, H5E_CANTDELETE, Can't delete message; MINOR, OHDR, H5E_BADITER, Iteration failed; MINOR, OHDR, H5E_CANTPACK, Can't pack messages; MINOR, OHDR, H5E_CANTRESET, Can't reset object; MINOR, OHDR, H5E_CANTRENAME, Unable to rename object. # Group related errors; MINOR, GROUP, H5E_CANTOPENOBJ, Can't open object; MINOR, GROUP, H5E_CANTCLOSEOBJ, Can't close object; MINOR, GROUP, H5E_COMPLEN, Name component is too long; MINOR, GROUP, H5E_PATH, Problem with path to object. # Datatype conversion errors; MINOR, TYPECONV, H5E_CANTCONVERT, Can't convert datatypes; MINOR, TYPECONV, H5E_BADSIZE, Bad size for object. # Dataspace errors; MINOR, DSPACE, H5E_CANTCLIP, Can't clip hyperslab region; MINOR, DSPACE, H5E_CANTCOUNT, Can't count elements; MINOR, DSPACE, H5E_CANTSELECT, Can't select hyperslab; MINOR, DSPACE, H5E_CANTNEXT, Can't move to next iterator location; MINOR, DSPACE, H5E_BADSELECT, Invalid selection; MINOR, DSPACE, H5E_CANTCOMPARE, Can't compare objects; MINOR, DSPACE, H5E_INCONSISTENTSTATE, Internal states are inconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move object; MINOR, LINK, H5E_CANTSORT, Can't sort objects. # Parallel MPI errors; MINOR, MPI, H5E_MPI, Some MPI function failed; MINOR, MPI, H5E_MPIERRSTR, MPI Error String; MINOR, MPI, H5E_CANTRECV, Can't receive data; MINOR, MPI, H5E_CANTGATHER, Can't gather data; MINOR, MPI, H5E_NO_INDEPENDENT, Can't perform ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:9758,error,errors,9758,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability," ParMETIS only for evaluation purposes, and any further uses will require prior approval. The software may not be sold or redistributed without prior approval. One may make copies of the software for their use provided that the copies, are not sold or distributed, are used under the same terms and conditions.; As unestablished research software, this code is provided on an ""as is'' basis without warranty of any kind, either expressed or implied. The downloading, or executing any part of this software constitutes an implicit agreement to these terms. These terms and conditions are subject to change at any time without prior notice. ---. TecIO/TecIOMPI. ---. Tecplot, Inc. LICENSE AGREEMENT FOR Tecplot's TecIO (""TecIO""). TecIO is a software library provided by Tecplot, Inc. to enable software; developed by others to write data in Tecplot's proprietary binary file; formats, .plt and .szplt, and to read Tecplot binary data in .plt and .szplt; format. TecIO is included with Tecplot 360 EX and may also be downloaded from; http://www.tecplot.com/downloads/tecio-library/. This license applies to versions of the TecIO library distributed with Tecplot; 360 EX 2016 R2 and later and covers both the serial and parallel (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges that this is only a limited nonexclusive license.; Tecplot is and remains the owner of all titles, rights, and interests in TecIO; Software. Title to TecIO and all copies thereof remain with Tecplot. The; Materials are copyrighted and are protected by United States copyright laws and; international treaty provisions. Licensee will not remove any copyright notice; from the Materials. Tecplot does not grant any express or implied right to you; under Tecplot patents, copyrights, trademarks, or trade",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:26955,down,downloaded,26955,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['down'],['downloaded']
Availability," accessed; MINOR, FILEACC, H5E_TRUNCATED, File has been truncated; MINOR, FILEACC, H5E_MOUNT, File mount error; MINOR, FILEACC, H5E_CANTDELETEFILE, Unable to delete file; MINOR, FILEACC, H5E_CANTLOCKFILE, Unable to lock file; MINOR, FILEACC, H5E_CANTUNLOCKFILE, Unable to unlock file. # Generic low-level file I/O errors; MINOR, FILE, H5E_SEEKERROR, Seek failed; MINOR, FILE, H5E_READERROR, Read failed; MINOR, FILE, H5E_WRITEERROR, Write failed; MINOR, FILE, H5E_CLOSEERROR, Close failed; MINOR, FILE, H5E_OVERFLOW, Address overflowed; MINOR, FILE, H5E_FCNTL, File control (fcntl) failed. # Function entry/exit interface errors; MINOR, FUNC, H5E_CANTINIT, Unable to initialize object; MINOR, FUNC, H5E_ALREADYINIT, Object already initialized; MINOR, FUNC, H5E_CANTRELEASE, Unable to release object. # Object atom related errors; MINOR, ATOM, H5E_BADATOM, Unable to find atom information (already closed?); MINOR, ATOM, H5E_BADGROUP, Unable to find ID group information; MINOR, ATOM, H5E_CANTREGISTER, Unable to register new atom; MINOR, ATOM, H5E_CANTINC, Unable to increment reference count; MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MINOR, CACHE, H5E_CANTTAG, Unable to tag metadata in the cache; MINOR, CACHE, H5E_CANTLOAD, Unable to load metadata into cache; MINOR, CACHE, H5E_PROTECT, Protected metadata error; MINOR, CACHE, H5E_NOTCACHED, Metadata not currently cached; MINOR, CACHE, H5E_SYSTEM, Internal error detected; MINOR, CACHE, H5E_CANTINS, Unable to insert metadata into cache; MINOR, CACHE, H5E_CANTPROTECT, Unable to protect metadata; MINOR, CACHE, H5E_CANTUNPROTECT, Unable to unprotect metadata; MINOR, CACHE, H5E_CANTPIN, Unable to pin cache entry; MINOR, CACHE, H5E_CANTUNPIN, Unab",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:6120,error,errors,6120,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability," elements; MINOR, DSPACE, H5E_CANTSELECT, Can't select hyperslab; MINOR, DSPACE, H5E_CANTNEXT, Can't move to next iterator location; MINOR, DSPACE, H5E_BADSELECT, Invalid selection; MINOR, DSPACE, H5E_CANTCOMPARE, Can't compare objects; MINOR, DSPACE, H5E_INCONSISTENTSTATE, Internal states are inconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move object; MINOR, LINK, H5E_CANTSORT, Can't sort objects. # Parallel MPI errors; MINOR, MPI, H5E_MPI, Some MPI function failed; MINOR, MPI, H5E_MPIERRSTR, MPI Error String; MINOR, MPI, H5E_CANTRECV, Can't receive data; MINOR, MPI, H5E_CANTGATHER, Can't gather data; MINOR, MPI, H5E_NO_INDEPENDENT, Can't perform independent IO. # Heap errors; MINOR, HEAP, H5E_CANTRESTORE, Can't restore condition; MINOR, HEAP, H5E_CANTCOMPUTE, Can't compute value; MINOR, HEAP, H5E_CANTEXTEND, Can't extend heap's space; MINOR, HEAP, H5E_CANTATTACH, Can't attach object; MINOR, HEAP, H5E_CANTUPDATE, Can't update object; MINOR, HEAP, H5E_CANTOPERATE, Can't operate on object. # Free space manager errors; MINOR, FSPACE, H5E_CANTMERGE, Can't merge objects; MINOR, FSPACE, H5E_CANTREVIVE, Can't revive object; MINOR, FSPACE, H5E_CANTSHRINK, Can't shrink container. # I/O pipeline errors; MINOR, PIPELINE, H5E_NOFILTER, Requested filter is not available; MINOR, PIPELINE, H5E_CALLBACK, Callback failed; MINOR, PIPELINE, H5E_CANAPPLY, Error from filter 'can apply' callback; MINOR, PIPELINE, H5E_SETLOCAL, Error from filter 'set local' callback; MINOR, PIPELINE, H5E_NOENCODER, Filter present but encoding disabl",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:10746,error,errors,10746,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability," it is important for good performance that your; % system supports MPI_THREAD_MULTIPLE (SU2_CFD --thread_multiple ...); % Furthermore, if MPI_THREAD_MULTIPLE is NOT supported, you need to; % uncomment the line with ""-DPASTIX_FUNNELED"" in config.in.; % Finally, if you just use threads (no MPI) this is not important.; %; % 4 - Build SU2; % Follow the normal meson build instructions, add -Denable-pastix=true,; % this requires you to compile with MKL (-Denable-mkl=true) or OpenBLAS; % (-Denable-openblas=true) support in your call to meson.py.; % If you did not build PaStiX and Scotch in the externals folders you must; % use -Dpastix_root=""some path"" and -Dscotch_root=""another path"" to; % indicate where they are RELATIVE to the SU2 directory.; % You need sequential versions of BLAS. But when using MPI+Threads beware that; % OpenBLAS needs to have parallel support otherwise the solver will crash, if; % you get poor performance see 5.4 below.; %; % 5 - Common problems and known issues; % - OpenMPI 4 does not work with PaStiX 5, downgrade to 3.1.4.; % - Very early versions of OpenMPI 3 may have problems with MPI types.; % - OpenBLAS build fails when linking executables. Old versions (e.g.; % 0.2.18) did not provide LAPACK support, rebuild or upgrade.; % - Very bad performance with OpenBLAS on some systems (observed on Ubuntu; % 16.04) try ""export OMP_NUM_THREADS=1"" before running SU2, check that; % you only see N SU2 processes running at 100% (mpirun -n N SU2_XXX).; % - Cannot find BLAS dependency:; % i - On some OS the package has a different name (e.g. Ubuntu 16.04; % blas-openblas instead of openblas), use -Dblas-name=""right name"" in; % call to meson.py; % ii - The name is right but meson cannot find it. Set env variable; % PKG_CONFIG_PATH=$PKG_CONFIG_PATH:""directory with someblas.pc file""; % - MKL is not in its standard directory (/opt/intel/mkl), use option; % -Dmkl_root=""non standard directory"" in call to meson.py (headers are; % expected in ""include"" and libraries in ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:3106,down,downgrade,3106,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['down'],['downgrade']
Availability," to object. # Datatype conversion errors; MINOR, TYPECONV, H5E_CANTCONVERT, Can't convert datatypes; MINOR, TYPECONV, H5E_BADSIZE, Bad size for object. # Dataspace errors; MINOR, DSPACE, H5E_CANTCLIP, Can't clip hyperslab region; MINOR, DSPACE, H5E_CANTCOUNT, Can't count elements; MINOR, DSPACE, H5E_CANTSELECT, Can't select hyperslab; MINOR, DSPACE, H5E_CANTNEXT, Can't move to next iterator location; MINOR, DSPACE, H5E_BADSELECT, Invalid selection; MINOR, DSPACE, H5E_CANTCOMPARE, Can't compare objects; MINOR, DSPACE, H5E_INCONSISTENTSTATE, Internal states are inconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move object; MINOR, LINK, H5E_CANTSORT, Can't sort objects. # Parallel MPI errors; MINOR, MPI, H5E_MPI, Some MPI function failed; MINOR, MPI, H5E_MPIERRSTR, MPI Error String; MINOR, MPI, H5E_CANTRECV, Can't receive data; MINOR, MPI, H5E_CANTGATHER, Can't gather data; MINOR, MPI, H5E_NO_INDEPENDENT, Can't perform independent IO. # Heap errors; MINOR, HEAP, H5E_CANTRESTORE, Can't restore condition; MINOR, HEAP, H5E_CANTCOMPUTE, Can't compute value; MINOR, HEAP, H5E_CANTEXTEND, Can't extend heap's space; MINOR, HEAP, H5E_CANTATTACH, Can't attach object; MINOR, HEAP, H5E_CANTUPDATE, Can't update object; MINOR, HEAP, H5E_CANTOPERATE, Can't operate on object. # Free space manager errors; MINOR, FSPACE, H5E_CANTMERGE, Can't merge objects; MINOR, FSPACE, H5E_CANTREVIVE, Can't revive object; MINOR, FSPACE, H5E_CANTSHRINK, Can't shrink container. # I/O pipeline errors; MINOR, PIPELINE, H5E_NOFILTER, Requested filter is ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:10466,error,errors,10466,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,2,"['error', 'failure']","['errors', 'failure']"
Availability,"# Copyright by The HDF Group.; # Copyright by the Board of Trustees of the University of Illinois.; # All rights reserved.; #; # This file is part of HDF5. The full HDF5 copyright notice, including; # terms governing use, modification, and redistribution, is contained in; # the COPYING file, which can be found at the root of the source code; # distribution tree, or in https://www.hdfgroup.org/licenses.; # If you do not have access to either file, you may request a copy from; # help@hdfgroup.org.; #. # This file is used to generate the various headers that are needed for the; # error API. The bin/make_err script reads in this file and creates the; # appropriate files in the src/ directory when the generated headers are out; # of date with respect to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>,<major section, if minor type, otherwise omitted>,<name>,<description>; #; # For example, the following sample input shows two major errors and two minor; # errors in each section:; #; # MAJOR, H5E_ARGS, Invalid arguments to routine; # MAJOR, H5E_RESOURCE, Resource unavailable; #; # SECTION, ARGS, Argument errors; # SECTION, RESOURCE, Resource errors; #; # MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; # MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; # MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; # MINOR, RESOURCE, H5E_CANTCOPY, unable to copy object; #; # The section information is just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in de",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:584,error,error,584,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['error']
Availability,"# Gradient validation from start to finish. This guide steps you through the steps necessary to perform a validation of the discrete adjoint sensitivities using finite differences. All necessary config files are present and this guide steps through the different tasks to do. If you are lucky enough too have some cores to spare, 14 is a suitable substitution for the `<#cores>` placeholder. ## FFD-box creation; This step is optional as the provided mesh already contains FFD box. This is for completeness if a new mesh e.g. with different resolution is created.; In `configMaster.cfg` the mentioned options have to be uncommented and others commented if they appear twice in the config.; Note that (only!) for the FFD-box creation a `MARKER_HEATFLUX= ( fluid_symmetry ) is artificially is set to avoid an error. This has to be done to make the config-Postprocessing aware that this marker exists as it is used in `DV_MARKER`.; Call `SU2_DEF configMaster.cfg` which creates the new mesh with the name given in 'MESH_OUT_FILENAME'. ## Primal run; Run `mpirun -n <#cores> SU2_CFD configMaster.cfg`. ## Discrete-Adjoint run; Rename\copy\symlink `restart_*.dat` -> `solution_*.dat`; Run `mpirun -n <#cores> SU2_CFD_AD DA_configMaster.cfg` and afterwards `SU2_DOT_AD DA_configMaster.cfg`. ## Finite-Differences run; The `OUTER_ITER` is set low in order to be suitable for the regression test. Set that back the number given in the config.; For the full gradient validation uncomment all design variables of the `DEFINITION_DV` config option.; Run `finite_differences.py -f FD_configMaster.cfg -z 2 -n <#cores>`. ## Comparing results; Just plot the `of_grad.csv` and `FINDIFF/of_grad_findiff.csv` with your tool of choice. Paraview's `Line Chart View` is one option.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md:807,error,error,807,TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,1,['error'],['error']
Availability,# Passive species transport validation case. The gmsh .geo file that the mesh created with is available in the respective folder of the su2code/Testcase repository.; ,MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/passive_transport_validation/README.md:94,avail,available,94,TestCases/species_transport/passive_transport_validation/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/passive_transport_validation/README.md,1,['avail'],['available']
Availability,"# Test case for Equivalent area calculation . ## Introduction; The purpose of this test case is to confirm equivalent area distribution and its adjoint can be calculated by SU2. Equivalent area is a distribution calculated from pressure along a line parallel to the aircraft axis. It can be used to supersonic aircraft design. See the paper below for an example of use of SU2 for supersonic aircraft design using equivalent area distribution. Palacios, F., Alonso, J. J., Colonno, M., Hicken, J., and Lukaczyk, T., ""Adjoint-based method for supersonic aircraft design using equivalent area distribution,"" AIAA 2012-0269, 2012. DOI: [10.2514/6.2012-269](https://arc.aiaa.org/doi/10.2514/6.2012-269). ## Expected outcome; - Direct solver; - Equivalent area is calculated without errors.; - Discrete adjoint solver; - Adjoint solution is calculated without errors. ## Files for this test case; Below is a list of files for this test case and explanation for each file.; - SU2 repository; - NACA64206.cfg; - Configuration file.; - TestCases repository; - NACA64206_FFD.su2; - Mesh file. NACA64-206 was used as an airfoil. Arbitrary swept angle and taper ratio were used to create 3D geometry. It has a circumferential nearfield boundary at 3 aircraft lengths.; - solution_flow.csv; - Solution file of direct solver after 4000 iterations. This is required for running adjoint solver.; - TargetEA.dat; - Target equivalent area distribution. See the file for format. In this file, equivalent area is increased by 5% from direct solution to use as an example target. ## How to use equivalent area calculation function. ### Config file; See SUPERSONIC SIMULATION section of config_template.cfg. ### Mesh; A mesh has to have a circumferential boundary around the aircraft axis within the calculation domain and has to be labeled as MARKER_NEARFIELD. This boundary has to have a structured grid with the same number of nodes along each azimuthal angle. ### Target equivalent area; TargetEA.dat is required for sh",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md:777,error,errors,777,TestCases/optimization_euler/equivalentarea_naca64206/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md,2,['error'],['errors']
Availability,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % SU2 configuration file %; % PaStiX support build instructions. %; % Institution: Imperial College London %; % File Version 8.1.0 ""Harrier"" %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; %; % 1 - Download; % Get PaStiX 5.2.3 from https://gforge.inria.fr/frs/?group_id=186; % Get Scotch 6.0.6 from https://gforge.inria.fr/projects/scotch; % Note: These two versions were tested on a number of platforms, some; % issues were encountered with more recent version of Scotch, and PaStiX; % 6.0.X is not compatible with SU2 as it does not support MPI yet.; %; % 2 - Build Scotch; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""scotch""; % cd scotch/src && cp Make.inc/Makefile.inc.x86-64_pc_linux2.XXXX Makefile.inc; % (choose the XXXX that matches your compiler); % Edit Makefile.inc and delete the cflag -DSCOTCH_PTHREAD (see why in 3-ii); % ""make ptscotch""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % AND your system supports MPI_THREAD_MULTIPLE, you do not need to; % delete the -DSCOTCH_PTHREAD flag (but doing so does no harm).; %; % 3 - Build PaStiX; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that t",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:705,down,downloaded,705,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['down'],['downloaded']
Availability,"%%%%%%%%%; %; % 1 - Download; % Get PaStiX 5.2.3 from https://gforge.inria.fr/frs/?group_id=186; % Get Scotch 6.0.6 from https://gforge.inria.fr/projects/scotch; % Note: These two versions were tested on a number of platforms, some; % issues were encountered with more recent version of Scotch, and PaStiX; % 6.0.X is not compatible with SU2 as it does not support MPI yet.; %; % 2 - Build Scotch; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""scotch""; % cd scotch/src && cp Make.inc/Makefile.inc.x86-64_pc_linux2.XXXX Makefile.inc; % (choose the XXXX that matches your compiler); % Edit Makefile.inc and delete the cflag -DSCOTCH_PTHREAD (see why in 3-ii); % ""make ptscotch""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % AND your system supports MPI_THREAD_MULTIPLE, you do not need to; % delete the -DSCOTCH_PTHREAD flag (but doing so does no harm).; %; % 3 - Build PaStiX; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that this may not work well with SU2_CFD_AD.; % If you do use MPI+Threads, it is important for good performance that your; % system supports MPI_THREAD_MULTIPLE (SU2_CFD --thread_multiple ...); % Furthermore, if MPI_THREAD_MULTIPLE is NOT supported, you need to; % uncomment the line with ""-",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:1254,down,downloaded,1254,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['down'],['downloaded']
Availability,", Unable to mark an entry as serialized; MINOR, CACHE, H5E_CANTDIRTY, Unable to mark metadata as dirty; MINOR, CACHE, H5E_CANTCLEAN, Unable to mark metadata as clean; MINOR, CACHE, H5E_CANTEXPUNGE, Unable to expunge a metadata cache entry; MINOR, CACHE, H5E_CANTRESIZE, Unable to resize a metadata cache entry; MINOR, CACHE, H5E_CANTDEPEND, Unable to create a flush dependency; MINOR, CACHE, H5E_CANTUNDEPEND, Unable to destroy a flush dependency; MINOR, CACHE, H5E_CANTNOTIFY, Unable to notify object about action; MINOR, CACHE, H5E_LOGGING, Failure in the cache logging framework; MINOR, CACHE, H5E_CANTCORK, Unable to cork an object; MINOR, CACHE, H5E_CANTUNCORK, Unable to uncork an object. # B-tree related errors; MINOR, BTREE, H5E_NOTFOUND, Object not found; MINOR, BTREE, H5E_EXISTS, Object already exists; MINOR, BTREE, H5E_CANTENCODE, Unable to encode value; MINOR, BTREE, H5E_CANTDECODE, Unable to decode value; MINOR, BTREE, H5E_CANTSPLIT, Unable to split node; MINOR, BTREE, H5E_CANTREDISTRIBUTE, Unable to redistribute records; MINOR, BTREE, H5E_CANTSWAP, Unable to swap records; MINOR, BTREE, H5E_CANTINSERT, Unable to insert object; MINOR, BTREE, H5E_CANTLIST, Unable to list node; MINOR, BTREE, H5E_CANTMODIFY, Unable to modify record; MINOR, BTREE, H5E_CANTREMOVE, Unable to remove object. # Object header related errors; MINOR, OHDR, H5E_LINKCOUNT, Bad object header link count; MINOR, OHDR, H5E_VERSION, Wrong version number; MINOR, OHDR, H5E_ALIGNMENT, Alignment error; MINOR, OHDR, H5E_BADMESG, Unrecognized message; MINOR, OHDR, H5E_CANTDELETE, Can't delete message; MINOR, OHDR, H5E_BADITER, Iteration failed; MINOR, OHDR, H5E_CANTPACK, Can't pack messages; MINOR, OHDR, H5E_CANTRESET, Can't reset object; MINOR, OHDR, H5E_CANTRENAME, Unable to rename object. # Group related errors; MINOR, GROUP, H5E_CANTOPENOBJ, Can't open object; MINOR, GROUP, H5E_CANTCLOSEOBJ, Can't close object; MINOR, GROUP, H5E_COMPLEN, Name component is too long; MINOR, GROUP, H5E_PATH, Problem with",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:8300,error,errors,8300,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability,"---; name: Bug report; about: Create a bug report to help us improve SU2; title: ''; labels: bug; assignees: ''. ---. *If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/.github/ISSUE_TEMPLATE/bug_report.md:1001,down,download,1001,.github/ISSUE_TEMPLATE/bug_report.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/.github/ISSUE_TEMPLATE/bug_report.md,1,['down'],['download']
Availability,"12, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select teciompi.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. teciompi.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guide.pdf) and Tecio; example programs for how to use this library. If you wish to copy only the; required files to a different folder for later use, please copy the following; files:. libteciompi.a (teciompi.lib on Windows); TECIO.h; tecio_Exports.h; tecio.inc; tecio.for; tecio.f90; tecio_license_agreement.txt. A Note on Boost: Tecio requires only the Boost header files--no libraries--so; it is possible to build teciompi using a Boost source distribution only, without; installing it. In this case, set Boost_INCLUDE_DIR to point to the root of; the source distribution, such as D:/boost_1_59_0, then click Configure, then; Generate in the CMake GUI (or for Linux, edit the Boost_INCLUDE_DIR setting in; CMakeLists.txt and reissue ""cmake ."" from the command",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:3081,error,errors,3081,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['error'],['errors']
Availability,"2foundation.org; Pedro Gomes - Director - pedro@su2foundation.org; Daniel Mayer - Director - daniel@su2foundation.org; ```. in collaboration with the following main contributors and research teams:. - Prof. Juan J. Alonso's group at Stanford University.; - Prof. Piero Colonna's group at Delft University of Technology.; - Prof. Nicolas R. Gauger's group at Kaiserslautern University of Technology.; - Prof. Alberto Guardone's group at Polytechnic University of Milan.; - Prof. Rafael Palacios' group at Imperial College London.; - Prof. Vincent Terrapon's group at the University of Liege.; - Prof. Edwin van der Weide's group at the University of Twente.; - Lab. of New Concepts in Aeronautics at Tech. Institute of Aeronautics.; - Bosch LLC Research and Technology Center North America. ## Individual Contributors ##. (extracted using `git shortlog -s --no-merges`, alphabetical order).; Copyright holders might be the individual person or their respective employer. If no real name is available, the Github user name is listed. ```; Aidan Jungo; Akshay.K.R; Alejandro; Alessandro Gastaldi; Aman uz zaman Baig; Amit Sachdeva; Ana Lourenco; Andrew Burkett; Andrew Wendorff; Aniket C. Aranake; Antonio Rubino; Arne Bachmann; Arne Voß; Beckett Y. Zhou; Benjamin S. Kirk; Brendan Tracey; Brian Munguía; Carsten Othmer; Catarina Garbacz; Charanya Venkatesan-Crome; Christian Bauer; Clark Pederson; Daumantas Kavolis; Dave Taflin; Eduardo Molina; Edwin van der Weide; Eitan Aberman; Ethan Alan Hereth; Florian Dittmann; Filip Hahs; Francesco Poli; Francisco D. Palacios; Gaurav Bansal; Giacomo Baldan; Giulio Gori; Guillaume Bâty; Harichand M V; HL Kline; HL Zhi; IndianaStokes; J. Sinsay; JSmith36; Jacob Needels; Jairo Paes Cavalcante Filho; Jason Howison; Jayant Mukhopadhaya; Jeffrey van Oostrom; Jessie Lauzon; João Loureiro; Johannes Blühdorn; JonathanSmith1936; Joseph Signorelli; Josy P. Pullockara; Kedar Naik; Kürşat Yurt; LaSerpe; Lennaert Tol; Liang Cheng; Lisa Kusch; Matteo Pini; Max Aehle",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/AUTHORS.md:1674,avail,available,1674,AUTHORS.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/AUTHORS.md,1,['avail'],['available']
Availability,"; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exists; MINOR, RESOURCE, H5E_CANTLOCK, Unable to lock object; MINOR, RESOURCE, H5E_CANTUNLOCK, Unable to unlock object; MINOR, RESOURCE, H5E_CANTGC, Unable to garbage collect; MINOR, RESOURCE, H5E_CANTGETSIZE, Unable to compute size; MINOR, RESOURCE, H5E_OBJOPEN, Object is already open. # File accessibility errors; MINOR, FILEACC, H5E_FILEEXISTS, File already exists; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, H5E_CANTCREATE, Unable to create file; MINOR, FILEACC, H5E_CANTOPENFILE, Unable to open file; MINOR, FILEACC, H5E_CANTCLOSEFILE, Unable to close file; MINOR, FILEACC, H5E_NOTHDF5, Not an HDF5 file; MINOR, FILEACC, H5E_BADFILE, Bad file ID accessed; MINOR, FILEACC, H5E_TRUNCATED, File has been truncated; MINOR, FILEACC, H5E_MOUNT, File mount error; MINOR, FILEACC, H5E_CANTDELETEFILE, Unable to delete file; MINOR, FILEACC, H5E_CANTLOCKFILE, Unable to lock file; MINOR, FILEACC, H5E_CANTUNLOCKFILE, Unable to unlock file. # Generic low-level file I/O errors; MINOR, FILE, H5E_SEEKERROR, Seek failed; MINOR, FILE, H5E_READERROR, Read failed; MINOR, FILE, H5E_WRITEERROR, Write failed; MINOR, FILE, H5E_CLOSEERROR, Close failed; MINOR, FILE, H5E_OVERFLOW, Address overflowed; MINOR, FILE, H5E_FCNTL, File control (fcntl) failed. # Function entry/exit interface errors; MINOR, FUNC, H5E_CANTINIT, Unable to initialize object; MINOR, FUNC, H5E_ALREADYINIT, Object already initialized; MINOR, FUNC, H5E_CANTRELEASE, Unable to release object. # Object atom related errors; MINOR, ATOM, H5E_BADATOM, Unable to find atom information (already closed?); MINOR, ATOM, H5E_BADGROUP, Unable to find ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:4934,error,errors,4934,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,2,['error'],"['error', 'errors']"
Availability,"<p align=""center"">; <img width=""250"" height=""154"" src=""Docs/logoSU2small.png"">; </p>. # SU2 (ver. 8.1.0 ""Harrier""): The Open-Source CFD Code. Computational analysis tools have revolutionized the way we design engineering systems, but most established codes are proprietary, unavailable, or prohibitively expensive for many users. The SU2 team is changing this, making multiphysics analysis and design optimization freely available as open-source software and involving everyone in its creation and development. For an overview of the technical details in SU2, please see the following AIAA Journal article:. ""SU2: An open-source suite for multiphysics simulation and design,"" AIAA Journal, 54(3):828-846, 2016. <http://arc.aiaa.org/doi/10.2514/1.J053813>. Please note that this project is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms. Continuous Integration:<br/>; [![Regression Testing](https://github.com/su2code/SU2/workflows/Regression%20Testing/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions); [![Release](https://github.com/su2code/SU2/workflows/Release%20Management/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions). Code Quality:<br/>; [![CodeFactor](https://www.codefactor.io/repository/github/su2code/su2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/s",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:421,avail,available,421,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['avail'],['available']
Availability,"Building GKlib requires CMake 2.8. Once you've installed CMake run. $ make. This will build the GKlib library in build/<arch>/. Options can be tweaked by; running make config. For example,. $ make config openmp=ON; $ make. will build GKlib will OpenMP support if it is available. GKlib can be installed with. $ make install. and uninstalled with. $ make uninstall. You can choose the installation prefix with make config:. $ make config prefix=~/local. will cause GKlib to be install in the ~/local tree.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/BUILD.txt:269,avail,available,269,externals/metis/GKlib/BUILD.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/BUILD.txt,1,['avail'],['available']
Availability,"Building the tecio library. Licensing; -------------; See tecio_license_agreement.txt for license information. Prerequisites:; -------------. Regardless of which build option you choose below you must have boost; installed on your computer (minimum version required: 1.59), or have; a Boost source distribution available. If you want to use an uninstalled; source distribution, please see the note on Boost at the bottom of this README. Building the library:; ---------------------; I. On Linux/Mac OS X; A. Using cmake. If you have cmake on you computer you may do the following. cmake .; make. B. Using make. If you do not have cmake then you can use the supplied Makefile.linux; using:. make BOOST_ROOT=iii -f Makefile.linux. where iii is the path to the boost include directory. If you find that you have to modify Makefile.linux to work on your system,; please let us know about your changes so we can provide a customized; makefile with our distribution. II. On Windows. CMake 2.8 or later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciosrc directory,; such as D:/teciosrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find v",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:311,avail,available,311,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['avail'],['available']
Availability,"Building the teciompi library. Licensing; -------------; See tecio_license_agreement.txt for license information. Prerequisites:; -------------. Regardless of which build option you choose below you must have boost; installed on your computer (minimum version required: 1.59), or have; a Boost source distribution available. If you want to use an uninstalled; source distribution, please see the note on Boost at the bottom of this README.; For Windows, you must install the Microsoft MPI SDK. For other OSs, install; any typical MPI installation, including mpich, OpenMPI, or vendor MPI software. Building the library:; ---------------------; I. On Linux/Mac OS X; A. Using cmake. If you have cmake on you computer you may do the following. cmake .; make. B. Using make. If you do not have cmake then you can use the supplied Makefile.linux; using:. make BOOST_ROOT=iii -f Makefile.linux. where iii is the path to the boost include directory. If you find that you have to modify Makefile.linux to work on your system,; please let us know about your changes so we can provide a customized; makefile with our distribution. II. On Windows. CMake 2.8 or later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciompisrc directory,; such as D:/teciompisrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:314,avail,available,314,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['avail'],['available']
Availability,"H5E_REFERENCE, References; MAJOR, H5E_VFL, Virtual File Layer; MAJOR, H5E_VOL, Virtual Object Layer; MAJOR, H5E_TST, Ternary Search Trees; MAJOR, H5E_RS, Reference Counted Strings; MAJOR, H5E_ERROR, Error API; MAJOR, H5E_SLIST, Skip Lists; MAJOR, H5E_FSPACE, Free Space Manager; MAJOR, H5E_SOHM, Shared Object Header Messages; MAJOR, H5E_EARRAY, Extensible Array; MAJOR, H5E_FARRAY, Fixed Array; MAJOR, H5E_PLUGIN, Plugin for dynamically loaded library; MAJOR, H5E_PAGEBUF, Page Buffering; MAJOR, H5E_CONTEXT, API Context; MAJOR, H5E_MAP, Map; MAJOR, H5E_NONE_MAJOR, No error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CACHE, Cache related errors; SECTION, LINK, Link related errors; SECTION, BTREE, B-tree related errors; SECTION, OHDR, Object header related errors; SECTION, GROUP, Group related errors; SECTION, TYPECONV, Datatype conversion errors; SECTION, DSPACE, Dataspace errors; SECTION, PLIST, Property list errors; SECTION, MPI, Parallel MPI errors; SECTION, HEAP, Heap errors; SECTION, FSPACE, Free space errors; SECTION, PIPELINE, I/O pipeline errors; SECTION, SYSTEM, System level errors; SECTION, PLUGIN, Plugin errors; SECTION, NONE, No error. # Minor errors. # Argument errors; MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; MINOR, ARGS, H5E_BADTYPE, Inappropriate type; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exi",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:3235,error,errors,3235,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,22,['error'],"['error', 'errors']"
Availability,"NAME, Unable to rename object. # Group related errors; MINOR, GROUP, H5E_CANTOPENOBJ, Can't open object; MINOR, GROUP, H5E_CANTCLOSEOBJ, Can't close object; MINOR, GROUP, H5E_COMPLEN, Name component is too long; MINOR, GROUP, H5E_PATH, Problem with path to object. # Datatype conversion errors; MINOR, TYPECONV, H5E_CANTCONVERT, Can't convert datatypes; MINOR, TYPECONV, H5E_BADSIZE, Bad size for object. # Dataspace errors; MINOR, DSPACE, H5E_CANTCLIP, Can't clip hyperslab region; MINOR, DSPACE, H5E_CANTCOUNT, Can't count elements; MINOR, DSPACE, H5E_CANTSELECT, Can't select hyperslab; MINOR, DSPACE, H5E_CANTNEXT, Can't move to next iterator location; MINOR, DSPACE, H5E_BADSELECT, Invalid selection; MINOR, DSPACE, H5E_CANTCOMPARE, Can't compare objects; MINOR, DSPACE, H5E_INCONSISTENTSTATE, Internal states are inconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move object; MINOR, LINK, H5E_CANTSORT, Can't sort objects. # Parallel MPI errors; MINOR, MPI, H5E_MPI, Some MPI function failed; MINOR, MPI, H5E_MPIERRSTR, MPI Error String; MINOR, MPI, H5E_CANTRECV, Can't receive data; MINOR, MPI, H5E_CANTGATHER, Can't gather data; MINOR, MPI, H5E_NO_INDEPENDENT, Can't perform independent IO. # Heap errors; MINOR, HEAP, H5E_CANTRESTORE, Can't restore condition; MINOR, HEAP, H5E_CANTCOMPUTE, Can't compute value; MINOR, HEAP, H5E_CANTEXTEND, Can't extend heap's space; MINOR, HEAP, H5E_CANTATTACH, Can't attach object; MINOR, HEAP, H5E_CANTUPDATE, Can't update object; MINOR, HEAP, H5E_CANTOPERATE, Can't operate on object. # Free sp",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:10242,error,errors,10242,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability,"Public License (LGPL) which; previously governed the use and distribution of the software. For details on the policy governing the distribution of the CGNS; standard and software see:. http://www.grc.nasa.gov/www/cgns/charter/principles.html. ---. Metis/Parmetis. ---. ParMETIS is copyrighted by the Regents of the University of Minnesota. It can be freely used for educational and research purposes by non-profit institutions and US government agencies only. Other organizations are allowed to use ParMETIS only for evaluation purposes, and any further uses will require prior approval. The software may not be sold or redistributed without prior approval. One may make copies of the software for their use provided that the copies, are not sold or distributed, are used under the same terms and conditions.; As unestablished research software, this code is provided on an ""as is'' basis without warranty of any kind, either expressed or implied. The downloading, or executing any part of this software constitutes an implicit agreement to these terms. These terms and conditions are subject to change at any time without prior notice. ---. TecIO/TecIOMPI. ---. Tecplot, Inc. LICENSE AGREEMENT FOR Tecplot's TecIO (""TecIO""). TecIO is a software library provided by Tecplot, Inc. to enable software; developed by others to write data in Tecplot's proprietary binary file; formats, .plt and .szplt, and to read Tecplot binary data in .plt and .szplt; format. TecIO is included with Tecplot 360 EX and may also be downloaded from; http://www.tecplot.com/downloads/tecio-library/. This license applies to versions of the TecIO library distributed with Tecplot; 360 EX 2016 R2 and later and covers both the serial and parallel (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges th",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:26395,down,downloading,26395,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['down'],['downloading']
Availability,"TION, OHDR, Object header related errors; SECTION, GROUP, Group related errors; SECTION, TYPECONV, Datatype conversion errors; SECTION, DSPACE, Dataspace errors; SECTION, PLIST, Property list errors; SECTION, MPI, Parallel MPI errors; SECTION, HEAP, Heap errors; SECTION, FSPACE, Free space errors; SECTION, PIPELINE, I/O pipeline errors; SECTION, SYSTEM, System level errors; SECTION, PLUGIN, Plugin errors; SECTION, NONE, No error. # Minor errors. # Argument errors; MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; MINOR, ARGS, H5E_BADTYPE, Inappropriate type; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exists; MINOR, RESOURCE, H5E_CANTLOCK, Unable to lock object; MINOR, RESOURCE, H5E_CANTUNLOCK, Unable to unlock object; MINOR, RESOURCE, H5E_CANTGC, Unable to garbage collect; MINOR, RESOURCE, H5E_CANTGETSIZE, Unable to compute size; MINOR, RESOURCE, H5E_OBJOPEN, Object is already open. # File accessibility errors; MINOR, FILEACC, H5E_FILEEXISTS, File already exists; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, H5E_CANTCREATE, Unable to create file; MINOR, FILEACC, H5E_CANTOPENFILE, Unable to open file; MINOR, FILEACC, H5E_CANTCLOSEFILE, Unable to close file; MINOR, FILEACC, H5E_NOTHDF5, Not an HDF5 file; MINOR, FILEACC, H5E_BADFILE, Bad file ID accessed; MINOR, FILEACC, H5E_TRUNCATED, File has been truncated; MINOR, FILEACC, H5E_MOUNT, File mount error; MINOR, FILEACC, H5E_CANTDELETEFILE, Unable to delete file; MINOR, FILEACC, H5E_CANTLOCKFILE, Unable to lock file; MINOR, FILEACC, H5E_CANTUNLOCKFILE, Unable to unlock file. # Generic low-level file I/O errors; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:4339,error,errors,4339,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,2,"['avail', 'error']","['available', 'errors']"
Availability,"Tecplot, Inc. LICENSE AGREEMENT FOR Tecplot's TecIO (""TecIO""). TecIO is a software library provided by Tecplot, Inc. to enable software; developed by others to write data in Tecplot's proprietary binary file; formats, .plt and .szplt, and to read Tecplot binary data in .plt and .szplt; format. TecIO is included with Tecplot 360 EX and may also be downloaded from; http://www.tecplot.com/downloads/tecio-library/. This license applies to versions of the TecIO library distributed with Tecplot; 360 EX 2016 R2 and later and covers both the serial and parallel (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges that this is only a limited nonexclusive license.; Tecplot is and remains the owner of all titles, rights, and interests in TecIO; Software. Title to TecIO and all copies thereof remain with Tecplot. The; Materials are copyrighted and are protected by United States copyright laws and; international treaty provisions. Licensee will not remove any copyright notice; from the Materials. Tecplot does not grant any express or implied right to you; under Tecplot patents, copyrights, trademarks, or trade secret information. 3. Subject to the terms and conditions of this License Agreement, Tecplot; hereby grants Licensee a nonexclusive, royalty-free, world-wide license to; reproduce, analyze, test, perform and/or display publicly, prepare derivative; works, distribute, and otherwise use TecIO alone or in any derivative version,; provided, however, that Tecplot's License Agreement and Tecplot's notice of; copyright, i.e., ""Copyright � 1988-2016 Tecplot, Inc. All rights reserved; worldwide."" are retained in TecIO alone or in any derivative version prepared; by Licensee. 4. In the event Licensee prepares a derivative work that is based on or; incorporates TecI",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt:349,down,downloaded,349,externals/tecio/teciompisrc/tecio_license_agreement.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt,4,['down'],"['downloaded', 'downloads']"
Availability,"ally loaded library; MAJOR, H5E_PAGEBUF, Page Buffering; MAJOR, H5E_CONTEXT, API Context; MAJOR, H5E_MAP, Map; MAJOR, H5E_NONE_MAJOR, No error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CACHE, Cache related errors; SECTION, LINK, Link related errors; SECTION, BTREE, B-tree related errors; SECTION, OHDR, Object header related errors; SECTION, GROUP, Group related errors; SECTION, TYPECONV, Datatype conversion errors; SECTION, DSPACE, Dataspace errors; SECTION, PLIST, Property list errors; SECTION, MPI, Parallel MPI errors; SECTION, HEAP, Heap errors; SECTION, FSPACE, Free space errors; SECTION, PIPELINE, I/O pipeline errors; SECTION, SYSTEM, System level errors; SECTION, PLUGIN, Plugin errors; SECTION, NONE, No error. # Minor errors. # Argument errors; MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; MINOR, ARGS, H5E_BADTYPE, Inappropriate type; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exists; MINOR, RESOURCE, H5E_CANTLOCK, Unable to lock object; MINOR, RESOURCE, H5E_CANTUNLOCK, Unable to unlock object; MINOR, RESOURCE, H5E_CANTGC, Unable to garbage collect; MINOR, RESOURCE, H5E_CANTGETSIZE, Unable to compute size; MINOR, RESOURCE, H5E_OBJOPEN, Object is already open. # File accessibility errors; MINOR, FILEACC, H5E_FILEEXISTS, File already exists; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:4061,error,errors,4061,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability,"censing; -------------; See tecio_license_agreement.txt for license information. Prerequisites:; -------------. Regardless of which build option you choose below you must have boost; installed on your computer (minimum version required: 1.59), or have; a Boost source distribution available. If you want to use an uninstalled; source distribution, please see the note on Boost at the bottom of this README. Building the library:; ---------------------; I. On Linux/Mac OS X; A. Using cmake. If you have cmake on you computer you may do the following. cmake .; make. B. Using make. If you do not have cmake then you can use the supplied Makefile.linux; using:. make BOOST_ROOT=iii -f Makefile.linux. where iii is the path to the boost include directory. If you find that you have to modify Makefile.linux to work on your system,; please let us know about your changes so we can provide a customized; makefile with our distribution. II. On Windows. CMake 2.8 or later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciosrc directory,; such as D:/teciosrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:1017,down,download,1017,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['down'],['download']
Availability,"ck object; MINOR, RESOURCE, H5E_CANTGC, Unable to garbage collect; MINOR, RESOURCE, H5E_CANTGETSIZE, Unable to compute size; MINOR, RESOURCE, H5E_OBJOPEN, Object is already open. # File accessibility errors; MINOR, FILEACC, H5E_FILEEXISTS, File already exists; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, H5E_CANTCREATE, Unable to create file; MINOR, FILEACC, H5E_CANTOPENFILE, Unable to open file; MINOR, FILEACC, H5E_CANTCLOSEFILE, Unable to close file; MINOR, FILEACC, H5E_NOTHDF5, Not an HDF5 file; MINOR, FILEACC, H5E_BADFILE, Bad file ID accessed; MINOR, FILEACC, H5E_TRUNCATED, File has been truncated; MINOR, FILEACC, H5E_MOUNT, File mount error; MINOR, FILEACC, H5E_CANTDELETEFILE, Unable to delete file; MINOR, FILEACC, H5E_CANTLOCKFILE, Unable to lock file; MINOR, FILEACC, H5E_CANTUNLOCKFILE, Unable to unlock file. # Generic low-level file I/O errors; MINOR, FILE, H5E_SEEKERROR, Seek failed; MINOR, FILE, H5E_READERROR, Read failed; MINOR, FILE, H5E_WRITEERROR, Write failed; MINOR, FILE, H5E_CLOSEERROR, Close failed; MINOR, FILE, H5E_OVERFLOW, Address overflowed; MINOR, FILE, H5E_FCNTL, File control (fcntl) failed. # Function entry/exit interface errors; MINOR, FUNC, H5E_CANTINIT, Unable to initialize object; MINOR, FUNC, H5E_ALREADYINIT, Object already initialized; MINOR, FUNC, H5E_CANTRELEASE, Unable to release object. # Object atom related errors; MINOR, ATOM, H5E_BADATOM, Unable to find atom information (already closed?); MINOR, ATOM, H5E_BADGROUP, Unable to find ID group information; MINOR, ATOM, H5E_CANTREGISTER, Unable to register new atom; MINOR, ATOM, H5E_CANTINC, Unable to increment reference count; MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MI",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:5612,error,errors,5612,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability,"cords; MINOR, BTREE, H5E_CANTINSERT, Unable to insert object; MINOR, BTREE, H5E_CANTLIST, Unable to list node; MINOR, BTREE, H5E_CANTMODIFY, Unable to modify record; MINOR, BTREE, H5E_CANTREMOVE, Unable to remove object. # Object header related errors; MINOR, OHDR, H5E_LINKCOUNT, Bad object header link count; MINOR, OHDR, H5E_VERSION, Wrong version number; MINOR, OHDR, H5E_ALIGNMENT, Alignment error; MINOR, OHDR, H5E_BADMESG, Unrecognized message; MINOR, OHDR, H5E_CANTDELETE, Can't delete message; MINOR, OHDR, H5E_BADITER, Iteration failed; MINOR, OHDR, H5E_CANTPACK, Can't pack messages; MINOR, OHDR, H5E_CANTRESET, Can't reset object; MINOR, OHDR, H5E_CANTRENAME, Unable to rename object. # Group related errors; MINOR, GROUP, H5E_CANTOPENOBJ, Can't open object; MINOR, GROUP, H5E_CANTCLOSEOBJ, Can't close object; MINOR, GROUP, H5E_COMPLEN, Name component is too long; MINOR, GROUP, H5E_PATH, Problem with path to object. # Datatype conversion errors; MINOR, TYPECONV, H5E_CANTCONVERT, Can't convert datatypes; MINOR, TYPECONV, H5E_BADSIZE, Bad size for object. # Dataspace errors; MINOR, DSPACE, H5E_CANTCLIP, Can't clip hyperslab region; MINOR, DSPACE, H5E_CANTCOUNT, Can't count elements; MINOR, DSPACE, H5E_CANTSELECT, Can't select hyperslab; MINOR, DSPACE, H5E_CANTNEXT, Can't move to next iterator location; MINOR, DSPACE, H5E_BADSELECT, Invalid selection; MINOR, DSPACE, H5E_CANTCOMPARE, Can't compare objects; MINOR, DSPACE, H5E_INCONSISTENTSTATE, Internal states are inconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:9628,error,errors,9628,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability,"ctor](https://www.codefactor.io/repository/github/su2code/su2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:2273,down,download,2273,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['down'],['download']
Availability,"e, including; # terms governing use, modification, and redistribution, is contained in; # the COPYING file, which can be found at the root of the source code; # distribution tree, or in https://www.hdfgroup.org/licenses.; # If you do not have access to either file, you may request a copy from; # help@hdfgroup.org.; #. # This file is used to generate the various headers that are needed for the; # error API. The bin/make_err script reads in this file and creates the; # appropriate files in the src/ directory when the generated headers are out; # of date with respect to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>,<major section, if minor type, otherwise omitted>,<name>,<description>; #; # For example, the following sample input shows two major errors and two minor; # errors in each section:; #; # MAJOR, H5E_ARGS, Invalid arguments to routine; # MAJOR, H5E_RESOURCE, Resource unavailable; #; # SECTION, ARGS, Argument errors; # SECTION, RESOURCE, Resource errors; #; # MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; # MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; # MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; # MINOR, RESOURCE, H5E_CANTCOPY, unable to copy object; #; # The section information is just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in detail); MAJOR, H5E_LIB, General library infrastructure; MAJOR, H5E_FILE, File accessibility; MAJOR, H5E_IO, Low-level I/O; MAJOR, H5E_FUNC, Function entry/exit; MAJOR, H5E_ATOM, Object ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:1017,error,errors,1017,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,5,"['avail', 'error']","['available', 'errors']"
Availability,"eaders are out; # of date with respect to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>,<major section, if minor type, otherwise omitted>,<name>,<description>; #; # For example, the following sample input shows two major errors and two minor; # errors in each section:; #; # MAJOR, H5E_ARGS, Invalid arguments to routine; # MAJOR, H5E_RESOURCE, Resource unavailable; #; # SECTION, ARGS, Argument errors; # SECTION, RESOURCE, Resource errors; #; # MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; # MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; # MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; # MINOR, RESOURCE, H5E_CANTCOPY, unable to copy object; #; # The section information is just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in detail); MAJOR, H5E_LIB, General library infrastructure; MAJOR, H5E_FILE, File accessibility; MAJOR, H5E_IO, Low-level I/O; MAJOR, H5E_FUNC, Function entry/exit; MAJOR, H5E_ATOM, Object atom; MAJOR, H5E_CACHE, Object cache; MAJOR, H5E_LINK, Links; MAJOR, H5E_BTREE, B-Tree node; MAJOR, H5E_SYM, Symbol table; MAJOR, H5E_HEAP, Heap; MAJOR, H5E_OHDR, Object header; MAJOR, H5E_DATATYPE, Datatype; MAJOR, H5E_DATASPACE, Dataspace; MAJOR, H5E_DATASET, Dataset; MAJOR, H5E_STORAGE, Data storage; MAJOR, H5E_PLIST, Property lists; MAJOR, H5E_ATTR, Attribute; MAJOR, H5E_PLINE, Data filters; MAJOR, H5E_EFL, External file list; MAJOR, H5E_REFERENCE, References; MAJOR, H5E_VFL, Virtual File Layer; MAJOR, H5E_VOL, Virtual Obj",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:1709,error,error,1709,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,2,['error'],['error']
Availability,"er; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciompisrc directory,; such as D:/teciompisrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select teciompi.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. teciompi.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guide.pdf) and Tecio; example programs for how to use this library. If you wish to copy only the; required files to a different folder for later use, please copy the following; files:. libteciompi.a (t",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:2482,error,errors,2482,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['error'],['errors']
Availability,"error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CACHE, Cache related errors; SECTION, LINK, Link related errors; SECTION, BTREE, B-tree related errors; SECTION, OHDR, Object header related errors; SECTION, GROUP, Group related errors; SECTION, TYPECONV, Datatype conversion errors; SECTION, DSPACE, Dataspace errors; SECTION, PLIST, Property list errors; SECTION, MPI, Parallel MPI errors; SECTION, HEAP, Heap errors; SECTION, FSPACE, Free space errors; SECTION, PIPELINE, I/O pipeline errors; SECTION, SYSTEM, System level errors; SECTION, PLUGIN, Plugin errors; SECTION, NONE, No error. # Minor errors. # Argument errors; MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; MINOR, ARGS, H5E_BADTYPE, Inappropriate type; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exists; MINOR, RESOURCE, H5E_CANTLOCK, Unable to lock object; MINOR, RESOURCE, H5E_CANTUNLOCK, Unable to unlock object; MINOR, RESOURCE, H5E_CANTGC, Unable to garbage collect; MINOR, RESOURCE, H5E_CANTGETSIZE, Unable to compute size; MINOR, RESOURCE, H5E_OBJOPEN, Object is already open. # File accessibility errors; MINOR, FILEACC, H5E_FILEEXISTS, File already exists; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, H5E_CANTCREATE, Unable to create file; MINOR, FILEACC, H5E_CANTOPENFILE, Unable to open file; MINOR, FILEACC, H5E_CANTCLOSEFILE, Unable to",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:4080,error,errors,4080,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability,"goals -; cascading levels of functionality; lower levels stand on their own, and provide usefulness to; higher levels when asked. updating config, state at or close to point of operation. delay class structure until mid/high levels. EXECUTION. level0 - raw suite; no upstream pointer communication. partitions set once in config initial read. SU2.run.CFD(config); SU2.run.DEF(config); SU2.run.DOT(config); SU2.run.SMC(config); 	interpret partitions; 	dump config; 	prepare os command; 	run os command; 	handle suite errors. level1 - suite + intent; upstream pointer communication of config; config (super copy) vs konfig (local copy); update super copy to make useful for next analysis steps; make temporary super deepcopy if not desired; returns info dictionary for higher level functions; all tools assume config['NUMBER_PART'] already set. SU2.run.deform(config,dv_new=[]); 	optional dv_new sets:; 		'DV_VALUE_OLD' = [0.0]*n_dv; 		'DV_VALUE_NEW' = dv_new; 		'DV_MARKER','DV_KIND','DV_PARAM' based on 'DEFINITION_DV'; 	checks decomp; 	adds 'deform' suffix to mesh_out; 	run DEF; 	pointer updated config; 		'MESH_FILENAME' = 'MESH_FILENAME'+'_deform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assu",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:516,error,errors,516,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['error'],['errors']
Availability,"ilure in the cache logging framework; MINOR, CACHE, H5E_CANTCORK, Unable to cork an object; MINOR, CACHE, H5E_CANTUNCORK, Unable to uncork an object. # B-tree related errors; MINOR, BTREE, H5E_NOTFOUND, Object not found; MINOR, BTREE, H5E_EXISTS, Object already exists; MINOR, BTREE, H5E_CANTENCODE, Unable to encode value; MINOR, BTREE, H5E_CANTDECODE, Unable to decode value; MINOR, BTREE, H5E_CANTSPLIT, Unable to split node; MINOR, BTREE, H5E_CANTREDISTRIBUTE, Unable to redistribute records; MINOR, BTREE, H5E_CANTSWAP, Unable to swap records; MINOR, BTREE, H5E_CANTINSERT, Unable to insert object; MINOR, BTREE, H5E_CANTLIST, Unable to list node; MINOR, BTREE, H5E_CANTMODIFY, Unable to modify record; MINOR, BTREE, H5E_CANTREMOVE, Unable to remove object. # Object header related errors; MINOR, OHDR, H5E_LINKCOUNT, Bad object header link count; MINOR, OHDR, H5E_VERSION, Wrong version number; MINOR, OHDR, H5E_ALIGNMENT, Alignment error; MINOR, OHDR, H5E_BADMESG, Unrecognized message; MINOR, OHDR, H5E_CANTDELETE, Can't delete message; MINOR, OHDR, H5E_BADITER, Iteration failed; MINOR, OHDR, H5E_CANTPACK, Can't pack messages; MINOR, OHDR, H5E_CANTRESET, Can't reset object; MINOR, OHDR, H5E_CANTRENAME, Unable to rename object. # Group related errors; MINOR, GROUP, H5E_CANTOPENOBJ, Can't open object; MINOR, GROUP, H5E_CANTCLOSEOBJ, Can't close object; MINOR, GROUP, H5E_COMPLEN, Name component is too long; MINOR, GROUP, H5E_PATH, Problem with path to object. # Datatype conversion errors; MINOR, TYPECONV, H5E_CANTCONVERT, Can't convert datatypes; MINOR, TYPECONV, H5E_BADSIZE, Bad size for object. # Dataspace errors; MINOR, DSPACE, H5E_CANTCLIP, Can't clip hyperslab region; MINOR, DSPACE, H5E_CANTCOUNT, Can't count elements; MINOR, DSPACE, H5E_CANTSELECT, Can't select hyperslab; MINOR, DSPACE, H5E_CANTNEXT, Can't move to next iterator location; MINOR, DSPACE, H5E_BADSELECT, Invalid selection; MINOR, DSPACE, H5E_CANTCOMPARE, Can't compare objects; MINOR, DSPACE, H5E_INCONSISTENT",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:8920,error,errors,8920,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,2,['error'],"['error', 'errors']"
Availability,"in64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select teciompi.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. teciompi.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guide.pdf) and Tecio; example programs for how to use this library. If you wish to copy only the; required files to a different folder for later use, please copy the following; files:. libteciompi.a (teciompi.lib on Windows); TECIO.h; tecio_Exports.h; tecio.inc; tecio.for; tecio.f90; tecio_license_agreement.txt. A Note on Boost: Tecio requires only the Boost header files--no libraries--so; it is possible to build teciompi using a Boost source distribution only, without; installing it. In this case, set Boost_INCLUDE_DIR to point to the root of; the source distribution, such as D:/boost_1_59_0, then click Configure, then; Generate in the CMake GUI (or for Linux, edit the Boost_INCLUDE_DIR setting in; CMakeLists.txt and reissue ""cmake ."" from the command line to recreate Makefile).; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:3113,avail,available,3113,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['avail'],['available']
Availability,"ithub.com/su2code/SU2/actions). Code Quality:<br/>; [![CodeFactor](https://www.codefactor.io/repository/github/su2code/su2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, Ma",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:2232,down,download,2232,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['down'],['download']
Availability,"just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in detail); MAJOR, H5E_LIB, General library infrastructure; MAJOR, H5E_FILE, File accessibility; MAJOR, H5E_IO, Low-level I/O; MAJOR, H5E_FUNC, Function entry/exit; MAJOR, H5E_ATOM, Object atom; MAJOR, H5E_CACHE, Object cache; MAJOR, H5E_LINK, Links; MAJOR, H5E_BTREE, B-Tree node; MAJOR, H5E_SYM, Symbol table; MAJOR, H5E_HEAP, Heap; MAJOR, H5E_OHDR, Object header; MAJOR, H5E_DATATYPE, Datatype; MAJOR, H5E_DATASPACE, Dataspace; MAJOR, H5E_DATASET, Dataset; MAJOR, H5E_STORAGE, Data storage; MAJOR, H5E_PLIST, Property lists; MAJOR, H5E_ATTR, Attribute; MAJOR, H5E_PLINE, Data filters; MAJOR, H5E_EFL, External file list; MAJOR, H5E_REFERENCE, References; MAJOR, H5E_VFL, Virtual File Layer; MAJOR, H5E_VOL, Virtual Object Layer; MAJOR, H5E_TST, Ternary Search Trees; MAJOR, H5E_RS, Reference Counted Strings; MAJOR, H5E_ERROR, Error API; MAJOR, H5E_SLIST, Skip Lists; MAJOR, H5E_FSPACE, Free Space Manager; MAJOR, H5E_SOHM, Shared Object Header Messages; MAJOR, H5E_EARRAY, Extensible Array; MAJOR, H5E_FARRAY, Fixed Array; MAJOR, H5E_PLUGIN, Plugin for dynamically loaded library; MAJOR, H5E_PAGEBUF, Page Buffering; MAJOR, H5E_CONTEXT, API Context; MAJOR, H5E_MAP, Map; MAJOR, H5E_NONE_MAJOR, No error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CAC",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:1836,error,errors,1836,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,3,['error'],"['error', 'errors']"
Availability,"l require prior approval. The software may not be sold or redistributed without prior approval. One may make copies of the software for their use provided that the copies, are not sold or distributed, are used under the same terms and conditions.; As unestablished research software, this code is provided on an ""as is'' basis without warranty of any kind, either expressed or implied. The downloading, or executing any part of this software constitutes an implicit agreement to these terms. These terms and conditions are subject to change at any time without prior notice. ---. TecIO/TecIOMPI. ---. Tecplot, Inc. LICENSE AGREEMENT FOR Tecplot's TecIO (""TecIO""). TecIO is a software library provided by Tecplot, Inc. to enable software; developed by others to write data in Tecplot's proprietary binary file; formats, .plt and .szplt, and to read Tecplot binary data in .plt and .szplt; format. TecIO is included with Tecplot 360 EX and may also be downloaded from; http://www.tecplot.com/downloads/tecio-library/. This license applies to versions of the TecIO library distributed with Tecplot; 360 EX 2016 R2 and later and covers both the serial and parallel (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges that this is only a limited nonexclusive license.; Tecplot is and remains the owner of all titles, rights, and interests in TecIO; Software. Title to TecIO and all copies thereof remain with Tecplot. The; Materials are copyrighted and are protected by United States copyright laws and; international treaty provisions. Licensee will not remove any copyright notice; from the Materials. Tecplot does not grant any express or implied right to you; under Tecplot patents, copyrights, trademarks, or trade secret information. 3. Subject to the terms and conditions of t",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:26995,down,downloads,26995,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['down'],['downloads']
Availability,"le and creates the; # appropriate files in the src/ directory when the generated headers are out; # of date with respect to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>,<major section, if minor type, otherwise omitted>,<name>,<description>; #; # For example, the following sample input shows two major errors and two minor; # errors in each section:; #; # MAJOR, H5E_ARGS, Invalid arguments to routine; # MAJOR, H5E_RESOURCE, Resource unavailable; #; # SECTION, ARGS, Argument errors; # SECTION, RESOURCE, Resource errors; #; # MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; # MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; # MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; # MINOR, RESOURCE, H5E_CANTCOPY, unable to copy object; #; # The section information is just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in detail); MAJOR, H5E_LIB, General library infrastructure; MAJOR, H5E_FILE, File accessibility; MAJOR, H5E_IO, Low-level I/O; MAJOR, H5E_FUNC, Function entry/exit; MAJOR, H5E_ATOM, Object atom; MAJOR, H5E_CACHE, Object cache; MAJOR, H5E_LINK, Links; MAJOR, H5E_BTREE, B-Tree node; MAJOR, H5E_SYM, Symbol table; MAJOR, H5E_HEAP, Heap; MAJOR, H5E_OHDR, Object header; MAJOR, H5E_DATATYPE, Datatype; MAJOR, H5E_DATASPACE, Dataspace; MAJOR, H5E_DATASET, Dataset; MAJOR, H5E_STORAGE, Data storage; MAJOR, H5E_PLIST, Property lists; MAJOR, H5E_ATTR, Attribute; MAJOR, H5E_PLINE, Data filters; MAJOR, H5E_EFL, External file list; MAJOR, H5E_REFER",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:1644,error,errors,1644,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability,"low you must have boost; installed on your computer (minimum version required: 1.59), or have; a Boost source distribution available. If you want to use an uninstalled; source distribution, please see the note on Boost at the bottom of this README.; For Windows, you must install the Microsoft MPI SDK. For other OSs, install; any typical MPI installation, including mpich, OpenMPI, or vendor MPI software. Building the library:; ---------------------; I. On Linux/Mac OS X; A. Using cmake. If you have cmake on you computer you may do the following. cmake .; make. B. Using make. If you do not have cmake then you can use the supplied Makefile.linux; using:. make BOOST_ROOT=iii -f Makefile.linux. where iii is the path to the boost include directory. If you find that you have to modify Makefile.linux to work on your system,; please let us know about your changes so we can provide a customized; makefile with our distribution. II. On Windows. CMake 2.8 or later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciompisrc directory,; such as D:/teciompisrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_D",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:1178,down,download,1178,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['down'],['download']
Availability,"ms and conditions of this License Agreement, Tecplot; hereby grants Licensee a nonexclusive, royalty-free, world-wide license to; reproduce, analyze, test, perform and/or display publicly, prepare derivative; works, distribute, and otherwise use TecIO alone or in any derivative version,; provided, however, that Tecplot's License Agreement and Tecplot's notice of; copyright, i.e., ""Copyright © 1988-2016 Tecplot, Inc. All rights reserved; worldwide."" are retained in TecIO alone or in any derivative version prepared; by Licensee. 4. In the event Licensee prepares a derivative work that is based on or; incorporates TecIO or any part thereof, and wants to publish the derivative; work as provided herein, Licensee hereby agrees to provide to all end users of; any such work a brief summary of all changes made to TecIO, and to convey to; Tecplot a copy of the modified TecIO source code within 30 days after; publication of any work containing any such changes. 5. Tecplot is making TecIO available to Licensee on an ""AS IS"" basis. NO OTHER; WARRANTIES. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, TECPLOT, INC.; AND ITS SUPPLIERS DISCLAIM ALL OTHER WARRANTIES AND CONDITIONS, EITHER EXPRESS; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE, AND NONINFRINGEMENT,; WITH REGARD TO THE SOFTWARE, AND THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT; SERVICES. APART FROM THE WARRANTIES STATED ABOVE, TECPLOT, INC. MAKES NO; WARRANTY THAT THE SOFTWARE OR SERVICES WILL: MEET REQUIREMENTS; PROVIDE; UNINTERRUPTED, TIMELY, SECURE, OR ERROR-FREE, USE OF COMPUTERS OR NETWORKS;; PROVIDE RESULTS WHICH ARE ACCURATE OR RELIABLE; MEET EXPECTATIONS, OR; CORRECT; ANY ERRORS IN THE SOFTWARE. TECPLOT, INC. SHALL NOT BE RESPONSIBLE FOR MISUSE; OF THE SOFTWARE OR ANY LOSS OF DATA. THIS LIMITED WARRANTY GIVES YOU SPECIFIC; LEGAL RIGHTS. YOU MAY HAVE OTHERS, WHICH VARY FROM STATE/JURISDICTION TO; STATE/JURISDICTION. 6. TO THE MAXIM",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:28976,avail,available,28976,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['avail'],['available']
Availability,"ms and conditions of this License Agreement, Tecplot; hereby grants Licensee a nonexclusive, royalty-free, world-wide license to; reproduce, analyze, test, perform and/or display publicly, prepare derivative; works, distribute, and otherwise use TecIO alone or in any derivative version,; provided, however, that Tecplot's License Agreement and Tecplot's notice of; copyright, i.e., ""Copyright � 1988-2016 Tecplot, Inc. All rights reserved; worldwide."" are retained in TecIO alone or in any derivative version prepared; by Licensee. 4. In the event Licensee prepares a derivative work that is based on or; incorporates TecIO or any part thereof, and wants to publish the derivative; work as provided herein, Licensee hereby agrees to provide to all end users of; any such work a brief summary of all changes made to TecIO, and to convey to; Tecplot a copy of the modified TecIO source code within 30 days after; publication of any work containing any such changes. 5. Tecplot is making TecIO available to Licensee on an ""AS IS"" basis. NO OTHER; WARRANTIES. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, TECPLOT, INC.; AND ITS SUPPLIERS DISCLAIM ALL OTHER WARRANTIES AND CONDITIONS, EITHER EXPRESS; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE, AND NONINFRINGEMENT,; WITH REGARD TO THE SOFTWARE, AND THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT; SERVICES. APART FROM THE WARRANTIES STATED ABOVE, TECPLOT, INC. MAKES NO; WARRANTY THAT THE SOFTWARE OR SERVICES WILL: MEET REQUIREMENTS; PROVIDE; UNINTERRUPTED, TIMELY, SECURE, OR ERROR-FREE, USE OF COMPUTERS OR NETWORKS;; PROVIDE RESULTS WHICH ARE ACCURATE OR RELIABLE; MEET EXPECTATIONS, OR; CORRECT; ANY ERRORS IN THE SOFTWARE. TECPLOT, INC. SHALL NOT BE RESPONSIBLE FOR MISUSE; OF THE SOFTWARE OR ANY LOSS OF DATA. THIS LIMITED WARRANTY GIVES YOU SPECIFIC; LEGAL RIGHTS. YOU MAY HAVE OTHERS, WHICH VARY FROM STATE/JURISDICTION TO; STATE/JURISDICTION. 6. TO THE MAXIM",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt:2370,avail,available,2370,externals/tecio/teciompisrc/tecio_license_agreement.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt,2,['avail'],['available']
Availability,"n:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ dire",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:2889,down,downloaded,2889,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['down'],['downloaded']
Availability,"nable to decode value; MINOR, BTREE, H5E_CANTSPLIT, Unable to split node; MINOR, BTREE, H5E_CANTREDISTRIBUTE, Unable to redistribute records; MINOR, BTREE, H5E_CANTSWAP, Unable to swap records; MINOR, BTREE, H5E_CANTINSERT, Unable to insert object; MINOR, BTREE, H5E_CANTLIST, Unable to list node; MINOR, BTREE, H5E_CANTMODIFY, Unable to modify record; MINOR, BTREE, H5E_CANTREMOVE, Unable to remove object. # Object header related errors; MINOR, OHDR, H5E_LINKCOUNT, Bad object header link count; MINOR, OHDR, H5E_VERSION, Wrong version number; MINOR, OHDR, H5E_ALIGNMENT, Alignment error; MINOR, OHDR, H5E_BADMESG, Unrecognized message; MINOR, OHDR, H5E_CANTDELETE, Can't delete message; MINOR, OHDR, H5E_BADITER, Iteration failed; MINOR, OHDR, H5E_CANTPACK, Can't pack messages; MINOR, OHDR, H5E_CANTRESET, Can't reset object; MINOR, OHDR, H5E_CANTRENAME, Unable to rename object. # Group related errors; MINOR, GROUP, H5E_CANTOPENOBJ, Can't open object; MINOR, GROUP, H5E_CANTCLOSEOBJ, Can't close object; MINOR, GROUP, H5E_COMPLEN, Name component is too long; MINOR, GROUP, H5E_PATH, Problem with path to object. # Datatype conversion errors; MINOR, TYPECONV, H5E_CANTCONVERT, Can't convert datatypes; MINOR, TYPECONV, H5E_BADSIZE, Bad size for object. # Dataspace errors; MINOR, DSPACE, H5E_CANTCLIP, Can't clip hyperslab region; MINOR, DSPACE, H5E_CANTCOUNT, Can't count elements; MINOR, DSPACE, H5E_CANTSELECT, Can't select hyperslab; MINOR, DSPACE, H5E_CANTNEXT, Can't move to next iterator location; MINOR, DSPACE, H5E_BADSELECT, Invalid selection; MINOR, DSPACE, H5E_CANTCOMPARE, Can't compare objects; MINOR, DSPACE, H5E_INCONSISTENTSTATE, Internal states are inconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:9388,error,errors,9388,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability,"nconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move object; MINOR, LINK, H5E_CANTSORT, Can't sort objects. # Parallel MPI errors; MINOR, MPI, H5E_MPI, Some MPI function failed; MINOR, MPI, H5E_MPIERRSTR, MPI Error String; MINOR, MPI, H5E_CANTRECV, Can't receive data; MINOR, MPI, H5E_CANTGATHER, Can't gather data; MINOR, MPI, H5E_NO_INDEPENDENT, Can't perform independent IO. # Heap errors; MINOR, HEAP, H5E_CANTRESTORE, Can't restore condition; MINOR, HEAP, H5E_CANTCOMPUTE, Can't compute value; MINOR, HEAP, H5E_CANTEXTEND, Can't extend heap's space; MINOR, HEAP, H5E_CANTATTACH, Can't attach object; MINOR, HEAP, H5E_CANTUPDATE, Can't update object; MINOR, HEAP, H5E_CANTOPERATE, Can't operate on object. # Free space manager errors; MINOR, FSPACE, H5E_CANTMERGE, Can't merge objects; MINOR, FSPACE, H5E_CANTREVIVE, Can't revive object; MINOR, FSPACE, H5E_CANTSHRINK, Can't shrink container. # I/O pipeline errors; MINOR, PIPELINE, H5E_NOFILTER, Requested filter is not available; MINOR, PIPELINE, H5E_CALLBACK, Callback failed; MINOR, PIPELINE, H5E_CANAPPLY, Error from filter 'can apply' callback; MINOR, PIPELINE, H5E_SETLOCAL, Error from filter 'set local' callback; MINOR, PIPELINE, H5E_NOENCODER, Filter present but encoding disabled; MINOR, PIPELINE, H5E_CANTFILTER, Filter operation failed. # System level errors; MINOR, SYSTEM, H5E_SYSERRSTR, System error message. # Plugin errors; MINOR, PLUGIN, H5E_OPENERROR, Can't open directory or file. # No error, for backward compatibility */; MINOR, NONE, H5E_NONE_MINOR, No error; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:11008,error,errors,11008,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,9,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"s; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, H5E_CANTCREATE, Unable to create file; MINOR, FILEACC, H5E_CANTOPENFILE, Unable to open file; MINOR, FILEACC, H5E_CANTCLOSEFILE, Unable to close file; MINOR, FILEACC, H5E_NOTHDF5, Not an HDF5 file; MINOR, FILEACC, H5E_BADFILE, Bad file ID accessed; MINOR, FILEACC, H5E_TRUNCATED, File has been truncated; MINOR, FILEACC, H5E_MOUNT, File mount error; MINOR, FILEACC, H5E_CANTDELETEFILE, Unable to delete file; MINOR, FILEACC, H5E_CANTLOCKFILE, Unable to lock file; MINOR, FILEACC, H5E_CANTUNLOCKFILE, Unable to unlock file. # Generic low-level file I/O errors; MINOR, FILE, H5E_SEEKERROR, Seek failed; MINOR, FILE, H5E_READERROR, Read failed; MINOR, FILE, H5E_WRITEERROR, Write failed; MINOR, FILE, H5E_CLOSEERROR, Close failed; MINOR, FILE, H5E_OVERFLOW, Address overflowed; MINOR, FILE, H5E_FCNTL, File control (fcntl) failed. # Function entry/exit interface errors; MINOR, FUNC, H5E_CANTINIT, Unable to initialize object; MINOR, FUNC, H5E_ALREADYINIT, Object already initialized; MINOR, FUNC, H5E_CANTRELEASE, Unable to release object. # Object atom related errors; MINOR, ATOM, H5E_BADATOM, Unable to find atom information (already closed?); MINOR, ATOM, H5E_BADGROUP, Unable to find ID group information; MINOR, ATOM, H5E_CANTREGISTER, Unable to register new atom; MINOR, ATOM, H5E_CANTINC, Unable to increment reference count; MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MINOR, CACHE, H5E_CANTTAG, Unable to tag metadata in the cache; MINOR, CACHE, H5E_CANTLOAD, Unable to load metadata into cache; MINOR, CACHE, H5E_PROTECT, Protected metadata error; MINOR, CACHE, H5E_NOTCACHED, Metadata not currently cached; MINOR, CACHE, H5E_",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:5920,error,errors,5920,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['error'],['errors']
Availability,"sonic aircraft design using equivalent area distribution,"" AIAA 2012-0269, 2012. DOI: [10.2514/6.2012-269](https://arc.aiaa.org/doi/10.2514/6.2012-269). ## Expected outcome; - Direct solver; - Equivalent area is calculated without errors.; - Discrete adjoint solver; - Adjoint solution is calculated without errors. ## Files for this test case; Below is a list of files for this test case and explanation for each file.; - SU2 repository; - NACA64206.cfg; - Configuration file.; - TestCases repository; - NACA64206_FFD.su2; - Mesh file. NACA64-206 was used as an airfoil. Arbitrary swept angle and taper ratio were used to create 3D geometry. It has a circumferential nearfield boundary at 3 aircraft lengths.; - solution_flow.csv; - Solution file of direct solver after 4000 iterations. This is required for running adjoint solver.; - TargetEA.dat; - Target equivalent area distribution. See the file for format. In this file, equivalent area is increased by 5% from direct solution to use as an example target. ## How to use equivalent area calculation function. ### Config file; See SUPERSONIC SIMULATION section of config_template.cfg. ### Mesh; A mesh has to have a circumferential boundary around the aircraft axis within the calculation domain and has to be labeled as MARKER_NEARFIELD. This boundary has to have a structured grid with the same number of nodes along each azimuthal angle. ### Target equivalent area; TargetEA.dat is required for shape optimization using equivalent area. After running direct solver, Equivalent_Area.dat is output, which can be used to define a target since it has the same format as TargetEA.dat. Equivalent area is calculated at each node on a surface with MARKER_NEARFIELD. Difference from target is calculated by sum of squared difference at each node. ## Implementation on SU2; Equivalent area calculation function was temporarily unavailable after introduction of ver. 7.0.0. See [PR1329](https://github.com/su2code/SU2/pull/1329) on Github for recovery.",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md:2537,recover,recovery,2537,TestCases/optimization_euler/equivalentarea_naca64206/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md,1,['recover'],['recovery']
Availability,"ual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select tecio.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. tecio.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guide.pdf) and Tecio; example programs for how to use this library. If you wish to copy only the; required files to a different folder for later use, please copy the following; files:. libtecio.a (tecio.lib on Windows); TECIO.h; tecio_Exports.h; tecio.inc; tecio.for; tecio.f90; tecio_license_agreement.txt. A Note on Boost: Tecio requires only the Boost header files--no libraries--so; it is possible to build tecio using a Boost source distribution only, without; installing it. In this case, set Boost_INCLUDE_DIR to point to the root of; the source distribution, such as D:/boost_1_59_0, then click Configure, then; Generate in the CMake GUI (or for Linux, edit the Boost_INCLUDE_DIR setting in; CMakeLists.txt and reissue ""cmake ."" from the command line to recreate Makefile).; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:2940,avail,available,2940,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['avail'],['available']
Availability,"ve.cfg` Just 1 additional transport equation is solved, i.e. it is a 2 species flow.; In the regression test values the `SURFACE_SPECIES_VARIANCE` output is tested which is a scale for mixing quality.; Zero indicates a uniform species distribution. - `species3_venturiPrimitive.cfg` Here, 2 additional transport equations are solved.; In the output the `SURFACE_SPECIES_0` is tested. This is simply the surface averaged species on all `MARKER_ANALYZE` and can be weighted with `AREA` or `MASSFLOW` just like the other quantities.; t; - `restart_validation.sh` performs 4 simulations using `species3_venturiPrimitive.cfg` to check whether primal and primal-adjoint restarts work. This script is best used with `HISTORY_OUTPUT= RMS_RES` only as then the output is nicely comparable.; 1. Primal simulation with n+1 timesteps. This is the ground truth of the expected residual value; 2. Primal simulation with n timesteps. We will restart from this simulation.; 3. Primal simulation with 1 timestep, restarted from simulation in 2nd step.; 4. Adjoint simulation with 1 timestep, using the primal restart file from simulation in 2nd step. The printed direct residuals are taken for comparison. - `species3_venturiPrimitive_inletFile.cfg` With the `test_inlet_files.sh` a simple sanity check for inlet files is performed.; SU2 writes an `example_inlet_file.dat` when the specified inlet file is not available, with the values of the specified `MARKER_INLET` content.; Therefore comparing a simulation with this example inlet file and without inlet files should result in exactly the same results.; This is done by this script and additionally compares the history files of those 2 simulations which is supposed to be empty.; At the time of writing there is just one last digit in these history files that differs.; The case alone is unique in that it is using inlet files for 2 separate inlets and is non-dimensional and uses Turbulence.; Altogether the case is quite complex on the inlet file mechanism.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md:1882,avail,available,1882,TestCases/species_transport/venturi_primitive_3species/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md,1,['avail'],['available']
Availability,"w; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciosrc directory,; such as D:/teciosrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select tecio.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. tecio.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guide.pdf) and Tecio; example programs for how to use this library. If you wish to copy only the; required files to a different folder for later use, please copy the following; files:. libtecio.a (tecio.lib ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:2315,error,errors,2315,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['error'],['errors']
Availability,"y instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or; reject comments, commits, code, wiki edits, issues, and other contributions; that are not aligned to this Code of Conduct, or to ban temporarily or; permanently any contributor for other behaviors that they deem inappropriate,; threatening, offensive, or harmful. ## Scope. This Code of Conduct applies both within project spaces and in public spaces; when an individual is representing the project or its community. Examples of; representing a project or community include using an official project e-mail; address, posting via an official social media account, or acting as an appointed; representative at an online or offline event. Representation of a project may be; further defined and clarified by project maintainers. ## Enforcement. Instances of abusive, harassing, or otherwise unacceptable behavior may be; reported by contacting the project team at info@su2foundation.org. All; complaints will be reviewed and investigated and will result in a response that; is deemed necessary and appropriate to the circumstances. The project team is; obligated to maintain confidentiality with regard to the reporter of an incident.; Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good; faith may face temporary or permanent repercussions as determined by other; members of the project's leadership. Consequences may include:; * Downgrade or removal of repository permissions such as admin and write; permissions.; * Removal from the su2code organization on Github.; * Being blocked from the su2code repository.; * Reporting of the abuse to Github. ## Attribution. This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,; available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html. [homepage]: https://www.contributor-covenant.org; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md:3466,avail,available,3466,CODE_OF_CONDUCT.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md,1,['avail'],['available']
Deployability," UNINTERRUPTED, TIMELY, SECURE, OR ERROR-FREE, USE OF COMPUTERS OR NETWORKS;; PROVIDE RESULTS WHICH ARE ACCURATE OR RELIABLE; MEET EXPECTATIONS, OR; CORRECT; ANY ERRORS IN THE SOFTWARE. TECPLOT, INC. SHALL NOT BE RESPONSIBLE FOR MISUSE; OF THE SOFTWARE OR ANY LOSS OF DATA. THIS LIMITED WARRANTY GIVES YOU SPECIFIC; LEGAL RIGHTS. YOU MAY HAVE OTHERS, WHICH VARY FROM STATE/JURISDICTION TO; STATE/JURISDICTION. 6. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL; TECPLOT, INC. OR ITS SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT,; OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR; LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION,; OR ANY OTHER PECUNIARY LOSS) ARISING OUT OF THE USE OF OR INABILITY TO USE THE; SOFTWARE OR THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT SERVICES, EVEN IF; TECPLOT, INC. HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. THIS SHALL; BE TRUE EVEN IN THE EVENT OF THE FAILURE OF AN AGREED REMEDY. IN ANY CASE,; TECPLOT, INC.'S ENTIRE LIABILITY FOR CLAIMS ARISING OUT OF USE OF THE SOFTWARE,; SERVICE OR ARISING FROM ANY PROVISION OF THIS AGREEMENT SHALL BE LIMITED TO THE; AMOUNT ACTUALLY PAID BY LICENSEE FOR THE SOFTWARE OR SERVICE COMPLAINED OF.; BECAUSE SOME STATES AND JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION; OF LIABILITY, THE ABOVE LIMITATION MAY NOT APPLY TO YOU. 7. This License Agreement will automatically terminate upon a material breach; of its terms and conditions. 8. Nothing in this License Agreement shall be deemed to create any relationship; of agency, partnership, or joint venture between Tecplot and Licensee. This; License Agreement does not grant permission to use Tecplot trademarks or trade; name in a trademark sense to endorse or promote products or services of; Licensee, or any third party. 9. By copying, installing or otherwise using TecIO, Licensee agrees to be bound; by the terms and conditions of this License Agreement.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt:4832,install,installing,4832,externals/tecio/teciompisrc/tecio_license_agreement.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt,2,['install'],['installing']
Deployability," but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciosrc directory,; such as D:/teciosrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select tecio.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. tecio.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guide.pdf)",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:2172,install,install,2172,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['install'],['install']
Deployability," configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the source code distribution, i.e., `/path/to/SU2vX.X.X/`. Thanks for building, and happy optimizing!. - The SU2 Development Team. # SU2 Developers. We follow the popular ""GitFlow"" branching model for scalable development. In the SU2 repository, the master branch represents the latest stable major or minor release (7.0, 6.2.0, etc.), it should only be modified during version releases. Work that is staged for release is put into the develop branch via Pull Requests on GitHub from various ""feature"" branches where folks do their day-to-day work on the code. At release time, the work that has been merged into the develop branch is pushed to the master branch and tagged as a release. SU2 is being developed by individuals and organized teams all around the world. A list of current contributors can be found in the AUTHORS.md file. ## Documentation. Code documentation can be generated by calling doxygen from the root of the project, then open Docs/html/index.html in a browser to consult the documentation.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:4260,release,release,4260,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,5,['release'],"['release', 'releases']"
Deployability," in config.in.; % Finally, if you just use threads (no MPI) this is not important.; %; % 4 - Build SU2; % Follow the normal meson build instructions, add -Denable-pastix=true,; % this requires you to compile with MKL (-Denable-mkl=true) or OpenBLAS; % (-Denable-openblas=true) support in your call to meson.py.; % If you did not build PaStiX and Scotch in the externals folders you must; % use -Dpastix_root=""some path"" and -Dscotch_root=""another path"" to; % indicate where they are RELATIVE to the SU2 directory.; % You need sequential versions of BLAS. But when using MPI+Threads beware that; % OpenBLAS needs to have parallel support otherwise the solver will crash, if; % you get poor performance see 5.4 below.; %; % 5 - Common problems and known issues; % - OpenMPI 4 does not work with PaStiX 5, downgrade to 3.1.4.; % - Very early versions of OpenMPI 3 may have problems with MPI types.; % - OpenBLAS build fails when linking executables. Old versions (e.g.; % 0.2.18) did not provide LAPACK support, rebuild or upgrade.; % - Very bad performance with OpenBLAS on some systems (observed on Ubuntu; % 16.04) try ""export OMP_NUM_THREADS=1"" before running SU2, check that; % you only see N SU2 processes running at 100% (mpirun -n N SU2_XXX).; % - Cannot find BLAS dependency:; % i - On some OS the package has a different name (e.g. Ubuntu 16.04; % blas-openblas instead of openblas), use -Dblas-name=""right name"" in; % call to meson.py; % ii - The name is right but meson cannot find it. Set env variable; % PKG_CONFIG_PATH=$PKG_CONFIG_PATH:""directory with someblas.pc file""; % - MKL is not in its standard directory (/opt/intel/mkl), use option; % -Dmkl_root=""non standard directory"" in call to meson.py (headers are; % expected in ""include"" and libraries in ""lib/intel64"").; %; % 6 - Tested platforms; % - Ubuntu 18.04, gcc 7.4, ompi 3.1.4, mkl 2017, openblas 0.2.20 and 0.3.2.dev; % - Ubuntu 16.04, gcc 5.4, ompi 3.1.4, mkl 2017 and 2019; % - CentOS 7.6.1810, gcc 5.4, ompi 3.1.4, mkl 2017; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:3323,upgrade,upgrade,3323,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['upgrade'],['upgrade']
Deployability," version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the source code distribution, i.e., `/path/to/SU2vX.X.X/`. Thanks for building, and happy optimizing!. - The SU2 Development Team. # SU2 Developers. We follow the popular ""GitFlow"" branching model for scalable development. In the SU2 repository, the master branch ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:3181,install,install,3181,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['install'],['install']
Deployability,# Add this directory for internal users.; include_directories(.); # Find sources.; file(GLOB metis_sources *.c); # Build libmetis.; add_library(metis ${METIS_LIBRARY_TYPE} ${GKlib_sources} ${metis_sources}); if(UNIX); target_link_libraries(metis m); endif(). if(METIS_INSTALL); install(TARGETS metis; LIBRARY DESTINATION lib; RUNTIME DESTINATION lib; ARCHIVE DESTINATION lib); endif(); ,MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/libmetis/CMakeLists.txt:278,install,install,278,externals/metis/libmetis/CMakeLists.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/libmetis/CMakeLists.txt,1,['install'],['install']
Deployability,"# Include directories for library code.; include_directories(.); # Find sources.; file(GLOB parmetis_sources *.c); # Create libparmetis; add_library(parmetis ${ParMETIS_LIBRARY_TYPE} ${parmetis_sources}); # Link with metis and MPI libraries.; target_link_libraries(parmetis metis ${MPI_LIBRARIES}); set_target_properties(parmetis PROPERTIES LINK_FLAGS ""${MPI_LINK_FLAGS}""). install(TARGETS parmetis; LIBRARY DESTINATION lib; RUNTIME DESTINATION lib; ARCHIVE DESTINATION lib); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/parmetis/libparmetis/CMakeLists.txt:374,install,install,374,externals/parmetis/libparmetis/CMakeLists.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/parmetis/libparmetis/CMakeLists.txt,1,['install'],['install']
Deployability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/.github/pull_request_template.md:984,update,updated,984,.github/pull_request_template.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/.github/pull_request_template.md,1,['update'],['updated']
Deployability,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % SU2 configuration file %; % PaStiX support build instructions. %; % Institution: Imperial College London %; % File Version 8.1.0 ""Harrier"" %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; %; % 1 - Download; % Get PaStiX 5.2.3 from https://gforge.inria.fr/frs/?group_id=186; % Get Scotch 6.0.6 from https://gforge.inria.fr/projects/scotch; % Note: These two versions were tested on a number of platforms, some; % issues were encountered with more recent version of Scotch, and PaStiX; % 6.0.X is not compatible with SU2 as it does not support MPI yet.; %; % 2 - Build Scotch; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""scotch""; % cd scotch/src && cp Make.inc/Makefile.inc.x86-64_pc_linux2.XXXX Makefile.inc; % (choose the XXXX that matches your compiler); % Edit Makefile.inc and delete the cflag -DSCOTCH_PTHREAD (see why in 3-ii); % ""make ptscotch""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % AND your system supports MPI_THREAD_MULTIPLE, you do not need to; % delete the -DSCOTCH_PTHREAD flag (but doing so does no harm).; %; % 3 - Build PaStiX; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that t",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:82,configurat,configuration,82,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['configurat'],['configuration']
Deployability,"---. SU2. ---; GNU LESSER GENERAL PUBLIC LICENSE; Version 2.1, February 1999. Copyright (C) 1991, 1999 Free Software Foundation, Inc.; 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA; Everyone is permitted to copy and distribute verbatim copies; of this license document, but changing it is not allowed. [This is the first released version of the Lesser GPL. It also counts; as the successor of the GNU Library Public License, version 2, hence; the version number 2.1.]. Preamble. The licenses for most software are designed to take away your; freedom to share and change it. By contrast, the GNU General Public; Licenses are intended to guarantee your freedom to share and change; free software--to make sure the software is free for all its users. This license, the Lesser General Public License, applies to some; specially designated software packages--typically libraries--of the; Free Software Foundation and other authors who decide to use it. You; can use it too, but we suggest you first think carefully about whether; this license or the ordinary General Public License is the better; strategy to use in any particular case, based on the explanations below. When we speak of free software, we are referring to freedom of use,; not price. Our General Public Licenses are designed to make sure that; you have the freedom to distribute copies of free software (and charge; for this service if you wish); that you receive source code or can get; it if you want it; that you can change the software and use pieces of; it in new free programs; and that you are informed that you can do; these things. To protect your rights, we need to make restrictions that forbid; distributors to deny you these rights or to ask you to surrender these; rights. These restrictions translate to certain responsibilities for; you if you distribute copies of the library or if you modify it. For example, if you distribute copies of the library, whether gratis; or for a fee, you must give the recipients ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:334,release,released,334,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['release'],['released']
Deployability,"2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installat",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:2339,release,releases,2339,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['release'],['releases']
Deployability,"; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint s",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:2407,update,update,2407,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['update'],['update']
Deployability,"<p align=""center"">; <img width=""250"" height=""154"" src=""Docs/logoSU2small.png"">; </p>. # SU2 (ver. 8.1.0 ""Harrier""): The Open-Source CFD Code. Computational analysis tools have revolutionized the way we design engineering systems, but most established codes are proprietary, unavailable, or prohibitively expensive for many users. The SU2 team is changing this, making multiphysics analysis and design optimization freely available as open-source software and involving everyone in its creation and development. For an overview of the technical details in SU2, please see the following AIAA Journal article:. ""SU2: An open-source suite for multiphysics simulation and design,"" AIAA Journal, 54(3):828-846, 2016. <http://arc.aiaa.org/doi/10.2514/1.J053813>. Please note that this project is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms. Continuous Integration:<br/>; [![Regression Testing](https://github.com/su2code/SU2/workflows/Regression%20Testing/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions); [![Release](https://github.com/su2code/SU2/workflows/Release%20Management/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions). Code Quality:<br/>; [![CodeFactor](https://www.codefactor.io/repository/github/su2code/su2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/s",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:789,release,released,789,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['release'],['released']
Deployability,"Building GKlib requires CMake 2.8. Once you've installed CMake run. $ make. This will build the GKlib library in build/<arch>/. Options can be tweaked by; running make config. For example,. $ make config openmp=ON; $ make. will build GKlib will OpenMP support if it is available. GKlib can be installed with. $ make install. and uninstalled with. $ make uninstall. You can choose the installation prefix with make config:. $ make config prefix=~/local. will cause GKlib to be install in the ~/local tree.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/BUILD.txt:47,install,installed,47,externals/metis/GKlib/BUILD.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/BUILD.txt,5,['install'],"['install', 'installation', 'installed']"
Deployability,"Building the tecio library. Licensing; -------------; See tecio_license_agreement.txt for license information. Prerequisites:; -------------. Regardless of which build option you choose below you must have boost; installed on your computer (minimum version required: 1.59), or have; a Boost source distribution available. If you want to use an uninstalled; source distribution, please see the note on Boost at the bottom of this README. Building the library:; ---------------------; I. On Linux/Mac OS X; A. Using cmake. If you have cmake on you computer you may do the following. cmake .; make. B. Using make. If you do not have cmake then you can use the supplied Makefile.linux; using:. make BOOST_ROOT=iii -f Makefile.linux. where iii is the path to the boost include directory. If you find that you have to modify Makefile.linux to work on your system,; please let us know about your changes so we can provide a customized; makefile with our distribution. II. On Windows. CMake 2.8 or later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciosrc directory,; such as D:/teciosrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find v",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:213,install,installed,213,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['install'],['installed']
Deployability,"Building the teciompi library. Licensing; -------------; See tecio_license_agreement.txt for license information. Prerequisites:; -------------. Regardless of which build option you choose below you must have boost; installed on your computer (minimum version required: 1.59), or have; a Boost source distribution available. If you want to use an uninstalled; source distribution, please see the note on Boost at the bottom of this README.; For Windows, you must install the Microsoft MPI SDK. For other OSs, install; any typical MPI installation, including mpich, OpenMPI, or vendor MPI software. Building the library:; ---------------------; I. On Linux/Mac OS X; A. Using cmake. If you have cmake on you computer you may do the following. cmake .; make. B. Using make. If you do not have cmake then you can use the supplied Makefile.linux; using:. make BOOST_ROOT=iii -f Makefile.linux. where iii is the path to the boost include directory. If you find that you have to modify Makefile.linux to work on your system,; please let us know about your changes so we can provide a customized; makefile with our distribution. II. On Windows. CMake 2.8 or later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciompisrc directory,; such as D:/teciompisrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:216,install,installed,216,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,4,['install'],"['install', 'installation', 'installed']"
Deployability,"D Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:2939,install,installed,2939,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,2,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"H5E_REFERENCE, References; MAJOR, H5E_VFL, Virtual File Layer; MAJOR, H5E_VOL, Virtual Object Layer; MAJOR, H5E_TST, Ternary Search Trees; MAJOR, H5E_RS, Reference Counted Strings; MAJOR, H5E_ERROR, Error API; MAJOR, H5E_SLIST, Skip Lists; MAJOR, H5E_FSPACE, Free Space Manager; MAJOR, H5E_SOHM, Shared Object Header Messages; MAJOR, H5E_EARRAY, Extensible Array; MAJOR, H5E_FARRAY, Fixed Array; MAJOR, H5E_PLUGIN, Plugin for dynamically loaded library; MAJOR, H5E_PAGEBUF, Page Buffering; MAJOR, H5E_CONTEXT, API Context; MAJOR, H5E_MAP, Map; MAJOR, H5E_NONE_MAJOR, No error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CACHE, Cache related errors; SECTION, LINK, Link related errors; SECTION, BTREE, B-tree related errors; SECTION, OHDR, Object header related errors; SECTION, GROUP, Group related errors; SECTION, TYPECONV, Datatype conversion errors; SECTION, DSPACE, Dataspace errors; SECTION, PLIST, Property list errors; SECTION, MPI, Parallel MPI errors; SECTION, HEAP, Heap errors; SECTION, FSPACE, Free space errors; SECTION, PIPELINE, I/O pipeline errors; SECTION, SYSTEM, System level errors; SECTION, PLUGIN, Plugin errors; SECTION, NONE, No error. # Minor errors. # Argument errors; MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; MINOR, ARGS, H5E_BADTYPE, Inappropriate type; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exi",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:3941,pipeline,pipeline,3941,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['pipeline'],['pipeline']
Deployability,"IENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_N",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3781,update,updates,3781,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['update'],['updates']
Deployability,"Make also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciompisrc directory,; such as D:/teciompisrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select teciompi.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. teciompi.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guid",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:2339,install,install,2339,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['install'],['install']
Deployability,"S; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project ma",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3501,update,updates,3501,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['update'],['updates']
Deployability,"Y OF SUCH DAMAGES. THIS SHALL; BE TRUE EVEN IN THE EVENT OF THE FAILURE OF AN AGREED REMEDY. IN ANY CASE,; TECPLOT, INC.'S ENTIRE LIABILITY FOR CLAIMS ARISING OUT OF USE OF THE SOFTWARE,; SERVICE OR ARISING FROM ANY PROVISION OF THIS AGREEMENT SHALL BE LIMITED TO THE; AMOUNT ACTUALLY PAID BY LICENSEE FOR THE SOFTWARE OR SERVICE COMPLAINED OF.; BECAUSE SOME STATES AND JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION; OF LIABILITY, THE ABOVE LIMITATION MAY NOT APPLY TO YOU. 7. This License Agreement will automatically terminate upon a material breach; of its terms and conditions. 8. Nothing in this License Agreement shall be deemed to create any relationship; of agency, partnership, or joint venture between Tecplot and Licensee. This; License Agreement does not grant permission to use Tecplot trademarks or trade; name in a trademark sense to endorse or promote products or services of; Licensee, or any third party. 9. By copying, installing or otherwise using TecIO, Licensee agrees to be bound; by the terms and conditions of this License Agreement. ---. CLI11. ---. CLI11 1.8 Copyright (c) 2017-2019 University of Cincinnati, developed by Henry; Schreiner under NSF AWARD 1414736. All rights reserved. Redistribution and use in source and binary forms of CLI11, with or without; modification, are permitted provided that the following conditions are met:. 1. Redistributions of source code must retain the above copyright notice, this; list of conditions and the following disclaimer.; 2. Redistributions in binary form must reproduce the above copyright notice,; this list of conditions and the following disclaimer in the documentation; and/or other materials provided with the distribution.; 3. Neither the name of the copyright holder nor the names of its contributors; may be used to endorse or promote products derived from this software without; specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND; ANY EXPRESS O",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:31438,install,installing,31438,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['install'],['installing']
Deployability,"buted under the terms of; this Lesser General Public License (also called ""this License"").; Each licensee is addressed as ""you"". A ""library"" means a collection of software functions and/or data; prepared so as to be conveniently linked with application programs; (which use some of those functions and data) to form executables. The ""Library"", below, refers to any such software library or work; which has been distributed under these terms. A ""work based on the; Library"" means either the Library or any derivative work under; copyright law: that is to say, a work containing the Library or a; portion of it, either verbatim or with modifications and/or translated; straightforwardly into another language. (Hereinafter, translation is; included without limitation in the term ""modification"".). ""Source code"" for a work means the preferred form of the work for; making modifications to it. For a library, complete source code means; all the source code for all modules it contains, plus any associated; interface definition files, plus the scripts used to control compilation; and installation of the library. Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running a program using the Library is not restricted, and output from; such a program is covered only if its contents constitute a work based; on the Library (independent of the use of the Library in a tool for; writing it). Whether that is true depends on what the Library does; and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:7319,install,installation,7319,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['install'],['installation']
Deployability,"censing; -------------; See tecio_license_agreement.txt for license information. Prerequisites:; -------------. Regardless of which build option you choose below you must have boost; installed on your computer (minimum version required: 1.59), or have; a Boost source distribution available. If you want to use an uninstalled; source distribution, please see the note on Boost at the bottom of this README. Building the library:; ---------------------; I. On Linux/Mac OS X; A. Using cmake. If you have cmake on you computer you may do the following. cmake .; make. B. Using make. If you do not have cmake then you can use the supplied Makefile.linux; using:. make BOOST_ROOT=iii -f Makefile.linux. where iii is the path to the boost include directory. If you find that you have to modify Makefile.linux to work on your system,; please let us know about your changes so we can provide a customized; makefile with our distribution. II. On Windows. CMake 2.8 or later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciosrc directory,; such as D:/teciosrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:1030,install,install,1030,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['install'],['install']
Deployability,"cmake_minimum_required(VERSION 2.8); project(GKlib). get_filename_component(abs ""."" ABSOLUTE); set(GKLIB_PATH ${abs}); unset(abs); include(GKlibSystem.cmake). include_directories("".""); add_library(GKlib STATIC ${GKlib_sources}); if(UNIX); target_link_libraries(GKlib m); endif(UNIX). include_directories(""test""); add_subdirectory(""test""). install(TARGETS GKlib; ARCHIVE DESTINATION lib; LIBRARY DESTINATION lib); install(FILES ${GKlib_includes} DESTINATION include); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/CMakeLists.txt:339,install,install,339,externals/metis/GKlib/CMakeLists.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/CMakeLists.txt,2,['install'],['install']
Deployability,"cmake_minimum_required(VERSION 2.8.12) # requiring 2.8.12 sets the CMP0022 policy to new (non-transitive linking, i.e. just the interfaces) by default. if (NOT CMAKE_BUILD_TYPE); set (CMAKE_BUILD_TYPE Release CACHE STRING ""CMake build type (Debug|Release)"" FORCE); endif (). project (teciompi). FIND_PACKAGE(Boost); IF (Boost_FOUND); INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR}); ELSE(); Set (Boost_INCLUDE_DIR /3rdpartylibs/boost/1.59.0/build/linux64-centos6.5/include); message (""Warning: Cannot find boost include directories. Hardcoding to ${Boost_INCLUDE_DIR}""); INCLUDE_DIRECTORIES(SYSTEM ${Boost_INCLUDE_DIR}); ENDIF(). FIND_PACKAGE(MPI); IF (NOT MPI_CXX_FOUND); message(FATAL_ERROR ""Unable to find MPI installation.""); ENDIF (). include_directories(.); if(NOT ""${MPI_CXX_INCLUDE_PATH}"" STREQUAL """"); include_directories(SYSTEM ""${MPI_CXX_INCLUDE_PATH}""); endif(). IF (WIN32); set(BaseFlags ""/EHsc /MP /wd\""4996\"" /D MSWIN /D TP_PROJECT_USES_BOOST /D BOOST_ALL_NO_LIB /D MAKEARCHIVE /D NO_THIRD_PARTY_LIBS /D TECIOMPI /D NO_ASSERTS""); ELSE (); set(BaseFlags ""-DLINUX -DLINUX64 -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DMAKEARCHIVE -DNO_THIRD_PARTY_LIBS -DTECIOMPI -DOMPI_SKIP_MPICXX -DNO_ASSERTS -fmessage-length=0 -fPIC -fvisibility=hidden -w""); ENDIF (); set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${BaseFlags} ${MPI_CXX_COMPILE_FLAGS}""); ; FILE(GLOB mainFiles ""*.cpp"" ""*.h""); LIST(REMOVE_ITEM mainFiles ""${CMAKE_CURRENT_SOURCE_DIR}/szcombine.cpp""). add_library(teciompi STATIC ${mainFiles}). add_executable(szcombine ""szcombine.cpp""); target_link_libraries(szcombine teciompi ${MPI_LIBRARIES}). ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/CMakeLists.txt:707,install,installation,707,externals/tecio/teciompisrc/CMakeLists.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/CMakeLists.txt,1,['install'],['installation']
Deployability,"code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the source code distribution, i.e., `/path/to/SU2vX.X.X/`. Thanks for building, and happy optimizing!. - The SU2 Development Team. # SU2 De",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:3096,install,install,3096,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['install'],['install']
Deployability,"d on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the source code distribution, i.e., `/path/to/SU2vX.X.X/`. Thanks for building, and happy optimizing!. - The SU2 Development Team. # SU2 Developers. We follow the popular ""GitFlow"" branching model for scalable development. In the SU2 repository, the master branch represents the latest stable major or minor release (7.0, 6.2.0, etc.), it should only be modified during version releases. Work that is staged for release is put into the develop",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:3327,install,installation,3327,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,2,"['install', 'update']","['installation', 'update']"
Deployability,"eform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:2096,update,update,2096,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['update'],['update']
Deployability,"goals -; cascading levels of functionality; lower levels stand on their own, and provide usefulness to; higher levels when asked. updating config, state at or close to point of operation. delay class structure until mid/high levels. EXECUTION. level0 - raw suite; no upstream pointer communication. partitions set once in config initial read. SU2.run.CFD(config); SU2.run.DEF(config); SU2.run.DOT(config); SU2.run.SMC(config); 	interpret partitions; 	dump config; 	prepare os command; 	run os command; 	handle suite errors. level1 - suite + intent; upstream pointer communication of config; config (super copy) vs konfig (local copy); update super copy to make useful for next analysis steps; make temporary super deepcopy if not desired; returns info dictionary for higher level functions; all tools assume config['NUMBER_PART'] already set. SU2.run.deform(config,dv_new=[]); 	optional dv_new sets:; 		'DV_VALUE_OLD' = [0.0]*n_dv; 		'DV_VALUE_NEW' = dv_new; 		'DV_MARKER','DV_KIND','DV_PARAM' based on 'DEFINITION_DV'; 	checks decomp; 	adds 'deform' suffix to mesh_out; 	run DEF; 	pointer updated config; 		'MESH_FILENAME' = 'MESH_FILENAME'+'_deform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assu",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:635,update,update,635,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['update'],['update']
Deployability,if(METIS_INSTALL); install(FILES metis.h DESTINATION include); endif(); ,MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/include/CMakeLists.txt:19,install,install,19,externals/metis/include/CMakeLists.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/include/CMakeLists.txt,1,['install'],['install']
Deployability,"in64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select teciompi.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. teciompi.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guide.pdf) and Tecio; example programs for how to use this library. If you wish to copy only the; required files to a different folder for later use, please copy the following; files:. libteciompi.a (teciompi.lib on Windows); TECIO.h; tecio_Exports.h; tecio.inc; tecio.for; tecio.f90; tecio_license_agreement.txt. A Note on Boost: Tecio requires only the Boost header files--no libraries--so; it is possible to build teciompi using a Boost source distribution only, without; installing it. In this case, set Boost_INCLUDE_DIR to point to the root of; the source distribution, such as D:/boost_1_59_0, then click Configure, then; Generate in the CMake GUI (or for Linux, edit the Boost_INCLUDE_DIR setting in; CMakeLists.txt and reissue ""cmake ."" from the command line to recreate Makefile).; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:3777,install,installing,3777,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['install'],['installing']
Deployability,"info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; majo",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:2888,update,updates,2888,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['update'],['updates']
Deployability,install(FILES parmetis.h DESTINATION include),MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/parmetis/include/CMakeLists.txt:0,install,install,0,externals/parmetis/include/CMakeLists.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/parmetis/include/CMakeLists.txt,1,['install'],['install']
Deployability,"is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciompisrc directory,; such as D:/teciompisrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select teciompi.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. teciompi.lib is now available in the Debug or Release subdirector",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:2143,toggle,toggle,2143,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['toggle'],['toggle']
Deployability,"later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciosrc directory,; such as D:/teciosrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select tecio.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. tecio.lib is now available in the Debug or Release subdirectory of; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:1976,toggle,toggle,1976,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['toggle'],['toggle']
Deployability,"low you must have boost; installed on your computer (minimum version required: 1.59), or have; a Boost source distribution available. If you want to use an uninstalled; source distribution, please see the note on Boost at the bottom of this README.; For Windows, you must install the Microsoft MPI SDK. For other OSs, install; any typical MPI installation, including mpich, OpenMPI, or vendor MPI software. Building the library:; ---------------------; I. On Linux/Mac OS X; A. Using cmake. If you have cmake on you computer you may do the following. cmake .; make. B. Using make. If you do not have cmake then you can use the supplied Makefile.linux; using:. make BOOST_ROOT=iii -f Makefile.linux. where iii is the path to the boost include directory. If you find that you have to modify Makefile.linux to work on your system,; please let us know about your changes so we can provide a customized; makefile with our distribution. II. On Windows. CMake 2.8 or later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciompisrc directory,; such as D:/teciompisrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_D",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:1191,install,install,1191,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['install'],['install']
Deployability,"naries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the source code distribution, i.e., `/path/to/SU2vX.X.X/`. Thanks for building, and happy optimizing!. - The SU2 Development Team. # SU2 Developers. We follow the popular ""GitFlow"" br",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:3136,install,install,3136,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['install'],['install']
Deployability,"nconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move object; MINOR, LINK, H5E_CANTSORT, Can't sort objects. # Parallel MPI errors; MINOR, MPI, H5E_MPI, Some MPI function failed; MINOR, MPI, H5E_MPIERRSTR, MPI Error String; MINOR, MPI, H5E_CANTRECV, Can't receive data; MINOR, MPI, H5E_CANTGATHER, Can't gather data; MINOR, MPI, H5E_NO_INDEPENDENT, Can't perform independent IO. # Heap errors; MINOR, HEAP, H5E_CANTRESTORE, Can't restore condition; MINOR, HEAP, H5E_CANTCOMPUTE, Can't compute value; MINOR, HEAP, H5E_CANTEXTEND, Can't extend heap's space; MINOR, HEAP, H5E_CANTATTACH, Can't attach object; MINOR, HEAP, H5E_CANTUPDATE, Can't update object; MINOR, HEAP, H5E_CANTOPERATE, Can't operate on object. # Free space manager errors; MINOR, FSPACE, H5E_CANTMERGE, Can't merge objects; MINOR, FSPACE, H5E_CANTREVIVE, Can't revive object; MINOR, FSPACE, H5E_CANTSHRINK, Can't shrink container. # I/O pipeline errors; MINOR, PIPELINE, H5E_NOFILTER, Requested filter is not available; MINOR, PIPELINE, H5E_CALLBACK, Callback failed; MINOR, PIPELINE, H5E_CANAPPLY, Error from filter 'can apply' callback; MINOR, PIPELINE, H5E_SETLOCAL, Error from filter 'set local' callback; MINOR, PIPELINE, H5E_NOENCODER, Filter present but encoding disabled; MINOR, PIPELINE, H5E_CANTFILTER, Filter operation failed. # System level errors; MINOR, SYSTEM, H5E_SYSERRSTR, System error message. # Plugin errors; MINOR, PLUGIN, H5E_OPENERROR, Can't open directory or file. # No error, for backward compatibility */; MINOR, NONE, H5E_NONE_MINOR, No error; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:11263,update,update,11263,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,2,"['pipeline', 'update']","['pipeline', 'update']"
Deployability,"option('with-mpi', type : 'feature', value : 'auto', description: 'enable MPI support'); option('with-omp', type : 'boolean', value : false, description: 'enable OpenMP support'); option('enable-tecio', type : 'boolean', value : true, description: 'enable TECIO support'); option('enable-cgns', type : 'boolean', value : true, description: 'enable CGNS support'); option('enable-autodiff', type : 'boolean', value : false, description: 'enable AD (reverse) support'); option('enable-directdiff', type : 'boolean', value : false, description: 'enable AD (forward) support'); option('enable-pywrapper', type : 'boolean', value : false, description: 'enable Python wrapper support'); option('enable-normal', type : 'boolean', value : true, description: 'enable normal build'); option('enable-mkl', type : 'boolean', value : false, description: 'enable Intel-MKL support'); option('mkl_root', type : 'string', value : '/opt/intel/mkl', description: 'root of Intel-MKL installation (only for non-intel compilers)'); option('enable-openblas', type : 'boolean', value : false, description: 'enable BLAS and LAPACK support via OpenBLAS'); option('blas-name', type : 'string', value : 'openblas', description: 'name of the BLAS/LAPACK dependency'); option('enable-pastix', type : 'boolean', value : false, description: 'enable PaStiX support'); option('pastix_root', type : 'string', value : 'externals/pastix/', description: 'PaStiX base directory'); option('scotch_root', type : 'string', value : 'externals/scotch/', description: 'Scotch base directory'); option('custom-mpi', type : 'boolean', value : false, description: 'enable MPI assuming the compiler and/or env vars give the correct include dirs and linker args.'); option('enable-tests', type : 'boolean', value : false, description: 'compile Unit Tests'); option('enable-mixedprec', type : 'boolean', value : false, description: 'use single precision floating point arithmetic for sparse algebra'); option('extra-deps', type : 'string', value : '',",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt:964,install,installation,964,meson_options.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt,1,['install'],['installation']
Deployability,"or.io/repository/github/su2code/su2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:2298,release,releases,2298,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['release'],['releases']
Deployability,"s License. Also, you must do one; of these things:. a) Accompany the work with the complete corresponding; machine-readable source code for the Library including whatever; changes were used in the work (which must be distributed under; Sections 1 and 2 above); and, if the work is an executable linked; with the Library, with the complete machine-readable ""work that; uses the Library"", as object code and/or source code, so that the; user can modify the Library and then relink to produce a modified; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in ei",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:15894,install,installs,15894,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['install'],['installs']
Deployability,"s stand on their own, and provide usefulness to; higher levels when asked. updating config, state at or close to point of operation. delay class structure until mid/high levels. EXECUTION. level0 - raw suite; no upstream pointer communication. partitions set once in config initial read. SU2.run.CFD(config); SU2.run.DEF(config); SU2.run.DOT(config); SU2.run.SMC(config); 	interpret partitions; 	dump config; 	prepare os command; 	run os command; 	handle suite errors. level1 - suite + intent; upstream pointer communication of config; config (super copy) vs konfig (local copy); update super copy to make useful for next analysis steps; make temporary super deepcopy if not desired; returns info dictionary for higher level functions; all tools assume config['NUMBER_PART'] already set. SU2.run.deform(config,dv_new=[]); 	optional dv_new sets:; 		'DV_VALUE_OLD' = [0.0]*n_dv; 		'DV_VALUE_NEW' = dv_new; 		'DV_MARKER','DV_KIND','DV_PARAM' based on 'DEFINITION_DV'; 	checks decomp; 	adds 'deform' suffix to mesh_out; 	run DEF; 	pointer updated config; 		'MESH_FILENAME' = 'MESH_FILENAME'+'_deform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:1090,update,updated,1090,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['update'],['updated']
Deployability,"s; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, H5E_CANTCREATE, Unable to create file; MINOR, FILEACC, H5E_CANTOPENFILE, Unable to open file; MINOR, FILEACC, H5E_CANTCLOSEFILE, Unable to close file; MINOR, FILEACC, H5E_NOTHDF5, Not an HDF5 file; MINOR, FILEACC, H5E_BADFILE, Bad file ID accessed; MINOR, FILEACC, H5E_TRUNCATED, File has been truncated; MINOR, FILEACC, H5E_MOUNT, File mount error; MINOR, FILEACC, H5E_CANTDELETEFILE, Unable to delete file; MINOR, FILEACC, H5E_CANTLOCKFILE, Unable to lock file; MINOR, FILEACC, H5E_CANTUNLOCKFILE, Unable to unlock file. # Generic low-level file I/O errors; MINOR, FILE, H5E_SEEKERROR, Seek failed; MINOR, FILE, H5E_READERROR, Read failed; MINOR, FILE, H5E_WRITEERROR, Write failed; MINOR, FILE, H5E_CLOSEERROR, Close failed; MINOR, FILE, H5E_OVERFLOW, Address overflowed; MINOR, FILE, H5E_FCNTL, File control (fcntl) failed. # Function entry/exit interface errors; MINOR, FUNC, H5E_CANTINIT, Unable to initialize object; MINOR, FUNC, H5E_ALREADYINIT, Object already initialized; MINOR, FUNC, H5E_CANTRELEASE, Unable to release object. # Object atom related errors; MINOR, ATOM, H5E_BADATOM, Unable to find atom information (already closed?); MINOR, ATOM, H5E_BADGROUP, Unable to find ID group information; MINOR, ATOM, H5E_CANTREGISTER, Unable to register new atom; MINOR, ATOM, H5E_CANTINC, Unable to increment reference count; MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MINOR, CACHE, H5E_CANTTAG, Unable to tag metadata in the cache; MINOR, CACHE, H5E_CANTLOAD, Unable to load metadata into cache; MINOR, CACHE, H5E_PROTECT, Protected metadata error; MINOR, CACHE, H5E_NOTCACHED, Metadata not currently cached; MINOR, CACHE, H5E_",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:6082,release,release,6082,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['release'],['release']
Deployability,"t summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the source code distribution, i.e., `/path/to/SU2vX.X.X/`. Thanks for building, and happy optimizing!. - The SU2 Development Team. # SU2 Developers. We follow the popular ""GitFlow"" branching model for scalable development. In the SU2 repository, the master branch represents the latest stable major or minor release (7.0, 6.2.0, etc.), it should only be modified during version releases. Work that is staged for release is put into the develop branch via Pull Requests on GitHub from various ""feature"" branches where folks do their day-to-day work on the code. At release time, the work that has been merged into the develop branch is pushed to the master branch and tagged as a release. SU2 is being developed by individuals and organized teams all around the world. ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:3756,install,installed,3756,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['install'],['installed']
Deployability,"tiX base directory'); option('scotch_root', type : 'string', value : 'externals/scotch/', description: 'Scotch base directory'); option('custom-mpi', type : 'boolean', value : false, description: 'enable MPI assuming the compiler and/or env vars give the correct include dirs and linker args.'); option('enable-tests', type : 'boolean', value : false, description: 'compile Unit Tests'); option('enable-mixedprec', type : 'boolean', value : false, description: 'use single precision floating point arithmetic for sparse algebra'); option('extra-deps', type : 'string', value : '', description: 'comma-separated list of extra (custom) dependencies to add for compilation'); option('enable-mpp', type : 'boolean', value : false, description: 'enable Mutation++ support'); option('install-mpp', type : 'boolean', value : false, description: 'install Mutation++ in the directory defined with --prefix'); option('enable-coolprop', type : 'boolean', value : false, description: 'enable CoolProp support'); option('enable-mlpcpp', type : 'boolean', value : false, description: 'enable profiling through gprof'); option('enable-gprof', type : 'boolean', value : false, description: 'enable MLPCpp support'); option('opdi-backend', type : 'combo', choices : ['auto', 'macro', 'ompt'], value : 'auto', description: 'OpDiLib backend choice'); option('codi-tape', type : 'combo', choices : ['JacobianLinear', 'JacobianReuse', 'JacobianMultiUse', 'PrimalLinear', 'PrimalReuse', 'PrimalMultiUse'], value : 'JacobianLinear', description: 'CoDiPack tape choice'); option('opdi-shared-read-opt', type : 'boolean', value : true, description : 'OpDiLib shared reading optimization'); option('librom_root', type : 'string', value : '', description: 'libROM base directory'); option('enable-librom', type : 'boolean', value : false, description: 'enable LLNL libROM support'); option('static-cgns-deps', type : 'boolean', value : false, description: 'prefer static or dynamic (default) libraries for CGNS dependencies'); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt:2199,install,install-mpp,2199,meson_options.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt,2,['install'],"['install', 'install-mpp']"
Deployability,"ual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select tecio.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. tecio.lib is now available in the Debug or Release subdirectory of; the binary build folder you selected above. Using the library:; -----------------; Please refer to the Data Format Guide (360_data_format_guide.pdf) and Tecio; example programs for how to use this library. If you wish to copy only the; required files to a different folder for later use, please copy the following; files:. libtecio.a (tecio.lib on Windows); TECIO.h; tecio_Exports.h; tecio.inc; tecio.for; tecio.f90; tecio_license_agreement.txt. A Note on Boost: Tecio requires only the Boost header files--no libraries--so; it is possible to build tecio using a Boost source distribution only, without; installing it. In this case, set Boost_INCLUDE_DIR to point to the root of; the source distribution, such as D:/boost_1_59_0, then click Configure, then; Generate in the CMake GUI (or for Linux, edit the Boost_INCLUDE_DIR setting in; CMakeLists.txt and reissue ""cmake ."" from the command line to recreate Makefile).; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:3595,install,installing,3595,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['install'],['installing']
Deployability,"ve file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing nam",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3146,update,updates,3146,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['update'],['updates']
Energy Efficiency," control compilation; and installation of the library. Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running a program using the Library is not restricted, and output from; such a program is covered only if its contents constitute a work based; on the Library (independent of the use of the Library in a tool for; writing it). Whether that is true depends on what the Library does; and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge a fee for the physical act of transferring a copy,; and you may at your option offer warranty protection in exchange for a; fee. 2. You may modify your copy or copies of the Library or any portion; of it, thus forming a work based on the Library, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices; stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no; charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a; table of data to be supplied by an application program that uses; the facility, other than as an argument passed when the facility; is invoked, then you must make a good faith effort to ensure that,; in the event an application does not supply such function or; table, the facility still ope",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:8230,charge,charge,8230,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['charge'],['charge']
Energy Efficiency," with the Library, with the complete machine-readable ""work that; uses the Library"", as object code and/or source code, so that the; user can modify the Library and then relink to produce a modified; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in either source or binary form) with the major; components (compiler, kernel, and so on) of the operating system on; which the executable runs, unless that component itself accompanies; the executable. It may happen that this requirement contradicts the license; restrictions of other proprietary librarie",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:16166,charge,charge,16166,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['charge'],['charge']
Energy Efficiency,"# Unsteady CHT Adjoint Testcase. ## Short Description; This is a 2D cylinder in freestream testcase. The flow is incompressible and laminar at Re=200.; A uniform vortex shedding forms behind the cylinder and each shedding cycle is resolved by 54 timesteps.; The pin is heated on the inner surface. ## Mesh; The mesh is for testing purposes only and contains ~4000 elements for the flow and ~1000 for the heat domain.; A gmsh .geo file is added such that the mesh can be recreated and modified. ## Recreating full primal; The primal for a full cycle can be restarted with the `solution_*_00000.dat` and `solution_*_00001.dat`.; The primal solution is necessary for the Discrete Adjoint sweep and for the gradient of the full; shedding cycle the full primal is necessary. The necessary changes to `chtMaster.cfg` are documented; in the config itself. ## Discrete Adjoint; In the regression testcase of SU2 only 2 reverse steps are taken.; For that, the solution files 52-55 for the adjoint are added.; The objective Function is the average temperature on the inner pin surface, averaged over the full time. ## Gradient validation via Finite Differences using FADO; In order to validate the Discrete Adjoint gradient a Finite Differences python script `gradient_validation.py`; using [FADO](www.github.com/su2code/FADO) is added.; Note that the script can be used with the files as they are. Necessary adaptions are made by FADO itself.; The script deforms the mesh and runs the primal for each of the 18 Design Variables.; Afterwards the baseline mesh is evaluated and then the Discrete Adjoint.; Use `postprocess.py` to print the absolute difference and relative difference in percent to screen.; The relative differences in percent are <0.15% for all Design Variables (2021-05-14).; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md:1399,adapt,adaptions,1399,TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md,1,['adapt'],['adaptions']
Energy Efficiency,"2.run.DOT(config); SU2.run.SMC(config); 	interpret partitions; 	dump config; 	prepare os command; 	run os command; 	handle suite errors. level1 - suite + intent; upstream pointer communication of config; config (super copy) vs konfig (local copy); update super copy to make useful for next analysis steps; make temporary super deepcopy if not desired; returns info dictionary for higher level functions; all tools assume config['NUMBER_PART'] already set. SU2.run.deform(config,dv_new=[]); 	optional dv_new sets:; 		'DV_VALUE_OLD' = [0.0]*n_dv; 		'DV_VALUE_NEW' = dv_new; 		'DV_MARKER','DV_KIND','DV_PARAM' based on 'DEFINITION_DV'; 	checks decomp; 	adds 'deform' suffix to mesh_out; 	run DEF; 	pointer updated config; 		'MESH_FILENAME' = 'MESH_FILENAME'+'_deform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:1355,reduce,reduced,1355,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['reduce'],['reduced']
Energy Efficiency,"Boost Software License - Version 1.0 - August 17th, 2003. Permission is hereby granted, free of charge, to any person or organization; obtaining a copy of the software and accompanying documentation covered by; this license (the ""Software"") to use, reproduce, display, distribute,; execute, and transmit the Software, and to prepare derivative works of the; Software, and to permit third-parties to whom the Software is furnished to; do so, all subject to the following:. The copyright notices in the Software and this entire statement, including; the above license grant, this restriction and the following disclaimer,; must be included in all copies of the Software, in whole or in part, and; all derivative works of the Software, unless such copies or derivative; works are solely in the form of machine-executable object code generated by; a source language processor. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT; SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE; FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,; ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER; DEALINGS IN THE SOFTWARE.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/catch2/LICENSE.txt:96,charge,charge,96,externals/catch2/LICENSE.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/catch2/LICENSE.txt,1,['charge'],['charge']
Energy Efficiency,"Propeller data provided as the test case here is the propeller used in the studies of Sinnige et al. 2018 in their experimental studies. Isolated propeller geometry as .stp file and experimental results (J vs CT, J vs CP) are provided as supplementary materials along with the publication. The current test case corresponds to the four bladed propeller of diameter 0.237m in a freestream velocity (Vinf) of 40m/s, advance ratio of J=0.8, propeller blade angle at 0.75R is 23.9 degrees. The experimental thrust and power (Non-Dimensional) at J ~ 0.8 are as follows:. J=Vinf/nD	CT=Thrust/rho*n2*D4	CP=Power/rho*n3*D5; 0.7963	 0.0953	 0.1025. The dimensional values are Thrust = 16.30 N and Torque = 0.6612 N-m. Reference:; -----------; Sinnige, T., van Arnhem, N., Stokkermans, T. C. A., Eitelberg, G., Veldhuis, L. L. M., ``Wingtip-Mounted; 	 Propellers: Aerodynamic Analysis of Interaction Effects and Comparison with Conventional Layout,''; 	 Journal of Aircraft, 2018.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/rans/actuatordisk_bem/readme.txt:514,power,power,514,TestCases/rans/actuatordisk_bem/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/rans/actuatordisk_bem/readme.txt,1,['power'],['power']
Energy Efficiency,"TION, OHDR, Object header related errors; SECTION, GROUP, Group related errors; SECTION, TYPECONV, Datatype conversion errors; SECTION, DSPACE, Dataspace errors; SECTION, PLIST, Property list errors; SECTION, MPI, Parallel MPI errors; SECTION, HEAP, Heap errors; SECTION, FSPACE, Free space errors; SECTION, PIPELINE, I/O pipeline errors; SECTION, SYSTEM, System level errors; SECTION, PLUGIN, Plugin errors; SECTION, NONE, No error. # Minor errors. # Argument errors; MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; MINOR, ARGS, H5E_BADTYPE, Inappropriate type; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exists; MINOR, RESOURCE, H5E_CANTLOCK, Unable to lock object; MINOR, RESOURCE, H5E_CANTUNLOCK, Unable to unlock object; MINOR, RESOURCE, H5E_CANTGC, Unable to garbage collect; MINOR, RESOURCE, H5E_CANTGETSIZE, Unable to compute size; MINOR, RESOURCE, H5E_OBJOPEN, Object is already open. # File accessibility errors; MINOR, FILEACC, H5E_FILEEXISTS, File already exists; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, H5E_CANTCREATE, Unable to create file; MINOR, FILEACC, H5E_CANTOPENFILE, Unable to open file; MINOR, FILEACC, H5E_CANTCLOSEFILE, Unable to close file; MINOR, FILEACC, H5E_NOTHDF5, Not an HDF5 file; MINOR, FILEACC, H5E_BADFILE, Bad file ID accessed; MINOR, FILEACC, H5E_TRUNCATED, File has been truncated; MINOR, FILEACC, H5E_MOUNT, File mount error; MINOR, FILEACC, H5E_CANTDELETEFILE, Unable to delete file; MINOR, FILEACC, H5E_CANTLOCKFILE, Unable to lock file; MINOR, FILEACC, H5E_CANTUNLOCKFILE, Unable to unlock file. # Generic low-level file I/O errors; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:4450,allocate,allocate,4450,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['allocate'],['allocate']
Energy Efficiency,"ary's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge a fee for the physical act of transferring a copy,; and you may at your option offer warranty protection in exchange for a; fee. 2. You may modify your copy or copies of the Library or any portion; of it, thus forming a work based on the Library, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices; stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no; charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a; table of data to be supplied by an application program that uses; the facility, other than as an argument passed when the facility; is invoked, then you must make a good faith effort to ensure that,; in the event an application does not supply such function or; table, the facility still operates, and performs whatever part of; its purpose remains meaningful. (For example, a function in a library to compute square roots has; a purpose that is entirely well-defined independent of the; application. Therefore, Subsection 2d requires that any; application-supplied function or table used by this function must; be optional: if the application does not supply it, the square; root function must still compute square roots.). These requirements apply to the modified work as a whole. If; identifiable sections of that work are not derived from the Library,; and can be re",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:8873,charge,charge,8873,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['charge'],['charge']
Energy Efficiency,"e, version 2, hence; the version number 2.1.]. Preamble. The licenses for most software are designed to take away your; freedom to share and change it. By contrast, the GNU General Public; Licenses are intended to guarantee your freedom to share and change; free software--to make sure the software is free for all its users. This license, the Lesser General Public License, applies to some; specially designated software packages--typically libraries--of the; Free Software Foundation and other authors who decide to use it. You; can use it too, but we suggest you first think carefully about whether; this license or the ordinary General Public License is the better; strategy to use in any particular case, based on the explanations below. When we speak of free software, we are referring to freedom of use,; not price. Our General Public Licenses are designed to make sure that; you have the freedom to distribute copies of free software (and charge; for this service if you wish); that you receive source code or can get; it if you want it; that you can change the software and use pieces of; it in new free programs; and that you are informed that you can do; these things. To protect your rights, we need to make restrictions that forbid; distributors to deny you these rights or to ask you to surrender these; rights. These restrictions translate to certain responsibilities for; you if you distribute copies of the library or if you modify it. For example, if you distribute copies of the library, whether gratis; or for a fee, you must give the recipients all the rights that we gave; you. You must make sure that they, too, receive or can get the source; code. If you link other code with the library, you must provide; complete object files to the recipients, so that they can relink them; with the library after making changes to the library and recompiling; it. And you must show them these terms so they know their rights. We protect your rights with a two-step method: (1) we copyright",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:1382,charge,charge,1382,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['charge'],['charge']
Energy Efficiency,"y instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or; reject comments, commits, code, wiki edits, issues, and other contributions; that are not aligned to this Code of Conduct, or to ban temporarily or; permanently any contributor for other behaviors that they deem inappropriate,; threatening, offensive, or harmful. ## Scope. This Code of Conduct applies both within project spaces and in public spaces; when an individual is representing the project or its community. Examples of; representing a project or community include using an official project e-mail; address, posting via an official social media account, or acting as an appointed; representative at an online or offline event. Representation of a project may be; further defined and clarified by project maintainers. ## Enforcement. Instances of abusive, harassing, or otherwise unacceptable behavior may be; reported by contacting the project team at info@su2foundation.org. All; complaints will be reviewed and investigated and will result in a response that; is deemed necessary and appropriate to the circumstances. The project team is; obligated to maintain confidentiality with regard to the reporter of an incident.; Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good; faith may face temporary or permanent repercussions as determined by other; members of the project's leadership. Consequences may include:; * Downgrade or removal of repository permissions such as admin and write; permissions.; * Removal from the su2code organization on Github.; * Being blocked from the su2code repository.; * Reporting of the abuse to Github. ## Attribution. This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,; available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html. [homepage]: https://www.contributor-covenant.org; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md:3401,adapt,adapted,3401,CODE_OF_CONDUCT.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md,1,['adapt'],['adapted']
Integrability," MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MINOR, CACHE, H5E_CANTTAG, Unable to tag metadata in the cache; MINOR, CACHE, H5E_CANTLOAD, Unable to load metadata into cache; MINOR, CACHE, H5E_PROTECT, Protected metadata error; MINOR, CACHE, H5E_NOTCACHED, Metadata not currently cached; MINOR, CACHE, H5E_SYSTEM, Internal error detected; MINOR, CACHE, H5E_CANTINS, Unable to insert metadata into cache; MINOR, CACHE, H5E_CANTPROTECT, Unable to protect metadata; MINOR, CACHE, H5E_CANTUNPROTECT, Unable to unprotect metadata; MINOR, CACHE, H5E_CANTPIN, Unable to pin cache entry; MINOR, CACHE, H5E_CANTUNPIN, Unable to un-pin cache entry; MINOR, CACHE, H5E_CANTMARKDIRTY, Unable to mark a pinned entry as dirty; MINOR, CACHE, H5E_CANTMARKCLEAN, Unable to mark a pinned entry as clean; MINOR, CACHE, H5E_CANTMARKUNSERIALIZED, Unable to mark an entry as unserialized; MINOR, CACHE, H5E_CANTMARKSERIALIZED, Unable to mark an entry as serialized; MINOR, CACHE, H5E_CANTDIRTY, Unable to mark metadata as dirty; MINOR, CACHE, H5E_CANTCLEAN, Unable to mark metadata as clean; MINOR, CACHE, H5E_CANTEXPUNGE, Unable to expunge a metadata cache entry; MINOR, CACHE, H5E_CANTRESIZE, Unable to resize a metadata cache entry; MINOR, CACHE, H5E_CANTDEPEND, Unable to create a flush dependency; MINOR, CACHE, H5E_CANTUNDEPEND, Unable to destroy a flush dependency; MINOR, CACHE, H5E_CANTNOTIFY, Unable to notify object about action; MINOR, CACHE, H5E_LOGGING, Failure in the cache logging framework; MINOR, CACHE, H5E_CANTCORK, Unable to cork an object; MINOR, CACHE, H5E_CANTUNCORK, Unable to uncork an object. # B-tree related errors; MINOR, BTREE, H5E_NOTFOUND, Object not found; MINOR, BTREE, H5E_EXISTS, Object alre",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:7954,depend,dependency,7954,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,2,['depend'],['dependency']
Integrability," the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any; patents or other property right claims or to contest validity of any; such claims; this section has the sole purpose of protecting the; integrity of the free software distribution system which is; implemented by public license practices. Many people have made; generous contributions to the wide range of software distributed; through that system in reliance on consistent application of that; system; it is up to the author/donor to decide if he or she is willing; to distribute software through any other system and a licensee cannot; impose that choice. This section is intended to make thoroughly clear what is believed to; be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in; certain countries either by patents or by copyrighted interfaces, the; original copyright holder who places the Library under this License may add; an explicit geographical distribution limitation excluding those countries,; so that distribution is permitted only in or among countries not thus; excluded. In such case, this License incorporates the limitation as if; written in the body of this License. 13. The Free Software Foundation may publish revised and/or new; versions of the Lesser General Public License from time to time.; Such new versions will be similar in spirit to the present version,; but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library; specifies a version number of this License which applies to it and; ""any later version"", you have the option of following the terms and; conditions either of that version or of any later version published by; the Free Software Foundation. If the Library does not specify a; license version number, you may choose any version ever published by; the Free Software Foundation. 14. If y",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:21398,interface,interfaces,21398,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['interface'],['interfaces']
Integrability,"# Periodic Pins. This a solid heat conduction testcase in which the `HEAT_EQUATION` solver runs standalone (i.e. not as CHT).; The simulation domain is the solid domain of the `incomp_navierstokes/streamwise_periodic/chtPinArray_2d`-Testcase.; Therefore the provided gmsh `.geo` file contains the full CHT mesh but only writes out the solid zone when called. Note that using periodic boundary conditions for the solid zone made the solution take ~10x more iterations to converge , compared to the same setup using adiabatic walls.; This was found for solid only as well as CHT cases. Expected results are perfectly matched Temperatures at the periodic interface. Compare e.g. using Paraview's `Transform`-Filter with domain length 0.0111544m.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/solid_heat_conduction/periodic_pins/README.md:652,interface,interface,652,TestCases/solid_heat_conduction/periodic_pins/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/solid_heat_conduction/periodic_pins/README.md,1,['interface'],['interface']
Integrability,"Follow the normal meson build instructions, add -Denable-pastix=true,; % this requires you to compile with MKL (-Denable-mkl=true) or OpenBLAS; % (-Denable-openblas=true) support in your call to meson.py.; % If you did not build PaStiX and Scotch in the externals folders you must; % use -Dpastix_root=""some path"" and -Dscotch_root=""another path"" to; % indicate where they are RELATIVE to the SU2 directory.; % You need sequential versions of BLAS. But when using MPI+Threads beware that; % OpenBLAS needs to have parallel support otherwise the solver will crash, if; % you get poor performance see 5.4 below.; %; % 5 - Common problems and known issues; % - OpenMPI 4 does not work with PaStiX 5, downgrade to 3.1.4.; % - Very early versions of OpenMPI 3 may have problems with MPI types.; % - OpenBLAS build fails when linking executables. Old versions (e.g.; % 0.2.18) did not provide LAPACK support, rebuild or upgrade.; % - Very bad performance with OpenBLAS on some systems (observed on Ubuntu; % 16.04) try ""export OMP_NUM_THREADS=1"" before running SU2, check that; % you only see N SU2 processes running at 100% (mpirun -n N SU2_XXX).; % - Cannot find BLAS dependency:; % i - On some OS the package has a different name (e.g. Ubuntu 16.04; % blas-openblas instead of openblas), use -Dblas-name=""right name"" in; % call to meson.py; % ii - The name is right but meson cannot find it. Set env variable; % PKG_CONFIG_PATH=$PKG_CONFIG_PATH:""directory with someblas.pc file""; % - MKL is not in its standard directory (/opt/intel/mkl), use option; % -Dmkl_root=""non standard directory"" in call to meson.py (headers are; % expected in ""include"" and libraries in ""lib/intel64"").; %; % 6 - Tested platforms; % - Ubuntu 18.04, gcc 7.4, ompi 3.1.4, mkl 2017, openblas 0.2.20 and 0.3.2.dev; % - Ubuntu 16.04, gcc 5.4, ompi 3.1.4, mkl 2017 and 2019; % - CentOS 7.6.1810, gcc 5.4, ompi 3.1.4, mkl 2017; % - CentOS 7.6.1810, gcc 5.4, impi 2018, mkl 2019; % - CentOS 7.6.1810, gcc 8.2, impi 2018, mkl 2019; %; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:3573,depend,dependency,3573,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['depend'],['dependency']
Integrability,"H5E_REFERENCE, References; MAJOR, H5E_VFL, Virtual File Layer; MAJOR, H5E_VOL, Virtual Object Layer; MAJOR, H5E_TST, Ternary Search Trees; MAJOR, H5E_RS, Reference Counted Strings; MAJOR, H5E_ERROR, Error API; MAJOR, H5E_SLIST, Skip Lists; MAJOR, H5E_FSPACE, Free Space Manager; MAJOR, H5E_SOHM, Shared Object Header Messages; MAJOR, H5E_EARRAY, Extensible Array; MAJOR, H5E_FARRAY, Fixed Array; MAJOR, H5E_PLUGIN, Plugin for dynamically loaded library; MAJOR, H5E_PAGEBUF, Page Buffering; MAJOR, H5E_CONTEXT, API Context; MAJOR, H5E_MAP, Map; MAJOR, H5E_NONE_MAJOR, No error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CACHE, Cache related errors; SECTION, LINK, Link related errors; SECTION, BTREE, B-tree related errors; SECTION, OHDR, Object header related errors; SECTION, GROUP, Group related errors; SECTION, TYPECONV, Datatype conversion errors; SECTION, DSPACE, Dataspace errors; SECTION, PLIST, Property list errors; SECTION, MPI, Parallel MPI errors; SECTION, HEAP, Heap errors; SECTION, FSPACE, Free space errors; SECTION, PIPELINE, I/O pipeline errors; SECTION, SYSTEM, System level errors; SECTION, PLUGIN, Plugin errors; SECTION, NONE, No error. # Minor errors. # Argument errors; MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; MINOR, ARGS, H5E_BADTYPE, Inappropriate type; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exi",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:3442,interface,interface,3442,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['interface'],['interface']
Integrability,"buted under the terms of; this Lesser General Public License (also called ""this License"").; Each licensee is addressed as ""you"". A ""library"" means a collection of software functions and/or data; prepared so as to be conveniently linked with application programs; (which use some of those functions and data) to form executables. The ""Library"", below, refers to any such software library or work; which has been distributed under these terms. A ""work based on the; Library"" means either the Library or any derivative work under; copyright law: that is to say, a work containing the Library or a; portion of it, either verbatim or with modifications and/or translated; straightforwardly into another language. (Hereinafter, translation is; included without limitation in the term ""modification"".). ""Source code"" for a work means the preferred form of the work for; making modifications to it. For a library, complete source code means; all the source code for all modules it contains, plus any associated; interface definition files, plus the scripts used to control compilation; and installation of the library. Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running a program using the Library is not restricted, and output from; such a program is covered only if its contents constitute a work based; on the Library (independent of the use of the Library in a tool for; writing it). Whether that is true depends on what the Library does; and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:7241,interface,interface,7241,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['interface'],['interface']
Integrability,"cmake_minimum_required(VERSION 2.8.12) # requiring 2.8.12 sets the CMP0022 policy to new (non-transitive linking, i.e. just the interfaces) by default. if (NOT CMAKE_BUILD_TYPE); set (CMAKE_BUILD_TYPE Release CACHE STRING ""CMake build type (Debug|Release)"" FORCE); endif (). project (tecio C CXX). FIND_PACKAGE(Boost); IF (Boost_FOUND); INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR}); ELSE(); Set (Boost_INCLUDE_DIR /3rdpartylibs/boost/1.59.0/build/linux64-centos6.5/include); message (""Warning: Cannot find boost include directories. Hardcoding to ${Boost_INCLUDE_DIR}""); INCLUDE_DIRECTORIES(SYSTEM ${Boost_INCLUDE_DIR}); ENDIF(); include_directories(.). IF (WIN32); set(BaseFlags ""/EHsc /MP /wd\""4996\"" /D MSWIN /D TP_PROJECT_USES_BOOST /D BOOST_ALL_NO_LIB /D MAKEARCHIVE /D NO_THIRD_PARTY_LIBS /D NO_ASSERTS""); ELSE (); 	set(BaseFlags ""-DLINUX -DLINUX64 -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DMAKEARCHIVE -DNO_THIRD_PARTY_LIBS -DNO_ASSERTS -fmessage-length=0 -fPIC -fvisibility=hidden -w""); ENDIF (); set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${BaseFlags}""); ; FILE(GLOB mainFiles ""*.cpp"" ""*.h""); LIST(REMOVE_ITEM mainFiles ""${CMAKE_CURRENT_SOURCE_DIR}/szcombine.cpp""). add_library(tecio STATIC ${mainFiles}). add_executable(szcombine ""szcombine.cpp""); if (WIN32); target_link_libraries(szcombine tecio); else (); target_link_libraries(szcombine tecio pthread); endif (). # Had to add this so building tecio care package within loci-chem works...; set_target_properties(tecio PROPERTIES LINKER_LANGUAGE CXX); set_target_properties(szcombine PROPERTIES LINKER_LANGUAGE CXX); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/CMakeLists.txt:128,interface,interfaces,128,externals/tecio/teciosrc/CMakeLists.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/CMakeLists.txt,2,"['interface', 'message']","['interfaces', 'message']"
Integrability,"cmake_minimum_required(VERSION 2.8.12) # requiring 2.8.12 sets the CMP0022 policy to new (non-transitive linking, i.e. just the interfaces) by default. if (NOT CMAKE_BUILD_TYPE); set (CMAKE_BUILD_TYPE Release CACHE STRING ""CMake build type (Debug|Release)"" FORCE); endif (). project (teciompi). FIND_PACKAGE(Boost); IF (Boost_FOUND); INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR}); ELSE(); Set (Boost_INCLUDE_DIR /3rdpartylibs/boost/1.59.0/build/linux64-centos6.5/include); message (""Warning: Cannot find boost include directories. Hardcoding to ${Boost_INCLUDE_DIR}""); INCLUDE_DIRECTORIES(SYSTEM ${Boost_INCLUDE_DIR}); ENDIF(). FIND_PACKAGE(MPI); IF (NOT MPI_CXX_FOUND); message(FATAL_ERROR ""Unable to find MPI installation.""); ENDIF (). include_directories(.); if(NOT ""${MPI_CXX_INCLUDE_PATH}"" STREQUAL """"); include_directories(SYSTEM ""${MPI_CXX_INCLUDE_PATH}""); endif(). IF (WIN32); set(BaseFlags ""/EHsc /MP /wd\""4996\"" /D MSWIN /D TP_PROJECT_USES_BOOST /D BOOST_ALL_NO_LIB /D MAKEARCHIVE /D NO_THIRD_PARTY_LIBS /D TECIOMPI /D NO_ASSERTS""); ELSE (); set(BaseFlags ""-DLINUX -DLINUX64 -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DMAKEARCHIVE -DNO_THIRD_PARTY_LIBS -DTECIOMPI -DOMPI_SKIP_MPICXX -DNO_ASSERTS -fmessage-length=0 -fPIC -fvisibility=hidden -w""); ENDIF (); set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${BaseFlags} ${MPI_CXX_COMPILE_FLAGS}""); ; FILE(GLOB mainFiles ""*.cpp"" ""*.h""); LIST(REMOVE_ITEM mainFiles ""${CMAKE_CURRENT_SOURCE_DIR}/szcombine.cpp""). add_library(teciompi STATIC ${mainFiles}). add_executable(szcombine ""szcombine.cpp""); target_link_libraries(szcombine teciompi ${MPI_LIBRARIES}). ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/CMakeLists.txt:128,interface,interfaces,128,externals/tecio/teciompisrc/CMakeLists.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/CMakeLists.txt,3,"['interface', 'message']","['interfaces', 'message']"
Integrability,"der; copyright law: that is to say, a work containing the Library or a; portion of it, either verbatim or with modifications and/or translated; straightforwardly into another language. (Hereinafter, translation is; included without limitation in the term ""modification"".). ""Source code"" for a work means the preferred form of the work for; making modifications to it. For a library, complete source code means; all the source code for all modules it contains, plus any associated; interface definition files, plus the scripts used to control compilation; and installation of the library. Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running a program using the Library is not restricted, and output from; such a program is covered only if its contents constitute a work based; on the Library (independent of the use of the Library in a tool for; writing it). Whether that is true depends on what the Library does; and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge a fee for the physical act of transferring a copy,; and you may at your option offer warranty protection in exchange for a; fee. 2. You may modify your copy or copies of the Library or any portion; of it, thus forming a work based on the Library, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices; stating that",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:7730,depend,depends,7730,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['depend'],['depends']
Integrability,"e, including; # terms governing use, modification, and redistribution, is contained in; # the COPYING file, which can be found at the root of the source code; # distribution tree, or in https://www.hdfgroup.org/licenses.; # If you do not have access to either file, you may request a copy from; # help@hdfgroup.org.; #. # This file is used to generate the various headers that are needed for the; # error API. The bin/make_err script reads in this file and creates the; # appropriate files in the src/ directory when the generated headers are out; # of date with respect to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>,<major section, if minor type, otherwise omitted>,<name>,<description>; #; # For example, the following sample input shows two major errors and two minor; # errors in each section:; #; # MAJOR, H5E_ARGS, Invalid arguments to routine; # MAJOR, H5E_RESOURCE, Resource unavailable; #; # SECTION, ARGS, Argument errors; # SECTION, RESOURCE, Resource errors; #; # MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; # MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; # MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; # MINOR, RESOURCE, H5E_CANTCOPY, unable to copy object; #; # The section information is just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in detail); MAJOR, H5E_LIB, General library infrastructure; MAJOR, H5E_FILE, File accessibility; MAJOR, H5E_IO, Low-level I/O; MAJOR, H5E_FUNC, Function entry/exit; MAJOR, H5E_ATOM, Object ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:1109,rout,routine,1109,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['rout'],['routine']
Integrability,"ers that are needed for; # versioning the public symbols for the library.; #; # The bin/make_vers script reads in this file and creates the appropriate files; # in the src/ directory when the generated headers are out of date with respect; # to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>: <base routine name>; <list of versioned parameter types for function>; <version introduced>, <list of revised versions>; #; # Where <type> is either 'FUNCTION' or 'TYPEDEF'; #; # For example, the following sample input shows two functions with different; # API versions for each. The example below shows H5Gfoo being added to the; # library in the v1.0 branch and revised in the v1.4 and v1.8 branches (so; # there should be three versioned names for the routine: H5Gfoo1, H5Gfoo2 and; # H5Gfoo3). H5Gbar is shown as being added to the library in the v1.2 branch; # (so the ""base"" version of the API name wouldn't appear if the library; # was configured with the default API interface corresponding to v1.0) and; # revised in the v1.6 branch (so there should be two versioned names for the; # routine: H5Gbar1 and H5Gbar2).; #; # FUNCTION: H5Gfoo; ; v10, v14, v18; # FUNCTION: H5Gbar; ; v12, v16; #; # Programmer: Quincey Koziol; # Creation Date: 2007/07/10. # API function names; # (although not required, it's easier to compare this file with the headers; # generated if the list below is in alphanumeric sort order - QAK); FUNCTION: H5Acreate; ; v10, v18; FUNCTION: H5Aiterate; H5A_operator; v10, v18; FUNCTION: H5Dcreate; ; v10, v18; FUNCTION: H5Dopen; ; v10, v18; FUNCTION: H5Eclear; ; v10, v18; FUNCTION: H5Eget_auto; ; v10, v18; FUNCTION: H5Eprint; ; v10, v18; FUNCTION: H5Epush; ; v14, v18; FUNCTION: H5Eset_auto; ; v10, v18; FUNCTION: H5Ewalk; H5E_walk, H5E_error; v10, v18; FUNCTION: H5Fget_info; H5F_info; v18, v110; FUNCTION: H5Gcreate; ; v10, v18; FUNCTION: H5Gopen; ; v10, v18; FUNCTION: H5Lget_info; H5L_info; v18, ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt:1599,interface,interface,1599,externals/cgns/hdf5/H5vers.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt,1,['interface'],['interface']
Integrability,"ilure in the cache logging framework; MINOR, CACHE, H5E_CANTCORK, Unable to cork an object; MINOR, CACHE, H5E_CANTUNCORK, Unable to uncork an object. # B-tree related errors; MINOR, BTREE, H5E_NOTFOUND, Object not found; MINOR, BTREE, H5E_EXISTS, Object already exists; MINOR, BTREE, H5E_CANTENCODE, Unable to encode value; MINOR, BTREE, H5E_CANTDECODE, Unable to decode value; MINOR, BTREE, H5E_CANTSPLIT, Unable to split node; MINOR, BTREE, H5E_CANTREDISTRIBUTE, Unable to redistribute records; MINOR, BTREE, H5E_CANTSWAP, Unable to swap records; MINOR, BTREE, H5E_CANTINSERT, Unable to insert object; MINOR, BTREE, H5E_CANTLIST, Unable to list node; MINOR, BTREE, H5E_CANTMODIFY, Unable to modify record; MINOR, BTREE, H5E_CANTREMOVE, Unable to remove object. # Object header related errors; MINOR, OHDR, H5E_LINKCOUNT, Bad object header link count; MINOR, OHDR, H5E_VERSION, Wrong version number; MINOR, OHDR, H5E_ALIGNMENT, Alignment error; MINOR, OHDR, H5E_BADMESG, Unrecognized message; MINOR, OHDR, H5E_CANTDELETE, Can't delete message; MINOR, OHDR, H5E_BADITER, Iteration failed; MINOR, OHDR, H5E_CANTPACK, Can't pack messages; MINOR, OHDR, H5E_CANTRESET, Can't reset object; MINOR, OHDR, H5E_CANTRENAME, Unable to rename object. # Group related errors; MINOR, GROUP, H5E_CANTOPENOBJ, Can't open object; MINOR, GROUP, H5E_CANTCLOSEOBJ, Can't close object; MINOR, GROUP, H5E_COMPLEN, Name component is too long; MINOR, GROUP, H5E_PATH, Problem with path to object. # Datatype conversion errors; MINOR, TYPECONV, H5E_CANTCONVERT, Can't convert datatypes; MINOR, TYPECONV, H5E_BADSIZE, Bad size for object. # Dataspace errors; MINOR, DSPACE, H5E_CANTCLIP, Can't clip hyperslab region; MINOR, DSPACE, H5E_CANTCOUNT, Can't count elements; MINOR, DSPACE, H5E_CANTSELECT, Can't select hyperslab; MINOR, DSPACE, H5E_CANTNEXT, Can't move to next iterator location; MINOR, DSPACE, H5E_BADSELECT, Invalid selection; MINOR, DSPACE, H5E_CANTCOMPARE, Can't compare objects; MINOR, DSPACE, H5E_INCONSISTENT",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:9118,message,message,9118,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,3,['message'],"['message', 'messages']"
Integrability,"in https://www.hdfgroup.org/licenses.; # If you do not have access to either file, you may request a copy from; # help@hdfgroup.org.; #. # This file is used to generate the various headers that are needed for; # versioning the public symbols for the library.; #; # The bin/make_vers script reads in this file and creates the appropriate files; # in the src/ directory when the generated headers are out of date with respect; # to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>: <base routine name>; <list of versioned parameter types for function>; <version introduced>, <list of revised versions>; #; # Where <type> is either 'FUNCTION' or 'TYPEDEF'; #; # For example, the following sample input shows two functions with different; # API versions for each. The example below shows H5Gfoo being added to the; # library in the v1.0 branch and revised in the v1.4 and v1.8 branches (so; # there should be three versioned names for the routine: H5Gfoo1, H5Gfoo2 and; # H5Gfoo3). H5Gbar is shown as being added to the library in the v1.2 branch; # (so the ""base"" version of the API name wouldn't appear if the library; # was configured with the default API interface corresponding to v1.0) and; # revised in the v1.6 branch (so there should be two versioned names for the; # routine: H5Gbar1 and H5Gbar2).; #; # FUNCTION: H5Gfoo; ; v10, v14, v18; # FUNCTION: H5Gbar; ; v12, v16; #; # Programmer: Quincey Koziol; # Creation Date: 2007/07/10. # API function names; # (although not required, it's easier to compare this file with the headers; # generated if the list below is in alphanumeric sort order - QAK); FUNCTION: H5Acreate; ; v10, v18; FUNCTION: H5Aiterate; H5A_operator; v10, v18; FUNCTION: H5Dcreate; ; v10, v18; FUNCTION: H5Dopen; ; v10, v18; FUNCTION: H5Eclear; ; v10, v18; FUNCTION: H5Eget_auto; ; v10, v18; FUNCTION: H5Eprint; ; v10, v18; FUNCTION: H5Epush; ; v14, v18; FUNCTION: H5Eset_auto; ; v10, v18; FUNCTION: ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt:1379,rout,routine,1379,externals/cgns/hdf5/H5vers.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt,1,['rout'],['routine']
Integrability,"just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in detail); MAJOR, H5E_LIB, General library infrastructure; MAJOR, H5E_FILE, File accessibility; MAJOR, H5E_IO, Low-level I/O; MAJOR, H5E_FUNC, Function entry/exit; MAJOR, H5E_ATOM, Object atom; MAJOR, H5E_CACHE, Object cache; MAJOR, H5E_LINK, Links; MAJOR, H5E_BTREE, B-Tree node; MAJOR, H5E_SYM, Symbol table; MAJOR, H5E_HEAP, Heap; MAJOR, H5E_OHDR, Object header; MAJOR, H5E_DATATYPE, Datatype; MAJOR, H5E_DATASPACE, Dataspace; MAJOR, H5E_DATASET, Dataset; MAJOR, H5E_STORAGE, Data storage; MAJOR, H5E_PLIST, Property lists; MAJOR, H5E_ATTR, Attribute; MAJOR, H5E_PLINE, Data filters; MAJOR, H5E_EFL, External file list; MAJOR, H5E_REFERENCE, References; MAJOR, H5E_VFL, Virtual File Layer; MAJOR, H5E_VOL, Virtual Object Layer; MAJOR, H5E_TST, Ternary Search Trees; MAJOR, H5E_RS, Reference Counted Strings; MAJOR, H5E_ERROR, Error API; MAJOR, H5E_SLIST, Skip Lists; MAJOR, H5E_FSPACE, Free Space Manager; MAJOR, H5E_SOHM, Shared Object Header Messages; MAJOR, H5E_EARRAY, Extensible Array; MAJOR, H5E_FARRAY, Fixed Array; MAJOR, H5E_PLUGIN, Plugin for dynamically loaded library; MAJOR, H5E_PAGEBUF, Page Buffering; MAJOR, H5E_CONTEXT, API Context; MAJOR, H5E_MAP, Map; MAJOR, H5E_NONE_MAJOR, No error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CAC",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:1882,rout,routine,1882,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['rout'],['routine']
Integrability,"n:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ dire",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:2836,depend,dependencies,2836,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['depend'],['dependencies']
Integrability,"nconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move object; MINOR, LINK, H5E_CANTSORT, Can't sort objects. # Parallel MPI errors; MINOR, MPI, H5E_MPI, Some MPI function failed; MINOR, MPI, H5E_MPIERRSTR, MPI Error String; MINOR, MPI, H5E_CANTRECV, Can't receive data; MINOR, MPI, H5E_CANTGATHER, Can't gather data; MINOR, MPI, H5E_NO_INDEPENDENT, Can't perform independent IO. # Heap errors; MINOR, HEAP, H5E_CANTRESTORE, Can't restore condition; MINOR, HEAP, H5E_CANTCOMPUTE, Can't compute value; MINOR, HEAP, H5E_CANTEXTEND, Can't extend heap's space; MINOR, HEAP, H5E_CANTATTACH, Can't attach object; MINOR, HEAP, H5E_CANTUPDATE, Can't update object; MINOR, HEAP, H5E_CANTOPERATE, Can't operate on object. # Free space manager errors; MINOR, FSPACE, H5E_CANTMERGE, Can't merge objects; MINOR, FSPACE, H5E_CANTREVIVE, Can't revive object; MINOR, FSPACE, H5E_CANTSHRINK, Can't shrink container. # I/O pipeline errors; MINOR, PIPELINE, H5E_NOFILTER, Requested filter is not available; MINOR, PIPELINE, H5E_CALLBACK, Callback failed; MINOR, PIPELINE, H5E_CANAPPLY, Error from filter 'can apply' callback; MINOR, PIPELINE, H5E_SETLOCAL, Error from filter 'set local' callback; MINOR, PIPELINE, H5E_NOENCODER, Filter present but encoding disabled; MINOR, PIPELINE, H5E_CANTFILTER, Filter operation failed. # System level errors; MINOR, SYSTEM, H5E_SYSERRSTR, System error message. # Plugin errors; MINOR, PLUGIN, H5E_OPENERROR, Can't open directory or file. # No error, for backward compatibility */; MINOR, NONE, H5E_NONE_MINOR, No error; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:11993,message,message,11993,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['message'],['message']
Integrability,"option('with-mpi', type : 'feature', value : 'auto', description: 'enable MPI support'); option('with-omp', type : 'boolean', value : false, description: 'enable OpenMP support'); option('enable-tecio', type : 'boolean', value : true, description: 'enable TECIO support'); option('enable-cgns', type : 'boolean', value : true, description: 'enable CGNS support'); option('enable-autodiff', type : 'boolean', value : false, description: 'enable AD (reverse) support'); option('enable-directdiff', type : 'boolean', value : false, description: 'enable AD (forward) support'); option('enable-pywrapper', type : 'boolean', value : false, description: 'enable Python wrapper support'); option('enable-normal', type : 'boolean', value : true, description: 'enable normal build'); option('enable-mkl', type : 'boolean', value : false, description: 'enable Intel-MKL support'); option('mkl_root', type : 'string', value : '/opt/intel/mkl', description: 'root of Intel-MKL installation (only for non-intel compilers)'); option('enable-openblas', type : 'boolean', value : false, description: 'enable BLAS and LAPACK support via OpenBLAS'); option('blas-name', type : 'string', value : 'openblas', description: 'name of the BLAS/LAPACK dependency'); option('enable-pastix', type : 'boolean', value : false, description: 'enable PaStiX support'); option('pastix_root', type : 'string', value : 'externals/pastix/', description: 'PaStiX base directory'); option('scotch_root', type : 'string', value : 'externals/scotch/', description: 'Scotch base directory'); option('custom-mpi', type : 'boolean', value : false, description: 'enable MPI assuming the compiler and/or env vars give the correct include dirs and linker args.'); option('enable-tests', type : 'boolean', value : false, description: 'compile Unit Tests'); option('enable-mixedprec', type : 'boolean', value : false, description: 'use single precision floating point arithmetic for sparse algebra'); option('extra-deps', type : 'string', value : '',",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt:662,wrap,wrapper,662,meson_options.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt,2,"['depend', 'wrap']","['dependency', 'wrapper']"
Integrability,"s License. Also, you must do one; of these things:. a) Accompany the work with the complete corresponding; machine-readable source code for the Library including whatever; changes were used in the work (which must be distributed under; Sections 1 and 2 above); and, if the work is an executable linked; with the Library, with the complete machine-readable ""work that; uses the Library"", as object code and/or source code, so that the; user can modify the Library and then relink to produce a modified; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in ei",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:15944,interface,interface-compatible,15944,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['interface'],['interface-compatible']
Integrability,"s; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, H5E_CANTCREATE, Unable to create file; MINOR, FILEACC, H5E_CANTOPENFILE, Unable to open file; MINOR, FILEACC, H5E_CANTCLOSEFILE, Unable to close file; MINOR, FILEACC, H5E_NOTHDF5, Not an HDF5 file; MINOR, FILEACC, H5E_BADFILE, Bad file ID accessed; MINOR, FILEACC, H5E_TRUNCATED, File has been truncated; MINOR, FILEACC, H5E_MOUNT, File mount error; MINOR, FILEACC, H5E_CANTDELETEFILE, Unable to delete file; MINOR, FILEACC, H5E_CANTLOCKFILE, Unable to lock file; MINOR, FILEACC, H5E_CANTUNLOCKFILE, Unable to unlock file. # Generic low-level file I/O errors; MINOR, FILE, H5E_SEEKERROR, Seek failed; MINOR, FILE, H5E_READERROR, Read failed; MINOR, FILE, H5E_WRITEERROR, Write failed; MINOR, FILE, H5E_CLOSEERROR, Close failed; MINOR, FILE, H5E_OVERFLOW, Address overflowed; MINOR, FILE, H5E_FCNTL, File control (fcntl) failed. # Function entry/exit interface errors; MINOR, FUNC, H5E_CANTINIT, Unable to initialize object; MINOR, FUNC, H5E_ALREADYINIT, Object already initialized; MINOR, FUNC, H5E_CANTRELEASE, Unable to release object. # Object atom related errors; MINOR, ATOM, H5E_BADATOM, Unable to find atom information (already closed?); MINOR, ATOM, H5E_BADGROUP, Unable to find ID group information; MINOR, ATOM, H5E_CANTREGISTER, Unable to register new atom; MINOR, ATOM, H5E_CANTINC, Unable to increment reference count; MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MINOR, CACHE, H5E_CANTTAG, Unable to tag metadata in the cache; MINOR, CACHE, H5E_CANTLOAD, Unable to load metadata into cache; MINOR, CACHE, H5E_PROTECT, Protected metadata error; MINOR, CACHE, H5E_NOTCACHED, Metadata not currently cached; MINOR, CACHE, H5E_",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:5910,interface,interface,5910,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['interface'],['interface']
Integrability,"te files; # in the src/ directory when the generated headers are out of date with respect; # to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>: <base routine name>; <list of versioned parameter types for function>; <version introduced>, <list of revised versions>; #; # Where <type> is either 'FUNCTION' or 'TYPEDEF'; #; # For example, the following sample input shows two functions with different; # API versions for each. The example below shows H5Gfoo being added to the; # library in the v1.0 branch and revised in the v1.4 and v1.8 branches (so; # there should be three versioned names for the routine: H5Gfoo1, H5Gfoo2 and; # H5Gfoo3). H5Gbar is shown as being added to the library in the v1.2 branch; # (so the ""base"" version of the API name wouldn't appear if the library; # was configured with the default API interface corresponding to v1.0) and; # revised in the v1.6 branch (so there should be two versioned names for the; # routine: H5Gbar1 and H5Gbar2).; #; # FUNCTION: H5Gfoo; ; v10, v14, v18; # FUNCTION: H5Gbar; ; v12, v16; #; # Programmer: Quincey Koziol; # Creation Date: 2007/07/10. # API function names; # (although not required, it's easier to compare this file with the headers; # generated if the list below is in alphanumeric sort order - QAK); FUNCTION: H5Acreate; ; v10, v18; FUNCTION: H5Aiterate; H5A_operator; v10, v18; FUNCTION: H5Dcreate; ; v10, v18; FUNCTION: H5Dopen; ; v10, v18; FUNCTION: H5Eclear; ; v10, v18; FUNCTION: H5Eget_auto; ; v10, v18; FUNCTION: H5Eprint; ; v10, v18; FUNCTION: H5Epush; ; v14, v18; FUNCTION: H5Eset_auto; ; v10, v18; FUNCTION: H5Ewalk; H5E_walk, H5E_error; v10, v18; FUNCTION: H5Fget_info; H5F_info; v18, v110; FUNCTION: H5Gcreate; ; v10, v18; FUNCTION: H5Gopen; ; v10, v18; FUNCTION: H5Lget_info; H5L_info; v18, v112; FUNCTION: H5Lget_info_by_idx; H5L_info; v18, v112; FUNCTION: H5Literate; H5L_iterate; v18, v112; FUNCTION: H5Literate_by_name; H5L_iterate; v1",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt:1717,rout,routine,1717,externals/cgns/hdf5/H5vers.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt,1,['rout'],['routine']
Integrability,"tiX base directory'); option('scotch_root', type : 'string', value : 'externals/scotch/', description: 'Scotch base directory'); option('custom-mpi', type : 'boolean', value : false, description: 'enable MPI assuming the compiler and/or env vars give the correct include dirs and linker args.'); option('enable-tests', type : 'boolean', value : false, description: 'compile Unit Tests'); option('enable-mixedprec', type : 'boolean', value : false, description: 'use single precision floating point arithmetic for sparse algebra'); option('extra-deps', type : 'string', value : '', description: 'comma-separated list of extra (custom) dependencies to add for compilation'); option('enable-mpp', type : 'boolean', value : false, description: 'enable Mutation++ support'); option('install-mpp', type : 'boolean', value : false, description: 'install Mutation++ in the directory defined with --prefix'); option('enable-coolprop', type : 'boolean', value : false, description: 'enable CoolProp support'); option('enable-mlpcpp', type : 'boolean', value : false, description: 'enable profiling through gprof'); option('enable-gprof', type : 'boolean', value : false, description: 'enable MLPCpp support'); option('opdi-backend', type : 'combo', choices : ['auto', 'macro', 'ompt'], value : 'auto', description: 'OpDiLib backend choice'); option('codi-tape', type : 'combo', choices : ['JacobianLinear', 'JacobianReuse', 'JacobianMultiUse', 'PrimalLinear', 'PrimalReuse', 'PrimalMultiUse'], value : 'JacobianLinear', description: 'CoDiPack tape choice'); option('opdi-shared-read-opt', type : 'boolean', value : true, description : 'OpDiLib shared reading optimization'); option('librom_root', type : 'string', value : '', description: 'libROM base directory'); option('enable-librom', type : 'boolean', value : false, description: 'enable LLNL libROM support'); option('static-cgns-deps', type : 'boolean', value : false, description: 'prefer static or dynamic (default) libraries for CGNS dependencies'); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt:2055,depend,dependencies,2055,meson_options.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt,2,['depend'],['dependencies']
Integrability,"yright by The HDF Group.; # Copyright by the Board of Trustees of the University of Illinois.; # All rights reserved.; #; # This file is part of HDF5. The full HDF5 copyright notice, including; # terms governing use, modification, and redistribution, is contained in; # the COPYING file, which can be found at the root of the source code; # distribution tree, or in https://www.hdfgroup.org/licenses.; # If you do not have access to either file, you may request a copy from; # help@hdfgroup.org.; #. # This file is used to generate the various headers that are needed for; # versioning the public symbols for the library.; #; # The bin/make_vers script reads in this file and creates the appropriate files; # in the src/ directory when the generated headers are out of date with respect; # to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>: <base routine name>; <list of versioned parameter types for function>; <version introduced>, <list of revised versions>; #; # Where <type> is either 'FUNCTION' or 'TYPEDEF'; #; # For example, the following sample input shows two functions with different; # API versions for each. The example below shows H5Gfoo being added to the; # library in the v1.0 branch and revised in the v1.4 and v1.8 branches (so; # there should be three versioned names for the routine: H5Gfoo1, H5Gfoo2 and; # H5Gfoo3). H5Gbar is shown as being added to the library in the v1.2 branch; # (so the ""base"" version of the API name wouldn't appear if the library; # was configured with the default API interface corresponding to v1.0) and; # revised in the v1.6 branch (so there should be two versioned names for the; # routine: H5Gbar1 and H5Gbar2).; #; # FUNCTION: H5Gfoo; ; v10, v14, v18; # FUNCTION: H5Gbar; ; v12, v16; #; # Programmer: Quincey Koziol; # Creation Date: 2007/07/10. # API function names; # (although not required, it's easier to compare this file with the headers; # generated if the list ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt:930,rout,routine,930,externals/cgns/hdf5/H5vers.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt,1,['rout'],['routine']
Modifiability,"# Gradient validation from start to finish. This guide steps you through the steps necessary to perform a validation of the discrete adjoint sensitivities using finite differences. All necessary config files are present and this guide steps through the different tasks to do. If you are lucky enough too have some cores to spare, 14 is a suitable substitution for the `<#cores>` placeholder. ## FFD-box creation; This step is optional as the provided mesh already contains FFD box. This is for completeness if a new mesh e.g. with different resolution is created.; In `configMaster.cfg` the mentioned options have to be uncommented and others commented if they appear twice in the config.; Note that (only!) for the FFD-box creation a `MARKER_HEATFLUX= ( fluid_symmetry ) is artificially is set to avoid an error. This has to be done to make the config-Postprocessing aware that this marker exists as it is used in `DV_MARKER`.; Call `SU2_DEF configMaster.cfg` which creates the new mesh with the name given in 'MESH_OUT_FILENAME'. ## Primal run; Run `mpirun -n <#cores> SU2_CFD configMaster.cfg`. ## Discrete-Adjoint run; Rename\copy\symlink `restart_*.dat` -> `solution_*.dat`; Run `mpirun -n <#cores> SU2_CFD_AD DA_configMaster.cfg` and afterwards `SU2_DOT_AD DA_configMaster.cfg`. ## Finite-Differences run; The `OUTER_ITER` is set low in order to be suitable for the regression test. Set that back the number given in the config.; For the full gradient validation uncomment all design variables of the `DEFINITION_DV` config option.; Run `finite_differences.py -f FD_configMaster.cfg -z 2 -n <#cores>`. ## Comparing results; Just plot the `of_grad.csv` and `FINDIFF/of_grad_findiff.csv` with your tool of choice. Paraview's `Line Chart View` is one option.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md:195,config,config,195,TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,9,"['config', 'variab']","['config', 'config-Postprocessing', 'configMaster', 'variables']"
Modifiability,"# Unsteady CHT Adjoint Testcase. ## Short Description; This is a 2D cylinder in freestream testcase. The flow is incompressible and laminar at Re=200.; A uniform vortex shedding forms behind the cylinder and each shedding cycle is resolved by 54 timesteps.; The pin is heated on the inner surface. ## Mesh; The mesh is for testing purposes only and contains ~4000 elements for the flow and ~1000 for the heat domain.; A gmsh .geo file is added such that the mesh can be recreated and modified. ## Recreating full primal; The primal for a full cycle can be restarted with the `solution_*_00000.dat` and `solution_*_00001.dat`.; The primal solution is necessary for the Discrete Adjoint sweep and for the gradient of the full; shedding cycle the full primal is necessary. The necessary changes to `chtMaster.cfg` are documented; in the config itself. ## Discrete Adjoint; In the regression testcase of SU2 only 2 reverse steps are taken.; For that, the solution files 52-55 for the adjoint are added.; The objective Function is the average temperature on the inner pin surface, averaged over the full time. ## Gradient validation via Finite Differences using FADO; In order to validate the Discrete Adjoint gradient a Finite Differences python script `gradient_validation.py`; using [FADO](www.github.com/su2code/FADO) is added.; Note that the script can be used with the files as they are. Necessary adaptions are made by FADO itself.; The script deforms the mesh and runs the primal for each of the 18 Design Variables.; Afterwards the baseline mesh is evaluated and then the Discrete Adjoint.; Use `postprocess.py` to print the absolute difference and relative difference in percent to screen.; The relative differences in percent are <0.15% for all Design Variables (2021-05-14).; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md:834,config,config,834,TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md,2,"['adapt', 'config']","['adaptions', 'config']"
Modifiability,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % SU2 configuration file %; % PaStiX support build instructions. %; % Institution: Imperial College London %; % File Version 8.1.0 ""Harrier"" %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; %; % 1 - Download; % Get PaStiX 5.2.3 from https://gforge.inria.fr/frs/?group_id=186; % Get Scotch 6.0.6 from https://gforge.inria.fr/projects/scotch; % Note: These two versions were tested on a number of platforms, some; % issues were encountered with more recent version of Scotch, and PaStiX; % 6.0.X is not compatible with SU2 as it does not support MPI yet.; %; % 2 - Build Scotch; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""scotch""; % cd scotch/src && cp Make.inc/Makefile.inc.x86-64_pc_linux2.XXXX Makefile.inc; % (choose the XXXX that matches your compiler); % Edit Makefile.inc and delete the cflag -DSCOTCH_PTHREAD (see why in 3-ii); % ""make ptscotch""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % AND your system supports MPI_THREAD_MULTIPLE, you do not need to; % delete the -DSCOTCH_PTHREAD flag (but doing so does no harm).; %; % 3 - Build PaStiX; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that t",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:82,config,configuration,82,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['config'],['configuration']
Modifiability,"%%%%%%%%%; %; % 1 - Download; % Get PaStiX 5.2.3 from https://gforge.inria.fr/frs/?group_id=186; % Get Scotch 6.0.6 from https://gforge.inria.fr/projects/scotch; % Note: These two versions were tested on a number of platforms, some; % issues were encountered with more recent version of Scotch, and PaStiX; % 6.0.X is not compatible with SU2 as it does not support MPI yet.; %; % 2 - Build Scotch; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""scotch""; % cd scotch/src && cp Make.inc/Makefile.inc.x86-64_pc_linux2.XXXX Makefile.inc; % (choose the XXXX that matches your compiler); % Edit Makefile.inc and delete the cflag -DSCOTCH_PTHREAD (see why in 3-ii); % ""make ptscotch""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % AND your system supports MPI_THREAD_MULTIPLE, you do not need to; % delete the -DSCOTCH_PTHREAD flag (but doing so does no harm).; %; % 3 - Build PaStiX; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that this may not work well with SU2_CFD_AD.; % If you do use MPI+Threads, it is important for good performance that your; % system supports MPI_THREAD_MULTIPLE (SU2_CFD --thread_multiple ...); % Furthermore, if MPI_THREAD_MULTIPLE is NOT supported, you need to; % uncomment the line with ""-",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:1346,config,config,1346,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['config'],['config']
Modifiability,"---; name: Bug report; about: Create a bug report to help us improve SU2; title: ''; labels: bug; assignees: ''. ---. *If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/.github/ISSUE_TEMPLATE/bug_report.md:439,config,config,439,.github/ISSUE_TEMPLATE/bug_report.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/.github/ISSUE_TEMPLATE/bug_report.md,1,['config'],['config']
Modifiability,".. SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_NEW; exposes all methods of SU2.eval.design. level5 - optimization; SU2.opt.scipy_slsqp(project); sets up and runs a scipy slsqp optimization. FILE IO. level0 - in/out/mod. class SU2.io.config(dict); 	config.__init__(name); 	config.read(); 	config.write(name=self.name); 	config.dump(name='temp.cfg'); 	config.unpack_dvs(dv_new.dv_old); 	config.__diff__(konfig); 	config.__eq__(konfig). 	config.read_history(); 	config.read_aerodynamics(); 	config.rename_restart(). SU2.io.read_history( name ); SU2.io.read_aerodynamics( hist_name, sp",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3962,config,config,3962,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,3,['config'],['config']
Modifiability,"2.run.DOT(config); SU2.run.SMC(config); 	interpret partitions; 	dump config; 	prepare os command; 	run os command; 	handle suite errors. level1 - suite + intent; upstream pointer communication of config; config (super copy) vs konfig (local copy); update super copy to make useful for next analysis steps; make temporary super deepcopy if not desired; returns info dictionary for higher level functions; all tools assume config['NUMBER_PART'] already set. SU2.run.deform(config,dv_new=[]); 	optional dv_new sets:; 		'DV_VALUE_OLD' = [0.0]*n_dv; 		'DV_VALUE_NEW' = dv_new; 		'DV_MARKER','DV_KIND','DV_PARAM' based on 'DEFINITION_DV'; 	checks decomp; 	adds 'deform' suffix to mesh_out; 	run DEF; 	pointer updated config; 		'MESH_FILENAME' = 'MESH_FILENAME'+'_deform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:1203,config,config,1203,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,2,['config'],['config']
Modifiability,"828-846, 2016. <http://arc.aiaa.org/doi/10.2514/1.J053813>. Please note that this project is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms. Continuous Integration:<br/>; [![Regression Testing](https://github.com/su2code/SU2/workflows/Regression%20Testing/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions); [![Release](https://github.com/su2code/SU2/workflows/Release%20Management/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions). Code Quality:<br/>; [![CodeFactor](https://www.codefactor.io/repository/github/su2code/su2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:1703,extend,extended,1703,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['extend'],['extended']
Modifiability,"; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint s",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:2417,config,config,2417,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,2,['config'],['config']
Modifiability,"Building GKlib requires CMake 2.8. Once you've installed CMake run. $ make. This will build the GKlib library in build/<arch>/. Options can be tweaked by; running make config. For example,. $ make config openmp=ON; $ make. will build GKlib will OpenMP support if it is available. GKlib can be installed with. $ make install. and uninstalled with. $ make uninstall. You can choose the installation prefix with make config:. $ make config prefix=~/local. will cause GKlib to be install in the ~/local tree.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/BUILD.txt:168,config,config,168,externals/metis/GKlib/BUILD.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/BUILD.txt,4,['config'],['config']
Modifiability,"D Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:2967,config,configuration,2967,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['config'],['configuration']
Modifiability,"Follow the normal meson build instructions, add -Denable-pastix=true,; % this requires you to compile with MKL (-Denable-mkl=true) or OpenBLAS; % (-Denable-openblas=true) support in your call to meson.py.; % If you did not build PaStiX and Scotch in the externals folders you must; % use -Dpastix_root=""some path"" and -Dscotch_root=""another path"" to; % indicate where they are RELATIVE to the SU2 directory.; % You need sequential versions of BLAS. But when using MPI+Threads beware that; % OpenBLAS needs to have parallel support otherwise the solver will crash, if; % you get poor performance see 5.4 below.; %; % 5 - Common problems and known issues; % - OpenMPI 4 does not work with PaStiX 5, downgrade to 3.1.4.; % - Very early versions of OpenMPI 3 may have problems with MPI types.; % - OpenBLAS build fails when linking executables. Old versions (e.g.; % 0.2.18) did not provide LAPACK support, rebuild or upgrade.; % - Very bad performance with OpenBLAS on some systems (observed on Ubuntu; % 16.04) try ""export OMP_NUM_THREADS=1"" before running SU2, check that; % you only see N SU2 processes running at 100% (mpirun -n N SU2_XXX).; % - Cannot find BLAS dependency:; % i - On some OS the package has a different name (e.g. Ubuntu 16.04; % blas-openblas instead of openblas), use -Dblas-name=""right name"" in; % call to meson.py; % ii - The name is right but meson cannot find it. Set env variable; % PKG_CONFIG_PATH=$PKG_CONFIG_PATH:""directory with someblas.pc file""; % - MKL is not in its standard directory (/opt/intel/mkl), use option; % -Dmkl_root=""non standard directory"" in call to meson.py (headers are; % expected in ""include"" and libraries in ""lib/intel64"").; %; % 6 - Tested platforms; % - Ubuntu 18.04, gcc 7.4, ompi 3.1.4, mkl 2017, openblas 0.2.20 and 0.3.2.dev; % - Ubuntu 16.04, gcc 5.4, ompi 3.1.4, mkl 2017 and 2019; % - CentOS 7.6.1810, gcc 5.4, ompi 3.1.4, mkl 2017; % - CentOS 7.6.1810, gcc 5.4, impi 2018, mkl 2019; % - CentOS 7.6.1810, gcc 8.2, impi 2018, mkl 2019; %; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:3806,variab,variable,3806,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['variab'],['variable']
Modifiability,"IENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_N",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3789,config,config,3789,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['config'],['config']
Modifiability,"S; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project ma",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3509,config,config,3509,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['config'],['config']
Modifiability,"all downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that this may not work well with SU2_CFD_AD.; % If you do use MPI+Threads, it is important for good performance that your; % system supports MPI_THREAD_MULTIPLE (SU2_CFD --thread_multiple ...); % Furthermore, if MPI_THREAD_MULTIPLE is NOT supported, you need to; % uncomment the line with ""-DPASTIX_FUNNELED"" in config.in.; % Finally, if you just use threads (no MPI) this is not important.; %; % 4 - Build SU2; % Follow the normal meson build instructions, add -Denable-pastix=true,; % this requires you to compile with MKL (-Denable-mkl=true) or OpenBLAS; % (-Denable-openblas=true) support in your call to meson.py.; % If you did not build PaStiX and Scotch in the externals folders you must; % use -Dpastix_root=""some path"" and -Dscotch_root=""another path"" to; % indicate where they are RELATIVE to the SU2 directory.; % You need sequential versions of BLAS. But when using MPI+Threads beware that; % OpenBLAS needs to have parallel support otherwise the solver will crash, if; % you get poor performance see 5.4 below.; %; % 5 - Common problems and known issues; % - OpenMPI 4 does not work with PaStiX 5, downgrade to 3.1.4.; % - Very early versions of OpenMPI 3 may have problems with MPI types.; % - OpenBLAS build fails when linking executables. ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:2307,config,config,2307,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['config'],['config']
Modifiability,"at,; in the event an application does not supply such function or; table, the facility still operates, and performs whatever part of; its purpose remains meaningful. (For example, a function in a library to compute square roots has; a purpose that is entirely well-defined independent of the; application. Therefore, Subsection 2d requires that any; application-supplied function or table used by this function must; be optional: if the application does not supply it, the square; root function must still compute square roots.). These requirements apply to the modified work as a whole. If; identifiable sections of that work are not derived from the Library,; and can be reasonably considered independent and separate works in; themselves, then this License, and its terms, do not apply to those; sections when you distribute them as separate works. But when you; distribute the same sections as part of a whole which is a work based; on the Library, the distribution of the whole must be on the terms of; this License, whose permissions for other licensees extend to the; entire whole, and thus to each and every part regardless of who wrote; it. Thus, it is not the intent of this section to claim rights or contest; your rights to work written entirely by you; rather, the intent is to; exercise the right to control the distribution of derivative or; collective works based on the Library. In addition, mere aggregation of another work not based on the Library; with the Library (or with a work based on the Library) on a volume of; a storage or distribution medium does not bring the other work under; the scope of this License. 3. You may opt to apply the terms of the ordinary GNU General Public; License instead of this License to a given copy of the Library. To do; this, you must alter all the notices that refer to this License, so; that they refer to the ordinary GNU General Public License, version 2,; instead of to this License. (If a newer version than version 2 of the; ordinary GN",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:10257,extend,extend,10257,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['extend'],['extend']
Modifiability,"d on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with a focus on speed. Short summary of the minimal requirements:. - C/C++ compiler; - Python 3. **Note:** all other necessary build tools and dependencies are shipped with the source code or are downloaded automatically. If you have these tools installed, you can create a configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the source code distribution, i.e., `/path/to/SU2vX.X.X/`. Thanks for building, and happy optimizing!. - The SU2 Development Team. # SU2 Developers. We follow the popular ""GitFlow"" branching model for scalable development. In the SU2 repository, the master branch represents the latest stable major or minor release (7.0, 6.2.0, etc.), it should only be modified during version releases. Work that is staged for release is put into the develop",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:3418,variab,variables,3418,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['variab'],['variables']
Modifiability,"dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_NEW; exposes all methods of SU2.eval.design. level5 - optimization; SU2.opt.scipy_slsqp(project); sets up and runs a scipy slsqp optimization. FILE IO. level0 - in/out/mod. class SU2.io.config(di",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3881,config,config,3881,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,2,['config'],['config']
Modifiability,"eform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:1977,config,config,1977,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"ers that are needed for; # versioning the public symbols for the library.; #; # The bin/make_vers script reads in this file and creates the appropriate files; # in the src/ directory when the generated headers are out of date with respect; # to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>: <base routine name>; <list of versioned parameter types for function>; <version introduced>, <list of revised versions>; #; # Where <type> is either 'FUNCTION' or 'TYPEDEF'; #; # For example, the following sample input shows two functions with different; # API versions for each. The example below shows H5Gfoo being added to the; # library in the v1.0 branch and revised in the v1.4 and v1.8 branches (so; # there should be three versioned names for the routine: H5Gfoo1, H5Gfoo2 and; # H5Gfoo3). H5Gbar is shown as being added to the library in the v1.2 branch; # (so the ""base"" version of the API name wouldn't appear if the library; # was configured with the default API interface corresponding to v1.0) and; # revised in the v1.6 branch (so there should be two versioned names for the; # routine: H5Gbar1 and H5Gbar2).; #; # FUNCTION: H5Gfoo; ; v10, v14, v18; # FUNCTION: H5Gbar; ; v12, v16; #; # Programmer: Quincey Koziol; # Creation Date: 2007/07/10. # API function names; # (although not required, it's easier to compare this file with the headers; # generated if the list below is in alphanumeric sort order - QAK); FUNCTION: H5Acreate; ; v10, v18; FUNCTION: H5Aiterate; H5A_operator; v10, v18; FUNCTION: H5Dcreate; ; v10, v18; FUNCTION: H5Dopen; ; v10, v18; FUNCTION: H5Eclear; ; v10, v18; FUNCTION: H5Eget_auto; ; v10, v18; FUNCTION: H5Eprint; ; v10, v18; FUNCTION: H5Epush; ; v14, v18; FUNCTION: H5Eset_auto; ; v10, v18; FUNCTION: H5Ewalk; H5E_walk, H5E_error; v10, v18; FUNCTION: H5Fget_info; H5F_info; v18, v110; FUNCTION: H5Gcreate; ; v10, v18; FUNCTION: H5Gopen; ; v10, v18; FUNCTION: H5Lget_info; H5L_info; v18, ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt:1567,config,configured,1567,externals/cgns/hdf5/H5vers.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt,1,['config'],['configured']
Modifiability,"goals -; cascading levels of functionality; lower levels stand on their own, and provide usefulness to; higher levels when asked. updating config, state at or close to point of operation. delay class structure until mid/high levels. EXECUTION. level0 - raw suite; no upstream pointer communication. partitions set once in config initial read. SU2.run.CFD(config); SU2.run.DEF(config); SU2.run.DOT(config); SU2.run.SMC(config); 	interpret partitions; 	dump config; 	prepare os command; 	run os command; 	handle suite errors. level1 - suite + intent; upstream pointer communication of config; config (super copy) vs konfig (local copy); update super copy to make useful for next analysis steps; make temporary super deepcopy if not desired; returns info dictionary for higher level functions; all tools assume config['NUMBER_PART'] already set. SU2.run.deform(config,dv_new=[]); 	optional dv_new sets:; 		'DV_VALUE_OLD' = [0.0]*n_dv; 		'DV_VALUE_NEW' = dv_new; 		'DV_MARKER','DV_KIND','DV_PARAM' based on 'DEFINITION_DV'; 	checks decomp; 	adds 'deform' suffix to mesh_out; 	run DEF; 	pointer updated config; 		'MESH_FILENAME' = 'MESH_FILENAME'+'_deform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assu",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:139,config,config,139,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,11,['config'],['config']
Modifiability,"info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; majo",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:2896,config,config,2896,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['config'],['config']
Modifiability,"is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciompisrc directory,; such as D:/teciompisrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select teciompi.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. teciompi.lib is now available in the Debug or Release subdirector",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt:2167,variab,variable,2167,externals/tecio/teciompisrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/readme.txt,1,['variab'],['variable']
Modifiability,"later is required. You can download and install this from; www.cmake.org. The below instructions assume you're using some version of; Visual Studio, but CMake also supports a number of other build environments; on Windows. If you use some other build environment, you'll probably need; to modify some compiler flags before you click Generate below; refer; to your product's documentation for these. A. Run CMake; 1. Launch the CMake GUI (Start/All Programs/CMake 2.8/CMake(cmake-gui)).; 2. Set ""Where is the source code"" to the extracted teciosrc directory,; such as D:/teciosrc; 3. Set ""Where to build the binaries"" to any desired directory. CMake; will create this directory for you if necessary.; 4. Click Configure; a. Click Yes if CMake asks to create the directory.; b. Select the desired version of Visual Studio and word length; (32- or 64-bit). For example, for 64-bit builds with Visual; Studio 2012, select ""Visual Studio 11 Win64""; c. Click Finish; 5. Ensure the ""Advanced"" toggle is set, and find variable; Boost_INCLUDE_DIR. If Boost was not found--if CMake shows; Boost_INCLUDE_DIR set to Boost_INCLUDE_DIR_NOTFOUND--then set; Boost_INCLUDE_DIR to point to the boost install folder, such as; C:/local/boost_1_59_0 (see the note on Boost below).; 6. Click Configure again.; 7. Click Generate. You should see no errors, and ""Generating done"" in; CMake's text output window. CMake has now created solution and; project files for your version of Visual Studio.; 8. Quit CMake. B. Run Visual Studio; 1. Launch the version of Visual Studio you selected in step 4b above.; 2. Select File/Open/Project/Solution...; 3. Navigate to the binary folder you selected in step 3 above.; 4. Select tecio.sln and click Open.; 5. If necessary, display the Standard toolbar (View/Toolbars/Standard).; 6. Select Debug or Release in the Standard toolbar.; 7. Select Build/Build Solution. You should see no compiler warnings or; errors.; 8. tecio.lib is now available in the Debug or Release subdirectory of; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt:2000,variab,variable,2000,externals/tecio/teciosrc/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciosrc/readme.txt,1,['variab'],['variable']
Modifiability,"nconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move object; MINOR, LINK, H5E_CANTSORT, Can't sort objects. # Parallel MPI errors; MINOR, MPI, H5E_MPI, Some MPI function failed; MINOR, MPI, H5E_MPIERRSTR, MPI Error String; MINOR, MPI, H5E_CANTRECV, Can't receive data; MINOR, MPI, H5E_CANTGATHER, Can't gather data; MINOR, MPI, H5E_NO_INDEPENDENT, Can't perform independent IO. # Heap errors; MINOR, HEAP, H5E_CANTRESTORE, Can't restore condition; MINOR, HEAP, H5E_CANTCOMPUTE, Can't compute value; MINOR, HEAP, H5E_CANTEXTEND, Can't extend heap's space; MINOR, HEAP, H5E_CANTATTACH, Can't attach object; MINOR, HEAP, H5E_CANTUPDATE, Can't update object; MINOR, HEAP, H5E_CANTOPERATE, Can't operate on object. # Free space manager errors; MINOR, FSPACE, H5E_CANTMERGE, Can't merge objects; MINOR, FSPACE, H5E_CANTREVIVE, Can't revive object; MINOR, FSPACE, H5E_CANTSHRINK, Can't shrink container. # I/O pipeline errors; MINOR, PIPELINE, H5E_NOFILTER, Requested filter is not available; MINOR, PIPELINE, H5E_CALLBACK, Callback failed; MINOR, PIPELINE, H5E_CANAPPLY, Error from filter 'can apply' callback; MINOR, PIPELINE, H5E_SETLOCAL, Error from filter 'set local' callback; MINOR, PIPELINE, H5E_NOENCODER, Filter present but encoding disabled; MINOR, PIPELINE, H5E_CANTFILTER, Filter operation failed. # System level errors; MINOR, SYSTEM, H5E_SYSERRSTR, System error message. # Plugin errors; MINOR, PLUGIN, H5E_OPENERROR, Can't open directory or file. # No error, for backward compatibility */; MINOR, NONE, H5E_NONE_MINOR, No error; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:11157,extend,extend,11157,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['extend'],['extend']
Modifiability,"own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_NEW; exposes all methods of SU2.eval.design. level5 - optimization; SU2.opt.scipy_slsqp(project); sets up and runs a scipy slsqp optimization. FILE IO. level0 - in/out/mod. class SU2.io.config(dict); 	config.__init__(name); 	config.read(); 	config.write(name=self.name); 	config.dump(name='temp.cfg'); 	config.unpack_dvs(dv_new.dv_old); 	config.__diff__(konfig); 	config.__eq__(konfig). 	config.read_history(); 	config.read_aerodynamics(); 	config.rename_restart(). SU2.io.read_history( name ); SU2.io.read_aerodynamics( hist_name, special_cases ). level1 - files translate,modify,plotting. SU2.io.add_suffix(name,suffix); SU2.io.resurrect_restart(config,state). SU2.io.plot.adjoint_gradient(config,grad_dict); SU2.io.plot.findiff_gradient(config,grad_dict); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:4529,config,config,4529,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,15,['config'],['config']
Modifiability,"r level functions; all tools assume config['NUMBER_PART'] already set. SU2.run.deform(config,dv_new=[]); 	optional dv_new sets:; 		'DV_VALUE_OLD' = [0.0]*n_dv; 		'DV_VALUE_NEW' = dv_new; 		'DV_MARKER','DV_KIND','DV_PARAM' based on 'DEFINITION_DV'; 	checks decomp; 	adds 'deform' suffix to mesh_out; 	run DEF; 	pointer updated config; 		'MESH_FILENAME' = 'MESH_FILENAME'+'_deform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:1596,config,config,1596,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,2,['config'],['config']
Modifiability,"roup_id=186; % Get Scotch 6.0.6 from https://gforge.inria.fr/projects/scotch; % Note: These two versions were tested on a number of platforms, some; % issues were encountered with more recent version of Scotch, and PaStiX; % 6.0.X is not compatible with SU2 as it does not support MPI yet.; %; % 2 - Build Scotch; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""scotch""; % cd scotch/src && cp Make.inc/Makefile.inc.x86-64_pc_linux2.XXXX Makefile.inc; % (choose the XXXX that matches your compiler); % Edit Makefile.inc and delete the cflag -DSCOTCH_PTHREAD (see why in 3-ii); % ""make ptscotch""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % AND your system supports MPI_THREAD_MULTIPLE, you do not need to; % delete the -DSCOTCH_PTHREAD flag (but doing so does no harm).; %; % 3 - Build PaStiX; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that this may not work well with SU2_CFD_AD.; % If you do use MPI+Threads, it is important for good performance that your; % system supports MPI_THREAD_MULTIPLE (SU2_CFD --thread_multiple ...); % Furthermore, if MPI_THREAD_MULTIPLE is NOT supported, you need to; % uncomment the line with ""-DPASTIX_FUNNELED"" in config.in.; % Finally, if you just use threads (no MPI) this i",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:1367,config,config,1367,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['config'],['config']
Modifiability,"s stand on their own, and provide usefulness to; higher levels when asked. updating config, state at or close to point of operation. delay class structure until mid/high levels. EXECUTION. level0 - raw suite; no upstream pointer communication. partitions set once in config initial read. SU2.run.CFD(config); SU2.run.DEF(config); SU2.run.DOT(config); SU2.run.SMC(config); 	interpret partitions; 	dump config; 	prepare os command; 	run os command; 	handle suite errors. level1 - suite + intent; upstream pointer communication of config; config (super copy) vs konfig (local copy); update super copy to make useful for next analysis steps; make temporary super deepcopy if not desired; returns info dictionary for higher level functions; all tools assume config['NUMBER_PART'] already set. SU2.run.deform(config,dv_new=[]); 	optional dv_new sets:; 		'DV_VALUE_OLD' = [0.0]*n_dv; 		'DV_VALUE_NEW' = dv_new; 		'DV_MARKER','DV_KIND','DV_PARAM' based on 'DEFINITION_DV'; 	checks decomp; 	adds 'deform' suffix to mesh_out; 	run DEF; 	pointer updated config; 		'MESH_FILENAME' = 'MESH_FILENAME'+'_deform'; 		'DV_VALUE_OLD' = 'DV_VALUE_NEW'. SU2.run.direct(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'DIRECT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_direct'; 	run CFD; 	read history, get reduced aero data; 	does not move restart to solution; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:1098,config,config,1098,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['config'],['config']
Modifiability,"s://gforge.inria.fr/projects/scotch; % Note: These two versions were tested on a number of platforms, some; % issues were encountered with more recent version of Scotch, and PaStiX; % 6.0.X is not compatible with SU2 as it does not support MPI yet.; %; % 2 - Build Scotch; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""scotch""; % cd scotch/src && cp Make.inc/Makefile.inc.x86-64_pc_linux2.XXXX Makefile.inc; % (choose the XXXX that matches your compiler); % Edit Makefile.inc and delete the cflag -DSCOTCH_PTHREAD (see why in 3-ii); % ""make ptscotch""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % AND your system supports MPI_THREAD_MULTIPLE, you do not need to; % delete the -DSCOTCH_PTHREAD flag (but doing so does no harm).; %; % 3 - Build PaStiX; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that this may not work well with SU2_CFD_AD.; % If you do use MPI+Threads, it is important for good performance that your; % system supports MPI_THREAD_MULTIPLE (SU2_CFD --thread_multiple ...); % Furthermore, if MPI_THREAD_MULTIPLE is NOT supported, you need to; % uncomment the line with ""-DPASTIX_FUNNELED"" in config.in.; % Finally, if you just use threads (no MPI) this is not important.; %; % 4 - Build SU2; % F",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:1439,config,config,1439,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['config'],['config']
Modifiability,"ve file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing nam",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3154,config,config,3154,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['config'],['config']
Modifiability,"y instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or; reject comments, commits, code, wiki edits, issues, and other contributions; that are not aligned to this Code of Conduct, or to ban temporarily or; permanently any contributor for other behaviors that they deem inappropriate,; threatening, offensive, or harmful. ## Scope. This Code of Conduct applies both within project spaces and in public spaces; when an individual is representing the project or its community. Examples of; representing a project or community include using an official project e-mail; address, posting via an official social media account, or acting as an appointed; representative at an online or offline event. Representation of a project may be; further defined and clarified by project maintainers. ## Enforcement. Instances of abusive, harassing, or otherwise unacceptable behavior may be; reported by contacting the project team at info@su2foundation.org. All; complaints will be reviewed and investigated and will result in a response that; is deemed necessary and appropriate to the circumstances. The project team is; obligated to maintain confidentiality with regard to the reporter of an incident.; Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good; faith may face temporary or permanent repercussions as determined by other; members of the project's leadership. Consequences may include:; * Downgrade or removal of repository permissions such as admin and write; permissions.; * Removal from the su2code organization on Github.; * Being blocked from the su2code repository.; * Reporting of the abuse to Github. ## Attribution. This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,; available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html. [homepage]: https://www.contributor-covenant.org; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md:3401,adapt,adapted,3401,CODE_OF_CONDUCT.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md,1,['adapt'],['adapted']
Performance," MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MINOR, CACHE, H5E_CANTTAG, Unable to tag metadata in the cache; MINOR, CACHE, H5E_CANTLOAD, Unable to load metadata into cache; MINOR, CACHE, H5E_PROTECT, Protected metadata error; MINOR, CACHE, H5E_NOTCACHED, Metadata not currently cached; MINOR, CACHE, H5E_SYSTEM, Internal error detected; MINOR, CACHE, H5E_CANTINS, Unable to insert metadata into cache; MINOR, CACHE, H5E_CANTPROTECT, Unable to protect metadata; MINOR, CACHE, H5E_CANTUNPROTECT, Unable to unprotect metadata; MINOR, CACHE, H5E_CANTPIN, Unable to pin cache entry; MINOR, CACHE, H5E_CANTUNPIN, Unable to un-pin cache entry; MINOR, CACHE, H5E_CANTMARKDIRTY, Unable to mark a pinned entry as dirty; MINOR, CACHE, H5E_CANTMARKCLEAN, Unable to mark a pinned entry as clean; MINOR, CACHE, H5E_CANTMARKUNSERIALIZED, Unable to mark an entry as unserialized; MINOR, CACHE, H5E_CANTMARKSERIALIZED, Unable to mark an entry as serialized; MINOR, CACHE, H5E_CANTDIRTY, Unable to mark metadata as dirty; MINOR, CACHE, H5E_CANTCLEAN, Unable to mark metadata as clean; MINOR, CACHE, H5E_CANTEXPUNGE, Unable to expunge a metadata cache entry; MINOR, CACHE, H5E_CANTRESIZE, Unable to resize a metadata cache entry; MINOR, CACHE, H5E_CANTDEPEND, Unable to create a flush dependency; MINOR, CACHE, H5E_CANTUNDEPEND, Unable to destroy a flush dependency; MINOR, CACHE, H5E_CANTNOTIFY, Unable to notify object about action; MINOR, CACHE, H5E_LOGGING, Failure in the cache logging framework; MINOR, CACHE, H5E_CANTCORK, Unable to cork an object; MINOR, CACHE, H5E_CANTUNCORK, Unable to uncork an object. # B-tree related errors; MINOR, BTREE, H5E_NOTFOUND, Object not found; MINOR, BTREE, H5E_EXISTS, Object alre",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:6580,cache,cache,6580,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,12,"['cache', 'load']","['cache', 'cached', 'load']"
Performance," OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that this may not work well with SU2_CFD_AD.; % If you do use MPI+Threads, it is important for good performance that your; % system supports MPI_THREAD_MULTIPLE (SU2_CFD --thread_multiple ...); % Furthermore, if MPI_THREAD_MULTIPLE is NOT supported, you need to; % uncomment the line with ""-DPASTIX_FUNNELED"" in config.in.; % Finally, if you just use threads (no MPI) this is not important.; %; % 4 - Build SU2; % Follow the normal meson build instructions, add -Denable-pastix=true,; % this requires you to compile with MKL (-Denable-mkl=true) or OpenBLAS; % (-Denable-openblas=true) support in your call to meson.py.; % If you did not build PaStiX and Scotch in the externals folders you must; % use -Dpastix_root=""some path"" and -Dscotch_root=""another path"" to; % indicate where they are RELATIVE to the SU2 directory.; % You need sequential versions of BLAS. But when using MPI+Threads beware that; % OpenBLAS needs to have parallel support otherwise the solver will crash, if; % you get poor performance see 5.4 below.; %; % 5 - Common problems and known issues; % - OpenMPI 4 does not work with PaStiX 5, downgrade to 3.1.4.; % - Very early versions of OpenMPI 3 may have problems with MPI types.; % - OpenBLAS build fails when linking executables. Old versions (e.g.; % 0.2.18) did not provide LAPACK support, rebuild or upgrade.; % - Very bad performance with OpenBLAS on some systems (observed on Ubuntu; % 16.04) try ""export OMP_NUM_THREADS=1"" before running SU2, check that; % you only see N SU2 processes running at 100% (mpirun -n N SU2_XXX).; % - Cannot find BLAS dependency:; % i - On some OS the package has a different name (e.g. Ubuntu 16.04; % blas-openblas instead of openblas), use -Dblas-name=""right name"" in; % call to meson.py; % ii - The name is right but meson cannot find it. Set env variable; % PKG_CONFIG_PATH=$PKG_CONFIG_PATH:""directory with someblas.pc file""; % - MKL is not in its standard directory (/opt/i",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:2992,perform,performance,2992,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['perform'],['performance']
Performance," configuration using the `meson.py` found in the root source code folder:. ```; ./meson.py build; ```. Use `ninja` to compile and install the code. ```; ./ninja -C build install; ```. For more information on how to install and build SU2 on Linux, MacOS or Windows, have a look at the [documentation](https://su2code.github.io/docs_v7/). ## SU2 Path setup. When installation is complete, please be sure to add the `$SU2_HOME` and `$SU2_RUN` environment variables, and update your `$PATH` with `$SU2_RUN`. For example, add these lines to your `.bashrc` file:. ```; export SU2_RUN=""your_prefix/bin""; export SU2_HOME=""/path/to/SU2vX.X.X/""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$SU2_RUN:$PYTHONPATH; ```. `$SU2_RUN` should point to the folder where all binaries and python scripts were installed. This is the prefix you set with the --prefix option to meson. Note that the bin/ directory is automatically added to your prefix path. `$SU2_HOME` should point to the root directory of the source code distribution, i.e., `/path/to/SU2vX.X.X/`. Thanks for building, and happy optimizing!. - The SU2 Development Team. # SU2 Developers. We follow the popular ""GitFlow"" branching model for scalable development. In the SU2 repository, the master branch represents the latest stable major or minor release (7.0, 6.2.0, etc.), it should only be modified during version releases. Work that is staged for release is put into the develop branch via Pull Requests on GitHub from various ""feature"" branches where folks do their day-to-day work on the code. At release time, the work that has been merged into the develop branch is pushed to the master branch and tagged as a release. SU2 is being developed by individuals and organized teams all around the world. A list of current contributors can be found in the AUTHORS.md file. ## Documentation. Code documentation can be generated by calling doxygen from the root of the project, then open Docs/html/index.html in a browser to consult the documentation.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:4042,optimiz,optimizing,4042,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,2,"['optimiz', 'scalab']","['optimizing', 'scalable']"
Performance," elements; MINOR, DSPACE, H5E_CANTSELECT, Can't select hyperslab; MINOR, DSPACE, H5E_CANTNEXT, Can't move to next iterator location; MINOR, DSPACE, H5E_BADSELECT, Invalid selection; MINOR, DSPACE, H5E_CANTCOMPARE, Can't compare objects; MINOR, DSPACE, H5E_INCONSISTENTSTATE, Internal states are inconsistent; MINOR, DSPACE, H5E_CANTAPPEND, Can't append object. # Property list errors; MINOR, PLIST, H5E_CANTGET, Can't get value; MINOR, PLIST, H5E_CANTSET, Can't set value; MINOR, PLIST, H5E_DUPCLASS, Duplicate class name in parent class; MINOR, PLIST, H5E_SETDISALLOWED, Disallowed operation. # Link errors; MINOR, LINK, H5E_TRAVERSE, Link traversal failure; MINOR, LINK, H5E_NLINKS, Too many soft links in path; MINOR, LINK, H5E_NOTREGISTERED, Link class not registered; MINOR, LINK, H5E_CANTMOVE, Can't move object; MINOR, LINK, H5E_CANTSORT, Can't sort objects. # Parallel MPI errors; MINOR, MPI, H5E_MPI, Some MPI function failed; MINOR, MPI, H5E_MPIERRSTR, MPI Error String; MINOR, MPI, H5E_CANTRECV, Can't receive data; MINOR, MPI, H5E_CANTGATHER, Can't gather data; MINOR, MPI, H5E_NO_INDEPENDENT, Can't perform independent IO. # Heap errors; MINOR, HEAP, H5E_CANTRESTORE, Can't restore condition; MINOR, HEAP, H5E_CANTCOMPUTE, Can't compute value; MINOR, HEAP, H5E_CANTEXTEND, Can't extend heap's space; MINOR, HEAP, H5E_CANTATTACH, Can't attach object; MINOR, HEAP, H5E_CANTUPDATE, Can't update object; MINOR, HEAP, H5E_CANTOPERATE, Can't operate on object. # Free space manager errors; MINOR, FSPACE, H5E_CANTMERGE, Can't merge objects; MINOR, FSPACE, H5E_CANTREVIVE, Can't revive object; MINOR, FSPACE, H5E_CANTSHRINK, Can't shrink container. # I/O pipeline errors; MINOR, PIPELINE, H5E_NOFILTER, Requested filter is not available; MINOR, PIPELINE, H5E_CALLBACK, Callback failed; MINOR, PIPELINE, H5E_CANAPPLY, Error from filter 'can apply' callback; MINOR, PIPELINE, H5E_SETLOCAL, Error from filter 'set local' callback; MINOR, PIPELINE, H5E_NOENCODER, Filter present but encoding disabl",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:10977,perform,perform,10977,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['perform'],['perform']
Performance," with the Library, with the complete machine-readable ""work that; uses the Library"", as object code and/or source code, so that the; user can modify the Library and then relink to produce a modified; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in either source or binary form) with the major; components (compiler, kernel, and so on) of the operating system on; which the executable runs, unless that component itself accompanies; the executable. It may happen that this requirement contradicts the license; restrictions of other proprietary librarie",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:16199,perform,performing,16199,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['perform'],['performing']
Performance,"# Gradient validation from start to finish. This guide steps you through the steps necessary to perform a validation of the discrete adjoint sensitivities using finite differences. All necessary config files are present and this guide steps through the different tasks to do. If you are lucky enough too have some cores to spare, 14 is a suitable substitution for the `<#cores>` placeholder. ## FFD-box creation; This step is optional as the provided mesh already contains FFD box. This is for completeness if a new mesh e.g. with different resolution is created.; In `configMaster.cfg` the mentioned options have to be uncommented and others commented if they appear twice in the config.; Note that (only!) for the FFD-box creation a `MARKER_HEATFLUX= ( fluid_symmetry ) is artificially is set to avoid an error. This has to be done to make the config-Postprocessing aware that this marker exists as it is used in `DV_MARKER`.; Call `SU2_DEF configMaster.cfg` which creates the new mesh with the name given in 'MESH_OUT_FILENAME'. ## Primal run; Run `mpirun -n <#cores> SU2_CFD configMaster.cfg`. ## Discrete-Adjoint run; Rename\copy\symlink `restart_*.dat` -> `solution_*.dat`; Run `mpirun -n <#cores> SU2_CFD_AD DA_configMaster.cfg` and afterwards `SU2_DOT_AD DA_configMaster.cfg`. ## Finite-Differences run; The `OUTER_ITER` is set low in order to be suitable for the regression test. Set that back the number given in the config.; For the full gradient validation uncomment all design variables of the `DEFINITION_DV` config option.; Run `finite_differences.py -f FD_configMaster.cfg -z 2 -n <#cores>`. ## Comparing results; Just plot the `of_grad.csv` and `FINDIFF/of_grad_findiff.csv` with your tool of choice. Paraview's `Line Chart View` is one option.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md:96,perform,perform,96,TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,1,['perform'],['perform']
Performance,". For an overview of the technical details in SU2, please see the following AIAA Journal article:. ""SU2: An open-source suite for multiphysics simulation and design,"" AIAA Journal, 54(3):828-846, 2016. <http://arc.aiaa.org/doi/10.2514/1.J053813>. Please note that this project is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms. Continuous Integration:<br/>; [![Regression Testing](https://github.com/su2code/SU2/workflows/Regression%20Testing/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions); [![Release](https://github.com/su2code/SU2/workflows/Release%20Management/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions). Code Quality:<br/>; [![CodeFactor](https://www.codefactor.io/repository/github/su2code/su2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:1555,perform,performing,1555,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,2,"['optimiz', 'perform']","['optimization', 'performing']"
Performance,".. SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_NEW; exposes all methods of SU2.eval.design. level5 - optimization; SU2.opt.scipy_slsqp(project); sets up and runs a scipy slsqp optimization. FILE IO. level0 - in/out/mod. class SU2.io.config(dict); 	config.__init__(name); 	config.read(); 	config.write(name=self.name); 	config.dump(name='temp.cfg'); 	config.unpack_dvs(dv_new.dv_old); 	config.__diff__(konfig); 	config.__eq__(konfig). 	config.read_history(); 	config.read_aerodynamics(); 	config.rename_restart(). SU2.io.read_history( name ); SU2.io.read_aerodynamics( hist_name, sp",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:4090,optimiz,optimizers,4090,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['optimiz'],['optimizers']
Performance,"828-846, 2016. <http://arc.aiaa.org/doi/10.2514/1.J053813>. Please note that this project is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms. Continuous Integration:<br/>; [![Regression Testing](https://github.com/su2code/SU2/workflows/Regression%20Testing/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions); [![Release](https://github.com/su2code/SU2/workflows/Release%20Management/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions). Code Quality:<br/>; [![CodeFactor](https://www.codefactor.io/repository/github/su2code/su2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/su2/>; - Twitter: <https://twitter.com/su2code>; - Facebook: <https://www.facebook.com/su2code>. # SU2 Installation. ## Precompiled binaries for Linux, MacOS, Windows. You can find precompiled binaries of the latest version on our [download page](https://su2code.github.io/download.html) or under [releases](https://github.com/su2code/SU2/releases). ## Build SU2. The build system of SU2 is based on a combination of [meson](http://mesonbuild.com/) (as the front-end) and [ninja](https://ninja-build.org/) (as the back-end). Meson is an open source build system meant to be both extremely fast, and, even more importantly, as user friendly as possible. Ninja is a small low-level build system with",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:1676,optimiz,optimization,1676,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['optimiz'],['optimization']
Performance,"; warranty; and distribute a copy of this License along with the; Library. You may charge a fee for the physical act of transferring a copy,; and you may at your option offer warranty protection in exchange for a; fee. 2. You may modify your copy or copies of the Library or any portion; of it, thus forming a work based on the Library, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices; stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no; charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a; table of data to be supplied by an application program that uses; the facility, other than as an argument passed when the facility; is invoked, then you must make a good faith effort to ensure that,; in the event an application does not supply such function or; table, the facility still operates, and performs whatever part of; its purpose remains meaningful. (For example, a function in a library to compute square roots has; a purpose that is entirely well-defined independent of the; application. Therefore, Subsection 2d requires that any; application-supplied function or table used by this function must; be optional: if the application does not supply it, the square; root function must still compute square roots.). These requirements apply to the modified work as a whole. If; identifiable sections of that work are not derived from the Library,; and can be reasonably considered independent and separate works in; themselves, then this License, and its terms, do not apply to those; sections when you distribute them as separate works. But when you; distribute the same sections as part of a whole which is a work based; on the Library",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:9304,perform,performs,9304,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['perform'],['performs']
Performance,"<p align=""center"">; <img width=""250"" height=""154"" src=""Docs/logoSU2small.png"">; </p>. # SU2 (ver. 8.1.0 ""Harrier""): The Open-Source CFD Code. Computational analysis tools have revolutionized the way we design engineering systems, but most established codes are proprietary, unavailable, or prohibitively expensive for many users. The SU2 team is changing this, making multiphysics analysis and design optimization freely available as open-source software and involving everyone in its creation and development. For an overview of the technical details in SU2, please see the following AIAA Journal article:. ""SU2: An open-source suite for multiphysics simulation and design,"" AIAA Journal, 54(3):828-846, 2016. <http://arc.aiaa.org/doi/10.2514/1.J053813>. Please note that this project is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms. Continuous Integration:<br/>; [![Regression Testing](https://github.com/su2code/SU2/workflows/Regression%20Testing/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions); [![Release](https://github.com/su2code/SU2/workflows/Release%20Management/badge.svg?branch=develop)](https://github.com/su2code/SU2/actions). Code Quality:<br/>; [![CodeFactor](https://www.codefactor.io/repository/github/su2code/su2/badge)](https://www.codefactor.io/repository/github/su2code/su2). # SU2 Introduction. SU2 is a suite of open-source software tools written in C++ for the numerical solution of partial differential equations (PDE) and performing PDE constrained optimization. The primary applications are computational fluid dynamics and aerodynamic shape optimization, but has been extended to treat more general equations such as electrodynamics and chemically reacting flows. You will find more information and the latest news in:. - SU2 Home Page: <https://su2code.github.io>; - GitHub repository: <https://github.com/su2code>; - CFD Online: <http://www.cfd-online.com/Forums/s",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/README.md:401,optimiz,optimization,401,README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/README.md,1,['optimiz'],['optimization']
Performance,"AD_MULTIPLE, you do not need to; % delete the -DSCOTCH_PTHREAD flag (but doing so does no harm).; %; % 3 - Build PaStiX; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that this may not work well with SU2_CFD_AD.; % If you do use MPI+Threads, it is important for good performance that your; % system supports MPI_THREAD_MULTIPLE (SU2_CFD --thread_multiple ...); % Furthermore, if MPI_THREAD_MULTIPLE is NOT supported, you need to; % uncomment the line with ""-DPASTIX_FUNNELED"" in config.in.; % Finally, if you just use threads (no MPI) this is not important.; %; % 4 - Build SU2; % Follow the normal meson build instructions, add -Denable-pastix=true,; % this requires you to compile with MKL (-Denable-mkl=true) or OpenBLAS; % (-Denable-openblas=true) support in your call to meson.py.; % If you did not build PaStiX and Scotch in the externals folders you must; % use -Dpastix_root=""some path"" and -Dscotch_root=""another path"" to; % indicate where they are RELATIVE to the SU2 directory.; % You need sequential versions of BLAS. But when using MPI+Threads beware that; % OpenBLAS needs to have parallel support otherwise the solver will crash, if; % you get poor performance see 5.4 below.; %; % 5 - Common problems and known issues; % - OpenMPI 4 does not work with PaStiX 5, downgr",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:2095,perform,performance,2095,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['perform'],['performance']
Performance,"IENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_N",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3723,perform,performed,3723,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['perform'],['performed']
Performance,"e of the same mesh. The geometry is channel with an orthogonal duct.; The 'Venturi Primitive' is not exactly correct as there is no chokepoint behind the mixing region.; The walls are straight and the diameters are equal.; With just ~3k elements the mesh is excellent for debugging. Note that all simulations in this folder use passive species transport, i.e. no mixture fluid materials. - `species2_venturiPrimitive.cfg` Just 1 additional transport equation is solved, i.e. it is a 2 species flow.; In the regression test values the `SURFACE_SPECIES_VARIANCE` output is tested which is a scale for mixing quality.; Zero indicates a uniform species distribution. - `species3_venturiPrimitive.cfg` Here, 2 additional transport equations are solved.; In the output the `SURFACE_SPECIES_0` is tested. This is simply the surface averaged species on all `MARKER_ANALYZE` and can be weighted with `AREA` or `MASSFLOW` just like the other quantities.; t; - `restart_validation.sh` performs 4 simulations using `species3_venturiPrimitive.cfg` to check whether primal and primal-adjoint restarts work. This script is best used with `HISTORY_OUTPUT= RMS_RES` only as then the output is nicely comparable.; 1. Primal simulation with n+1 timesteps. This is the ground truth of the expected residual value; 2. Primal simulation with n timesteps. We will restart from this simulation.; 3. Primal simulation with 1 timestep, restarted from simulation in 2nd step.; 4. Adjoint simulation with 1 timestep, using the primal restart file from simulation in 2nd step. The printed direct residuals are taken for comparison. - `species3_venturiPrimitive_inletFile.cfg` With the `test_inlet_files.sh` a simple sanity check for inlet files is performed.; SU2 writes an `example_inlet_file.dat` when the specified inlet file is not available, with the values of the specified `MARKER_INLET` content.; Therefore comparing a simulation with this example inlet file and without inlet files should result in exactly the same resu",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md:1049,perform,performs,1049,TestCases/species_transport/venturi_primitive_3species/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md,1,['perform'],['performs']
Performance,"just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in detail); MAJOR, H5E_LIB, General library infrastructure; MAJOR, H5E_FILE, File accessibility; MAJOR, H5E_IO, Low-level I/O; MAJOR, H5E_FUNC, Function entry/exit; MAJOR, H5E_ATOM, Object atom; MAJOR, H5E_CACHE, Object cache; MAJOR, H5E_LINK, Links; MAJOR, H5E_BTREE, B-Tree node; MAJOR, H5E_SYM, Symbol table; MAJOR, H5E_HEAP, Heap; MAJOR, H5E_OHDR, Object header; MAJOR, H5E_DATATYPE, Datatype; MAJOR, H5E_DATASPACE, Dataspace; MAJOR, H5E_DATASET, Dataset; MAJOR, H5E_STORAGE, Data storage; MAJOR, H5E_PLIST, Property lists; MAJOR, H5E_ATTR, Attribute; MAJOR, H5E_PLINE, Data filters; MAJOR, H5E_EFL, External file list; MAJOR, H5E_REFERENCE, References; MAJOR, H5E_VFL, Virtual File Layer; MAJOR, H5E_VOL, Virtual Object Layer; MAJOR, H5E_TST, Ternary Search Trees; MAJOR, H5E_RS, Reference Counted Strings; MAJOR, H5E_ERROR, Error API; MAJOR, H5E_SLIST, Skip Lists; MAJOR, H5E_FSPACE, Free Space Manager; MAJOR, H5E_SOHM, Shared Object Header Messages; MAJOR, H5E_EARRAY, Extensible Array; MAJOR, H5E_FARRAY, Fixed Array; MAJOR, H5E_PLUGIN, Plugin for dynamically loaded library; MAJOR, H5E_PAGEBUF, Page Buffering; MAJOR, H5E_CONTEXT, API Context; MAJOR, H5E_MAP, Map; MAJOR, H5E_NONE_MAJOR, No error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CAC",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:2216,cache,cache,2216,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,2,"['cache', 'load']","['cache', 'loaded']"
Performance,"l (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges that this is only a limited nonexclusive license.; Tecplot is and remains the owner of all titles, rights, and interests in TecIO; Software. Title to TecIO and all copies thereof remain with Tecplot. The; Materials are copyrighted and are protected by United States copyright laws and; international treaty provisions. Licensee will not remove any copyright notice; from the Materials. Tecplot does not grant any express or implied right to you; under Tecplot patents, copyrights, trademarks, or trade secret information. 3. Subject to the terms and conditions of this License Agreement, Tecplot; hereby grants Licensee a nonexclusive, royalty-free, world-wide license to; reproduce, analyze, test, perform and/or display publicly, prepare derivative; works, distribute, and otherwise use TecIO alone or in any derivative version,; provided, however, that Tecplot's License Agreement and Tecplot's notice of; copyright, i.e., ""Copyright © 1988-2016 Tecplot, Inc. All rights reserved; worldwide."" are retained in TecIO alone or in any derivative version prepared; by Licensee. 4. In the event Licensee prepares a derivative work that is based on or; incorporates TecIO or any part thereof, and wants to publish the derivative; work as provided herein, Licensee hereby agrees to provide to all end users of; any such work a brief summary of all changes made to TecIO, and to convey to; Tecplot a copy of the modified TecIO source code within 30 days after; publication of any work containing any such changes. 5. Tecplot is making TecIO available to Licensee on an ""AS IS"" basis. NO OTHER; WARRANTIES. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, TECPLOT, INC.; AND ITS SUPPLIERS DISCLAIM ALL OTHER WARRANTIES AND CONDI",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:28140,perform,perform,28140,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['perform'],['perform']
Performance,"l (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges that this is only a limited nonexclusive license.; Tecplot is and remains the owner of all titles, rights, and interests in TecIO; Software. Title to TecIO and all copies thereof remain with Tecplot. The; Materials are copyrighted and are protected by United States copyright laws and; international treaty provisions. Licensee will not remove any copyright notice; from the Materials. Tecplot does not grant any express or implied right to you; under Tecplot patents, copyrights, trademarks, or trade secret information. 3. Subject to the terms and conditions of this License Agreement, Tecplot; hereby grants Licensee a nonexclusive, royalty-free, world-wide license to; reproduce, analyze, test, perform and/or display publicly, prepare derivative; works, distribute, and otherwise use TecIO alone or in any derivative version,; provided, however, that Tecplot's License Agreement and Tecplot's notice of; copyright, i.e., ""Copyright � 1988-2016 Tecplot, Inc. All rights reserved; worldwide."" are retained in TecIO alone or in any derivative version prepared; by Licensee. 4. In the event Licensee prepares a derivative work that is based on or; incorporates TecIO or any part thereof, and wants to publish the derivative; work as provided herein, Licensee hereby agrees to provide to all end users of; any such work a brief summary of all changes made to TecIO, and to convey to; Tecplot a copy of the modified TecIO source code within 30 days after; publication of any work containing any such changes. 5. Tecplot is making TecIO available to Licensee on an ""AS IS"" basis. NO OTHER; WARRANTIES. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, TECPLOT, INC.; AND ITS SUPPLIERS DISCLAIM ALL OTHER WARRANTIES AND CONDI",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt:1534,perform,perform,1534,externals/tecio/teciompisrc/tecio_license_agreement.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt,2,['perform'],['perform']
Performance,"ot important.; %; % 4 - Build SU2; % Follow the normal meson build instructions, add -Denable-pastix=true,; % this requires you to compile with MKL (-Denable-mkl=true) or OpenBLAS; % (-Denable-openblas=true) support in your call to meson.py.; % If you did not build PaStiX and Scotch in the externals folders you must; % use -Dpastix_root=""some path"" and -Dscotch_root=""another path"" to; % indicate where they are RELATIVE to the SU2 directory.; % You need sequential versions of BLAS. But when using MPI+Threads beware that; % OpenBLAS needs to have parallel support otherwise the solver will crash, if; % you get poor performance see 5.4 below.; %; % 5 - Common problems and known issues; % - OpenMPI 4 does not work with PaStiX 5, downgrade to 3.1.4.; % - Very early versions of OpenMPI 3 may have problems with MPI types.; % - OpenBLAS build fails when linking executables. Old versions (e.g.; % 0.2.18) did not provide LAPACK support, rebuild or upgrade.; % - Very bad performance with OpenBLAS on some systems (observed on Ubuntu; % 16.04) try ""export OMP_NUM_THREADS=1"" before running SU2, check that; % you only see N SU2 processes running at 100% (mpirun -n N SU2_XXX).; % - Cannot find BLAS dependency:; % i - On some OS the package has a different name (e.g. Ubuntu 16.04; % blas-openblas instead of openblas), use -Dblas-name=""right name"" in; % call to meson.py; % ii - The name is right but meson cannot find it. Set env variable; % PKG_CONFIG_PATH=$PKG_CONFIG_PATH:""directory with someblas.pc file""; % - MKL is not in its standard directory (/opt/intel/mkl), use option; % -Dmkl_root=""non standard directory"" in call to meson.py (headers are; % expected in ""include"" and libraries in ""lib/intel64"").; %; % 6 - Tested platforms; % - Ubuntu 18.04, gcc 7.4, ompi 3.1.4, mkl 2017, openblas 0.2.20 and 0.3.2.dev; % - Ubuntu 16.04, gcc 5.4, ompi 3.1.4, mkl 2017 and 2019; % - CentOS 7.6.1810, gcc 5.4, ompi 3.1.4, mkl 2017; % - CentOS 7.6.1810, gcc 5.4, impi 2018, mkl 2019; % - CentOS 7.6.181",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:3346,perform,performance,3346,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['perform'],['performance']
Performance,"own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_NEW; exposes all methods of SU2.eval.design. level5 - optimization; SU2.opt.scipy_slsqp(project); sets up and runs a scipy slsqp optimization. FILE IO. level0 - in/out/mod. class SU2.io.config(dict); 	config.__init__(name); 	config.read(); 	config.write(name=self.name); 	config.dump(name='temp.cfg'); 	config.unpack_dvs(dv_new.dv_old); 	config.__diff__(konfig); 	config.__eq__(konfig). 	config.read_history(); 	config.read_aerodynamics(); 	config.rename_restart(). SU2.io.read_history( name ); SU2.io.read_aerodynamics( hist_name, special_cases ). level1 - files translate,modify,plotting. SU2.io.add_suffix(name,suffix); SU2.io.resurrect_restart(config,state). SU2.io.plot.adjoint_gradient(config,grad_dict); SU2.io.plot.findiff_gradient(config,grad_dict); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:4740,optimiz,optimization,4740,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,2,['optimiz'],['optimization']
Performance,"sonic aircraft design using equivalent area distribution,"" AIAA 2012-0269, 2012. DOI: [10.2514/6.2012-269](https://arc.aiaa.org/doi/10.2514/6.2012-269). ## Expected outcome; - Direct solver; - Equivalent area is calculated without errors.; - Discrete adjoint solver; - Adjoint solution is calculated without errors. ## Files for this test case; Below is a list of files for this test case and explanation for each file.; - SU2 repository; - NACA64206.cfg; - Configuration file.; - TestCases repository; - NACA64206_FFD.su2; - Mesh file. NACA64-206 was used as an airfoil. Arbitrary swept angle and taper ratio were used to create 3D geometry. It has a circumferential nearfield boundary at 3 aircraft lengths.; - solution_flow.csv; - Solution file of direct solver after 4000 iterations. This is required for running adjoint solver.; - TargetEA.dat; - Target equivalent area distribution. See the file for format. In this file, equivalent area is increased by 5% from direct solution to use as an example target. ## How to use equivalent area calculation function. ### Config file; See SUPERSONIC SIMULATION section of config_template.cfg. ### Mesh; A mesh has to have a circumferential boundary around the aircraft axis within the calculation domain and has to be labeled as MARKER_NEARFIELD. This boundary has to have a structured grid with the same number of nodes along each azimuthal angle. ### Target equivalent area; TargetEA.dat is required for shape optimization using equivalent area. After running direct solver, Equivalent_Area.dat is output, which can be used to define a target since it has the same format as TargetEA.dat. Equivalent area is calculated at each node on a surface with MARKER_NEARFIELD. Difference from target is calculated by sum of squared difference at each node. ## Implementation on SU2; Equivalent area calculation function was temporarily unavailable after introduction of ver. 7.0.0. See [PR1329](https://github.com/su2code/SU2/pull/1329) on Github for recovery.",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md:2005,optimiz,optimization,2005,TestCases/optimization_euler/equivalentarea_naca64206/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md,1,['optimiz'],['optimization']
Performance,"tiX base directory'); option('scotch_root', type : 'string', value : 'externals/scotch/', description: 'Scotch base directory'); option('custom-mpi', type : 'boolean', value : false, description: 'enable MPI assuming the compiler and/or env vars give the correct include dirs and linker args.'); option('enable-tests', type : 'boolean', value : false, description: 'compile Unit Tests'); option('enable-mixedprec', type : 'boolean', value : false, description: 'use single precision floating point arithmetic for sparse algebra'); option('extra-deps', type : 'string', value : '', description: 'comma-separated list of extra (custom) dependencies to add for compilation'); option('enable-mpp', type : 'boolean', value : false, description: 'enable Mutation++ support'); option('install-mpp', type : 'boolean', value : false, description: 'install Mutation++ in the directory defined with --prefix'); option('enable-coolprop', type : 'boolean', value : false, description: 'enable CoolProp support'); option('enable-mlpcpp', type : 'boolean', value : false, description: 'enable profiling through gprof'); option('enable-gprof', type : 'boolean', value : false, description: 'enable MLPCpp support'); option('opdi-backend', type : 'combo', choices : ['auto', 'macro', 'ompt'], value : 'auto', description: 'OpDiLib backend choice'); option('codi-tape', type : 'combo', choices : ['JacobianLinear', 'JacobianReuse', 'JacobianMultiUse', 'PrimalLinear', 'PrimalReuse', 'PrimalMultiUse'], value : 'JacobianLinear', description: 'CoDiPack tape choice'); option('opdi-shared-read-opt', type : 'boolean', value : true, description : 'OpDiLib shared reading optimization'); option('librom_root', type : 'string', value : '', description: 'libROM base directory'); option('enable-librom', type : 'boolean', value : false, description: 'enable LLNL libROM support'); option('static-cgns-deps', type : 'boolean', value : false, description: 'prefer static or dynamic (default) libraries for CGNS dependencies'); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt:3070,optimiz,optimization,3070,meson_options.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt,1,['optimiz'],['optimization']
Performance,"ve.cfg` Just 1 additional transport equation is solved, i.e. it is a 2 species flow.; In the regression test values the `SURFACE_SPECIES_VARIANCE` output is tested which is a scale for mixing quality.; Zero indicates a uniform species distribution. - `species3_venturiPrimitive.cfg` Here, 2 additional transport equations are solved.; In the output the `SURFACE_SPECIES_0` is tested. This is simply the surface averaged species on all `MARKER_ANALYZE` and can be weighted with `AREA` or `MASSFLOW` just like the other quantities.; t; - `restart_validation.sh` performs 4 simulations using `species3_venturiPrimitive.cfg` to check whether primal and primal-adjoint restarts work. This script is best used with `HISTORY_OUTPUT= RMS_RES` only as then the output is nicely comparable.; 1. Primal simulation with n+1 timesteps. This is the ground truth of the expected residual value; 2. Primal simulation with n timesteps. We will restart from this simulation.; 3. Primal simulation with 1 timestep, restarted from simulation in 2nd step.; 4. Adjoint simulation with 1 timestep, using the primal restart file from simulation in 2nd step. The printed direct residuals are taken for comparison. - `species3_venturiPrimitive_inletFile.cfg` With the `test_inlet_files.sh` a simple sanity check for inlet files is performed.; SU2 writes an `example_inlet_file.dat` when the specified inlet file is not available, with the values of the specified `MARKER_INLET` content.; Therefore comparing a simulation with this example inlet file and without inlet files should result in exactly the same results.; This is done by this script and additionally compares the history files of those 2 simulations which is supposed to be empty.; At the time of writing there is just one last digit in these history files that differs.; The case alone is unique in that it is using inlet files for 2 separate inlets and is non-dimensional and uses Turbulence.; Altogether the case is quite complex on the inlet file mechanism.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md:1794,perform,performed,1794,TestCases/species_transport/venturi_primitive_3species/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md,1,['perform'],['performed']
Safety," MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MINOR, CACHE, H5E_CANTTAG, Unable to tag metadata in the cache; MINOR, CACHE, H5E_CANTLOAD, Unable to load metadata into cache; MINOR, CACHE, H5E_PROTECT, Protected metadata error; MINOR, CACHE, H5E_NOTCACHED, Metadata not currently cached; MINOR, CACHE, H5E_SYSTEM, Internal error detected; MINOR, CACHE, H5E_CANTINS, Unable to insert metadata into cache; MINOR, CACHE, H5E_CANTPROTECT, Unable to protect metadata; MINOR, CACHE, H5E_CANTUNPROTECT, Unable to unprotect metadata; MINOR, CACHE, H5E_CANTPIN, Unable to pin cache entry; MINOR, CACHE, H5E_CANTUNPIN, Unable to un-pin cache entry; MINOR, CACHE, H5E_CANTMARKDIRTY, Unable to mark a pinned entry as dirty; MINOR, CACHE, H5E_CANTMARKCLEAN, Unable to mark a pinned entry as clean; MINOR, CACHE, H5E_CANTMARKUNSERIALIZED, Unable to mark an entry as unserialized; MINOR, CACHE, H5E_CANTMARKSERIALIZED, Unable to mark an entry as serialized; MINOR, CACHE, H5E_CANTDIRTY, Unable to mark metadata as dirty; MINOR, CACHE, H5E_CANTCLEAN, Unable to mark metadata as clean; MINOR, CACHE, H5E_CANTEXPUNGE, Unable to expunge a metadata cache entry; MINOR, CACHE, H5E_CANTRESIZE, Unable to resize a metadata cache entry; MINOR, CACHE, H5E_CANTDEPEND, Unable to create a flush dependency; MINOR, CACHE, H5E_CANTUNDEPEND, Unable to destroy a flush dependency; MINOR, CACHE, H5E_CANTNOTIFY, Unable to notify object about action; MINOR, CACHE, H5E_LOGGING, Failure in the cache logging framework; MINOR, CACHE, H5E_CANTCORK, Unable to cork an object; MINOR, CACHE, H5E_CANTUNCORK, Unable to uncork an object. # B-tree related errors; MINOR, BTREE, H5E_NOTFOUND, Object not found; MINOR, BTREE, H5E_EXISTS, Object alre",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:7015,detect,detected,7015,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['detect'],['detected']
Safety,"# Copyright by The HDF Group.; # Copyright by the Board of Trustees of the University of Illinois.; # All rights reserved.; #; # This file is part of HDF5. The full HDF5 copyright notice, including; # terms governing use, modification, and redistribution, is contained in; # the COPYING file, which can be found at the root of the source code; # distribution tree, or in https://www.hdfgroup.org/licenses.; # If you do not have access to either file, you may request a copy from; # help@hdfgroup.org.; #. # This file is used to generate the headers that is needed for detecting; # overflows between types at run-time; #; # The bin/make_overflow script reads in this file and creates the appropriate; # file in the src/ directory when the generated header is out of date with; # respect to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>, <SIGNED|UNSIGNED>;; #; # Where <type> is a valid C type (like 'int8_t', 'hssize_t', etc. and whether; # the type is signed or unsigned follows.; #; # Programmer: Quincey Koziol; # Creation Date: 2009/04/09. unsigned, UNSIGNED;; int8_t, SIGNED;; int, SIGNED;; long, SIGNED;; int64_t, SIGNED;; uint8_t, UNSIGNED;; uint16_t, UNSIGNED;; uint32_t, UNSIGNED;; uint64_t, UNSIGNED;; ptrdiff_t, SIGNED;; size_t, UNSIGNED;; ssize_t, SIGNED;; haddr_t, UNSIGNED;; hsize_t, UNSIGNED;; hssize_t, SIGNED;; h5_stat_size_t, UNSIGNED;; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5overflow.txt:568,detect,detecting,568,externals/cgns/hdf5/H5overflow.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5overflow.txt,1,['detect'],['detecting']
Safety,"# Gradient validation from start to finish. This guide steps you through the steps necessary to perform a validation of the discrete adjoint sensitivities using finite differences. All necessary config files are present and this guide steps through the different tasks to do. If you are lucky enough too have some cores to spare, 14 is a suitable substitution for the `<#cores>` placeholder. ## FFD-box creation; This step is optional as the provided mesh already contains FFD box. This is for completeness if a new mesh e.g. with different resolution is created.; In `configMaster.cfg` the mentioned options have to be uncommented and others commented if they appear twice in the config.; Note that (only!) for the FFD-box creation a `MARKER_HEATFLUX= ( fluid_symmetry ) is artificially is set to avoid an error. This has to be done to make the config-Postprocessing aware that this marker exists as it is used in `DV_MARKER`.; Call `SU2_DEF configMaster.cfg` which creates the new mesh with the name given in 'MESH_OUT_FILENAME'. ## Primal run; Run `mpirun -n <#cores> SU2_CFD configMaster.cfg`. ## Discrete-Adjoint run; Rename\copy\symlink `restart_*.dat` -> `solution_*.dat`; Run `mpirun -n <#cores> SU2_CFD_AD DA_configMaster.cfg` and afterwards `SU2_DOT_AD DA_configMaster.cfg`. ## Finite-Differences run; The `OUTER_ITER` is set low in order to be suitable for the regression test. Set that back the number given in the config.; For the full gradient validation uncomment all design variables of the `DEFINITION_DV` config option.; Run `finite_differences.py -f FD_configMaster.cfg -z 2 -n <#cores>`. ## Comparing results; Just plot the `of_grad.csv` and `FINDIFF/of_grad_findiff.csv` with your tool of choice. Paraview's `Line Chart View` is one option.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md:798,avoid,avoid,798,TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,1,['avoid'],['avoid']
Safety,"; 	returns dictionary 'info' with keys:; 		'FUNCTIONS' - dict of function:value; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.adjoint(config); 	checks decomp; 	ensures config:; 		'MATH_PROBLEM' = 'CONTINUOUS_ADJOINT'; 		'CONV_FILENAME' = 'CONFIG_FILENAME' + '_adjoint'; 	run CFD; 	read history; 	does not move restart to solution; 	does not run gradient projection; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'FILES' - dict of useful file names. SU2.run.projection(config,step=1e-4); 	assumes linear superposition of design variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint s",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:2367,redund,redundancy,2367,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['redund'],['redundancy']
Safety,"IENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_N",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3579,redund,redundancy,3579,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['redund'],['redundancy']
Safety,"ign variables; 	checks decomp; 	optional step float or vector; 	update config; 	run DOT; 	read raw gradient file, remove file; 	write plotable gradient file; 	returns dictionary 'info' with keys:; 		'HISTORY' - dict of col_header:iteration history; 		'GRADIENTS' - dict of function:grad list. level2 - objective and gradient analysis, redundancy protection; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:2973,redund,redundancy,2973,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['redund'],['redundancy']
Safety,"n; upstream pointer update of config and state; config - controls SU2; state - stores design information. STATE; 	FILES; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG (...); 		MESH; 		TARGET_EA; 		WEIGHT_NF; 	HISTORY; 		DIRECT; 		ADJOINT_LIFT; 		ADJOINT_DRAG; 	FUNCTIONS; 		LIFT; 		DRAG; 		MOMENT_Z; 	GRADIENTS; 		LIFT; 		DRAG; 		MOMENT_Z. SU2.eval.functions.function(); aliased to SU2.eval.func(); 	runs the aerodynamics and geometry control functions; 	pulls requested function names(), returns a dict; 	updates config and state by reference. SU2.eval.functions.aerodynamics(); 	runs with redundancy protection (using state):; 		decomposition; 		deformation; 		direct solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.functions.geometry(); todo ... SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality const",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:3323,redund,redundancy,3323,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['redund'],['redundancy']
Safety,"own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_NEW; exposes all methods of SU2.eval.design. level5 - optimization; SU2.opt.scipy_slsqp(project); sets up and runs a scipy slsqp optimization. FILE IO. level0 - in/out/mod. class SU2.io.config(dict); 	config.__init__(name); 	config.read(); 	config.write(name=self.name); 	config.dump(name='temp.cfg'); 	config.unpack_dvs(dv_new.dv_old); 	config.__diff__(konfig); 	config.__eq__(konfig). 	config.read_history(); 	config.read_aerodynamics(); 	config.rename_restart(). SU2.io.read_history( name ); SU2.io.read_aerodynamics( hist_name, special_cases ). level1 - files translate,modify,plotting. SU2.io.add_suffix(name,suffix); SU2.io.resurrect_restart(config,state). SU2.io.plot.adjoint_gradient(config,grad_dict); SU2.io.plot.findiff_gradient(config,grad_dict); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:4587,avoid,avoiding,4587,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,2,"['avoid', 'redund']","['avoiding', 'redundancy']"
Safety,"sonic aircraft design using equivalent area distribution,"" AIAA 2012-0269, 2012. DOI: [10.2514/6.2012-269](https://arc.aiaa.org/doi/10.2514/6.2012-269). ## Expected outcome; - Direct solver; - Equivalent area is calculated without errors.; - Discrete adjoint solver; - Adjoint solution is calculated without errors. ## Files for this test case; Below is a list of files for this test case and explanation for each file.; - SU2 repository; - NACA64206.cfg; - Configuration file.; - TestCases repository; - NACA64206_FFD.su2; - Mesh file. NACA64-206 was used as an airfoil. Arbitrary swept angle and taper ratio were used to create 3D geometry. It has a circumferential nearfield boundary at 3 aircraft lengths.; - solution_flow.csv; - Solution file of direct solver after 4000 iterations. This is required for running adjoint solver.; - TargetEA.dat; - Target equivalent area distribution. See the file for format. In this file, equivalent area is increased by 5% from direct solution to use as an example target. ## How to use equivalent area calculation function. ### Config file; See SUPERSONIC SIMULATION section of config_template.cfg. ### Mesh; A mesh has to have a circumferential boundary around the aircraft axis within the calculation domain and has to be labeled as MARKER_NEARFIELD. This boundary has to have a structured grid with the same number of nodes along each azimuthal angle. ### Target equivalent area; TargetEA.dat is required for shape optimization using equivalent area. After running direct solver, Equivalent_Area.dat is output, which can be used to define a target since it has the same format as TargetEA.dat. Equivalent area is calculated at each node on a surface with MARKER_NEARFIELD. Difference from target is calculated by sum of squared difference at each node. ## Implementation on SU2; Equivalent area calculation function was temporarily unavailable after introduction of ver. 7.0.0. See [PR1329](https://github.com/su2code/SU2/pull/1329) on Github for recovery.",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md:2537,recover,recovery,2537,TestCases/optimization_euler/equivalentarea_naca64206/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md,1,['recover'],['recovery']
Safety,"ve.cfg` Just 1 additional transport equation is solved, i.e. it is a 2 species flow.; In the regression test values the `SURFACE_SPECIES_VARIANCE` output is tested which is a scale for mixing quality.; Zero indicates a uniform species distribution. - `species3_venturiPrimitive.cfg` Here, 2 additional transport equations are solved.; In the output the `SURFACE_SPECIES_0` is tested. This is simply the surface averaged species on all `MARKER_ANALYZE` and can be weighted with `AREA` or `MASSFLOW` just like the other quantities.; t; - `restart_validation.sh` performs 4 simulations using `species3_venturiPrimitive.cfg` to check whether primal and primal-adjoint restarts work. This script is best used with `HISTORY_OUTPUT= RMS_RES` only as then the output is nicely comparable.; 1. Primal simulation with n+1 timesteps. This is the ground truth of the expected residual value; 2. Primal simulation with n timesteps. We will restart from this simulation.; 3. Primal simulation with 1 timestep, restarted from simulation in 2nd step.; 4. Adjoint simulation with 1 timestep, using the primal restart file from simulation in 2nd step. The printed direct residuals are taken for comparison. - `species3_venturiPrimitive_inletFile.cfg` With the `test_inlet_files.sh` a simple sanity check for inlet files is performed.; SU2 writes an `example_inlet_file.dat` when the specified inlet file is not available, with the values of the specified `MARKER_INLET` content.; Therefore comparing a simulation with this example inlet file and without inlet files should result in exactly the same results.; This is done by this script and additionally compares the history files of those 2 simulations which is supposed to be empty.; At the time of writing there is just one last digit in these history files that differs.; The case alone is unique in that it is using inlet files for 2 separate inlets and is non-dimensional and uses Turbulence.; Altogether the case is quite complex on the inlet file mechanism.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md:1762,sanity check,sanity check,1762,TestCases/species_transport/venturi_primitive_3species/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md,1,['sanity check'],['sanity check']
Security," Such a; work, in isolation, is not a derivative work of the Library, and; therefore falls outside the scope of this License. However, linking a ""work that uses the Library"" with the Library; creates an executable that is a derivative of the Library (because it; contains portions of the Library), rather than a ""work that uses the; library"". The executable is therefore covered by this License.; Section 6 states terms for distribution of such executables. When a ""work that uses the Library"" uses material from a header file; that is part of the Library, the object code for the work may be a; derivative work of the Library even though the source code is not.; Whether this is true is especially significant if the work can be; linked without the Library, or if the work is itself a library. The; threshold for this to be true is not precisely defined by law. If such an object file uses only numerical parameters, data; structure layouts and accessors, and small macros and small inline; functions (ten lines or less in length), then the use of the object; file is unrestricted, regardless of whether it is legally a derivative; work. (Executables containing this object code plus portions of the; Library will still fall under Section 6.). Otherwise, if the work is a derivative of the Library, you may; distribute the object code for the work under the terms of Section 6.; Any executables containing that work also fall under Section 6,; whether or not they are linked directly with the Library itself. 6. As an exception to the Sections above, you may also combine or; link a ""work that uses the Library"" with the Library to produce a; work containing portions of the Library, and distribute that work; under terms of your choice, provided that the terms permit; modification of the work for the customer's own use and reverse; engineering for debugging such modifications. You must give prominent notice with each copy of the work that the; Library is used in it and that the Library and its",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:13502,access,accessors,13502,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['access'],['accessors']
Security," without warranty of any kind, either expressed or implied. The downloading, or executing any part of this software constitutes an implicit agreement to these terms. These terms and conditions are subject to change at any time without prior notice. ---. TecIO/TecIOMPI. ---. Tecplot, Inc. LICENSE AGREEMENT FOR Tecplot's TecIO (""TecIO""). TecIO is a software library provided by Tecplot, Inc. to enable software; developed by others to write data in Tecplot's proprietary binary file; formats, .plt and .szplt, and to read Tecplot binary data in .plt and .szplt; format. TecIO is included with Tecplot 360 EX and may also be downloaded from; http://www.tecplot.com/downloads/tecio-library/. This license applies to versions of the TecIO library distributed with Tecplot; 360 EX 2016 R2 and later and covers both the serial and parallel (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges that this is only a limited nonexclusive license.; Tecplot is and remains the owner of all titles, rights, and interests in TecIO; Software. Title to TecIO and all copies thereof remain with Tecplot. The; Materials are copyrighted and are protected by United States copyright laws and; international treaty provisions. Licensee will not remove any copyright notice; from the Materials. Tecplot does not grant any express or implied right to you; under Tecplot patents, copyrights, trademarks, or trade secret information. 3. Subject to the terms and conditions of this License Agreement, Tecplot; hereby grants Licensee a nonexclusive, royalty-free, world-wide license to; reproduce, analyze, test, perform and/or display publicly, prepare derivative; works, distribute, and otherwise use TecIO alone or in any derivative version,; provided, however, that Tecplot's License Agreement and Tec",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:27311,access,accessing,27311,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['access'],['accessing']
Security,"# Copyright by The HDF Group.; # Copyright by the Board of Trustees of the University of Illinois.; # All rights reserved.; #; # This file is part of HDF5. The full HDF5 copyright notice, including; # terms governing use, modification, and redistribution, is contained in; # the COPYING file, which can be found at the root of the source code; # distribution tree, or in https://www.hdfgroup.org/licenses.; # If you do not have access to either file, you may request a copy from; # help@hdfgroup.org.; #. # This file is used to generate the headers that is needed for detecting; # overflows between types at run-time; #; # The bin/make_overflow script reads in this file and creates the appropriate; # file in the src/ directory when the generated header is out of date with; # respect to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>, <SIGNED|UNSIGNED>;; #; # Where <type> is a valid C type (like 'int8_t', 'hssize_t', etc. and whether; # the type is signed or unsigned follows.; #; # Programmer: Quincey Koziol; # Creation Date: 2009/04/09. unsigned, UNSIGNED;; int8_t, SIGNED;; int, SIGNED;; long, SIGNED;; int64_t, SIGNED;; uint8_t, UNSIGNED;; uint16_t, UNSIGNED;; uint32_t, UNSIGNED;; uint64_t, UNSIGNED;; ptrdiff_t, SIGNED;; size_t, UNSIGNED;; ssize_t, SIGNED;; haddr_t, UNSIGNED;; hsize_t, UNSIGNED;; hssize_t, SIGNED;; h5_stat_size_t, UNSIGNED;; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5overflow.txt:428,access,access,428,externals/cgns/hdf5/H5overflow.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5overflow.txt,1,['access'],['access']
Security,"# Copyright by The HDF Group.; # Copyright by the Board of Trustees of the University of Illinois.; # All rights reserved.; #; # This file is part of HDF5. The full HDF5 copyright notice, including; # terms governing use, modification, and redistribution, is contained in; # the COPYING file, which can be found at the root of the source code; # distribution tree, or in https://www.hdfgroup.org/licenses.; # If you do not have access to either file, you may request a copy from; # help@hdfgroup.org.; #. # This file is used to generate the various headers that are needed for the; # error API. The bin/make_err script reads in this file and creates the; # appropriate files in the src/ directory when the generated headers are out; # of date with respect to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>,<major section, if minor type, otherwise omitted>,<name>,<description>; #; # For example, the following sample input shows two major errors and two minor; # errors in each section:; #; # MAJOR, H5E_ARGS, Invalid arguments to routine; # MAJOR, H5E_RESOURCE, Resource unavailable; #; # SECTION, ARGS, Argument errors; # SECTION, RESOURCE, Resource errors; #; # MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; # MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; # MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; # MINOR, RESOURCE, H5E_CANTCOPY, unable to copy object; #; # The section information is just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in de",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:428,access,access,428,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['access'],['access']
Security,"# Copyright by The HDF Group.; # Copyright by the Board of Trustees of the University of Illinois.; # All rights reserved.; #; # This file is part of HDF5. The full HDF5 copyright notice, including; # terms governing use, modification, and redistribution, is contained in; # the COPYING file, which can be found at the root of the source code; # distribution tree, or in https://www.hdfgroup.org/licenses.; # If you do not have access to either file, you may request a copy from; # help@hdfgroup.org.; #. # This file is used to generate the various headers that are needed for; # versioning the public symbols for the library.; #; # The bin/make_vers script reads in this file and creates the appropriate files; # in the src/ directory when the generated headers are out of date with respect; # to this file.; #; # Blank lines and lines beginning with '#' are ignored; #; # The format of this file is as follows:; # <type>: <base routine name>; <list of versioned parameter types for function>; <version introduced>, <list of revised versions>; #; # Where <type> is either 'FUNCTION' or 'TYPEDEF'; #; # For example, the following sample input shows two functions with different; # API versions for each. The example below shows H5Gfoo being added to the; # library in the v1.0 branch and revised in the v1.4 and v1.8 branches (so; # there should be three versioned names for the routine: H5Gfoo1, H5Gfoo2 and; # H5Gfoo3). H5Gbar is shown as being added to the library in the v1.2 branch; # (so the ""base"" version of the API name wouldn't appear if the library; # was configured with the default API interface corresponding to v1.0) and; # revised in the v1.6 branch (so there should be two versioned names for the; # routine: H5Gbar1 and H5Gbar2).; #; # FUNCTION: H5Gfoo; ; v10, v14, v18; # FUNCTION: H5Gbar; ; v12, v16; #; # Programmer: Quincey Koziol; # Creation Date: 2007/07/10. # API function names; # (although not required, it's easier to compare this file with the headers; # generated if the ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt:428,access,access,428,externals/cgns/hdf5/H5vers.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5vers.txt,1,['access'],['access']
Security,"# Gradient validation from start to finish. This guide steps you through the steps necessary to perform a validation of the discrete adjoint sensitivities using finite differences. All necessary config files are present and this guide steps through the different tasks to do. If you are lucky enough too have some cores to spare, 14 is a suitable substitution for the `<#cores>` placeholder. ## FFD-box creation; This step is optional as the provided mesh already contains FFD box. This is for completeness if a new mesh e.g. with different resolution is created.; In `configMaster.cfg` the mentioned options have to be uncommented and others commented if they appear twice in the config.; Note that (only!) for the FFD-box creation a `MARKER_HEATFLUX= ( fluid_symmetry ) is artificially is set to avoid an error. This has to be done to make the config-Postprocessing aware that this marker exists as it is used in `DV_MARKER`.; Call `SU2_DEF configMaster.cfg` which creates the new mesh with the name given in 'MESH_OUT_FILENAME'. ## Primal run; Run `mpirun -n <#cores> SU2_CFD configMaster.cfg`. ## Discrete-Adjoint run; Rename\copy\symlink `restart_*.dat` -> `solution_*.dat`; Run `mpirun -n <#cores> SU2_CFD_AD DA_configMaster.cfg` and afterwards `SU2_DOT_AD DA_configMaster.cfg`. ## Finite-Differences run; The `OUTER_ITER` is set low in order to be suitable for the regression test. Set that back the number given in the config.; For the full gradient validation uncomment all design variables of the `DEFINITION_DV` config option.; Run `finite_differences.py -f FD_configMaster.cfg -z 2 -n <#cores>`. ## Comparing results; Just plot the `of_grad.csv` and `FINDIFF/of_grad_findiff.csv` with your tool of choice. Paraview's `Line Chart View` is one option.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md:11,validat,validation,11,TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,3,['validat'],['validation']
Security,# Passive species transport validation case. The gmsh .geo file that the mesh created with is available in the respective folder of the su2code/Testcase repository.; ,MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/passive_transport_validation/README.md:28,validat,validation,28,TestCases/species_transport/passive_transport_validation/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/passive_transport_validation/README.md,1,['validat'],['validation']
Security,"# Streamwise Periodicity testcases. This folder contains the additional Testcases for streamwise periodic flow.; A Tutorial can be found on the SU2 website.; For all Testcases a gmsh .geo file is provided which allows to recreate/modify the mesh. ## `pipe_slice_3d`. Hagen Poiseuille flow through a 1-primal-cell thick pipe slice in 3D. Analytical solution of the velocity magnitude for steady laminar pipe flow in a round pipe `v_mag (r) = -1/(4*mu) * (Delta p / Delta x) * (R**2 - r**2)` therefore a pressure drop Delta p is prescribed. `Re = rho * v * L / mu = 1.0 * 0.6 * 5e-3 / 1.8e-5` makes Re=167, with the critical Reynolds number being Re~=2300. This testcase is a regression test. ## `chtPinArray_2d`. Extension of the tutorial case to a CHT problem with 1 additional solid zone.; A gradient validation between discrete and finite differences for this setup is described in the README of that folder. This gradient validation is also part of the regression tests. ## `chtPinArray_3d`. Extension of the `chtPinArray_2d` to the 3rd dimension with again one solid zone.; The mesh provided is coarse to keep the filesize and computation time low, but using the gmsh .geo script much higher mesh resolutions can be created. This primal simulation is part of the regression tests.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/README.md:802,validat,validation,802,TestCases/incomp_navierstokes/streamwise_periodic/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/README.md,2,['validat'],['validation']
Security,"# Unsteady CHT Adjoint Testcase. ## Short Description; This is a 2D cylinder in freestream testcase. The flow is incompressible and laminar at Re=200.; A uniform vortex shedding forms behind the cylinder and each shedding cycle is resolved by 54 timesteps.; The pin is heated on the inner surface. ## Mesh; The mesh is for testing purposes only and contains ~4000 elements for the flow and ~1000 for the heat domain.; A gmsh .geo file is added such that the mesh can be recreated and modified. ## Recreating full primal; The primal for a full cycle can be restarted with the `solution_*_00000.dat` and `solution_*_00001.dat`.; The primal solution is necessary for the Discrete Adjoint sweep and for the gradient of the full; shedding cycle the full primal is necessary. The necessary changes to `chtMaster.cfg` are documented; in the config itself. ## Discrete Adjoint; In the regression testcase of SU2 only 2 reverse steps are taken.; For that, the solution files 52-55 for the adjoint are added.; The objective Function is the average temperature on the inner pin surface, averaged over the full time. ## Gradient validation via Finite Differences using FADO; In order to validate the Discrete Adjoint gradient a Finite Differences python script `gradient_validation.py`; using [FADO](www.github.com/su2code/FADO) is added.; Note that the script can be used with the files as they are. Necessary adaptions are made by FADO itself.; The script deforms the mesh and runs the primal for each of the 18 Design Variables.; Afterwards the baseline mesh is evaluated and then the Discrete Adjoint.; Use `postprocess.py` to print the absolute difference and relative difference in percent to screen.; The relative differences in percent are <0.15% for all Design Variables (2021-05-14).; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md:1117,validat,validation,1117,TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md,2,['validat'],"['validate', 'validation']"
Security,".. SU2.eval.gradients.gradient(); aliased to SU2.eval.grad(). SU2.eval.gradients.adjoint(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; 		adjoint solution; 	evaluates each step in its own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_NEW; exposes all methods of SU2.eval.design. level5 - optimization; SU2.opt.scipy_slsqp(project); sets up and runs a scipy slsqp optimization. FILE IO. level0 - in/out/mod. class SU2.io.config(dict); 	config.__init__(name); 	config.read(); 	config.write(name=self.name); 	config.dump(name='temp.cfg'); 	config.unpack_dvs(dv_new.dv_old); 	config.__diff__(konfig); 	config.__eq__(konfig). 	config.read_history(); 	config.read_aerodynamics(); 	config.rename_restart(). SU2.io.read_history( name ); SU2.io.read_aerodynamics( hist_name, sp",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:4039,expose,exposes,4039,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['expose'],['exposes']
Security,"; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exists; MINOR, RESOURCE, H5E_CANTLOCK, Unable to lock object; MINOR, RESOURCE, H5E_CANTUNLOCK, Unable to unlock object; MINOR, RESOURCE, H5E_CANTGC, Unable to garbage collect; MINOR, RESOURCE, H5E_CANTGETSIZE, Unable to compute size; MINOR, RESOURCE, H5E_OBJOPEN, Object is already open. # File accessibility errors; MINOR, FILEACC, H5E_FILEEXISTS, File already exists; MINOR, FILEACC, H5E_FILEOPEN, File already open; MINOR, FILEACC, H5E_CANTCREATE, Unable to create file; MINOR, FILEACC, H5E_CANTOPENFILE, Unable to open file; MINOR, FILEACC, H5E_CANTCLOSEFILE, Unable to close file; MINOR, FILEACC, H5E_NOTHDF5, Not an HDF5 file; MINOR, FILEACC, H5E_BADFILE, Bad file ID accessed; MINOR, FILEACC, H5E_TRUNCATED, File has been truncated; MINOR, FILEACC, H5E_MOUNT, File mount error; MINOR, FILEACC, H5E_CANTDELETEFILE, Unable to delete file; MINOR, FILEACC, H5E_CANTLOCKFILE, Unable to lock file; MINOR, FILEACC, H5E_CANTUNLOCKFILE, Unable to unlock file. # Generic low-level file I/O errors; MINOR, FILE, H5E_SEEKERROR, Seek failed; MINOR, FILE, H5E_READERROR, Read failed; MINOR, FILE, H5E_WRITEERROR, Write failed; MINOR, FILE, H5E_CLOSEERROR, Close failed; MINOR, FILE, H5E_OVERFLOW, Address overflowed; MINOR, FILE, H5E_FCNTL, File control (fcntl) failed. # Function entry/exit interface errors; MINOR, FUNC, H5E_CANTINIT, Unable to initialize object; MINOR, FUNC, H5E_ALREADYINIT, Object already initialized; MINOR, FUNC, H5E_CANTRELEASE, Unable to release object. # Object atom related errors; MINOR, ATOM, H5E_BADATOM, Unable to find atom information (already closed?); MINOR, ATOM, H5E_BADGROUP, Unable to find ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:4920,access,accessibility,4920,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,2,['access'],"['accessed', 'accessibility']"
Security,"H5E_REFERENCE, References; MAJOR, H5E_VFL, Virtual File Layer; MAJOR, H5E_VOL, Virtual Object Layer; MAJOR, H5E_TST, Ternary Search Trees; MAJOR, H5E_RS, Reference Counted Strings; MAJOR, H5E_ERROR, Error API; MAJOR, H5E_SLIST, Skip Lists; MAJOR, H5E_FSPACE, Free Space Manager; MAJOR, H5E_SOHM, Shared Object Header Messages; MAJOR, H5E_EARRAY, Extensible Array; MAJOR, H5E_FARRAY, Fixed Array; MAJOR, H5E_PLUGIN, Plugin for dynamically loaded library; MAJOR, H5E_PAGEBUF, Page Buffering; MAJOR, H5E_CONTEXT, API Context; MAJOR, H5E_MAP, Map; MAJOR, H5E_NONE_MAJOR, No error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CACHE, Cache related errors; SECTION, LINK, Link related errors; SECTION, BTREE, B-tree related errors; SECTION, OHDR, Object header related errors; SECTION, GROUP, Group related errors; SECTION, TYPECONV, Datatype conversion errors; SECTION, DSPACE, Dataspace errors; SECTION, PLIST, Property list errors; SECTION, MPI, Parallel MPI errors; SECTION, HEAP, Heap errors; SECTION, FSPACE, Free space errors; SECTION, PIPELINE, I/O pipeline errors; SECTION, SYSTEM, System level errors; SECTION, PLUGIN, Plugin errors; SECTION, NONE, No error. # Minor errors. # Argument errors; MINOR, ARGS, H5E_UNINITIALIZED, Information is uinitialized; MINOR, ARGS, H5E_UNSUPPORTED, Feature is unsupported; MINOR, ARGS, H5E_BADTYPE, Inappropriate type; MINOR, ARGS, H5E_BADRANGE, Out of range; MINOR, ARGS, H5E_BADVALUE, Bad value. # Resource errors; MINOR, RESOURCE, H5E_NOSPACE, No space available for allocation; MINOR, RESOURCE, H5E_CANTALLOC, Can't allocate space; MINOR, RESOURCE, H5E_CANTCOPY, Unable to copy object; MINOR, RESOURCE, H5E_CANTFREE, Unable to free object; MINOR, RESOURCE, H5E_ALREADYEXISTS, Object already exi",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:3335,access,accessibility,3335,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['access'],['accessibility']
Security,"Tecplot, Inc. LICENSE AGREEMENT FOR Tecplot's TecIO (""TecIO""). TecIO is a software library provided by Tecplot, Inc. to enable software; developed by others to write data in Tecplot's proprietary binary file; formats, .plt and .szplt, and to read Tecplot binary data in .plt and .szplt; format. TecIO is included with Tecplot 360 EX and may also be downloaded from; http://www.tecplot.com/downloads/tecio-library/. This license applies to versions of the TecIO library distributed with Tecplot; 360 EX 2016 R2 and later and covers both the serial and parallel (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges that this is only a limited nonexclusive license.; Tecplot is and remains the owner of all titles, rights, and interests in TecIO; Software. Title to TecIO and all copies thereof remain with Tecplot. The; Materials are copyrighted and are protected by United States copyright laws and; international treaty provisions. Licensee will not remove any copyright notice; from the Materials. Tecplot does not grant any express or implied right to you; under Tecplot patents, copyrights, trademarks, or trade secret information. 3. Subject to the terms and conditions of this License Agreement, Tecplot; hereby grants Licensee a nonexclusive, royalty-free, world-wide license to; reproduce, analyze, test, perform and/or display publicly, prepare derivative; works, distribute, and otherwise use TecIO alone or in any derivative version,; provided, however, that Tecplot's License Agreement and Tecplot's notice of; copyright, i.e., ""Copyright � 1988-2016 Tecplot, Inc. All rights reserved; worldwide."" are retained in TecIO alone or in any derivative version prepared; by Licensee. 4. In the event Licensee prepares a derivative work that is based on or; incorporates TecI",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt:705,access,accessing,705,externals/tecio/teciompisrc/tecio_license_agreement.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt,2,['access'],['accessing']
Security,"d; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in either source or binary form) with the major; components (compiler, kernel, and so on) of the operating system on; which the executable runs, unless that component itself accompanies; the executable. It may happen that this requirement contradicts the license; restrictions of other proprietary libraries that do not normally; accompany the operating system. Such a contradiction means you cannot; use both them and the Library together in an executable that you; distribute. 7. You may place library",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:16280,access,access,16280,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,2,['access'],['access']
Security,"der, agreement or; otherwise) that contradict the conditions of this License, they do not; excuse you from the conditions of this License. If you cannot; distribute so as to satisfy simultaneously your obligations under this; License and any other pertinent obligations, then as a consequence you; may not distribute the Library at all. For example, if a patent; license would not permit royalty-free redistribution of the Library by; all those who receive copies directly or indirectly through you, then; the only way you could satisfy both it and this License would be to; refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any; particular circumstance, the balance of the section is intended to apply,; and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any; patents or other property right claims or to contest validity of any; such claims; this section has the sole purpose of protecting the; integrity of the free software distribution system which is; implemented by public license practices. Many people have made; generous contributions to the wide range of software distributed; through that system in reliance on consistent application of that; system; it is up to the author/donor to decide if he or she is willing; to distribute software through any other system and a licensee cannot; impose that choice. This section is intended to make thoroughly clear what is believed to; be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in; certain countries either by patents or by copyrighted interfaces, the; original copyright holder who places the Library under this License may add; an explicit geographical distribution limitation excluding those countries,; so that distribution is permitted only in or among countries not thus; excluded. In such case, this License incorpora",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:20738,integrity,integrity,20738,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['integrity'],['integrity']
Security,"eral Public License has appeared, then you can specify; that version instead if you wish.) Do not make any other change in; these notices. Once this change is made in a given copy, it is irreversible for; that copy, so the ordinary GNU General Public License applies to all; subsequent copies and derivative works made from that copy. This option is useful when you wish to copy part of the code of; the Library into a program that is not a library. 4. You may copy and distribute the Library (or a portion or; derivative of it, under Section 2) in object code or executable form; under the terms of Sections 1 and 2 above provided that you accompany; it with the complete corresponding machine-readable source code, which; must be distributed under the terms of Sections 1 and 2 above on a; medium customarily used for software interchange. If distribution of object code is made by offering access to copy; from a designated place, then offering equivalent access to copy the; source code from the same place satisfies the requirement to; distribute the source code, even though third parties are not; compelled to copy the source along with the object code. 5. A program that contains no derivative of any portion of the; Library, but is designed to work with the Library by being compiled or; linked with it, is called a ""work that uses the Library"". Such a; work, in isolation, is not a derivative work of the Library, and; therefore falls outside the scope of this License. However, linking a ""work that uses the Library"" with the Library; creates an executable that is a derivative of the Library (because it; contains portions of the Library), rather than a ""work that uses the; library"". The executable is therefore covered by this License.; Section 6 states terms for distribution of such executables. When a ""work that uses the Library"" uses material from a header file; that is part of the Library, the object code for the work may be a; derivative work of the Library even though the sour",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:12095,access,access,12095,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,2,['access'],['access']
Security,"just used for grouping the information in the; # files created and can have any value. They generally correspond to the; # major errors, but don't have to. The section definition for each minor error; # must come before any minor error that uses it.; #; # Programmer: Quincey Koziol; # Creation Date: 2003/08/12. # Major errors; MAJOR, H5E_ARGS, Invalid arguments to routine; MAJOR, H5E_RESOURCE, Resource unavailable; MAJOR, H5E_INTERNAL, Internal error (too specific to document in detail); MAJOR, H5E_LIB, General library infrastructure; MAJOR, H5E_FILE, File accessibility; MAJOR, H5E_IO, Low-level I/O; MAJOR, H5E_FUNC, Function entry/exit; MAJOR, H5E_ATOM, Object atom; MAJOR, H5E_CACHE, Object cache; MAJOR, H5E_LINK, Links; MAJOR, H5E_BTREE, B-Tree node; MAJOR, H5E_SYM, Symbol table; MAJOR, H5E_HEAP, Heap; MAJOR, H5E_OHDR, Object header; MAJOR, H5E_DATATYPE, Datatype; MAJOR, H5E_DATASPACE, Dataspace; MAJOR, H5E_DATASET, Dataset; MAJOR, H5E_STORAGE, Data storage; MAJOR, H5E_PLIST, Property lists; MAJOR, H5E_ATTR, Attribute; MAJOR, H5E_PLINE, Data filters; MAJOR, H5E_EFL, External file list; MAJOR, H5E_REFERENCE, References; MAJOR, H5E_VFL, Virtual File Layer; MAJOR, H5E_VOL, Virtual Object Layer; MAJOR, H5E_TST, Ternary Search Trees; MAJOR, H5E_RS, Reference Counted Strings; MAJOR, H5E_ERROR, Error API; MAJOR, H5E_SLIST, Skip Lists; MAJOR, H5E_FSPACE, Free Space Manager; MAJOR, H5E_SOHM, Shared Object Header Messages; MAJOR, H5E_EARRAY, Extensible Array; MAJOR, H5E_FARRAY, Fixed Array; MAJOR, H5E_PLUGIN, Plugin for dynamically loaded library; MAJOR, H5E_PAGEBUF, Page Buffering; MAJOR, H5E_CONTEXT, API Context; MAJOR, H5E_MAP, Map; MAJOR, H5E_NONE_MAJOR, No error. # Sections (for grouping minor errors); SECTION, ARGS, Argument errors; SECTION, RESOURCE, Resource errors; SECTION, FILEACC, File accessibility errors; SECTION, FILE, Generic low-level file I/O errors; SECTION, FUNC, Function entry/exit interface errors; SECTION, ATOM, Object atom related errors; SECTION, CAC",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:2078,access,accessibility,2078,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['access'],['accessibility']
Security,"le, permission to use the GNU C Library in; non-free programs enables many more people to use the whole GNU; operating system, as well as its variant, the GNU/Linux operating; system. Although the Lesser General Public License is Less protective of the; users' freedom, it does ensure that the user of a program that is; linked with the Library has the freedom and the wherewithal to run; that program using a modified version of the Library. The precise terms and conditions for copying, distribution and; modification follow. Pay close attention to the difference between a; ""work based on the library"" and a ""work that uses the library"". The; former contains code derived from the library, whereas the latter must; be combined with the library in order to run. GNU LESSER GENERAL PUBLIC LICENSE; TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION. 0. This License Agreement applies to any software library or other; program which contains a notice placed by the copyright holder or; other authorized party saying it may be distributed under the terms of; this Lesser General Public License (also called ""this License"").; Each licensee is addressed as ""you"". A ""library"" means a collection of software functions and/or data; prepared so as to be conveniently linked with application programs; (which use some of those functions and data) to form executables. The ""Library"", below, refers to any such software library or work; which has been distributed under these terms. A ""work based on the; Library"" means either the Library or any derivative work under; copyright law: that is to say, a work containing the Library or a; portion of it, either verbatim or with modifications and/or translated; straightforwardly into another language. (Hereinafter, translation is; included without limitation in the term ""modification"".). ""Source code"" for a work means the preferred form of the work for; making modifications to it. For a library, complete source code means; all the source code fo",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:6197,authoriz,authorized,6197,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['authoriz'],['authorized']
Security,"or the community.; * Showing empathy towards other community members.; * Offering guidance towards those with less expertise. Examples of unacceptable behavior by participants include:. * The use of sexualized language or imagery and unwelcome sexual attention or; advances.; * Trolling, insulting/derogatory comments, and personal or political attacks.; * Public or private harassment.; * Publishing others' private information, such as a physical or electronic; address, without explicit permission.; * Other conduct which could reasonably be considered inappropriate in a; professional setting. ## Our Responsibilities. Project maintainers are responsible for clarifying the standards of acceptable; behavior and are expected to take appropriate and fair corrective action in; response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or; reject comments, commits, code, wiki edits, issues, and other contributions; that are not aligned to this Code of Conduct, or to ban temporarily or; permanently any contributor for other behaviors that they deem inappropriate,; threatening, offensive, or harmful. ## Scope. This Code of Conduct applies both within project spaces and in public spaces; when an individual is representing the project or its community. Examples of; representing a project or community include using an official project e-mail; address, posting via an official social media account, or acting as an appointed; representative at an online or offline event. Representation of a project may be; further defined and clarified by project maintainers. ## Enforcement. Instances of abusive, harassing, or otherwise unacceptable behavior may be; reported by contacting the project team at info@su2foundation.org. All; complaints will be reviewed and investigated and will result in a response that; is deemed necessary and appropriate to the circumstances. The project team is; obligated to maintain confidentiality with r",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md:1941,threat,threatening,1941,CODE_OF_CONDUCT.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md,1,['threat'],['threatening']
Security,"own folder, returning state.FILES to the super folder; 	updates config and state by pointer. SU2.eval.gradients.findiff(); 	runs with redundancy protection (using state):; functions(); decom, deform, direct; finite difference evaluation of functions(); 	finite difference steps performed in the FINDIFF folder, removed when completed; 	updates config and state by pointer. level3 - design management; major assumption - one design, one config, one state; start a new design if a new config is needed. SU2.eval.design(config,state,folder); starts a design class, which manages config and state; exposes func() and grad() and functions useful for optimizers; will run design in folder with self indexing name; attributes:; state; config; methods:; func() function of specified name; grad() gradient of specified name; obj_f() objective function; obj_df() objective function derivatives; con_ceq() equality constraints; con_dceq() equality constraint derivatives; con_cieq() inequality constraints; con_dcieq() inequality constraint gradients. level4 - project managent; SU2.opt.project(config,state,folder); runs multiple design classes, again avoiding redundancy; looks for closest design on restart; right now this is based only on DV_VALUE_NEW; exposes all methods of SU2.eval.design. level5 - optimization; SU2.opt.scipy_slsqp(project); sets up and runs a scipy slsqp optimization. FILE IO. level0 - in/out/mod. class SU2.io.config(dict); 	config.__init__(name); 	config.read(); 	config.write(name=self.name); 	config.dump(name='temp.cfg'); 	config.unpack_dvs(dv_new.dv_old); 	config.__diff__(konfig); 	config.__eq__(konfig). 	config.read_history(); 	config.read_aerodynamics(); 	config.rename_restart(). SU2.io.read_history( name ); SU2.io.read_aerodynamics( hist_name, special_cases ). level1 - files translate,modify,plotting. SU2.io.add_suffix(name,suffix); SU2.io.resurrect_restart(config,state). SU2.io.plot.adjoint_gradient(config,grad_dict); SU2.io.plot.findiff_gradient(config,grad_dict); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt:4691,expose,exposes,4691,SU2_PY/documentation.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/SU2_PY/documentation.txt,1,['expose'],['exposes']
Security,"we as; contributors and maintainers pledge to making participation in our project and; our community a harassment-free experience for everyone, regardless of age, body; size, disability, ethnicity, sex characteristics, gender identity and expression,; level of experience, education, socio-economic status, nationality, personal; appearance, race, religion, or sexual identity and orientation. ## Our Standards. Examples of behavior that contributes to creating a positive environment; include:. * Using welcoming and inclusive language.; * Being respectful of differing viewpoints and experiences.; * Gracefully accepting and giving constructive criticism.; * Focusing on what is best for the community.; * Showing empathy towards other community members.; * Offering guidance towards those with less expertise. Examples of unacceptable behavior by participants include:. * The use of sexualized language or imagery and unwelcome sexual attention or; advances.; * Trolling, insulting/derogatory comments, and personal or political attacks.; * Public or private harassment.; * Publishing others' private information, such as a physical or electronic; address, without explicit permission.; * Other conduct which could reasonably be considered inappropriate in a; professional setting. ## Our Responsibilities. Project maintainers are responsible for clarifying the standards of acceptable; behavior and are expected to take appropriate and fair corrective action in; response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or; reject comments, commits, code, wiki edits, issues, and other contributions; that are not aligned to this Code of Conduct, or to ban temporarily or; permanently any contributor for other behaviors that they deem inappropriate,; threatening, offensive, or harmful. ## Scope. This Code of Conduct applies both within project spaces and in public spaces; when an individual is representing the project or its c",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md:1151,attack,attacks,1151,CODE_OF_CONDUCT.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md,1,['attack'],['attacks']
Security,"y instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or; reject comments, commits, code, wiki edits, issues, and other contributions; that are not aligned to this Code of Conduct, or to ban temporarily or; permanently any contributor for other behaviors that they deem inappropriate,; threatening, offensive, or harmful. ## Scope. This Code of Conduct applies both within project spaces and in public spaces; when an individual is representing the project or its community. Examples of; representing a project or community include using an official project e-mail; address, posting via an official social media account, or acting as an appointed; representative at an online or offline event. Representation of a project may be; further defined and clarified by project maintainers. ## Enforcement. Instances of abusive, harassing, or otherwise unacceptable behavior may be; reported by contacting the project team at info@su2foundation.org. All; complaints will be reviewed and investigated and will result in a response that; is deemed necessary and appropriate to the circumstances. The project team is; obligated to maintain confidentiality with regard to the reporter of an incident.; Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good; faith may face temporary or permanent repercussions as determined by other; members of the project's leadership. Consequences may include:; * Downgrade or removal of repository permissions such as admin and write; permissions.; * Removal from the su2code organization on Github.; * Being blocked from the su2code repository.; * Reporting of the abuse to Github. ## Attribution. This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,; available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html. [homepage]: https://www.contributor-covenant.org; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md:2785,confidential,confidentiality,2785,CODE_OF_CONDUCT.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md,1,['confidential'],['confidentiality']
Security,"you must give the recipients all the rights that we gave; you. You must make sure that they, too, receive or can get the source; code. If you link other code with the library, you must provide; complete object files to the recipients, so that they can relink them; with the library after making changes to the library and recompiling; it. And you must show them these terms so they know their rights. We protect your rights with a two-step method: (1) we copyright the; library, and (2) we offer you this license, which gives you legal; permission to copy, distribute and/or modify the library. To protect each distributor, we want to make it very clear that; there is no warranty for the free library. Also, if the library is; modified by someone else and passed on, the recipients should know; that what they have is not the original version, so that the original; author's reputation will not be affected by problems that might be; introduced by others. Finally, software patents pose a constant threat to the existence of; any free program. We wish to make sure that a company cannot; effectively restrict the users of a free program by obtaining a; restrictive license from a patent holder. Therefore, we insist that; any patent license obtained for a version of the library must be; consistent with the full freedom of use specified in this license. Most GNU software, including some libraries, is covered by the; ordinary GNU General Public License. This license, the GNU Lesser; General Public License, applies to certain designated libraries, and; is quite different from the ordinary General Public License. We use; this license for certain libraries in order to permit linking those; libraries into non-free programs. When a program is linked with a library, whether statically or using; a shared library, the combination of the two is legally speaking a; combined work, a derivative of the original library. The ordinary; General Public License therefore permits such linking only if the;",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:2971,threat,threat,2971,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['threat'],['threat']
Testability," MINOR, ATOM, H5E_CANTDEC, Unable to decrement reference count; MINOR, ATOM, H5E_NOIDS, Out of IDs for group. # Cache related errors; MINOR, CACHE, H5E_CANTFLUSH, Unable to flush data from cache; MINOR, CACHE, H5E_CANTUNSERIALIZE, Unable to mark metadata as unserialized; MINOR, CACHE, H5E_CANTSERIALIZE, Unable to serialize data from cache; MINOR, CACHE, H5E_CANTTAG, Unable to tag metadata in the cache; MINOR, CACHE, H5E_CANTLOAD, Unable to load metadata into cache; MINOR, CACHE, H5E_PROTECT, Protected metadata error; MINOR, CACHE, H5E_NOTCACHED, Metadata not currently cached; MINOR, CACHE, H5E_SYSTEM, Internal error detected; MINOR, CACHE, H5E_CANTINS, Unable to insert metadata into cache; MINOR, CACHE, H5E_CANTPROTECT, Unable to protect metadata; MINOR, CACHE, H5E_CANTUNPROTECT, Unable to unprotect metadata; MINOR, CACHE, H5E_CANTPIN, Unable to pin cache entry; MINOR, CACHE, H5E_CANTUNPIN, Unable to un-pin cache entry; MINOR, CACHE, H5E_CANTMARKDIRTY, Unable to mark a pinned entry as dirty; MINOR, CACHE, H5E_CANTMARKCLEAN, Unable to mark a pinned entry as clean; MINOR, CACHE, H5E_CANTMARKUNSERIALIZED, Unable to mark an entry as unserialized; MINOR, CACHE, H5E_CANTMARKSERIALIZED, Unable to mark an entry as serialized; MINOR, CACHE, H5E_CANTDIRTY, Unable to mark metadata as dirty; MINOR, CACHE, H5E_CANTCLEAN, Unable to mark metadata as clean; MINOR, CACHE, H5E_CANTEXPUNGE, Unable to expunge a metadata cache entry; MINOR, CACHE, H5E_CANTRESIZE, Unable to resize a metadata cache entry; MINOR, CACHE, H5E_CANTDEPEND, Unable to create a flush dependency; MINOR, CACHE, H5E_CANTUNDEPEND, Unable to destroy a flush dependency; MINOR, CACHE, H5E_CANTNOTIFY, Unable to notify object about action; MINOR, CACHE, H5E_LOGGING, Failure in the cache logging framework; MINOR, CACHE, H5E_CANTCORK, Unable to cork an object; MINOR, CACHE, H5E_CANTUNCORK, Unable to uncork an object. # B-tree related errors; MINOR, BTREE, H5E_NOTFOUND, Object not found; MINOR, BTREE, H5E_EXISTS, Object alre",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt:8152,log,logging,8152,externals/cgns/hdf5/H5err.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/cgns/hdf5/H5err.txt,1,['log'],['logging']
Testability,"# Flamelet regression cases. ## laminar_premixed_flame; 1. A laminar premixed flame stabilized on an isothermal burner with a fixed wall temperature using a low resolution look-up table for all thermo-chemical quantities.; 2. A laminar premixed flame including a heat exchanger, AD test.; 3. A laminar premixed flame including a heat exchanger (Conjugate Heat Transfer).; 4. A laminar premixed flame including a heat exchanger (Conjugate Heat Transfer), AD test.; 5. An axisymmetric laminar premixed flame.; 6. A laminar, partially premixed flame including a heat exchanger.",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/flamelet/README.md:282,test,test,282,TestCases/flamelet/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/flamelet/README.md,2,['test'],['test']
Testability,"# Gradient validation from start to finish. This guide steps you through the steps necessary to perform a validation of the discrete adjoint sensitivities using finite differences. All necessary config files are present and this guide steps through the different tasks to do. If you are lucky enough too have some cores to spare, 14 is a suitable substitution for the `<#cores>` placeholder. ## FFD-box creation; This step is optional as the provided mesh already contains FFD box. This is for completeness if a new mesh e.g. with different resolution is created.; In `configMaster.cfg` the mentioned options have to be uncommented and others commented if they appear twice in the config.; Note that (only!) for the FFD-box creation a `MARKER_HEATFLUX= ( fluid_symmetry ) is artificially is set to avoid an error. This has to be done to make the config-Postprocessing aware that this marker exists as it is used in `DV_MARKER`.; Call `SU2_DEF configMaster.cfg` which creates the new mesh with the name given in 'MESH_OUT_FILENAME'. ## Primal run; Run `mpirun -n <#cores> SU2_CFD configMaster.cfg`. ## Discrete-Adjoint run; Rename\copy\symlink `restart_*.dat` -> `solution_*.dat`; Run `mpirun -n <#cores> SU2_CFD_AD DA_configMaster.cfg` and afterwards `SU2_DOT_AD DA_configMaster.cfg`. ## Finite-Differences run; The `OUTER_ITER` is set low in order to be suitable for the regression test. Set that back the number given in the config.; For the full gradient validation uncomment all design variables of the `DEFINITION_DV` config option.; Run `finite_differences.py -f FD_configMaster.cfg -z 2 -n <#cores>`. ## Comparing results; Just plot the `of_grad.csv` and `FINDIFF/of_grad_findiff.csv` with your tool of choice. Paraview's `Line Chart View` is one option.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md:1383,test,test,1383,TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,1,['test'],['test']
Testability,"# Periodic Pins. This a solid heat conduction testcase in which the `HEAT_EQUATION` solver runs standalone (i.e. not as CHT).; The simulation domain is the solid domain of the `incomp_navierstokes/streamwise_periodic/chtPinArray_2d`-Testcase.; Therefore the provided gmsh `.geo` file contains the full CHT mesh but only writes out the solid zone when called. Note that using periodic boundary conditions for the solid zone made the solution take ~10x more iterations to converge , compared to the same setup using adiabatic walls.; This was found for solid only as well as CHT cases. Expected results are perfectly matched Temperatures at the periodic interface. Compare e.g. using Paraview's `Transform`-Filter with domain length 0.0111544m.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/solid_heat_conduction/periodic_pins/README.md:46,test,testcase,46,TestCases/solid_heat_conduction/periodic_pins/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/solid_heat_conduction/periodic_pins/README.md,1,['test'],['testcase']
Testability,"# Primitive Venturi with 2 and 3 species. All .cfg's in this folder make use of the same mesh. The geometry is channel with an orthogonal duct.; The 'Venturi Primitive' is not exactly correct as there is no chokepoint behind the mixing region.; The walls are straight and the diameters are equal.; With just ~3k elements the mesh is excellent for debugging. Note that all simulations in this folder use passive species transport, i.e. no mixture fluid materials. - `species2_venturiPrimitive.cfg` Just 1 additional transport equation is solved, i.e. it is a 2 species flow.; In the regression test values the `SURFACE_SPECIES_VARIANCE` output is tested which is a scale for mixing quality.; Zero indicates a uniform species distribution. - `species3_venturiPrimitive.cfg` Here, 2 additional transport equations are solved.; In the output the `SURFACE_SPECIES_0` is tested. This is simply the surface averaged species on all `MARKER_ANALYZE` and can be weighted with `AREA` or `MASSFLOW` just like the other quantities.; t; - `restart_validation.sh` performs 4 simulations using `species3_venturiPrimitive.cfg` to check whether primal and primal-adjoint restarts work. This script is best used with `HISTORY_OUTPUT= RMS_RES` only as then the output is nicely comparable.; 1. Primal simulation with n+1 timesteps. This is the ground truth of the expected residual value; 2. Primal simulation with n timesteps. We will restart from this simulation.; 3. Primal simulation with 1 timestep, restarted from simulation in 2nd step.; 4. Adjoint simulation with 1 timestep, using the primal restart file from simulation in 2nd step. The printed direct residuals are taken for comparison. - `species3_venturiPrimitive_inletFile.cfg` With the `test_inlet_files.sh` a simple sanity check for inlet files is performed.; SU2 writes an `example_inlet_file.dat` when the specified inlet file is not available, with the values of the specified `MARKER_INLET` content.; Therefore comparing a simulation with this example",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md:593,test,test,593,TestCases/species_transport/venturi_primitive_3species/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md,3,['test'],"['test', 'tested']"
Testability,"# Streamwise Periodicity testcases. This folder contains the additional Testcases for streamwise periodic flow.; A Tutorial can be found on the SU2 website.; For all Testcases a gmsh .geo file is provided which allows to recreate/modify the mesh. ## `pipe_slice_3d`. Hagen Poiseuille flow through a 1-primal-cell thick pipe slice in 3D. Analytical solution of the velocity magnitude for steady laminar pipe flow in a round pipe `v_mag (r) = -1/(4*mu) * (Delta p / Delta x) * (R**2 - r**2)` therefore a pressure drop Delta p is prescribed. `Re = rho * v * L / mu = 1.0 * 0.6 * 5e-3 / 1.8e-5` makes Re=167, with the critical Reynolds number being Re~=2300. This testcase is a regression test. ## `chtPinArray_2d`. Extension of the tutorial case to a CHT problem with 1 additional solid zone.; A gradient validation between discrete and finite differences for this setup is described in the README of that folder. This gradient validation is also part of the regression tests. ## `chtPinArray_3d`. Extension of the `chtPinArray_2d` to the 3rd dimension with again one solid zone.; The mesh provided is coarse to keep the filesize and computation time low, but using the gmsh .geo script much higher mesh resolutions can be created. This primal simulation is part of the regression tests.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/README.md:25,test,testcases,25,TestCases/incomp_navierstokes/streamwise_periodic/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/README.md,5,['test'],"['test', 'testcase', 'testcases', 'tests']"
Testability,"# Test case for Equivalent area calculation . ## Introduction; The purpose of this test case is to confirm equivalent area distribution and its adjoint can be calculated by SU2. Equivalent area is a distribution calculated from pressure along a line parallel to the aircraft axis. It can be used to supersonic aircraft design. See the paper below for an example of use of SU2 for supersonic aircraft design using equivalent area distribution. Palacios, F., Alonso, J. J., Colonno, M., Hicken, J., and Lukaczyk, T., ""Adjoint-based method for supersonic aircraft design using equivalent area distribution,"" AIAA 2012-0269, 2012. DOI: [10.2514/6.2012-269](https://arc.aiaa.org/doi/10.2514/6.2012-269). ## Expected outcome; - Direct solver; - Equivalent area is calculated without errors.; - Discrete adjoint solver; - Adjoint solution is calculated without errors. ## Files for this test case; Below is a list of files for this test case and explanation for each file.; - SU2 repository; - NACA64206.cfg; - Configuration file.; - TestCases repository; - NACA64206_FFD.su2; - Mesh file. NACA64-206 was used as an airfoil. Arbitrary swept angle and taper ratio were used to create 3D geometry. It has a circumferential nearfield boundary at 3 aircraft lengths.; - solution_flow.csv; - Solution file of direct solver after 4000 iterations. This is required for running adjoint solver.; - TargetEA.dat; - Target equivalent area distribution. See the file for format. In this file, equivalent area is increased by 5% from direct solution to use as an example target. ## How to use equivalent area calculation function. ### Config file; See SUPERSONIC SIMULATION section of config_template.cfg. ### Mesh; A mesh has to have a circumferential boundary around the aircraft axis within the calculation domain and has to be labeled as MARKER_NEARFIELD. This boundary has to have a structured grid with the same number of nodes along each azimuthal angle. ### Target equivalent area; TargetEA.dat is required for sh",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md:83,test,test,83,TestCases/optimization_euler/equivalentarea_naca64206/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/optimization_euler/equivalentarea_naca64206/README.md,3,['test'],['test']
Testability,"# Unsteady CHT Adjoint Testcase. ## Short Description; This is a 2D cylinder in freestream testcase. The flow is incompressible and laminar at Re=200.; A uniform vortex shedding forms behind the cylinder and each shedding cycle is resolved by 54 timesteps.; The pin is heated on the inner surface. ## Mesh; The mesh is for testing purposes only and contains ~4000 elements for the flow and ~1000 for the heat domain.; A gmsh .geo file is added such that the mesh can be recreated and modified. ## Recreating full primal; The primal for a full cycle can be restarted with the `solution_*_00000.dat` and `solution_*_00001.dat`.; The primal solution is necessary for the Discrete Adjoint sweep and for the gradient of the full; shedding cycle the full primal is necessary. The necessary changes to `chtMaster.cfg` are documented; in the config itself. ## Discrete Adjoint; In the regression testcase of SU2 only 2 reverse steps are taken.; For that, the solution files 52-55 for the adjoint are added.; The objective Function is the average temperature on the inner pin surface, averaged over the full time. ## Gradient validation via Finite Differences using FADO; In order to validate the Discrete Adjoint gradient a Finite Differences python script `gradient_validation.py`; using [FADO](www.github.com/su2code/FADO) is added.; Note that the script can be used with the files as they are. Necessary adaptions are made by FADO itself.; The script deforms the mesh and runs the primal for each of the 18 Design Variables.; Afterwards the baseline mesh is evaluated and then the Discrete Adjoint.; Use `postprocess.py` to print the absolute difference and relative difference in percent to screen.; The relative differences in percent are <0.15% for all Design Variables (2021-05-14).; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md:91,test,testcase,91,TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/coupled_cht/disc_adj_unsteadyCHT_cylinder/README.md,3,['test'],"['testcase', 'testing']"
Testability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/.github/pull_request_template.md:911,test,test,911,.github/pull_request_template.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/.github/pull_request_template.md,1,['test'],['test']
Testability,"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % SU2 configuration file %; % PaStiX support build instructions. %; % Institution: Imperial College London %; % File Version 8.1.0 ""Harrier"" %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; %; % 1 - Download; % Get PaStiX 5.2.3 from https://gforge.inria.fr/frs/?group_id=186; % Get Scotch 6.0.6 from https://gforge.inria.fr/projects/scotch; % Note: These two versions were tested on a number of platforms, some; % issues were encountered with more recent version of Scotch, and PaStiX; % 6.0.X is not compatible with SU2 as it does not support MPI yet.; %; % 2 - Build Scotch; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""scotch""; % cd scotch/src && cp Make.inc/Makefile.inc.x86-64_pc_linux2.XXXX Makefile.inc; % (choose the XXXX that matches your compiler); % Edit Makefile.inc and delete the cflag -DSCOTCH_PTHREAD (see why in 3-ii); % ""make ptscotch""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % AND your system supports MPI_THREAD_MULTIPLE, you do not need to; % delete the -DSCOTCH_PTHREAD flag (but doing so does no harm).; %; % 3 - Build PaStiX; % Extract the tarball downloaded in 1 into ""externals""; % Rename the directory as ""pastix""; % cd pastix/src && cp config/LINUX-XXXX.in config.in; % (again choose the XXXX that matches your compiler); % Edit config.in; % i - Uncomment the lines for ""VERSIONINT = _int32""; % ii - Uncomment the lines for ""VERSIONSMP = _nosmp"",; % SU2 does not currently support MPI+Threads.; % iii - Set SCOTCH_HOME as SCOTCH_HOME ?= ${PWD}/../../scotch/; % iv - Comment out the lines for ""Hardware Locality"", this may only be; % important for an MPI+Threads build (usually it is not).; % v - Optionally look at the BLAS section (only required by ""make examples""); % ""make all""; %; % Note: If you build SU2 (7.0.1+) with OpenMP support (-Dwith-omp=true),; % skip 3-ii, note however that t",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt:479,test,tested,479,TestCases/pastix_support/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/pastix_support/readme.txt,1,['test'],['tested']
Testability,"Propeller data provided as the test case here is the propeller used in the studies of Sinnige et al. 2018 in their experimental studies. Isolated propeller geometry as .stp file and experimental results (J vs CT, J vs CP) are provided as supplementary materials along with the publication. The current test case corresponds to the four bladed propeller of diameter 0.237m in a freestream velocity (Vinf) of 40m/s, advance ratio of J=0.8, propeller blade angle at 0.75R is 23.9 degrees. The experimental thrust and power (Non-Dimensional) at J ~ 0.8 are as follows:. J=Vinf/nD	CT=Thrust/rho*n2*D4	CP=Power/rho*n3*D5; 0.7963	 0.0953	 0.1025. The dimensional values are Thrust = 16.30 N and Torque = 0.6612 N-m. Reference:; -----------; Sinnige, T., van Arnhem, N., Stokkermans, T. C. A., Eitelberg, G., Veldhuis, L. L. M., ``Wingtip-Mounted; 	 Propellers: Aerodynamic Analysis of Interaction Effects and Comparison with Conventional Layout,''; 	 Journal of Aircraft, 2018.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/rans/actuatordisk_bem/readme.txt:31,test,test,31,TestCases/rans/actuatordisk_bem/readme.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/rans/actuatordisk_bem/readme.txt,2,['test'],['test']
Testability,"cmake_minimum_required(VERSION 2.8); project(GKlib). get_filename_component(abs ""."" ABSOLUTE); set(GKLIB_PATH ${abs}); unset(abs); include(GKlibSystem.cmake). include_directories("".""); add_library(GKlib STATIC ${GKlib_sources}); if(UNIX); target_link_libraries(GKlib m); endif(UNIX). include_directories(""test""); add_subdirectory(""test""). install(TARGETS GKlib; ARCHIVE DESTINATION lib; LIBRARY DESTINATION lib); install(FILES ${GKlib_includes} DESTINATION include); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/CMakeLists.txt:305,test,test,305,externals/metis/GKlib/CMakeLists.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/metis/GKlib/CMakeLists.txt,2,['test'],['test']
Testability,"l (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges that this is only a limited nonexclusive license.; Tecplot is and remains the owner of all titles, rights, and interests in TecIO; Software. Title to TecIO and all copies thereof remain with Tecplot. The; Materials are copyrighted and are protected by United States copyright laws and; international treaty provisions. Licensee will not remove any copyright notice; from the Materials. Tecplot does not grant any express or implied right to you; under Tecplot patents, copyrights, trademarks, or trade secret information. 3. Subject to the terms and conditions of this License Agreement, Tecplot; hereby grants Licensee a nonexclusive, royalty-free, world-wide license to; reproduce, analyze, test, perform and/or display publicly, prepare derivative; works, distribute, and otherwise use TecIO alone or in any derivative version,; provided, however, that Tecplot's License Agreement and Tecplot's notice of; copyright, i.e., ""Copyright © 1988-2016 Tecplot, Inc. All rights reserved; worldwide."" are retained in TecIO alone or in any derivative version prepared; by Licensee. 4. In the event Licensee prepares a derivative work that is based on or; incorporates TecIO or any part thereof, and wants to publish the derivative; work as provided herein, Licensee hereby agrees to provide to all end users of; any such work a brief summary of all changes made to TecIO, and to convey to; Tecplot a copy of the modified TecIO source code within 30 days after; publication of any work containing any such changes. 5. Tecplot is making TecIO available to Licensee on an ""AS IS"" basis. NO OTHER; WARRANTIES. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, TECPLOT, INC.; AND ITS SUPPLIERS DISCLAIM ALL OTHER WARRANTIES AND CONDI",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:28134,test,test,28134,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['test'],['test']
Testability,"l (MPI) versions; of the library. 1. This LICENSE AGREEMENT is between Tecplot, Inc. (""Tecplot""), and the; Individual or Organization (""Licensee"") accessing and otherwise using TecIO; software in source or binary form and its associated documentation. 2. Licensee acknowledges that this is only a limited nonexclusive license.; Tecplot is and remains the owner of all titles, rights, and interests in TecIO; Software. Title to TecIO and all copies thereof remain with Tecplot. The; Materials are copyrighted and are protected by United States copyright laws and; international treaty provisions. Licensee will not remove any copyright notice; from the Materials. Tecplot does not grant any express or implied right to you; under Tecplot patents, copyrights, trademarks, or trade secret information. 3. Subject to the terms and conditions of this License Agreement, Tecplot; hereby grants Licensee a nonexclusive, royalty-free, world-wide license to; reproduce, analyze, test, perform and/or display publicly, prepare derivative; works, distribute, and otherwise use TecIO alone or in any derivative version,; provided, however, that Tecplot's License Agreement and Tecplot's notice of; copyright, i.e., ""Copyright � 1988-2016 Tecplot, Inc. All rights reserved; worldwide."" are retained in TecIO alone or in any derivative version prepared; by Licensee. 4. In the event Licensee prepares a derivative work that is based on or; incorporates TecIO or any part thereof, and wants to publish the derivative; work as provided herein, Licensee hereby agrees to provide to all end users of; any such work a brief summary of all changes made to TecIO, and to convey to; Tecplot a copy of the modified TecIO source code within 30 days after; publication of any work containing any such changes. 5. Tecplot is making TecIO available to Licensee on an ""AS IS"" basis. NO OTHER; WARRANTIES. TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, TECPLOT, INC.; AND ITS SUPPLIERS DISCLAIM ALL OTHER WARRANTIES AND CONDI",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt:1528,test,test,1528,externals/tecio/teciompisrc/tecio_license_agreement.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/externals/tecio/teciompisrc/tecio_license_agreement.txt,2,['test'],['test']
Testability,"tiX base directory'); option('scotch_root', type : 'string', value : 'externals/scotch/', description: 'Scotch base directory'); option('custom-mpi', type : 'boolean', value : false, description: 'enable MPI assuming the compiler and/or env vars give the correct include dirs and linker args.'); option('enable-tests', type : 'boolean', value : false, description: 'compile Unit Tests'); option('enable-mixedprec', type : 'boolean', value : false, description: 'use single precision floating point arithmetic for sparse algebra'); option('extra-deps', type : 'string', value : '', description: 'comma-separated list of extra (custom) dependencies to add for compilation'); option('enable-mpp', type : 'boolean', value : false, description: 'enable Mutation++ support'); option('install-mpp', type : 'boolean', value : false, description: 'install Mutation++ in the directory defined with --prefix'); option('enable-coolprop', type : 'boolean', value : false, description: 'enable CoolProp support'); option('enable-mlpcpp', type : 'boolean', value : false, description: 'enable profiling through gprof'); option('enable-gprof', type : 'boolean', value : false, description: 'enable MLPCpp support'); option('opdi-backend', type : 'combo', choices : ['auto', 'macro', 'ompt'], value : 'auto', description: 'OpDiLib backend choice'); option('codi-tape', type : 'combo', choices : ['JacobianLinear', 'JacobianReuse', 'JacobianMultiUse', 'PrimalLinear', 'PrimalReuse', 'PrimalMultiUse'], value : 'JacobianLinear', description: 'CoDiPack tape choice'); option('opdi-shared-read-opt', type : 'boolean', value : true, description : 'OpDiLib shared reading optimization'); option('librom_root', type : 'string', value : '', description: 'libROM base directory'); option('enable-librom', type : 'boolean', value : false, description: 'enable LLNL libROM support'); option('static-cgns-deps', type : 'boolean', value : false, description: 'prefer static or dynamic (default) libraries for CGNS dependencies'); ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt:1732,test,tests,1732,meson_options.txt,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/meson_options.txt,1,['test'],['tests']
Usability,"# Contributor Covenant Code of Conduct. ## Our Pledge. In the interest of fostering an open and welcoming environment, we as; contributors and maintainers pledge to making participation in our project and; our community a harassment-free experience for everyone, regardless of age, body; size, disability, ethnicity, sex characteristics, gender identity and expression,; level of experience, education, socio-economic status, nationality, personal; appearance, race, religion, or sexual identity and orientation. ## Our Standards. Examples of behavior that contributes to creating a positive environment; include:. * Using welcoming and inclusive language.; * Being respectful of differing viewpoints and experiences.; * Gracefully accepting and giving constructive criticism.; * Focusing on what is best for the community.; * Showing empathy towards other community members.; * Offering guidance towards those with less expertise. Examples of unacceptable behavior by participants include:. * The use of sexualized language or imagery and unwelcome sexual attention or; advances.; * Trolling, insulting/derogatory comments, and personal or political attacks.; * Public or private harassment.; * Publishing others' private information, such as a physical or electronic; address, without explicit permission.; * Other conduct which could reasonably be considered inappropriate in a; professional setting. ## Our Responsibilities. Project maintainers are responsible for clarifying the standards of acceptable; behavior and are expected to take appropriate and fair corrective action in; response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or; reject comments, commits, code, wiki edits, issues, and other contributions; that are not aligned to this Code of Conduct, or to ban temporarily or; permanently any contributor for other behaviors that they deem inappropriate,; threatening, offensive, or harmful. ## Scope. This Code of C",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md:888,guid,guidance,888,CODE_OF_CONDUCT.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/CODE_OF_CONDUCT.md,1,['guid'],['guidance']
Usability,"# Gradient validation from start to finish. This guide steps you through the steps necessary to perform a validation of the discrete adjoint sensitivities using finite differences. All necessary config files are present and this guide steps through the different tasks to do. If you are lucky enough too have some cores to spare, 14 is a suitable substitution for the `<#cores>` placeholder. ## FFD-box creation; This step is optional as the provided mesh already contains FFD box. This is for completeness if a new mesh e.g. with different resolution is created.; In `configMaster.cfg` the mentioned options have to be uncommented and others commented if they appear twice in the config.; Note that (only!) for the FFD-box creation a `MARKER_HEATFLUX= ( fluid_symmetry ) is artificially is set to avoid an error. This has to be done to make the config-Postprocessing aware that this marker exists as it is used in `DV_MARKER`.; Call `SU2_DEF configMaster.cfg` which creates the new mesh with the name given in 'MESH_OUT_FILENAME'. ## Primal run; Run `mpirun -n <#cores> SU2_CFD configMaster.cfg`. ## Discrete-Adjoint run; Rename\copy\symlink `restart_*.dat` -> `solution_*.dat`; Run `mpirun -n <#cores> SU2_CFD_AD DA_configMaster.cfg` and afterwards `SU2_DOT_AD DA_configMaster.cfg`. ## Finite-Differences run; The `OUTER_ITER` is set low in order to be suitable for the regression test. Set that back the number given in the config.; For the full gradient validation uncomment all design variables of the `DEFINITION_DV` config option.; Run `finite_differences.py -f FD_configMaster.cfg -z 2 -n <#cores>`. ## Comparing results; Just plot the `of_grad.csv` and `FINDIFF/of_grad_findiff.csv` with your tool of choice. Paraview's `Line Chart View` is one option.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md:49,guid,guide,49,TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/README.md,2,['guid'],['guide']
Usability,"# Primitive Venturi with 2 and 3 species. All .cfg's in this folder make use of the same mesh. The geometry is channel with an orthogonal duct.; The 'Venturi Primitive' is not exactly correct as there is no chokepoint behind the mixing region.; The walls are straight and the diameters are equal.; With just ~3k elements the mesh is excellent for debugging. Note that all simulations in this folder use passive species transport, i.e. no mixture fluid materials. - `species2_venturiPrimitive.cfg` Just 1 additional transport equation is solved, i.e. it is a 2 species flow.; In the regression test values the `SURFACE_SPECIES_VARIANCE` output is tested which is a scale for mixing quality.; Zero indicates a uniform species distribution. - `species3_venturiPrimitive.cfg` Here, 2 additional transport equations are solved.; In the output the `SURFACE_SPECIES_0` is tested. This is simply the surface averaged species on all `MARKER_ANALYZE` and can be weighted with `AREA` or `MASSFLOW` just like the other quantities.; t; - `restart_validation.sh` performs 4 simulations using `species3_venturiPrimitive.cfg` to check whether primal and primal-adjoint restarts work. This script is best used with `HISTORY_OUTPUT= RMS_RES` only as then the output is nicely comparable.; 1. Primal simulation with n+1 timesteps. This is the ground truth of the expected residual value; 2. Primal simulation with n timesteps. We will restart from this simulation.; 3. Primal simulation with 1 timestep, restarted from simulation in 2nd step.; 4. Adjoint simulation with 1 timestep, using the primal restart file from simulation in 2nd step. The printed direct residuals are taken for comparison. - `species3_venturiPrimitive_inletFile.cfg` With the `test_inlet_files.sh` a simple sanity check for inlet files is performed.; SU2 writes an `example_inlet_file.dat` when the specified inlet file is not available, with the values of the specified `MARKER_INLET` content.; Therefore comparing a simulation with this example",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md:881,simpl,simply,881,TestCases/species_transport/venturi_primitive_3species/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md,1,['simpl'],['simply']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/.github/pull_request_template.md:412,guid,guide,412,.github/pull_request_template.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/.github/pull_request_template.md,1,['guid'],['guide']
Usability,"---; name: Bug report; about: Create a bug report to help us improve SU2; title: ''; labels: bug; assignees: ''. ---. *If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/.github/ISSUE_TEMPLATE/bug_report.md:256,clear,clear,256,.github/ISSUE_TEMPLATE/bug_report.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/.github/ISSUE_TEMPLATE/bug_report.md,1,['clear'],['clear']
Usability,---; name: Feature request; about: Suggest an idea for improving SU2; title: ''; labels: feature_request; assignees: ''. ---. **Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. **Additional context**; *Add any other context or screenshots about the feature request here.*; ,MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/.github/ISSUE_TEMPLATE/feature_request.md:197,clear,clear,197,.github/ISSUE_TEMPLATE/feature_request.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/.github/ISSUE_TEMPLATE/feature_request.md,3,['clear'],['clear']
Usability,"otect your rights, we need to make restrictions that forbid; distributors to deny you these rights or to ask you to surrender these; rights. These restrictions translate to certain responsibilities for; you if you distribute copies of the library or if you modify it. For example, if you distribute copies of the library, whether gratis; or for a fee, you must give the recipients all the rights that we gave; you. You must make sure that they, too, receive or can get the source; code. If you link other code with the library, you must provide; complete object files to the recipients, so that they can relink them; with the library after making changes to the library and recompiling; it. And you must show them these terms so they know their rights. We protect your rights with a two-step method: (1) we copyright the; library, and (2) we offer you this license, which gives you legal; permission to copy, distribute and/or modify the library. To protect each distributor, we want to make it very clear that; there is no warranty for the free library. Also, if the library is; modified by someone else and passed on, the recipients should know; that what they have is not the original version, so that the original; author's reputation will not be affected by problems that might be; introduced by others. Finally, software patents pose a constant threat to the existence of; any free program. We wish to make sure that a company cannot; effectively restrict the users of a free program by obtaining a; restrictive license from a patent holder. Therefore, we insist that; any patent license obtained for a version of the library must be; consistent with the full freedom of use specified in this license. Most GNU software, including some libraries, is covered by the; ordinary GNU General Public License. This license, the GNU Lesser; General Public License, applies to certain designated libraries, and; is quite different from the ordinary General Public License. We use; this license for certa",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:2620,clear,clear,2620,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['clear'],['clear']
Usability,"time.; Such new versions will be similar in spirit to the present version,; but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library; specifies a version number of this License which applies to it and; ""any later version"", you have the option of following the terms and; conditions either of that version or of any later version published by; the Free Software Foundation. If the Library does not specify a; license version number, you may choose any version ever published by; the Free Software Foundation. 14. If you wish to incorporate parts of the Library into other free; programs whose distribution conditions are incompatible with these,; write to the author to ask for permission. For software which is; copyrighted by the Free Software Foundation, write to the Free; Software Foundation; we sometimes make exceptions for this. Our; decision will be guided by the two goals of preserving the free status; of all derivatives of our free software and of promoting the sharing; and reuse of software generally. NO WARRANTY. 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO; WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.; EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR; OTHER PARTIES PROVIDE THE LIBRARY ""AS IS"" WITHOUT WARRANTY OF ANY; KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE; LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME; THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN; WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY; AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU; FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR; CONSEQUENTIAL DAMAGES A",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:22806,guid,guided,22806,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['guid'],['guided']
Usability,"tisfy both it and this License would be to; refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any; particular circumstance, the balance of the section is intended to apply,; and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any; patents or other property right claims or to contest validity of any; such claims; this section has the sole purpose of protecting the; integrity of the free software distribution system which is; implemented by public license practices. Many people have made; generous contributions to the wide range of software distributed; through that system in reliance on consistent application of that; system; it is up to the author/donor to decide if he or she is willing; to distribute software through any other system and a licensee cannot; impose that choice. This section is intended to make thoroughly clear what is believed to; be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in; certain countries either by patents or by copyrighted interfaces, the; original copyright holder who places the Library under this License may add; an explicit geographical distribution limitation excluding those countries,; so that distribution is permitted only in or among countries not thus; excluded. In such case, this License incorporates the limitation as if; written in the body of this License. 13. The Free Software Foundation may publish revised and/or new; versions of the Lesser General Public License from time to time.; Such new versions will be similar in spirit to the present version,; but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library; specifies a version number of this License which applies to it and; ""any later version"", you have the option of following the terms and",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md:21203,clear,clear,21203,LICENSE.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/LICENSE.md,1,['clear'],['clear']
Usability,"ve.cfg` Just 1 additional transport equation is solved, i.e. it is a 2 species flow.; In the regression test values the `SURFACE_SPECIES_VARIANCE` output is tested which is a scale for mixing quality.; Zero indicates a uniform species distribution. - `species3_venturiPrimitive.cfg` Here, 2 additional transport equations are solved.; In the output the `SURFACE_SPECIES_0` is tested. This is simply the surface averaged species on all `MARKER_ANALYZE` and can be weighted with `AREA` or `MASSFLOW` just like the other quantities.; t; - `restart_validation.sh` performs 4 simulations using `species3_venturiPrimitive.cfg` to check whether primal and primal-adjoint restarts work. This script is best used with `HISTORY_OUTPUT= RMS_RES` only as then the output is nicely comparable.; 1. Primal simulation with n+1 timesteps. This is the ground truth of the expected residual value; 2. Primal simulation with n timesteps. We will restart from this simulation.; 3. Primal simulation with 1 timestep, restarted from simulation in 2nd step.; 4. Adjoint simulation with 1 timestep, using the primal restart file from simulation in 2nd step. The printed direct residuals are taken for comparison. - `species3_venturiPrimitive_inletFile.cfg` With the `test_inlet_files.sh` a simple sanity check for inlet files is performed.; SU2 writes an `example_inlet_file.dat` when the specified inlet file is not available, with the values of the specified `MARKER_INLET` content.; Therefore comparing a simulation with this example inlet file and without inlet files should result in exactly the same results.; This is done by this script and additionally compares the history files of those 2 simulations which is supposed to be empty.; At the time of writing there is just one last digit in these history files that differs.; The case alone is unique in that it is using inlet files for 2 separate inlets and is non-dimensional and uses Turbulence.; Altogether the case is quite complex on the inlet file mechanism.; ",MatchSource.DOCS,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md:1755,simpl,simple,1755,TestCases/species_transport/venturi_primitive_3species/README.md,https://su2code.github.io,https://github.com/su2code/SU2/tree/v8.1.0/TestCases/species_transport/venturi_primitive_3species/README.md,1,['simpl'],['simple']
